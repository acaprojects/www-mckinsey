{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/table/typings/index.d.ts.CdkTable.html","webpack:///./node_modules/@angular/cdk/table/typings/index.d.ts.CdkHeaderRow.html","webpack:///./node_modules/@angular/cdk/table/typings/index.d.ts.CdkFooterRow.html","webpack:///./node_modules/@angular/cdk/table/typings/index.d.ts.CdkRow.html","webpack:///./src/app/shell/reports/report/report.template.html","webpack:///./src/app/shell/reports/report/report.component.ts","webpack:///./src/app/shell/reports/reports.template.html","webpack:///./src/app/shell/reports/reports.component.ts","webpack:///./src/app/shell/reports/reports.module.ts"],"names":[],"mappings":"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","file":"shell-reports-reports-module-ngfactory.js","sourcesContent":["\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<section class=\"report\">\n    <header>\n        <div class=\"block\">\n            <div class=\"cal\">\n                <label for=\"start_date\">Start Date:</label>\n                <div class=\"date\" (touchrelease)=\"model.show_calendar_start = true\" tooltip [template]=\"calendar_start\" [(show)]=\"model.show_calendar_start\" position=\"bottom\">{{ model.start_date | formatTime: 'DD MMM YYYY' }}</div>\n            </div>\n            <span>to</span>\n            <div class=\"cal\">\n                <label for=\"end_date\">End Date:</label>\n                <div class=\"date\" (touchrelease)=\"model.show_calendar_end = true\" tooltip [template]=\"calendar_end\" [(show)]=\"model.show_calendar_end\" position=\"bottom\">{{ model.end_date | formatTime: 'DD MMM YYYY' }}</div>\n            </div>\n            <ng-template #calendar_start>\n                <a-date-picker name=\"themed\" [(ngModel)]=\"model.start_date\" (ngModelChange)=\"changeStartDate()\"></a-date-picker>\n            </ng-template>\n            <ng-template #calendar_end>\n                <a-date-picker name=\"themed\" [(ngModel)]=\"model.end_date\" (ngModelChange)=\"changeEndDate()\"></a-date-picker>\n            </ng-template>\n        </div>\n        <div class=\"block\">\n            <custom-dropdown klass=\"options\" [(show)]=\"model.show\" [content]=\"content\" [template]=\"list\">\n                <ng-template #content>\n                    <div class=\"dropdown-header\" (touchrelease)=\"model.show = !model.show\">\n                        <div class=\"text\">Select location{{ model.report.single_zone ? '' : '(s)'}} ({{ model.selected.length }} selected)</div>\n                        <div class=\"icon\">\n                            <i class=\"material-icons\">{{ model.show ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</i>\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template #list>\n                    <div class=\"item-list\">\n                        <ng-container *ngIf=\"model.locations && model.locations.length > 0\">\n                            <cdk-virtual-scroll-viewport\n                                [itemSize]=\"40\"\n                                [style.height]=\"(model.locations.length < 6 ? model.locations.length : 6) * 40 + 'px'\"\n                            >\n                                <ng-container *cdkVirtualFor=\"let item of model.locations; let i = index\">\n                                    <div class=\"item\">\n                                        <a-checkbox klass=\"dark\" [(ngModel)]=\"item.selected\" (ngModelChange)=\"updateLocations(item)\"></a-checkbox>\n                                        <div class=\"text\">\n                                            <div class=\"code\" [title]=\"item.code\">{{ item.code }}</div>\n                                            <div class=\"name\" [title]=\"item.name\">{{ item.name }}</div>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-container>\n                    </div>\n                </ng-template>\n            </custom-dropdown>\n        </div>\n        <div class=\"block\">\n            <btn (touchrelease)=\"getReport()\">Generate</btn>\n            <btn (touchrelease)=\"downloadFile()\">Download</btn>\n        </div>\n    </header>\n    <main *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"has_report; else pre_state\">\n                <table cdk-table [dataSource]=\"report$\">\n                    <ng-container cdkColumnDef=\"date\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Date</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.date | formatTime: 'DD/MM/YYYY HH:mm' }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"subject\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Meeting Subject</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.subject }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"host\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Meeting Host</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.host}}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"room\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Room</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.room }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"catering_code\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Charge Code</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.catering_code}}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"menu_category\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Menu Category</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.menu_category }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"menu_items\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Menu items selected</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.menu_items }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"quantities\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Quantities</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.quantities }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"item_price\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Item Price</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ (row.item_price || 0) / 100 | currency:row.symbol }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"start_date\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Start Date</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.start_date | formatTime: 'DD/MM/YYYY HH:mm'  }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"end_date\">\n                        <th cdk-header-cell *cdkHeaderCellDef>End Date</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.end_date | formatTime: 'DD/MM/YYYY HH:mm' }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"is_all_day\">\n                        <th cdk-header-cell *cdkHeaderCellDef>All day</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.is_all_day }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"is_cancelled\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Cancelled</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.is_cancelled }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"attendees\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Attendees</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">\n                            <div *ngFor=\"let item of row.attendees\">{{ item }}</div>\n                        </td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"status\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Status</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.format_status || row.status }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"recurrence\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Recurrence</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.recurrence }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"notes\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Notes</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">\n                            <div *ngFor=\"let item of row.notes\" [innerHTML]=\"item\"></div>\n                        </td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"catering\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Charge Code</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.catering }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"setup\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Setup</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.setup }}</td>\n                    </ng-container>\n                    <ng-container cdkColumnDef=\"breakdown\">\n                        <th cdk-header-cell *cdkHeaderCellDef>Breakdown</th>\n                        <td cdk-cell *cdkCellDef=\"let row\">{{ row.breakdown }}</td>\n                    </ng-container>\n                    <tr cdk-header-row *cdkHeaderRowDef=\"model.columns\"></tr>\n                    <tr cdk-row *cdkRowDef=\"let row; columns: model.columns\"></tr>\n                </table>\n                <ng-container *ngIf=\"!has_items\">\n                    <ng-container *ngTemplateOutlet=\"empty_state\"></ng-container>\n                </ng-container>\n        </ng-container>\n    </main>\n</section>\n<ng-template #load_state>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <spinner type=\"circle-ring\"></spinner>\n        </div>\n        <div class=\"text\">\n            Loading report data...\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">\n            No events for the selected period\n        </div>\n    </div>\n</ng-template>\n<ng-template #pre_state>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">arrow_upward</i>\n        </div>\n        <div class=\"text\">\n            Press generate above to view report\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AppService } from '../../../services/app.service';\nimport { Utils } from '../../../shared/utility.class';\nimport { BaseComponent } from '../../../shared/globals/base.component';\n\nimport * as dayjs from 'dayjs';\n@Component({\n    selector: 'report',\n    templateUrl: './report.template.html',\n    styleUrls: ['./report.style.scss']\n})\nexport class ReportComponent extends BaseComponent implements OnInit {\n\n    public model: any = {\n        locations: [],\n        selected: []\n    };\n    public report$ = new BehaviorSubject([]);\n    /** Whether a report has been downloaded from the server */\n    public has_report: boolean;\n    /** Whether a report is being loaded */\n    public loading: boolean;\n\n    /** Whether the current report has any data */\n    public get has_items() {\n        const list = this.report$.value || [];\n        return list.length > 0\n    }\n\n    constructor(private _service: AppService, private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.model.start_date = dayjs().startOf('d').valueOf();\n        this.model.end_date = dayjs().endOf('d').valueOf();\n        this.model.report_list = [\n            {\n                id: 'catering',\n                name: 'Aggregated Charge Back Report',\n                columns: [\n                    'date',\n                    'subject',\n                    'host',\n                    'room',\n                    'catering_code',\n                    'menu_category',\n                    'menu_items',\n                    'quantities',\n                    'item_price'\n                ]\n            },\n            {\n                id: 'bookings',\n                name: 'Aggregated Bookings Report',\n                single_zone: true,\n                columns: [\n                    'start_date',\n                    'end_date',\n                    'subject',\n                    'host',\n                    'room',\n                    'attendees',\n                    'status',\n                    'setup',\n                    'breakdown',\n                    'is_all_day',\n                    'is_cancelled',\n                    'recurrence',\n                    'catering',\n                    'notes'\n                ]\n            }\n        ];\n        this.subscription('route', this._route.paramMap.subscribe(params => {\n            if (params.has('id')) {\n                this.model.report = this.model.report_list.find(report => report.id === params.get('id'));\n                this.model.columns = this.model.report.columns;\n                this._service.set('APP.title', this.model.report.name);\n            }\n        }));\n        this.has_report = false;\n        this.model.building = this._service.Buildings.current();\n        this.model.locations = this._service.Buildings.list() || [];\n        if (this.model.building) {\n            this.model.locations.forEach(i => i.selected = i.id === this.model.building.id);\n            this.updateSelected();\n        }\n    }\n\n    public updateLocations(location) {\n        if (this.model.report.single_zone) {\n            this.model.locations.forEach(i => {\n                if (i !== location) { i.selected = false; }\n            });\n        }\n        this.updateSelected();\n    }\n\n    public updateSelected() {\n        this.model.selected = this.model.locations.filter(el => el.selected);\n    }\n\n    public changeStartDate(): void {\n        this.model.show_calendar_start = false;\n        if (this.model.start_date >= this.model.end_date) {\n            this.model.end_date = dayjs(this.model.start_date).endOf('d').valueOf();\n        }\n    }\n\n    public changeEndDate(): void {\n        this.model.show_calendar_end = false;\n        this.model.end_date = dayjs(this.model.end_date).endOf('d').valueOf();\n        if (this.model.start_date > this.model.end_date) {\n            this.model.start_date = dayjs(this.model.end_date).startOf('d').valueOf();\n        }\n    }\n\n    public getReport(): void {\n        if (this.model.selected && this.model.selected.length < 1) {\n            this._service.info('Please select at least one location');\n            return;\n        }\n        this.loading = true;\n        // waiting for back end changes to accomodate report type\n        if (this.model.report.id === 'bookings') {\n            this._service.BookingsReports.query({\n                start_date: dayjs(this.model.start_date).unix(),\n                end_date: dayjs(this.model.end_date).unix(),\n                zone_ids: this.model.selected.map(el => el.id)\n            }).then(res => {\n                res.forEach((i: any) => {\n                    if (i.status) {\n                        const result = i.status.replace( /([A-Z])/g, \" $1\" );\n                        i.format_status = result.charAt(0).toUpperCase() + result.slice(1);\n                    }\n                });\n                this.report$.next(res);\n                this.loading = false;\n                this.has_report = true;\n            }).catch(e => {\n                this.loading = false;\n            });\n        } else {\n            this._service.Reports.query({\n                start_date: dayjs(this.model.start_date).unix(),\n                end_date: dayjs(this.model.end_date).unix(),\n                zone_ids: this.model.selected.map(el => el.id)\n            }).then(res => {\n                this.report$.next(res);\n                this.loading = false;\n                this.has_report = true;\n            }).catch(e => {\n                this.loading = false;\n            });\n        }\n    }\n\n    public downloadFile(): void {\n        const filename = `${this.model.report.name}-${dayjs().format('YYYYMMDD')}.csv`;\n        const data = this.report$.value;\n        const csv = Utils.generateCSV(data.map(i => {\n            const output: any = {};\n            this.model.report.columns.forEach(key => {\n                output[key] = i[key];\n            });\n            if (output['item_price']) {\n                output['item_price'] = (new CurrencyPipe('en-us')).transform(output['item_price'] / 100, output.symbol);\n            }\n            if (output['attendees']) {\n                output['attendees'] = \"\\\"\" + output['attendees'].join('\\n') + \"\\\"\";\n            }\n            if (output['notes'] && output['notes'].length > 1) {\n                output['notes'] = JSON.stringify(output['notes'])\n                    .replace(new RegExp(',', 'g'), '，')\n                    .replace(/<[^>]*>?/gm, '')\n                    .replace(/\\&nbsp\\;/gm, ' ')\n                    .replace(/\\\\r\\\\n/g, '\\\\n')\n                    .replace(/\\\\n\\\\n/g, '\\\\n')\n                    .replace(/\\\\n\\\\n/g, '\\\\n');\n            } else {\n                delete output['notes'];\n            }\n            delete output.symbol;\n            return output;\n        }));\n        Utils.download(filename, csv);\n    }\n\n    /**\n     * Get currency code for the given room\n     * @param email Email of the room\n     */\n    private symbolForRoom(email: string) {\n        const room = this._service.Rooms.item(email);\n        if (room) {\n            const level = room.level || {} as any;\n            const building = this._service.Buildings.get(level.bld_id);\n            if (building) {\n                return building.currency || 'USD';\n            }\n        }\n        return 'USD';\n    }\n}\n","<div class=\"container\">\n    <div class=\"list\">\n        <a [routerLink]=\"['/reports', item.id]\" routerLinkActive=\"active\"  *ngFor=\"let item of model.report_list\">\n            <div class=\"item\">\n                <div class=\"icon\">\n                    <img *ngIf=\"item.image\" [src]=\"item.image\">\n                    <i *ngIf=\"item.icon\" class=\"material-icons\">{{item.icon}}</i>\n                </div>\n                <div class=\"name\">{{item.name}}</div>\n                <div class=\"details\">{{item.details}}</div>\n                <div class=\"next\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </div>\n        </a>\n    </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/globals/base.component';\nimport { AppService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-reports',\n    templateUrl: './reports.template.html',\n    styleUrls: ['./reports.styles.scss']\n})\nexport class AppReportsComponent extends BaseComponent implements OnInit {\n\n    public model: any = {};\n\n    constructor(private service: AppService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.init();\n    }\n\n    public init() {\n        if (!this.service.ready()) {\n            return this.timeout('init', () => this.init());\n        }\n        this.service.set('APP.title', 'Select a category to view workplace information or run a report.')\n        this.model.report_list = [\n            // { id: 'booking', name: 'Booking Report', image: 'assets/img/report/booking.svg', details: 'Generate report on booking clashes and other complications' },\n            // { id: 'visitor', name: 'Visitor Report', image: 'assets/img/report/visitor.svg', details: 'Generate report on visitor attendance' },\n            // { id: 'transition', name: 'Transition Report', image: 'assets/img/report/transition.svg', details: 'Generate report on booking clashes and other complications' },\n            { id: 'bookings', name: 'Bookings', image: 'assets/img/report/booking.svg', details: 'Generate comprehensive report on various aspects of bookings' },\n            { id: 'catering', name: 'Catering', icon: 'room_service', details: 'View confirmed catering report or mark up unconfirmed catering' },\n        ];\n    }\n\n    public goto(item: any) {\n        if (item.id) {\n            this.service.navigate(['reports', item.id], item.query || {});\n        } else if (item.link || item.url) {\n            window.open(item.link || item.url, 'blank_');\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WidgetsModule } from '@acaprojects/ngx-widgets';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { SharedComponentModule } from '../../shared/components/shared.module';\n\nimport { AppReportsComponent } from './reports.component';\nimport { ReportComponent } from './report/report.component';\n\nconst ROUTES: Routes = [\n    { path: '', component: AppReportsComponent },\n    { path: ':id', component: ReportComponent },\n    { path: '**', redirectTo: '' }\n]\n\n@NgModule({\n    declarations: [\n        AppReportsComponent,\n        ReportComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedComponentModule,\n        WidgetsModule,\n        ScrollingModule,\n        RouterModule.forChild(ROUTES)\n    ],\n    exports: [],\n    providers: [],\n})\nexport class ReportsModule {}"],"sourceRoot":""}