{"version":3,"sources":["webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html"],"names":["DayViewApprovalsComponent","_service","events","space_list","subscription","listen","subscribe","level","building","Organisation","Spaces","filter","space","zones","indexOf","id","map","i","name","processMeetings","getMonthlyPending","interval","changes","date","updateMeetings","previousValue","isSame","currentValue","index","item","time","startOf","end","endOf","loading","query","zone_ids","zone_id","available_from","unix","available_to","then","room_list","waiting_on_event","process","pending_list","get","format","length","set","rm","find","concat","bookingsFor","booking","tentative","sort","a","b","now","start","isAfter","_","isBefore","add","valueOf","diff","selector","templateUrl","styleUrls","STATES","DayViewApprovalsEventComponent","_dialog","acting","timeout","open","data","event","emit","ref","title","content","organiser","start_time","length_string","date_string","icon","type","action","componentInstance","reason","Bookings","accept","comment","room_id","notifySuccess","approval_status","notifyError","close","decline","booking_id","email","icaluid","Math","floor","duration","edits","notes","message","catering","order","location_id","opacity","height","animations","DayViewComponent","_router","_route","active_level","active_type","levels","space_types","legend","legend_keys","color","initialised","pipe","paramMap","params","has","levelWithID","buildings","bld","building_id","lvl","updateLevel","localeCompare","navigate","newMeeting","ROUTES","path","component","redirectTo","DayViewModule","forChild","declarations","imports","DayViewSpaceEventComponent","position","maxHeight","maxWidth","overlap","calculatePosition","sessionStorage","setItem","JSON","stringify","toJSON","queryParams","view","total","shown_date","toFixed","min","abs","top","max","fixed","width","left","overflow_top","setup","overflow_bottom","breakdown","declined","booking_type","has_visitors","time_period","expected","expected_attendees","DayViewSpaceComponent","inView","dragging","overlap_details","position_list","settings","setting","state","overflow_only","scroll","checkInView","last_update","calculateOverlaps","forEach","bkn","bkn_start","bkn_end","count","collisions","cmp","cmp_start","cmp_end","push","findIndex","nativeElement","el","in_view","offsetLeft","window","innerWidth","box","getBoundingClientRect","delta","y","pointerPosition","scroll_top","top_minutes","round","element","previousContainer","list","new_start","old_date","minute","handleDropError","override_state","room","success","storePendingChange","container","replace","room_count","reduce","v","Set","size","checkCollisions","moveBooking","err","spaces","ignore","Promise","resolve","reject","available","room_ids","join","hide_bookings","confirm_msg","new_booking","save","bookings","drop","UPDATE_INTERVAL","DayViewTimelineComponent","_renderer","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","scroll_area","init","updateTime","is_initialised","ngOnChanges","is_today","updateBookings","initSpaces","room_type","scrollIntoView","queryParamMap","view_id","details","localStorage","getItem","parse","removeItem","updateScroll","target","scrollTop","scrollLeft","blocks","hour","active_hour","visible_rooms","space_type","_bookings","querySelector","scroll_box","scrollTo","behavior","x","scrollHeight","scrollWidth","clearInterval","is_dragging","clientX","clientY","bottom","right","scrollView","cancelScroll","unsub","holding_bay","bookable","Object","keys","key","clearSelected"],"mappings":"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","file":"shell-day-view-day-view-module-es5.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss']\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Zone to filter spaces on */\n    public get zone_id(): string {\n        const level = this._service.get('APP.level');\n        return typeof level === 'string' ? level : this._service.Organisation.building.id;\n    }\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('building', this._service.listen('APP.level').subscribe((level => {\n            const building = this._service.Organisation.building;\n            this.space_list = this._service.Spaces.filter((space) => space.zones.indexOf(level === -1 ? building.id : level) >= 0).map(i => i.name);\n            this.processMeetings();\n            this.getMonthlyPending();\n        })));\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')){\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        this._service.Spaces.query({\n            zone_ids: this.zone_id,\n            available_from: time.unix(),\n            available_to: end.unix()\n        }).then((room_list) => {\n            this.space_list = room_list.map(i => i.id);\n            this.processMeetings();\n            this.loading = false;\n        });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) { return; }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const rm = this._service.Spaces.find(id);\n            /* istanbul ignore else */\n            if (rm) {\n                events = events.concat(rm.bookingsFor(date).filter(booking => booking.tentative));\n            }\n        }\n        return events.sort((a, b) => a.date - b.date);\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        this._service.Spaces.query({\n            zone_ids: this.zone_id,\n            available_from: start.unix(),\n            available_to: end.unix()\n        }).then((_) => {\n            const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n            for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                const events = this.process(date.valueOf());\n                pending_list[date.format('YYYY-MM-DD')] = events.length;\n            }\n            this._service.set('CONCIERGE.pending_bookings', pending_list);\n        })\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.notes.find((i) => i.type === 'description').message;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.id === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                this._service.Bookings.accept(this.event.id, {\n                    comment: '',\n                    room_id: this.event.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting approved.');\n                        this.event.approval_status[this.event.space.id] = 'accepted';\n                        STATES[this.event.id] = 'accepted';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error approving meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._service.Bookings.decline(booking.id, {\n                    booking_id: booking.id,\n                    organiser: booking.organiser.email,\n                    icaluid: booking.icaluid,\n                    start: Math.floor(booking.date / 1000),\n                    end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                    room_id: booking.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting declined.');\n                        this.event.approval_status[booking.space.id] = 'declined';\n                        STATES[this.event.id] = 'declined';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error declining meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n}\n","<div [class]=\"'approval-event' + (type ? ' ' + type : '')\" *ngIf=\"event\" [attr.event-id]=\"event.id\">\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (tapped)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (tapped)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"description\">\n                <label for=\"notes\">Notes:</label>\n                <div class=\"value\" name=\"notes\" [innerHTML]=\"description || '' | safe\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (tapped)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (tapped)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7' },\n        { name: 'Client', id: 'client', color: '#1F40E6' },\n        { name: 'External', id: 'external', color: '#8C5AC8' },\n        { name: 'Setup', id: 'setup', color: '#d32f2f' },\n        { name: 'Training', id: 'training', color: '#F0E700' },\n        { name: 'Interview', id: 'interview', color: '#348D02' }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._service.Organisation.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._service.Organisation.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._service.Organisation.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(() => {\n                    const building = this._service.Organisation.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._service.Organisation.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"legend\" multiple placeholder=\"No items shown\">\n                      <mat-select-trigger>Legend</mat-select-trigger>\n                      <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                          <div class=\"key\">\n                              <div class=\"text\">{{key?.name}}</div>\n                              <div class=\"colour\">\n                                  <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                              </div>\n                          </div>\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n\n                <mat-slide-toggle\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n    <button mat-button class=\"new-item\" name=\"new\" (tapped)=\"newMeeting()\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">New Meeting</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: any;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.id);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top = (this.event.setup ? this.event.setup / duration : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown ? this.event.breakdown / duration : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (tapped)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: event.approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div\n                    class=\"value\"\n                    [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\"\n                >\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (tapped)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return event.declined\n                    ? (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend.declined !== false\n                    : (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend[event.type] !== false;\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service.listen('APP.breakdown').subscribe((state) => {\n                    this.overflow_only = state;\n                })\n            );\n            this.subscription(\n                'legend',\n                this._service.listen('CONCIERGE.legend').subscribe((state) => {\n                    this.legend = state || {};\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past')\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        booking.storePendingChange('date', date.valueOf());\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._service.Spaces.find(event.container.id.replace('space-col-', ''));\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room')\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        booking.storePendingChange('space_ids', room_list.map(space => space.id));\n        this.checkCollisions(room_list, date.valueOf(), booking.duration, booking.icaluid).then(\n            () => {\n                this.moveBooking(message, booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(spaces: Space[], date: number, duration: number, ignore?: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._service.Spaces.available({\n                room_ids: spaces.map((i) => i.id).join(','),\n                date,\n                duration,\n                ignore,\n                hide_bookings: true,\n            }).then(\n                (list) => {\n                    list.length === spaces.length ? resolve() : reject();\n                },\n                () => reject()\n            );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => resolve(bkn),\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach(item => map[item] = true);\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._service.Organisation.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._service.Spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.init();\n            // Update time\n            this.updateTime();\n            this.interval('time', () => this.updateTime(), 15 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (!this._service.Spaces.is_initialised) {\n            this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n                this.ngOnChanges(changes);\n            });\n            return;\n        }\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level) {\n            const zone_id = !this.level\n                ? this._service.Organisation.building.id\n                : this.level;\n            this.spaces = this._service.Spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.room_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._service.title = 'Day View';\n            this.subscription(\n                'viewing',\n                this._service.listen('CONCIERGE.day_view.viewing').subscribe((event) =>\n                    this.scrollIntoView(event)\n                )\n            );\n            // Subscribe to route query changes\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        this.view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(\n                                JSON.parse(details)\n                            );\n                            this.view(booking);\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n            // Update bookings for visible rooms\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.interval(\n                'scroll',\n                () => {\n                    /* istanbul ignore else */\n                    if (this.scroll_area && this.scroll_area.nativeElement) {\n                        this.updateScroll({ target: this.scroll_area.nativeElement });\n                    }\n                },\n                1000\n            );\n            /* istanbul ignore else */\n            if (this.scroll_area.nativeElement) {\n                this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n            }\n        });\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._service.Organisation.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._service.Spaces.query({\n                room_ids,\n                zone_ids: zone_ids.join(','),\n                available_from: time.unix(),\n                available_to: end.unix(),\n            }).then(\n                (room_list) => {\n                    room_list.forEach((rm) => {\n                        /* istanbul ignore else */\n                        if (this.view_id) {\n                            const booking = rm.bookings.find((i) => i.id === this.view_id);\n                            /* istanbul ignore else */\n                            if (booking) {\n                                this.view(booking);\n                            }\n                        }\n                        const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                        /* istanbul ignore else */\n                        if (space) {\n                            (space as any)._bookings = (rm as any)._bookings;\n                        }\n                    });\n\n                    delete this.loading_space;\n                    this.last_update = dayjs().valueOf();\n                    this.loading_space = {};\n                    this.loading = false;\n                },\n                () => (this.loading = false)\n            );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.long_name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (touchrelease)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (touchrelease)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n"]}