{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/overlays/booking-confirm/booking-confirm.component.ts","./src/app/overlays/booking-confirm/booking-confirm.component.html","./src/app/overlays/booking-modal/booking-modal.component.ts","./src/app/overlays/booking-modal/booking-modal.component.html","./src/app/overlays/booking-modal/catering/catering.component.ts","./src/app/overlays/booking-modal/catering/catering.component.html","./src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","./src/app/overlays/booking-modal/catering/order-details/category/category.component.html","./src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","./src/app/overlays/booking-modal/catering/order-details/item/item.component.html","./src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","./src/app/overlays/booking-modal/catering/order-details/order-details.component.html","./src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","./src/app/overlays/booking-modal/catering/order-list/item/item.component.html","./src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","./src/app/overlays/booking-modal/catering/order-list/order-list.component.html","./src/app/overlays/booking-modal/find-space/filters/filters.component.ts","./src/app/overlays/booking-modal/find-space/filters/filters.component.html","./src/app/overlays/booking-modal/find-space/find-space.component.ts","./src/app/overlays/booking-modal/find-space/find-space.component.html","./src/app/overlays/booking-modal/find-space/item/item.component.ts","./src/app/overlays/booking-modal/find-space/item/item.component.html","./src/app/overlays/booking-modal/form/form.component.ts","./src/app/overlays/booking-modal/form/form.component.html","./src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","./src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","./src/app/overlays/catering-details-modal/catering-details-modal.component.ts","./src/app/overlays/catering-details-modal/catering-details-modal.component.html","./src/app/overlays/confirm-modal/confirm-modal.component.ts","./src/app/overlays/confirm-modal/confirm-modal.component.html","./src/app/overlays/meeting-details-modal/catering/catering.component.ts","./src/app/overlays/meeting-details-modal/catering/catering.component.html","./src/app/overlays/meeting-details-modal/details/details.component.ts","./src/app/overlays/meeting-details-modal/details/details.component.html","./src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","./src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","./src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","./src/app/overlays/meeting-details-modal/private-details/private-details.component.html","./src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","./src/app/overlays/meeting-details-modal/requirements/requirements.component.html","./src/app/overlays/new-user-modal/new-user-modal.component.ts","./src/app/overlays/new-user-modal/new-user-modal.component.html","./src/app/overlays/overlays.module.ts","./src/app/overlays/package-options-modal/package-options-modal.component.ts","./src/app/overlays/package-options-modal/package-options-modal.component.html","./src/app/overlays/private-details-modal/private-details-modal.component.ts","./src/app/overlays/private-details-modal/private-details-modal.component.html","./src/app/overlays/recurrence-modal/recurrence-modal.component.ts","./src/app/overlays/recurrence-modal/recurrence-modal.component.html","./src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","./src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","./src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","./src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","./src/app/overlays/space-select-modal/space-select-modal.component.ts","./src/app/overlays/space-select-modal/space-select-modal.component.html","./src/app/services/app.service.ts","./src/app/services/data/base-api.class.ts","./src/app/services/data/base.service.ts","./src/app/services/data/bookings/booking.class.ts","./src/app/services/data/bookings/booking.utilities.ts","./src/app/services/data/bookings/bookings.service.ts","./src/app/services/data/catering/catering-categories.service.ts","./src/app/services/data/catering/catering-category.class.ts","./src/app/services/data/catering/catering-item.class.ts","./src/app/services/data/catering/catering-items.service.ts","./src/app/services/data/catering/catering-menu.service.ts","./src/app/services/data/catering/catering-order.class.ts","./src/app/services/data/location/location.class.ts","./src/app/services/data/location/location.utilities.ts","./src/app/services/data/organisation/building.class.ts","./src/app/services/data/organisation/level.class.ts","./src/app/services/data/organisation/organisation.class.ts","./src/app/services/data/organisation/organisation.service.ts","./src/app/services/data/reports/report.class.ts","./src/app/services/data/reports/reports.service.ts","./src/app/services/data/service-manager.class.ts","./src/app/services/data/spaces/space.class.ts","./src/app/services/data/spaces/space.utilities.ts","./src/app/services/data/spaces/spaces.service.ts","./src/app/services/data/users/user.class.ts","./src/app/services/data/users/user.utilities.ts","./src/app/services/data/users/users.service.ts","./src/app/services/hotkeys.service.ts","./src/app/services/settings.service.ts","./src/app/shared/base.class.ts","./src/app/shared/base.directive.ts","./src/app/shared/components/action-icon/action-icon.component.ts","./src/app/shared/components/action-icon/action-icon.component.html","./src/app/shared/components/custom-fields/action-field/action-field.component.ts","./src/app/shared/components/custom-fields/action-field/action-field.component.html","./src/app/shared/components/custom-fields/counter/counter.component.ts","./src/app/shared/components/custom-fields/counter/counter.component.html","./src/app/shared/components/custom-fields/date-field/date-field.component.ts","./src/app/shared/components/custom-fields/date-field/date-field.component.html","./src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","./src/app/shared/components/custom-fields/duration-field/duration-field.component.html","./src/app/shared/components/custom-fields/time-field/time-field.component.ts","./src/app/shared/components/custom-fields/time-field/time-field.component.html","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","./src/app/shared/components/feedback/feedback.component.ts","./src/app/shared/components/feedback/feedback.component.html","./src/app/shared/components/forms/booking-form/booking-form.component.ts","./src/app/shared/components/forms/booking-form/booking-form.component.html","./src/app/shared/components/forms/user-form/user-form.component.ts","./src/app/shared/components/forms/user-form/user-form.component.html","./src/app/shared/components/icon/icon.component.ts","./src/app/shared/components/icon/icon.component.html","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/popout-menu/popout-menu.component.ts","./src/app/shared/components/popout-menu/popout-menu.component.html","./src/app/shared/components/searchbar/searchbar.component.ts","./src/app/shared/components/searchbar/searchbar.component.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/shared/components/topbar-header/topbar-header.component.ts","./src/app/shared/components/topbar-header/topbar-header.component.html","./src/app/shared/components/user-avatar/user-avatar.component.ts","./src/app/shared/components/user-avatar/user-avatar.component.html","./src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","./src/app/shared/globals/angular-animations.ts","./src/app/shared/globals/application.ts","./src/app/shared/mocks/api/bookings.mock.ts","./src/app/shared/mocks/api/buildings.mock.ts","./src/app/shared/mocks/api/catering-menu.mock.ts","./src/app/shared/mocks/api/common.mock.ts","./src/app/shared/mocks/api/locations.mock.ts","./src/app/shared/mocks/api/organisation.mock.ts","./src/app/shared/mocks/api/spaces.mock.ts","./src/app/shared/mocks/api/users.mock.ts","./src/app/shared/mocks/index.ts","./src/app/shared/mocks/systems.mock.ts","./src/app/shared/shared.module.ts","./src/app/shared/utilities/api.utilities.ts","./src/app/shared/utilities/formatting.utilities.ts","./src/app/shared/utilities/general.utilities.ts","./src/app/shared/utilities/validation.utilities.ts","./src/app/shell/catering/catering.component.ts","./src/app/shell/catering/catering.component.html","./src/app/shell/catering/catering.module.ts","./src/app/shell/catering/menu/item-list/item-list.component.ts","./src/app/shell/catering/menu/item-list/item-list.component.html","./src/app/shell/catering/menu/item/item.component.ts","./src/app/shell/catering/menu/item/item.component.html","./src/app/shell/catering/menu/menu.component.ts","./src/app/shell/catering/menu/menu.component.html","./src/app/shell/catering/orders/item/item.component.ts","./src/app/shell/catering/orders/item/item.component.html","./src/app/shell/catering/orders/orders.component.ts","./src/app/shell/catering/orders/orders.component.html","./src/app/shell/catering/overlays/category-modal/category-modal.component.ts","./src/app/shell/catering/overlays/category-modal/category-modal.component.html","./src/app/shell/catering/overlays/group-modal/group-modal.component.ts","./src/app/shell/catering/overlays/group-modal/group-modal.component.html","./src/app/shell/catering/overlays/item-modal/item-modal.component.ts","./src/app/shell/catering/overlays/item-modal/item-modal.component.html","./src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","./src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","./src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","./src/app/shell/catering/overlays/order-details-modal/items/items.component.html","./src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","./src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","./src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","./src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","./src/app/shell/day-view/approvals-view/approvals-view.component.ts","./src/app/shell/day-view/approvals-view/approvals-view.component.html","./src/app/shell/day-view/approvals-view/event/event.component.ts","./src/app/shell/day-view/approvals-view/event/event.component.html","./src/app/shell/day-view/day-view.component.ts","./src/app/shell/day-view/day-view.component.html","./src/app/shell/day-view/day-view.module.ts","./src/app/shell/day-view/space/event/event.component.ts","./src/app/shell/day-view/space/event/event.component.html","./src/app/shell/day-view/space/space.component.ts","./src/app/shell/day-view/space/space.component.html","./src/app/shell/day-view/timeline/timeline.component.ts","./src/app/shell/day-view/timeline/timeline.component.html","./src/app/shell/reports/report-display/report-display.component.ts","./src/app/shell/reports/report-display/report-display.component.html","./src/app/shell/reports/report-table/report-table.component.ts","./src/app/shell/reports/report-table/report-table.component.html","./src/app/shell/reports/reports.component.ts","./src/app/shell/reports/reports.component.html","./src/app/shell/reports/reports.module.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","./src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","./src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","./src/app/shell/visitors/timeline/item/item.component.ts","./src/app/shell/visitors/timeline/item/item.component.html","./src/app/shell/visitors/timeline/timeline.component.ts","./src/app/shell/visitors/timeline/timeline.component.html","./src/app/shell/visitors/timeline/visitor/visitor.component.ts","./src/app/shell/visitors/timeline/visitor/visitor.component.html","./src/app/shell/visitors/visitors.component.ts","./src/app/shell/visitors/visitors.component.html","./src/app/shell/visitors/visitors.module.ts","./src/app/shell/week-view/day-display/day-display.component.ts","./src/app/shell/week-view/day-display/day-display.component.html","./src/app/shell/week-view/day-display/item/item.component.ts","./src/app/shell/week-view/day-display/item/item.component.html","./src/app/shell/week-view/timeline/timeline.component.ts","./src/app/shell/week-view/timeline/timeline.component.html","./src/app/shell/week-view/week-view.component.ts","./src/app/shell/week-view/week-view.component.html","./src/app/shell/week-view/week-view.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking\n    booking: Booking\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false; // Bookings are always approved in concierge\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n             this.booking.organiser || this._users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.id === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find(bld => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id && this.old_booking) {\n            return {};\n        }\n        return Object.keys(this.booking).reduce((map, key) => {\n            if (!(this.booking[key] instanceof Function) && key[0] !== '_') {\n                map[key] = this.booking[key] !== this.old_booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ type: 'success' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    err => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            err => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (tapped)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (tapped)=\"newBooking()\">New Booking</button>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            case 'form':\n                if (space_list?.length && this.booking?.id) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking.toJSON();\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (!this.form.dirty) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (tapped)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space = this.space_list.find(space => space.id == form_controls.location_id.value) || { level: {} } as any;\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.form.controls.location_id.value;\n        this.form.controls.items.setValue([]);\n        this.loading = true;\n        this._menu.query({ room_id: space }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space = this.form ? this.form.controls.location_id.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.id\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            this.order.changes.delivery_time || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            *ngIf=\"!only_catering\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">Select locations(s)</div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n            <div\n                class=\"list\"\n                [@show]=\"show_locations ? 'show' : 'hide'\"\n            >\n            <div class=\"item\" *ngFor=\"let building of building_list\">\n                <mat-checkbox\n                    (change)=\"\n                        $event.checked\n                            ? addLocationFilter(building)\n                            : removeLocationFilter(building)\n                    \"\n                >\n                    <div class=\"building-name\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                        <div class=\"address\">{{ building.address }}</div>\n                    </div>\n                </mat-checkbox>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (tapped)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.booking.space.id);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.booking.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.booking.space.id &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: order.symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" *ngIf=\"!expired\" (tapped)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"true\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"true\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (tapped)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface MeetingDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        this._bookings.accept(this.booking.id, {\n            comment: '',\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting approved.');\n            this.booking.approval_status[this.booking.space.id] = 'accepted';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'approved' });\n        }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings.decline(this.booking.id, {\n            booking_id: this.booking.id,\n            organiser: this.booking.organiser.email,\n            icaluid: this.booking.icaluid,\n            start: Math.floor(this.booking.date / 1000),\n            end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting declined.');\n            this.booking.approval_status[this.booking.space.id] = 'declined';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'declined' });\n        }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    content: `Are you sure you want to delete the meeting in ${this.booking.space.name} at ${this.booking.date_string}, ${this.booking.start_time}?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.deleteMeeting().catch(this._on_error('Error deleting booking'));\n                }\n                ref.close();\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm'));\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking,\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = await booking.save().catch((err) => {\n            this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n        }) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements [booking]=\"booking\" (event)=\"updateRequirements($event)\"></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (tapped)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (tapped)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (tapped)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    public get setup(): string {\n        return this.booking && this.booking.setup ? humaniseDuration(this.booking.setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        return this.booking && this.booking.breakdown ? humaniseDuration(this.booking.breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return '';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking\n            }\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (tapped)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.booking.space.id === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.space?.name || booking.space_list[0] }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{ (booking.expected_attendees || {})[booking.space?.id || booking.space_list[0]] || '0' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ (booking.equipment_codes || {})[booking.space?.id || booking.space_list[0]] || '&lt;No Charge Code&gt;' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button *ngIf=\"!expired\" (tapped)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderDetailsComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group name=\"sub-item-list\" [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    name=\"selected\"\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    name=\"selected\"\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.id\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup || 0),\n            breakdown: new FormControl(this.booking.breakdown || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this.booking.space.id)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this.booking.space.id,\n                } as BookingNote,\n            ];\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                ...this.form.value,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            new_booking.save().then(\n                (booking) => {\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.id].controls.notes.value,\n                space: space.id,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.id] = building?.required?.equipment_code || false;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    this.needs_charge_code[space.id] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ServiceManager } from './data/service-manager.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n        ServiceManager.setService(ApplicationService, this);\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('APP.breakdown', false);\n        this.set('CONCIERGE.legend', {});\n        this.set('CONCIERGE.pending_bookings', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Analytics service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info',\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000,\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done',\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error',\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning',\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this._initialised.next(true));\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading',\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock,\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete',\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            return Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(\n            (i) => i.id === id || (i.email || '').toLowerCase() === (id || '').toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.body =\n            // (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description || '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        if (!this.declined) {\n            for (const space of this.space_list) {\n                if (\n                    this.approval_status[space.email] &&\n                    this.approval_status[space.email].indexOf('tentative') >= 0\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((space) => {\n            return !this.id || this.time_changed\n                ? !space ||\n                      (space instanceof Space &&\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          }))\n                : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n        });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes\n                .filter((note) => note.type !== 'description')\n                .push({\n                    type: 'description',\n                    message: data.body,\n                    author: this.creator.email,\n                    date: dayjs().valueOf(),\n                } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find(note => note.type === 'equipment') || (data.catering && data.catering.length)) {\n            data.breakdown = data.breakdown || 15;\n            data.setup = data.setup || 15;\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n    randomInt,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][randomInt(5)],\n        setup: Math.max(0, (randomInt(12) - 6) * 5),\n        breakdown: Math.max(0, (randomInt(12) - 6) * 5),\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.time.disable();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.time.enable();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { csvToJson, downloadFile, jsonToCsv, humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(Report);\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(key => key.toLowerCase().includes('room') && key.toLowerCase().includes('email'));\n            const price_field = fields.find(key => key.toLowerCase().includes('price'));\n            const date_field = fields.find(key => key.toLowerCase().includes('date'));\n            for (let row of data){\n                /* istanbul ignore else */\n                if (room_field && price_field) {\n                    const space_service = ServiceManager.serviceFor(Space);\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(bld => bld.id === ((room || {}).level || {}).building_id);\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = (new CurrencyPipe('en_us')).transform(row[price_field] / 100, bld.currency || 'USD');\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] = typeof row[field] === 'string' ? row[field].replace(/\\,/g, '٫') : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n           data = data.map(i => {\n               const booking = new Booking(i).toJSON();\n               delete booking.id;\n               delete booking.icaluid;\n               delete booking.type;\n               delete booking.auto_approve;\n               delete booking.notify_users;\n               delete booking.organiser_email;\n               delete booking.edits;\n               delete booking.catering;\n               delete booking.checked_in;\n               delete booking.old_date;\n               delete booking.from_room;\n               delete booking.approval_status;\n               booking.body = booking.body.replace(/<[^>]*>?/gm, '');\n               booking.organiser = booking.organiser.name || booking.organiser.email;\n               booking.equipment_codes = Object.keys(booking.equipment_codes).map(key => booking.equipment_codes[key]).join(', ');\n               booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n               booking.attendees = booking.attendees.map(person => person.name || person.email).join(', ');\n               booking.start = dayjs(booking.start * 1000).format('DD MMM YYYY, h:mm A');\n               booking.end = dayjs(booking.end * 1000).format('DD MMM YYYY, h:mm A');\n               booking.notes = booking.notes.map(note  => note.author ? `[${note.author}|${note.type}]${note.message.replace(/<[^>]*>?/gm, '')}` : '').join('\\n');\n               booking.setup = humaniseDuration(booking.setup);\n               booking.breakdown = humaniseDuration(booking.breakdown);\n               booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurrence});\n\n               return booking;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Report, this);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        const day = dayjs(date);\n        return this.bookings.filter((i: any) => dayjs(i.date).isSame(day, 'd'));\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: string = '60';\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = `${value}`;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: `${time}`,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = this.time.split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        /* istanbul ignore else */\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            const time = this.time.split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        const date = dayjs(this.date).startOf('m');\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            /* istanbul ignore else */\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    /* istanbul ignore else */\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        /* istanbul ignore else */\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _service: ApplicationService, private _cdr: ChangeDetectorRef) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const date = +(localStorage.getItem('CONCIERGE.date'));\n            /* istanbul ignore else */\n            if (date && date !== this.date) {\n                this.timeout('init', () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                }, 10)\n            }\n            this.subscription('events', this._service.listen('CONCIERGE.pending_bookings').subscribe((value) => {\n                this.event_map = { ...value } || {};\n                this._cdr.detectChanges();\n            }));\n        });\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (tapped)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(1000)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[randomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organiser,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][randomInt(3)];\n        }\n        return booking_data;\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            for (const zone of item.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories && category.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === category.parent_categories[0]);\n                    if (parent) {\n                       parent.items.push(category);\n                    } else {\n                        throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            console.log('Body:', category);\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findParent(id: string, list: CateringCategory[]): CateringCategory {\n    for (const category of list) {\n        const found = category.items.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (tapped)=\"category = category + 1\">New Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (tapped)=\"package = package + 1\">Add sub-category</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n\n    @Input() public parent: CateringCategory;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription('item-modal', ref.componentInstance.event.subscribe((event) => {\n            console.log('Details:', event);\n            if (event.reason === 'done' && event.metadata) {\n                if (item.id) {\n                    const index = this.parent.items.findIndex(itm => itm.id === item.id);\n                    (this.parent.items as any[]).splice(index, 1, new CateringItem(event.metadata));\n                    (this.parent as any).items = [...this.parent.items];\n                } else {\n                    (this.item.items as any[]).push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringComponent\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n            >\n                Contains {{ item.items.length }} item{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n            >\n                <span class=\"not-mobile\">Selected </span>{{ item.must_select }} opt<span\n                    class=\"not-mobile\"\n                    >ion</span\n                >{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" (tapped)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (tapped)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (tapped)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (tapped)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (tapped)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach(item => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking\n            }\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (tapped)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (tapped)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<CateringOrder[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.available_spaces = this._spaces.filter(\n                        (space) => space.zones.indexOf(this.building.id) >= 0\n                    ).map((i) => i.id);\n                })\n            );\n            this.available_spaces = this._spaces.filter(\n                (space) => space.zones.indexOf(this.building.id) >= 0\n            ).map((i) => i.id);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                let orders: CateringOrder[] = [];\n                space_list.forEach((space) => {\n                    space.bookings.forEach((booking) => {\n                        const catering = booking.catering;\n                        catering.forEach((order) => {\n                            (order as any).booking_date = booking.date;\n                            order.booking = booking;\n                        });\n                        orders = orders.concat(booking.catering);\n                    });\n                });\n                orders = unique(orders, 'id');\n                orders = orders.filter(\n                    (order) => this.available_spaces.indexOf(order.location_id) >= 0\n                );\n                orders.sort(\n                    (a, b) =>\n                        a.booking_date +\n                        a.delivery_time * 60 * 1000 -\n                        (b.booking_date + b.delivery_time * 60 * 1000)\n                );\n                return orders;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.orders = list;\n                this.filtered_orders = this.filter(list, this.search);\n            })\n        );\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id])\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({ ...this.item.toJSON(), ...this.form.value }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    console.log('Item:', item);\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[booking.space?.id] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n\n    /** List of items in the order */\n    public get items(): (CateringCategory)[] {\n        return this.order.items as any || [];\n    }\n}\n","<div class=\"heading\">\n    Order Details\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<button class=\"footer\" mat-button>\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.id,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking, notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await pending_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (tapped)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            const updated_booking: any = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) =>\n                    space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.id);\n        this.processMeetings();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: time.unix(),\n                available_to: end.unix(),\n            })\n            .then((room_list) => {\n                this.space_list = room_list.map((i) => i.id);\n                this.processMeetings();\n                this.loading = false;\n            });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) {\n            return;\n        }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const space = this._spaces.find(id);\n            /* istanbul ignore else */\n            if (space) {\n                events = events.concat(\n                    space.bookingsFor(date).filter((booking) => booking.tentative)\n                );\n            }\n        }\n        return events.sort((a, b) => a.date - b.date);\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((_) => {\n                const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n                for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                    const events = this.process(date.valueOf());\n                    pending_list[date.format('YYYY-MM-DD')] = events.length;\n                }\n                this._service.set('CONCIERGE.pending_bookings', pending_list);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.id === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                this._bookings\n                    .accept(this.event.id, {\n                        comment: '',\n                        room_id: this.event.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space.id] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_id: booking.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.id] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (tapped)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (tapped)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (tapped)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (tapped)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7' },\n        { name: 'Client', id: 'client', color: '#1F40E6' },\n        { name: 'External', id: 'external', color: '#8C5AC8' },\n        { name: 'Setup', id: 'setup', color: '#d32f2f' },\n        { name: 'Training', id: 'training', color: '#F0E700' },\n        { name: 'Interview', id: 'interview', color: '#348D02' }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_events]=\"true\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"level\" [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"legend\" [(ngModel)]=\"legend\" multiple placeholder=\"No items shown\">\n                      <mat-select-trigger>Legend</mat-select-trigger>\n                      <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                          <div class=\"key\">\n                              <div class=\"text\">{{key?.name}}</div>\n                              <div class=\"colour\">\n                                  <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                              </div>\n                          </div>\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: any;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.id);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top = (this.event.setup ? this.event.setup / duration : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown ? this.event.breakdown / duration : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event && !hide\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (tapped)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: event.approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (tapped)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return event.declined\n                    ? (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend.declined\n                    : (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend[event.type];\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service.listen('APP.breakdown').subscribe((state) => {\n                    this.overflow_only = state;\n                })\n            );\n            this.subscription(\n                'legend',\n                this._service.listen('CONCIERGE.legend').subscribe((state) => {\n                    this.legend = state || {};\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking,\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => resolve(bkn),\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach((item) => (map[item] = true));\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._org.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._spaces\n                .query({\n                    room_ids,\n                    zone_ids: zone_ids.join(','),\n                    available_from: time.unix(),\n                    available_to: end.unix(),\n                })\n                .then(\n                    (room_list) => {\n                        room_list.forEach((rm) => {\n                            /* istanbul ignore else */\n                            if (this.view_id) {\n                                const booking = rm.bookings.find((i) => i.id === this.view_id);\n                                /* istanbul ignore else */\n                                if (booking) {\n                                    this.view(booking);\n                                }\n                            }\n                            const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                            /* istanbul ignore else */\n                            if (space) {\n                                (space as any).bookings = (rm as any).bookings;\n                            }\n                        });\n\n                        delete this.loading_space;\n                        this.last_update = dayjs().valueOf();\n                        this.loading_space = {};\n                        this.loading = false;\n                    },\n                    () => (this.loading = false)\n                );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.long_name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (touchrelease)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (touchrelease)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date\"\n                [to]=\"start_date * 10\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <mat-select name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (tapped)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (tapped)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' }\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' }\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true }));\n        this.form.controls.attendees.setValue(list);\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (tapped)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (tapped)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.required, Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const new_booking = new Booking({ ...this.booking, ...this.form.value });\n                new_booking.save().then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (tapped)=\"save()\">Save</button>\n        <button mat-button name=\"delete\" class=\"error\" *ngIf=\"booking.id\" (tapped)=\"delete()\">\n            Delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const checked_in_users = this.event.checked_in;\n        const { checked_in, count } = this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n        return `${checked_in} / ${count}`;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"staff\">S</div>\n            <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (tapped)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (tapped)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** List of visitor bookings for the current date */\n    public visitor_bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.visitor_bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings.filter(bkn => bkn.has_visitors);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.visitor_bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === -1)\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container *ngFor=\"let booking of filtered_bookings; let i = index\">\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === i)\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\">\n        <div class=\"staff\" *ngIf=\"!person.external\">S</div>\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a mat-icon-button matTooltip=\"Email Visitor\" [href]=\"mail_url | safe:'url'\">\n            <action-icon\n                [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n            ></action-icon>\n        </a>\n        <button mat-icon-button matTooltip=\"Checkin Visitor\">\n            <action-icon *ngIf=\"person.external\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit(): void {}\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" (dateChange)=\"search_str = ''\" [show_add_item]=\"has_visitor_space\" (event)=\"newVisitorMeeting()\">\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss']\n})\nexport class WeekViewDayDisplayComponent implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateBookings();\n        }\n    }\n\n    private updateBookings(): void {\n        let bookings = [];\n        this.spaces.forEach(space => {\n            bookings = bookings.concat(space.bookingsFor(this.date));\n        });\n        bookings.sort((a, b) => a.date - b.date);\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (tapped)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({}),\n            },\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}