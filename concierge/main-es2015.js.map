{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/overlays/booking-confirm/booking-confirm.component.ts","./src/app/overlays/booking-confirm/booking-confirm.component.html","./src/app/overlays/booking-modal/booking-modal.component.ts","./src/app/overlays/booking-modal/booking-modal.component.html","./src/app/overlays/booking-modal/catering/catering.component.ts","./src/app/overlays/booking-modal/catering/catering.component.html","./src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","./src/app/overlays/booking-modal/catering/order-details/category/category.component.html","./src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","./src/app/overlays/booking-modal/catering/order-details/item/item.component.html","./src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","./src/app/overlays/booking-modal/catering/order-details/order-details.component.html","./src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","./src/app/overlays/booking-modal/catering/order-list/item/item.component.html","./src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","./src/app/overlays/booking-modal/catering/order-list/order-list.component.html","./src/app/overlays/booking-modal/find-space/filters/filters.component.ts","./src/app/overlays/booking-modal/find-space/filters/filters.component.html","./src/app/overlays/booking-modal/find-space/find-space.component.ts","./src/app/overlays/booking-modal/find-space/find-space.component.html","./src/app/overlays/booking-modal/find-space/item/item.component.ts","./src/app/overlays/booking-modal/find-space/item/item.component.html","./src/app/overlays/booking-modal/form/form.component.ts","./src/app/overlays/booking-modal/form/form.component.html","./src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","./src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","./src/app/overlays/catering-details-modal/catering-details-modal.component.ts","./src/app/overlays/catering-details-modal/catering-details-modal.component.html","./src/app/overlays/confirm-modal/confirm-modal.component.ts","./src/app/overlays/confirm-modal/confirm-modal.component.html","./src/app/overlays/meeting-details-modal/catering/catering.component.ts","./src/app/overlays/meeting-details-modal/catering/catering.component.html","./src/app/overlays/meeting-details-modal/details/details.component.ts","./src/app/overlays/meeting-details-modal/details/details.component.html","./src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","./src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","./src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","./src/app/overlays/meeting-details-modal/private-details/private-details.component.html","./src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","./src/app/overlays/meeting-details-modal/requirements/requirements.component.html","./src/app/overlays/new-user-modal/new-user-modal.component.ts","./src/app/overlays/new-user-modal/new-user-modal.component.html","./src/app/overlays/overlays.module.ts","./src/app/overlays/package-options-modal/package-options-modal.component.ts","./src/app/overlays/package-options-modal/package-options-modal.component.html","./src/app/overlays/private-details-modal/private-details-modal.component.ts","./src/app/overlays/private-details-modal/private-details-modal.component.html","./src/app/overlays/recurrence-modal/recurrence-modal.component.ts","./src/app/overlays/recurrence-modal/recurrence-modal.component.html","./src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","./src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","./src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","./src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","./src/app/overlays/space-select-modal/space-select-modal.component.ts","./src/app/overlays/space-select-modal/space-select-modal.component.html","./src/app/services/app.service.ts","./src/app/services/data/base-api.class.ts","./src/app/services/data/base.service.ts","./src/app/services/data/bookings/booking.class.ts","./src/app/services/data/bookings/booking.utilities.ts","./src/app/services/data/bookings/bookings.service.ts","./src/app/services/data/catering/catering-categories.service.ts","./src/app/services/data/catering/catering-category.class.ts","./src/app/services/data/catering/catering-item.class.ts","./src/app/services/data/catering/catering-items.service.ts","./src/app/services/data/catering/catering-menu.service.ts","./src/app/services/data/catering/catering-order.class.ts","./src/app/services/data/location/location.class.ts","./src/app/services/data/location/location.service.ts","./src/app/services/data/location/location.utilities.ts","./src/app/services/data/organisation/building.class.ts","./src/app/services/data/organisation/level.class.ts","./src/app/services/data/organisation/organisation.class.ts","./src/app/services/data/organisation/organisation.service.ts","./src/app/services/data/reports/report.class.ts","./src/app/services/data/reports/reports.service.ts","./src/app/services/data/spaces/space.class.ts","./src/app/services/data/spaces/space.utilities.ts","./src/app/services/data/spaces/spaces.service.ts","./src/app/services/data/users/user.class.ts","./src/app/services/data/users/user.utilities.ts","./src/app/services/data/users/users.service.ts","./src/app/services/hotkeys.service.ts","./src/app/services/settings.service.ts","./src/app/shared/base.class.ts","./src/app/shared/base.directive.ts","./src/app/shared/components/action-icon/action-icon.component.ts","./src/app/shared/components/action-icon/action-icon.component.html","./src/app/shared/components/custom-fields/action-field/action-field.component.ts","./src/app/shared/components/custom-fields/action-field/action-field.component.html","./src/app/shared/components/custom-fields/counter/counter.component.ts","./src/app/shared/components/custom-fields/counter/counter.component.html","./src/app/shared/components/custom-fields/date-field/date-field.component.ts","./src/app/shared/components/custom-fields/date-field/date-field.component.html","./src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","./src/app/shared/components/custom-fields/duration-field/duration-field.component.html","./src/app/shared/components/custom-fields/time-field/time-field.component.ts","./src/app/shared/components/custom-fields/time-field/time-field.component.html","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","./src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","./src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","./src/app/shared/components/feedback/feedback.component.ts","./src/app/shared/components/feedback/feedback.template.html","./src/app/shared/components/forms/booking-form/booking-form.component.ts","./src/app/shared/components/forms/booking-form/booking-form.component.html","./src/app/shared/components/forms/user-form/user-form.component.ts","./src/app/shared/components/forms/user-form/user-form.component.html","./src/app/shared/components/icon/icon.component.ts","./src/app/shared/components/icon/icon.component.html","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/popout-menu/popout-menu.component.ts","./src/app/shared/components/popout-menu/popout-menu.component.html","./src/app/shared/components/searchbar/searchbar.component.ts","./src/app/shared/components/searchbar/searchbar.component.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/shared/components/topbar-header/topbar-header.component.ts","./src/app/shared/components/topbar-header/topbar-header.component.html","./src/app/shared/components/user-avatar/user-avatar.component.ts","./src/app/shared/components/user-avatar/user-avatar.component.html","./src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","./src/app/shared/globals/angular-animations.ts","./src/app/shared/globals/application.ts","./src/app/shared/mocks/api/bookings.mock.ts","./src/app/shared/mocks/api/buildings.mock.ts","./src/app/shared/mocks/api/common.mock.ts","./src/app/shared/mocks/api/locations.mock.ts","./src/app/shared/mocks/api/organisation.mock.ts","./src/app/shared/mocks/api/spaces.mock.ts","./src/app/shared/mocks/api/users.mock.ts","./src/app/shared/mocks/index.ts","./src/app/shared/mocks/systems.mock.ts","./src/app/shared/shared.module.ts","./src/app/shared/utilities/api.utilities.ts","./src/app/shared/utilities/formatting.utilities.ts","./src/app/shared/utilities/general.utilities.ts","./src/app/shared/utilities/validation.utilities.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._service.Composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.changes.date || this.booking.date,\n            duration: this.booking.changes.duration || this.booking.duration,\n            host: this.organiser\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.changes.title || this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.changes.date || this.booking.date;\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        const all_day = this.booking.changes.all_day || this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        const spaces =\n            this.booking.changes.space_ids ||\n            this.booking.space_ids;\n        return spaces.map(id => this._service.Spaces.find(id));\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.changes.attendees || this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n            this.booking.changes.organiser || this.booking.organiser || this._service.Users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.changes.body || this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.changes.catering || this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.id === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._service.Organisation.buildings.find(bld => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id) {\n            return {};\n        }\n        const changes = this.booking.changes;\n        return Object.keys(changes).reduce((map, key) => {\n            if (changes[key]) {\n                map[key] = changes[key] !== this.booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { booking: Booking }\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ type: 'success' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    err => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            err => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._service.Spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser_email\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (tapped)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (tapped)=\"newBooking()\">New Booking</button>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this._service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n                this.loadFormData();\n            });\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            case 'form':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        this.booking.clearPendingChanges();\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this._service.Users.current,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking.toJSON();\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this._service.Users.current,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._service.Spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (!this.booking.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.booking }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (tapped)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingCateringConfirmModalComponent, CateringConfirmModalData } from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { space: { value: '' } } }).controls;\n        const space: Space = form_controls.space.value || { level: {} };\n        return this._service.Organisation.buildings.find(\n            (bld) => space.level.building_id === bld.id\n        ) || { catering_restricted_from: 0 } as any;\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.start.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loadMenu();\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find((time) => time.id === this.form.controls.start.value)\n            ) {\n                this.form.controls.start.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.space.value) {\n                this.form.controls.space.setValue(this.space_list[0]);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            space: new FormControl(\n                this._service.Spaces.find(this.order.location_id) || this.space_list[0]\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            start: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.space.valueChanges.subscribe((space) => {\n                this.form.controls.location_id.setValue(space.id);\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find((time) => time.id === this.form.controls.start.value)\n                ) {\n                    this.form.controls.start.setValue(this.available_times[0].id);\n                }\n                this.loadMenu();\n            })\n        );\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.start.value)\n        ) {\n            this.form.controls.start.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space: Space = this.form ? this.form.controls.space.value : null;\n        /* istanbul ignore else */\n        if (!space) {\n            return;\n        }\n        this.form.controls.items.setValue([]);\n        this.loading = true;\n        this._service.Menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space: Space = this.form ? this.form.controls.space.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"space\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"start\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._service.Spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            this.order.changes.delivery_time || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._service.Spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._service.Organisation.buildings.find(\n            bld => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(private _service: ApplicationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            *ngIf=\"!only_catering\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._service.Organisation.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">Select locations(s)</div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n            <div\n                class=\"list\"\n                [@show]=\"show_locations ? 'show' : 'hide'\"\n            >\n            <div class=\"item\" *ngFor=\"let building of building_list\">\n                <mat-checkbox\n                    (change)=\"\n                        $event.checked\n                            ? addLocationFilter(building)\n                            : removeLocationFilter(building)\n                    \"\n                >\n                    <div class=\"building-name\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                        <div class=\"address\">{{ building.address }}</div>\n                    </div>\n                </mat-checkbox>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._service.Organisation.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._service.Spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { RecurrenceSpacesModalComponent, RecurrenceSpacesModalData } from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._service.Users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._service.Organisation.buildings.find(\n            (building) => building.id === level.building_id\n        );\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (tapped)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._data.form && this._data.form.controls.space\n            ? this._data.form.controls.space.value\n            : ({} as any);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._service.Organisation.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._service.Users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n    <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.booking.space.id);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const building = this._service.Organisation.buildings.find(\n            (bld) => bld.id === this.booking.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.booking.space.id &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: order.symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" *ngIf=\"!expired\" (tapped)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"true\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser_email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser_email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (tapped)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface MeetingDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        this._service.Bookings.accept(this.booking.id, {\n            comment: '',\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting approved.');\n            this.booking.approval_status[this.booking.space.id] = 'accepted';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'approved' });\n        }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._service.Bookings.decline(this.booking.id, {\n            booking_id: this.booking.id,\n            organiser: this.booking.organiser.email,\n            icaluid: this.booking.icaluid,\n            start: Math.floor(this.booking.date / 1000),\n            end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting declined.');\n            this.booking.approval_status[this.booking.space.id] = 'declined';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'declined' });\n        }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    content: `Are you sure you want to delete the meeting in ${this.booking.space.name} at ${this.booking.date_string}, ${this.booking.start_time}?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.deleteMeeting().catch(this._on_error('Error deleting booking'));\n                }\n                ref.close();\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm'));\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements [booking]=\"booking\" (loading)=\"setLoading($event)\"></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (tapped)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (tapped)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (tapped)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    public get setup(): string {\n        return this.booking && this.booking.setup ? humaniseDuration(this.booking.setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        return this.booking && this.booking.breakdown ? humaniseDuration(this.booking.breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return '';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking\n            }\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (tapped)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>()\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.booking.space.id === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, this._service.Users.current, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.loading.emit('Updating requirements...');\n                    const new_booking: Booking = await this.booking.save().catch((err) => {\n                        this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n                    }) as any;\n                    this.loading.emit(null);\n                    /* istanbul ignore else */\n                    if (new_booking) {\n                        this.booking = new_booking;\n                        this.bookingChange.emit(new_booking);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.space?.name || booking.space_ids[0] }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{ (booking.expected_attendees || {})[booking.space?.id || booking.space_ids[0]] || '0' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ (booking.equipment_codes || {})[booking.space?.id || booking.space_ids[0]] || '&lt;No Charge Code&gt;' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button *ngIf=\"!expired\" (tapped)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<NewUserModalComponent>,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.user.changeEvents.next({ type: 'item_saved', metadata: new_user });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderDetailsComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.id\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup || 0),\n            breakdown: new FormControl(this.booking.breakdown || 0),\n            notes: new FormControl(note.message),\n        });\n        this.subscription(\n            'setup',\n            this.form.controls.setup.valueChanges.subscribe((value) => {\n                this.booking.storePendingChange('setup', value);\n            })\n        );\n        this.subscription(\n            'breakdown',\n            this.form.controls.breakdown.valueChanges.subscribe((value) => {\n                this.booking.storePendingChange('breakdown', value);\n            })\n        );\n        this.subscription(\n            'notes',\n            this.form.controls.notes.valueChanges.subscribe((value) => {\n                /* istanbul ignore else */\n                if (value) {\n                    this.timeout('notes', () => {\n                        const notes = this.booking.notes.filter(\n                            (note) =>\n                                !(note.type === 'private' && note.space === this.booking.space.id)\n                        );\n                        this.booking.storePendingChange('notes', [\n                            ...notes,\n                            {\n                                type: 'private',\n                                date: dayjs().valueOf(),\n                                message: value,\n                                author: this._service.Users.current.name,\n                                space: this.booking.space.id,\n                            } as BookingNote\n                        ]);\n                    });\n                }\n            })\n        );\n    }\n\n    public saveChanges() {\n        if (this.booking.has_changes) {\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this.booking.save().then((booking) => {\n                this._service.notifySuccess('Successfully updated private details');\n                this.event.emit({ reason: 'done', metadata: booking })\n                this._dialog_ref.close();\n            }, (err) => {\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Unable to save changes to private details. Error: ${err.message || err}`)\n                this.loading = false;\n            })\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._service.Spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment')\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._service.Users.current.name,\n                type: 'equipment',\n                message: this.form[space.id].controls.notes.value,\n                space: space.id,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._service.Organisation.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.id] = building.required.equipment_code;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    building.required.equipment_code ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._service.Organisation.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._service.Spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._service.Organisation.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._service.Organisation.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { HashMap, ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { LocationService } from './data/location/location.service';\nimport { CateringMenuService } from './data/catering/catering-menu.service';\nimport { ReportsService } from './data/reports/reports.service';\nimport { CateringItemsService } from './data/catering/catering-items.service';\nimport { CateringCategoriesService } from './data/catering/catering-categories.service';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _organisation: OrganisationService,\n        private _reports: ReportsService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _locations: LocationService,\n        private _snackbar: MatSnackBar,\n        private _menu: CateringMenuService,\n        private _catering_items: CateringItemsService,\n        private _catering_categories: CateringCategoriesService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent\n            = this._spaces.parent = this._locations.parent = this._menu.parent\n            = this._reports.parent = this;\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n    /** Spaces service */\n    public get Reports() {\n        return this._reports;\n    }\n    /** Locations service */\n    public get Locations() {\n        return this._locations;\n    }\n    /** Catering Menu service */\n    public get Menu() {\n        return this._menu;\n    }\n    /** Catering Menu service */\n    public get CateringItems() {\n        return this._catering_items;\n    }\n    /** Catering Menu service */\n    public get CateringCategories() {\n        return this._catering_categories;\n    }\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /** Whether organisation and building data has been initialised */\n    public get has_org(): boolean {\n        return this._organisation.is_initialised;\n    }\n\n    /** Whether application is ready for user interaction */\n    public get is_ready(): boolean {\n        return this.has_settings && this.has_org;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._users.init();\n            this._organisation.init();\n            // Wait until building and level data is loaded before initialising space and booking data\n            this._organisation.listen('active_building').pipe(first(_ => _)).subscribe(_ => {\n                this._bookings.init();\n                this._spaces.init();\n            });\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport type DataClassEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface IDataClassEvent<T = HashMap> {\n    type: DataClassEventType;\n    metadata: T;\n}\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>\n    update: (id: string, _: HashMap) => Promise<T>\n    delete: (id: string) => Promise<void>\n    task: (id: string, name: string, data: HashMap) => Promise<void>\n}\n\nexport const BASE_MUTABLE_FIELDS = ['name', 'email'] as const;\ntype BaseMutableTuple = typeof BASE_MUTABLE_FIELDS;\nexport type BaseMutableFields = BaseMutableTuple[number];\n\nexport class BaseDataClass extends BaseClass {\n    /** Map of available services for child classes */\n    private static _service_map: HashMap<ServiceLike> = {};\n    /** Set the services used to handle data model requests */\n    public static setService(type: string, service: ServiceLike): void {\n        BaseDataClass._service_map[type] = service;\n    }\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Subject for change events to the class object */\n    public readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Class type of required service */\n    protected __type: string = 'BaseDataClass';\n    /** Map of pending changes to the object */\n    protected _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return BaseDataClass._service_map[this.__type];\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n        this._changes = {};\n    }\n\n    /** Whether the form has changes */\n    public get has_changes(): boolean {\n        for (const key in this.changes) {\n            if (this.changes[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Map of currently unsaved changes to the state */\n    public get changes(): HashMap {\n        return JSON.parse(JSON.stringify(this._changes));\n    }\n\n    /**\n     * Store new value for given field\n     * @param key\n     * @param value\n     */\n    public storePendingChange(\n        key: BaseMutableFields,\n        value: BaseDataClass[BaseMutableFields]\n    ): this {\n        if (typeof value === typeof this[key as any]) {\n            this._changes[key as any] = value;\n            this.emit('value_change', { key, value });\n        } else {\n            throw new Error(`Invalid type for value \"${value}\" set for key \"${key}\"`);\n        }\n        return this;\n    }\n\n    public clearPendingChanges(): void {\n        delete this._changes;\n        this._changes = {};\n        this.emit('reset');\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(force: boolean = false): Promise<BaseDataClass> {\n        if ((this.has_changes || force) && this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.emit<BaseDataClass>('item_saved', d);\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No changes have been made');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit<T = HashMap>(type: DataClassEventType, metadata?: T): void {\n        this.changeEvents.next({ type, metadata });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent) {\n            return this.timeout('init', () => this.init());\n        }\n        this.parent.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.load().then(\n                (_) => this._initialised.next(true),\n                (err) => {\n                    this.parent.notifyError(\n                        `Error intialising ${this._name} service. Error: ${\n                            err.response || err.message || err\n                        }. Retrying...`\n                    );\n                    this.timeout('init', () => this.init(), 1000);\n                }\n            );\n        });\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent\n            ? engine\n                ? this.parent.engine_endpoint\n                : this.parent.endpoint\n            : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find((i) => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { BaseAPIService } from '../base.service';\n\nimport { BookingNote, BookingMutableFields, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** List of spaces associated with the booking */\n    public readonly space_ids: readonly string[];\n    /** List of attendee emails associated with the booking */\n    public readonly attendee_emails: readonly string[];\n    /** Email of the host or organiser of the booking */\n    public readonly organiser_email: string;\n    /** Email of the host or organiser of the booking */\n    public readonly creator_email: string;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Class type of required service */\n    protected __type: string = 'Booking';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const u_service = this._service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        let start = dayjs(\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start || raw_data.Start\n        ).startOf('m');\n        if (!this.id) {\n            start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        }\n        this.date = start.valueOf();\n        this.duration =\n            Math.max(\n                0,\n                raw_data.duration ||\n                    dayjs(raw_data.end_epoch * 1000 || raw_data.end || raw_data.End).diff(\n                        start,\n                        'm'\n                    )\n            ) || 60;\n        this.body =\n            (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description ||\n            '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendee_emails = (raw_data.attendees || raw_data._attendees || []).map((i) =>\n            i instanceof Object ? i.email || i.id : i\n        );\n        const organiser = raw_data.organiser || raw_data.organizer || u_service.current || {};\n        this.organiser_email =\n            raw_data.organiser_email ||\n            organiser.email ||\n            raw_data._organiser ||\n            raw_data.organiser;\n        const creator = raw_data.creator || raw_data.booked_by || organiser;\n        this.creator_email = raw_data.creator_email || creator.email || '';\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence\n            ? {\n                  ...raw_data.recurrence,\n                  start: raw_data.recurrence.start,\n                  end: raw_data.recurrence.end,\n              }\n            : {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start * 1000,\n                end: this.recurrence.end * 1000,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser_email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        this.space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_ids.forEach((id) => (this.approval_status[id] = 'declined'));\n        }\n        // Add attendees and organiser to service data\n        if (this._service.parent && this._service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach((u) => {\n                    if (!this._service.parent.Users.find(u.email)) {\n                        this._service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this._service.parent.Users.find(organiser.email)) {\n                    this._service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const email of this.space_ids) {\n            if ((this.approval_status[email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const email of this.space_ids) {\n            if (\n                this.approval_status[email] &&\n                (this.approval_status[email].indexOf('tentative') >= 0 ||\n                    this.approval_status[email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const email of this.space_ids) {\n            if (\n                this.approval_status[email] &&\n                this.approval_status[email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this._service && this._service.parent && this._service.parent.Users\n            ? this.attendee_emails.map(\n                  (user) =>\n                      this._service.parent.Users.find(user) ||\n                      new User({ id: user, name: user, email: user })\n              )\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Users &&\n            this.organiser_email\n            ? this._service.parent.Users.find(this.organiser_email)\n            : null;\n    }\n\n    /** Creator of the meeting */\n    public get creator(): User {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Users &&\n            this.creator_email\n            ? this._service.parent.Users.find(this.creator_email)\n            : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Spaces &&\n            this.space_ids &&\n            this.space_ids.length > 0\n            ? this._service.parent.Spaces.find(this.space_ids[0])\n            : null;\n    }\n\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Spaces &&\n            this.space_ids\n            ? this.space_ids.map(\n                  (i) =>\n                      this._service.parent.Spaces.find(i) || new Space({ id: i, name: i, email: i })\n              )\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Store new value for given field\n     * @param key Name of the property\n     * @param value New value associated with the property\n     */\n    public storePendingChange(key: BookingMutableFields, value: Booking[BookingMutableFields]) {\n        return super.storePendingChange(key as any, value as any);\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        const date = dayjs(data.date);\n        data.start_epoch = date.unix();\n        data.end_epoch = date.add(data.duration || 60, 'm').unix();\n        data.organiser =\n            this.organiser instanceof User\n                ? this.organiser.toJSON()\n                : {\n                      email:\n                          typeof this.organiser === 'string'\n                              ? this.organiser\n                              : this.organiser_email,\n                  };\n        data.auto_approve = data.space_ids.map((space) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this._service.parent.Users.current.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.organiser = this._service.parent.Users.find(data.organiser_email) || {\n            email: data.organiser_email,\n        };\n        delete data.organiser_email;\n        data.attendees = data.attendee_emails.map((user) => {\n            return this._service.parent.Users.find(user) || { email: user };\n        });\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_ids;\n        data.old_date = this.date;\n        data.from_room = this.space ? this.space.email : '';\n        delete data.attendee_emails;\n        delete data.space_ids;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    current_user: User,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    if (!current_user) {\n        current_user = {} as any;\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        space_ids: new FormControl(booking.space_ids, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser_email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    // Listen for changes on the fields and update booking\n    if (form && booking) {\n        let subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            if (booking.hasOwnProperty(key)) {\n                subs[`change_${key}`] = form.controls[key].valueChanges.subscribe((value) => {\n                    booking.storePendingChange(key, value);\n                });\n            }\n        });\n        subs.space_list_change = form.controls.space_list.valueChanges.subscribe(\n            (list: Space[]) => {\n                form.controls.space_ids.setValue(list.map((space) => space.email));\n            }\n        );\n        if (form.controls.organiser) {\n            subs.organiser_change = form.controls.organiser.valueChanges.subscribe((host: User) => {\n                form.controls.organiser_email.setValue(host.email);\n            });\n        }\n        subs.booking = booking.changeEvents.subscribe((event) => {\n            /* istanbul ignore else */\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    /* istanbul ignore else */\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Booking.setService('Booking', this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return item instanceof CateringCategory ? item.toJSON() : item;\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceLike } from '../base-api.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Map of available services for child classes */\n    private static _service: ServiceLike;\n    /** Set the services used to handle data model requests */\n    public static setService(service: ServiceLike): void {\n        MapLocation._service = service;\n    }\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return MapLocation._service;\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const bld = this._service.parent.Organisation.buildings.find(bld => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        return this._service.parent.Organisation.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level = raw_data.level instanceof BuildingLevel\n            ? raw_data.level\n            : this._service.parent.Organisation.levelWithID(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { MapLocation } from './location.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocationService extends BaseAPIService {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        MapLocation.setService(this);\n        this._name = 'Location';\n        this._api_route = 'people';\n    }\n\n    public add(...args): never {\n        throw new Error('Create not allowed for location service')\n    }\n\n    public update(...args): never {\n        throw new Error('Update not allowed for location service')\n    }\n\n    public delete(...args): never {\n        throw new Error('Delete not allowed for location service')\n    }\n\n    public process(item: HashMap) {\n        return new MapLocation(item) as any;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Class type of required service */\n    protected __type: string = 'Organisation';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap, ApplicationLoadingState, Identity } from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Organisation.setService('Organisation', this);\n        Building.setService('Building', this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find(i => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find(i => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find(i => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this.parent.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this.parent.set('loading', loading);\n        /* istanbul ignore else */\n        if (this.parent && this.parent.Users) {\n            this.parent.Users.listen<User>('current_user')\n                .pipe(first(_ => !!_.location))\n                .subscribe(user => {\n                    const building = this.buildings.find(bld => bld.code === user.location);\n                    if (building) {\n                        this._active_building = building.id;\n                        this.set('active_building', building);\n                    } else {\n                        this._active_building = this.building.id;\n                        this.set('active_building', this.building);\n                    }\n                });\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map(\n            i => new Building(i)\n        );\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true })\n        const levels = (lvl_data as HashMap[]).map(i => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map(i => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportsService } from './reports.service';\nimport { csvToJson, downloadFile, jsonToCsv } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { ServiceLike } from '../base-api.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Map of available services for child classes */\n    private static _service: ServiceLike;\n    /** Set the services used to handle data model requests */\n    public static setService(service: ServiceLike): void {\n        Report._service = service;\n    }\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return Report._service;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(key => key.toLowerCase().includes('room') && key.toLowerCase().includes('email'));\n            const price_field = fields.find(key => key.toLowerCase().includes('price'));\n            const date_field = fields.find(key => key.toLowerCase().includes('date'));\n            for (let row of data){\n                /* istanbul ignore else */\n                if (room_field && price_field) {\n                    const room = this._service.parent.Spaces.find(row[room_field].toLowerCase());\n                    const bld = this._service.parent.Organisation.buildings.find(bld => bld.id === ((room || {}).level || {}).building_id);\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = (new CurrencyPipe('en_us')).transform(row[price_field] / 100, bld.currency || 'USD');\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] = typeof row[field] === 'string' ? row[field].replace(/\\,/g, '٫') : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n           data = data.map(i => {\n               const booking = new Booking(i).toJSON();\n               delete booking.id;\n               delete booking.icaluid;\n               delete booking.type;\n               delete booking.auto_approve;\n               delete booking.notify_users;\n               delete booking.organiser_email;\n               delete booking.edits;\n               delete booking.catering;\n               delete booking.checked_in;\n               delete booking.approval_status;\n               booking.organiser = booking.organiser.name || booking.organiser.email;\n               booking.equipment_codes = Object.keys(booking.equipment_codes).map(key => booking.equipment_codes[key]).join(', ');\n               booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n               booking.attendees = booking.attendees.map(person => person.name || person.email).join(', ');\n\n               return booking;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Report.setService(this as any);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n\n    /** Class type of required service */\n    protected __type: string = 'Space';\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find(occurence => !!occurence.available);\n        this.was_available =\n            settings.available || raw_data.available || raw_data.was_available || available || false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings =\n            (raw_bookings && raw_bookings.length\n                ? raw_bookings.map(i => i.id)\n                : raw_data._bookings) || [];\n        if (this._service.parent && this._service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    if (!this._service.parent.Bookings.find(booking.id)) {\n                        id = this._service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    }\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const booking_list =\n            this._service && this._service.parent && this._service.parent.Bookings\n                ? this._service.parent.Bookings.filter(\n                      booking => this._bookings.indexOf(booking.id) >= 0\n                  ) || []\n                : [];\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        return this._service.parent.Organisation.levelWithID(this.zones as any) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise(resolve => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        if (!this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = this._service.parent.Organisation.buildings.find(\n            bld => bld.id === this.level.building_id\n        );\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { availabilityOptionsToQuery } from './space.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Space.setService('Space', this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.building_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this.parent.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this.parent.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this.parent.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { MapLocation } from '../location/location.class';\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Class type of required service */\n    protected __type: string = 'User';\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        if (this._service && this._service.parent){\n            this._location = this._service.parent.Locations.process(\n                raw_data.location && raw_data.location instanceof Object\n                    ? raw_data.location\n                    : { name: raw_data.location }\n            );\n        }\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = this._service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Locations) {\n                service.Locations.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    // Listen for changes on the fields and update booking\n    if (form) {\n        const subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            subs[`change_${key}`] = form.controls[key].valueChanges.subscribe(value =>\n                user.storePendingChange(key, value)\n            );\n        });\n        subs.user = user.changeEvents.subscribe(event => {\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDataClass } from '../base-api.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n\n    constructor(protected _composer: ComposerService, protected uhttp: HttpClient, protected location: Location) {\n        super(_composer);\n        User.setService('User', this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this.parent.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this.parent.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                if (this.parent.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = { message: 'Loading user credentials', state: 'complete' };\n                                this.parent.set('loading', loading);\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this.parent.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this.parent.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        this.loadStore('local', localStorage);\n        this.loadStore('session', sessionStorage);\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load settings from the given Storage object\n     * @param name Root key for the settings\n     * @param store Storage item to add to the load into the settings\n     */\n    private loadStore(name: string, store: Storage) {\n        if (store) {\n            for (let i = 0; i < store.length; i++) {\n                const key = store.key(i);\n                const item = store.getItem(key);\n                if (item) { this._settings[name][key] = item; }\n            }\n        }\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: string = '60';\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = `${value}`;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: `${time}`,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = this.time.split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        /* istanbul ignore else */\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            const time = this.time.split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        const date = dayjs(this.date).startOf('m');\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            /* istanbul ignore else */\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    /* istanbul ignore else */\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        /* istanbul ignore else */\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._service.Users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._service.Users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.Users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._service.Users.current;\n            const delegates = user.delegates.map(\n                (email) =>\n                    this._service.Users.find(email) ||\n                    new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_ids.value ;\n        const space = this._service.Spaces.find(spaces[0]);\n        return spaces.length === 1\n            ? space.name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._service.Users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._service.Organisation.building;\n    }\n    public set active_building(building: Building) {\n        this._service.Organisation.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._service.Organisation.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Emiiter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const date = +(localStorage.getItem('CONCIERGE.date'));\n            /* istanbul ignore else */\n            if (date && date !== this.date) {\n                this.timeout('init', () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                }, 10)\n            }\n        });\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map(i => {\n        const rooms = unique(Array(randomInt(4))\n            .fill(0)\n            .map(i => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]), 'id');\n        // Set the organiser with the generated user list\n        const organiser = randomInt(9999) % 10 === 0 ? MOCK_USERS[MOCK_USERS.length - 1] : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map(i => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map(i => i.email)\n        });\n    });\n\nMOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  i => i.organiser.email === user.email || i.organiser === user.email || i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  i =>\n                  i.organiser.email === event.query_params.email ||\n                  (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n            );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to ? dayjs(+event.query_params.to * 1000).endOf('m') : start.endOf('d');\n            data = data.filter(i => {\n                const bkn_start = dayjs(i.start_epoch * 1000).startOf('m').second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000);\n                return (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) || (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'));\n            });\n        }\n        return data;\n    }\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' }\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(space => space.bookings = MOCK_BOOKINGS.filter(booking => booking.room_ids.indexOf(space.email) >= 0));\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for updating exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => (j.room_ids).indexOf(i.email) >= 0));\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [{\n    id: 'zone_bld-01',\n    zone_id: 'zone_bld-01',\n    name: 'Sydney',\n    settings: {\n        discovery_info: {\n            timezone: 'Australia/Sydney',\n            phone: {\n                emergency: '0412345678',\n                av_help: '0412345678',\n                concierge: '0412345678'\n            },\n            locations: {},\n            desk_tracking: 'sys-B0',\n            systems: {\n                desk_bookings: 'sys-B0'\n            },\n            messaging: 'sys-B0',\n            features: [],\n            catering: {},\n            neighbourhoods: {\n                'zone_lvl-01': {\n                    'Test Searchable': 'Device_Bench'\n                }\n            },\n            visitor_space: 'sydney-10.05@acaprojects.com',\n            levels: [\n                {\n                    level_id: 'zone_lvl-01',\n                    level_name: 'Level 1',\n                    number: 1,\n                    map_url: 'assets/maps/level_01.svg',\n                    floor_type: 'staff',\n                    settings: {\n                        map_features: [\n                            { id: 'Device_Bench', name: 'Device Bench' },\n                            { id: 'people', name: 'People' }\n                        ]\n                    },\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-02',\n                    level_name: 'Level 2',\n                    number: 2,\n                    map_url: 'assets/maps/level_02.svg',\n                    floor_type: 'client',\n                    book_type: 'Request',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-03',\n                    level_name: 'Level 3',\n                    number: 3,\n                    map_url: 'assets/maps/level_03.svg',\n                    floor_type: 'staff',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-10',\n                    level_name: 'Level 10',\n                    number: 10,\n                    map_url: 'assets/maps/level_10.svg',\n                    floor_type: 'staff',\n                    desks: 186,\n                }\n            ],\n            roles: {\n                'fire-warden': [\n                    { name: 'Alex Sorafumo', email: `alex.sorafumo@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Bob Jane', email: `bob.jane@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Rupert', email: `rupert@${DOMAIN}`, phone: '0434567890' }\n                ],\n                'first-aider': [\n                    { name: 'Ben Hoad', email: `ben.hoad@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Kim Burgess', email: `kim.burgess@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Mr Pop', email: `mr.pop@${DOMAIN}`, phone: '0434567890' }\n                ]\n            },\n            extras: [\n                { extra_id: 'VidConf', extra_name: 'Video Conference' },\n                { extra_id: 'AV', extra_name: 'AV' },\n                { extra_id: 'presentation', extra_name: 'Wireless Presentation' },\n                { extra_id: 'phone', extra_name: 'Conference Phone' },\n            ],\n            loan_items: [\n                { extra_id: 'ConfKit', extra_name: 'Conference Kit' },\n                { extra_id: 'Chairs', extra_name: 'Chairs' },\n            ],\n        },\n    },\n}];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        }\n    } as MockHttpRequestHandler);\n});\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '1.01', name: 'Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.02', name: 'Collaboration', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.03', name: 'Team Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.04', name: 'Pod', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.05', name: 'IT Support', zones: ['zone_bld-01', 'zone_lvl-01'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `area-${space_data.id}-status`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name} ${space_data.id}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ visitor: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for current user\nwindow.control.handlers.push({\n    path: `/api/engine/v2/users/current`,\n    metadata: MOCK_USERS[MOCK_USERS.length - 1],\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n]\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._service.Users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe(loading => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}