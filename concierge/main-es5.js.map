{"version":3,"sources":["webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/animations/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/animations/src/lib/angular-animations.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/animations/src/lib/animations.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/base.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/base.directive.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/base.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/cdk-drop-list-scroll-container.directive.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/date.spec-helpers.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/date.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/general.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/image.directive.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/numbers-only.directive.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/base/src/lib/replace.pipe.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/lib/bookings.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/lib/bookings.effects.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/lib/bookings.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/lib/bookings.reducer.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/bookings/src/lib/bookings.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/buildings/src/lib/buildings.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/api.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/app.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/base-api.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/base.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking-filter.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking.form.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking.form.data.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking.form.spec-helpers.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking.selectors.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/booking.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/booking/room-results/room-results.viewmodel.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/booking-state.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/booking.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/booking.types.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/booking.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/bookings.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/bookingsPaginated.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/bookings/space.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-categories.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-category.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-item.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-items.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-menu.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-notes.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering-order.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/catering.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/catering/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/data-common.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/hotkeys.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/location/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/location/location.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/location/location.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/organisation/building.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/organisation/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/organisation/level.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/organisation/organisation.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/organisation/organisation.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/paginated.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/recurrence/recurrence.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/reports/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/reports/report.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/reports/reports.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/service-manager.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/settings.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/spaces/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/spaces/space.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/spaces/space.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/spaces/spaces.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/spec-helpers.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/users/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/users/user.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/users/user.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/users/users.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/data-common/src/lib/validation.utilities.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/date-tz/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/date-tz/src/lib/date-tz.class.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/environment/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/environment/src/lib/environment.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/environment/src/lib/environment.service.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/environment/src/lib/version.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/booking-confirm/booking-confirm.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/booking-confirm/booking-confirm.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/booking-form/booking-form.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/booking-form/booking-form.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/catering-details-modal/catering-details-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/catering-details-modal/catering-details-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/confirm-modal/confirm-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/confirm-modal/confirm-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/legacy-overlays.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/new-user-modal/new-user-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/new-user-modal/new-user-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/no-catering-modal/no-catering-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/no-catering-modal/no-catering-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/requirement-details-modal/requirement-details-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/requirement-details-modal/requirement-details-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/space-select-modal/space-select-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/space-select-modal/space-select-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/user-form/user-form.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-overlays/src/lib/user-form/user-form.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/action-icon/action-icon.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/action-icon/action-icon.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/bookings/catering/item/item.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/bookings/catering/item/item.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/bookings/catering/package-options-modal/package-options-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/bookings/catering/package-options-modal/package-options-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/action-field/action-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/action-field/action-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/counter/counter.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/counter/counter.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/date-field/date-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/date-field/date-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/duration-field/duration-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/duration-field/duration-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/time-field/time-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/time-field/time-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/user-list-field/user-list-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/user-list-field/user-list-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/user-search-field/user-search-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/custom-fields/user-search-field/user-search-field.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/feedback/feedback.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/feedback/feedback.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/icon/icon.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/icon/icon.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/legacy-ui.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/popout-menu/popout-menu.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/popout-menu/popout-menu.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/searchbar/searchbar.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/searchbar/searchbar.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/user-avatar/user-avatar.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/legacy-ui/src/lib/user-avatar/user-avatar.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/src/lib/loading.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/src/lib/loading.effects.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/src/lib/loading.model.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/src/lib/loading.selectors.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/testing/effects.testing.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/loading/testing/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/rooms/src/lib/rooms.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/storage/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/storage/src/lib/localstorage.wrapper.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/storage/src/lib/storage.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/aca-date-picker/aca-date-picker.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/aca-date-picker/aca-date-picker.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/alert-banner/alert-banner.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/auto-complete-chip-select-item/auto-complete-chip-select-item.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/auto-complete-chip-select-item/groupHeader.pipe.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/auto-complete-select-option/auto-complete-select-option.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/auto-complete-select-option/auto-complete-select-option.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/base-template.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/cng-select/cng-select-options.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/cng-select/cng-select-options.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/cng-select/cng-select.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/cng-select/cng-select.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/cng-select/dropdown-trigger-for.directive.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/collapse-header/collapse-header.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/conflict-alert-modal/conflict-alert-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/conflict-alert-modal/conflict-alert-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/conflicts-modal/conflicts-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/conflicts-modal/conflicts-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/date-tz-calendar-widget/date-tz-calendar-widget.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/date-tz-calendar-widget/date-tz-calendar-widget.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/date-tz-date-picker/date-tz-date-picker.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/date-tz-duration-field/date-tz-duration-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/date-tz-time-field/date-tz-time-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/duration-field/duration-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/error-message/error-message.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/icons/calendar/calendar-icon.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/icons/calendar/chevron-icon.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/icons/close/close-icon.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/informational-image/informational-image.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/label/label.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/legend-dropdown/legend-dropdown.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/mck-date-picker/mck-date-picker.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/modal-button-row/modal-button-row.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/modal/modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/override-changes-modal/override-changes-modal.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/override-changes-modal/override-changes-modal.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/pipes/filter.pipe.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/pipes/sanitise.pipe.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/radio-select/radio-select.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-booking-form/recurrence-booking-form.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-booking-form/recurrence-booking-form.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-date-form/recurrence-date-form.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-date-form/recurrence-date-form.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-pattern-form/recurrence-pattern-form.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/recurrence-pattern-form/recurrence-pattern-form.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/select-option/select-option.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/select/select.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/select/select.component.html","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/selected-chip-count/selected-chip-count.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/spacer/spacer.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/switch-group/switch-group.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/time-field/time-field.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/toggle/toggle.component.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/types.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/ui.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/ui/src/lib/utils/time.utils.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/user/src/index.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/user/src/lib/user.actions.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/user/src/lib/user.effects.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/user/src/lib/user.module.ts","webpack:///home/runner/work/mckinsey-converge/mckinsey-converge/libs/user/src/lib/user.reducer.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bookings/booking-modal/booking-modal.component.ts","webpack:///src/app/bookings/booking-modal/booking-modal.component.html","webpack:///src/app/bookings/booking-modal/catering/catering.component.ts","webpack:///src/app/bookings/booking-modal/catering/catering.component.html","webpack:///src/app/bookings/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/bookings/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/bookings/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/bookings/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/bookings/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/bookings/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/bookings/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/bookings/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/bookings/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/bookings/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/bookings/booking-modal/find-space/find-space.component.ts","webpack:///src/app/bookings/booking-modal/find-space/find-space.component.html","webpack:///src/app/bookings/booking-modal/find-space/item/item.component.ts","webpack:///src/app/bookings/booking-modal/find-space/item/item.component.html","webpack:///src/app/bookings/booking-modal/form/form.component.ts","webpack:///src/app/bookings/booking-modal/form/form.component.html","webpack:///src/app/bookings/bookings.module.ts","webpack:///src/app/bookings/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/bookings/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/calendar/calendar.module.ts","webpack:///src/app/calendar/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/calendar/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/calendar/day-view/approvals-view/event/event.component.ts","webpack:///src/app/calendar/day-view/approvals-view/event/event.component.html","webpack:///src/app/calendar/day-view/day-view.component.ts","webpack:///src/app/calendar/day-view/day-view.component.html","webpack:///src/app/calendar/day-view/day-view.module.ts","webpack:///src/app/calendar/day-view/space/event/event.component.ts","webpack:///src/app/calendar/day-view/space/event/event.component.html","webpack:///src/app/calendar/day-view/space/space.component.ts","webpack:///src/app/calendar/day-view/space/space.component.html","webpack:///src/app/calendar/day-view/timeline/timeline.component.ts","webpack:///src/app/calendar/day-view/timeline/timeline.component.html","webpack:///src/app/calendar/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/calendar/meeting-details-modal/catering/catering.component.html","webpack:///src/app/calendar/meeting-details-modal/details/details.component.ts","webpack:///src/app/calendar/meeting-details-modal/details/details.component.html","webpack:///src/app/calendar/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/calendar/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/calendar/meeting-details-modal/private-details-modal/private-details-modal.component.ts","webpack:///src/app/calendar/meeting-details-modal/private-details-modal/private-details-modal.component.html","webpack:///src/app/calendar/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/calendar/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/calendar/meeting-details-modal/recurring-details/recurring-details.component.ts","webpack:///src/app/calendar/meeting-details-modal/recurring-details/recurring-details.component.html","webpack:///src/app/calendar/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/calendar/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/calendar/week-view/day-display/day-display.component.ts","webpack:///src/app/calendar/week-view/day-display/day-display.component.html","webpack:///src/app/calendar/week-view/day-display/item/item.component.ts","webpack:///src/app/calendar/week-view/day-display/item/item.component.html","webpack:///src/app/calendar/week-view/timeline/timeline.component.ts","webpack:///src/app/calendar/week-view/timeline/timeline.component.html","webpack:///src/app/calendar/week-view/week-view.component.ts","webpack:///src/app/calendar/week-view/week-view.component.html","webpack:///src/app/calendar/week-view/week-view.module.ts","webpack:///src/app/catering/catering.component.ts","webpack:///src/app/catering/catering.component.html","webpack:///src/app/catering/catering.module.ts","webpack:///src/app/catering/catering.storage.ts","webpack:///src/app/catering/menu/item-list/item-list.component.ts","webpack:///src/app/catering/menu/item-list/item-list.component.html","webpack:///src/app/catering/menu/item/item.component.ts","webpack:///src/app/catering/menu/item/item.component.html","webpack:///src/app/catering/menu/menu.component.ts","webpack:///src/app/catering/menu/menu.component.html","webpack:///src/app/catering/orders/item/item.component.ts","webpack:///src/app/catering/orders/item/item.component.html","webpack:///src/app/catering/orders/orders.component.ts","webpack:///src/app/catering/orders/orders.component.html","webpack:///src/app/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/components/access-denied/access-denied.component.ts","webpack:///src/app/components/access-denied/access-denied.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/topbar-header/topbar-header.component.ts","webpack:///src/app/components/topbar-header/topbar-header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/reports/report-display/report-display.component.ts","webpack:///src/app/reports/report-display/report-display.component.html","webpack:///src/app/reports/report-table/report-table.component.ts","webpack:///src/app/reports/report-table/report-table.component.html","webpack:///src/app/reports/reports.component.ts","webpack:///src/app/reports/reports.component.html","webpack:///src/app/reports/reports.module.ts","webpack:///src/app/room-admin/bulk-qr-overlay/bulk-qr-overlay.component.ts","webpack:///src/app/room-admin/bulk-qr-overlay/bulk-qr-overlay.component.html","webpack:///src/app/room-admin/manage-photos/manage-photos.component.ts","webpack:///src/app/room-admin/manage-photos/manage-photos.component.html","webpack:///src/app/room-admin/room-admin-routing.module.ts","webpack:///src/app/room-admin/room-admin.component.ts","webpack:///src/app/room-admin/room-admin.component.html","webpack:///src/app/room-admin/room-admin.module.ts","webpack:///src/app/room-admin/room-details/room-details-wrapper.component.ts","webpack:///src/app/room-admin/room-details/room-details.component.ts","webpack:///src/app/room-admin/room-details/room-details.component.html","webpack:///src/app/room-admin/rooms-table/rooms-table-datasource.ts","webpack:///src/app/room-admin/rooms-table/rooms-table.component.ts","webpack:///src/app/room-admin/rooms-table/rooms-table.component.html","webpack:///src/app/room-admin/services/index.ts","webpack:///src/app/room-admin/services/read-local-pic.service.ts","webpack:///src/app/room-admin/services/resize.service.ts","webpack:///src/app/room-admin/services/room-admin.service.ts","webpack:///src/app/room-admin/util/file-drag-n-drop.directive.ts","webpack:///src/app/room-admin/util/room-admin-utility.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/visitors/timeline/item/item.component.ts","webpack:///src/app/visitors/timeline/item/item.component.html","webpack:///src/app/visitors/timeline/timeline.component.ts","webpack:///src/app/visitors/timeline/timeline.component.html","webpack:///src/app/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/visitors/visitors.component.ts","webpack:///src/app/visitors/visitors.component.html","webpack:///src/app/visitors/visitors.module.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/settings.ts","webpack:///src/main.ts"],"names":["ANIMATION_SHOW_ENTER_LEAVE","trigger","transition","style","opacity","height","animate","ANIMATION_SHOW_CONTRACT_EXPAND","state","AnimationsModule","CommonModule","NgModule","imports","BaseClass","_timers","_intervals","_subscriptions","_initialised","BehaviorSubject","key","hasOwnProperty","clearTimeout","clearInterval","unsub","name","fn","delay","Function","setTimeout","Error","setInterval","Subscription","unsubscribe","getValue","BaseDirective","destroy","Directive","selector","BaseModule","NumbersOnlyDirective","declarations","exports","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","x","y","changes","scrollContainer","element","nativeElement","closest","subscription","items","subscribe","list","toArray","forEach","i","index","listen","onDrop","onDrag","updateListPosition","timeout","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","Input","ContentChildren","initialTime","mockDate","timeOverride","set","Date","resetDate","reset","closestToTimeSlot","date","stepMinute","start","millisecond","second","minute","Math","ceil","plus","minutes","closestToTimeSlotTz","dateTz","setValue","addValue","durationHumanized","duration","short","h","floor","d","m","weekDayMonthYearFormat","formatDate","extractDateFromInput","input","checkHour","startDate","dayjs","dayJsTimeFormatString","isValid","cleanedInput","times","split","undefined","length","dayJsHoursMinutes","month","year","hour","nearestStepToInput","step","currentStartDate","luxonDate","DateTime","fromMillis","valueOf","closestDate","toFormat","nearestDurationToInput","durationGroups","value","parseInt","indexOf","add","diff","closestDurationGroup","find","max","offset","reduce","previousValue","currentValue","resetSecondsOnTimestamp","timestamp","toMillis","formatDateWithSuffix","dateObj","day","getDate","toLocaleString","getFullYear","nthNumber","number","getListOfDateFormat","extend","utc","timezone","isToday","weekday","customParseFormat","log","type","msg","args","stream","force","app_name","window","debug","colors","console","getItemWithKeys","keys","map","slice","isMobileDevice","r","navigator","userAgent","match","isMobileSafari","agent","isAndroidChrome","padZero","str","toString","unique","array","filter","el","pos","arr","humaniseDuration","durationInput","size","singular","format","hours","filterList","fields","results","filters","toLowerCase","f","parts","push","word","count","regex","RegExp","sort","a","b","localeCompare","item_list","JSON","parse","stringify","item","match_count","match_index","field_list","matched","field","matches","replace","changed","tokens","k","join","matchToHighlight","timeToDate","time","DateNow","startOfValue","ms","randomInt","random","timeFormatString","is24HourTime","hoursMinutes","timezoneNameToDate","timeZoneName","zone","toZone","e","timezoneDisplay","gmtOffsetDisplay","timeWithZoneFormatString","toLocaleLowerCase","timeWithGmtOffsetFormatString","startEndTimeFormatString","startDateTz","endDateTz","startEndTimeWithZoneFormatString","dateLocalFormatString","comma","formatLocalDate","dateBuildingFormatString","shorterLocalDateFormatString","shorterBuildingDateFormatString","localeString","toLocaleTimeString","document","querySelector","getAttribute","language","downloadFile","filename","contents","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","csvToJson","csv","lines","splice","v","line","part","jsonToCsv","json","Array","Object","valid_keys","detectIE","ua","msie","substring","trident","rv","edge","eventToPoint","event","MouseEvent","clientX","clientY","touches","flatten","an_array","stack","res","next","pop","isArray","reverse","seed","xmur3","rand","sfc32","predictableRandomInt","imul","charCodeAt","c","t","isLessThanBreakpoint","breakpoint","innerWidth","toTitleCase","toUpperCase","ImageDirective","_el","initalValue","stopPropagation","HostListener","ReplacePipe","from","to","Pipe","bookingStateSelector","bookings","loadBookingsWithQuery","createAction","props","loadHomepageBookingsResults","createLoadingAction","loadUpcomingBookingsResults","loadPastBookingsResults","loadCancelledBookingsResults","loadBookingByIdResults","clearBookingByIdResults","BookingsEffects","actions","bookingService","afterBookingsRequestResultsLoadOthersEffect","pipe","ofType","mergeMap","action","DateTZ","yourBookingsRequest","email","pagination","limit","show_cancelled","end_epoch","subtractValue","seconds","include_rooms","upcomingRequest","pastRequest","start_epoch","cancelledRequest","byIdRequest","id","effects","target","request","loadHomepageBookingsResultsEffect","createLoadingEffect","userBookings","loadUpcomingBookingsResultsEffect","loadPastBookingsResultsEffect","loadCancelledBookingsResultsEffect","loadBookingByIdResultsEffect","Effect","Injectable","BookingsModule","EffectsModule","forFeature","StoreModule","bookingsReducer","initialBookingsState","query","LoadingModel","empty","homepage","upcoming","past","cancelled","bookingById","createReducer","on","ons","initialBookingFormState","activeFormFilters","bookingFormReducer","storeBookingFormData","activeForm","payload","clearBookingFormData","openBookingSurvey","bookingCompleted","storeRoomFilters","clearRoomFilters","mapBookingToSelectOption","booking","loadBuildings","buildingStateSelector","buildings","selectLoadBuildingsSuccess","createSelector","selectors","optionalSuccess","selectBuildingOptionsGroupedByCity","success","mapped","Map","s","found","city","get","selectLevelByZoneId","param","levels","l","toQueryString","ApplicationService","store","analytics","_app_ref","_zone","_title","_settings","_hotkeys","_composer","_snackbar","_environment","_subjects","_observers","isStable","first","_","run","waitForSettings","message","on_action","icon","content","snackbar_ref","open","panelClass","afterDismissed","dismiss","onAction","notify","asObservable","initialised","init","setupComposer","select","selectCurrentUser","user","take","setupAnalytics","fmno","application","loading","composer","settings","protocol","location","host","domain","hostname","port","url","use_domain","origin","route","includes","mock","href","localStorage","getItem","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","setup","heap_io_id","heapIo","app_id","load","identify","frontend","isIt","_kioskFormFilter","title_suffix","setting","setTitle","getTitle","auth","api_endpoint","is_initialised","providedIn","BaseDataClass","raw_data","event_subject","Subject","events","_server_names","zone_id","_service","form","toJSON","Promise","resolve","reject","promise","update","then","metadata","task_name","parameters","task","obj","_changes","new_key","ServiceManager","serviceFor","BaseAPIService","settingsService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","form_data","concierge","err","engine","endpoint","predicate","query_params","cache","result","http","process","processApiResult","catchError","error","of","new_item","post","injectConcierge","analyticsEvent","updateList","method","post_data","_task","put","removeItem","should_inject_concierge","apiSubRoute","token","sessionStorage","access_token","headers","HttpHeaders","requestOptions","q","label","raw_item","old_list","compareFn","new_list","mixed_list","spaceExtraFeatureToDisplayName","feature","SpaceFeatures","VideoConference","ConferencePhone","WirelessContentSharing","FlipChart","Glassboard","ElectronicWhiteboard","ConferenceRoom","TeamRoom","PartnerOffice","PhoneBooth","NaturalLight","BoardRoom","CocktailRoom","TheatreRoom","WorkshopRoom","UShapeRoom","Miscellaneous","Catering","instantBookOption","shortDisplay","instantBookOptions","mapSpaceFeaturesToSelectOption","roomEquipmentRequiredOptions","internalRoomTypeRequiredOptions","externalRoomTypeRequiredOptions","roomDetailsRequired","roomCateringAvailable","SpaceFilterReason","filterSpacesByAppliedFilters","formFilters","spaces","currentUser","instantBook","some","onlyCatering","featureFilters","formFiltersEmpty","options","rulesCount","ruleReason","excludedByFiltersCount","statusMap","group","filteredSpaces","space","Space","raw_space","building","zones","rules","rulesForSpace","booking_rules","reason","valid","hide","hasAllFeatures","every","featuresArray","canBook","bookable","matchesType","bookingType","internal_or_external","hasCatering","has_catering","status","statusFromBookings","Booking","auto_approve","groupEnd","specificReason","None","Filters","OfficeRules","DEFAULT_BOOKING_DURATION","internalBookingTypeOption","allBookingTypeOption","bookingTypeOptions","defaultRoomSizeOption","roomSizeOptions","roomSizeOptionsKiosk","roomCapacityToValue","roomSize","roomMaxCapacityToValue","roomFormDataToQuery","data","filteredLocationIds","groupChild","locations","capacity","capacity_max","now","defaultTestBookingForm","selectBookingFormsData","bookingForm","selectActiveForm","is_local_tz","building_tz","selectBookingType","selectBookingLocations","groupHeader","selectIsInternal","selectFormFilters","selectRoomResultsFromState","roomStateSelector","loadRoomsForResults","model","selectRoomResultsFromState_map","loadRoomsForResultsMap","selectLaterThatDayResultsFromState","loadLaterThatDayResults","selectNextDayResultsFromState","loadNextDayResults","selectByIdResultsFromState","loadByIdResults","selectDiffSizeResultsFromState","loadDiffSizeResults","selectHomepageBookingsResultsFromState","selectUpcomingBookingsResultsFromState","selectPastBookingsResultsFromState","selectCancelledBookingsResultsFromState","selectBookingByIdResultsFromState","filterSpacesByAppliedFiltersIfSuccess","mutate","selectFilteredResults","selectMapFilteredResults","selectFilteredLaterDayResults","selectFilteredNextDayResults","selectFilteredByIdResults","selectFilteredDiffSizeResults","selectSelectedBuildingOptions","MAX_ABBREV_LOCATIONS","mapBuildingToSelectOption","dropdownOverride","code","address","groupId","meta","mapCityToAllSelectOption","flattenDisplayOffices","grouped","toggleSelectedByGroup","selectedOptions","option","toSelect","selected","newGroup","remainingChildrenInGroup","o","ng","truncateLocationList","truncatedLocations","shouldTruncate","mapBuildingLevelToOption","level","flattenBuildingsWithLevels","flattenedLevels","placeholderRoute","num","setupRoomImages","componentReference","image_positions","rootFolderURL","fileSlug","imagesLoaded","foundImages","path","n","desiredImageName","desiredImage","pathname","tester","Image","onload","loadImages","src","bookingStatusDetails","image","text","title","roomHasCateringHours","catering_hours","cateringAllowed","disallowedStatus","opens","closed","end","openMinutes","closeMinutes","startOfDay","cateringOpenTime","cateringCloseTime","checkCollisions","service","available","room_ids","breakdown","hide_bookings","start_time","end_time","has_conflict","bkn","b_setup","b_breakdown","getStatusErrorMessage","RoomResultsViewModel","levelDisplay","short_name","local_name","office","mapResultsToViewModels","BookingStateService","_org","_spaces","ngZone","_poll","_long_poll","_long_poll_week","_bookings","_noOfMeetings","_filters","_dateTz","_loading","_state","combineLatest","filtered","bdTz","booking_date","startTz","endTz","endOfValue","filterBookings","shareReplay","filtered_week","bd","getEndOfWeek","filtered_month","search","debounceTime","switchMap","fzone","queryBooking","zone_ids","available_from","available_to","search_long_week","querySpace","space_list","processBookings","dailyCount","days","daily_count","buildSpaceLongQuery","counts","details","runOutsideAngular","interval","new_bookings","concat","icaluid","undo","attempted_to_delete","bkg","booking_master","recurrence_type","recurrence_master_id","period","replaceBookings","room_email","fromTz","toTz","intersects","timePeriodsIntersect","in_zone","room","has_space","space_emails","in_zones","declined","getType","show","hide_type","dateWeekday","time_changed","SettingsService","is_concierge","nowTz","defaultTitle","defaultLocalTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","defaultBuildingZone","defaultOrgainiser","User","active_user","defaultBookingType","building_zone","booking_type","attendees","organiser","creator","booked_by","notes","equipment_codes","expected_attendees","check_ins","notify_users","company","booker","booker_concierge","level_zone","room_id","findSpace","defaultStartTz","startEpochProvided","startDateTzProvided","round","created_epoch","all_day","show_as","approvalStatus","approval_status","catering","CateringOrder","edited_fields","edits","values","recurrence_count","recurrence_days","occurrence_edits","recurrence_endTz","recurrence_end","recurrence_exceptions","occurrence_ids","recurrence_interval","recurrence_period","occurrence_details","is_recurrent","recurrence_starts","author","isEdit","opts","note","handleRecurrenceFields","recurrence_list","location_name","from_room","approve","old_start","old_end","creation_date","creationDateTz","cateringOrders","allAttendees","checked_in","checkInsArray","has_visitors","occurence","getTime","shift","_recurrence_endTz","byRequest","tentative","delivery_time","getTimezoneOffsetString","abs","dateDiff","displayEndDateTz","external","buildingTzDt","isBeforeDate","isAfterDate","mergeCateringOrders","order_list","orders","order","location_id","booking_timezone","BOOKING_STATUS","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","months","week","weeks","bookingOptionsToQuery","property","until","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","date_","block","generateBookingForm","use_fields","isConcierge","manualTimezone","user_service","current_user","current","FormControl","disabled","Validators","required","validators","minLength","updateOn","needs_space","is_before_date","setValidators","validateEndTime","disable","dateValidators","isFuture","validDateTZ","updateValueAndValidity","list_length","valueChanges","expected","codes","new_expected","new_codes","space_needed","simplified_fields","handleAllDay","clone","enable","occurrences","RecurrencePeriod","LIST","occurrence","SeriesAction","CLONE","BookingAction","start_dateTz","d1","d2","_recurr_end","fields_with_recurrence","WEEKLY","recurrence_pattern","arrayWithValues","FormGroup","control","validDate","isSameDate","JSDate","getMinLength","rule_list","min","min_block","min_length","conditions","stringToMinutes","durationGreaterThanOrEqual","duration_1","duration_2","requestable","free_slots","next_free_slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","spaceStatusToDisplay","filter_options","filtered_list","updated_list","start1","end1","start2","end2","formatWhen","startTZ","endTZ","displayEndTZ","BookingsService","setService","uniqueId","respond","series","toApiJSON","taskObsr","requests","booking_id","forkJoin","BookingsPaginatedService","getHoldingBay","queryHoldingBay","response","PaginatedAPIService","space_rules_for_user","rule_block","checkRules","ruleset","max_length","counter","condition","groups","j","last_location","check","CateringCategoriesService","CateringCategory","is_category","must_select","order_anytime","CateringItem","_amount","instance_id","from_month","to_month","description","prior_notice","notice","unit_price","price","supplier_cost","minimum_quantity","maximum_quantity","parent_categories","category_ids","categories","image_path","admin_only","catering_type","amount","allergy","cateringItems","filteredCateringItems","out_of_stock","availableItems","substr","anytime","can_order_anytime","CateringItemsService","CateringMenuService","CateringNotesService","cateringNotes","hasBookingAttached","bookingDateTz","charge_code","kitchen","pantry","symbol","total","deliver_date","mergeCateringItemWithFormData","existing","override","DataCommonModule","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","MapLocation","map_id","desk_id","normalise","x_max","Organisation","BuildingLevel","levelWithID","fixed","confidence","at_desk","bld","building_id","LocationService","Building","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","_location","longitude","latitude","searchables","neighbourhoods","lvl","lvl_features","level_id","booking_details","catering_restricted_from","currency","requires_equipment_code","equipment_code","requires_expected_attendees","holding_bay","visitor_space","sort_order","_data","bld_id","level_name","lower_name","map_url","floor_type","available_buildings","OrganisationService","_users","_spaceTypesSubject","_organisation","ids","bld_list","_active_building","organisation","loadOrganisation","loadLevels","space_types","loadSpaceTypes","tags","org_data","loadBuildingsWithOrg","bld_data","lvl_data","type_data","types","getOrganizationFiltersByRoomType","setItem","DaysOfWeek","RepeatsOn","recurrencePeriodToDurationType","DAILY","ABSOLUTE_MONTHLY","generateWeekDays","params","start_week","week_days","activeDate","active","full_name","day_index","getFirstDateFromList","getLastDateFromList","recurrenceDetails","recurr","getPeriod","recurrenceRecurringDetails","removeExpiredOcurrences","controls","tz","date_now","setStartAndEndDateFromArray","dates","setRecurrenceStartsTime","dateHour","Report","cleanData","txt","charAt","UNIX_timestamp","getMonth","getHours","suffix","getMinutes","timeConverter","formatCancelledBy","room_field","price_field","row","space_service","org_service","CurrencyPipe","transform","organizer","person","isCancelled","cancelled_by","cancelled_at_epoch","cancelled_date","remove_fields","output","idx_a","idx_b","csv_json","ReportsService","fromCSV","_service_list","findIndex","provider","provideFor","useValue","SETTINGS_TOKEN","SettingsObject","_app_name","_overrides","_observables","VERSION","built","semver","hash","override_settings","Inject","OPTION_DEFAULTS","SpaceEquipments","SpaceStyles","EMPTY_ARRAY","room_style","equipment","defaultGlobalName","defaultSettings","room_name","support_url","features","extra_features","room_type","simple_name","rulesFor","nowMs","runningBookings","bks","startEpoch","endEpoch","spaceWithBookings","roomType","natural_light","vc","Set","recurrence_availability","availabilityOptionsToQuery","hide_declined","blds","bld_b","a_has_zone","b_has_zone","SPACE_LIST","SpacesService","queryRooms","updateSpace","uploadSpacePhotos","filterAvailableSpaces","faker","SERVICE","generateMockOrganisationService","jest","generateMockBuilding","getRoomTypeSubsetDDOptions","generateMockDataService","generateMockSpacesService","generateMockUsersService","loadCurrentUser","bookingState","setZone","setDate","setFilters","remove","startPolling","startPollingMonth","startPollingWeek","startPollingEveryFiveMin","test_app","logo_light","background","logo_dark","heap_io","force_ssl","secure_cookie","disable_text_capture","cookie_path","TEST_SETTINGS","app","generateMockSettingsService","overrides","provideMockSettingsObject","provide","generateMockAppService","settingsOverrides","notifyInfo","notifyWarn","notifySuccess","notifyError","navigate","navigateBack","Composer","Hotkeys","Users","Locations","Base","Menu","Spaces","Bookings","Reports","CateringItems","CateringCategories","Settings","generateMockUser","booking_list","fill","generateMockBooking","mockReturnValue","save","addFrom","removeFrom","clearList","removeFromList","accept","decline","checkin","is_logged_in","queryRoomsForQR","queryObsr","checkinIndividualVisitor","updateObsr","mockImplementation","SPACE_COUNT","generateMinimalRoomDetails","generateMockSpace","space_id","recurring_search","lastName","room_booking_screen","linked","commerce","productName","searchable","controlable","hourly_rate","sort_priority","business","USER_DOMAIN","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","visitor","generateMockCateringOrder","menu","date_start","users","lorem","paragraph","BLD_COUNT","LVL_COUNT","generateMockLevel","levelGenerator","firstName","test","nested","level2","org","USER_COUNT","USER_EMAILS","companyName","delegates","delegate_count","first_name","last_name","phone","phoneNumber","department","staff_code","avatar","pickMenuItem","menu_map","category","generateMockLocation","fixed_locations","maps","ORG_COUNT","generateMockOrganisation","generateMockBuildingSetByCity","generateMockModalData","pendingDate","pendingDuration","mockDateToBuildingTz","windows_id","mobile","business_unit","organisation_id","organisation_name","officeLocation","desk","generateUserForm","pattern","UsersService","uhttp","expiry","reload","client_id","Md5","hashStr","go","append","authorise","logout","tries","locate","loadDelegates","promises","all","HAS_ERROR","buildValidateDate","validateDate","is_from","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","dateControlTz","noWhitespaceValidator","isWhitespace","trim","whitespace","date_org","local_tz","zoneName","compare_to","unit","ans_unit","newDate","startOf","monday","sunday","later","endOf","isLastDayOfMonth","minus","hasSame","dateYear","dateMonth","dateDay","trunc","toSeconds","toUTC","toJSDate","getDay","convertLocalTimestampToTimezonedDateTz","buildingTimezone","convertTimezonedTimestampToLocalDateTz","localOffset","getTimezoneOffset","desiredOffset","eleA","localTimezone","offset_minutes","toMiddayUTC","timezoneOffset","EnvironmentModule","providers","ENVIRONMENT_TOKEN","EnvironmentService","environment","production","BookingConfirmComponent","_booking_state_service","_router","_dialog","_dialog_ref","EventEmitter","lastMomentConflict","old_booking","is_request","approved","bookingDetails","bookedBy","disableClose","checkSpaceAvailability","newEmail","replaceObjects","constructor","replacement","nk","has_note_buffer","EDIT","updated","master_booking","emit","erroMessage","close","queryParams","ignore","ref","ConflictsModalComponent","maxWidth","width","conflicts","copy_conflicts","componentInstance","clipboard","writeText","conflictsText","afterClosed","duration_value","recurrenceDates","a_space","dateTZ","MAT_DIALOG_DATA","Component","templateUrl","styleUrls","Output","BookingFormComponent","cdRef","user_list","fromDateTz","untilDateTz","localStart","localEnd","updateCoachmarkTimes","skip","distinctUntilChanged","recurrenceStarts","clearValidators","arrayValidators","disableInputs","has_id","is_edit","patchValue","SpaceSelectModalComponent","multiple","needsCatering","NewUserModalComponent","detectChanges","localTzOffset","buildingTzOffset","changeDetection","ChangeDetectionStrategy","OnPush","BookingCateringConfirmModalComponent","CateringDetailsModalComponent","_cateringNotesService","head_counts","needs_charge_code","active_space","note_list","notes_field","generateFormFields","markAllAsTouched","is_valid","new_notes","setNotes","_scrollToBottom","_content_el","scrollTo","top","scrollHeight","left","behavior","active_form","errors","minlength","submit","ViewChild","CONFIRM_METADATA","maxHeight","ConfirmModalComponent","DECLARATIONS","NoCateringModalComponent","RequirementDetailsModalComponent","UserFormComponent","LegacyOverlaysModule","LegacyUiModule","FormsModule","ReactiveFormsModule","UiModule","EditorModule","new_user","confirm","cancel","codes_field","head_counts_field","head_count","roomBasedEqCode","officeBasedEqCode","change$","selected_spaces","request_map","formGroup","triggerSearch","savedSelection","request_id","search_results$","active_building","resp","active_type","_space","setDefaultBuilding","grouped_by_city","city_buildings","noCateringDialogRef","autoFocus","backdropClass","defaultBld","opt","space_a","space_b","withLatestFrom","formData","ActionIconComponent","hasSelectionRequirements","getActiveList","CateringMenuItemComponent","initial_state","an_cat","setAmount","cat","an_item","updatePackageSelection","setPrice","selectPackageOptions","confirmed_item","cart_item","active_items","updatedList","PackageOptionsModalComponent","done","a_list","animations","checkItemRequirements","getActiveItems","a_package","needed","ActionFieldComponent","show_tooltip","performAction","CounterComponent","useInput","previous_value","handleTimeout","ctrl_key","shift_key","new_value","changeInput","Number","isNaN","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DateFieldComponent","_from","position","onChange","old_date","new_d","new_date","_trigger","closeMenu","openMenu","_to","years","menuOpen","MatMenuTrigger","openDatePicker","$event","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","search$","search_str","match_name","match_email","inputAutoComplete","openPanel","closePanel","active_list","a_user","file","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","endsWith","addUser","template","MatAutocompleteTrigger","addUsersFromFile","downloadCSVTemplate","read","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","NavigationEnd","current_page","IconComponent","PopoutMenuComponent","SearchbarComponent","UserAvatarComponent","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","ACA_PIPES_MODULE","valueChange","autofocus","focusField","input_field","actionPrefix","stateKey","buildAction","postfix","clear","wrapLoading","selectData","warn","selSuccess","selectSuccess","selOptionalSuccess","selectOptionalSuccess","selError","selectOptionalError","selLoading","selectIsLoading","actionObject","caller","flatMap","isLoading","hasError","hasSuccess","_success","isEmpty","isSuccess","isError","hasLoaded","shouldLoad","selectIsSuccess","selectIsError","selectHasLoaded","selectIsEmpty","generateMockActions","dispatcher","Actions","verifyActionSuccess","effect","expect","toBeDefined","toStrictEqual","verifyActionError","rooms","loadRoomsWithQuery","selectRoomResultsSuccess","LocalStorageWrapper","prefix","StorageModule","AcaDatePickerComponent","klass","show_last_selection","min_offset","max_offset","date_list","month_name","days_of_week","day_format","month_format","generateMonth","generateDaysOfTheWeek","updateOptions","counters","difference","today","end_","non_month","_change_timer","new_offset","updateDate","changeMonth","AlertMode","AlertBannerDisplay","AlertBannerComponent","mode","Warning","showClose","V1","iconPath","materialColor","closeIcon","_onModeChange","Coachmark","BlueCoachmark","AutoCompleteChipSelectItemComponent","optionSelected","feedbackOutput","chipsCleared","onClickConfirm","selectOnlyOneGroup","localFilter","selectOnlyOneGroupChange","separatorKeysCodes","ENTER","COMMA","filterFormControl","focused","mobileFullScreen","autocompleteOptions","filteredAutocompleteOptions","chipOptions","enableCTAs","hasChips","scrollEvent","panelOpen","classList","contains","onFocus","blur","valueAccessor","color","enabled","selectedGroupHeader","getFilteredAutocompleteOptions","groupHeaders","g","searchString","exactMatches","moreOptions","joinedOptions","groupIds","parents","jo","matInput","feedbackInput","useCTAs","focusIn","fromPanel","componentInput","loseFocus","isDisabled","spl","removeEventListener","dirty","touched","keyedInput","onPanelFocusChange","selectOption","encapsulation","ViewEncapsulation","Self","Optional","GroupHeaderPipe","hasHeader","displayAsHeader","AutoCompleteSelectOptionComponent","filteredOptionsChange","inputTextChange","emptyBoxEvent","_options","updateFilteredOptions","selectedValue","resetInput","filteredOptions","startWith","_filter","filterValue","filterValues","matchesAll","onChangeInput","BaseTemplateComponent","vcRef","isRendered","attemptViewEmbed","createEmbeddedView","TemplateRef","CngSelectOptionsComponent","CngSelectComponent","isClosed","defaultSelected","onChangeCallback","DropdownTriggerForDirective","overlay","elementRef","viewContainerRef","renderer","isDropdownOpen","dropdownClosingActionsSub","EMPTY","isPanelOpened","destroyDropdown","openDropdown","ddWidth","dropdownPanel","offsetWidth","overlayRef","create","hasBackdrop","scrollStrategy","scrollStrategies","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","offsetY","templatePortal","TemplatePortal","templateRef","attach","dropdownClosingActions","backdropClick$","backdropClick","detachment$","detachments","dropdownClosed","merge","detach","dispose","CollapseHeaderComponent","isExpanded","ConflictAlertModalComponent","dialogRef","dialogData","callback","dateIsToday","copy","DateTzCalendarWidgetComponent","className","selectedDateTz","_today","registerOnChange","registerOnTouched","startOfMonthDateTz","DateTzDatePickerComponent","icon_only","onSelect","can_pick_today","selectedDateTzValue","resetToLastSelection","_acaDatePicker","initialDateSelectionTz","writeValue","newValueTz","newDateTz","onDatePickerClose","DateTzDurationFieldComponent","defaultDurationGroups","DEFAULT_DURATION","currentStartDateTz","nearestStep","placeHolderOption","selectedOption","generateDurationOptionsFromGroups","extended","dopt","DateTzTimeFieldComponent","noPastTimes","show_current","startFromDateTz","selectedTimeString","generateAvailableTimesTz","generateOptionForDateTz","os","timeOptions","displayString","newTimeTz","setSelectedValues","ErrorMessageComponent","CalendarIconComponent","ChevronIconComponent","CloseIconComponent","InformationalImageComponent","LabelComponent","LegendDropdownComponent","isOpen","placeholderOpen","placeholder","MckDatePickerComponent","dateValue","initialDateSelection","goToToday","secondarySubmit","primarySubmit","ModalButtonRowComponent","primaryDisabled","disableFixed","secondaryDisabled","smallButtons","ModalComponent","shouldClose","OverrideChangesModalComponent","FilterPipe","searchText","objectKey","splitKeys","it","included","SecurityContext","SanitizePipe","sanitizer","sanitize","RESOURCE_URL","URL","SCRIPT","STYLE","HTML","RadioSelectComponent","RecurringBookingForm","recurrence_types","PATTERN","DATE","recurrencePeriod","current_type","pattern_form","recurrencePatternFormControl","RecurrencePatternForm","onChangeType","RecurrenceDateForm","selected_dates","setPickerToGivenDate","start_date","formDateTz","is_selected","setDateTzForm","dateTsValue","addDate","fromStartTz","untilTz","repeat_period_options","validateRecurrenceInterval","repeat_every_options","recurrenceIntervalFormControl","fromEndTz","setEndDateFromStartDate","recurrenceDateStartTzFormControl","recurrencePeriodFormControl","generateMaxIntervals","recurrenceDaysFormControl","current_days","generateOcurrenceList","recurrenceEndFormControl","end_date","updateActiveWeekday","updateValidators","date_diff","periodToDurationType","first_date","recurr_days","daysInMonth","_week_days","new_day","current_index","setRepeatEvery","setRepeatPeriod","SelectOptionComponent","ignoreDisabled","noEntriesFoundLabel","SelectComponent","searchEnabled","splitDisplay","showDivider","SelectedChipCountComponent","SpacerMode","SpacerComponent","Horizontal","SwitchGroupComponent","optionChecked","closestTimeSlot","buildingDate","newTime","ToggleComponent","selectedChange","MatIconModule","MatExpansionModule","OverlayModule","NgxMatSelectSearchModule","NgxSkeletonLoaderModule","ALL_DAY_BOOKING_VALUE","showPast","inputDate","allDayOption","oneWeekOption","loadUser","selectUserState","selectHasUserData","UserEffects","userService","UserModule","userReducer","initialUserState","webpackEmptyAsyncContext","req","module","routes","component","ShellWrapperComponent","children","loadChildren","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","RoomAdminModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","AppComponent","_uploads","_md5_workers","timezoneString","initUploads","autoStart","UploadManager","addProvider","Amazon","localStorageSyncReducer","reducer","localStorageSync","rehydrate","metaReducers","AppModule","app_loaded","MAT_LABEL_GLOBAL_OPTIONS","DEFAULT_SETTINGS","BrowserModule","BrowserAnimationsModule","HttpClientModule","ComposerModule","CalendarModule","SharedContentModule","bootstrap","BookingModalComponent","iscloning","getModalTitle","flow_step","only_catering","loadFormData","modalTitle","toNextFlowStep","toPreviousFlowStep","resetForm","openRecurrenceConflictsModal","openEquipmentDetailsModal","confirmBooking","openCateringDetailsModal","overrideChanges","markAsDirty","is_recurr_series_edit","available_fields","addControl","is_cloning_or_edit","isFromGrid","recurrenEndFromOcurrences","edit_recurrence","markAsTouched","equipment_ref","catering_ref","clearRecurrenceValidators","formValues","sanitizeBookingFromCloning","dialog_ref","emitEvent","acc","recurr_ref","BookingCateringComponent","active_order","an_order","CateringMenuCategoryComponent","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","matched_items","initForm","_input_el","show_search","loadMenu","generateStartAndEndTimes","logDateTz","space_email","building_time","cat_start_time","cat_end_time","has_available_items","out_of_hours","form_controls","confirmOrder","CateringOrderListItemComponent","edit","BookingCateringOrderListComponent","previous","BookingSpaceFiltersComponent","initBuildings","locationsChange","building_list","now_","is_today","BookingFindSpaceComponent","_booking_state","searchQuery","selectedSpace","oldSpace","handleEditConflicts","occurrences_org","booking_org","ocurr","to_hours","to_minutes","new_conflicts","spaceConflicts","isCloning","original_space","sortByRecurrenceAvailability","booking_space_list","a_availability","b_availability","spaceName","toggle","BookingSpaceItemComponent","availableOccurrences","BookingSpaceFlowFormComponent","can_return","container","scrollIntoView","inline","DeleteConfirmModalComponent","ScrollingModule","MeetingDetailsModalComponent","PrivateDetailsModalComponent","MeetingDetailsDisplayComponent","MeetingRecurringDetailsDisplayComponent","MeetingDetailsRequirementsComponent","MeetingCateringDetailsComponent","MeetingPrivateDetailsComponent","DayViewApprovalsComponent","_bookings_service","inputText","incommingRequests","selectedSort","updatedRequest","sortOrderByOptions","expiredBkngs","pendingBkngs","bkng","timeBasedStatusLabel","declineExpiredBookings","cloneDeep","searchRequest","sortingValue","date_string","street_and_city","att","weekdayLong","weekdayShort","applyOrderBy","declineMultiple","resArray","STATES","DayViewApprovalsEventComponent","_booking_state_sevice","acting","showCateringNote","showEquipmentNote","cateringNote","equipmentNote","cateringOrderItems","updateData","createdDate","createdTime","creationDate","officeAddress","length_string","acceptedBooking","view","DayViewComponent","_route","active_level","legend","legend_list","legend_keys","banner_mode","showBanner","undo_banner_mode","event_list","foundSearchLength","searchedCounter","paramMap","has","has_access","updateLevel","numeric","ignorePunctuation","spaceTypesObservable","spaceTypesSubscription","spaceTypes","undo_action","_undo_timer","attentToDelete","configureIfLinksFromEmail","searchValue","searchStr","bookingId","snapshot","dispatch","levelId","updateDateTz","replaceUrl","checked","ROUTES","forChild","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","calculatePosition","overlap","storeOrder","shown_date","from_previous_day","toFixed","overflow_top","overflow_bottom","time_period","cdr","eventMovingLoader","inView","dragging","moving","overlap_details","position_list","time_blocks","generateTimeBlocks","filterEvents","overflow_only","checkInView","last_update","calculateOverlaps","override_state","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","previousContainer","new_start","handleDropError","isMoving","movingId","room_list","room_count","new_booking","moveBooking","confirm_msg","selectedBlockStart","selectedBlockEnd","topMinutes","closestDateTz","isConflict","checkAvailabilityOnGivenTime","drop","gridBookingOnClick","UPDATE_INTERVAL","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","space_zones","modalInitialized","isEventMoving","scroll_area","initSpaces","updateTime","addClass","virtualScroll","space_type","stopPolling","queryParamMap","view_id","spaceJson","active_hour","scroll_box","date_percent","removeClass","scrollWidth","updateScroll","is_dragging","bottom","right","scrollView","cancelScroll","isDragging","subscribeToMouseMove","unsubscribeFromMouseMove","calculateScrollDirection","runAutoScroll","tolerance","calculateDirection","CdkVirtualScrollViewport","clearSelected","updateBooking","_updateOrders","closeAll","ord","editMeetingCatering","edited","setDetails","_on_error","setLoading","deleteMeeting","booking_data","book","_booking","available_durations","old_notes","openPrivateDetailsModal","confirmDelete","_specific_dates","expired_ocurrences","recurrence_startTz","ocurrence","specific_dates","duplicate","_recurrence_startTz","_recurrence_period","_recurrence_interval","_occurrence_details","val","_master_booking","editSeries","cloneSeries","cancelSeries","bookingChange","standalone","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","dateListTz","generateDatesTz","weekends","WeekViewComponent","orderDetailsExpanded","CateringComponent","cateringStorage","order_type","orderDetails","page","relativeTo","CateringStorage","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","CateringMenuOrderComponent","removeValue","orderDetailsKey","openGroupModal","parent_id","parent","_menu_items","_menu_categories","updateItemList","old_item","itm","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","openCategoryModal","depth","item_details","showIndividualItem","statuses","colour","active_status","updateItemDetails","show_items","updated_booking","sub_item","sub_sub_item","viewOrderDetails","expandMore","filtered_orders","display_orders","deliver_at_time","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","file_name","uploads","complete","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","AccessDenied","SidebarComponent","TopbarHeaderComponent","show_add_item","show_events","dateChangeTz","timezone_value","event_map","dateInputTz","changeDate","noOfCount","applyDatePickerValue","LoginComponent","username","password","logo","login","setErrors","ReportDisplayComponent","_reports","multipleLocations","locationChanged","report","report_data","downloadCSV","checkDates","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","multi_locations","active_report","BulkQrOverlayComponent","selectItemChange","selectAllChange","downloadQrCodeRequested","cancelClick","qrCodeUrlsChange","qrCodeUrls","qrTabClick","itemsCheckboxes","newArr","isLevel","checkbox","selectAll","roomname","checkedRoomObj","checkedLevelObj","checkedFlag","assign","allLevels","onSubmit","onSelectAllChange","onCancel","photoArray","photoUploadArray","ManagePhotosComponent","resizeService","readLocalPicService","httpClient","imageInitial","imageToModify","uploadError","uploadingStatus","resizedFiles","requiredFileType","RequiredFileType","photos","indexToReplace","canvas","context","getContext","ext","unusedIdx","readFileInput","base64Img","that","resizeImage","RoomPhotoDiamension","outputFormat","imgResized","createImage","clearRect","drawImage","dataURL","toDataURL","uploadProgress","obs","img","FormData","b64toFile","tap","updateProgressMeter","suffixes","failedNo","photo","RoomAdminComponent","RoomDetailsWrapperComponent","RoomAdminRoutingModule","cdref","roomAdminService","detailsViewIndex","rowInfo","enableOverlay","updatePayload","roomDataSource","roomnum","roomtype","roomobject","newUrls","doc","isRoom","qrcode","imageData","drawCanvas","addImage","addPage","ResizeService","ReadLocalPicService","RoomAdminService","MatTableModule","MatPaginatorModule","MatSortModule","QRCodeModule","RoomsTableComponent","RoomDetailsComponent","FileDragNDropDirective","cd","getCurrentNavigation","getToRoomList","_snackBar","givenRoomType","givenRoomSubType","uploadedPhotos","parentFun","disableButtons","windowLocation","roomImages","history","pushState","cityname","rowInfoData","internalSubSet","externalSubset","roomSubsetOptions","internal","roomSubType","givenCateringAvailability","setAllDropdowns","reactiveForm","maxLength","roomnumber","roomvisibility","isFeatureChecked","conference_phone","wireless_content_sharing","flipchart","glassboard","whiteboard","boardroom","cocktail","theatre","workshop","u_shape","miscellaneous","roomImagesFileSlug","imgArr","formValue","roomObject","allowed_keys","getExtraFeatures","excludeFromExtraFeatures","isEqAndDetail","updateAllRooms","markAsPristine","markForCheck","roomTypeDD","ddBoxClass","roomTypeOptions","roomTypeChanged","bind","roomSubsetDD","roomTypeSubsetChanged","roomVisibilityDD","roomVisibilityOptions","roomVisibilityChanged","canteringAvailabilityDD","canteringAvailabilityOptions","roomCateringChanged","subset","visibility","isCatering","arcY","arc_X_Center","otrRadius","whtRadius","innrRadius","ctx","strokeStyle","moveTo","lineTo","stroke","font","textAlign","fillText","beginPath","arc","PI","fillStyle","fillRect","roomid","win","write","downloadQRPdf","openManagePhotosModal","EXAMPLE_DATA","RoomsTableDataSource","datatwo","dataMutations","paginator","sortChange","getPagedData","getSortedData","startIndex","pageIndex","pageSize","isAsc","compare","DataSource","onDetailsClick","rowClicked","displayedColumns","dataSource","formattedInputValue","inputValue","firstChange","table","firstPage","navigationExtras","skipLocationChange","MatPaginator","MatSort","MatTable","errorMessage","NOT_FOUND_ERR","SECURITY_ERR","ABORT_ERR","NOT_READABLE_ERR","ENCODING_ERR","NO_MODIFICATION_ALLOWED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","QUOTA_EXCEEDED_ERR","TYPE_MISMATCH_ERR","PATH_EXISTS_ERR","inputFile","File","FileList","Blob","onabort","eventErrorDecoder","onerror","readAsDataURL","dataURI","byteString","atob","mimeString","ab","ArrayBuffer","ia","Uint8Array","crossOrigin","cnv","tmpCanvas","cnx","isCanvasSupported","sizeScale","resizeImageWidthHeight","resizeImageBySize","mainCanvas","pixelStepWidth","pixelStepHeight","newWidth","newHeight","resizeCanvas","targetSize","tmpResult","sizeOfTheImage","calulateImageSize","divideStrategy","iteratorLimit","newImageSize","sizeOfTheImageTmp","imgString","isForLevels","filesChangeEmiter","borderStyle","borderColor","borderRadius","dataTransfer","HostBinding","COMPONENTS","DIRECTIVES","CDK_MODULES","DragDropModule","CdkTableModule","APipesModule","ACustomEventsModule","loading_state","mod","EventFormComponent","visitorFG","createVisitor","getVisitors","removeAt","VisitorFormComponent","personChange","VisitorsFormModalComponent","fb","attendeesStatus","visitors","attendee","VisitorBookingItemComponent","matched_attendees","checked_in_users","host_email","response_type","show_attendees","is_match","checkedInStatus","subject","VisitorTimelineComponent","filtered_bookings","updateEvents","show_all","unsorted_bookings","VisitorComponent","_element","VisitorsComponent","hmr","general","copyright","booking_types","show_fields","html_body","multiple_spaces","desk_start","day_view","dragdrop","enableProdMode","platformBrowser","bootstrapModule"],"mappingsa,YAAAA,0BAAA,GAA6B,aAAAC,OAAA,CAAQ,MAAR,EAAgB,CACtD,aAAAC,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CAAb,CAFiB,CAArB,CADsD,EAKtD,aAAAH,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CAAb,CAFiB,CAArB,CALsD,CAAhB,CAA7B;AAWA,YAAAE,8BAAA,GAAiC,aAAAN,OAAA,CAAQ,MAAR,EAAgB,CAC1D,aAAAO,KAAA,CAAM,MAAN,EAAc,aAAAL,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CAAd,CAD0D,EAE1D,aAAAG,KAAA,CAAM,MAAN,EAAc,aAAAL,KAAA,CAAM;AAAEC,aAAO,EAAE,CAAX;AAAcC,YAAM,EAAE;AAAtB,KAAN,CAAd,CAF0D,EAG1D,aAAAH,UAAA,CAAW,eAAX,EAA4B,aAAAI,OAAA,CAAQ,eAAR,CAA5B,CAH0D,CAAhB,CAAjC;;;;;;;;;;;;;;;;;;;;ACbb;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAKaG,gB;;;;AAHb;;YAGaA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAFlB,CAAC,SAAAC,YAAD,CAEkB;;;;+EAAhBD,gB,EAAgB;AAAA,kBAFjB,SAAAC,YAEiB;AAAA,O;AAFL,K;;;;;2BAEXD,gB,EAAgB;cAH5B,OAAAE,QAG4B;eAHnB;AACRC,iBAAO,EAAE,CAAC,SAAAF,YAAD;AADD,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;;QAEaG,S;AAAb;AAAA;;AACI;AACU,aAAAC,OAAA,GAAsC,EAAtC;AACV;;AACU,aAAAC,UAAA,GAAyC,EAAzC;AACV;;AACU,aAAAC,cAAA,GAAoE,EAApE;AACV;;AACmB,aAAAC,YAAA,GAAe,IAAI,OAAAC,eAAJ,CAA6B,KAA7B,CAAf;AA8GtB;AA5GG;;;;;kCASoB;AAChB,eAAK,IAAMC,GAAX,IAAkB,KAAKL,OAAvB,EAAgC;AAC5B,gBAAI,KAAKA,OAAL,CAAaM,cAAb,CAA4BD,GAA5B,CAAJ,EAAsC;AAClC,mBAAKE,YAAL,CAAkBF,GAAlB;AACH;AACJ;;AACD,eAAK,IAAMA,IAAX,IAAkB,KAAKJ,UAAvB,EAAmC;AAC/B,gBAAI,KAAKA,UAAL,CAAgBK,cAAhB,CAA+BD,IAA/B,CAAJ,EAAyC;AACrC,mBAAKG,aAAL,CAAmBH,IAAnB;AACH;AACJ;;AACD,eAAK,IAAMA,KAAX,IAAkB,KAAKH,cAAvB,EAAuC;AACnC,gBAAI,KAAKA,cAAL,CAAoBI,cAApB,CAAmCD,KAAnC,CAAJ,EAA6C;AACzC,mBAAKI,KAAL,CAAWJ,KAAX;AACH;AACJ;AACJ;AAED;;;;;;;;;gCAMkBK,I,EAAcC,E,EAAqC;AAAA;;AAAA,cAArBC,KAAqB,uEAAL,GAAK;;AACjE,cAAIF,IAAI,IAAIC,EAAR,IAAcA,EAAE,YAAYE,QAAhC,EAA0C;AACtC,iBAAKN,YAAL,CAAkBG,IAAlB;AACA,iBAAKV,OAAL,CAAaU,IAAb,IAA0BI,UAAU,CAAC,YAAM;AACvCH,gBAAE;AACF,mBAAI,CAACX,OAAL,CAAaU,IAAb,IAAqB,IAArB;AACH,aAHmC,EAGjCE,KAHiC,CAApC;AAIH,WAND,MAMO;AACH,kBAAM,IAAIG,KAAJ,CACFL,IAAI,GAAG,4CAAH,GAAkD,4CADpD,CAAN;AAGH;AACJ;AAED;;;;;;;;;;;;;;;;;oBAIuBA,I,EAAc;AACjC,cAAI,KAAKV,OAAL,CAAaU,IAAb,CAAJ,EAAwB;AACpBH,wBAAY,CAAC,KAAKP,OAAL,CAAaU,IAAb,CAAD,CAAZ;AACA,iBAAKV,OAAL,CAAaU,IAAb,IAAqB,IAArB;AACH;AACJ,S;AAED;;;;;;;;;iCAMmBA,I,EAAcC,E,EAAqC;AAAA,cAArBC,KAAqB,uEAAL,GAAK;;AAClE,cAAIF,IAAI,IAAIC,EAAR,IAAcA,EAAE,YAAYE,QAAhC,EAA0C;AACtC,iBAAKL,aAAL,CAAmBE,IAAnB;AACA,iBAAKT,UAAL,CAAgBS,IAAhB,IAA6BM,WAAW,CAAC;AAAA,qBAAML,EAAE,EAAR;AAAA,aAAD,EAAaC,KAAb,CAAxC;AACH,WAHD,MAGO;AACH,kBAAM,IAAIG,KAAJ,CACFL,IAAI,GAAG,6CAAH,GAAmD,6CADrD,CAAN;AAGH;AACJ;AAED;;;;;;;;;;;;;;;;;oBAIwBA,I,EAAc;AAClC,cAAI,KAAKT,UAAL,CAAgBS,IAAhB,CAAJ,EAA2B;AACvBF,yBAAa,CAAC,KAAKP,UAAL,CAAgBS,IAAhB,CAAD,CAAb;AACA,iBAAKT,UAAL,CAAgBS,IAAhB,IAAwB,IAAxB;AACH;AACJ,S;AAED;;;;;;;;qCAKuBA,I,EAAcD,K,EAAoC;AACrE,eAAKA,KAAL,CAAWC,IAAX;AACA,eAAKR,cAAL,CAAoBQ,IAApB,IAA4BD,KAA5B;AACH;AAED;;;;;;;8BAIgBC,I,EAAc;AAC1B,cAAI,KAAKR,cAAL,IAAuB,KAAKA,cAAL,CAAoBQ,IAApB,CAA3B,EAAsD;AAClD,iBAAKR,cAAL,CAAoBQ,IAApB,aAAqC,OAAAO,YAArC,GACO,KAAKf,cAAL,CAAoBQ,IAApB,EAA2CQ,WAA3C,EADP,GAEO,KAAKhB,cAAL,CAAoBQ,IAApB,GAFP;AAGA,iBAAKR,cAAL,CAAoBQ,IAApB,IAA4B,IAA5B;AACH;AACJ;;;4BA1GqB;AAClB,iBAAO,KAAKP,YAAZ;AACH;AACD;;;;4BACyB;AACrB,iBAAO,KAAKA,YAAL,CAAkBgB,QAAlB,EAAP;AACH;;;;;;AAjBL;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAKaC,a;;;;;;;;;;;;;sCACS;AACd,eAAKC,OAAL;AACH;;;;MAH8B,aAAAtB,S;;AAHnC;;;6CAGaqB,a;AAAa,K;;;YAAbA,a;AAAa,0E;AAAA;;8DAAbA,a;;;;2BAAAA,a,EAAa;cAHzB,OAAAE,SAGyB;eAHf;AACPC,kBAAQ,EAAE;AADH,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAWaC,U;;;;AATb;;YASaA;;;;yBAAAA,U;AAAU,O;AAAA,gBARV,CAAC,SAAA5B,YAAD,CAQU;;;;+EAAV4B,U,EAAU;AAAA,uBANf,yBAAAC,oBAMe;AANK,kBAFd,SAAA7B,YAEc,CAML;AARG,kBAKlB,yBAAA6B,oBALkB;AAQH,O;AAHK,K;;;;;2BAGfD,U,EAAU;cATtB,OAAA3B,QASsB;eATb;AACNC,iBAAO,EAAE,CAAC,SAAAF,YAAD,CADH;AAEN8B,sBAAY,EAAE,CACV,yBAAAD,oBADU,CAFR;AAKNE,iBAAO,EAAE,CACL,yBAAAF,oBADK;AALH,S;AASa,Q;;;;;;;;;;;;;;;;;;;;;;ACbvB;AAAA;AAAA;;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAYG,eAAZ;;AAAA,eAAYA,eAAZ,EAA2B;AACvB;AACA;AACA;AACA;AACH,KALD,EAAYA,eAAe,GAAf,QAAAA,eAAA,aAAAA,eAAA,GAAe,EAAf,CAAZ;;QAUaC,0B;;;;;AAcT,0CAAoBC,YAApB,EAAuDC,SAAvD,EAA6E;AAAA;;AAAA;;AACzE;AADgB,eAAAD,YAAA,GAAAA,YAAA;AAAmC,eAAAC,SAAA,GAAAA,SAAA;AAZvD;;AACS,eAAAC,SAAA,GAA6BJ,eAAe,CAACK,CAA7C;AAKT;;AACO,eAAAC,WAAA,GAAwC;AAAEC,WAAC,EAAE,CAAL;AAAQC,WAAC,EAAE;AAAX,SAAxC;AAKsE;AAE5E;;;;oCAEkBC,O,EAAsB;AACrC,cAAIA,OAAO,CAACC,eAAR,IAA2B,KAAKA,eAApC,EAAqD;AACjD,iBAAKC,OAAL,GAAe,KAAKT,YAAL,CAAkBS,OAAlB,CAA0BC,aAA1B,CAAwCC,OAAxC,CACX,KAAKH,eADM,CAAf;AAGH;AACJ;;;6CAEwB;AAAA;;AACrB,eAAKI,YAAL,CACI,YADJ,EAEI,KAAKC,KAAL,CAAWN,OAAX,CAAmBO,SAAnB,CAA6B,UAACD,KAAD,EAA+B;AACxD,gBAAME,IAAI,GAAGF,KAAK,CAACG,OAAN,EAAb;AACAD,gBAAI,CAACE,OAAL,CAAa,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACvB,oBAAI,CAACP,YAAL,qBACiBO,KADjB,GAEI,MAAI,CAAClB,SAAL,CAAemB,MAAf,CAAsBF,CAAC,CAACT,OAAF,CAAUC,aAAhC,EAA+C,WAA/C,EAA4D,YAAM;AAC9D,sBAAI,CAACE,YAAL,CACI,cADJ,EAEI,MAAI,CAACX,SAAL,CAAemB,MAAf,CAAsB,QAAtB,EAAgC,SAAhC,EAA2C;AAAA,yBAAM,MAAI,CAACC,MAAL,EAAN;AAAA,iBAA3C,CAFJ;;AAIA,sBAAI,CAACC,MAAL;AACH,eAND,CAFJ;;AAUA,oBAAI,CAACV,YAAL,2BACuBO,KADvB,GAEI,MAAI,CAAClB,SAAL,CAAemB,MAAf,CAAsBF,CAAC,CAACT,OAAF,CAAUC,aAAhC,EAA+C,YAA/C,EAA6D,YAAM;AAC/D,sBAAI,CAACE,YAAL,CACI,cADJ,EAEI,MAAI,CAACX,SAAL,CAAemB,MAAf,CAAsB,QAAtB,EAAgC,UAAhC,EAA4C;AAAA,yBAAM,MAAI,CAACC,MAAL,EAAN;AAAA,iBAA5C,CAFJ;;AAIA,sBAAI,CAACC,MAAL;AACH,eAND,CAFJ;AAUH,aArBD;AAsBH,WAxBD,CAFJ;AA4BH;AAED;;;;iCACgB;AAAA;;AACZ,cAAI,KAAKb,OAAT,EAAkB;AACd,iBAAKG,YAAL,CACI,QADJ,EAEI,KAAKX,SAAL,CAAemB,MAAf,CAAsB,KAAKX,OAA3B,EAAoC,QAApC,EAA8C;AAAA,qBAAM,MAAI,CAACc,kBAAL,EAAN;AAAA,aAA9C,CAFJ;AAIH;AACJ;AAED;;;;iCACgB;AACZ,eAAK5C,KAAL,CAAW,QAAX;AACH;AAED;;;;;;6CAG6B;AAAA;;AACzB,eAAK6C,OAAL,CACI,kBADJ,EAEI,YAAM;AACF,gBAAMC,MAAM,GAAG;AAAEpB,eAAC,EAAE,MAAI,CAACI,OAAL,CAAaiB,UAAlB;AAA8BpB,eAAC,EAAE,MAAI,CAACG,OAAL,CAAakB;AAA9C,aAAf;;AACA,gBACK,CAAC,MAAI,CAACzB,SAAL,KAAmBJ,eAAe,CAAC8B,IAAnC,IACE,MAAI,CAAC1B,SAAL,KAAmBJ,eAAe,CAAC+B,CADtC,KAEGJ,MAAM,CAACnB,CAAP,KAAa,MAAI,CAACF,WAAL,CAAiBE,CAFlC,IAGC,CAAC,MAAI,CAACJ,SAAL,KAAmBJ,eAAe,CAAC8B,IAAnC,IACE,MAAI,CAAC1B,SAAL,KAAmBJ,eAAe,CAACK,CADtC,KAEGsB,MAAM,CAACpB,CAAP,KAAa,MAAI,CAACD,WAAL,CAAiBC,CANtC,EAOE;AACG,oBAAI,CAACL,YAAL,CAAkB8B,YAAlB,CAAuCC,iBAAvC;;AACA,oBAAI,CAAC/B,YAAL,CAAkB8B,YAAlB,CAAuCE,SAAvC,CAAiDf,OAAjD,CAAyD,UAAAC,CAAC;AAAA,uBACvDA,CAAC,CAACe,WAAF,KAAkBf,CAAC,CAACa,iBAAF,EAAlB,GAA0C,IADa;AAAA,eAA1D;AAGJ;;AACD,kBAAI,CAAC3B,WAAL,GAAmBqB,MAAnB;AACH,WAlBL,EAmBI,EAnBJ;AAqBH;;;;MAjG2C,iBAAAnC,a;;AAHhD;;;uBAGaS,0B,EAA0B,oC,EAAA,kC;AAAA,K;;;YAA1BA,0B;AAA0B,iE;AAAA;AAAA;sCAYlB,YAAAmC,O,EAAO,K;;;;;;;;;;;;;;;;;;2BAZfnC,0B,EAA0B;cAHtC,OAAAP,SAGsC;eAH5B;AACPC,kBAAQ,EAAE;AADH,S;AAG4B,Q;;;;;;;;gBAGlC,OAAA0C;;;gBAEA,OAAAA;;;gBAOA,OAAAC,e;iBAAgB,YAAAF,O;;;;;;;;;;;;;;;;;;;;;;;;ACnCrB;AAAA;AAAA;AAEA;;;;;AAGA,QAAMG,WAAW,GAAG,aAAa,IAAjC;;AAEa,YAAAC,QAAA,GAAW;AAAA,UAACC,YAAD,uEAAgBF,WAAhB;AAAA,aAAgC,sBAASG,GAAT,CAAa,IAAIC,IAAJ,CAASF,YAAT,CAAb,CAAhC;AAAA,KAAX;;AAEA,YAAAG,SAAA,GAAY;AAAA,aAAM,sBAASC,KAAT,EAAN;AAAA,KAAZ;;;;;;;;;;;;;;;;;;;;;ACRb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAuBA;;;;;;AAMA;;;AACa,YAAAC,iBAAA,GAAoB,UAACC,IAAD,EAAiBC,UAAjB,EAAsE;AAAA,UAAjCC,KAAiC,uEAAjB,CAAiB;AACnG,aAAOF,IAAI,CAACL,GAAL,CAAS;AAAEQ,mBAAW,EAAE,CAAf;AAAkBC,cAAM,EAAE,CAA1B;AAA6BC,cAAM,EAAEC,IAAI,CAACC,IAAL,CAAUP,IAAI,CAACK,MAAL,GAAcJ,UAAxB,IAAsCA;AAA3E,OAAT,EACFO,IADE,CACG;AAAEC,eAAO,EAAEP,KAAK,GAAG;AAAnB,OADH,CAAP,CADmG,CAEhE;AACtC,KAHY;;AAKA,YAAAQ,mBAAA,GAAsB,UAACC,MAAD,EAAiBV,UAAjB,EAAoE;AAAA,UAA/BC,KAA+B,uEAAf,CAAe;AACnG,aAAOS,MAAM,CAACC,QAAP,CAAgB;AAAET,mBAAW,EAAE,CAAf;AAAkBC,cAAM,EAAE,CAA1B;AAA6BC,cAAM,EAAEC,IAAI,CAACC,IAAL,CAAUI,MAAM,CAACF,OAAP,GAAiBR,UAA3B,IAAyCA;AAA9E,OAAhB,EACFY,QADE,CACO;AAAEJ,eAAO,EAAEP,KAAK,GAAG;AAAnB,OADP,CAAP,CADmG,CAE5D;AAC1C,KAHY;AAKb;;;;;;;AAKA,aAAgBY,iBAAhB,CAAkCC,QAAlC,EAA0E;AAAA,UAAtBC,MAAsB,uEAAL,KAAK;;AACtE,UAAI,CAACD,QAAD,IAAaA,QAAQ,GAAG,CAA5B,EAA+B;AAC3B,eAAO,EAAP;AACH;;AACD,UAAME,CAAC,GAAGX,IAAI,CAACY,KAAL,CAAWH,QAAQ,GAAG,EAAtB,CAAV;AACA,UAAII,CAAC,aAAMF,CAAC,IAAI,CAAL,GAASA,CAAC,IAAID,MAAK,GAAG,KAAH,GAAW,WAAWC,CAAC,KAAK,CAAN,GAAU,EAAV,GAAe,GAA1B,CAApB,CAAV,GAAgE,EAAtE,CAAL;;AACA,UAAIF,QAAQ,GAAG,EAAX,KAAkB,CAAtB,EAAyB;AACrB,YAAII,CAAJ,EAAO;AACHA,WAAC,IAAIH,MAAK,GAAG,GAAH,GAAS,IAAnB;AACH;;AACD,YAAMI,CAAC,GAAGL,QAAQ,GAAG,EAArB;AACAI,SAAC,cAAOC,CAAC,IAAI,CAAL,GAASA,CAAC,IAAIJ,MAAK,GAAG,MAAH,GAAY,aAAaI,CAAC,KAAK,CAAN,GAAU,EAAV,GAAe,GAA5B,CAArB,CAAV,GAAmE,EAA1E,CAAD;AACH;;AACD,aAAOD,CAAP;AACH;;AAdD;;AAgBa,YAAAE,sBAAA,GAAyB,UAACrB,IAAD;AAAA,aAA0BA,IAAI,CAACsB,UAAL,CAAgB,iBAAhB,CAA1B;AAAA,KAAzB;AAEb;;;;;;AAIa,YAAAC,oBAAA,GAAuB,UAACC,KAAD,EAChCC,SADgC,EAEhCC,SAFgC,EAEoB;AACpD;AACA;AACA;AACA,UAAI1B,IAAI,GAAG2B,KAAK,CAACH,KAAD,EAAQ,oBAAAI,qBAAA,EAAR,CAAhB;;AACA,UAAI,CAAC5B,IAAI,CAAC6B,OAAL,EAAL,EAAqB;AACjB;AACA,YAAIC,YAAY,GAAGN,KAAnB;AACA,YAAMO,KAAK,GAAGP,KAAK,CAACQ,KAAN,CAAY,GAAZ,CAAd;;AACA,YAAG,CAACR,KAAJ,EAAU;AACN,iBAAOS,SAAP;AACH;;AACD,YAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACpB,cAAIH,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,KAAoB,CAAxB,EAA2B;AACvBJ,wBAAY,aAAMC,KAAK,CAAC,CAAD,CAAX,cAAkBA,KAAK,CAAC,CAAD,CAAvB,MAAZ;AACH;AACJ,SAXgB,CAYjB;;;AACA/B,YAAI,GAAG2B,KAAK,CAACG,YAAD,EAAe,oBAAAK,iBAAA,EAAf,CAAZ,CAbiB,CAcjB;;AACA,YAAI,CAACnC,IAAI,CAAC6B,OAAL,EAAD,IAAmBJ,SAAvB,EAAkC;AAC9BzB,cAAI,GAAG2B,KAAK,CAACH,KAAD,EAAQ,GAAR,CAAZ;AACH;AACJ,OAvBmD,CAwBpD;AACA;AACA;AACA;;;AACA,UAAIxB,IAAI,CAAC6B,OAAL,EAAJ,EAAoB;AAChB;AACA7B,YAAI,GAAGA,IAAI,CAACoC,KAAL,CAAWV,SAAS,CAACU,KAAV,EAAX,EAA8BpC,IAA9B,CAAmC0B,SAAS,CAAC1B,IAAV,EAAnC,EAAqDqC,IAArD,CAA0DX,SAAS,CAACW,IAAV,EAA1D,CAAP;;AACA,YAAIX,SAAS,CAACY,IAAV,KAAmBtC,IAAI,CAACsC,IAAL,EAAnB,IAAkCtC,IAAI,CAACA,IAAL,OAAgB0B,SAAS,CAAC1B,IAAV,EAAtD,EAAwE;AACpEA,cAAI,GAAGA,IAAI,CAACL,GAAL,CAAS,MAAT,EAAiBK,IAAI,CAACsC,IAAL,KAAc,EAA/B,CAAP;AACH;AACJ;;AAED,aAAOtC,IAAI,CAAC6B,OAAL,KAAiB7B,IAAjB,GAAwBiC,SAA/B;AACH,KAvCY;AA0Cb;;;;;;;;;;AAQa,YAAAM,kBAAA,GAAqB,UAC9BC,IAD8B,EAE9BhB,KAF8B,EAG9BiB,gBAH8B,EAKrB;AAAA,UADTvC,KACS,uEADO,CACP;AACT,UAAIF,IAAI,GAAG,QAAAuB,oBAAA,CAAqBC,KAArB,EAA4B,KAA5B,EAAmCG,KAAK,CAACc,gBAAD,CAAxC,CAAX;;AACA,UAAIzC,IAAJ,EAAU;AACN,YAAM0C,SAAS,GAAG,QAAAC,QAAA,CAASC,UAAT,CAAoB5C,IAAI,CAAC6C,OAAL,EAApB,CAAlB;AACA,YAAMC,WAAW,GAAG,QAAA/C,iBAAA,CAAkB2C,SAAlB,EAA6BF,IAA7B,EAAmCtC,KAAnC,CAApB;AACA,eAAO4C,WAAW,CAACC,QAAZ,CAAqB,oBAAAZ,iBAAA,EAArB,CAAP;AACH,OAJD,MAIO;AACH,eAAOX,KAAP;AACH;AACJ,KAdY;AAeb;;;;;;;;;;;AASa,YAAAwB,sBAAA,GAAyB,UAACC,cAAD,EAClCR,gBADkC,EAElCS,KAFkC,EAER;AAE1B,UAAIlD,IAAI,GAAG,QAAAuB,oBAAA,CAAqB2B,KAArB,EAA4B,KAA5B,EAAmCvB,KAAK,CAACc,gBAAD,CAAxC,CAAX;;AAEA,UAAI,CAACzC,IAAL,EAAW;AACP;AACA,YAAMe,QAAQ,GAAGoC,QAAQ,CAACD,KAAD,CAAzB;;AACA,YAAI,OAAQnC,QAAR,KAAsB,QAAtB,IAAkCmC,KAAK,CAACE,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA1D,IAA+DrC,QAAQ,GAAG,EAA9E,EAAkF;AAC9Ef,cAAI,GAAG2B,KAAK,CAACc,gBAAD,CAAL,CAAwBY,GAAxB,CAA4BtC,QAA5B,EAAsC,GAAtC,CAAP;AACH;AACJ;;AAED,UAAIf,IAAJ,EAAU;AACN,YAAMS,OAAO,GAAGT,IAAI,CAACsD,IAAL,CAAUb,gBAAV,EAA4B,QAA5B,CAAhB;AACA,YAAMc,oBAAoB,GAAGN,cAAc,CAACO,IAAf,CAAoB,UAAArC,CAAC,EAAI;AAClD,iBAAQV,OAAO,IAAIU,CAAC,CAACsC,GAArB;AACH,SAF4B,CAA7B;;AAGA,YAAIF,oBAAJ,EAA0B;AACtB,cAAMG,MAAM,GAAG,CAACH,oBAAD,EAAuBI,MAAvB,CAA8B,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AAC1E,mBAAOD,aAAa,GAAGC,YAAY,CAAC3D,KAApC;AACH,WAFc,EAEZ,CAFY,CAAf;AAGA,cAAMwC,SAAS,GAAG,QAAAC,QAAA,CAASC,UAAT,CAAoB5C,IAAI,CAAC6C,OAAL,EAApB,CAAlB;AACA,cAAMC,WAAW,GAAG,QAAA/C,iBAAA,CAAkB2C,SAAlB,EAA6Ba,oBAAoB,CAACf,IAAlD,EAAwD,CAAxD,CAApB;AACA,iBAAOM,WAAW,CAACC,QAAZ,CAAqB,oBAAAZ,iBAAA,EAArB,CAAP;AACH;AACJ;;AAED,aAAOe,KAAP;AACH,KA9BY;;AAgCA,YAAAY,uBAAA,GAA0B,UAACC,SAAD,EAAuB;AAC1D,aAAO,QAAApB,QAAA,CAASC,UAAT,CAAoBmB,SAApB,EAA+BpE,GAA/B,CAAmC;AAAES,cAAM,EAAE,CAAV;AAAaD,mBAAW,EAAE;AAA1B,OAAnC,EAAkE6D,QAAlE,EAAP;AACH,KAFY;;AAIA,YAAAC,oBAAA,GAAuB,UAACjE,IAAD,EAA0B;AAC1D,UAAMkE,OAAO,GAAG,IAAItE,IAAJ,CAASI,IAAT,CAAhB;AACA,UAAMmE,GAAG,GAAGD,OAAO,CAACE,OAAR,EAAZ;AACA,UAAMhC,KAAK,GAAG8B,OAAO,CAACG,cAAR,CAAuB,SAAvB,EAAkC;AAAEjC,aAAK,EAAE;AAAT,OAAlC,CAAd;AACA,UAAMC,IAAI,GAAG6B,OAAO,CAACI,WAAR,EAAb;AACA,uBAAUH,GAAV,SAAgBI,SAAS,CAACJ,GAAD,CAAzB,cAAkC/B,KAAlC,cAA2CC,IAA3C,EAL0D,CAKP;AACtD,KANY;;AAQb,QAAMkC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAC1B,aAAOA,MAAM,GAAG,CAAT,GACD,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EACOA,MAAM,GAAG,CAAT,IAAcA,MAAM,GAAG,EAAxB,IAA+BA,MAAM,GAAG,EAAT,GAAc,CAA7C,GAAiD,CAAjD,GAAqDA,MAAM,GAAG,EADpE,CADC,GAID,EAJN;AAKH,KAND;;AAQa,YAAAC,mBAAA,GAAsB,YAAM;AACrC,aAAO,CACH,WADG,EAEH,WAFG,EAGH,SAHG,EAIH,QAJG,EAKH,OALG,EAOH,UAPG,EAQH,YARG,EASH,cATG,EAUH,YAVG,EAYH,SAZG,EAaH,QAbG,EAeH,UAfG,EAiBH,OAjBG,EAkBH,UAlBG,EAmBH,YAnBG,EAqBH,OArBG,EAsBH,UAtBG,EAuBH,YAvBG,EAyBH,SAzBG,EA0BH,SA1BG,EA2BH,QA3BG,EA4BH,QA5BG,EA8BH,SA9BG,EA+BH,YA/BG,EAiCH,UAjCG,EAkCH,WAlCG,EAmCH,WAnCG,EAoCH,YApCG,EAuCH,YAvCG,EAwCH,WAxCG,EAyCH,UAzCG,EA0CH,YA1CG,EA2CH,WA3CG,EA6CH,YA7CG,EA8CH,YA9CG,EA+CH,WA/CG,EAiDH,WAjDG,EAkDH,WAlDG,EAmDH,WAnDG,EAoDH,UApDG,EAsDH,QAtDG,EAuDH,OAvDG,CAuDK;AAvDL,OAAP;AA0DH,KA3DY;;;;;;;;;;;;;;;;;;;;;AClMb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA,uC,CAEA;;;AACA9C,SAAK,CAAC+C,MAAN,CAAaC,GAAb;AACAhD,SAAK,CAAC+C,MAAN,CAAaE,QAAb;AACAjD,SAAK,CAAC+C,MAAN,CAAaG,OAAb;AACAlD,SAAK,CAAC+C,MAAN,CAAaI,OAAb;AACAnD,SAAK,CAAC+C,MAAN,CAAaK,iBAAb;AAKA;;;;;;;;;AAQA,aAAgBC,GAAhB,CACIC,IADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAM8B;AAAA,UAF1BC,MAE0B,uEAFF,OAEE;AAAA,UAD1BC,KAC0B,uEADT,KACS;AAAA,UAA1BC,QAA0B,uEAAP,OAAO;;AAE1B,UAAKC,MAAc,CAACC,KAAf,IAAwBH,KAA7B,EAAoC;AAChC,YAAMI,MAAM,GAAa,CACrB,gBADqB,EAErB,gBAFqB,EAGrB,gBAHqB,CAAzB;;AAKA,YAAIN,IAAJ,EAAU;AAAA;;AACN,sBAAAO,OAAO,EAACN,MAAD,CAAP,+BACUE,QADV,iBACyBL,IADzB,iBACoCC,GADpC,UAEOO,MAFP,GAGIN,IAHJ;AAKH,SAND,MAMO;AAAA;;AACH,uBAAAO,OAAO,EAACN,MAAD,CAAP,gCAAsBE,QAAtB,iBAAqCL,IAArC,iBAAgDC,GAAhD,UAA0DO,MAA1D;AACH;AACJ;AACJ;;AAxBD;AA0BA;;;;;;AAKC,aAAgBE,eAAhB,CAAgCC,IAAhC,EAAgDC,GAAhD,EAA8D;AAC3D,UAAMnK,GAAG,GAAGkK,IAAI,CAAC,CAAD,CAAhB;;AACA,UAAIC,GAAG,IAAInK,GAAG,IAAImK,GAAlB,EAAuB;AACnB,eAAOD,IAAI,CAAC1D,MAAL,GAAc,CAAd,GACDyD,eAAe,CAACC,IAAI,CAACE,KAAL,CAAW,CAAX,CAAD,EAAgBD,GAAG,CAACnK,GAAD,CAAH,IAAY,EAA5B,CADd,GAEDmK,GAAG,CAACnK,GAAD,CAFT;AAGH;;AACD,aAAO,IAAP;AACH;;AARA;AAUD;;AACA;;;;AAGA,aAAgBqK,cAAhB,GAA8B;AAC1B,UAAMC,CAAC,GAAG,gEAAV;AACA,aAAO,CAAC,CAACC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0BH,CAA1B,CAAT;AACH;;AAHD;AAKA;;AACA;;;;AAGA,aAAgBI,cAAhB,GAA8B;AAC1B,UAAMC,KAAK,GAAGJ,SAAS,CAACC,SAAxB;AACA,aAAO,CAAC,EACJG,KAAK,CAACF,KAAN,CAAY,kBAAZ,KACAE,KAAK,CAACF,KAAN,CAAY,aAAZ,CADA,IAEA,CAACE,KAAK,CAACF,KAAN,CAAY,OAAZ,CAHG,CAAR;AAKH;;AAPD;AASA;;AACA;;;;AAGA,aAAgBG,eAAhB,GAA+B;AAC3B,UAAMD,KAAK,GAAGJ,SAAS,CAACC,SAAxB;AACA,aAAO,CAAC,EAAEG,KAAK,CAACF,KAAN,CAAY,SAAZ,KAA0BE,KAAK,CAACF,KAAN,CAAY,QAAZ,CAA5B,CAAR;AACH;;AAHD;AAKA;;;;;;AAKA,aAAgBI,OAAhB,CAAwBrD,KAAxB,EAAuChB,MAAvC,EAAqD;AACjD,UAAIsE,GAAG,GAAGtD,KAAK,CAACuD,QAAN,EAAV;;AACA,aAAOD,GAAG,CAACtE,MAAJ,GAAaA,MAApB,EAA4B;AACxBsE,WAAG,GAAG,MAAMA,GAAZ;AACH;;AACD,aAAOA,GAAP;AACH;;AAND;AAQA;;;;;;AAKA,aAAgBE,MAAhB,CAA0BC,KAA1B,EAA4E;AAAA,UAAtCjL,GAAsC,uEAAXuG,SAAW;AACxE,aAAO0E,KAAK,CAACC,MAAN,CACH,UAACC,EAAD,EAAKC,GAAL,EAAUC,GAAV;AAAA,eACIF,EAAE,IACFE,GAAG,CAAC3D,OAAJ,CACI1H,GAAG,GACGqL,GAAG,CAACvD,IAAJ,CAAS,UAACnF,CAAD;AAAA,iBAAOA,CAAC,IAAIA,CAAC,CAAC3C,GAAD,CAAD,KAAWmL,EAAE,CAACnL,GAAD,CAAzB;AAAA,SAAT,CADH,GAEGqL,GAAG,CAACvD,IAAJ,CAAS,UAACnF,CAAD;AAAA,iBAAOA,CAAC,KAAKwI,EAAb;AAAA,SAAT,CAHV,MAIMC,GANV;AAAA,OADG,CAAP;AASH;;AAVD;AAYA;;;;;;AAKA,aAAgBE,gBAAhB,CAAiCC,aAAjC,EAA+E;AAAA,UAAvBC,IAAuB,uEAAR,MAAQ;AAC3E,UAAMnG,QAAQ,GAAGT,IAAI,CAACY,KAAL,CAAW+F,aAAX,CAAjB;;AACA,UAAI,CAAClG,QAAD,IAAaA,QAAQ,GAAG,CAA5B,EAA+B;AAC3B,eAAO,EAAP;AACH;;AACD,UAAIoG,QAAQ,GAAG,KAAf;AACA,UAAIC,MAAM,GAAG;AAAEC,aAAK,EAAE,OAAT;AAAkB5G,eAAO,EAAE;AAA3B,OAAb;;AACA,cAAQyG,IAAR;AACI,aAAK,QAAL;AACIE,gBAAM,GAAG;AAAEC,iBAAK,EAAE,IAAT;AAAe5G,mBAAO,EAAE;AAAxB,WAAT;AACA;;AACJ,aAAK,OAAL;AACI2G,gBAAM,GAAG;AAAEC,iBAAK,EAAE,GAAT;AAAc5G,mBAAO,EAAE;AAAvB,WAAT;AACA0G,kBAAQ,GAAG,IAAX;AACA;AAPR;;AASA,UAAMlG,CAAC,GAAGX,IAAI,CAACY,KAAL,CAAWH,QAAQ,GAAG,EAAtB,CAAV;AACA,UAAII,CAAC,aACDF,CAAC,IAAI,CAAL,GACMA,CAAC,IACAkG,QAAQ,GAAGC,MAAM,CAACC,KAAV,GAAkBD,MAAM,CAACC,KAAP,IAAgBpG,CAAC,KAAK,CAAN,GAAU,EAAV,GAAe,GAA/B,CAD1B,CADP,GAGM,EAJL,CAAL;;AAMA,UAAIF,QAAQ,GAAG,EAAX,KAAkB,CAAtB,EAAyB;AACrB,YAAII,CAAJ,EAAO;AACHA,WAAC,IAAIgG,QAAQ,GAAG,GAAH,GAAS,IAAtB;AACH;;AACD,YAAM/F,CAAC,GAAGL,QAAQ,GAAG,EAArB;AACAI,SAAC,cACGC,CAAC,IAAI,CAAL,GACMA,CAAC,IACA+F,QAAQ,GACHC,MAAM,CAAC3G,OADJ,GAEH2G,MAAM,CAAC3G,OAAP,IAAkBW,CAAC,KAAK,CAAN,GAAU,EAAV,GAAe,GAAjC,CAHL,CADP,GAKM,EANT,CAAD;AAQH;;AACD,aAAOD,CAAP;AACH;;AAtCD;AAwCA;;;;;;;AAMA,aAAgBmG,UAAhB,CACIV,MADJ,EAEI5I,KAFJ,EAG6B;AAAA,UAAzBuJ,MAAyB,uEAAN,CAAC,IAAD,CAAM;AAEzB,UAAIC,OAAJ,CAFyB,CAGzB;;AACA,UAAMC,OAAO,GAAG,CAACb,MAAM,IAAI,EAAX,EAAec,WAAf,GAA6B1F,KAA7B,CAAmC,GAAnC,CAAhB;AACA,UAAM9D,IAAI,GAAG,EAAb;;AALyB,iDAMTuJ,OANS;AAAA;;AAAA;AAMzB,4DAAyB;AAAA,cAAdE,GAAc;;AACrB;AACA,cAAIA,GAAJ,EAAO;AACH;AACA,gBAAI,CAACzJ,IAAI,CAACyJ,GAAD,CAAT,EAAc;AACVzJ,kBAAI,CAACyJ,GAAD,CAAJ,GAAU,CAAV;AACH;;AACDzJ,gBAAI,CAACyJ,GAAD,CAAJ;AACH;AACJ,SAfwB,CAgBzB;;AAhByB;AAAA;AAAA;AAAA;AAAA;;AAiBzB,UAAMC,KAAK,GAAG,EAAd;;AACA,WAAK,IAAMD,CAAX,IAAgBzJ,IAAhB,EAAsB;AAClB;AACA,YAAIA,IAAI,CAACvC,cAAL,CAAoBgM,CAApB,CAAJ,EAA4B;AACxBC,eAAK,CAACC,IAAN,CAAW;AAAEC,gBAAI,EAAEH,CAAR;AAAWI,iBAAK,EAAE7J,IAAI,CAACyJ,CAAD,CAAtB;AAA2BK,iBAAK,EAAE,IAAIC,MAAJ,CAAWN,CAAX,EAAc,IAAd;AAAlC,WAAX;AACH;AACJ;;AACDC,WAAK,CAACM,IAAN,CACI,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,CAACN,IAAF,CAAO5F,MAAP,GAAgBiG,CAAC,CAACL,IAAF,CAAO5F,MAAvB,IAAiCiG,CAAC,CAACL,IAAF,CAAOO,aAAP,CAAqBD,CAAC,CAACN,IAAvB,CAA3C;AAAA,OADJ;AAGA,UAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAezK,KAAK,IAAI,EAAxB,CAAX,CAAlB;AACA;;AACA,UAAI4I,MAAJ,EAAY;AACRY,eAAO,GAAGc,SAAS,CAAC1B,MAAV,CAAiB,UAAC8B,IAAD,EAAU;AACjC,cAAIC,WAAW,GAAG,CAAlB;AACAD,cAAI,CAACE,WAAL,GAAmB,KAAnB;AACAF,cAAI,CAACvC,KAAL,GAAa,EAAb;AACA,cAAM0C,UAAU,GAAG,EAAnB,CAJiC,CAKjC;;AALiC,sDAMjBtB,MANiB;AAAA;;AAAA;AAMjC,mEAAwB;AAAA,kBAAbI,GAAa;AACpBkB,wBAAU,CAAClB,GAAD,CAAV,GAAgB;AACZzE,qBAAK,EAAE,CAACwF,IAAI,CAACf,GAAD,CAAJ,IAAW,EAAZ,EAAgBD,WAAhB,EADK;AAEZpJ,qBAAK,EAAE,KAFK;AAGZwK,uBAAO,EAAE;AAHG,eAAhB;AAKH,aAZgC,CAajC;;AAbiC;AAAA;AAAA;AAAA;AAAA;;AAAA,sDAcjBlB,KAdiB;AAAA;;AAAA;AAcjC,mEAAuB;AAAA,kBAAZvJ,CAAY;;AACnB;AACA,kBAAIA,CAAC,CAACyJ,IAAN,EAAY;AACR;AADQ,4DAEQP,MAFR;AAAA;;AAAA;AAER,yEAAwB;AAAA,wBAAbI,GAAa;AACpB,wBAAMoB,KAAK,GAAGF,UAAU,CAAClB,GAAD,CAAxB;AACA,wBAAMrJ,KAAK,GAAGyK,KAAK,CAAC7F,KAAN,CAAYE,OAAZ,CAAoB/E,CAAC,CAACyJ,IAAtB,CAAd;AACAiB,yBAAK,CAACzK,KAAN,GAAcA,KAAK,GAAGyK,KAAK,CAACzK,KAAd,GAAsBA,KAAtB,GAA8ByK,KAAK,CAACzK,KAAlD;AACAyK,yBAAK,CAACC,OAAN,GAAgB,CACZD,KAAK,CAAC7F,KAAN,CAAYiD,KAAZ,CAAkB9H,CAAC,CAAC2J,KAApB,KAA8B,EADlB,EAEd9F,MAFF;AAGA6G,yBAAK,CAAC7F,KAAN,GAAc6F,KAAK,CAAC7F,KAAN,CAAY+F,OAAZ,CAAoB5K,CAAC,CAAC2J,KAAtB,EAA6B,GAA7B,CAAd;AACH,mBAVO,CAWR;;AAXQ;AAAA;AAAA;AAAA;AAAA;;AAAA,4DAYQT,MAZR;AAAA;;AAAA;AAYR,yEAAwB;AAAA,wBAAbI,GAAa;AACpB,wBAAMoB,MAAK,GAAGF,UAAU,CAAClB,GAAD,CAAxB;AACA;;AACA,wBAAIoB,MAAK,CAACC,OAAN,IAAiB3K,CAAC,CAAC0J,KAAvB,EAA8B;AAC1BY,iCAAW,GADe,CAE1B;;AACA,0BAAIO,OAAO,GAAG,CAAd;AACA,0BAAMC,MAAM,GAAG,CACXT,IAAI,iBAAUf,GAAV,EAAJ,IACAe,IAAI,CAACf,GAAD,CADJ,IAEA,EAHW,EAIb3F,KAJa,CAIP,GAJO,CAAf;;AAJ0B,kEASVmH,MATU;AAAA;;AAAA;AAS1B,+EAAwB;AAAA,8BAAbC,CAAa;;AACpB;AACA,8BAAIF,OAAO,IAAI7K,CAAC,CAAC0J,KAAjB,EAAwB;AACpB;AACH;AACD;;;AACA,8BACIqB,CAAC,CAAC1B,WAAF,GAAgBtE,OAAhB,CAAwB/E,CAAC,CAACyJ,IAA1B,KAAmC,CAAnC,IACAsB,CAAC,CAAChG,OAAF,CAAU,GAAV,IAAiB,CAFrB,EAGE;AACE+F,kCAAM,CAACA,MAAM,CAAC/F,OAAP,CAAegG,CAAf,CAAD,CAAN,GAA4BA,CAAC,CAACH,OAAF,CACxB5K,CAAC,CAAC2J,KADsB,EAExB,MAFwB,CAA5B;AAIAkB,mCAAO;AACV;AACJ;AAzByB;AAAA;AAAA;AAAA;AAAA;;AA0B1BR,0BAAI,iBAAUf,GAAV,EAAJ,GAAqBwB,MAAM,CAACE,IAAP,CAAY,GAAZ,CAArB;AACA;AACH;AACJ;AA5CO;AAAA;AAAA;AAAA;AAAA;AA6CX;AACJ,aA9DgC,CA+DjC;;AA/DiC;AAAA;AAAA;AAAA;AAAA;;AAAA,sDAgEjB9B,MAhEiB;AAAA;;AAAA;AAgEjC,mEAAwB;AAAA,kBAAbI,GAAa;AACpB,kBAAMoB,OAAK,GAAGF,UAAU,CAAClB,GAAD,CAAxB;AACA;;AACA,kBAAIoB,OAAK,CAACzK,KAAN,GAAcoK,IAAI,CAACE,WAAnB,IAAkCG,OAAK,CAACzK,KAAN,IAAe,CAArD,EAAwD;AACpDoK,oBAAI,CAACE,WAAL,GAAmBG,OAAK,CAACzK,KAAzB;AACAoK,oBAAI,CAACvC,KAAL,GAAawB,GAAb;AACH;AACJ;AAvEgC;AAAA;AAAA;AAAA;AAAA;;AAwEjC,iBACIe,IAAI,CAACE,WAAL,IAAoB,CAApB,IACAF,IAAI,CAACvC,KADL,IAEAwC,WAAW,IAAIf,KAAK,CAAC1F,MAHzB;AAKH,SA7ES,CAAV;AA8EH,OA/ED,MA+EO;AACHsF,eAAO,GAAGc,SAAV;AACH,OA9GwB,CA+GzB;;;AACAd,aAAO,CAACU,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,YAAM9E,IAAI,GAAG6E,CAAC,CAACS,WAAF,GAAgBR,CAAC,CAACQ,WAA/B;AACA,eAAOtF,IAAI,KAAK,CAAT,GAAa6E,CAAC,CAACpM,IAAF,CAAOsM,aAAP,CAAqBD,CAAC,CAACrM,IAAvB,CAAb,GAA4CuH,IAAnD;AACH,OAHD;AAIA,aAAOkE,OAAP;AACH;;AAxHD;AA0HA;;;;;AAIA,aAAgB8B,gBAAhB,CAAiC9C,GAAjC,EAA4C;AACxC;AACA,UAAIA,GAAJ,EAAS;AACLA,WAAG,GAAGA,GAAG,CAACyC,OAAJ,CACF,yBADE,EAEF,mCAFE,CAAN;AAIAzC,WAAG,GAAGA,GAAG,CAACyC,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;AACH;;AACD,aAAOzC,GAAP;AACH;;AAVD;AAYA;;;;;AAIA,aAAgB+C,UAAhB,CAA2BC,IAA3B,EAAuC;AACnC,UAAM5B,KAAK,GAAG4B,IAAI,CAACxH,KAAL,CAAW,GAAX,CAAd;AACA,UAAMhC,IAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EACRgB,QADQ,CACC;AACN0B,YAAI,EAAE,CAACsF,KAAK,CAAC,CAAD,CADN;AAENvH,cAAM,EAAE,CAACuH,KAAK,CAAC,CAAD;AAFR,OADD,EAKR8B,YALQ,CAKK,QALL,CAAb;AAMA,aAAO1J,IAAI,CAAC2J,EAAZ;AACH;;AATD;AAWA;;;;;;AAKA,aAAgBC,SAAhB,CAA0BrJ,IAA1B,EAA2D;AAAA,UAAnBW,KAAmB,uEAAH,CAAG;AACvD,aAAOZ,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,MAAiBtJ,IAAI,GAAGW,KAAxB,CAAX,IAA6CA,KAApD;AACH;;AAFD;AAIA;;;;;AAIA,aAAgB4I,gBAAhB,GAAgC;AAC5B,aAAOC,YAAY,KAAK,OAAL,GAAe,OAAlC;AACH;;AAFD;;AAIa,YAAAC,YAAA,GAAe;AAAA,aAAeD,YAAY,KAAK,OAAL,GAAe,OAA1C;AAAA,KAAf;;AAEb,aAAgBnI,qBAAhB,GAAqC;AACjC,aAAOmI,YAAY,KAAK,OAAL,GAAe,OAAlC;AACH;;AAFD;;AAIa,YAAA5H,iBAAA,GAAoB;AAAA,aAC7B4H,YAAY,KAAK,OAAL,GAAe,MADE;AAAA,KAApB;AAGb;;;;;;AAIa,YAAAE,kBAAA,GAAqB,UAC9BC,YAD8B,EAET;AACrB,UAAIC,IAAJ;;AACA,UAAID,YAAJ,EAAkB;AACd,YAAI;AACAC,cAAI,GAAG,UAAAV,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2BF,YAA3B,CAAP;AACH,SAFD,CAEE,OAAOG,CAAP,EAAU,CACR;AACA;AACH;AACJ;;AACD,aAAOF,IAAP;AACH,KAbY;;AAeA,YAAAG,eAAA,GAAkB,UAACtK,IAAD;AAAA,aAC3B,CAAC,CAACA,IAAF,aAAYA,IAAI,CAACsB,UAAL,CAAgB,MAAhB,CAAZ,IAAwC,EADb;AAAA,KAAlB;;AAEA,YAAAiJ,gBAAA,GAAmB,UAACvK,IAAD;AAAA,aAC5B,CAAC,CAACA,IAAF,iBAAgBA,IAAI,CAACsB,UAAL,CAAgB,IAAhB,CAAhB,SAA2C,EADf;AAAA,KAAnB;AAGb;;;;;;AAIA,aAAgBkJ,wBAAhB,CAAyCxK,IAAzC,EAAqD;AACjD,uBAAUA,IAAI,CACTsB,UADK,CACMwI,gBAAgB,EADtB,EAELW,iBAFK,EAAV,cAE4B,QAAAH,eAAA,CAAgBtK,IAAhB,CAF5B;AAGH;;AAJD;;AAMA,aAAgB0K,6BAAhB,CAA8C1K,IAA9C,EAA0D;AACtD,uBAAUA,IAAI,CACTsB,UADK,CACMwI,gBAAgB,EADtB,EAELW,iBAFK,EAAV,cAE4B,QAAAF,gBAAA,CAAiBvK,IAAjB,CAF5B;AAGH;;AAJD;AAMA;;;;;;;;AAOA,aAAgB2K,wBAAhB,CACIC,WADJ,EAEIC,SAFJ,EAEqB;AAEjB,uBAAUD,WAAW,CAChBtJ,UADK,CACMwI,gBAAgB,EADtB,EAELW,iBAFK,EAAV,cAE4BI,SAAS,CAChCvJ,UADuB,CACZwI,gBAAgB,EADJ,EAEvBW,iBAFuB,EAF5B;AAKH;;AATD;AAWA;;;;;;;;AAOA,aAAgBK,gCAAhB,CACIF,WADJ,EAEIC,SAFJ,EAEqB;AAEjB,uBAAUD,WAAW,CAChBtJ,UADK,CACMwI,gBAAgB,EADtB,EAELW,iBAFK,EAAV,cAE4BI,SAAS,CAChCvJ,UADuB,CACZwI,gBAAgB,EADJ,EAEvBW,iBAFuB,EAF5B,cAI4B,QAAAF,gBAAA,CAAiBK,WAAjB,CAJ5B;AAKH;;AATD;AAWA;;;;;;AAKA,aAAgBG,qBAAhB,CAAsC/K,IAAtC,EAAoDgL,KAApD,EAAmE;AAC/D,UAAIA,KAAJ,EAAW;AACP,eAAOhL,IAAI,CAACiL,eAAL,CAAqB,mBAArB,CAAP;AACH;;AACD,aAAOjL,IAAI,CAACiL,eAAL,CAAqB,kBAArB,CAAP;AACH;;AALD;;AAOA,aAAgBC,wBAAhB,CACIlL,IADJ,EAEIgL,KAFJ,EAEmB;AAEf,UAAIA,KAAJ,EAAW;AACP,eAAOhL,IAAI,CAACsB,UAAL,CAAgB,mBAAhB,CAAP;AACH;;AACD,aAAOtB,IAAI,CAACsB,UAAL,CAAgB,kBAAhB,CAAP;AACH;;AARD;;AAUA,aAAgB6J,4BAAhB,CACInL,IADJ,EAEIgL,KAFJ,EAEmB;AAEf,UAAIA,KAAJ,EAAW;AACP,eAAOhL,IAAI,CAACiL,eAAL,CAAqB,iBAArB,CAAP;AACH;;AACD,aAAOjL,IAAI,CAACiL,eAAL,CAAqB,gBAArB,CAAP;AACH;;AARD;;AAUA,aAAgBG,+BAAhB,CACIpL,IADJ,EAEIgL,KAFJ,EAEmB;AAEf,UAAIA,KAAJ,EAAW;AACP,eAAOhL,IAAI,CAACsB,UAAL,CAAgB,iBAAhB,CAAP;AACH;;AACD,aAAOtB,IAAI,CAACsB,UAAL,CAAgB,gBAAhB,CAAP;AACH;;AARD;AAUA;;AACA,aAAgByI,YAAhB,GAA4B;AACxB,UAAM/J,IAAI,GAAG,IAAIJ,IAAJ,EAAb;AACA,UAAMyL,YAAY,GAAGrL,IAAI,CACpBsL,kBADgB,CAEbC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,YAA/B,CAA4C,MAA5C,KACIxF,SAAS,CAACyF,QAHD,EAKhBhE,WALgB,EAArB;AAMA,aAAO2D,YAAY,CAACjI,OAAb,CAAqB,IAArB,IAA6B,CAA7B,IAAkCiI,YAAY,CAACjI,OAAb,CAAqB,IAArB,IAA6B,CAAtE;AACH;;AATD;AAWA;;AACA;;;;;;AAKA,aAAgBuI,YAAhB,CAA6BC,QAA7B,EAA+CC,QAA/C,EAAiE;AAC7D,UAAMjO,OAAO,GAAG2N,QAAQ,CAACO,aAAT,CAAuB,GAAvB,CAAhB;AACAlO,aAAO,CAACmO,YAAR,CACI,MADJ,EAEI,mCACIC,kBAAkB,CAAC,WAAWH,QAAZ,CAH1B;AAKAjO,aAAO,CAACmO,YAAR,CAAqB,UAArB,EAAiCH,QAAjC;AAEAhO,aAAO,CAAClD,KAAR,CAAcuR,OAAd,GAAwB,MAAxB;AACAV,cAAQ,CAACW,IAAT,CAAcC,WAAd,CAA0BvO,OAA1B;AAEAA,aAAO,CAACwO,KAAR;AAEAb,cAAQ,CAACW,IAAT,CAAcG,WAAd,CAA0BzO,OAA1B;AACH;;AAfD;AAiBA;;;;;AAIA,aAAgB0O,SAAhB,CAA0BC,GAA1B,EAAuC;AACnC,UAAMC,KAAK,GAAGD,GAAG,CAACvK,KAAJ,CAAU,IAAV,CAAd;AACA,UAAIuF,MAAM,GAAGiF,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBzK,KAAtB,CAA4B,GAA5B,CAAb;AACAuF,YAAM,GAAGA,MAAM,CAAC1B,GAAP,CAAW,UAAC6G,CAAD;AAAA,eAAOA,CAAC,CAACzD,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAP;AAAA,OAAX,CAAT;AACA,UAAM/K,IAAI,GAAU,EAApB;;AAJmC,kDAKhBsO,KALgB;AAAA;;AAAA;AAKnC,+DAA0B;AAAA,cAAfG,IAAe;AACtB,cAAI/E,KAAK,GAAG+E,IAAI,CAAC3K,KAAL,CAAW,GAAX,CAAZ;AACA4F,eAAK,GAAGA,KAAK,CAAC/B,GAAN,CAAU,UAAC6G,CAAD;AAAA,mBAAOA,CAAC,CAACzD,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAP;AAAA,WAAV,CAAR;AACA;;AACA,cAAIrB,KAAK,CAAC1F,MAAN,IAAgBqF,MAAM,CAACrF,MAA3B,EAAmC;AAC/B,gBAAMwG,IAAI,GAAQ,EAAlB;;AACA,iBAAK,IAAIrK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIuJ,KAAK,CAAC1F,MAA3B,EAAmC7D,CAAC,EAApC,EAAwC;AACpC,kBAAIuO,IAAI,GAAG,IAAX;AACAA,kBAAI,GAAGhF,KAAK,CAACvJ,CAAD,CAAZ;AACA;;AACA,kBAAIuO,IAAI,KAAK3K,SAAb,EAAwB;AACpByG,oBAAI,CAAC,CAACnB,MAAM,CAAClJ,CAAD,CAAN,IAAa,EAAd,EAAkB2D,KAAlB,CAAwB,GAAxB,EAA6BqH,IAA7B,CAAkC,GAAlC,EAAuC3B,WAAvC,EAAD,CAAJ,GACIkF,IADJ;AAEH;AACJ;;AACD1O,gBAAI,CAAC2J,IAAL,CAAUa,IAAV;AACH;AACJ;AAtBkC;AAAA;AAAA;AAAA;AAAA;;AAwBnC,aAAOxK,IAAP;AACH;;AAzBD;AA2BA;;;;;AAIA,aAAgB2O,SAAhB,CAA0BC,IAA1B,EAA2C;AACvC;AACA,UAAIA,IAAI,YAAYC,KAAhB,IAAyBD,IAAI,CAAC5K,MAAL,GAAc,CAA3C,EAA8C;AAC1C,YAAM0D,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAYkH,IAAI,CAAC,CAAD,CAAhB,CAAb;AACA,YAAMG,UAAU,GAAGrH,IAAI,CAACgB,MAAL,CAAY,UAAClL,GAAD;AAAA,iBAASoR,IAAI,CAAC,CAAD,CAAJ,CAAQnR,cAAR,CAAuBD,GAAvB,CAAT;AAAA,SAAZ,CAAnB;AACA,yBAAUuR,UAAU,CAAC5D,IAAX,CAAgB,GAAhB,CAAV,eAAmCyD,IAAI,CAClCjH,GAD8B,CAC1B,UAAC6C,IAAD;AAAA,iBACDuE,UAAU,CACLpH,GADL,CACS,UAACnK,GAAD,EAAS;AACV,mBAAO,OAAOgN,IAAI,CAAChN,GAAD,CAAX,KAAqB,SAArB,eACGgN,IAAI,CAAChN,GAAD,CAAJ,IAAa,EADhB,UAEDgN,IAAI,CAAChN,GAAD,CAFV;AAGH,WALL,EAMK2N,IANL,CAMU,GANV,CADC;AAAA,SAD0B,EAU9BA,IAV8B,CAUzB,IAVyB,CAAnC;AAWH;;AACD,aAAO,EAAP;AACH;;AAlBD;AAoBA;;AACA;;;;;AAIA,aAAgB6D,QAAhB,GAA2B;AACvB,UAAIC,EAAE,GAAG5H,MAAM,CAACU,SAAP,CAAiBC,SAA1B;AAEA,UAAIkH,IAAI,GAAGD,EAAE,CAAC/J,OAAH,CAAW,OAAX,CAAX;;AACA,UAAIgK,IAAI,GAAG,CAAX,EAAc;AACV;AACA,eAAOjK,QAAQ,CAACgK,EAAE,CAACE,SAAH,CAAaD,IAAI,GAAG,CAApB,EAAuBD,EAAE,CAAC/J,OAAH,CAAW,GAAX,EAAgBgK,IAAhB,CAAvB,CAAD,EAAgD,EAAhD,CAAf;AACH;;AAED,UAAIE,OAAO,GAAGH,EAAE,CAAC/J,OAAH,CAAW,UAAX,CAAd;;AACA,UAAIkK,OAAO,GAAG,CAAd,EAAiB;AACb;AACA,YAAIC,EAAE,GAAGJ,EAAE,CAAC/J,OAAH,CAAW,KAAX,CAAT;AACA,eAAOD,QAAQ,CAACgK,EAAE,CAACE,SAAH,CAAaE,EAAE,GAAG,CAAlB,EAAqBJ,EAAE,CAAC/J,OAAH,CAAW,GAAX,EAAgBmK,EAAhB,CAArB,CAAD,EAA4C,EAA5C,CAAf;AACH;;AAED,UAAIC,IAAI,GAAGL,EAAE,CAAC/J,OAAH,CAAW,OAAX,CAAX;;AACA,UAAIoK,IAAI,GAAG,CAAX,EAAc;AACV;AACA,eAAOrK,QAAQ,CAACgK,EAAE,CAACE,SAAH,CAAaG,IAAI,GAAG,CAApB,EAAuBL,EAAE,CAAC/J,OAAH,CAAW,GAAX,EAAgBoK,IAAhB,CAAvB,CAAD,EAAgD,EAAhD,CAAf;AACH,OApBsB,CAsBvB;;;AACA,aAAO,KAAP;AACH;;AAxBD;AA0BA;;;;;AAIA,aAAgBC,YAAhB,CAA6BC,KAA7B,EAA2D;AACvD,UAAI,CAACA,KAAL,EAAY;AACR,eAAO;AAAElQ,WAAC,EAAE,CAAC,CAAN;AAASC,WAAC,EAAE,CAAC;AAAb,SAAP;AACH;;AACD,UAAIiQ,KAAK,YAAYC,UAArB,EAAiC;AAC7B,eAAO;AAAEnQ,WAAC,EAAEkQ,KAAK,CAACE,OAAX;AAAoBnQ,WAAC,EAAEiQ,KAAK,CAACG;AAA7B,SAAP;AACH,OAFD,MAEO;AACH,eAAOH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACI,OAAN,CAAc5L,MAAd,GAAuB,CAAxC,GACD;AAAE1E,WAAC,EAAEkQ,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,OAAtB;AAA+BnQ,WAAC,EAAEiQ,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBD;AAAnD,SADC,GAED;AAAErQ,WAAC,EAAE,CAAC,CAAN;AAASC,WAAC,EAAE,CAAC;AAAb,SAFN;AAGH;AACJ;;AAXD;AAaA;;AACA;;;;;AAIA,aAAgBsQ,OAAhB,CAAiCC,QAAjC,EAAgD;AAC5C,UAAMC,KAAK,sBAAOD,QAAP,CAAX;;AACA,UAAME,GAAG,GAAG,EAAZ;;AACA,aAAOD,KAAK,CAAC/L,MAAb,EAAqB;AACjB;AACA,YAAMiM,IAAI,GAAGF,KAAK,CAACG,GAAN,EAAb;;AACA,YAAIrB,KAAK,CAACsB,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACrB;AACAF,eAAK,CAACpG,IAAN,OAAAoG,KAAK,qBAASE,IAAT,EAAL;AACH,SAHD,MAGO;AACHD,aAAG,CAACrG,IAAJ,CAASsG,IAAT;AACH;AACJ,OAZ2C,CAa5C;;;AACA,aAAOD,GAAG,CAACI,OAAJ,EAAP;AACH;;AAfD;AAiBA,QAAMC,IAAI,GAAGC,KAAK,CAAC,SAAD,CAAlB;AACA,QAAMC,IAAI,GAAGC,KAAK,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqCH,IAAI,EAAzC,CAAlB;;AAEA,aAAgBI,oBAAhB,GAA4E;AAAA,UAAvCpO,IAAuC,uEAAxB,GAAwB;AAAA,UAAnBW,KAAmB,uEAAH,CAAG;AACxE,aAAOZ,IAAI,CAACY,KAAL,CAAWuN,IAAI,MAAMlO,IAAI,GAAGW,KAAb,CAAf,IAAsCA,KAA7C;AACH;;AAFD,wD,CAIA;;AACA,aAASsN,KAAT,CAAehI,GAAf,EAAoB;AAChB,WAAK,IAAInI,CAAC,GAAG,CAAR,EAAW4C,CAAC,GAAG,aAAauF,GAAG,CAACtE,MAArC,EAA6C7D,CAAC,GAAGmI,GAAG,CAACtE,MAArD,EAA6D7D,CAAC,EAA9D;AACK4C,SAAC,GAAGX,IAAI,CAACsO,IAAL,CAAU3N,CAAC,GAAGuF,GAAG,CAACqI,UAAJ,CAAexQ,CAAf,CAAd,EAAiC,UAAjC,CAAL,EACK4C,CAAC,GAAIA,CAAC,IAAI,EAAN,GAAaA,CAAC,KAAK,EAD5B;AADJ;;AAGA,aAAO,YAAY;AACfA,SAAC,GAAGX,IAAI,CAACsO,IAAL,CAAU3N,CAAC,GAAIA,CAAC,KAAK,EAArB,EAA0B,UAA1B,CAAJ;AACAA,SAAC,GAAGX,IAAI,CAACsO,IAAL,CAAU3N,CAAC,GAAIA,CAAC,KAAK,EAArB,EAA0B,UAA1B,CAAJ;AACA,eAAO,CAACA,CAAC,IAAIA,CAAC,KAAK,EAAZ,MAAoB,CAA3B;AACH,OAJD;AAKH;;AAED,aAASyN,KAAT,CAAevG,CAAf,EAAkBC,CAAlB,EAAqB0G,CAArB,EAAwB3N,CAAxB,EAA2B;AACvB,aAAO,YAAY;AACfgH,SAAC,MAAM,CAAP;AACAC,SAAC,MAAM,CAAP;AACA0G,SAAC,MAAM,CAAP;AACA3N,SAAC,MAAM,CAAP;AACA,YAAI4N,CAAC,GAAI5G,CAAC,GAAGC,CAAL,GAAU,CAAlB;AACAD,SAAC,GAAGC,CAAC,GAAIA,CAAC,KAAK,CAAf;AACAA,SAAC,GAAI0G,CAAC,IAAIA,CAAC,IAAI,CAAT,CAAF,GAAiB,CAArB;AACAA,SAAC,GAAIA,CAAC,IAAI,EAAN,GAAaA,CAAC,KAAK,EAAvB;AACA3N,SAAC,GAAIA,CAAC,GAAG,CAAL,GAAU,CAAd;AACA4N,SAAC,GAAIA,CAAC,GAAG5N,CAAL,GAAU,CAAd;AACA2N,SAAC,GAAIA,CAAC,GAAGC,CAAL,GAAU,CAAd;AACA,eAAO,CAACA,CAAC,KAAK,CAAP,IAAY,UAAnB;AACH,OAbD;AAcH;;AAED,aAAgBC,oBAAhB,CAAqCC,UAArC,EAAuD;AACnD,UAAI1J,MAAJ,EAAY;AACR,eAAOA,MAAM,CAAC2J,UAAP,GAAoBD,UAA3B;AACH;;AACD,aAAO,KAAP;AACH;;AALD;;AAOA,aAAgBE,WAAhB,CAA4B3I,GAA5B,EAAuC;AACnC,aAAO,OAAOA,GAAP,KAAe,QAAf,GACDA,GAAG,CACEkB,WADL,GAEK1F,KAFL,CAEW,GAFX,EAGK6D,GAHL,CAGS,UAAUiC,IAAV,EAAgB;AACjB,eAAOA,IAAI,CAACmB,OAAL,CAAanB,IAAI,CAAC,CAAD,CAAjB,EAAsBA,IAAI,CAAC,CAAD,CAAJ,CAAQsH,WAAR,EAAtB,CAAP;AACH,OALL,EAMK/F,IANL,CAMU,GANV,CADC,GAQD,EARN;AASH;;AAVD;;;;;;;;;;;;;;;;;;;;ACxqBA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAOagG,c;;;;;;;;;;;;;sCAGS;AACd,eAAK3S,OAAL;AACH;;;;MAL+B,aAAAtB,S;;AAHpC;;;8CAGaiU,c;AAAc,K;;;YAAdA,c;AAAc,2E;AAAA;;+DAAdA,c;;;;2BAAAA,c,EAAc;cAH1B,OAAA1S,SAG0B;eAHhB;AACPC,kBAAQ,EAAE;AADH,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;AAAA;;;;;;QASaE,oB;AAET,oCAAoBwS,GAApB,EAAqC;AAAA;;AAAjB,aAAAA,GAAA,GAAAA,GAAA;AACnB;;;;sCAEgD5B,K,EAAO;AACpD,cAAM6B,WAAW,GAAG,KAAKD,GAAL,CAASzR,aAAT,CAAuBqF,KAA3C;AACA,eAAKoM,GAAL,CAASzR,aAAT,CAAuBqF,KAAvB,GAA+BqM,WAAW,CAACtG,OAAZ,CAAoB,UAApB,EAAgC,EAAhC,CAA/B;;AACA,cAAIsG,WAAW,KAAK,KAAKD,GAAL,CAASzR,aAAT,CAAuBqF,KAA3C,EAAkD;AAC9CwK,iBAAK,CAAC8B,eAAN;AACH;AACJ;;;;;;AAdL;;;uBAGa1S,oB,EAAoB,mC;AAAA,K;;;YAApBA,oB;AAAoB,4E;AAAA;AAAA;;mBAApB,yB;AAAqB,W;;;;;;;2BAArBA,oB,EAAoB;cAHhC,OAAAH,SAGgC;eAHtB;AACPC,kBAAQ,EAAE;AADH,S;AAGsB,Q;;;;;;gBAK5B,OAAA6S,Y;iBAAa,O,EAAS,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;;;;;ACd3B;AAAA;AAAA;;;;;;QAKaC,W;;;;;;;kCAECxM,K,EAAmD;AAAA,cAApCyM,IAAoC,uEAArB,GAAqB;AAAA,cAAhBC,EAAgB,uEAAH,GAAG;AACzD,iBAAO,CAAC1M,KAAK,IAAG,EAAT,EAAalB,KAAb,CAAmB2N,IAAnB,EAAyBtG,IAAzB,CAA8BuG,EAA9B,CAAP;AACH;;;;;;AAPL;;;uBAGaF,W;AAAW,K;;;;YAAXA,W;AAAW;;;;;2BAAXA,W,EAAW;cAHvB,OAAAG,IAGuB;eAHlB;AACJ9T,cAAI,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAKa,YAAA+T,oBAAA,GAAuB,UAAC/U,KAAD;AAAA,aAAiCA,KAAK,CAACgV,QAAvC;AAAA,KAAvB;;AAEA,YAAAC,qBAAA,GAAwB,QAAAC,YAAA,CAAa,qCAAb,EAAoD,QAAAC,KAAA,EAApD,CAAxB;AAEA,YAAAC,2BAAA,GAA8B,kBAAAC,mBAAA,CAA6E,kBAA7E,EAAiG,UAAjG,CAA9B;AAEA,YAAAC,2BAAA,GAA8B,kBAAAD,mBAAA,CAA6E,kBAA7E,EAAiG,UAAjG,CAA9B;AAEA,YAAAE,uBAAA,GAA0B,kBAAAF,mBAAA,CAA6E,cAA7E,EAA6F,MAA7F,CAA1B;AAEA,YAAAG,4BAAA,GAA+B,kBAAAH,mBAAA,CAA6E,mBAA7E,EAAkG,WAAlG,CAA/B;AAEA,YAAAI,sBAAA,GAAyB,kBAAAJ,mBAAA,CAA6E,aAA7E,EAA4F,aAA5F,CAAzB;AAEA,YAAAK,uBAAA,GAA0B,QAAAR,YAAA,CAAa,kCAAb,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;AC7Bb;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAIA;AAAA;AAAA;;;;;;;;;;;;;;QAGaS,e,GACT,yBAAoBC,OAApB,EACoBC,cADpB,EAC8D;AAAA;;AAAA;;AAD1C,WAAAD,OAAA,GAAAA,OAAA;AACA,WAAAC,cAAA,GAAAA,cAAA;AAIb,WAAAC,2CAAA,GAA8C,KAAKF,OAAL,CAAaG,IAAb,CACjD,UAAAC,MAAA,CAAO,mBAAAf,qBAAP,CADiD,EAEjD,YAAAgB,QAAA,CAAS,UAACC,MAAD,EAAiD;AACtD,YAAMjR,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,cAAI,EAAEiR,MAAM,CAACtB;AAAd,SAAX,CAAb;AACA,YAAMwB,mBAAmB,GAAG;AACxBC,eAAK,EAAEH,MAAM,CAACG,KADU;AAExBC,oBAAU,EAAE,IAFY;AAGxBC,eAAK,EAAE,CAHiB;AAIxB5N,gBAAM,EAAEuN,MAAM,CAACvN,MAJS;AAKxB6N,wBAAc,EAAE,KALQ;AAMxBrJ,cAAI,EAAE,iBANkB;AAOxBT,iBAAO,EAAE;AACL+J,qBAAS,cAAOxR,IAAI,CAACyR,aAAL,CAAmB;AAAEhR,qBAAO,EAAE;AAAX,aAAnB,EAAmCiR,OAA1C;AADJ,WAPe;AAUxBC,uBAAa,EAAE;AAVS,SAA5B;AAYA,YAAMC,eAAe,GAAG;AACpBR,eAAK,EAAEH,MAAM,CAACG,KADM;AAEpBC,oBAAU,EAAE,IAFQ;AAGpBC,eAAK,EAAE,CAHa;AAIpB5N,gBAAM,EAAEuN,MAAM,CAACvN,MAJK;AAKpB6N,wBAAc,EAAE,KALI;AAMpBrJ,cAAI,EAAE,iBANc;AAOpBT,iBAAO,EAAE;AACL+J,qBAAS,cAAOxR,IAAI,CAAC0R,OAAZ;AADJ,WAPW;AAUpBC,uBAAa,EAAE;AAVK,SAAxB;AAYA,YAAME,WAAW,GAAG;AAChBT,eAAK,EAAEH,MAAM,CAACG,KADE;AAEhBC,oBAAU,EAAE,IAFI;AAGhBC,eAAK,EAAE,CAHS;AAIhB5N,gBAAM,EAAEuN,MAAM,CAACvN,MAJC;AAKhB6N,wBAAc,EAAE,KALA;AAMhBrJ,cAAI,EAAE,kBANU;AAOhBT,iBAAO,EAAE;AACLqK,uBAAW,aAAM9R,IAAI,CAACyR,aAAL,CAAmB;AAAEpK,mBAAK,EAAE;AAAT,aAAnB,EAAkCqK,OAAxC,CADN;AAELF,qBAAS,aAAMxR,IAAI,CAAC0R,OAAX;AAFJ,WAPO;AAWhBC,uBAAa,EAAE;AAXC,SAApB;AAaA,YAAMI,gBAAgB,GAAG;AACrBX,eAAK,EAAEH,MAAM,CAACG,KADO;AAErBC,oBAAU,EAAE,IAFS;AAGrBC,eAAK,EAAE,CAHc;AAIrB5N,gBAAM,EAAEuN,MAAM,CAACvN,MAJM;AAKrB6N,wBAAc,EAAE,IALK;AAMrBrJ,cAAI,EAAE,kBANe;AAOrBT,iBAAO,EAAE;AACLqK,uBAAW,aAAM9R,IAAI,CAACyR,aAAL,CAAmB;AAAEpK,mBAAK,EAAE;AAAT,aAAnB,EAAkCqK,OAAxC;AADN,WAPY;AAUrBC,uBAAa,EAAE;AAVM,SAAzB;AAYA,YAAMK,WAAW,GAAG;AAChBZ,eAAK,EAAEH,MAAM,CAACG,KADE;AAEhBa,YAAE,EAAEhB,MAAM,CAACgB,EAFK;AAGhBZ,oBAAU,EAAE,IAHI;AAIhBC,eAAK,EAAE,CAJS;AAKhBK,uBAAa,EAAE;AALC,SAApB;AAQA,YAAMO,OAAO,GAAG,EAAhB;;AACA,gBAAOjB,MAAM,CAACkB,MAAd;AACI,eAAK,UAAL;AACID,mBAAO,CAACrK,IAAR,CAAa,mBAAAwI,2BAAA,CAA4B+B,OAA5B,CAAoCR,eAApC,CAAb;AACA;;AACJ,eAAK,MAAL;AACIM,mBAAO,CAACrK,IAAR,CAAa,mBAAAyI,uBAAA,CAAwB8B,OAAxB,CAAgCP,WAAhC,CAAb;AACA;;AACJ,eAAK,WAAL;AACIK,mBAAO,CAACrK,IAAR,CAAa,mBAAA0I,4BAAA,CAA6B6B,OAA7B,CAAqCL,gBAArC,CAAb;AACA;;AACJ,eAAK,aAAL;AACIG,mBAAO,CAACrK,IAAR,CAAa,mBAAA2I,sBAAA,CAAuB4B,OAAvB,CAA+BJ,WAA/B,CAAb;AACA;;AACJ,eAAK,UAAL;AACIE,mBAAO,CAACrK,IAAR,CAAa,mBAAAsI,2BAAA,CAA4BiC,OAA5B,CAAoCjB,mBAApC,CAAb;AACAe,mBAAO,CAACrK,IAAR,CAAa,mBAAAyI,uBAAA,CAAwB8B,OAAxB,CAAgCP,WAAhC,CAAb;AACA;;AACJ;AAjBJ;;AAmBA,eAAOK,OAAP;AACH,OAhFD,CAFiD,CAA9C;AAsFA,WAAAG,iCAAA,GAAoC,UAAAC,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,mBAAAR,2BAAlC,EACvC,UAACc,MAAD,EAAY;AAAD;;AAAC,qBAAI,CAACL,cAAL,CAAoB2B,YAApB,CAAiCtB,MAAjC,qBAAqD,OAAAA,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEqK,WAAhB,KAA+B,EAApF,SAAyF,OAAAb,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE+J,SAAhB,KAA6B,EAAtH;AAA2H,OADhG,CAApC;AAIA,WAAAgB,iCAAA,GAAoC,UAAAF,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,mBAAAN,2BAAlC,EACvC,UAACY,MAAD,EAAY;AAAD;;AAAC,qBAAI,CAACL,cAAL,CAAoB2B,YAApB,CAAiCtB,MAAjC,qBAAqD,OAAAA,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEqK,WAAhB,KAA+B,EAApF,SAAyF,OAAAb,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE+J,SAAhB,KAA6B,EAAtH;AAA2H,OADhG,CAApC;AAIA,WAAAiB,6BAAA,GAAgC,UAAAH,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,mBAAAL,uBAAlC,EACnC,UAACW,MAAD,EAAW;AAAA;;AACP,qBAAI,CAACL,cAAL,CAAoB2B,YAApB,CAAiCtB,MAAjC,iBAAiD,OAAAA,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEqK,WAAhB,KAA+B,EAAhF,SAAqF,OAAAb,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE+J,SAAhB,KAA6B,EAAlH;AAAuH,OAFxF,CAAhC;AAKA,WAAAkB,kCAAA,GAAqC,UAAAJ,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,mBAAAJ,4BAAlC,EACxC,UAACU,MAAD,EAAW;AAAA;;AACP,qBAAI,CAACL,cAAL,CAAoB2B,YAApB,CAAiCtB,MAAjC,sBAAsD,OAAAA,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEqK,WAAhB,KAA+B,EAArF,SAA0F,OAAAb,MAAM,CAACxJ,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE+J,SAAhB,KAA6B,EAAvH;AAA4H,OAFxF,CAArC;AAKA,WAAAmB,4BAAA,GAA+B,UAAAL,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,mBAAAH,sBAAlC,EAClC,UAACS,MAAD;AAAA,eACI,MAAI,CAACL,cAAL,CAAoB2B,YAApB,CAAiCtB,MAAjC,wBAAwDA,MAAM,CAACgB,EAA/D,EADJ;AAAA,OADkC,CAA/B;AA3GN,K;;;uBAHQvB,e,EAAe,uB,EAAA,wC;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;AAMxB,wBADC,UAAAkC,MAAA,EACD,E,yCAAA,G,yBAAA,E,6CAAA,E,MAAA;;AAsFA,wBADC,UAAAA,MAAA,EACD,E,yCAAA,G,yBAAA,E,mCAAA,E,MAAA;;AAIA,wBADC,UAAAA,MAAA,EACD,E,yCAAA,G,yBAAA,E,mCAAA,E,MAAA;;AAIA,wBADC,UAAAA,MAAA,EACD,E,yCAAA,G,yBAAA,E,+BAAA,E,MAAA;;AAKA,wBADC,UAAAA,MAAA,EACD,E,yCAAA,G,yBAAA,E,oCAAA,E,MAAA;;AAKA,wBADC,UAAAA,MAAA,EACD,E,yCAAA,G,yBAAA,E,8BAAA,E,MAAA;;AA/GJ;;;;2BACalC,e,EAAe;cAD3B,OAAAmC;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QASaC,c;;;;AAPb;;YAOaA;;;;yBAAAA,c;AAAc,O;AAAA,gBANd,CACL,SAAA7X,YADK,EAEL,UAAA8X,aAAA,CAAcC,UAAd,CAAyB,CAAC,mBAAAtC,eAAD,CAAzB,CAFK,EAGL,QAAAuC,WAAA,CAAYD,UAAZ,CAAuB,UAAvB,EAAmC,mBAAAE,eAAnC,CAHK,CAMc;;;;+EAAdJ,c,EAAc;AAAA,kBALnB,SAAA7X,YAKmB,EALP,uBAKO,EALP,qBAKO;AAAA,O;AALP,K;;;;;2BAKP6X,c,EAAc;cAP1B,OAAA5X,QAO0B;eAPjB;AACNC,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,UAAA8X,aAAA,CAAcC,UAAd,CAAyB,CAAC,mBAAAtC,eAAD,CAAzB,CAFK,EAGL,QAAAuC,WAAA,CAAYD,UAAZ,CAAuB,UAAvB,EAAmC,mBAAAE,eAAnC,CAHK;AADH,S;AAOiB,Q;;;;;;;;;;;;;;;;;;;;;;ACd3B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAUa,YAAAC,oBAAA,GAAwC;AACjDC,WAAK,EAAE,UAAAC,YAAA,CAAaC,KAAb,EAD0C;AAEjDC,cAAQ,EAAE,UAAAF,YAAA,CAAaC,KAAb,EAFuC;AAGjDE,cAAQ,EAAE,UAAAH,YAAA,CAAaC,KAAb,EAHuC;AAIjDG,UAAI,EAAE,UAAAJ,YAAA,CAAaC,KAAb,EAJ2C;AAKjDI,eAAS,EAAE,UAAAL,YAAA,CAAaC,KAAb,EALsC;AAMjDK,iBAAW,EAAE,UAAAN,YAAA,CAAaC,KAAb;AANoC,KAAxC;AASA,YAAAJ,eAAA,GAAkB,QAAAU,aAAA,iBAAc,QAAAT,oBAAd,EAC3B,QAAAU,EAAA,CAAG,mBAAApD,uBAAH,EAA4B,UAAC1V,KAAD;AAAA,aAA6B,MAAD,OAAC,CAAD,kBACjDA,KADiD,CAAC,EAC7C;AACR4Y,mBAAW,EAAE,UAAAN,YAAA,CAAaC,KAAb;AADL,OAD6C,CAA7B;AAAA,KAA5B,CAD2B,4BAKxB,mBAAAnD,2BAAA,CAA4B2D,GALJ,sBAMxB,mBAAAzD,2BAAA,CAA4ByD,GANJ,sBAOxB,mBAAAxD,uBAAA,CAAwBwD,GAPA,sBAQxB,mBAAAvD,4BAAA,CAA6BuD,GARL,sBASxB,mBAAAtD,sBAAA,CAAuBsD,GATC,GAAlB;AAcI,YAAAC,uBAAA,GAA4C;AACrDC,uBAAiB,EAAE;AADkC,KAA5C;AAIA,YAAAC,kBAAA,GAAqB,QAAAL,aAAA,CAAc,QAAAG,uBAAd,EAC9B,QAAAF,EAAA,CAAG,cAAAK,oBAAH,EAAyB,UAACnZ,KAAD,EAA0BkW,MAA1B,EAAqC;AAC1D,aAAO,gCACAlW,KADA,GACK;AACRoZ,kBAAU,EAAE,MAAF,OAAE,CAAF,kBACHpZ,KAAK,CAACoZ,UADH,CAAE,EAELlD,MAAM,CAACmD,OAFF;AADJ,OADL,CAAP;AAOH,KARD,CAD8B,EAU9B,QAAAP,EAAA,CAAG,cAAAQ,oBAAH,EAAyB,UAAAtZ,KAAK;AAAA,aAAK,MAAD,OAAC,CAAD,kBAC3BA,KAD2B,CAAC,EACvB;AACRoZ,kBAAU,EAAElS;AADJ,OADuB,CAAL;AAAA,KAA9B,CAV8B,EAc9B,QAAA4R,EAAA,CAAG,cAAAS,iBAAH,EAAsB,UAAAvZ,KAAK;AAAA,aAAK,MAAD,OAAC,CAAD,kBACxBA,KADwB,CAAC,EACpB;AACRwZ,wBAAgB,EAAE,IAAI3U,IAAJ;AADV,OADoB,CAAL;AAAA,KAA3B,CAd8B,EAkB9B,QAAAiU,EAAA,CAAG,cAAAW,gBAAH,EAAqB,UAACzZ,KAAD,EAA0BkW,MAA1B,EAAqC;AACtD,aAAO,gCACAlW,KADA,GACK;AACRiZ,yBAAiB,EAAE/C,MAAM,CAACmD;AADlB,OADL,CAAP;AAIH,KALD,CAlB8B,EAwB9B,QAAAP,EAAA,CAAG,cAAAY,gBAAH,EAAqB,UAAC1Z,KAAD;AAAA,aAA8B,MAAD,OAAC,CAAD,kBAC3CA,KAD2C,CAAC,EACvC;AACRiZ,yBAAiB,EAAE,QAAAD,uBAAA,CAAwBC;AADnC,OADuC,CAA9B;AAAA,KAArB,CAxB8B,CAArB;;;;;;;;;;;;;;;;;;;;ACjDJ,YAAAU,wBAAA,GAA2B,UAACC,OAAD;AAAA,aAA0CA,OAAO,GAAI;AACzFzR,aAAK,EAAEyR,OAAO,CAAC1C,EAD0E;AAEzFhG,eAAO,EAAE0I,OAAO,CAAC5Y;AAFwE,OAAJ,GAGpFkG,SAHmC;AAAA,KAA3B;;;;;;;;;;;;;;;;;;;;;ACHb;AAAA;AAAA;;AAaA;AAAA;AAAA;;AAMa,YAAA2S,aAAA,GAAgB,kBAAAxE,mBAAA,CAA6D,WAA7D,EAA0E,MAA1E,CAAhB;;AAEA,YAAAyE,qBAAA,GAAwB,UAAC9Z,KAAD;AAAA,aAA+BA,KAAK,CAAC+Z,SAArC;AAAA,KAAxB;;AAEA,YAAAC,0BAAA,GAA6B,QAAAC,cAAA,CAAe,QAAAH,qBAAf,EAAsC,QAAAD,aAAA,CAAcK,SAAd,CAAwBC,eAA9D,CAA7B;AAEb;;;;AAGa,YAAAC,kCAAA,GAAqC,QAAAH,cAAA,CAAe,QAAAJ,aAAA,CAAcK,SAAd,CAAwBC,eAAvC,EAAwD,UAACE,OAAD,EAAa;AACnH,UAAIA,OAAJ,EAAa;AACT,YAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;AACAF,eAAO,CAAChX,OAAR,CAAgB,UAAAmX,CAAC,EAAI;AACjB,cAAMC,KAAK,GAAGzI,KAAK,CAAC4C,IAAN,CAAW0F,MAAM,CAACzP,IAAP,EAAX,EAA0BpC,IAA1B,CAA+B,UAAAsL,CAAC;AAAA,mBAAIA,CAAC,CAAC/S,IAAF,KAAWwZ,CAAC,CAACE,IAAjB;AAAA,WAAhC,CAAd;AACA,cAAIvX,IAAI,GAAGsX,KAAK,GAAGH,MAAM,CAACK,GAAP,CAAWF,KAAX,CAAH,GAAuBvT,SAAvC;;AACA,cAAI,CAAC/D,IAAL,EAAW;AACPA,gBAAI,GAAG,EAAP;AACAmX,kBAAM,CAAC1V,GAAP,CAAW;AACP5D,kBAAI,EAAEwZ,CAAC,CAACE,IADD;AAEP7Q,sBAAQ,EAAE2Q,CAAC,CAAC3Q;AAFL,aAAX,EAGG1G,IAHH;AAIH;;AACDA,cAAI,CAAC2J,IAAL,CAAU0N,CAAV;AACH,SAXD;AAYA,eAAOF,MAAP;AACH;;AACD,aAAO,IAAIC,GAAJ,EAAP;AACH,KAlBiD,CAArC;AAoBA,YAAAK,mBAAA,GAAsB,QAAAX,cAAA,CAAe,QAAAD,0BAAf,EAC/B,UAACD,SAAD,EAAYc,KAAZ,EAA8B;;;AAC1B,UAAId,SAAJ,EAAe;AACX,eAAO,CAAP,WAAOA,SAAS,CAACjP,GAAV,CAAc,UAAAuC,CAAC;AAAA,iBAAIA,CAAC,CAACyN,MAAF,CAASrS,IAAT,CAAc,UAACsS,CAAD;AAAA,mBAAsBA,CAAC,CAAC7D,EAAF,KAAS2D,KAA/B;AAAA,WAAd,CAAJ;AAAA,SAAf,CAAP,MAA8E,IAA9E,IAA8E,aAA9E,GAA8E,MAA9E,GAA8E,GACvE,CADuE,CAAvE,MACC,IADD,IACC,aADD,GACC,EADD,GACM3T,SADb;AAEH;;AACD,aAAOA,SAAP;AACH,KAP8B,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;AChDb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AClBA;;;;;AAIA,aAAgB8T,aAAhB,CAA8BlQ,GAA9B,EAA4C;AAC1C,UAAIW,GAAG,GAAG,EAAV;;AACA,UAAIX,GAAJ,EAAS;AACP,aAAK,IAAMnK,GAAX,IAAkBmK,GAAlB,EAAuB;AACrB,cAAIA,GAAG,CAAClK,cAAJ,CAAmBD,GAAnB,KAA2BmK,GAAG,CAACnK,GAAD,CAAH,KAAauG,SAAxC,IAAqD4D,GAAG,CAACnK,GAAD,CAAH,KAAa,IAAtE,EAA4E;AAC1E8K,eAAG,cAAQA,GAAG,GAAG,GAAH,GAAS,EAApB,SAA0B9K,GAA1B,cAAiCmK,GAAG,CAACnK,GAAD,CAApC,CAAH;AACD;AACF;AACF;;AACD,aAAO8K,GAAP;AACD;;AAVD;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAKA;AAAA;AAAA,6D,CAAuF;;;AACvF;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgBawP,kB;;;;;AAST,kCACWC,KADX,EAEWC,SAFX,EAGYC,QAHZ,EAIYC,KAJZ,EAKYC,MALZ,EAMYC,SANZ,EAOYC,QAPZ,EAQYC,SARZ,EASYC,SATZ,EAUYC,YAVZ,EAU4C;AAAA;;AAAA;;AAExC;AAXO,eAAAT,KAAA,GAAAA,KAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACC,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAlBZ;;AACU,eAAAC,SAAA,GAEN,EAFM;AAGV;;AACU,eAAAC,UAAA,GAAiD,EAAjD;;AAgBN,eAAKjX,GAAL,CAAS,QAAT,EAAmB,IAAnB;;AACA,eAAKA,GAAL,CAAS,OAAT,EAAkB,MAAlB;;AACA,eAAKA,GAAL,CAAS,SAAT,EAAoB,EAApB;;AACA,eAAKA,GAAL,CAAS,4BAAT,EAAuC,IAAvC;;AACA,eAAKA,GAAL,CAAS,MAAT,EAAiB,IAAI,OAAAlE,eAAJ,CAGP,IAHO,CAAjB;;AAKA,eAAKkE,GAAL,CAAS,eAAT,EAA0B,KAA1B;;AAEA,eAAKwW,QAAL,CAAcU,QAAd,CAAuB/F,IAAvB,CAA4B,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAAP,CAA5B,EAA2C9Y,SAA3C,CAAqD,YAAM;AACvD,iBAAKmY,KAAL,CAAWY,GAAX,CAAe,YAAM;AACjB,mBAAKhS,GAAL,CAAS,KAAT;;AACA,mBAAKiS,eAAL;AACH,WAHD;AAIH,SALD;;AAdwC;AAoB3C;;;;;AAoBD;;;;gCAIevb,G,EAAW;AACtB,iBAAO,KAAK4a,SAAL,CAAeZ,GAAf,CAAmBha,GAAnB,CAAP;AACH;AAED;;;;;;;AA+BA;;;;;;;;+BASIuJ,I,EACAiS,O,EAOC;AAAA;;AAAA,cANDjG,MAMC,uEANgB,IAMhB;AAAA,cALDkG,SAKC;AAAA,cAJDC,IAIC,uEAJuB;AACpBnS,gBAAI,EAAE,MADc;AAEpB,qBAAO,gBAFa;AAGpBoS,mBAAO,EAAE;AAHW,WAIvB;;AAED,cAAMC,YAAY,GAAG,KAAKb,SAAL,CAAec,IAAf,CAAoBL,OAApB,EAA6BjG,MAA7B,EAAqC;AACtDuG,sBAAU,EAAE,CAACvS,IAAD,CAD0C;AAEtDlE,oBAAQ,EAAE;AAF4C,WAArC,CAArB;;AAIA,eAAKhD,YAAL,CACI,gBADJ,EAEIuZ,YAAY,CAACG,cAAb,GAA8BxZ,SAA9B,CAAwC,YAAM;AAC1C,kBAAI,CAACnC,KAAL,CAAW,gBAAX;;AACA,kBAAI,CAACA,KAAL,CAAW,QAAX;AACH,WAHD,CAFJ;;AAOA,cAAImV,MAAJ,EAAY;AACRkG,qBAAS,GAAGA,SAAS,IAAK;AAAA,qBAAMG,YAAY,CAACI,OAAb,EAAN;AAAA,aAA1B;;AACA,iBAAK3Z,YAAL,CACI,QADJ,EAEIuZ,YAAY,CAACK,QAAb,GAAwB1Z,SAAxB,CAAkC;AAAA,qBAAMkZ,SAAS,EAAf;AAAA,aAAlC,CAFJ;AAIH;AACJ;AAED;;;;;;;;;sCAMqBjS,G,EAAa+L,M,EAAiBkG,S,EAAsB;AACrE,cAAMC,IAAI,GAAoB;AAC1BnS,gBAAI,EAAE,MADoB;AAE1B,qBAAO,gBAFmB;AAG1BoS,mBAAO,EAAE;AAHiB,WAA9B;AAKA,eAAKO,MAAL,CAAY,SAAZ,EAAuB1S,GAAvB,EAA4B+L,MAA5B,EAAoCkG,SAApC,EAA+CC,IAA/C;AACH;AAED;;;;;;;;;oCAMmBlS,G,EAAa+L,M,EAAiBkG,S,EAAsB;AACnE,cAAMC,IAAI,GAAoB;AAC1BnS,gBAAI,EAAE,MADoB;AAE1B,qBAAO,gBAFmB;AAG1BoS,mBAAO,EAAE;AAHiB,WAA9B;AAKA,eAAKO,MAAL,CAAY,OAAZ,EAAqB1S,GAArB,EAA0B+L,MAA1B,EAAkCkG,SAAlC,EAA6CC,IAA7C;AACH;AAED;;;;;;;;;mCAMkBlS,G,EAAa+L,M,EAAiBkG,S,EAAsB;AAClE,cAAMC,IAAI,GAAoB;AAC1BnS,gBAAI,EAAE,MADoB;AAE1B,qBAAO,gBAFmB;AAG1BoS,mBAAO,EAAE;AAHiB,WAA9B;AAKA,eAAKO,MAAL,CAAY,MAAZ,EAAoB1S,GAApB,EAAyB+L,MAAzB,EAAiCkG,SAAjC,EAA4CC,IAA5C;AACH;AAED;;;;;;;;;mCAMkBlS,G,EAAa+L,M,EAAiBkG,S,EAAsB;AAClE,eAAKS,MAAL,CAAY,MAAZ,EAAoB1S,GAApB,EAAyB+L,MAAzB,EAAiCkG,SAAjC;AACH;AAED;;;;;;;;;;;4BASIlS,I,EACAC,G,EACAC,I,EAEsB;AAAA,cADtBC,MACsB,uEADE,OACF;AAAA,cAAtBC,KAAsB,uEAAL,KAAK;AAEtB,iBAAAL,GAAA,CAAIC,IAAJ,EAAUC,GAAV,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B;AACH;AAED;;;;;;;4BAIoBtJ,I,EAAY;AAC5B,iBAAO,KAAK4a,SAAL,CAAe5a,IAAf,KAAwB,KAAK4a,SAAL,CAAe5a,IAAf,aAAgC,OAAAN,eAAxD,GACA,KAAKkb,SAAL,CAAe5a,IAAf,EAA4CS,QAA5C,EADA,GAED,IAFN;AAGH;AAED;;;;;;;;+BAKuBT,I,EAAY;AAC/B,cAAI,CAAC,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAL,EAA4B;AACxB,iBAAK4D,GAAL,CAAY5D,IAAZ,EAAkB,IAAlB;AACH;;AACD,iBAAO,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAP;AACH;AAED;;;;;;;;4BAKoBA,I,EAAcmH,K,EAAQ;AACtC,cAAI,CAAC,KAAKyT,SAAL,CAAe5a,IAAf,CAAL,EAA2B;AACvB,iBAAK4a,SAAL,CAAe5a,IAAf,IAAuB,IAAI,OAAAN,eAAJ,CAAuByH,KAAvB,CAAvB;AACA,iBAAK0T,UAAL,CAAgB7a,IAAhB,IAAwB,KAAK4a,SAAL,CAAe5a,IAAf,EAAqB8b,YAArB,EAAxB;AACH,WAHD,MAGO;AACH,iBAAKlB,SAAL,CAAe5a,IAAf,EAAqBoS,IAArB,CAA0BjL,KAA1B;AACH;AACJ;AAED;;;;0CAC0B;AAAA;;AACtB;AACA,eAAKoT,SAAL,CAAewB,WAAf,CAA2BhH,IAA3B,CAAgC,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAP,CAAhC,EAA+C9Y,SAA/C,CAAyD;AAAA,mBAAM,MAAI,CAAC8Z,IAAL,EAAN;AAAA,WAAzD;AACH;AAED;;;;;;+BAGY;AAAA;;AACR,eAAKC,aAAL;AACA,eAAKja,YAAL,CAAkB,aAAlB,EAAiC,KAAKkY,KAAL,CAAWgC,MAAX,CAAkB,eAAAC,iBAAlB,EAC5BpH,IAD4B,CACtB,YAAAlK,MAAA,CAAO,UAAAuR,IAAI;AAAA,mBAAIA,IAAI,KAAKlW,SAAb;AAAA,WAAX,CADsB,EAE5B6O,IAF4B,CAEvB,YAAAsH,IAAA,CAAK,CAAL,CAFuB,EAG5Bna,SAH4B,CAGlB,UAACka,IAAD,EAAe;AACtB;AACA,mBAAI,CAACE,cAAL,CAAoBF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEG,IAA1B;AACH,WAN4B,CAAjC;;AAQA,eAAK9B,SAAL,CAAesB,WAAf,CAA2BhH,IAA3B,CAAgC,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAP,CAAhC,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,mBAAI,CAACzC,YAAL,CAAkB2S,IAAlB,CAAuB,IAAvB;AACH,WAFD,EAVQ,CAaR;;;AACA,cAAI5I,MAAM,CAACC,KAAX,EAAkB;AACdD,kBAAM,CAACgT,WAAP,GAAqB,IAArB;AACH;AACJ;AAED;;;;;;wCAGqB;AACjB,eAAKvT,GAAL,CAAS,QAAT,EAAmB,sBAAnB;AACA,cAAMwT,OAAO,GAA4B,KAAK9C,GAAL,CAAS,SAAT,CAAzC;AACA8C,iBAAO,CAACC,QAAR,GAAmB;AACfvB,mBAAO,EAAE,iCADM;AAEfnc,iBAAK,EAAE;AAFQ,WAAnB;AAIA,eAAK4E,GAAL,CAAS,SAAT,EAAoB6Y,OAApB,EAPiB,CAQjB;;AACA,cAAME,QAAQ,GAAqB,KAAKpC,SAAL,CAAeZ,GAAf,CAAmB,UAAnB,KAAkC,EAArE;AACA,cAAMiD,QAAQ,GAAGD,QAAQ,CAACC,QAAT,IAAqBC,QAAQ,CAACD,QAA/C;AACA,cAAME,IAAI,GAAGH,QAAQ,CAACI,MAAT,IAAmBF,QAAQ,CAACG,QAAzC;AACA,cAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAT,IAAiBJ,QAAQ,CAACI,IAAvC;AACA,cAAMC,GAAG,GAAGP,QAAQ,CAACQ,UAAT,aAAyBP,QAAzB,eAAsCE,IAAtC,cAA8CG,IAA9C,IAAuDJ,QAAQ,CAACO,MAA5E;AACA,cAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAc,WAAd,KAA8BL,IAAI,KAAK,MAAvC,GAAgD,EAAhD,GAAqDN,QAAQ,CAACU,KAAT,IAAkB,EAArF;AACA,cAAME,IAAI,GACN,KAAKhD,SAAL,CAAeZ,GAAf,CAAmB,MAAnB,KACAkD,QAAQ,CAACW,IAAT,CAAcF,QAAd,CAAuB,WAAvB,CADA,IAEAG,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,MAHrC,CAfiB,CAmBjB;;AACA,cAAMC,MAAM,GAAmB;AAC3BC,iBAAK,EAAE,QADoB;AAE3Bd,gBAAI,YAAKA,IAAL,cAAaG,IAAb,CAFuB;AAG3BY,oBAAQ,YAAKX,GAAL,0BAHmB;AAI3BY,qBAAS,YAAKZ,GAAL,gBAJkB;AAK3Ba,wBAAY,YAAKlB,QAAQ,CAACO,MAAd,SAAuBC,KAAvB,qBALe;AAM3BW,wBAAY,EAAE,CAACrB,QAAQ,CAACsB,WANG;AAO3BV,gBAAI,EAAJA;AAP2B,WAA/B;;AASA,eAAK9C,SAAL,CAAeyD,KAAf,CAAqBP,MAArB;;AACAlB,iBAAO,CAACC,QAAR,GAAmB;AACfvB,mBAAO,EAAE,iCADM;AAEfnc,iBAAK,EAAE;AAFQ,WAAnB;AAIA,eAAK4E,GAAL,CAAS,SAAT,EAAoB6Y,OAApB;AACH;;;uCAEsBF,I,EAAc;;;AACjC,eAAKtT,GAAL,CAAS,MAAT,yBAAiC,WAAK0R,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEwD,UAApD,GADiC,CAEjC;;AACA,cAAMC,MAAM,GAAG,KAAK7D,SAAL,CAAeZ,GAAf,CAAmB,aAAnB,CAAf;;AACA,cAAI,CAAJ,KAAI,KAAKgB,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEwD,UAAvB,EAAmC;AAC/B;AACAC,kBAAM,CAACC,MAAP,GAAgB,KAAK1D,YAAL,CAAkBwD,UAAlC;AACH;;AACD,cAAIC,MAAJ,EAAY;AACR,iBAAKjE,SAAL,CAAemE,IAAf,CAAoBF,MAApB;;AACA,gBAAI7B,IAAJ,EAAU;AACN,mBAAKpC,SAAL,CAAeoE,QAAf,CAAwBhC,IAAxB;AACH;AACJ,WALD,MAKO;AACH,iBAAKtT,GAAL,CAAS,MAAT,6DAAqE,KAAKsR,SAAL,CAAeiE,QAApF;AACH;AACJ;;;0BAjS0BC,I,EAAe;AACtC,eAAKC,gBAAL,GAAwBD,IAAxB;AACH,S;4BAEyB;AACtB,iBAAO,KAAKC,gBAAZ;AACH;AAED;;;;4BACuB;AACnB,iBAAO,EAAP;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKlE,QAAZ;AACH;;;0BAagBrT,K,EAAe;AAC5B,cAAMwX,YAAY,GAAG,KAAKC,OAAL,CAAa,WAAb,CAArB;AACA,eAAKhb,GAAL,CAAS,OAAT,EAAkBuD,KAAlB;;AACA,eAAKmT,MAAL,CAAYuE,QAAZ,WAAwB1X,KAAK,GAAGA,KAAK,GAAG,KAAX,GAAmB,EAAhD,SAAqDwX,YAArD;AACH;AAED;;;;4BAGgB;AACZ,iBAAO,KAAKrE,MAAL,CAAYwE,QAAZ,EAAP;AACH;AAED;;;;4BACsB;AAClB;AACH;AAED;;;;4BAC6B;AACzB,iBAAO,KAAKrE,SAAL,CAAesE,IAAf,CAAoBC,YAApB,GAAmC,GAA1C;AACH;AAED;;;;4BACuB;AACnB,iBAAO,KAAKzE,SAAL,CAAe0E,cAAtB;AACH;;;;MAhGmC,OAAA5f,S;;AAHxC;;;uBAGa4a,kB,EAAkB,qB,EAAA,6B,EAAA,8B,EAAA,sB,EAAA,qB,EAAA,+B,EAAA,8B,EAAA,+B,EAAA,2B,EAAA,kC;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFf;;;;;2BAEHA,kB,EAAkB;cAH9B,OAAAnD,UAG8B;eAHnB;AACRoI,oBAAU,EAAE;AADJ,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvD/B;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAIA;AAAA;AAAA;;QAaaC,a;;;;;AAmBX,6BAAYC,QAAZ,EAA+B;AAAA;;AAAA;;AAC7B;AAnBF;;AACmB,gBAAAC,aAAA,GAAgB,IAAI,OAAAC,OAAJ,EAAhB;AACnB;;AACgB,gBAAAC,MAAA,GAAS,QAAKF,aAAL,CAAmBvD,YAAnB,EAAT;AAOhB;;AACU,gBAAA0D,aAAA,GAAiC,EAAjC;AASR,gBAAKtJ,EAAL,GAAUkJ,QAAQ,CAAClJ,EAAT,IAAekJ,QAAQ,CAACK,OAAxB,IAAmCL,QAAQ,CAAC/J,KAA5C,IAAqD,EAA/D;AACA,gBAAKrV,IAAL,GAAYof,QAAQ,CAACpf,IAAT,IAAiB,EAA7B;AACA,gBAAKqV,KAAL,GAAa,UAAG+J,QAAQ,CAAC/J,KAAT,IAAkB,EAArB,EAA0B1J,WAA1B,EAAb;AAJ6B;AAK9B;AAVD;;;;;;AAYA;;;+BAGW;AAAA;;AACT,cAAI,KAAK+T,QAAT,EAAmB;AACjB,gBAAMC,IAAI,GAAG,KAAKC,MAAL,EAAb;AACA,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAMC,OAAO,GAAG,OAAI,CAAC9J,EAAL,GACZ,OAAI,CAACwJ,QAAL,CAAcO,MAAd,CAAqB,OAAI,CAAC/J,EAA1B,EAA8ByJ,IAA9B,CADY,GAEZ,OAAI,CAACD,QAAL,CAAcpY,GAAd,CAAkBqY,IAAlB,CAFJ;AAGAK,qBAAO,CAACE,IAAR,CACE,UAAC9a,CAAD,EAAO;AACL,uBAAI,CAACia,aAAL,CAAmBjN,IAAnB,CAAwB;AAAElJ,sBAAI,EAAE,YAAR;AAAsBiX,0BAAQ,EAAE/a;AAAhC,iBAAxB;;AACA0a,uBAAO,CAAC1a,CAAD,CAAP;AACD,eAJH,EAKE,UAAC4V,CAAD;AAAA,uBAAO+E,MAAM,CAAC/E,CAAD,CAAb;AAAA,eALF;AAOD,aAXM,CAAP;AAYD,WAdD,MAcO;AACL6E,mBAAO,CAACE,MAAR,CAAe,+BAAf;AACD;AACF;AAED;;;;;;kCAGa;AACX,cAAI,KAAK7J,EAAT,EAAa;AACX,mBAAO,KAAKwJ,QAAL,WAAqB,KAAKxJ,EAA1B,CAAP;AACD;AACF;AAED;;;;;;;;gCAKekK,S,EAAmBC,U,EAAmB;AACnD,cAAI,KAAKnK,EAAT,EAAa;AACX,mBAAO,KAAKwJ,QAAL,CAAcY,IAAd,CAAmB,KAAKpK,EAAxB,EAA4BkK,SAA5B,EAAuCC,UAAvC,CAAP;AACD;AACF;AAED;;;;;;iCAGa;AACX,cAAME,GAAG,qBAAa,IAAb,CAAT,CADW,CAEX;;AACA,iBAAOA,GAAG,CAACb,QAAX;AACA,iBAAOa,GAAG,CAACC,QAAX;AACA,iBAAOD,GAAG,CAAClB,aAAX;AACA,iBAAOkB,GAAG,CAAChB,MAAX,CANW,CAOX;;AACA,iBAAOgB,GAAG,CAACjhB,OAAX;AACA,iBAAOihB,GAAG,CAAChhB,UAAX;AACA,iBAAOghB,GAAG,CAAC/gB,cAAX;AACA,iBAAO+gB,GAAG,CAACf,aAAX;AACA,iBAAOe,GAAG,CAAC9gB,YAAX,CAZW,CAaX;;AACA,cAAMoK,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAY0W,GAAZ,CAAb;;AACA,mCAAkB1W,IAAlB,2BAAwB;AAAnB,gBAAMlK,GAAG,YAAT;;AACH,gBAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,kBAAM8gB,OAAO,GAAG,KAAKjB,aAAL,CAAmB7f,GAAG,CAAC2R,SAAJ,CAAc,CAAd,CAAnB,KAAwC3R,GAAG,CAAC2R,SAAJ,CAAc,CAAd,CAAxD;AACAiP,iBAAG,CAACE,OAAD,CAAH,GAAeF,GAAG,CAAC5gB,GAAD,CAAlB;AACA,qBAAO4gB,GAAG,CAAC5gB,GAAD,CAAV;AACD,aAJD,MAIO,IAAI4gB,GAAG,CAAC5gB,GAAD,CAAH,KAAauG,SAAjB,EAA4B;AACjC,qBAAOqa,GAAG,CAAC5gB,GAAD,CAAV;AACD;AACF;;AACD,iBAAO4gB,GAAP;AACD;AAED;;;;;;gCAGY;AACV,iBAAO,IAAIpB,aAAJ,CAAkB,IAAlB,CAAP;AACD;AAED;;;;;;oCAGgB;AACd,iBAAO,IAAIA,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAEjJ,cAAE,EAAE,IAAN;AAAYb,iBAAK,EAAE;AAAnB,WAAT,CAAlB,CAAP;AACD;;;4BAhGqB;AACpB,iBAAO,wBAAAqL,cAAA,CAAeC,UAAf,CAA0BxB,aAA1B,CAAP;AACD;;;;MAjBgC,OAAA9f,S;;AAAnC;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;QAOauhB,c;;;;;AAyBX,8BAAsBnG,SAAtB,EACsBoG,eADtB,EACwD;AAAA;;AAAA;;AACtD;AAFoB,gBAAApG,SAAA,GAAAA,SAAA;AACA,gBAAAoG,eAAA,GAAAA,eAAA;AAnBtB;;AACU,gBAAAjG,SAAA,GAAoE,EAApE;AACV;;AACU,gBAAAC,UAAA,GAAiD,EAAjD;AACV;;AACU,gBAAAiG,YAAA,GAAmD,EAAnD;AACV;;AACU,gBAAAC,SAAA,GAA6C,EAA7C;AACV;;AACU,gBAAAC,QAAA,GAAoC,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBAC5CD,CAAC,KAAKC,CAAN,IAAYD,CAAS,CAAC8J,EAAV,KAAkB7J,CAAS,CAAC6J,EADI;AAAA,SAApC;AAEV;;;AACU,gBAAA+K,YAAA,GAAkC,UAAC7U,CAAD;AAAA,iBAAO,CAAC,CAACA,CAAT;AAAA,SAAlC;;AASR,gBAAK8U,KAAL,GAAa,MAAb;AACA,gBAAKC,UAAL,GAAkB,MAAlB;;AACA,gBAAKvd,GAAL,CAAS,MAAT,EAAiB,EAAjB;;AAJsD;AAKvD;AAVD;;;;;;AAYA;;;wCAGwBwd,S,EAAoB;AACxC;AACA;AACA,cAAI,KAAKP,eAAL,CAAqBQ,SAAzB,EAAoC;AAChC,mBAAO,MAAP,OAAO,CAAP,kBAAYD,SAAZ,CAAO,EAAc;AAAEC,uBAAS,EAAE;AAAb,aAAd,CAAP;AACH;;AACD,iBAAOD,SAAP;AACH;AAED;;;;;;+BAGc;AAAA;;AACZ,eAAK9C,IAAL,GAAY4B,IAAZ,CACE,UAAClF,CAAD;AAAA,mBAAO,OAAI,CAACvb,YAAL,CAAkB2S,IAAlB,CAAuB,IAAvB,CAAP;AAAA,WADF,EAEE,UAACkP,GAAD;AAAA,mBAAS,OAAI,CAAC1e,OAAL,CAAa,MAAb,EAAqB;AAAA,qBAAM,OAAI,CAACoZ,IAAL,EAAN;AAAA,aAArB,EAAwC,IAAxC,CAAT;AAAA,WAFF;AAID;AAED;;;;;;;gCAIsC;AAAA,cAAzBuF,MAAyB,uEAAP,KAAO;AACpC,cAAMC,QAAQ,GAAGD,MAAM,GACnB,KAAK9G,SAAL,CAAesE,IAAf,CAAoBC,YADD,GAEnB,YAFJ;AAGA,2BAAUwC,QAAV,cAAsB,KAAKL,UAA3B;AACD;AAED;;;;;AAKA;;;;4BAIoBnhB,I,EAAY;AAC9B,cAAI,CAAC,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAL,EAA4B;AAC1B,iBAAK4D,GAAL,CAAY5D,IAAZ,EAAkB,IAAlB;AACD;;AACD,iBAAQ,KAAK4a,SAAL,CAAe5a,IAAf,EAA4CS,QAA5C,EAAR;AACD;AAED;;;;;;;;+BAKuBT,I,EAAY;AACjC,cAAI,CAAC,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAL,EAA4B;AAC1B,iBAAK4D,GAAL,CAAY5D,IAAZ,EAAkB,IAAlB;AACD;;AACD,iBAAO,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAP;AACD;AAED;;;;;;;;4BAKuBA,I,EAAcmH,K,EAAQ;AAC3C,cAAI,CAAC,KAAKyT,SAAL,CAAe5a,IAAf,CAAL,EAA2B;AACzB,iBAAK4a,SAAL,CAAe5a,IAAf,IAAuB,IAAI,OAAAN,eAAJ,CAAuByH,KAAvB,CAAvB;AACA,iBAAK0T,UAAL,CAAgB7a,IAAhB,IAAwB,KAAK4a,SAAL,CAAe5a,IAAf,EAAqB8b,YAArB,EAAxB;AACD,WAHD,MAGO;AACL,iBAAKlB,SAAL,CAAe5a,IAAf,EAAqBoS,IAArB,CAA0BjL,KAA1B;AACD;AACF;AAED;;;;;;;iCAI8D;AAAA,cAAhDsa,SAAgD,uEAAjB,KAAKR,YAAY;AACxD,cAAM9e,IAAI,GAAQ,KAAKwX,GAAL,CAAS,MAAT,CAAlB;AACA,iBAAOxX,IAAI,CAAC0I,MAAL,CAAY4W,SAAZ,CAAP;AACL;AAED;;;;;;;6BAIYvL,E,EAAU;AACpB,cAAM/T,IAAI,GAAG,KAAKwX,GAAL,CAAS,MAAT,CAAb;AACA,iBAAOxX,IAAI,CAACsF,IAAL,CAAU,UAACnF,CAAD,EAAO;AAAD;;AAAC,mBAAAA,CAAC,CAAC4T,EAAF,KAASA,EAAT,IAAgB,OAAA5T,CAAC,CAAC+S,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAE1J,WAAF,EAAP,OAA2BuK,EAAE,SAAF,IAAAA,EAAE,WAAF,GAAE,MAAF,GAAAA,EAAE,CAAEvK,WAAJ,EAA3B,CAAhB;AAA6D,WAA9E,CAAP;AACD;AAED;;;;;;;gCAIuC;AAAA;;AAAA,cAA1B+V,YAA0B,uEAAF,EAAE;AACrC,cAAIH,MAAM,GAAG,KAAb;AACA,cAAII,KAAK,GAAG,IAAZ;AACA;;AACA,cAAID,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACAI,iBAAK,GAAG,OAAOD,YAAY,CAACC,KAApB,KAA8B,SAA9B,GAA0CD,YAAY,CAACC,KAAb,IAAsB,IAAhE,GAAuE,IAA/E;AACA,mBAAOD,YAAY,CAACC,KAApB,KAA8B,SAA9B,IAA2C,OAAOD,YAAY,CAACC,KAA/D;AACD;;AACD,cAAItK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAZ;AACA,cAAM/hB,GAAG,mBAAY0X,KAAZ,CAAT;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB;AACA;AACA;AACA;AACA,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrD,kBAAM7C,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWkE,MAAX,CAAN,SAA2BlK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAjD,CAAT;AACA,kBAAIuK,MAAM,GAAoB,EAA9B;;AACA,qBAAI,CAACC,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBhb,SAAnB,CACE,UAACkD,CAAD,EAAoC;AAClCwc,sBAAM,GACJxc,CAAC,IAAIA,CAAC,YAAY4L,KAAlB,GACI5L,CAAC,CAAC0E,GAAF,CAAM,UAACxH,CAAD;AAAA,yBAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,iBAAN,CADJ,GAEI8C,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAAhC,GACCrG,CAAC,CAACqG,OADH,GAEArG,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B,CAAC5L,CAAC,CAACqG,OAAjC,GACA,CAACrG,CAAD,CADA,GAEA,EAPN;AAQD,eAVH,EAWE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eAdH,EAeE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChf,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,IAAsB,IAA7B;AAAA,iBAAlB,EAAsDgiB,KAAtD;AACD,eAlBH;AAoBD,aAvBqB,CAAtB;AAwBD;;AACD,iBAAO,KAAKZ,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;;;oCAK4C;AAAA;;AAAA,cAA1B+hB,YAA0B,uEAAF,EAAE;AAC1C,cAAIH,MAAM,GAAG,KAAb;AACA,cAAII,KAAK,GAAG,IAAZ;AACA;;AACA,cAAID,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACD;;AACD,cAAIlK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAZ;AACA,cAAM/hB,GAAG,mBAAY0X,KAAZ,CAAT;AACA,cAAM6F,GAAG,aAAM,KAAKG,KAAL,CAAWkE,MAAX,CAAN,SAA2BlK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAjD,CAAT;AACA,iBAAO,KAAKwK,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBnI,IAAnB,CACL,YAAAjL,GAAA,CAAI,UAAC1E,CAAD;AAAA,mBAAqC,OAAI,CAAC2c,gBAAL,CAAsB3c,CAAtB,CAArC;AAAA,WAAJ,CADK,EAEL,YAAA4c,UAAA,CAAW,UAAIC,KAAJ,EAAgBL,MAAhB,EAA+B;AACxCjY,mBAAO,CAACV,GAAR,CAAYgZ,KAAZ;AACA,mBAAO,OAAAC,EAAA,CAAGN,MAAH,CAAP;AACC,WAHH,CAFK,CAAP;AAME;AACH;AAGD;;;;;;;;yCAKkBxc,C,EAA8B;AAAA;;AAC9C,cAAIwc,MAAM,GACNxc,CAAC,IAAIA,CAAC,YAAY4L,KAAlB,GACI5L,CAAC,CAAC0E,GAAF,CAAM,UAACxH,CAAD;AAAA,mBAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,WAAN,CADJ,GAEI8C,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAAhC,GACCrG,CAAC,CAACqG,OADH,GAEArG,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B,CAAC5L,CAAC,CAACqG,OAAjC,GACA,CAACrG,CAAD,CADA,GAEA,EAPR;AAQA,iBAAOwc,MAAP;AACD;AAED;;;;;;;;0CAKiD;AAAA,cAA1BF,YAA0B,uEAAF,EAAE;AAC/C,cAAIH,MAAM,GAAG,KAAb;AACA,cAAII,KAAK,GAAG,IAAZ;AACA;;AACA,cAAID,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACD;;AACD,cAAIlK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAZ;AACA,cAAM/hB,GAAG,mBAAY0X,KAAZ,CAAT;AACA,cAAM6F,GAAG,aAAM,KAAKG,KAAL,CAAWkE,MAAX,CAAN,SAA2BlK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAjD,CAAT;AACA,iBAAO,KAAKwK,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,CAAP;AACD;AAED;;;;;;;;6BAKYhH,E,EAAsC;AAAA;;AAAA,cAA1BwL,YAA0B,uEAAF,EAAE;AAChD,cAAIH,MAAM,GAAG,KAAb;AACA;;AACA,cAAIG,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACD;;AACD,cAAMlK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,cAAM/hB,GAAG,kBAAWuW,EAAX,cAAiBmB,KAAjB,CAAT;AACA;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM7C,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWkE,MAAX,CAAN,cAA4BrL,EAA5B,SAAiCmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAvD,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBhb,SAAnB,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eALH,EAME,YAAM;AACJrC,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChf,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,IAAsB,IAA7B;AAAA,iBAAlB,EAAsD,IAAtD;AACD,eATH;AAWD,aAdqB,CAAtB;AAeD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;;;4BAKWyhB,S,EAA8C;AAAA;;AAAA,cAA1BM,YAA0B,uEAAF,EAAE;;AACvD;AACA,cAAI,CAAC,KAAKX,SAAL,CAAeoB,QAApB,EAA8B;AAC5B,iBAAKpB,SAAL,CAAeoB,QAAf,GAA0B,IAAItC,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5D,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,kBAAMxE,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,SAAwClK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA9D,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoB,OAAI,CAACmF,eAAL,CAAqBjB,SAArB,CAApB,EAAqDlf,SAArD,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B;;AACA,uBAAI,CAACoV,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eANH,EAOE,YAAM;AACJrC,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChe,GAAL,CAAS,MAAT,EAAiB,OAAI,CAAC2e,UAAL,CAAgB,OAAI,CAAC5I,GAAL,CAAS,MAAT,CAAhB,EAAkC,CAACiI,MAAD,CAAlC,CAAjB;;AACA,uBAAI,CAACU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B;;AACA,uBAAI,CAACoV,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eAZH;AAcD,aAlByB,CAA1B;AAmBD;;AACD,iBAAO,KAAKpB,SAAL,CAAeoB,QAAtB;AACD;;;6BAWCjM,E,EACAkK,S,EAE+B;AAAA;;AAAA,cAD/BgB,SAC+B,uEADV,EACU;AAAA,cAA/BoB,MAA+B,uEAAN,MAAM;AAE/B,cAAMnL,KAAK,GAAI,gBAAA2C,aAAA,CAAc,KAAKqI,eAAL,CAAqBjB,SAArB,CAAd,CAAf;AACA,cAAMzhB,GAAG,kBAAWuW,EAAX,cAAiBkK,SAAjB,cAA8B/I,KAA9B,CAAT;AACA;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM0C,SAAS,GAAG,MAAH,OAAG,CAAH,kBAAQrB,SAAR,CAAG,EAAc;AAAElL,kBAAE,EAAFA,EAAF;AAAMwM,qBAAK,EAAEtC;AAAb,eAAd,CAAlB;AACA,kBAAMlD,GAAG,aAAM,OAAI,CAACG,KAAL,CAAW,KAAX,CAAN,cAA2BnH,EAA3B,cAAiCkK,SAAjC,CAAT;AACA,kBAAIwB,MAAJ;AACA,kBAAMvL,OAAO,GACXmM,MAAM,KAAK,MAAX,GACI,OAAI,CAACX,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoBuF,SAApB,CADJ,GAEI,OAAI,CAACZ,IAAL,CAAUlI,GAAV,WAAiBuD,GAAjB,SAAuB7F,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA7C,EAHN;AAIAhB,qBAAO,CAACnU,SAAR,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAGxc,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,WACK,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EADL,mBACsCyU,SADtC,cAEElK,EAFF;;AAIA,uBAAO,OAAI,CAAC6K,SAAL,CAAephB,GAAf,CAAP;AACD,eATH,EAUE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAACU,cAAL,WACK,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EADL,mBACsCyU,SADtC,eAEElK,EAFF;;AAIA,uBAAI,CAACtT,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAM,OAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,CAAb;AAAA,iBAAlB,EAAoD,IAApD;AACD,eAjBH;AAmBD,aA3BqB,CAAtB;AA4BD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAGD;;;;;;;;;;;iCASEuW,E,EACAkK,S,EAE+B;AAAA,cAD/BgB,SAC+B,uEADV,EACU;AAAA,cAA/BoB,MAA+B,uEAAN,MAAM;AAC/B,cAAMnL,KAAK,GAAK,gBAAA2C,aAAA,CAAc,KAAKqI,eAAL,CAAqBjB,SAArB,CAAd,CAAhB;AACA,cAAIG,MAAM,GAAG,KAAb;AACA,cAAII,KAAK,GAAG,IAAZ;AACA,cAAMc,SAAS,GAAG,MAAH,OAAG,CAAH,kBAAQrB,SAAR,CAAG,EAAc;AAAElL,cAAE,EAAFA,EAAF;AAAMwM,iBAAK,EAAEtC;AAAb,WAAd,CAAlB;AACA,cAAMlD,GAAG,aAAM,KAAKG,KAAL,CAAW,KAAX,CAAN,cAA2BnH,EAA3B,cAAiCkK,SAAjC,CAAT;AACA,cAAIwB,MAAJ;AAEA,cAAMvL,OAAO,GAAGmM,MAAM,KAAK,MAAX,GACZ,KAAKX,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoBuF,SAApB,CADY,GAEZ,KAAKZ,IAAL,CAAUlI,GAAV,WAAiBuD,GAAjB,SAAuB7F,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA7C,EAFJ;AAIE,iBAAOhB,OAAP;AACH;AAGD;;;;;;;;;+BAMcH,E,EAAYkL,S,EAA8C;AAAA;;AAAA,cAA1BM,YAA0B,uEAAF,EAAE;AACtE,cAAM/hB,GAAG,oBAAauW,EAAb,CAAT;AACA;;AACA,cAAI,CAAC,KAAK6K,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAc,OAAI,CAACqI,eAAL,CAAqBX,YAArB,CAAd,CAAd;AACA,kBAAMxE,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,cAAyCrL,EAAzC,SAA8CmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAApE,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUc,GAAV,CAAczF,GAAd,EAAmB,OAAI,CAACmF,eAAL,CAAqBjB,SAArB,CAAnB,EAAoDlf,SAApD,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B,cAAiEuK,EAAjE;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eANH,EAOE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChe,GAAL,CACE,MADF,EAEE,OAAI,CAAC2e,UAAL,CAAgB,OAAI,CAACK,UAAL,CAAgB,OAAI,CAACjJ,GAAL,CAAS,MAAT,CAAhB,EAAkC;AAAEzD,oBAAE,EAAFA;AAAF,iBAAlC,CAAhB,EAAkE,CAChE0L,MADgE,CAAlE,CAFF;;AAMA,uBAAI,CAACU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B,eAAkEuK,EAAlE;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eAjBH;AAmBD,aAvBqB,CAAtB;AAwBD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAGD;;;;;;;;;;mCAOmBuW,E,EAAYkL,S,EAAwF;AAAA;;AAAA,cAApEyB,uBAAoE,uEAAjC,KAAiC;AAAA,cAA1BnB,YAA0B,uEAAF,EAAE;AACrH,cAAMrK,KAAK,GAAGwL,uBAAuB,GAAG,gBAAA7I,aAAA,CAAc,KAAKqI,eAAL,CAAqBX,YAArB,CAAd,CAAH,GAAuD,KAA5F;AACA,cAAMxE,GAAG,aAAM,KAAKG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,cAAyCrL,EAAzC,SAA8CmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAApE,CAAT;AACA,cAAMlH,IAAI,GAAG0S,uBAAuB,GAAG,KAAKR,eAAL,CAAqBjB,SAArB,CAAH,GAAqCA,SAAzE;AAEA,iBAAO,KAAKS,IAAL,CAAUc,GAAV,CAAczF,GAAd,EAAmB/M,IAAnB,EACJ4E,IADI,CAED,YAAAjL,GAAA,CAAI,UAAC1E,CAAD;AAAA,mBAAqC,OAAI,CAAC2c,gBAAL,CAAsB3c,CAAtB,CAArC;AAAA,WAAJ,CAFC,EAIH,YAAA4c,UAAA,CAAW,UAAIC,KAAJ,EAAgBL,MAAhB,EAA+B;AACxCjY,mBAAO,CAACV,GAAR,CAAYgZ,KAAZ;;AACA,mBAAI,CAACK,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B,cAAiEuK,EAAjE;;AACA,mBAAO,OAAAgM,EAAA,CAAGD,KAAH,CAAP;AACD,WAJD,CAJG,CAAP;AAWD;AAED;;;;;;;;;0CAM0Ba,W,EAAqB1B,S,EAAwF;AAAA,cAApEyB,uBAAoE,uEAAjC,KAAiC;AAAA,cAA1BnB,YAA0B,uEAAF,EAAE;AACrI,cAAMrK,KAAK,GAAGwL,uBAAuB,GAAG,gBAAA7I,aAAA,CAAc,KAAKqI,eAAL,CAAqBX,YAArB,CAAd,CAAH,GAAuD,KAA5F;AACA,cAAMxE,GAAG,aAAM,KAAKG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,cAAyCuB,WAAzC,SAAuDzL,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA7E,CAAT;AACA,cAAMlH,IAAI,GAAG0S,uBAAuB,GAAG,KAAKR,eAAL,CAAqBjB,SAArB,CAAH,GAAqCA,SAAzE;AAEA,cAAM2B,KAAK,GAAGC,cAAc,CAAC7c,MAAf,GAAwBqG,IAAI,CAACC,KAAL,CAAWuW,cAAc,CAACtF,OAAf,CAAuB,cAAvB,CAAX,EAAmDuF,YAA3E,GAA0F,EAAxG;AAEA,cAAMC,OAAO,GAAG,IAAI,OAAAC,WAAJ,CAAgB;AAC9B,8CAA2BJ,KAA3B;AAD8B,WAAhB,CAAhB;AAIF,cAAMK,cAAc,GAAG;AAAEF,mBAAO,EAAEA;AAAX,WAAvB,CAXuI,CAarI;AACA;AACA;;AAEA,iBAAO,KAAKrB,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoB/M,IAApB,CAAP;AAED;AAED;;;;;;;gCAIc+F,E,EAA2B;AAAA;;AAAA,cAAfmN,CAAe,uEAAF,EAAE;AACvC,cAAM1jB,GAAG,oBAAauW,EAAb,CAAT;AACA;;AACA,cAAI,CAAC,KAAK6K,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAkB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3D,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAcqJ,CAAd,CAAd;AACA,kBAAMnG,GAAG,aAAM,OAAI,CAACG,KAAL,EAAN,cAAsBnH,EAAtB,SAA2BmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAjD,CAAT;;AACA,qBAAI,CAACwK,IAAL,WAAiB3E,GAAjB,EAAsBhb,SAAtB,CACE,UAAC8Y,CAAD;AAAA,uBAAO,IAAP;AAAA,eADF,EAEE,UAAC1M,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eALH,EAME,YAAM;AACJ,uBAAI,CAACiE,GAAL,CAAS,MAAT,EAAiB,OAAI,CAACgf,UAAL,CAAgB,OAAI,CAACjJ,GAAL,CAAS,MAAT,CAAhB,EAAkC;AAAEzD,oBAAE,EAAFA;AAAF,iBAAlC,CAAjB;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACAmgB,uBAAO;AACR,eAVH;AAYD,aAfqB,CAAtB;AAgBD;;AACD,iBAAO,KAAKiB,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;+BAGoB;;;;;;;;;;;;AACnB;AAED;;;;;;;uCAIyBuV,M,EAAgBoO,K,EAAgB,CACvD;AACA;AACA;AACD;AAED;;;;;;;gCAIkBC,Q,EAAiB;AACjC,iBAAOA,QAAP;AACD;AAED;;;;;;;;;mCAOEC,Q,EACArhB,I,EACkD;AAAA,cAAlDshB,SAAkD,uEAAb,KAAKzC,QAAQ;;AAElD;AACA,cAAI,CAAC7e,IAAD,IAASA,IAAI,CAACgE,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,mBAAOqd,QAAP;AACD;;AACD,cAAME,QAAQ,GAAQ,EAAtB;AACA,cAAMC,UAAU,gCAAOxhB,IAAP,sBAAgBqhB,QAAhB,EAAhB;AACA;;AACA,cAAI,CAACC,SAAL,EAAgB;AACdA,qBAAS,GAAG,KAAKzC,QAAjB;AACD;;AAXiD,sDAY/B2C,UAZ+B;AAAA;;AAAA;AAAA;AAAA,kBAYvChX,IAZuC;AAahD,kBAAM8M,KAAK,GAAGiK,QAAQ,CAACjc,IAAT,CAAc,UAACnF,CAAD;AAAA,uBAAOmhB,SAAS,CAACnhB,CAAD,EAAIqK,IAAJ,CAAhB;AAAA,eAAd,CAAd;AACA;;AACA,kBAAI,CAAC8M,KAAL,EAAY;AACViK,wBAAQ,CAAC5X,IAAT,CAAca,IAAd;AACD;AAjB+C;;AAYlD,mEAA+B;AAAA;AAM9B;AAlBiD;AAAA;AAAA;AAAA;AAAA;;AAmBlD,iBAAO+W,QAAP;AACD;AAED;;;;;;;;;mCAMqBvhB,I,EAAWwK,I,EAAS8W,S,EAAqC;AAC5E,cAAMC,QAAQ,GAAG,EAAjB;AACA;;AACA,cAAI,CAACD,SAAL,EAAgB;AACdA,qBAAS,GAAG,KAAKzC,QAAjB;AACD;;AACD7e,cAAI,CAACE,OAAL,CAAa,UAACC,CAAD;AAAA,mBAAQmhB,SAAS,CAAC9W,IAAD,EAAOrK,CAAP,CAAT,GAAqB,IAArB,GAA4BohB,QAAQ,CAAC5X,IAAT,CAAcxJ,CAAd,CAApC;AAAA,WAAb;AACA,iBAAOohB,QAAP;AACD;;;4BApiBoB;AACnB,iBAAO,KAAKjJ,SAAL,CAAeoH,IAAtB;AACD;;;4BA2CsB;AACrB,iBAAO,KAAKV,UAAZ;AACD;;;;MArE+D,OAAA9hB,S;;AAAlE;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAGa,YAAAukB,8BAAA,GAAiC,UAACC,OAAD,EAA4B;AACtE,cAAQA,OAAR;AACI,aAAK,cAAAC,aAAA,CAAcC,eAAnB;AACI,iBAAO,uBAAP;;AACJ,aAAK,cAAAD,aAAA,CAAcE,eAAnB;AACI,iBAAO,kBAAP;;AACJ,aAAK,cAAAF,aAAA,CAAcG,sBAAnB;AACI,iBAAO,0BAAP;;AACJ,aAAK,cAAAH,aAAA,CAAcI,SAAnB;AACI,iBAAO,YAAP;;AACJ,aAAK,cAAAJ,aAAA,CAAcK,UAAnB;AACI,iBAAO,YAAP;;AACJ,aAAK,cAAAL,aAAA,CAAcM,oBAAnB;AACI,iBAAO,YAAP;;AACJ,aAAK,cAAAN,aAAA,CAAcO,cAAnB;AACI,iBAAO,YAAP;;AACJ,aAAK,cAAAP,aAAA,CAAcQ,QAAnB;AACI,iBAAO,MAAP;;AACJ,aAAK,cAAAR,aAAA,CAAcS,aAAnB;AACI,iBAAO,SAAP;;AACJ,aAAK,cAAAT,aAAA,CAAcU,UAAnB;AACI,iBAAO,aAAP;;AACJ,aAAK,cAAAV,aAAA,CAAcW,YAAnB;AACI,iBAAO,uCAAP;;AACJ,aAAK,cAAAX,aAAA,CAAcY,SAAnB;AACI,iBAAO,sBAAP;;AACJ,aAAK,cAAAZ,aAAA,CAAca,YAAnB;AACI,iBAAO,qBAAP;;AACJ,aAAK,cAAAb,aAAA,CAAcc,WAAnB;AACI,iBAAO,oBAAP;;AACJ,aAAK,cAAAd,aAAA,CAAce,YAAnB;AACI,iBAAO,qBAAP;;AACJ,aAAK,cAAAf,aAAA,CAAcgB,UAAnB;AACI,iBAAO,oBAAP;;AACJ,aAAK,cAAAhB,aAAA,CAAciB,aAAnB;AACI,iBAAO,0BAAP;;AACJ,aAAK,cAAAjB,aAAA,CAAckB,QAAnB;AACI,iBAAO,qBAAP;AACJ;;AACA;AACI,iBAAOnB,OAAP;AAvCR;AAyCH,KA1CY;;AA6CA,YAAAoB,iBAAA,GAAuC;AAChD9d,WAAK,EAAE,cADyC;AAEhD+I,aAAO,EAAE,0DAFuC;AAGhDgV,kBAAY,EAAE;AAHkC,KAAvC;AAKA,YAAAC,kBAAA,GAA0C,CACnD,QAAAF,iBADmD,CAA1C;;AAIA,YAAAG,8BAAA,GAAiC,UAACxZ,CAAD,EAAyC;AACnF,UAAMsE,OAAO,GAAG,QAAA0T,8BAAA,CAA+BhY,CAA/B,CAAhB;AACA,aAAQ;AACJzE,aAAK,EAAEyE,CADH;AAEJsE,eAAO,EAAPA,OAFI;AAGJ;AACA;AACA;AACA;AACA;AACA;AACAgV,oBAAY,EAAEhV;AATV,OAAR;AAWH,KAbY;;AAeA,YAAAmV,4BAAA,GAAoD,CAC7D,cAAAvB,aAAA,CAAcC,eAD+C,EAE7D,cAAAD,aAAA,CAAcE,eAF+C,EAG7D,cAAAF,aAAA,CAAcG,sBAH+C,EAI7D,cAAAH,aAAA,CAAcI,SAJ+C,EAK7D,cAAAJ,aAAA,CAAcK,UAL+C,EAM7D,cAAAL,aAAA,CAAcM,oBAN+C,EAO/Dta,GAP+D,CAO3D,QAAAsb,8BAP2D,CAApD;AASA,YAAAE,+BAAA,GAAuD,CAChE,cAAAxB,aAAA,CAAcS,aADkD,EAEhE,cAAAT,aAAA,CAAcO,cAFkD,EAGhE,cAAAP,aAAA,CAAcQ,QAHkD,EAIhE,cAAAR,aAAA,CAAcU,UAJkD,EAKlE1a,GALkE,CAK9D,QAAAsb,8BAL8D,CAAvD;AAOA,YAAAG,+BAAA,GAAuD,CAChE,cAAAzB,aAAA,CAAcO,cADkD,EAEhE,cAAAP,aAAA,CAAcQ,QAFkD,EAGlExa,GAHkE,CAG9D,QAAAsb,8BAH8D,CAAvD;AAKA,YAAAI,mBAAA,GAA2C,CACpD,cAAA1B,aAAA,CAAcW,YADsC,EAEpD,cAAAX,aAAA,CAAcY,SAFsC,EAGpD,cAAAZ,aAAA,CAAca,YAHsC,EAIpD,cAAAb,aAAA,CAAcc,WAJsC,EAKpD,cAAAd,aAAA,CAAce,YALsC,EAMpD,cAAAf,aAAA,CAAcgB,UANsC,EAOpD,cAAAhB,aAAA,CAAciB,aAPsC,EAQtDjb,GARsD,CAQlD,QAAAsb,8BARkD,CAA3C;AAUA,YAAAK,qBAAA,GAA6C,CACtD,cAAA3B,aAAA,CAAckB,QADwC,EAExDlb,GAFwD,CAEpD,QAAAsb,8BAFoD,CAA7C;AAIb;;;;AAGA,QAAYM,iBAAZ;;AAAA,eAAYA,iBAAZ,EAA6B;AACzB;;;AAGA;AAEA;;;;;AAIA;AAEA;;;;AAGA;AAEA;;;;AAGA;AAEA;;;;AAGA;AACH,KA1BD,EAAYA,iBAAiB,GAAjB,QAAAA,iBAAA,aAAAA,iBAAA,GAAiB,EAAjB,CAAZ;AAmCA;;;;;;;;;;;AASa,YAAAC,4BAAA,GAA+B,UACxCC,WADwC,EAExCC,MAFwC,EAEX;AAC7BzN,cAHwC,EAKU;AAAA,UADlDW,SACkD,uEAD1B,EAC0B;AAAA,UAAlD+M,WAAkD;AAClD,UAAMC,WAAW,GAAYH,WAAW,CAACI,IAAZ,CAAiB,UAAApa,CAAC;AAAA,eAAIA,CAAC,CAACzE,KAAF,KAAY,QAAA8d,iBAAA,CAAkB9d,KAAlC;AAAA,OAAlB,CAA7B;AACA,UAAM8e,YAAY,GAAaL,WAAW,CAACI,IAAZ,CAAiB,UAAApa,CAAC;AAAA,eAAIA,CAAC,CAACzE,KAAF,KAAY,cAAA2c,aAAA,CAAckB,QAA9B;AAAA,OAAlB,CAA/B,CAFkD,CAGlD;;AACA,UAAMkB,cAAc,GAAGN,WAAW,CAAC/a,MAAZ,CAAmB,UAAAA,MAAM;AAAA,eAAI,CAAC,CAAC,QAAAoa,iBAAA,CAAkB9d,KAAnB,EAA0B,cAAA2c,aAAA,CAAckB,QAAxC,EAAkD1H,QAAlD,CAA2DzS,MAAM,CAAC1D,KAAlE,CAAL;AAAA,OAAzB,CAAvB;AACA,UAAMgf,gBAAgB,GAAGD,cAAc,CAAC/f,MAAf,KAA0B,CAAnD,CALkD,CAOlD;AACA;;AACA,UAAMigB,OAAO,GAA4B;AACrCphB,gBAAQ,EAAEoT,UAAU,CAACpT,QADgB;AAErC8X,YAAI,EAAEgJ,WAF+B;AAGrClhB,cAAM,EAAEwT,UAAU,CAACxT;AAHkB,OAAzC;AAKA,UAAIyhB,UAAU,GAAG,CAAjB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,sBAAsB,GAAG,CAA7B;AACA,UAAMC,SAAS,GAAyB,EAAxC;AACA7c,aAAO,CAAC8c,KAAR;AACA,UAAMC,cAAc,GAAGb,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAE/b,GAAR,CAAY,UAAA6c,KAAK;AAAA,eAAIA,KAAK,YAAY,SAAAC,KAAjB,GAAyBD,KAAzB,GAAiC,IAAI,SAAAC,KAAJ,CAAUD,KAAV,CAArC;AAAA,OAAjB,EAAwE9b,MAAxE,CAA+E,UAAAgc,SAAS,EAAI;;;AAC/G,YAAMF,KAAK,GAAG,IAAI,SAAAC,KAAJ,CAAUC,SAAV,CAAd,CAD+G,CAC3E;;AACpC,YAAMC,QAAQ,GAAG/N,SAAS,CAACtR,IAAV,CAAe,UAAA4E,CAAC;AAAA,iBAAIsa,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqBjR,CAAC,CAAC6J,EAAvB,CAAJ;AAAA,SAAhB,CAAjB;AACA,YAAM8Q,KAAK,GAAG,kBAAAC,aAAA,CAAc;AACxBxZ,cAAI,EAAE2Y,OAAO,CAACxhB,MAAR,CAAegJ,EADG;AAExB5I,kBAAQ,EAAEohB,OAAO,CAACphB,QAFM;AAGxBoX,cAAI,EAAEgK,OAAO,CAACtJ,IAHU;AAIxBkK,eAAK,EAAEF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEI,aAJO;AAKxBP,eAAK,EAALA;AALwB,SAAd,CAAd;AAOAL,kBAAU,GAAGU,KAAK,CAACG,MAAnB;AACA,YAAIC,KAAK,GAAG,CAACJ,KAAK,CAACK,IAAnB;;AACA,YAAI,CAACD,KAAL,EAAY;AACRf,oBAAU;AACV,iBAAO,KAAP;AACH,SAf8G,CAkB/G;;;AACA,YAAMiB,cAAc,GAAGpB,cAAc,CAACqB,KAAf,CAAqB,UAAA3b,CAAC;AAAA,iBAAI+a,KAAK,CAACa,aAAN,CAAoBlK,QAApB,CAA6B1R,CAAC,CAACzE,KAA/B,CAAJ;AAAA,SAAtB,CAAvB;AACA,YAAMsgB,OAAO,GAAG1B,WAAW,GAAGY,KAAK,CAACe,QAAT,GAAoB,IAA/C;AACA,YAAMC,WAAW,GAAG,OAAAvP,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAEwP,WAAZ,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEzgB,KAAzB,MAAmC,UAAnC,GACE,IADF,GAEE,OAAAwf,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEkB,oBAAP,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAE1hB,MAA7B,IACAwgB,KAAK,CAACkB,oBAAN,MAA0B,MAAKzP,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAEwP,WAAjB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEzgB,KAAxD,CADA,GAEA,IAJtB;AAKAigB,aAAK,GAAGA,KAAK,IAAIO,WAAT,KAAyBxB,gBAAgB,IAAImB,cAA7C,KAAgEG,OAAxE;AACA,YAAIK,WAAW,GAAGhB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEiB,YAA5B;;AACA,YAAI,CAAApB,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEoB,YAAP,MAAwB,KAA5B,EAAmC;AAC/BD,qBAAW,GAAG,KAAd;AACH,SA9B8G,CA+B/G;;;AACA,YAAI7B,YAAY,IAAI,CAAC6B,WAArB,EAAkC;AAC9BV,eAAK,GAAG,KAAR;AACAzd,iBAAO,CAACV,GAAR,CAAY,sBAAZ;AACH,SAnC8G,CAqC/G;;;AACA,YAAI,CAACqe,cAAL,EAAqB;AACjBF,eAAK,GAAG,KAAR;AACAzd,iBAAO,CAACV,GAAR,CAAY,oBAAZ;AACH;;AAED,YAAM+e,MAAM,GAAG,oBAAAC,kBAAA,CACXtB,KAAK,CAAC3S,QAAN,CAAe7N,MAAf,GAAwBwgB,KAAK,CAAC3S,QAAN,CAAelK,GAAf,CAAmB,UAAAuC,CAAC;AAAA,iBAAI,IAAI,gBAAA6b,OAAJ,CAAY7b,CAAZ,CAAJ;AAAA,SAApB,CAAxB,GAAkEsa,KAAK,CAAChK,QAAN,CAAe3I,QAAf,CAAwBlK,GAAxB,CAA4B,UAAAuC,CAAC;AAAA,iBAAI,IAAI,gBAAA6b,OAAJ,CAAY7b,CAAZ,CAAJ;AAAA,SAA7B,CADvD,EAEXsa,KAAK,CAACe,QAAN,IAAkB,CAACV,KAAK,CAACK,IAFd,EAGX,CAACL,KAAK,CAACmB,YAHI,EAIX/P,UAAU,CAACxT,MAJA,EAKX+hB,KALW,CAAf,CA3C+G,CAmD/G;;AACA,YAAIZ,WAAW,IAAIqB,KAAnB,EAA0B;AACtBA,eAAK,GAAGY,MAAM,CAACA,MAAP,KAAkB;AAAL;AAArB;AACA,cAAI,CAACZ,KAAL,EAAYzd,OAAO,CAAC8c,KAAR,CAAc,oBAAd;AACf,SAvD8G,CAyD/G;;;AACA,YAAIW,KAAJ,EAAW;AACPZ,mBAAS,CAACG,KAAK,CAACzQ,EAAP,CAAT,GAAsB8R,MAAM,CAACA,MAA7B;AACH,SAFD,MAEO;AACHzB,gCAAsB;AACzB;;AACD5c,eAAO,CAACV,GAAR,CAAY,QAAZ,EAAsBme,KAAtB;AACA,eAAOA,KAAP;AACH,OAjEsB,CAAvB;AAmEAzd,aAAO,CAACye,QAAR;AACA,UAAIjB,MAAJ;AAAA,UAAYkB,cAAc,GAAG3C,iBAAiB,CAAC4C,IAA/C;AACA3e,aAAO,CAACV,GAAR,CAAY,SAAZ,EAAuByd,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAEvgB,MAAvC,EAA+CogB,sBAA/C,EAAuEF,UAAvE,EAAmFC,UAAnF;;AACA,UAAI,CAAAI,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAEvgB,MAAhB,MAA2B,CAA/B,EAAkC;AAC9B,YAAIogB,sBAAsB,GAAG,CAAzB,KAA+B,CAACJ,gBAAD,IAAqBF,YAApD,CAAJ,EAAuE;AACnEkB,gBAAM,GAAGzB,iBAAiB,CAAC6C,OAA3B;AACH,SAFD,MAEO,IAAIlC,UAAU,GAAG,CAAjB,EAAoB;AACvBc,gBAAM,GAAGzB,iBAAiB,CAAC8C,WAA3B;AACH,SAFM,MAGF;AACDrB,gBAAM,GAAGzB,iBAAiB,CAAC9e,QAA3B;AACH;;AAED,YAAI0f,UAAU,KAAKZ,iBAAiB,CAAC8C,WAArC,EAAkD;AAC9CH,wBAAc,GAAG3C,iBAAiB,CAAC8C,WAAnC;AACH;AACJ;;AAED,aAAO;AAAE3C,cAAM,EAAEa,cAAV;AAA0BS,cAAM,EAANA,MAA1B;AAAkCX,iBAAS,EAATA,SAAlC;AAA6C6B,sBAAc,EAAdA;AAA7C,OAAP;AACH,KA9GY;;;;;;;;;;;;;;;;;;;;;ACrKb;AAAA;AAAA;;AAIsE;AAIzD,YAAAlQ,oBAAA,GAAuB,QAAAjE,YAAA,CAAa,+BAAb,EAChC,QAAAC,KAAA,EADgC,CAAvB;AAGA,YAAAmE,oBAAA,GAAuB,QAAApE,YAAA,CAAa,+BAAb,CAAvB;AAEA,YAAAuE,gBAAA,GAAmB,QAAAvE,YAAA,CAAa,kCAAb,EAC5B,QAAAC,KAAA,EAD4B,CAAnB;AAGA,YAAAuE,gBAAA,GAAmB,QAAAxE,YAAA,CAAa,kCAAb,CAAnB;AAEA,YAAAqE,iBAAA,GAAoB,QAAArE,YAAA,CAAa,mCAAb,CAApB;;;;;;;;;;;;;;;;;;;ACZA,YAAAuU,wBAAA,GAA2B,EAA3B;AAEA,YAAAC,yBAAA,GAA4B;AACrCvhB,WAAK,EAAE,UAD8B;AAErC+I,aAAO,EAAE;AAF4B,KAA5B;AAKA,YAAAyY,oBAAA,GAAuB;AAChCxhB,WAAK,EAAE,UADyB;AAEhC+I,aAAO,EAAE;AAFuB,KAAvB;AAKA,YAAA0Y,kBAAA,GAA6C,CACtD,QAAAF,yBADsD,EAEtD;AACIvhB,WAAK,EAAE,UADX;AAEI+I,aAAO,EAAE;AAFb,KAFsD,CAA7C;AAQA,YAAA2Y,qBAAA,GAAwB;AACjC1hB,WAAK,EAAE,GAD0B;AAEjC+I,aAAO,EAAE;AAFwB,KAAxB;AAKA,YAAA4Y,eAAA,GAA0C,CACnD;AACI3hB,WAAK,EAAE,GADX;AAEI+I,aAAO,EAAE;AAFb,KADmD,EAKnD,QAAA2Y,qBALmD,EAMnD;AACI1hB,WAAK,EAAE,GADX;AAEI+I,aAAO,EAAE;AAFb,KANmD,CAA1C;AAYA,YAAA6Y,oBAAA,gCACP,QAAAD,eADO,IAET;AACI3hB,WAAK,EAAE,GADX;AAEI+I,aAAO,EAAE;AAFb,KAFS;;AAQA,YAAA8Y,mBAAA,GAAsB,UAACC,QAAD,EAA8B;AAC7D,cAAQA,QAAR;AACI,aAAK,GAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,GAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,GAAL;AACI,iBAAO,EAAP;;AACJ,aAAK,GAAL;AACI,iBAAO,IAAP;AARR;AAUH,KAXY;;AAaA,YAAAC,sBAAA,GAAyB,UAACD,QAAD,EAA8B;AAChE,cAAQA,QAAR;AACI,aAAK,GAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,GAAL;AACI,iBAAO,CAAP;;AACJ;AACI,iBAAO,IAAP;AANR;AAQH,KATY;AA4Cb;;;;;AAGa,YAAAE,mBAAA,GAAsB,UAC/BC,IAD+B,EAEZ;iBAAA,CACnB;;;AACA,UAAMC,mBAAmB,GAAGD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEvM,QAAN,CACvBhS,MADuB,CAChB,UAACkP,CAAD;AAAA,eAAOA,CAAC,CAACuP,UAAT;AAAA,OADgB,EAEvBxf,GAFuB,CAEnB,UAACiQ,CAAD;AAAA,eAAOA,CAAC,CAAC5S,KAAT;AAAA,OAFmB,EAGvBmG,IAHuB,CAGlB,GAHkB,CAA5B;AAIA,aAAO;AACH1I,cAAM,EAAEwkB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAExkB,MADX;AAEHI,gBAAQ,EAAEokB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEpkB,QAFb;AAGHukB,iBAAS,EAAEF,mBAHR;AAIHG,gBAAQ,EAAE,QAAAR,mBAAA,CAAoB,CAAD,KAACI,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEH,QAAN,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE9hB,KAApC,CAJP;AAKHsiB,oBAAY,EAAE,QAAAP,sBAAA,CAAuB,CAAD,KAACE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEH,QAAN,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE9hB,KAAvC;AALX,OAAP;AAOH,KAfY;;;;;;;;;;;;;;;;;;;;;AC/Gb;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA,QAAMuiB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;;AAEa,YAAA8lB,sBAAA,GAAyB;AAAA,aAAyB;AAC3DvR,kBAAU,EAAE;AACRxT,gBAAM,EAAE8kB,GADA;AAER1kB,kBAAQ,EAAE,IAAI,oBAAAyjB,wBAFN;AAGR5L,kBAAQ,EAAE,EAHF;AAIR+K,qBAAW,EAAE,oBAAAc,yBAJL;AAKRO,kBAAQ,EAAE,oBAAAJ;AALF,SAD+C;AAQ3D5Q,yBAAiB,EAAE;AARwC,OAAzB;AAAA,KAAzB;;;;;;;;;;;;;;;;;;;;;ACVb;AAAA;AAAA;;AAIA;AAAA;AAAA;;AASA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAIa,YAAA2R,sBAAA,GACT,UAAC5qB,KAAD;AAAA,aACKA,KAAa,CAAC6qB,WADnB;AAAA,KADS;;AAIA,YAAAC,gBAAA,GAAmB,QAAA7Q,cAAA,CAAe,QAAA2Q,sBAAf,EAAuC,UAAA5qB,KAAK,EAAI;iBAAA,CAC5E;;;AACA,UAAI,QAACA,KAAK,CAACoZ,UAAP,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAExT,MAAnB,CAAJ,EAA+B;AAC3B,eAAO5F,KAAK,CAACoZ,UAAb;AACH;;AAJ2E,iBAKlC,CAAH,KAAGpZ,KAAK,CAACoZ,UAAN,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAExT,MALgB;AAAA,UAKpEX,IALoE,QAKpEA,IALoE;AAAA,UAK9D8lB,WAL8D,QAK9DA,WAL8D;AAAA,UAKjDC,WALiD,QAKjDA,WALiD;;AAM5E,aAAO,MAAP,OAAO,CAAP,kBACOhrB,KAAK,CAACoZ,UADb,CAAO,EACgB;AACnBxT,cAAM,EAAE,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,cAAI,EAAEA,IAAI,CAAC6C,OAAL,EAAR;AAAwBijB,qBAAW,EAAXA,WAAxB;AAAqCC,qBAAW,EAAXA;AAArC,SAAX;AADW,OADhB,CAAP;AAIH,KAV+B,CAAnB;AAYA,YAAAC,iBAAA,GAAoB,QAAAhR,cAAA,CAAe,QAAA6Q,gBAAf,EAC7B,UAACnK,IAAD;AAAA,aAAUA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEiI,WAAhB;AAAA,KAD6B,CAApB;AAGA,YAAAsC,sBAAA,GAAyB,QAAAjR,cAAA,CAAe,QAAA6Q,gBAAf,EAClC,UAACnK,IAAD;AAAA,aAAU,CAAC,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE9C,QAAN,KAAkB,EAAnB,EAAuBhS,MAAvB,CAA8B,UAAAe,CAAC;AAAA,eAAI,CAACA,CAAC,CAACue,WAAP;AAAA,OAA/B,CAAV;AAAA,KADkC,CAAzB;AAGA,YAAAC,gBAAA,GAAmB,QAAAnR,cAAA,CAAe,QAAAgR,iBAAf,EAC5B,UAAC/gB,IAAD;AAAA,aAAU,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE/B,KAAN,MAAgB,oBAAAuhB,yBAAA,CAA0BvhB,KAApD;AAAA,KAD4B,CAAnB;AAGA,YAAAkjB,iBAAA,GAAoB,QAAApR,cAAA,CAAe,QAAA2Q,sBAAf,EAC7B,UAAC5qB,KAAD;AAAA,aAAWA,KAAK,CAACiZ,iBAAN,IAA2B,EAAtC;AAAA,KAD6B,CAApB;AAGb,QAAMqS,0BAA0B,GAAG,QAAArR,cAAA,CAAe,gBAAAsR,iBAAf,EAC/B,gBAAAC,mBAAA,CAAoBtR,SAApB,CAA8BuR,KADC,CAAnC;AAGA,QAAMC,8BAA8B,GAAG,QAAAzR,cAAA,CAAe,gBAAAsR,iBAAf,EACnC,gBAAAI,sBAAA,CAAuBzR,SAAvB,CAAiCuR,KADE,CAAvC;AAGA,QAAMG,kCAAkC,GAAG,QAAA3R,cAAA,CAAe,gBAAAsR,iBAAf,EACvC,gBAAAM,uBAAA,CAAwB3R,SAAxB,CAAkCuR,KADK,CAA3C;AAEA,QAAMK,6BAA6B,GAAG,QAAA7R,cAAA,CAAe,gBAAAsR,iBAAf,EAClC,gBAAAQ,kBAAA,CAAmB7R,SAAnB,CAA6BuR,KADK,CAAtC;AAEA,QAAMO,0BAA0B,GAAG,QAAA/R,cAAA,CAAe,gBAAAsR,iBAAf,EAC/B,gBAAAU,eAAA,CAAgB/R,SAAhB,CAA0BuR,KADK,CAAnC;AAEA,QAAMS,8BAA8B,GAAG,QAAAjS,cAAA,CAAe,gBAAAsR,iBAAf,EACnC,gBAAAY,mBAAA,CAAoBjS,SAApB,CAA8BuR,KADK,CAAvC;AAGa,YAAAW,sCAAA,GAAyC,QAAAnS,cAAA,CAAe,mBAAAlF,oBAAf,EAC9C,mBAAAK,2BAAA,CAA4B8E,SAA5B,CAAsCuR,KADQ,CAAzC;AAEA,YAAAY,sCAAA,GAAyC,QAAApS,cAAA,CAAe,mBAAAlF,oBAAf,EAClD,mBAAAO,2BAAA,CAA4B4E,SAA5B,CAAsCuR,KADY,CAAzC;AAEA,YAAAa,kCAAA,GAAqC,QAAArS,cAAA,CAAe,mBAAAlF,oBAAf,EAC1C,mBAAAQ,uBAAA,CAAwB2E,SAAxB,CAAkCuR,KADQ,CAArC;AAEA,YAAAc,uCAAA,GAA0C,QAAAtS,cAAA,CAAe,mBAAAlF,oBAAf,EAC/C,mBAAAS,4BAAA,CAA6B0E,SAA7B,CAAuCuR,KADQ,CAA1C;AAEA,YAAAe,iCAAA,GAAoC,QAAAvS,cAAA,CAAe,mBAAAlF,oBAAf,EACzC,mBAAAU,sBAAA,CAAuByE,SAAvB,CAAiCuR,KADQ,CAApC;AAGb;;;;;AAIA,QAAMgB,qCAAqC,GAAG,SAAxCA,qCAAwC,CAC1ChgB,OAD0C,EAE1Cma,WAF0C,EAG1CxN,UAH0C,EAI1CW,SAJ0C,EAK1C+M,WAL0C,EAKsB;AAChE,UAAMsD,IAAI,GAAG3d,OAAO,CAAC0N,eAArB,CADgE,CAGhE;;AACA,aAAO,CAACf,UAAD,GAAc3M,OAAO,CAACigB,MAAR,CAAe;AAChC7F,cAAM,EAAEuD,IADwB;AAEhCjC,cAAM,EAAE,uBAAAzB,iBAAA,CAAkB4C,IAFM;AAGhC9B,iBAAS,EAAE;AAHqB,OAAf,CAAd,GAIF/a,OAAO,CAACigB,MAAR,CACD,uBAAA/F,4BAAA,CAA6BC,WAA7B,EAA0CwD,IAA1C,EAAgDhR,UAAhD,EAA4DW,SAAS,IAAIX,UAAU,CAACW,SAApF,EAA+F+M,WAA/F,CADC,CAJL;AAMH,KAfD;;AAiBa,YAAA6F,qBAAA,GAAwB,QAAA1S,cAAA,CAAeqR,0BAAf,EACjC,QAAAD,iBADiC,EAEjC,QAAAP,gBAFiC,EAGjC,oBAAA9Q,0BAHiC,EAIjC,eAAAmD,iBAJiC,EAKjCsP,qCALiC,CAAxB;AAOA,YAAAG,wBAAA,GAA2B,QAAA3S,cAAA,CAAeyR,8BAAf,EACpC,QAAAZ,gBADoC,EAEpC,oBAAA9Q,0BAFoC,EAGpC,eAAAmD,iBAHoC,EAIpC,UAAC1Q,OAAD,EAAU2M,UAAV,EAAsBW,SAAtB,EAAiC+M,WAAjC;AAAA,aAAiD2F,qCAAqC,CAAChgB,OAAD,EAAU,EAAV,EAAc2M,UAAd,EAA0BW,SAA1B,EAAqC+M,WAArC,CAAtF;AAAA,KAJoC,CAA3B;AAMA,YAAA+F,6BAAA,GAAgC,QAAA5S,cAAA,CAAe2R,kCAAf,EACzC,QAAAP,iBADyC,EAEzC,QAAAP,gBAFyC,EAGzC,oBAAA9Q,0BAHyC,EAIzC,eAAAmD,iBAJyC,EAKzCsP,qCALyC,CAAhC;AAOA,YAAAK,4BAAA,GAA+B,QAAA7S,cAAA,CAAe6R,6BAAf,EACxC,QAAAT,iBADwC,EAExC,QAAAP,gBAFwC,EAGxC,oBAAA9Q,0BAHwC,EAIxC,eAAAmD,iBAJwC,EAKxCsP,qCALwC,CAA/B;AAQA,YAAAM,yBAAA,GAA4B,QAAA9S,cAAA,CAAe+R,0BAAf,EACrC,QAAAlB,gBADqC,EAErC,oBAAA9Q,0BAFqC,EAGrC,eAAAmD,iBAHqC,EAIrC,UAAC1Q,OAAD,EAAU2M,UAAV,EAAsBW,SAAtB,EAAiC+M,WAAjC;AAAA,aAAiD2F,qCAAqC,CAAChgB,OAAD,EAAU,EAAV,EAAc2M,UAAd,EAA0BW,SAA1B,EAAqC+M,WAArC,CAAtF;AAAA,KAJqC,CAA5B;AAMA,YAAAkG,6BAAA,GAAgC,QAAA/S,cAAA,CAAeiS,8BAAf,EACzC,QAAAb,iBADyC,EAEzC,QAAAP,gBAFyC,EAGzC,oBAAA9Q,0BAHyC,EAIzC,eAAAmD,iBAJyC,EAKzCsP,qCALyC,CAAhC;AAOb;;;;AAGa,YAAAQ,6BAAA,GAAgC,QAAAhT,cAAA,CACzC,QAAAiR,sBADyC,EAEzC,oBAAAlR,0BAFyC,EAGzC,UAACuQ,SAAD,EAAYxQ,SAAZ;AAAA,aAA2BwQ,SAAS,CAC/Bzf,GADsB,CAClB,UAAAiQ,CAAC;AAAA,eAAIhB,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAEtR,IAAX,CAAgB,UAAA4E,CAAC;AAAA,iBAAIA,CAAC,CAAC6J,EAAF,KAAS6D,CAAC,CAAC5S,KAAf;AAAA,SAAjB,CAAJ;AAAA,OADiB,EAEtB0D,MAFsB,CAEf,UAAAe,CAAC;AAAA,eAAI,CAAC,CAACA,CAAN;AAAA,OAFc,CAA3B;AAAA,KAHyC,CAAhC;;;;;;;;;;;;;;;;;;;;AClKb;AAAA;AAAA;;AAOA;AAAA;AAAA;AAEA;;;;;AAGA,QAAMsgB,oBAAoB,GAAG,CAA7B;;AAEa,YAAAC,yBAAA,GAA4B,UACrCzS,IADqC,EAErCoN,QAFqC;AAAA,aAGhB;AACrB5W,eAAO,YAAK4W,QAAQ,CAAC9mB,IAAd,cAAsB,OAAAuO,eAAA,CACzB,OAAAL,kBAAA,CAAmB4Y,QAAQ,CAACje,QAA5B,CADyB,CAAtB,CADc;AAIrBujB,wBAAgB,YAAKtF,QAAQ,CAACuF,IAAd,cAAsBvF,QAAQ,CAAC9mB,IAA/B,eAAwC8mB,QAAQ,CAACwF,OAAjD,CAJK;AAKrBnlB,aAAK,EAAE2f,QAAQ,CAAC5Q,EALK;AAMrBqW,eAAO,EAAE7S,IANY;AAOrB4P,kBAAU,EAAE,IAPS;AAQrBpE,oBAAY,YAAK4B,QAAQ,CAAC9mB,IAAd,cAAsB,OAAAuO,eAAA,CAC9B,OAAAL,kBAAA,CAAmB4Y,QAAQ,CAACje,QAA5B,CAD8B,CAAtB,CARS;AAWrB2jB,YAAI,EAAE;AAAE1F,kBAAQ,EAARA,QAAF;AAAYpN,cAAI,EAAJA;AAAZ;AAXe,OAHgB;AAAA,KAA5B;;AAiBA,YAAA+S,wBAAA,GAA2B,UACpC/S,IADoC;AAAA,aAEf;AACrBxJ,eAAO,YAAKwJ,IAAI,CAAC1Z,IAAV,4BAAgC,OAAAuO,eAAA,CACnC,OAAAL,kBAAA,CAAmBwL,IAAI,CAAC7Q,QAAxB,CADmC,CAAhC,CADc;AAIrB1B,aAAK,EAAEuS,IAAI,CAAC1Z,IAJS;AAKrBmqB,mBAAW,EAAE,IALQ;AAMrBoC,eAAO,EAAE7S,IAAI,CAAC1Z,IANO;AAOrBklB,oBAAY,YAAKxL,IAAI,CAAC1Z,IAAV,4BAAgC,OAAAuO,eAAA,CACxC,OAAAL,kBAAA,CAAmBwL,IAAI,CAAC7Q,QAAxB,CADwC,CAAhC,CAPS;AAUrB2jB,YAAI,EAAE;AAAE9S,cAAI,EAAJA;AAAF;AAVe,OAFe;AAAA,KAA3B;AAeb;;;;;;AAIa,YAAAgT,qBAAA,GAAwB,UACjCC,OADiC,EAEhC;AACD,UAAMvG,OAAO,GAAwB,EAArC;AACAuG,aAAO,CAACtqB,OAAR,CAAgB,UAAC8E,KAAD,EAAQxH,GAAR,EAAgB;AAC5BymB,eAAO,CAACta,IAAR,CAAa,QAAA2gB,wBAAA,CAAyB9sB,GAAzB,CAAb;AACAwH,aAAK,CAAC9E,OAAN,CAAc,UAACgK,CAAD;AAAA,iBACV+Z,OAAO,CAACta,IAAR,CAAa,QAAAqgB,yBAAA,CAA0BxsB,GAAG,CAACK,IAA9B,EAAoCqM,CAApC,CAAb,CADU;AAAA,SAAd;AAGH,OALD;AAMA,aAAO+Z,OAAP;AACH,KAXY;AAab;;;;;;;;;;;;;AAWa,YAAAwG,qBAAA,GAAwB,UACjCxG,OADiC,EAEjCyG,eAFiC,EAGjCC,MAHiC,EAIhC;AACD,UAAID,eAAe,CAACplB,IAAhB,CAAqB,UAAC+R,CAAD;AAAA,eAAOA,CAAC,CAACrS,KAAF,KAAY2lB,MAAM,CAAC3lB,KAA1B;AAAA,OAArB,CAAJ,EAA2D;AACvD,eAAO0lB,eAAe,CAAChiB,MAAhB,CAAuB,UAAC2O,CAAD,EAAO;AACjC,cAAI3O,MAAM,GAAG2O,CAAC,CAACrS,KAAF,KAAY2lB,MAAM,CAAC3lB,KAAhC,CADiC,CAEjC;;AACA,cAAI2lB,MAAM,CAAC3C,WAAX,EAAwB;AACpBtf,kBAAM,GACFA,MAAM,KACL,CAAC2O,CAAC,CAAC8P,UAAH,IACI9P,CAAC,CAAC8P,UAAF,IAAgB9P,CAAC,CAAC+S,OAAF,KAAcO,MAAM,CAACP,OAFpC,CADV;AAIH,WALD,MAKO,IAAIO,MAAM,CAACxD,UAAX,EAAuB;AAC1B;AACAze,kBAAM,GACFA,MAAM,KACL,CAAC2O,CAAC,CAAC2Q,WAAH,IACI3Q,CAAC,CAAC2Q,WAAF,IAAiB3Q,CAAC,CAAC+S,OAAF,KAAcO,MAAM,CAACP,OAFrC,CADV;AAIH;;AACD,iBAAO1hB,MAAP;AACH,SAhBM,CAAP;AAiBH,OAnBA,CAoBD;AACA;;;AACA,UAAIiiB,MAAM,CAAC3C,WAAX,EAAwB;AACpB,YAAM4C,QAAQ,GAAG3G,OAAO,CAACvb,MAAR,CACb,UAAC8F,CAAD;AAAA,iBACIA,CAAC,CAAC2Y,UAAF,IACA3Y,CAAC,CAAC4b,OAAF,KAAcO,MAAM,CAAC3lB,KADrB,IAEA,CAAC0lB,eAAe,CAACplB,IAAhB,CAAqB,UAACulB,QAAD;AAAA,mBAAcA,QAAQ,CAAC7lB,KAAT,KAAmBwJ,CAAC,CAACxJ,KAAnC;AAAA,WAArB,CAHL;AAAA,SADa,CAAjB;AAMA,4CAAW0lB,eAAX,IAA4BC,MAA5B,sBAAuCC,QAAvC;AACH,OA9BA,CA+BD;;;AACA,UAAME,QAAQ,gCAAOJ,eAAP,IAAwBC,MAAxB,EAAd,CAhCC,CAkCD;AACA;;AACA,UAAMI,wBAAwB,GAAG9G,OAAO,CAACvb,MAAR,CAC7B,UAACsiB,CAAD;AAAA,eACIA,CAAC,CAAC7D,UAAF,IACA6D,CAAC,CAACZ,OAAF,KAAcO,MAAM,CAACP,OADrB,IAEA,CAACU,QAAQ,CAACxlB,IAAT,CAAc,UAAC2lB,EAAD;AAAA,iBAAQA,EAAE,CAACjmB,KAAH,KAAagmB,CAAC,CAAChmB,KAAvB;AAAA,SAAd,CAHL;AAAA,OAD6B,CAAjC,CApCC,CA0CD;;AACA,UAAI+lB,wBAAwB,CAAC/mB,MAAzB,KAAoC,CAAxC,EAA2C;AACvC,4CACO8mB,QADP,IAEI7G,OAAO,CAAC3e,IAAR,CAAa,UAAC0lB,CAAD;AAAA,iBAAOA,CAAC,CAAChD,WAAF,IAAiBgD,CAAC,CAACZ,OAAF,KAAcO,MAAM,CAACP,OAA7C;AAAA,SAAb,CAFJ;AAIH;;AACD,aAAOU,QAAP;AACH,KAtDY;AAwDb;;;;;;AAIa,YAAAI,oBAAA,GAAuB,UAChC9D,SADgC,EAEvB;AACT;AACA,UAAI+D,kBAAkB,sBAAO/D,SAAP,CAAtB;;AACA,UAAMgE,cAAc,GAAGhE,SAAS,CAACpjB,MAAV,GAAmB+lB,oBAA1C;;AACA,UAAIqB,cAAJ,EAAoB;AAChBD,0BAAkB,GAAGA,kBAAkB,CAAC5c,MAAnB,CAA0B,CAA1B,EAA6Bwb,oBAA7B,CAArB;AACH;;AACD,UAAIhc,OAAO,GAAGod,kBAAkB,CAC3BxjB,GADS,CACL,UAACiQ,CAAD;AAAA,eAAOA,CAAC,CAACmL,YAAF,IAAkBnL,CAAC,CAAC7J,OAA3B;AAAA,OADK,EAET5C,IAFS,CAEJ,IAFI,CAAd;;AAGA,UAAIigB,cAAJ,EAAoB;AAChBrd,eAAO,kBAAWqZ,SAAS,CAACpjB,MAArB,MAAP;AACH;;AACD,aAAO+J,OAAP;AACH,KAhBY;;AAkBA,YAAAsd,wBAAA,GAA2B,UACpCC,KADoC;AAAA,aAGpCA,KAAK,GACC;AACItmB,aAAK,EAAEsmB,KAAK,CAACvX,EADjB;AAEIhG,eAAO,EAAEud,KAAK,CAACztB;AAFnB,OADD,GAKCkG,SAR8B;AAAA,KAA3B;AAUb;;;;;;AAIa,YAAAwnB,0BAAA,GAA6B,UAAC3U,SAAD,EAA2B;AACjE,UAAM4U,eAAe,GAAG,OAAAhjB,MAAA,CACpBoO,SAAS,CAACnR,MAAV,CAAiB,UAACwK,IAAD,EAAwB0U,QAAxB,EAA+C;AAC5D1U,YAAI,CAACtG,IAAL,OAAAsG,IAAI,qBAAS0U,QAAQ,CAAChN,MAAlB,EAAJ;AACA,eAAO1H,IAAP;AACH,OAHD,EAGG,EAHH,CADoB,EAKpB,IALoB,CAAxB;AAOA,aAAO;AACHub,uBAAe,EAAfA,eADG;AAEH5U,iBAAS,EAATA;AAFG,OAAP;AAIH,KAZY;AAcb;;;AAEa,YAAA6U,gBAAA,GAAmB,UAACC,GAAD,EAAyB;AACrD,UAAItrB,KAAJ;;AACA,UAAIsrB,GAAG,IAAI,CAAX,EAAc;AACVtrB,aAAK,GAAGsrB,GAAR;AACH,OAFD,MAEO,IAAIA,GAAG,GAAG,CAAN,KAAY,CAAhB,EAAmB;AACtBtrB,aAAK,GAAG,CAAR;AACH,OAFM,MAEA;AACHA,aAAK,GAAG,CAAR;AACH;;AACD,oDAAuCA,KAAvC;AACH,KAVY;AAYb;;;;;;AAIa,YAAAurB,eAAA,GAAkB,UAC3BC,kBAD2B,EAE3BC,eAF2B,EAG3BC,aAH2B,EAI3BC,QAJ2B,EAMpB;AAAA,UADPC,YACO,uEADiB,KACjB;AACP,UAAIC,WAAW,GAAUJ,eAAe,CAAClkB,GAAhB,CAAoB,UAACxH,CAAD;AAAA,eACzCA,CAAC,GAAG;AAAE+rB,cAAI,EAAE,QAAAT,gBAAA,CAAiBtrB,CAAjB;AAAR,SAAH,GAAmC,KADK;AAAA,OAApB,CAAzB;AAGA0rB,qBAAe,CAAC3rB,OAAhB,CAAwB,UAACisB,CAAD,EAAO;AAC3B,YAAMC,gBAAgB,aAAMN,aAAN,SAAsBC,QAAtB,mBAAuCI,CAAvC,SAAtB;AACA,YAAME,YAAY,GAAG3R,QAAQ,CAAC4R,QAAT,CAAkBnR,QAAlB,CAA2B,WAA3B,cAA8CT,QAAQ,CAACO,MAAvD,oBAAuEmR,gBAAvE,IAA4FA,gBAAjH;;AACA,YAAI,CAACJ,YAAL,EAAmB;AACf,cAAMO,MAAM,GAAG,IAAIC,KAAJ,EAAf;;AACAD,gBAAM,CAACE,MAAP,GAAgB,YAAM;AAClB;AACAR,uBAAW,CAACE,CAAC,GAAG,CAAL,CAAX,GAAqB;AAAED,kBAAI,EAAEG;AAAR,aAArB;AACAT,8BAAkB,CAACK,WAAnB,sBAAqCA,WAAW,CAACrkB,KAAZ,EAArC;AACA,aAAAgkB,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,GAAkB,MAAlB,GAAAA,kBAAkB,CAAEc,UAApB,MAAkCd,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,GAAkB,MAAlB,GAAAA,kBAAkB,CAAEc,UAApB,CAA+Bzc,IAA/B,oBAAwCgc,WAAW,CAACrkB,KAAZ,EAAxC,EAAlC;AACH,WALD;;AAMA2kB,gBAAM,CAACI,GAAP,GAAaN,YAAb;AACH,SAZ0B,CAc3B;;;AACA,YAAIL,YAAJ,EAAkB;AACdC,qBAAW,CAACE,CAAC,GAAG,CAAL,CAAX,GAAqB;AAAED,gBAAI,EAAEG;AAAR,WAArB;AACAT,4BAAkB,CAACK,WAAnB,GAAiCA,WAAW,CAACrkB,KAAZ,EAAjC;AACH;AACJ,OAnBD;AAoBH,KA9BY;;AAgCA,YAAAglB,oBAAA,GAAuB,UAACnW,OAAD,EAAsB;AACtD,UAAM8Q,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,UAAImrB,KAAK,GAAG,EAAZ;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAItW,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEoP,MAAb,EAAqB;AACjB,YAAMA,MAAM,GAAG0B,GAAG,GAAG9Q,OAAO,CAAC9J,SAAd,GAA0B,SAA1B,GAAsC8J,OAAO,CAACoP,MAA7D;;AACA,gBAAQA,MAAR;AACI,eAAK,aAAL;AACIgH,iBAAK,GAAG,mCAAR;AACAE,iBAAK,GAAG,aAAR;AACAD,gBAAI,GAAG,aAAP;AACA;;AACJ,eAAK,UAAL;AACID,iBAAK,GAAG,mCAAR;AACAE,iBAAK,GAAG,WAAR;AACAD,gBAAI,GAAG,WAAP;AACA;;AACJ,eAAK,WAAL;AACID,iBAAK,GAAG,mCAAR;AACAE,iBAAK,GAAG,WAAR;AACAD,gBAAI,GAAG,WAAP;AACA;;AACJ,eAAK,SAAL;AACID,iBAAK,GAAG,iCAAR;AACAE,iBAAK,GAAG,SAAR;AACAD,gBAAI,GAAG,SAAP;AACA;;AACJ,eAAK,WAAL;AACID,iBAAK,GAAG,iCAAR;AACAE,iBAAK,GAAG,WAAR;AACAD,gBAAI,GAAG,SAAP;AACA;;AACJ,eAAK,UAAL;AACID,iBAAK,GAAG,mCAAR;AACAE,iBAAK,GAAG,WAAR;AACAD,gBAAI,GAAG,WAAP;AACA;;AACJ,eAAK,UAAL;AACID,iBAAK,GAAG,mCAAR;AACAE,iBAAK,GAAG,WAAR;AACAD,gBAAI,GAAG,WAAP;AACA;;AACJ;AACI;AACAD,iBAAK,GAAG,iCAAR;AACAE,iBAAK,GAAG,SAAR;AACAD,gBAAI,GAAG,SAAP;AACA;AAzCR;AA2CH;;AACD,aAAO;AAAEA,YAAI,EAAJA,IAAF;AAAQC,aAAK,EAALA,KAAR;AAAeF,aAAK,EAALA;AAAf,OAAP;AACH,KArDY;;AAuDA,YAAAG,oBAAA,GAAuB,UAACrI,QAAD,EAAqBH,KAArB,EAAsC;AACtE,UAAImB,WAAW,GAAGhB,QAAQ,GACpBA,QAAQ,CAACiB,YAAT,IAAyBjB,QAAQ,CAACsI,cADd,GAEpB,KAFN,CADsE,CAItE;;AACA,UAAI,CAAAzI,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEoB,YAAP,MAAwB,KAA5B,EAAmC;AAC/BD,mBAAW,GAAG,KAAd;AACH;;AACD,aAAOA,WAAP;AACH,KATY;;AAWA,YAAAuH,eAAA,GAAkB,UAACzW,OAAD,EAAmBkO,QAAnB,EAA0C;;;AACrE,UAAMkB,MAAM,GAAG,QAAA+G,oBAAA,CAAqBnW,OAArB,CAAf;AACA,UAAM0W,gBAAgB,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,SAA1B,EAAqChS,QAArC,CACrB0K,MAAM,CAACiH,IADc,CAAzB;AAGA,UAAMM,KAAK,GAAG,CAAH,KAAGzI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEsI,cAAV,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEjrB,KAAxC;AACA,UAAMqrB,MAAM,GAAG,CAAH,KAAG1I,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEsI,cAAV,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEK,GAAzC;;AAEA,UAAIH,gBAAJ,EAAsB;AAClB,eAAO,KAAP;AACH;;AAED,UAAI,OAAOC,KAAP,KAAiB,WAAjB,IAAgC,OAAOC,MAAP,KAAkB,WAAtD,EAAmE;AAC/D,eAAO,KAAP;AACH,OAdoE,CAgBrE;;;AACA,UAAME,WAAW,GAAGH,KAAK,GAAG,EAA5B;AACA,UAAMI,YAAY,GAAGH,MAAM,GAAG,EAA9B;AAEA,UAAMI,UAAU,GAAGhX,OAAO,CAAC/J,WAAR,CAAoBlB,YAApB,CAAiC,KAAjC,CAAnB;AACA,UAAMkiB,gBAAgB,GAAGD,UAAU,CAAC9qB,QAAX,CAAoB;AAAEJ,eAAO,EAAEgrB;AAAX,OAApB,CAAzB;AACA,UAAMI,iBAAiB,GAAGF,UAAU,CAAC9qB,QAAX,CAAoB;AAAEJ,eAAO,EAAEirB;AAAX,OAApB,CAA1B;;AAEA,UACIE,gBAAgB,CAACjiB,EAAjB,IAAuBgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAA3C,IACAkiB,iBAAiB,CAACliB,EAAlB,GAAuBgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAF/C,EAGE;AACE;AACA,YAAIgL,OAAO,CAAC9J,SAAR,CAAkBlB,EAAlB,IAAwBiiB,gBAAgB,CAACjiB,EAA7C,EAAiD;AAC7C,iBAAO,KAAP;AACH,SAJH,CAKE;;;AACA,YAAIgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAApB,GAAyBkiB,iBAAiB,CAACliB,EAA/C,EAAmD;AAC/C,iBAAO,KAAP;AACH,SARH,CAUE;;;AACA,YAAIgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAApB,GAAyB,UAAAF,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAjD,EAAqD;AACjD;AACA,iBAAO,IAAP;AACH;AACJ;;AAED,aAAO,KAAP;AACH,KA7CY;;AA+CA,YAAAmiB,eAAA,GAAkB,UAC3BC,OAD2B,EAE3BpX,OAF2B,EAGR;AACnB,aAAO,IAAIiH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCiQ,eAAO,CACFC,SADL,CAEQ;AACIC,kBAAQ,EAAEtX,OAAO,CAAC+N,KAAR,CAAczQ,EAD5B;AAEItR,gBAAM,EAAEgU,OAAO,CAAC/J,WAFpB;AAGI7J,kBAAQ,EAAE4T,OAAO,CAAC5T,QAHtB;AAIIkZ,eAAK,EAAEtF,OAAO,CAACsF,KAAR,CAActF,OAAO,CAAC+N,KAAR,CAActR,KAA5B,CAJX;AAKI8a,mBAAS,EAAEvX,OAAO,CAACuX,SAAR,CAAkBvX,OAAO,CAAC+N,KAAR,CAActR,KAAhC,CALf;AAMI+a,uBAAa,EAAE;AANnB,SAFR,EAUQ,IAVR,EAWQ,KAXR,EAaKlQ,IAbL,CAcQ,UAAC/d,IAAD,EAAU;AACN,cAAMwkB,KAAK,GAAGxkB,IAAI,CAACgE,MAAL,GAAchE,IAAI,CAAC,CAAD,CAAlB,GAAwB,IAAtC;;AACA,cAAIwkB,KAAJ,EAAW;AACP,gBAAI,CAACA,KAAK,CAACe,QAAX,EAAqB,OAAO3H,MAAM,CAAC,cAAD,CAAb;AACrB,gBAAM7B,KAAK,GAAG,CAAAtF,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEsF,KAAT,CAAeyI,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEtR,KAAtB,MAAgC,CAA9C;AACA,gBAAM8a,SAAS,GAAG,CAAAvX,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEuX,SAAT,CAAmBxJ,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEtR,KAA1B,MAAoC,CAAtD;AACA,gBAAMgb,UAAU,GAAG,CAAAzX,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE/J,WAAT,CAAqB8G,OAArB,IAA+BuI,KAAlD;AACA,gBAAMoS,QAAQ,GAAG1X,OAAO,CAAC9J,SAAR,CAAkB6G,OAAlB,GAA4Bwa,SAA7C;AAEA,gBAAMnc,QAAQ,GAAG2S,KAAK,CAAChK,QAAN,CAAe3I,QAAhC;AACArK,mBAAO,CAACV,GAAR,CAAY,WAAZ,EAAyB+K,QAAzB,EARO,CASP;;AACA,gBAAIA,QAAQ,CAAC7N,MAAb,EAAqB;AACjB,kBAAMoqB,YAAY,GAAGvc,QAAQ,CAACvM,IAAT,CAAc,UAAA+oB,GAAG,EAAI;AACtC,oBAAMC,OAAO,GAAGD,GAAG,CAACtS,KAAJ,CAAUyI,KAAK,CAACtR,KAAhB,KAA0B,CAA1C;AACA,oBAAMqb,WAAW,GAAGF,GAAG,CAACtS,KAAJ,CAAUyI,KAAK,CAACtR,KAAhB,KAA0B,CAA9C;AACA,oBAAMlR,KAAK,GAAG,CAACqsB,GAAG,CAACza,WAAJ,IAAmBya,GAAG,CAACrsB,KAAxB,IAAiCssB,OAA/C;AACA,oBAAMhB,GAAG,GAAG,CAACe,GAAG,CAAC/a,SAAJ,IAAiB+a,GAAG,CAACf,GAAtB,IAA6BiB,WAAzC;AACA,uBAAO,CACFJ,QAAQ,GAAGnsB,KAAX,IAAoBmsB,QAAQ,IAAIb,GAAjC,IAAyC;AACxCY,0BAAU,IAAIlsB,KAAd,IAAuBksB,UAAU,GAAGZ,GADrC,IAC6C;AAC5CY,0BAAU,IAAIlsB,KAAd,IAAuBmsB,QAAQ,IAAIb,GAHjC,CAGsC;AAHtC,qBAIFe,GAAG,CAACta,EAAJ,KAAW0C,OAAO,CAAC1C,EAJxB;AAMH,eAXoB,CAArB,CADiB,CAajB;;AACA,kBAAIqa,YAAJ,EAAkB,OAAOxQ,MAAM,CAAC,sBAAD,CAAb;AACrB;;AACD,mBAAOD,OAAO,CAAC6G,KAAK,CAACe,QAAP,CAAd;AACH;;AACD3H,gBAAM,CAAC,iBAAD,CAAN;AACH,SA7CT,EA8CQ;AAAA,iBAAMA,MAAM,CAAC,iBAAD,CAAZ;AAAA,SA9CR;AAgDH,OAjDM,CAAP;AAkDH,KAtDY;;AAwDA,YAAA4Q,qBAAA,GAAwB,UAAC3I,MAAD,EAAqB;AACtD,UAAI7e,GAAG,GAAG,EAAV;;AACA,cAAQ6e,MAAR;AACI,aAAK,GAAL;AACI7e,aAAG,GAAG,qDAAN;AACA;;AACJ,aAAK,GAAL;AACIA,aAAG,GAAG,0DAAN;AACA;;AACJ;AACIA,aAAG,GAAG,iDAAN;AARR;;AAUA,aAAOA,GAAP;AACH,KAbY;;;;;;;;;;;;;;;;;;;;;;;;;ACpZb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;QCHaynB,oB,GAOT,8BAAmBjK,KAAnB,EACmB8G,KADnB,EAEmB3G,QAFnB,EAEwC;AAAA;;;;AAFrB,WAAAH,KAAA,GAAAA,KAAA;AACA,WAAA8G,KAAA,GAAAA,KAAA;AACA,WAAA3G,QAAA,GAAAA,QAAA;AAEf,WAAK+J,YAAL,mBAA6B,iBAAKlK,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAE8G,KAAZ,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEqD,UAAhD;AACA,WAAK5B,KAAL,GAAa,KAAKvI,KAAL,CAAWoK,UAAxB;AACA,WAAKC,MAAL,GAAc,KAAKlK,QAAL,cAAoB,WAAKA,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEuF,IAAnC,eAA4C,WAAKvF,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE9mB,IAA3D,IAAoE,EAAlF;AACA,WAAKwpB,QAAL,uBAA6B,KAAK7C,KAAL,CAAW6C,QAAxC;AACH,K;;AAfL;AAkBA;;;;AAGa,YAAAyH,sBAAA,GAAyB,UAACxlB,OAAD,EACCkiB,eADD,EAEC5U,SAFD;AAAA,aAGlCtN,OAAO,CAAC3B,GAAR,CAAY,UAACG,CAAD,EAAc;AACtB,YAAMwjB,KAAK,GAAGE,eAAe,CAAClmB,IAAhB,CAAqB,UAAAsS,CAAC;AAAA,iBAAI9P,CAAC,CAAC8c,KAAF,CAAQzJ,QAAR,CAAiBvD,CAAC,CAAC7D,EAAnB,CAAJ;AAAA,SAAtB,CAAd;AACA,YAAM4Q,QAAQ,GAAG/N,SAAS,CAACtR,IAAV,CAAe,UAAA4E,CAAC;AAAA,iBAAIpC,CAAC,CAAC8c,KAAF,CAAQzJ,QAAR,CAAiBjR,CAAC,CAAC6J,EAAnB,CAAJ;AAAA,SAAhB,CAAjB;AACA,eAAO,IAAI0a,oBAAJ,CACH3mB,CADG,EAEHwjB,KAFG,EAGH3G,QAHG,CAAP;AAKH,OARD,CAHkC;AAAA,KAAzB;;;;;;;;;;;;;;;;;;;;;ACzBb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AASA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAqBaoK,mB;;;;;AA4FT,mCACYC,IADZ,EAEYC,OAFZ,EAGYC,MAHZ,EAG0B;AAAA;;AAAA;;AAEtB;AAJQ,gBAAAF,IAAA,GAAAA,IAAA;AACA,gBAAAC,OAAA,GAAAA,OAAA;AACA,gBAAAC,MAAA,GAAAA,MAAA;AA9FZ;;AACQ,gBAAAC,KAAA,GAAQ,IAAI,OAAA5xB,eAAJ,CAA6B,KAA7B,CAAR;AACR;;AACQ,gBAAA6xB,UAAA,GAAa,IAAI,OAAA7xB,eAAJ,CAAkC,EAAlC,CAAb;AACA,gBAAA8xB,eAAA,GAAkB,IAAI,OAAA9xB,eAAJ,CAAiC,EAAjC,CAAlB;AACR;;AACQ,gBAAA+xB,SAAA,GAAY,IAAI,OAAA/xB,eAAJ,CAA+B,EAA/B,CAAZ;AACR;;AACO,gBAAAgyB,aAAA,GAAgB,IAAI,OAAAhyB,eAAJ,CAAwB,EAAxB,CAAhB;AACP;;AACQ,gBAAAiyB,QAAA,GAAW,IAAI,OAAAjyB,eAAJ,CAAoC,EAApC,CAAX;AACR;;AACQ,gBAAAkyB,OAAA,GAAU,IAAI,OAAAlyB,eAAJ,CAA4B,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAA5B,CAAV;AACR;;AACQ,gBAAAwW,KAAA,GAAQ,IAAI,OAAA3a,eAAJ,CAA4B,GAA5B,CAAR;AACR;;AACQ,gBAAAmyB,QAAA,GAAW,IAAI,OAAAnyB,eAAJ,CAA6B,KAA7B,CAAX;AACR;;AACQ,gBAAAoyB,MAAA,GAAS,OAAAC,aAAA,CACb,QAAKN,SADQ,EAEb,QAAKE,QAFQ,EAGb,QAAKC,OAHQ,EAIb,QAAKvX,KAJQ,CAAT;AAOR;;AACgB,gBAAArG,QAAA,GAAW,QAAKyd,SAAL,CAAe3V,YAAf,EAAX;AAChB;;AACgB,gBAAAlX,MAAA,GAAS,QAAKgtB,OAAL,CAAa9V,YAAb,EAAT;AAChB;AAAkC;;AAClB,gBAAA1N,IAAA,GAAO,QAAKwjB,OAAL,CAAa9V,YAAb,EAAP;AAChB;;AACgB,gBAAAW,OAAA,GAAU,QAAKoV,QAAL,CAAc/V,YAAd,EAAV;AAWhB;;AACgB,gBAAAkW,QAAA,GAAW,QAAKF,MAAL,CAAY/c,IAAZ,CACvB,YAAAjL,GAAA,CAAI,UAAC9K,KAAD,EAAW;AACX,cAAMizB,IAAI,GAAG,QAAKppB,QAAL,GACP,IAAI,UAAAsM,MAAJ,CAAW;AACPlR,gBAAI,EAAE,QAAKiuB,YAAL,CAAkBtkB,EADjB;AAEPmc,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,QAAKnhB;AAHX,WAAX,CADO,GAMP,QAAKqpB,YANX;AAOA,cAAMC,OAAO,GAAGF,IAAI,CAACtkB,YAAL,CAAkB,KAAlB,CAAhB;AACA,cAAMykB,KAAK,GAAGD,OAAO,CAACrtB,QAAR,CAAiB,EAAjB,EAAqButB,UAArB,CAAgC,KAAhC,CAAd;AACA,iBAAO,QAAKC,cAAL,CAAoBH,OAApB,EAA6BC,KAA7B,CAAP;AACH,SAXD,CADuB,EAavB,YAAAG,WAAA,CAAY,CAAZ,CAbuB,CAAX;AAgBhB;;AACgB,gBAAAC,aAAA,GAAgB,QAAKV,MAAL,CAAY/c,IAAZ,CAC5B,YAAAjL,GAAA,CAAI,YAAM;AACN;AACA,cAAM2oB,EAAE,GAAG,QAAK5pB,QAAL,GACT,IAAI,UAAAsM,MAAJ,CAAW;AACPlR,gBAAI,EAAE,QAAKiuB,YAAL,CAAkBtkB,EADjB;AAEPmc,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,QAAKnhB;AAHX,WAAX,CADS,GAMT,QAAKqpB,YANP;AAOA,cAAM/tB,KAAK,GAAGsuB,EAAE,CAAC9kB,YAAH,CAAgB,MAAhB,EAAwBA,YAAxB,CAAqC,KAArC,CAAd;;AACA,cAAM8hB,GAAG,GAAG,QAAKiD,YAAL,CAAkBD,EAAlB,CAAZ;;AACA,iBAAO,QAAKH,cAAL,CAAoBnuB,KAApB,EAA2BsrB,GAA3B,CAAP;AACH,SAZD,CAD4B,CAAhB;AAgBhB;;AACgB,gBAAAkD,cAAA,GAAiB,QAAKb,MAAL,CAAY/c,IAAZ,CAC7B,YAAAjL,GAAA,CAAI,YAAM;AACN,cAAM3F,KAAK,GAAG,QAAK+tB,YAAL,CAAkBvkB,YAAlB,CAA+B,OAA/B,CAAd;;AACA,cAAM8hB,GAAG,GAAG,QAAKyC,YAAL,CAAkBG,UAAlB,CAA6B,OAA7B,CAAZ;;AACA,iBAAO,QAAKC,cAAL,CAAoBnuB,KAApB,EAA2BsrB,GAA3B,CAAP;AACH,SAJD,CAD6B,CAAjB;;AAoBZ,gBAAK0B,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,iBAAOA,CAAP;AAAA,SAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;iBAAA,CACxD;;;AACA,kBAAK0vB,OAAL,CAAaxf,IAAb,CACI,IAAI,UAAA+C,MAAJ,CAAW;AACPlR,gBAAI,EAAE,QAAK2tB,OAAL,CAAazqB,KAAb,CAAmByG,EADlB;AAEPmc,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,CAAF,KAAE,QAAKmH,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje;AAH1B,WAAX,CADJ;AAOH,SATD;AAWA;;;AACA,YAAM+pB,MAAM,GAAG,OAAAb,aAAA,CAAc,QAAKT,KAAnB,EAA0B,QAAKjX,KAA/B,EAAsC,QAAKuX,OAA3C,EAAoD7c,IAApD,CACX,YAAAlK,MAAA,CAAO,UAACvI,CAAD;AAAA,iBAAO,CAAC,CAACA,CAAC,CAAC,CAAD,CAAV;AAAA,SAAP,CADW,EAEX,YAAAuwB,YAAA,CAAa,GAAb,CAFW,EAGX,YAAAC,SAAA,CAAU,YAAM;AACZ,cAAMC,KAAK,GAAG,QAAK1Y,KAAL,CAAW5Z,QAAX,EAAd;;AACA,cAAI,CAACsyB,KAAL,EAAY;AACR,mBAAO,OAAA7Q,EAAA,CAAG,EAAH,CAAP;AACH;;AACD,kBAAK2P,QAAL,CAAczf,IAAd,CAAmB,IAAnB;;AACA,cAAMjO,KAAK,GAAG,QAAK+tB,YAAL,CAAkBvkB,YAAlB,CAA+B,KAA/B,CAAd;;AACA,cAAM8hB,GAAG,GAAGtrB,KAAK,CAACkuB,UAAN,CAAiB,KAAjB,CAAZ;AACA,iBAAO,QAAKjB,OAAL,CAAa4B,YAAb,CAA0B;AAC7BC,oBAAQ,EAAEF,KADmB;AAE7BG,0BAAc,EAAE/uB,KAAK,CAACwR,OAFO;AAG7Bwd,wBAAY,EAAE1D,GAAG,CAAC9Z;AAHW,WAA1B,CAAP;AAKH,SAbD,CAHW,EAiBX,YAAAqM,UAAA,CAAW;AAAA,iBAAM,OAAAE,EAAA,CAAG,EAAH,CAAN;AAAA,SAAX,CAjBW,CAAf;AAoBA,YAAMkR,gBAAgB,GAAG,OAAArB,aAAA,CACrB,QAAKP,eADgB,EAErB,QAAKnX,KAFgB,EAGrB,QAAKuX,OAHgB,EAIvB7c,IAJuB,CAKrB,YAAAlK,MAAA,CAAO,UAACvI,CAAD;AAAA,iBAAO,CAAC,CAACA,CAAC,CAAC,CAAD,CAAV;AAAA,SAAP,CALqB,EAMrB,YAAAuwB,YAAA,CAAa,GAAb,CANqB,EAOrB,YAAAC,SAAA,CAAU,UAAC3e,KAAD,EAAW;AACjB,cAAMjL,IAAI,GAAGiL,KAAK,CAAC,CAAD,CAAlB;AACA,cAAM4e,KAAK,GAAG5e,KAAK,CAAC,CAAD,CAAnB;AACA,cAAMvP,MAAM,GAAGuP,KAAK,CAAC,CAAD,CAApB;;AACA,cAAI,CAAC4e,KAAL,EAAY;AACR,mBAAO,OAAA7Q,EAAA,CAAG,EAAH,CAAP;AACH;;AACD,kBAAK2P,QAAL,CAAczf,IAAd,CAAmB,IAAnB;;AACA,iBAAO,QAAKihB,UAAL,CAAgBnqB,IAAhB,EAAsB6pB,KAAtB,EAA6BnuB,MAA7B,EAAqC,KAArC,CAAP;AACH,SATD,CAPqB,EAiBrB,YAAAod,UAAA,CAAW,UAAC1T,CAAD,EAAO;AACd,iBAAO,OAAA4T,EAAA,CAAG,EAAH,CAAP;AACF,SAFF,CAjBqB,CAAzB;AAsBA;;AACA0Q,cAAM,CAAC1wB,SAAP,CAAiB,UAACoxB,UAAD,EAAgB;AAC7B,kBAAKC,eAAL,CAAqBD,UAArB;;AACA,kBAAKzB,QAAL,CAAczf,IAAd,CAAmB,KAAnB;AACH,SAHD;AAIAghB,wBAAgB,CAAClxB,SAAjB,CAA2B,UAACoxB,UAAD,EAAgB;AACvC,kBAAKC,eAAL,CAAqBD,UAArB,EAAiC,QAAK9B,eAAL,CAAqB/wB,QAArB,EAAjC;;AACA,kBAAKoxB,QAAL,CAAczf,IAAd,CAAmB,KAAnB;AACH,SAHD;AA/DsB;AAmEzB;;;;;AAED;;;8CAGuD;AAAA;;AAAA,cAA3BohB,UAA2B,uEAAL,KAAK;AACnD,iBAAO,OAAAzB,aAAA,CACH,KAAKR,UADF,EAEH,KAAKlX,KAFF,EAGH,KAAKuX,OAHF,EAIL7c,IAJK,CAKH,YAAAlK,MAAA,CAAO,UAACvI,CAAD;AAAA,mBAAO,CAAC,CAACA,CAAC,CAAC,CAAD,CAAV;AAAA,WAAP,CALG,EAMH,YAAAuwB,YAAA,CAAa,GAAb,CANG,EAOH,YAAAC,SAAA,CAAU,UAAC3e,KAAD,EAAW;AACjB,gBAAMjL,IAAI,GAAGiL,KAAK,CAAC,CAAD,CAAlB;AACA,gBAAM4e,KAAK,GAAGS,UAAU,GAAG,OAAI,CAACrC,IAAL,CAAUrK,QAAV,CAAmB5Q,EAAtB,GAA2B/B,KAAK,CAAC,CAAD,CAAxD;AACA,gBAAMvP,MAAM,GAAGuP,KAAK,CAAC,CAAD,CAApB;;AACA,gBAAI,CAAC4e,KAAL,EAAY;AACR,qBAAO,OAAA7Q,EAAA,CAAG,EAAH,CAAP;AACH;;AACD,mBAAI,CAAC2P,QAAL,CAAczf,IAAd,CAAmB,IAAnB;;AACA,mBAAO,OAAI,CAACihB,UAAL,CAAgBnqB,IAAhB,EAAsB6pB,KAAtB,EAA6BnuB,MAA7B,EAAqC4uB,UAArC,CAAP;AACH,WATD,CAPG,EAiBH,YAAAxR,UAAA,CAAW,UAAC1T,CAAD,EAAO;AACd,mBAAO,OAAA4T,EAAA,CAAG,EAAH,CAAP;AACF,WAFF,CAjBG,CAAP;AAqBH;;;mCAEkBhZ,I,EAAc6pB,K,EAAenuB,M,EAA6C;AAAA,cAA7B4uB,UAA6B,uEAAP,KAAO;;AACzF,cAAMrvB,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,gBAAMqV,CAAC,GAAG5U,MAAV;;AACA,gBAAIsE,IAAI,KAAK,MAAb,EAAqB;AACjB,qBAAOsQ,CAAC,CAAC7L,YAAF,CAAe,MAAf,CAAP;AACH,aAFD,MAEO;AACH,qBAAO6L,CAAC,CAAC7L,YAAF,CAAe,OAAf,CAAP;AACH;AACJ,WAPD;;AASA,cAAM8hB,GAAG,GAAG,SAANA,GAAM,GAAM;AACd,gBAAMnhB,CAAC,GAAGnK,KAAK,EAAf;;AACA,gBAAI+E,IAAI,KAAK,MAAb,EAAqB;AACjB;;;;AAIA,qBAAOoF,CAAC,CAACxJ,QAAF,CAAW;AAAE2uB,oBAAI,EAAE;AAAR,eAAX,EAAwBpB,UAAxB,CAAmC,MAAnC,CAAP;AACH,aAND,MAMO;AACH,qBAAO/jB,CAAC,CAAC+jB,UAAF,CAAa,OAAb,CAAP;AACH;AACD;;;;;AAIH,WAfD,CAVyF,CA2BzF;;;AACA,iBAAO,KAAKjB,OAAL,CAAa4B,YAAb,CAA0B,MAAD,OAAC,CAAD;AAC5BC,oBAAQ,EAAEF,KADkB;AAE5BG,0BAAc,EAAE/uB,KAAK,GAAGwR,OAFI;AAG5Bwd,wBAAY,EAAE1D,GAAG,GAAG9Z;AAHQ,WAAC,EAIzB6d,UAAD,GAAe;AAAEE,uBAAW,EAAE;AAAf,WAAf,GAAuC,EAJb,CAA1B,CAAP;AAMH;;;+CAG6B;AAAA;;AAC1B,eAAKnC,UAAL,CAAgBnf,IAAhB,CAAqB,OAArB;;AACA,eAAKuhB,mBAAL,CAAyB,IAAzB,EAA+BzxB,SAA/B,CAAyC,UAAC0xB,MAAD,EAAY;AACjD,mBAAI,CAAClC,aAAL,CAAmBtf,IAAnB,CAAwBwhB,MAAxB;;AACA,mBAAI,CAAC/B,QAAL,CAAczf,IAAd,CAAmB,KAAnB;AACH,WAHD;AAIH;AAED;;;;;;;mCAIkByhB,O,EAAyB;AACvC,eAAKlC,QAAL,CAAcvf,IAAd,CAAmByhB,OAAnB;AACH;AAED;;;;;;;gCAIejvB,M,EAAgB;AAC3B,eAAKgtB,OAAL,CAAaxf,IAAb,CAAkBxN,MAAlB;AACH;AAED;;;;;;;gCAIewJ,I,EAAc;AACzB,eAAKiM,KAAL,CAAWjI,IAAX,CAAgBhE,IAAhB;AACH;AAED;;;;;;;uCAI+C;AAAA;;AAAA,cAA3BlO,KAA2B,uEAAX,KAAK,IAAM;;AAC3C,eAAKoxB,KAAL,CAAWlf,IAAX,CAAgB,IAAhB;;AACA,eAAKif,MAAL,CAAYyC,iBAAZ,CAA8B,YAAM;AAChC,mBAAI,CAACC,QAAL,CAAc,SAAd,EAAyB;AAAA,qBAAM,OAAI,CAACzC,KAAL,CAAWlf,IAAX,CAAgB,IAAhB,CAAN;AAAA,aAAzB,EAAsDlS,KAAtD;AACH,WAFD;AAGH;AAED;;;;;;;2CAIqD;AAAA;;AAAA,cAA7BA,KAA6B,uEAAb,IAAI,EAAJ,GAAS,IAAI;;AACjD,eAAKsxB,eAAL,CAAqBpf,IAArB,CAA0B,MAA1B;;AACA,eAAKif,MAAL,CAAYyC,iBAAZ,CAA8B,YAAM;AAChC,mBAAI,CAACC,QAAL,CACI,cADJ,EAEI;AAAA,qBAAM,OAAI,CAACvC,eAAL,CAAqBpf,IAArB,CAA0B,MAA1B,CAAN;AAAA,aAFJ,EAGIlS,KAHJ;AAKH,WAND;AAOH;AACD;;;;;;;mDAI4D;AAAA;;AAAA,cAA5BA,KAA4B,uEAAX,KAAK,IAAM;;AACxD,eAAKoxB,KAAL,CAAWlf,IAAX,CAAgB,IAAhB;;AACA,eAAKif,MAAL,CAAYyC,iBAAZ,CAA8B,YAAM;AAChC,mBAAI,CAACC,QAAL,CAAc,SAAd,EAAyB;AAAA,qBAAM,OAAI,CAACzC,KAAL,CAAWlf,IAAX,CAAgB,IAAhB,CAAN;AAAA,aAAzB,EAAsDlS,KAAtD;AACH,WAFD;AAGH;AAED;;;;;;;4CAIwD;AAAA;;AAAA,cAA/BA,KAA+B,uEAAf,IAAI,EAAJ,GAAS,IAAM;;AACpD,eAAKqxB,UAAL,CAAgBnf,IAAhB,CAAqB,OAArB;;AACA,eAAKif,MAAL,CAAYyC,iBAAZ,CAA8B,YAAM;AAChC,mBAAI,CAACC,QAAL,CACI,cADJ,EAEI;AAAA,qBAAM,OAAI,CAACxC,UAAL,CAAgBnf,IAAhB,CAAqB,OAArB,CAAN;AAAA,aAFJ,EAGIlS,KAHJ;AAKH,WAND;AAOH;AAGD;;;;;;sCAGqB;AACjB,eAAKoxB,KAAL,CAAWlf,IAAX,CAAgB,KAAhB;;AACA,eAAKtS,aAAL,CAAmB,SAAnB;;AACA,eAAKyxB,UAAL,CAAgBnf,IAAhB,CAAqB,EAArB;;AACA,eAAKtS,aAAL,CAAmB,cAAnB;AACH;AAED;;;;;;;4BAIW8Y,O,EAAkB;AACzB,cAAM5E,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAjB;;AACA,cAAMuzB,YAAY,GAAGhgB,QAAQ,CAACigB,MAAT,CAAgB,CAACrb,OAAD,CAAhB,CAArB;;AACA,eAAK6Y,SAAL,CAAerf,IAAf,CAAoB4hB,YAApB;AACH;AAED;;;;;;;gCAIepb,O,EAAkB;AAC7B,cAAM5E,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAjB;;AACA,cAAMuzB,YAAY,GAAGhgB,QAAQ,CACxBnJ,MADgB,CAEb,UAAC2lB,GAAD;AAAA,mBACIA,GAAG,CAAC0D,OAAJ,KAAgBtb,OAAO,CAACsb,OAAxB,IAAmC1D,GAAG,CAACta,EAAJ,KAAW0C,OAAO,CAAC1C,EAD1D;AAAA,WAFa,EAKhB+d,MALgB,CAKT,CAACrb,OAAD,CALS,CAArB;;AAMA,eAAK6Y,SAAL,CAAerf,IAAf,CAAoB4hB,YAApB;AACH;AAED;;;;;;;+BAIcpb,O,EAAkB;AAC5B,cAAM5E,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAjB;;AACA,cAAMuzB,YAAY,GAAGhgB,QAAQ,CAACnJ,MAAT,CACjB,UAAC2lB,GAAD;AAAA,mBAASA,GAAG,CAAC0D,OAAJ,KAAgBtb,OAAO,CAACsb,OAAjC;AAAA,WADiB,CAArB;;AAGA,eAAKzC,SAAL,CAAerf,IAAf,CAAoB4hB,YAApB;AACH;;;uCAGGpb,O,EAEqB;AAAA,cADrB1D,MACqB,uEADU,SACV;AAAA,cAArBif,IAAqB,uEAAL,KAAK;;AAErB,cAAMngB,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAjB;;AACA,cAAM2zB,mBAAmB,GAAI,UAAClf,MAAD,EAAY;AACrC,mBAAO,UAACmf,GAAD,EAAkB;AACrB,sBAAQnf,MAAR;AACI,qBAAK,SAAL;AAAgB;AACZ,wBAAMof,cAAc,GAAGtgB,QAAQ,CAACvM,IAAT,CACnB,UAAC+oB,GAAD;AAAA,6BAASA,GAAG,CAAC0D,OAAJ,KAAgBtb,OAAO,CAACsb,OAAjC;AAAA,qBADmB,CAAvB;AAGA,wBAAI,CAACI,cAAL,EAAqB,OAAO,KAAP;AACrB,2BAAOD,GAAG,CAACne,EAAJ,KAAW0C,OAAO,CAAC1C,EAA1B;AACH;;AACD,qBAAK,QAAL;AAAe;AACX,wBAAMoe,eAAc,GAAGtgB,QAAQ,CAACvM,IAAT,CACnB,UAAC4sB,GAAD;AAAA,6BACIA,GAAG,CAACne,EAAJ,MACC0C,OAAO,CAAC2b,eAAR,KAA4B,YAA5B,GACK3b,OAAO,CAAC4b,oBADb,GAEK5b,OAAO,CAAC1C,EAHd,CADJ;AAAA,qBADmB,CAAvB;;AAOA,wBAAI,CAACoe,eAAL,EAAqB,OAAO,KAAP;AACrB,2BACIA,eAAc,CAACpe,EAAf,KAAsBme,GAAG,CAACne,EAA1B,IACAme,GAAG,CAACG,oBAAJ,KAA6BF,eAAc,CAACpe,EAFhD;AAIH;;AACD;AACI;AAvBR;AAyBH,aA1BD;AA2BH,WA5B2B,CA4BzBhB,MA5ByB,CAA5B;;AA8BA,cAAM8e,YAAY,GAAG,mBAAIhgB,QAAJ,EAAclK,GAAd,CAAkB,UAACuqB,GAAD,EAAS;AAC5C,gBAAI,CAACF,IAAD,IAASC,mBAAmB,CAACC,GAAD,CAAhC,EAAuC;AACnCA,iBAAG,CAACD,mBAAJ,GAA0Blf,MAA1B;AACH;;AAED,gBAAIif,IAAI,IAAIC,mBAAmB,CAACC,GAAD,CAA/B,EAAsC;AAClCA,iBAAG,CAACD,mBAAJ,GAA0B,IAA1B;AACH;;AAED,mBAAOC,GAAP;AACH,WAVoB,CAArB;;AAYA,eAAK5C,SAAL,CAAerf,IAAf,CAAoB4hB,YAApB;AACH;;;wCAGGV,U,EACwC;AAAA;;AAAA,cAAxCmB,MAAwC,uEAAL,KAAK;;AAExC,cAAMtwB,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,oBAAQswB,MAAR;AACI,mBAAK,OAAL;AACI,uBAAO,OAAI,CAACvC,YAAL,CAAkBvkB,YAAlB,CAA+B,OAA/B,CAAP;;AACJ,mBAAK,MAAL;AACI,uBAAO,OAAI,CAACukB,YAAL,CAAkBvkB,YAAlB,CAA+B,MAA/B,CAAP;;AACJ;AACI,uBAAO,OAAI,CAACukB,YAAL,CAAkBvkB,YAAlB,CAA+B,KAA/B,CAAP;AANR;AAQH,WATD;;AAUA,cAAM8hB,GAAG,GAAG,SAANA,GAAM,GAAM;AACd,gBAAMjW,CAAC,GAAGrV,KAAK,EAAf;;AACA,oBAAQswB,MAAR;AACI,mBAAK,OAAL;AACI,uBAAOjb,CAAC,CAAC6Y,UAAF,CAAa,OAAb,CAAP;;AACJ,mBAAK,MAAL;AACI,uBAAO7Y,CAAC,CAAC6Y,UAAF,CAAa,MAAb,CAAP;;AACJ;AACI,uBAAO7Y,CAAC,CAAC6Y,UAAF,CAAa,KAAb,CAAP;AANR;AAQH,WAVD;;AAYA,cAAIre,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAf;;AACA6yB,oBAAU,CAACjxB,OAAX,CAAmB,UAACskB,KAAD,EAAW;AAC1B,mBAAQ3S,QAAQ,GAAG,oBAAA0gB,eAAA,CACf1gB,QADe,EAEf2S,KAAK,CAAC3S,QAAN,CAAelK,GAAf,CAAmB,UAAC0mB,GAAD;AAAA,qBAAS,IAAI,gBAAAtI,OAAJ,CAAYsI,GAAZ,CAAT;AAAA,aAAnB,CAFe,EAGf;AACImE,wBAAU,EAAEhO,KAAK,CAACtR,KADtB;AAEIuf,oBAAM,EAAEzwB,KAAK,EAFjB;AAGI0wB,kBAAI,EAAEpF,GAAG;AAHb,aAHe,CAAnB;AASH,WAVD;;AAWA,eAAKgC,SAAL,CAAerf,IAAf,CAAoB4B,QAApB;AACH;;;uCAEsBme,O,EAAiBC,K,EAAe;AACnD,cAAM1mB,OAAO,GAAG,KAAKimB,QAAL,CAAclxB,QAAd,EAAhB;;AACA,cAAMuT,QAAQ,GAAG,KAAKyd,SAAL,CAAehxB,QAAf,EAAjB;;AACA,cAAMsyB,KAAK,GAAG,KAAK1Y,KAAL,CAAW5Z,QAAX,EAAd;;AACA,iBAAOuT,QAAQ,CAACnJ,MAAT,CAAgB,UAAC2lB,GAAD,EAAS;;;AAC5B,gBAAMsE,UAAU,GAAG,oBAAAC,oBAAA,CACf5C,OAAO,CAACvkB,EADO,EAEfwkB,KAAK,CAACxkB,EAFS,EAGf4iB,GAAG,CAAC3hB,WAAJ,CAAgBjB,EAHD,EAIf4iB,GAAG,CAAC1hB,SAAJ,CAAclB,EAJC,CAAnB;AAMA,gBAAMonB,OAAO,GAAGxE,GAAG,CAACyE,IAAJ,CAASlO,KAAT,CAAezJ,QAAf,CAAwByV,KAAxB,CAAhB;AACA,gBAAMmC,SAAS,GACX,QAACxpB,OAAO,CAACypB,YAAT,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEhvB,MAAvB,KACAuF,OAAO,CAACypB,YAAR,CAAqB7X,QAArB,CAA8BkT,GAAG,CAACyE,IAAJ,CAAS5f,KAAvC,CAFJ;AAGA,gBAAM+f,QAAQ,GACV,QAAC1pB,OAAO,CAACunB,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE9sB,MAAnB,KACA,CAAC,CAACqqB,GAAG,CAACyE,IAAJ,CAASlO,KAAT,CAAetf,IAAf,CAAoB,UAAC2G,IAAD;AAAA,qBAClB1C,OAAO,CAACunB,QAAR,CAAiB3V,QAAjB,CAA0BlP,IAA1B,CADkB;AAAA,aAApB,CAFN;AAKA,gBAAMlF,IAAI,GAAGsnB,GAAG,CAAC6E,QAAJ,GAAe,UAAf,GAA4B7E,GAAG,CAAC8E,OAAJ,EAAzC;AAEA,gBAAMC,IAAI,GACN,QAAC7pB,OAAO,CAAC8pB,SAAT,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAErvB,MAApB,KACA,CAACuF,OAAO,CAAC8pB,SAAR,CAAkBlY,QAAlB,CAA2BpU,IAA3B,CAFL;AAGA,mBAAO4rB,UAAU,IAAII,SAAd,IAA2BF,OAA3B,IAAsCI,QAAtC,IAAkDG,IAAzD;AACH,WAtBM,CAAP;AAuBH;AAED;;;;qCACqBtxB,I,EAAY;AAC7B,iBAAOA,IAAI,CAACwxB,WAAL,KAAqB,CAArB,GACDxxB,IAAI,CAACa,QAAL,CAAc;AAAE2uB,gBAAI,EAAE;AAAR,WAAd,EAA2BpB,UAA3B,CAAsC,MAAtC,EAA8CA,UAA9C,CAAyD,KAAzD,CADC,GAEDpuB,IAAI,CAACouB,UAAL,CAAgB,MAAhB,EAAwBA,UAAxB,CAAmC,KAAnC,CAFN;AAGH;;;4BAlcyB;AACtB;AACA,iBAAO,KAAKT,OAAL,CAAazqB,KAApB;AACH;;;4BAEqB;AAClB,iBAAOsW,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAP;AACH;AA6CD;;;;4BACqB;AACjB,iBAAO,KAAKiU,QAAL,CAAclxB,QAAd,EAAP;AACH;;;;MA1FoC,OAAApB,S;;AAHzC;;;uBAGa6xB,mB,EAAmB,mC,EAAA,6B,EAAA,sB;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFhB;;;;;2BAEHA,mB,EAAmB;cAH/B,OAAApa,UAG+B;eAHpB;AACRoI,oBAAU,EAAE;AADJ,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtChC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;QAuBagJ,O;;;;;AAsHT,yBAAoC;AAAA;;AAAA,YAAxB9I,QAAwB,uEAAJ,EAAI;;AAAA;;;;AAChC,qCAAMA,QAAN;AAtEJ;;AACO,gBAAAsW,YAAA,GAAe,KAAf,CAoE6B,CAEhC;;AACA,YAAM7U,eAAe,GAAG,wBAAAH,cAAA,CAAeC,UAAf,CAA0B,mBAAAgV,eAA1B,CAAxB;AACA,gBAAKC,YAAL,GAAoB/U,eAAe,CAACQ,SAApC;AAEA;;;;AAGA,YAAMwU,KAAK,GAAG,IAAI,UAAA1gB,MAAJ,EAAd;AAEA,YAAM2gB,YAAY,GAAG,EAArB,CAXgC,CAWP;;AACzB,YAAMC,oBAAoB,GAAG,CAAH,WAAGC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,cAAN,EAAH,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAIC,eAAJ,EAApB,MAAuC,IAAvC,IAAuC,aAAvC,GAAuC,MAAvC,GAAuC,GAAIC,QAAxE;AACA,YAAMC,mBAAmB,GAAG,IAA5B,CAbgC,CAaC;;AACjC,YAAMC,iBAAiB,GAAG,QAAAC,IAAA,CAAKC,WAAL,IAAoB,IAAI,QAAAD,IAAJ,EAA9C,CAdgC,CAc0B;;AAC1D,YAAME,kBAAkB,GAAG,UAA3B;AAEA;;;;AAGA,gBAAKtH,KAAL,GAAa9P,QAAQ,CAAC8P,KAAT,IAAkB4G,YAA/B;AACA,gBAAKjtB,QAAL,GAAgBuW,QAAQ,CAACvW,QAAT,IAAqBktB,oBAArC,CArBgC,CAsBhC;;AACA,gBAAKU,aAAL,GAAqBrX,QAAQ,CAACqX,aAAT,IAA0BL,mBAA/C;AACA,gBAAKjmB,IAAL,GAAYiP,QAAQ,CAACjP,IAAT,IAAiB,EAA7B,CAxBgC,CAyBhC;;AACA,gBAAKumB,YAAL,GAAoBtX,QAAQ,CAACsX,YAAT,IAAyBF,kBAA7C,CA1BgC,CA2BhC;;AACA,gBAAKG,SAAL,GAAiB,CAACvX,QAAQ,CAACuX,SAAT,IAAsB,EAAvB,EAA2B7sB,GAA3B,CAA+B,UAACxH,CAAD;AAAA,iBAAO,IAAI,QAAAg0B,IAAJ,CAASh0B,CAAT,CAAP;AAAA,SAA/B,CAAjB,CA5BgC,CA6BhC;;AACA,gBAAKs0B,SAAL,GAAiBxX,QAAQ,CAACwX,SAAT,GAAqB,IAAI,QAAAN,IAAJ,CAASlX,QAAQ,CAACwX,SAAlB,CAArB,GAAoDP,iBAArE,CA9BgC,CA+BhC;;AACA,gBAAKQ,OAAL,GAAe,CAACzX,QAAQ,CAAC0X,SAAT,GAAqB,IAAI,QAAAR,IAAJ,CAASlX,QAAQ,CAAC0X,SAAlB,CAArB,GAAoDT,iBAArD,KAA2E,QAAKO,SAA/F,CAhCgC,CAiChC;;AACA,gBAAK1Y,KAAL,GAAakB,QAAQ,CAAClB,KAAT,IAAkB,EAA/B;AACA,gBAAKiS,SAAL,GAAiB/Q,QAAQ,CAAC+Q,SAAT,IAAsB,EAAvC,CAnCgC,CAoChC;;AACA,gBAAK4G,KAAL,GAAa3X,QAAQ,CAAC2X,KAAT,IAAkB,EAA/B;AACA,gBAAKC,eAAL,GAAuB5X,QAAQ,CAAC4X,eAAT,IAA4B,EAAnD;AACA,gBAAKC,kBAAL,GAA0B7X,QAAQ,CAAC6X,kBAAT,IAA+B,EAAzD;AACA,gBAAKC,SAAL,GAAiB9X,QAAQ,CAAC8X,SAAT,IAAsB,EAAvC;AACA,gBAAKC,YAAL,GAAoB,OAAA/X,QAAQ,CAAC+X,YAAT,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEhxB,MAAvB,IAAgCiZ,QAAQ,CAAC+X,YAAzC,GAAwD,CAAC,CAAD,KAAC,QAAKP,SAAL,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE52B,IAAjB,CAA5E;AACA,gBAAKo3B,OAAL,GAAehY,QAAQ,CAACgY,OAAT,IAAoB,EAAnC,CA1CgC,CA2ChC;;AACA,gBAAKN,SAAL,GAAiB1X,QAAQ,CAAC0X,SAA1B;AACA,gBAAKO,MAAL,GAAcjY,QAAQ,CAACiY,MAAvB;AACA,gBAAKC,gBAAL,GAAwBlY,QAAQ,CAACkY,gBAAjC;AACA,gBAAKC,UAAL,GAAkBnY,QAAQ,CAACmY,UAA3B;AAEA;;;;;;;;AAOA,gBAAKtC,IAAL,GAAY7V,QAAQ,CAAC6V,IAAT,GAAgB,IAAI,cAAArO,KAAJ,CAAUxH,QAAQ,CAAC6V,IAAnB,CAAhB,GAA2C,IAAI,cAAArO,KAAJ,EAAvD;AAEA,YAAM4Q,OAAO,GAAGpY,QAAQ,CAACoY,OAAT,IAAoBpY,QAAQ,CAAC8Q,QAA7C,CA1DgC,CA0DsB;;AACtD,YAAI,CAAC,QAAK+E,IAAL,CAAU/e,EAAX,KAAiBshB,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAErxB,MAA1B,CAAJ,EAAsC;AAClC,kBAAK8uB,IAAL,GAAY,SAAAwC,SAAA,CAAUD,OAAO,CAAC,CAAD,CAAjB,KAAyB,QAAKvC,IAA1C;AACH;AACD;;;;;;;AAOA;;;AACA,YAAMyC,cAAc,GAAG,IAAI,UAAAviB,MAAJ,CAAW;AAAElR,cAAI,EAAE4xB,KAAK,CAACjoB,EAAd;AAAkBmc,qBAAW,EAAE,KAA/B;AAAsCC,qBAAW,EAAE,QAAKnhB;AAAxD,SAAX,EAA+EhE,QAA/E,CAAwF;AAAEP,gBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUqxB,KAAK,CAACnxB,OAAN,GAAgB,CAA1B,IAA+B;AAAzC,SAAxF,CAAvB;AAEA;;;;;;;AAMA,YAAMizB,kBAAkB,GAAG,CAAC,EAAEvY,QAAQ,CAACrJ,WAAT,IAAwBqJ,QAAQ,CAACjb,KAAnC,CAA5B;AACA,YAAMyzB,mBAAmB,GAAG,CAAC,CAACxY,QAAQ,CAACvQ,WAAvC;AAEA;;;;AAGA,YAAI,CAAC8oB,kBAAD,IAAuBC,mBAA3B,EAAgD;AAC5C;;;;;AAKA,kBAAK/oB,WAAL,GAAmBuQ,QAAQ,CAACvQ,WAA5B;AACA,kBAAKC,SAAL,GAAiBsQ,QAAQ,CAACtQ,SAA1B;AACH,SARD,MAQO,IAAI6oB,kBAAJ,EAAwB;AAC3B;;;;AAIA,kBAAK9oB,WAAL,GAAmB,IAAI,UAAAsG,MAAJ,CAAW;AAC1BlR,gBAAI,EAAG,CAACmb,QAAQ,CAACrJ,WAAT,IAAwBqJ,QAAQ,CAACjb,KAAlC,IAA2C,IADxB;AAE1B4lB,uBAAW,EAAE,KAFa;AAG1BC,uBAAW,EAAE,QAAKnhB;AAHQ,WAAX,CAAnB;AAKA,kBAAKiG,SAAL,GAAiB,IAAI,UAAAqG,MAAJ,CAAW;AACxBlR,gBAAI,EAAG,CAACmb,QAAQ,CAAC3J,SAAT,IAAsB2J,QAAQ,CAACqQ,GAAhC,IAAsC,IADrB;AAExB1F,uBAAW,EAAE,KAFW;AAGxBC,uBAAW,EAAE,QAAKnhB;AAHM,WAAX,CAAjB;AAKH,SAfM,MAeA;AACH;;;;AAIA,kBAAKgG,WAAL,GAAmB6oB,cAAnB;AACA,kBAAK5oB,SAAL,GAAiB4oB,cAAc,CAAC5yB,QAAf,CAAwB;AAAEJ,mBAAO,EAAE;AAAX,WAAxB,CAAjB;AAA0D;AAC7D;AAED;;;;;;;;;AAOA,YAAK,QAAKoK,SAAL,CAAepK,OAAf,GAAyB,CAA1B,KAAiC,CAAjC,IAAsC,QAAKoK,SAAL,CAAezK,MAAf,GAAwB,CAAlE,EAAqE;AACjE;AACA,kBAAKyK,SAAL,GAAiB,QAAKA,SAAL,CAAejK,QAAf,CAAwB;AAAER,kBAAM,EAAE,CAAV;AAAaC,kBAAM,EAAEC,IAAI,CAACszB,KAAL,CAAW,QAAK/oB,SAAL,CAAepK,OAAf,GAAyB,CAApC,IAAyC;AAA9D,WAAxB,CAAjB;AACH;AAID;;;;;;;;;AAOA,gBAAKozB,aAAL,GAAqB1Y,QAAQ,CAAC0Y,aAAT,IAA0BjC,KAAK,CAAClgB,OAArD;AAGA;;;;;;;;AAOA,YAAI,aAAayJ,QAAjB,EAA2B;AACvB,kBAAK2Y,OAAL,GAAe3Y,QAAQ,CAAC2Y,OAAxB;AACH,SAFD,MAEO;AACH,kBAAKA,OAAL,GAAe,CAAC,CAAC3Y,QAAQ,CAAC2Y,OAAX,IAAsB,QAAK/yB,QAAL,GAAgB,KAAK,EAA1D;AACH,SAvJ+B,CA0JhC;;;AACA,YAAI,CAAC,QAAK4wB,YAAN,IAAsB,QAAKmC,OAA3B,IAAsC,QAAKlvB,QAA/C,EAAyD;AACrD;;;AAGA,kBAAKgG,WAAL,GAAmB,QAAKA,WAAL,CAAiBlB,YAAjB,CAA8B,KAA9B,CAAnB;AACH;AAED;;;;;AAGC,YAAIqa,MAAM,GAAG5I,QAAQ,CAAC4I,MAAtB,CArK+B,CAsK/B;;AACA,YAAI,CAAC5I,QAAQ,CAAC4I,MAAd,EAAsB;AACnBA,gBAAM,GAAG,UAAT;AACF,SAzK8B,CA0K/B;;;AACA,YAAI5I,QAAQ,CAAC4Y,OAAT,IAAoB5Y,QAAQ,CAAC4Y,OAAT,KAAqB,WAA7C,EAA0D;AACvDhQ,gBAAM,GAAG,UAAT;AACF;;AACD,YAAMiQ,cAAc,GAAG,EAAvB;AACAA,sBAAc,CAAC,QAAKhD,IAAL,CAAU5f,KAAX,CAAd,GAAkC2S,MAAlC,CA/K+B,CAgL/B;;AACA,gBAAKA,MAAL,GAAcA,MAAd;AACA,gBAAKkQ,eAAL,GAAuB9Y,QAAQ,CAAC8Y,eAAT,IAA4B,EAAnD;AAED;;;;;;AAMA,gBAAKC,QAAL,GAAgB,CAAC/Y,QAAQ,CAAC+Y,QAAT,YAA6BnnB,KAA7B,GAAqCoO,QAAQ,CAAC+Y,QAA9C,GAAyD,EAA1D,EAA8DruB,GAA9D,CACZ,UAACxH,CAAD;AAAA,iBAAO,IAAI,WAAA81B,aAAJ,CAAkB91B,CAAlB,CAAP;AAAA,SADY,CAAhB;AAMA;;;;;;;;AAOA,YAAM+1B,aAAa,GAAGrnB,KAAK,CAACsB,OAAN,CAAc8M,QAAQ,CAACkZ,KAAvB,IAChBlZ,QAAQ,CAACkZ,KADO,GAEhB,OAAA3tB,MAAA,CACE,OAAAqH,OAAA,CACIf,MAAM,CAACpH,IAAP,CAAYuV,QAAQ,CAACkZ,KAAT,IAAkB,EAA9B,EAAkCxuB,GAAlC,CAAsC,UAACmrB,IAAD,EAAU;AAC5C,iBAAO,OAAAjjB,OAAA,CAAQf,MAAM,CAACsnB,MAAP,CAAcnZ,QAAQ,CAACkZ,KAAT,CAAerD,IAAf,CAAd,CAAR,CAAP;AACH,SAFD,CADJ,CADF,CAFN;AASA,gBAAKqD,KAAL,GAAaD,aAAb;AAEA;;;;;;;AAMA,gBAAKG,gBAAL,GAAwBpZ,QAAQ,CAACoZ,gBAAT,IAA6B,IAArD;AACA,gBAAKC,eAAL,GAAuBrZ,QAAQ,CAACqZ,eAAT,IAA4B,IAAnD;AACA,gBAAKC,gBAAL,GAAwBtZ,QAAQ,CAACsZ,gBAAT,IAA6B,IAArD;AACA,gBAAKC,gBAAL,GAAwBvZ,QAAQ,CAACwZ,cAAT,GAA0B,IAAI,UAAAzjB,MAAJ,CAAW;AAAClR,cAAI,EAAEmb,QAAQ,CAACwZ,cAAT,GAA0B,IAAjC;AAAuC7O,qBAAW,EAAE,KAApD;AAA2DC,qBAAW,EAAE,QAAKnhB;AAA7E,SAAX,CAA1B,GAA+H,IAAvJ;AACA,gBAAKgwB,qBAAL,GAA6BzZ,QAAQ,CAACyZ,qBAAT,IAAkC,IAA/D;AACA,gBAAKC,cAAL,GAAsB1Z,QAAQ,CAAC0Z,cAAT,IAA2B,IAAjD;AACA,gBAAKC,mBAAL,GAA2B3Z,QAAQ,CAAC2Z,mBAAT,IAAgC,IAA3D;AACA,gBAAKC,iBAAL,GAAyB5Z,QAAQ,CAAC4Z,iBAAT,IAA8B,IAAvD;AACA,gBAAKzE,eAAL,GAAuBnV,QAAQ,CAACmV,eAAT,IAA4B,IAAnD;AACA,gBAAKC,oBAAL,GAA4BpV,QAAQ,CAACoV,oBAArC;AACA,gBAAKyE,kBAAL,GAA0B7Z,QAAQ,CAAC6Z,kBAAnC;AACA,gBAAKC,YAAL,GAAoB9Z,QAAQ,CAAC8Z,YAAT,IAA0B,CAAC,CAAC,QAAK3E,eAAP,IAA0B,CAAC,CAAC,QAAKyE,iBAA3D,IAAiF,IAArG;AACA,gBAAKG,iBAAL,GAAyB/Z,QAAQ,CAAC+Z,iBAAT,IAA8B,EAAvD;AACA,gBAAKpjB,WAAL,GAAmBqJ,QAAQ,CAACrJ,WAA5B;AACA,gBAAKN,SAAL,GAAiB2J,QAAQ,CAAC3J,SAA1B;AAEA;;;;;AAIA,YAAI2J,QAAQ,CAACjP,IAAT,IAAiB,CAAC,QAAK4mB,KAAL,CAAWtvB,IAAX,CAAgB,UAACnF,CAAD;AAAA,iBAAOA,CAAC,CAAC4G,IAAF,KAAW,aAAlB;AAAA,SAAhB,CAAtB,EAAwE;AACpE,kBAAK6tB,KAAL,gCACO,QAAKA,KADZ,IAEI;AACI7tB,gBAAI,EAAE,aADV;AAEIjF,gBAAI,EAAE,CAFV;AAGIkX,mBAAO,EAAEiE,QAAQ,CAACjP,IAHtB;AAIIipB,kBAAM,EAAE,QAAKxC,SAAL,CAAevhB;AAJ3B,WAFJ;AASH;AAED;;;;;;AAIA,gBAAK+e,mBAAL,GAA2BhV,QAAQ,CAACgV,mBAAT,IAAgC,IAA3D;AA5PgC;AA6PnC;AA9QD;;;;;;AAoeA;;;gCAGY;AACR,iBAAO,IAAIlM,OAAJ,CAAY,KAAKtI,MAAL,EAAZ,CAAP;AACH;AAED;;;;;;oCAG+B;AAAA,cAAdyZ,MAAc,uEAAL,KAAK;AAC3B,iBAAO,IAAInR,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACX,KAAKtI,MAAL,EADW,CAAC,EACC;AAChB1J,cAAE,EAAEmjB,MAAM,GAAG,KAAKnjB,EAAR,GAAa;AADP,WADD,CAAZ,CAAP;AAIH;AAED;;;;;;;;6BAKY8R,M,EAA8D;AAAA,cAA/BsR,IAA+B,uEAAF,EAAE;AACtE,iBAAO,KAAK5Z,QAAL,CAAcyU,IAAd,CACH,KAAKje,EADF,EACM8R,MAAM,IAAI,QADhB,EAEHsR,IAFG,CAAP;AAIH;AAED;;;;;;kCAG6C;AAAA,cAA/BA,IAA+B,uEAAF,EAAE;;AACzC,cAAI,KAAKpjB,EAAT,EAAa;AACT,mBAAO,KAAKwJ,QAAL,WAAqB,KAAKxJ,EAA1B,EAA8B,MAAF,OAAE,CAAF,EAAE,EAAKojB,IAAL,CAA9B,CAAP,CADS,CAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;AAED;;;;;;iCAGa;;;AACT,cAAIlQ,IAAI,sEAAR,CADS,CAET;;;AACAA,cAAI,CAAC2N,KAAL,GAAa3N,IAAI,CAAC2N,KAAL,CAAWlsB,MAAX,CAAkB,UAAC0uB,IAAD;AAAA,mBAAUA,IAAI,CAACrwB,IAAL,KAAc,aAAxB;AAAA,WAAlB,CAAb,CAHS,CAIT;;AACAkgB,cAAI,CAAC6L,IAAL,GAAY7L,IAAI,CAAC6L,IAAL,CAAUrV,MAAV,EAAZ;AAGAwJ,cAAI,CAACwN,SAAL,GAAiBxN,IAAI,CAACwN,SAAL,CAAehX,MAAf,EAAjB;AACAwJ,cAAI,CAACyN,OAAL,GAAe,OAAAzN,IAAI,CAACyN,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEjX,MAAd,IAAuBwJ,IAAI,CAACyN,OAAL,CAAajX,MAAb,EAAvB,GAA8CwJ,IAAI,CAACyN,OAAlE,CATS,CAUT;;AACAzN,cAAI,CAACuN,SAAL,GAAiBvN,IAAI,CAACuN,SAAL,CAAe7sB,GAAf,CAAmB,UAACxH,CAAD;AAAA,mBAAaA,CAAC,CAACsd,MAAF,EAAb;AAAA,WAAnB,CAAjB,CAXS,CAaT;;AACAwJ,cAAI,GAAG,mBAAAoQ,sBAAA,CAAuBpQ,IAAvB,CAAP;;AAEA,cAAGA,IAAI,CAACqQ,eAAR,EAAwB;AACpBrQ,gBAAI,CAAC+P,iBAAL,sBAA6B/P,IAAI,CAACqQ,eAAlC;AACA,mBAAOrQ,IAAI,CAACqQ,eAAZ;AACH;;AAED,iBAAOrQ,IAAP;AACH;AAED;;;;;;oCAGgB;;;AACZ,cAAIA,IAAI,sEAAR,CADY,CAGZ;;;AACAA,cAAI,CAAC8K,OAAL,GAAe,EAAf;;AACA,cAAI9K,IAAI,CAAClT,EAAT,EAAa;AACTkT,gBAAI,CAAC8K,OAAL,GAAe9K,IAAI,CAAClT,EAApB;AACAkT,gBAAI,CAACsQ,aAAL,GAAqB,KAAKzE,IAAL,CAAUlE,UAA/B;AACA3H,gBAAI,CAACuQ,SAAL,GAAiB,KAAK1E,IAAL,CAAU5f,KAA3B;AACA+T,gBAAI,CAACqN,aAAL,GAAqB,CAAH,KAAG,KAAKxB,IAAL,CAAUnO,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE5Q,EAAzC;AACH;AAED;;;;;;;AAKAkT,cAAI,CAACwQ,OAAL,GAAe,KAAKzR,YAApB,CAjBY,CAiBsB;;AAClCiB,cAAI,CAACjB,YAAL,GAAoB,CAAC,KAAKA,YAAN,CAApB,CAlBY,CAkB6B;;AACzC,iBAAOiB,IAAI,CAAC8O,eAAZ,CAnBY,CAqBZ;;AACA,iBAAO9O,IAAI,CAACva,WAAZ;AACA,iBAAOua,IAAI,CAACta,SAAZ;AACAsa,cAAI,CAACjlB,KAAL,GAAa,KAAK0K,WAAL,CAAiB8G,OAA9B;AACAyT,cAAI,CAACqG,GAAL,GAAW,KAAK3gB,SAAL,CAAe6G,OAA1B;AACAyT,cAAI,CAACyQ,SAAL,GAAiB,KAAKhrB,WAAL,CAAiB8G,OAAlC,CA1BY,CA0B+B;;AAC3CyT,cAAI,CAAC0Q,OAAL,GAAe,KAAKhrB,SAAL,CAAe6G,OAA9B,CA3BY,CA2B2B;AAEvC;;AACA,iBAAOyT,IAAI,CAAC0O,aAAZ;AACA1O,cAAI,CAAC2Q,aAAL,GAAqB,KAAKC,cAAL,CAAoBrkB,OAAzC,CA/BY,CAiCZ;AACA;;AACAyT,cAAI,CAAC+O,QAAL,GAAgB,KAAK8B,cAArB;AACA7Q,cAAI,CAACrB,YAAL,GAAoB,KAAKA,YAAzB;AACA,iBAAOqB,IAAI,CAAC6Q,cAAZ,CArCY,CAuCZ;AACA;;AACA7Q,cAAI,CAACuN,SAAL,GAAiB,KAAKuD,YAAL,CAAkBpwB,GAAlB,CAAsB,UAACxH,CAAD;AAAA,mBAAaA,CAAC,CAACsd,MAAF,GAAWtd,CAAC,CAACsd,MAAF,EAAX,GAAwBtd,CAArC;AAAA,WAAtB,CAAjB,CAzCY,CA2CZ;;AACA8mB,cAAI,CAACwN,SAAL,GAAiBxN,IAAI,CAACwN,SAAL,CAAehX,MAAf,GAAwBwJ,IAAI,CAACwN,SAAL,CAAehX,MAAf,EAAxB,GAAkDwJ,IAAI,CAACwN,SAAxE;AACAxN,cAAI,CAACyN,OAAL,GAAezN,IAAI,CAACyN,OAAL,CAAajX,MAAb,GAAsBwJ,IAAI,CAACyN,OAAL,CAAajX,MAAb,EAAtB,GAA8CwJ,IAAI,CAACyN,OAAlE,CA7CY,CA+CZ;;AACA,iBAAOzN,IAAI,CAAC8N,SAAZ;AACA9N,cAAI,CAAC+Q,UAAL,GAAkB,KAAKC,aAAvB,CAjDY,CAmDZ;AAEA;;AACAhR,cAAI,CAAC8G,QAAL,GAAgB,CAAC,KAAK+E,IAAL,CAAU5f,KAAX,CAAhB;AACA,iBAAO+T,IAAI,CAAC6L,IAAZ,CAvDY,CAyDZ;;AACA7L,cAAI,GAAG,mBAAAoQ,sBAAA,CAAuBpQ,IAAvB,CAAP;;AAGA,cAAGA,IAAI,CAACqQ,eAAR,EAAwB;AACpBrQ,gBAAI,CAAC+P,iBAAL,sBAA6B/P,IAAI,CAACqQ,eAAlC;AACA,mBAAOrQ,IAAI,CAACqQ,eAAZ;AACH,WAhEW,CAkEZ;;;AACA,iBAAOrQ,IAAI,CAACppB,IAAZ;AACA,iBAAOopB,IAAI,CAAC/T,KAAZ;AACA,iBAAO+T,IAAI,CAACwM,YAAZ;AACA,iBAAOxM,IAAI,CAACqN,aAAZ;AACA,iBAAOrN,IAAI,CAACpB,MAAZ;AAEA,iBAAOoB,IAAP;AACH;;;kCAEa;;;AACV,cAAI,CAAC,IAAD,KAAK,MAAI,KAAKpB,MAAT,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE1K,QAAF,CAAW,SAAX,CAApB,CAAJ,EAA+C;AAC3C,mBAAO,WAAP;AACH;;AACD,cAAMoZ,YAAY,GAAG,KAAKA,YAA1B;;AACA,cAAIA,YAAY,KAAK,UAAjB,IAA+B,KAAK2D,YAAxC,EAAsD;AAClD,mBAAO,UAAP;AACH;;AACD,iBAAO3D,YAAP;AACH;AAED;;;;kDACiCuC,kB,EAAyD;AACtF,cAAMh1B,IAAI,GAAGg1B,kBAAkB,CAACnvB,GAAnB,CAAuB,UAAAwwB,SAAS;AAAA,mBAAIA,SAAJ;AAAA,WAAhC,EACZnuB,IADY,CACP,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAU,IAAIxI,IAAJ,CAASuI,CAAC,CAAC2J,WAAF,GAAgB,IAAzB,EAA+BwkB,OAA/B,KAA2C,IAAI12B,IAAJ,CAASwI,CAAC,CAAC0J,WAAF,GAAgB,IAAzB,EAA+BwkB,OAA/B,EAArD;AAAA,WADO,EAEZhoB,OAFY,GAGZioB,KAHY,GAIZzkB,WAJY,GAIE,IAJf;AAKA,iBAAO,IAAI,UAAAZ,MAAJ,CAAW;AAAClR,gBAAI,EAAJA,IAAD;AAAO8lB,uBAAW,EAAE,KAApB;AAA2BC,uBAAW,EAAE,KAAKnhB;AAA7C,WAAX,CAAP;AACH;;;4BAhpB0B;AACvB,iBAAO,KAAK4xB,iBAAZ;AACH,S;0BAE2Bx2B,I,EAAc;AACtC,eAAKw2B,iBAAL,GAAyBx2B,IAAzB;AACH;AA0QD;;;;4BACyB;AACrB,iBAAO,wBAAAyc,cAAA,CAAeC,UAAf,CAA0BuH,OAA1B,CAAP;AACH;AAED;;;;4BACuB;AACnB;AACA,cAAI,KAAK0N,YAAT,EAAuB;AACnB,mBAAO,IAAP;AACH;;AACD,iBAAO,CAAC,KAAKX,IAAL,CAAUyF,SAAV,CAAoB;AACxB91B,kBAAM,EAAE,KAAKiK,WADW;AAExB7J,oBAAQ,EAAE,KAAKA,QAFS;AAGxB8X,gBAAI,EAAE,KAAK8Z;AAHa,WAApB,CAAR;AAKH;AAED;;;;4BACmB;AACf,iBAAO,CAAC,KAAKvB,QAAN,IAAkB,CAAC,KAAKsF,SAA/B;AACH;AAED;;;;4BACuB;AACnB,iBAAO,OAAAhwB,MAAA,CAAO,CAAC,KAAKisB,SAAN,EAAiB3C,MAAjB,CAAwB,KAAK0C,SAA7B,CAAP,EAAgD,OAAhD,CAAP;AACH;AAED;;;;4BACwB;AACpB,iBAAO,KAAKD,YAAL,CAAkB/qB,WAAlB,EAAP;AACH;AAED;;;;4BAC2B;AACvB,iBAAO,OAAAyH,WAAA,CAAY,KAAKsjB,YAAjB,CAAP;AACH;AAED;;;;4BACwB;AACpB,iBAAOzlB,MAAM,CAACpH,IAAP,CAAY,KAAKqtB,SAAL,IAAkB,EAA9B,CAAP;AACH;AAED;AAAiC;;;;4BACjB;AACZ,iBAAO,KAAKR,YAAZ;AACH;AAED;;;;4BAC2B;AACvB,cAAK,KAAK5nB,SAAL,CAAepK,OAAf,GAAyB,CAA1B,KAAiC,CAArC,EAAwC;AACpC;AACA,mBAAO,KAAKoK,SAAL,CAAehK,QAAf,CAAwB;AAAE6Q,qBAAO,EAAE;AAAX,aAAxB,CAAP;AACH,WAJsB,CAKvB;;;AACA,iBAAO,KAAK7G,SAAZ;AACH;AAED;;;;4BACmB;AACf;;;;AAIA,cAAI,KAAKmmB,IAAL,CAAUj1B,IAAV,CAAe2L,WAAf,GAA6B2R,QAA7B,CAAsC,SAAtC,CAAJ,EAAsD;AAClD,mBAAO,IAAP;AACH;;AAED,cAAI,KAAK0K,MAAL,CAAY1K,QAAZ,CAAqB,SAArB,CAAJ,EAAqC;AACjC,mBAAO,IAAP;AACH;;AAED,iBAAO,KAAP;AACH;AAED;;;;4BACsB;AAClB,cAAMic,IAAI,GAAG,CAAC,KAAKxC,KAAL,IAAc,EAAf,EAAmBtvB,IAAnB,CAAwB,UAACnF,CAAD;AAAA,mBAAOA,CAAC,CAAC4G,IAAF,KAAW,aAAlB;AAAA,WAAxB,CAAb;AACA,iBAAOqwB,IAAI,GAAGA,IAAI,CAACpe,OAAR,GAAkB,EAA7B;AACH;AAED;;;;4BAC4B;AACxB;AACA,iBAAO,KAAKgd,QAAL,GAAgB,KAAKA,QAAL,CAAcpuB,KAAd,GAAsBoC,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxD,gBAAI,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEwuB,aAAH,KAAmBvuB,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEuuB,aAAtB,CAAJ,EAAyC,OAAO,CAAP;AACzC,gBAAI,CAAAvuB,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEuuB,aAAH,KAAmBxuB,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEwuB,aAAtB,CAAJ,EAAyC,OAAO,CAAC,CAAR;AAEzC,mBAAO,CAAP;AACH,WALsB,CAAhB,GAKF,EALL;AAMH;AAED;;;;4BAC4B;AACxB,iBAAO,IAAI,UAAAzlB,MAAJ,CAAW;AAAElR,gBAAI,EAAE,KAAK6zB,aAAL,GAAqB,IAA7B;AAAmC/N,uBAAW,EAAE,KAAhD;AAAuDC,uBAAW,EAAE,KAAKnhB;AAAzE,WAAX,CAAP;AACH;;;4BAEsB;AACnB,iBAAO,UAAAgyB,uBAAA,CAAwB,KAAKhyB,QAA7B,CAAP;AACH;AAED;;;;4BACsB;AAClB,iBAAO,KAAKgG,WAAL,CAAiBtJ,UAAjB,CAA4B,aAA5B,CAAP;AACH;AAED;;;;;;4BAGoB;AAChB,iBAAOhB,IAAI,CAACu2B,GAAL,CAAS,KAAKjsB,WAAL,CAAiBlB,YAAjB,CAA8B,QAA9B,EAAwCotB,QAAxC,CAAiD,KAAKC,gBAAtD,EAAwE,SAAxE,CAAT,CAAP;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAKnsB,WAAL,CAAiBjB,EAAxB;AACH;AAED;;;;4BACuB;AACnB,iBAAO,KAAK+oB,SAAL,CAAe/uB,MAAf,CAAsB,UAACwE,CAAD,EAAIuE,CAAJ;AAAA,mBAAUvE,CAAC,IAAIuE,CAAC,CAACsqB,QAAjB;AAAA,WAAtB,EAAiD,KAAjD,CAAP;AACH;AAED;;;;4BACuB;AACnB,iBAAO,CAAC,CAAC,KAAK9C,QAAL,CAAchyB,MAAvB;AACH;AAED;;;;;;;4BAIkB;AACd,iBAAO,KAAK+P,EAAZ;AACH;AAED;;;;;;4BAGkB;AACd,iBAAO,KAAK+e,IAAL,CAAU/e,EAAjB;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAK+e,IAAZ;AACH;AAED;;;;4BAC+B;AAC3B,cAAOiG,YAAY,GAAG,UAAAxtB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B,KAAKxF,QAAhC,CAAtB,CAD2B,CACwC;;AAEnE,cAAI,UAAA6E,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBs3B,YAApB,CAAiC,KAAKtsB,WAAL,CAAiB6G,aAAjB,CAA+B;AAAEhR,mBAAO,EAAE;AAAX,WAA/B,CAAjC,CAAJ,EAAuF;AACnF,mBAAO,QAAP;AACH,WAFD,MAEO,IAAI,UAAAgJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBs3B,YAApB,CAAiC,KAAKtsB,WAAtC,CAAJ,EAAwD;AAC3D,mBAAO,UAAP;AACH,WAFM,MAEA,IAAI,UAAAnB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBs3B,YAApB,CAAiC,KAAKtsB,WAAL,CAAiB/J,QAAjB,CAA0B;AAAEJ,mBAAO,EAAE;AAAX,WAA1B,CAAjC,CAAJ,EAAkF;AACrF,mBAAO,SAAP;AACH,WAFM,MAEA,IAAI,UAAAgJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBs3B,YAApB,CAAiC,KAAKtsB,WAAL,CAAiB/J,QAAjB,CAA0B;AAAEJ,mBAAO,EAAE,KAAKM;AAAhB,WAA1B,CAAjC,CAAJ,EAA6F;AAChG,mBAAO,aAAP;AACH,WAFM,CAGP;AAHO,eAIF,IAAGk2B,YAAY,CAACvtB,YAAb,CAA0B,KAA1B,EAAiC7I,QAAjC,CAA0C;AAAEJ,qBAAO,EAAE;AAAX,aAA1C,EAA0D02B,WAA1D,CAAsE,KAAKvsB,WAA3E,EAAwF,KAAxF,CAAH,EAAoG;AACrG,qBAAO,mBAAP;AACH;;AAED,iBAAO,MAAP;AACH;AAED;;;;4BACoB;AAChB,cACI,KAAKmZ,MAAL,IACA,KAAKA,MAAL,CAAY3gB,OAAZ,CAAoB,WAApB,KAAoC,CAFxC,EAGE;AACE,mBAAO,IAAP;AACH;;AAED,iBAAO,KAAP;AACH;AAED;;;;4BACsB;AAClB,2BAAU,KAAKwH,WAAL,CAAiBtJ,UAAjB,CAA4B,OAA5B,CAAV,gBAAoD,KAAKy1B,gBAAL,CAAsBz1B,UAAtB,CAAiC,OAAjC,CAApD;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKsJ,WAAL,CAAiBtJ,UAAjB,CAA4B,OAA5B,CAAP;AACH;AAED;;;;4BACmB;AACf,iBAAO,KAAKuJ,SAAL,CAAevJ,UAAf,CAA0B,OAA1B,CAAP;AACH;AAED;;;;4BACwB;AACpB,iBAAO,OAAA0F,gBAAA,CAAiB,KAAKjG,QAAtB,CAAP;AACH;AAED;;;;4BAC0B;;;AACtB,iBAAO,YAAKiwB,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAElE,UAAX,KAAyB,aAAhC;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAKpK,KAAL,CAAW8G,KAAX,CAAiBztB,IAAxB;AACH;;;;MAvkBwB,iBAAAmf,a;;AAA7B;AAiwBA;;;;;AAIA,aAAgBkc,mBAAhB,CAAoCC,UAApC,EAAiE;AAAA;;AAAA;AAGzD,YAAMC,MAAM,GAAGD,UAAU,CAACzwB,MAAX,CACX,UAAC2wB,KAAD;AAAA,iBACIA,KAAK,CAACC,WAAN,KAAsBH,UAAU,CAACh5B,GAAD,CAAV,CAAcm5B,WAApC,IACAD,KAAK,CAACZ,aAAN,KAAwBU,UAAU,CAACh5B,GAAD,CAAV,CAAcs4B,aAF1C;AAAA,SADW,CAAf;;AAKA,YAAIW,MAAM,CAACp1B,MAAP,GAAgB,CAApB,EAAuB;AACnB,cAAMud,QAAQ,GAAG4X,UAAU,CAACzwB,MAAX,CACb,UAAC2wB,KAAD;AAAA,mBACI,EAAEA,KAAK,CAACC,WAAN,KAAsBH,UAAU,CAACh5B,GAAD,CAAV,CAAcm5B,WAApC,IACED,KAAK,CAACZ,aAAN,KAAwBU,UAAU,CAACh5B,GAAD,CAAV,CAAcs4B,aAD1C,CADJ;AAAA,WADa,CAAjB;AAKAlX,kBAAQ,CAAC5X,IAAT,CAAc,IAAI,WAAAssB,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBACxBkD,UAAU,CAACh5B,GAAD,CADc,CAAC,EACZ;AAChBL,iBAAK,EAAE,OAAA+P,OAAA,CAAQupB,MAAM,CAACzxB,GAAP,CAAW,UAAA0xB,KAAK;AAAA,qBAAIA,KAAK,CAACv5B,KAAV;AAAA,aAAhB,CAAR,CADS;AAEhBiwB,wBAAY,EAAE,OAAI,CAACrjB,WAAL,CAAiBjB,EAFf;AAGhB8tB,4BAAgB,EAAE,OAAI,CAACA;AAHP,WADY,CAAlB,CAAd;AAMAJ,oBAAU,GAAG5X,QAAb;AACAphB,aAAC,GAAG,CAAJ;AACH;;AAtBwD;AAAA;;AAC7D;AACA,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGg5B,UAAU,CAACn1B,MAA/B,EAAuC7D,CAAC,EAAxC,EAA4C;AAAA,eAAnCA,CAAmC;AAqB3C;;AACD,aAAOg5B,UAAP;AACH;;AAzBD;;;;;;;;;;;;;;;;;;;AC7wBA,QAAYK,cAAZ;;AAAA,eAAYA,cAAZ,EAA0B;AACtB;AACA;AACA;AACA;AACH,KALD,EAAYA,cAAc,GAAd,QAAAA,cAAA,aAAAA,cAAA,GAAc,EAAd,CAAZ;;;;;;;;;;;;;;;;;;;;;AClCA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA,QAAMC,MAAM,GAAG,CAAf;AACA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,GAAG,GAAG,KAAKD,IAAjB;AACA,QAAME,IAAI,GAAG,IAAID,GAAjB;AACA,QAAME,KAAK,GAAG,KAAKF,GAAnB;AAEA,QAAMG,YAAY,GAAmC;AACjD51B,WAAK,EAAE21B,KAD0C;AAEjDE,YAAM,EAAEF,KAFyC;AAGjDG,UAAI,EAAEJ,IAH2C;AAIjDK,WAAK,EAAEL,IAJ0C;AAKjD3zB,SAAG,EAAE0zB,GAL4C;AAMjDrI,UAAI,EAAEqI,GAN2C;AAOjDv1B,UAAI,EAAEs1B,IAP2C;AAQjDvwB,WAAK,EAAEuwB,IAR0C;AASjDv3B,YAAM,EAAEs3B,MATyC;AAUjDl3B,aAAO,EAAEk3B;AAVwC,KAArD;AAaA;;;;AAGa,YAAAl4B,QAAA,GAAW,OAAAA,QAAX;AAEb;;;;AAGa,YAAAI,SAAA,GAAY,OAAAA,SAAZ;;AAQb,aAAgBu4B,qBAAhB,CAAsCjW,OAAtC,EAAmE;AAC/D,UAAI/O,KAAK,GAAY,EAArB;;AACA,UAAI+O,OAAJ,EAAa;AACT/O,aAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK+O,OAAL,CAAR;AACA,eAAO/O,KAAK,CAACnO,IAAb;;AACA,YAAIkd,OAAO,CAAC1a,OAAZ,EAAqB;AACjB,iBAAO2L,KAAK,CAAC3L,OAAb;;AACA,eAAK,IAAM4wB,QAAX,IAAuBlW,OAAO,CAAC1a,OAA/B,EAAwC;AACpC,gBAAI,CAAC2L,KAAK,CAACilB,QAAD,CAAV,EAAsB;AAClBjlB,mBAAK,CAACilB,QAAD,CAAL,GAAkBlW,OAAO,CAAC1a,OAAR,CAAgB4wB,QAAhB,CAAlB;AACH;AACJ;AACJ,SAVQ,CAYT;AACA;;;AACA,YAAIlW,OAAO,CAACmW,KAAZ,EAAmB;AACfllB,eAAK,CAACxD,EAAN,GAAWuS,OAAO,CAACmW,KAAnB;AACA,iBAAOllB,KAAK,CAACklB,KAAb;AACH;AAEJ;;AACD,aAAOllB,KAAP;AACH;;AAvBD;AA0BA;;;;;;AAKA,aAAgBmlB,mBAAhB,CAAoCr6B,IAApC,EAA0E;AAAA,UAArBs6B,QAAqB,uEAAF,EAAE;;AACtE;AACA,UAAI,CAACt6B,IAAL,EAAW;AACP,eAAO,CACH;AACIgC,eAAK,EAAE,CADX;AAEIsrB,aAAG,EAAE,UAAA/hB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,QAAjC,EAA2CC,EAA3C,GAAgD;AAFzD,SADG,CAAP;AAMH;;AACD,UAAM8uB,KAAK,GAAmB,EAA9B;AACA,UAAIv4B,KAAK,GAAG,IAAI,UAAAgR,MAAJ,CAAW;AAAElR,YAAI,EAAE;AAAR,OAAX,CAAZ;AACA9B,UAAI,CAACgK,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACnI,IAAF,GAASoI,CAAC,CAACpI,IAArB;AAAA,OAAV;;AAZsE,mDAahD9B,IAbgD;AAAA;;AAAA;AAatE,kEAA4B;AAAA,cAAjByW,OAAiB;AACxB,cAAM+jB,SAAS,GAAG/jB,OAAO,CAAC/J,WAA1B;AACA,cAAM+tB,OAAO,GAAGhkB,OAAO,CAAC9J,SAAxB;;AACA,cAAI6tB,SAAS,CAACvB,WAAV,CAAsBj3B,KAAtB,CAAJ,EAAkC;AAC9B,gBAAMoD,IAAI,GAAGhD,IAAI,CAACu2B,GAAL,CAAS6B,SAAS,CAAC5B,QAAV,CAAmB52B,KAAnB,EAA0B,SAA1B,CAAT,CAAb;AACA;;AACA,gBAAIoD,IAAI,IAAIk1B,QAAZ,EAAsB;AAClBC,mBAAK,CAAC5wB,IAAN,CAAW;AAAE3H,qBAAK,EAAEA,KAAK,CAACyJ,EAAf;AAAmB6hB,mBAAG,EAAEkN,SAAS,CAAC/uB;AAAlC,eAAX;AACH;;AACDzJ,iBAAK,GAAGy4B,OAAR;AACH,WAPD,MAOO,IAAIz4B,KAAK,CAACwJ,YAAN,CAAmB,QAAnB,EAA6BC,EAA7B,KAAoC+uB,SAAS,CAAChvB,YAAV,CAAuB,QAAvB,EAAiCC,EAAzE,EAA6E;AAChFzJ,iBAAK,GAAGy4B,OAAR;AACH;AACJ;AA1BqE;AAAA;AAAA;AAAA;AAAA;;AA2BtEF,WAAK,CAAC5wB,IAAN,CAAW;AACP3H,aAAK,EAAEA,KAAK,CAACyJ,EADN;AAEN;AACD6hB,WAAG,EAAE,UAAA/hB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,QAAjC,EAA2CC,EAA3C,GAAgD;AAH9C,OAAX;AAMA,aAAO8uB,KAAP;AACH;;AAlCD;AAoCA;;;;;;;;;AAQA,aAAgBG,sBAAhB,CACI16B,IADJ,EAGyB;AAAA,UADrB8B,IACqB,uEADN,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EACd;AAAA,UAArB6uB,QAAqB,uEAAF,EAAE;AAErB,UAAMC,KAAK,GAAGF,mBAAmB,CAACr6B,IAAD,EAAOs6B,QAAP,CAAjC;AACA,UAAMK,KAAK,GAAG,IAAI,UAAA3nB,MAAJ,CAAW;AAAClR,YAAI,EAAJA;AAAD,OAAX,CAAd;AACA,UAAMwJ,IAAI,GAAGqvB,KAAK,CAACnvB,YAAN,CAAmB,QAAnB,EAA6B9I,QAA7B,CAAsC;AAAER,cAAM,EAAE;AAAV,OAAtC,CAAb;;AAJqB,mDAKDq4B,KALC;AAAA;;AAAA;AAKrB,kEAA2B;AAAA,cAAhBK,KAAgB;AACvB,cAAM54B,KAAK,GAAG,IAAI,UAAAgR,MAAJ,CAAW;AAAClR,gBAAI,EAAE84B,KAAK,CAAC54B;AAAb,WAAX,CAAd;AACA,cAAMsrB,GAAG,GAAG,IAAI,UAAAta,MAAJ,CAAW;AAAClR,gBAAI,EAAE84B,KAAK,CAACtN;AAAb,WAAX,CAAZ;;AACA,cAAItrB,KAAK,CAACwJ,YAAN,CAAmB,QAAnB,EAA6BytB,WAA7B,CAAyC3tB,IAAzC,CAAJ,EAAoD;AAChD,mBAAOsvB,KAAP;AACH,WAFD,MAEO,IAAItvB,IAAI,CAAC0tB,YAAL,CAAkB1L,GAAG,CAAC9hB,YAAJ,CAAiB,QAAjB,CAAlB,CAAJ,EAAmD;AACtD,gBAAM3I,QAAQ,GAAGyqB,GAAG,CAAC9hB,YAAJ,CAAiB,QAAjB,EAA2BotB,QAA3B,CAAoCttB,IAApC,EAA0C,SAA1C,CAAjB;AACA;;AACA,gBAAIzI,QAAQ,IAAIy3B,QAAhB,EAA0B;AACtB,qBAAOM,KAAP;AACH;AACJ;AACJ;AAjBoB;AAAA;AAAA;AAAA;AAAA;;AAkBrB,aAAOL,KAAK,CAACA,KAAK,CAACv2B,MAAN,GAAe,CAAhB,CAAZ;AACH;;AAtBD;AAwBA;;;;;;AAKA,aAAgB62B,mBAAhB,CACIpkB,OADJ,EAEIqkB,UAFJ,EAKgD;AAAA,UAF5CC,WAE4C,uEAFrB,KAEqB;AAAA,UAD5CC,cAC4C;AAAA,UAA5CjoB,MAA4C;;;;AAE5C,UAAI,CAAC0D,OAAL,EAAc;AACV,cAAMvY,KAAK,CAAC,mBAAD,CAAX;AACH;;AAED,UAAM+8B,YAAY,GAAG,wBAAA1c,cAAA,CAAeC,UAAf,CAA0B,aAAA2V,IAA1B,CAArB;AACA,UAAM+G,YAAY,GACdD,YAAY,CAACE,OAAb,IACA,IAAI,aAAAhH,IAAJ,CAAS;AAAEpgB,UAAE,EAAE,YAAN;AAAoBlW,YAAI,EAAE,YAA1B;AAAwCqV,aAAK,EAAE;AAA/C,OAAT,CAFJ;AAIA,UAAM7J,MAAM,GAAyB;AACjC0K,UAAE,EAAE,IAAI,QAAAqnB,WAAJ,CAAgB3kB,OAAO,CAAC1C,EAAR,IAAc,EAA9B,CAD6B;AAEjCod,kBAAU,EAAE,IAAI,QAAAiK,WAAJ,CAAgB,CAAC3kB,OAAO,CAACqc,IAAT,CAAhB,EAAgC,EAAhC,CAFqB;AAGjCA,YAAI,EAAE,IAAI,QAAAsI,WAAJ,CAAgB3kB,OAAO,CAACqc,IAAxB,EAA8B,EAA9B,CAH2B;AAIjCrwB,cAAM,EAAE,IAAI,QAAA24B,WAAJ,CAAgB;AAAEp2B,eAAK,EAAEyR,OAAO,CAAC/J,WAAR,IAAuB,UAAAnB,OAAA,EAAhC;AAA2C8vB,kBAAQ,EAAE;AAArD,SAAhB,EAA8E,CAAC,QAAAC,UAAA,CAAWC,QAAZ,CAA9E,CAJyB;AAKjC14B,gBAAQ,EAAE,IAAI,QAAAu4B,WAAJ,CAAgB;AAAEp2B,eAAK,EAAEyR,OAAO,CAAC5T,QAAjB;AAA2Bw4B,kBAAQ,EAAE;AAArC,SAAhB,CALuB;AAMjC5G,iBAAS,EAAE,IAAI,QAAA2G,WAAJ,CAAgB3kB,OAAO,CAACge,SAAR,IAAqByG,YAArC,EAAmD,CAAC,QAAAI,UAAA,CAAWC,QAAZ,CAAnD,CANsB;AAOjC/G,iBAAS,EAAE,IAAI,QAAA4G,WAAJ,CAAgB3kB,OAAO,CAAC+d,SAAxB,EAAmC,EAAnC,CAPsB;AAQjCzH,aAAK,EAAE,IAAI,QAAAqO,WAAJ,CAAgB3kB,OAAO,CAACsW,KAAR,IAAiB,EAAjC,EAAqC;AAAEyO,oBAAU,EAAE,CAAE,QAAAF,UAAA,CAAWC,QAAb,EAAuB,QAAAD,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAvB,CAAd;AAAgEC,kBAAQ,EAAE;AAA1E,SAArC,CAR0B;AASjCnH,oBAAY,EAAE,IAAI,QAAA6G,WAAJ,CAAgB3kB,OAAO,CAAC8d,YAAxB,CATmB;AAUjCvmB,YAAI,EAAE,IAAI,QAAAotB,WAAJ,CAAgB3kB,OAAO,CAACzI,IAAxB,CAV2B;AAWjC4mB,aAAK,EAAE,IAAI,QAAAwG,WAAJ,CAAgB3kB,OAAO,CAACme,KAAxB,CAX0B;AAYjCC,uBAAe,EAAE,IAAI,QAAAuG,WAAJ,CAAgB3kB,OAAO,CAACoe,eAAxB,CAZgB;AAajCC,0BAAkB,EAAE,IAAI,QAAAsG,WAAJ,CAAgB3kB,OAAO,CAACqe,kBAAxB,CAba;AAcjCkB,gBAAQ,EAAE,IAAI,QAAAoF,WAAJ,CACN3kB,OAAO,CAACqhB,cAAR,CAAuBnwB,GAAvB,CACI,UAAC0xB,KAAD;AAAA,iBAAW,IAAI,uBAAApD,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBACrBoD,KADqB,CAAC,EACjB;AACRtJ,wBAAY,EAAEtZ,OAAO,CAAC/J,WAAR,CAAoBjB,EAD1B;AAER8tB,4BAAgB,EAAE9iB,OAAO,CAAC/P;AAFlB,WADiB,CAAlB,CAAX;AAAA,SADJ,CADM,CAduB;AAuBjCkvB,eAAO,EAAE,IAAI,QAAAwF,WAAJ,CAAgB,CAAC,CAAC3kB,OAAO,CAACmf,OAA1B,CAvBwB;AAwBjChQ,oBAAY,EAAE,IAAI,QAAAwV,WAAJ,CAAgB,CAAC,CAAC3kB,OAAO,CAACmP,YAA1B,CAxBmB;AAyBjC+V,mBAAW,EAAE,IAAI,QAAAP,WAAJ,CAAgB,IAAhB,CAzBoB;AA0BjCroB,cAAM,EAAE,IAAI,QAAAqoB,WAAJ,CAAgB,EAAhB,CA1ByB;AA2BjC10B,gBAAQ,EAAE,IAAI,QAAA00B,WAAJ,CAAgBJ,cAAc,IAAI,EAAlC,CA3BuB;AA4BjCY,sBAAc,EAAE,IAAI,QAAAR,WAAJ,CAAgB,KAAhB;AA5BiB,OAArC;;AA8BA,UAAI,CAACL,WAAL,EAAkB;AACd1xB,cAAM,CAACxG,QAAP,CAAgBg5B,aAAhB,CAA8B,CAAC,QAAAP,UAAA,CAAWC,QAAZ,EAAsB,uBAAAO,eAAA,CAAgBzyB,MAAM,CAAC5G,MAAvB,CAAtB,CAA9B;AACH;AACD;;;AACA,UAAIgU,OAAO,CAAC1C,EAAR,IAAc0C,OAAO,CAAC1C,EAAR,KAAe,QAAjC,EAA2C;AACvC1K,cAAM,CAACorB,SAAP,CAAiBsH,OAAjB;AACA;;AACA,YAAItlB,OAAO,CAAC9J,SAAR,CAAkBlB,EAAlB,GAAuB,UAAAF,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAA/C,EAAmD;AAC/CpC,gBAAM,CAAC5G,MAAP,CAAcs5B,OAAd;AACH;AACJ,OAND,MAMO;AACH,YAAMC,cAAc,GAAG,CAAC,QAAAV,UAAA,CAAWC,QAAZ,CAAvB;;AACA,YAAI,CAACR,WAAL,EAAkB;AACdiB,wBAAc,CAACryB,IAAf,CAAoBsyB,QAApB;AACH;;AACDD,sBAAc,CAACryB,IAAf,CAAoBuyB,WAApB;AACA7yB,cAAM,CAAC5G,MAAP,CAAco5B,aAAd,CAA4BG,cAA5B;AACA3yB,cAAM,CAAC5G,MAAP,CAAc05B,sBAAd;AACH;;AACD,UAAIC,WAAW,GAAG,CAAC,CAAnB;AACA/yB,YAAM,CAAC8nB,UAAP,CAAkBkL,YAAlB,CAA+Bt8B,SAA/B,CAAyC,UAACC,IAAD,EAAU;AAC/C,YAAMs8B,QAAQ,GAAGjzB,MAAM,CAACyrB,kBAAP,CAA0B9vB,KAA1B,IAAmC,EAApD;AACA,YAAM8F,OAAO,GAAGgE,MAAM,CAACpH,IAAP,CAAY40B,QAAZ,EAAsB5zB,MAAtB,CAA6B,UAAClL,GAAD;AAAA,iBACzCwC,IAAI,CAACsF,IAAL,CAAU,UAACkf,KAAD;AAAA,mBAAWA,KAAK,CAACtR,KAAN,KAAgB1V,GAA3B;AAAA,WAAV,CADyC;AAAA,SAA7B,EAEdwG,MAFF;;AAGA,YAAIhE,IAAI,IAAIA,IAAI,CAACgE,MAAb,IAAuB8G,OAAO,KAAK,CAAvC,EAA0C;AACtC,cAAMyxB,KAAK,GAAGlzB,MAAM,CAACwrB,eAAP,CAAuB7vB,KAAvB,IAAgC,EAA9C;;AACA,cAAI8J,MAAM,CAACpH,IAAP,CAAY40B,QAAZ,EAAsBt4B,MAAtB,IAAgC,CAAhC,IAAqC8K,MAAM,CAACpH,IAAP,CAAY60B,KAAZ,EAAmBv4B,MAAnB,IAA6B,CAAtE,EAAyE;AACrE,gBAAMxG,GAAG,GAAGsR,MAAM,CAACpH,IAAP,CAAY40B,QAAZ,EAAsB,CAAtB,KAA4BxtB,MAAM,CAACpH,IAAP,CAAY60B,KAAZ,EAAmB,CAAnB,CAAxC;AACA,gBAAMC,YAAY,GAAG,EAArB;AACA,gBAAMC,SAAS,GAAG,EAAlB;AACA,gBAAM7H,KAAK,GAAGvrB,MAAM,CAACurB,KAAP,CAAa5vB,KAA3B;AACA4vB,iBAAK,CAAC10B,OAAN,CAAc,UAACk3B,IAAD;AAAA,qBAAWA,IAAI,CAAC5S,KAAL,KAAehnB,GAAf,GAAsB45B,IAAI,CAAC5S,KAAL,GAAaxkB,IAAI,CAAC,CAAD,CAAJ,CAAQkT,KAA3C,GAAoD,EAA/D;AAAA,aAAd;AACAspB,wBAAY,CAACx8B,IAAI,CAAC,CAAD,CAAJ,CAAQkT,KAAT,CAAZ,GAA8BopB,QAAQ,CAAC9+B,GAAD,CAAtC;AACAi/B,qBAAS,CAACz8B,IAAI,CAAC,CAAD,CAAJ,CAAQkT,KAAT,CAAT,GAA2BqpB,KAAK,CAAC/+B,GAAD,CAAhC;AACA6L,kBAAM,CAACyrB,kBAAP,CAA0BpyB,QAA1B,CAAmC85B,YAAnC;AACAnzB,kBAAM,CAACwrB,eAAP,CAAuBnyB,QAAvB,CAAgC+5B,SAAhC;AACH;AACJ;;AACDL,mBAAW,GAAGp8B,IAAI,CAACgE,MAAnB;AACH,OApBD;AAqBAqF,YAAM,CAAC5G,MAAP,CAAc45B,YAAd,CAA2Bt8B,SAA3B,CAAqC,UAAC8Y,CAAD,EAAO;AACxCxP,cAAM,CAACxG,QAAP,CAAgBs5B,sBAAhB;AACH,OAFD;AAGA9yB,YAAM,CAACsyB,WAAP,CAAmBU,YAAnB,CAAgCt8B,SAAhC,CAA0C,UAAC28B,YAAD,EAAkB;AACxD,YAAI,CAACA,YAAL,EAAmB;AACfrzB,gBAAM,CAAC8nB,UAAP,CAAkBzuB,QAAlB,CAA2B,EAA3B;AACH;AACJ,OAJD;AAKA2G,YAAM,CAACuc,YAAP,CAAoByW,YAApB,CAAiCt8B,SAAjC,CAA2C,UAAC6lB,YAAD,EAAkB;AACzD,YAAI,CAACA,YAAL,EAAmB;AACfvc,gBAAM,CAAC2sB,QAAP,CAAgBtzB,QAAhB,CAAyB,EAAzB;AACH;AACJ,OAJD;AAKA,UAAMi6B,iBAAiB,GAAyB,CAC5C,IAD4C,EAE5C,YAF4C,EAG5C,WAH4C,EAI5C,OAJ4C,EAK5C,QAL4C,EAM5C,cAN4C,EAO5C,iBAP4C,EAQ5C,oBAR4C,EAS5C,UAT4C,EAU5C,gBAV4C,4BAWzC7B,UAXyC,GAY9Cr1B,MAZ8C,CAYvC,UAACkC,GAAD,EAAMnK,GAAN,EAAc;AACnB;AACA,YAAI6L,MAAM,CAAC7L,GAAD,CAAV,EAAiB;AACbmK,aAAG,CAACnK,GAAD,CAAH,GAAW6L,MAAM,CAAC7L,GAAD,CAAjB;AACH;;AACD,eAAOmK,GAAP;AACH,OAlB+C,EAkB7C,EAlB6C,CAAhD;;AAoBA,UAAIg1B,iBAAiB,CAAC/G,OAAtB,EAA+B;AAC3B,YAAMgH,YAAY,GAAG,SAAfA,YAAe,CAAC53B,KAAD,EAAW;AAC5B,cAAIA,KAAJ,EAAW;AACP,gBAAIyoB,UAAU,GAAGkP,iBAAiB,CAACl6B,MAAlB,CAAyBuC,KAAzB,CAA+B63B,KAA/B,EAAjB,CADO,CAEP;AACA;;AACA,gBAAI7B,cAAJ,EAAoB;AAChBvN,wBAAU,GAAGA,UAAU,CAACvhB,MAAX,CAAkB8uB,cAAlB,CAAb;AACH;;AAED2B,6BAAiB,CAACl6B,MAAlB,CAAyBo5B,aAAzB,CAAuC,CAAC,QAAAP,UAAA,CAAWC,QAAZ,CAAvC;AACAoB,6BAAiB,CAACl6B,MAAlB,CAAyBC,QAAzB,CAAkCi6B,iBAAiB,CAAC/G,OAAlB,CAA0B5wB,KAA1B,GACpByoB,UAAU,CAACjiB,YAAX,CAAwB,KAAxB,CADoB,GAEpBmxB,iBAAiB,CAACl6B,MAAlB,CAAyBuC,KAFvC;AAGA23B,6BAAiB,CAAC95B,QAAlB,CAA2BH,QAA3B,CAAoCi6B,iBAAiB,CAAC/G,OAAlB,CAA0B5wB,KAA1B,GAC9B,KAAK,EADyB,GAE9B23B,iBAAiB,CAAC95B,QAAlB,CAA2BmC,KAFjC;AAGA23B,6BAAiB,CAACl6B,MAAlB,CAAyB05B,sBAAzB;AACAQ,6BAAiB,CAAC95B,QAAlB,CAA2Bk5B,OAA3B,GAhBO,CAiBP;AACH,WAlBD,MAkBO;AACH,gBAAMC,eAAc,GAAG,CAAC,QAAAV,UAAA,CAAWC,QAAZ,CAAvB;;AACA,gBAAI,CAACR,WAAL,EAAkB;AACdiB,6BAAc,CAACryB,IAAf,CAAoBsyB,QAApB;AACH;;AACDD,2BAAc,CAACryB,IAAf,CAAoBuyB,WAApB;;AACAS,6BAAiB,CAACl6B,MAAlB,CAAyBo5B,aAAzB,CAAuCG,eAAvC;AACAW,6BAAiB,CAAC95B,QAAlB,CAA2BH,QAA3B,CAAoC+T,OAAO,CAAC5T,QAAR,IAAoB,EAAxD;AACA85B,6BAAiB,CAACl6B,MAAlB,CAAyB05B,sBAAzB;AACAQ,6BAAiB,CAAC95B,QAAlB,CAA2Bi6B,MAA3B;AACAH,6BAAiB,CAACl6B,MAAlB,CAAyBq6B,MAAzB;AACH;AACJ,SA/BD;;AAgCAH,yBAAiB,CAAC/G,OAAlB,CAA0ByG,YAA1B,CAAuCt8B,SAAvC,CAAiD68B,YAAjD;AACAA,oBAAY,CAACD,iBAAiB,CAAC/G,OAAlB,CAA0B5wB,KAA3B,CAAZ;AACH;;AAED,UAAM+3B,WAAW,GAAGtmB,OAAO,CAACqgB,kBAAR,IAA8B,EAAlD,CAxJ4C,CA0J5C;;AACA,UAAG/jB,MAAM,IAAI0D,OAAO,CAACogB,iBAAR,KAA+B,mBAAAmG,gBAAA,CAAiBC,IAA7D,EAAkE;AAC9DxmB,eAAO,CAACugB,iBAAR,GAA4B+F,WAAW,CAClCr0B,MADuB,CAChB,UAAAw0B,UAAU;AAAA,iBAAIA,UAAU,CAACnpB,EAAX,KAAkB0C,OAAO,CAAC4b,oBAA9B;AAAA,SADM,EAEvB1qB,GAFuB,CAEnB,UAACu1B,UAAD;AAAA,iBAAgB,IAAI,UAAAlqB,MAAJ,CAAW;AAAClR,gBAAI,EAAEo7B,UAAU,CAACtpB,WAAX,GAAyB,IAAhC;AAAsCgU,uBAAW,EAAE,KAAnD;AAA0DC,uBAAW,EAAEpR,OAAO,CAAC/P;AAA/E,WAAX,CAAhB;AAAA,SAFmB,CAA5B;AAIH;AACD;;;;;AAGA,UAAGqM,MAAM,IAAIA,MAAM,KAAK,mBAAAoqB,YAAA,CAAaC,KAAlC,IAA2CrqB,MAAM,KAAK,mBAAAsqB,aAAA,CAAcD,KAApE,IAA6EL,WAA7E,IAA4FA,WAAW,CAAC/4B,MAAxG,IAAkH,CAACyS,OAAO,CAAC1C,EAA9H,EAAiI;AAC7H,YAAMupB,YAAY,GAAG,IAAI,UAAAtqB,MAAJ,CAAW;AAC5BlR,cAAI,EAAEi7B,WAAW,CAAC/yB,IAAZ,CAAiB,UAACuzB,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,CAAC3pB,WAAH,GAAiB4pB,EAAE,CAAC5pB,WAAhC;AAAA,WAAjB,EAA8D,CAA9D,EAAiEA,WAAjE,GAA+E,IADzD;AAE5BgU,qBAAW,EAAE,KAFe;AAERC,qBAAW,EAAEpR,OAAO,CAAC/P;AAFb,SAAX,CAArB;AAIAi2B,yBAAiB,CAACl6B,MAAlB,CAAyBC,QAAzB,CAAkC46B,YAAlC;AACA,YAAMhQ,GAAG,GAAGyP,WAAW,CAAC/yB,IAAZ,CAAiB,UAACuzB,EAAD,EAAKC,EAAL;AAAA,iBAAYA,EAAE,CAAC5pB,WAAH,GAAiB2pB,EAAE,CAAC3pB,WAAhC;AAAA,SAAjB,EAA8D,CAA9D,EAAiEA,WAAjE,GAA+E,IAA3F;AACA6C,eAAO,CAAC+f,gBAAR,GAA4B,IAAI,UAAAxjB,MAAJ,CAAW;AAAClR,cAAI,EAAEwrB,GAAP;AAAY1F,qBAAW,EAAE,KAAzB;AAAgCC,qBAAW,EAAEpR,OAAO,CAAC/P;AAArD,SAAX,CAA5B;AACH,OA5K2C,CA8K5C;;;AACA,UAAM+2B,WAAW,GAAG,OAAAd,iBAAiB,CAACl6B,MAAlB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEuC,KAA1B,KAAmC,IAAI,UAAAgO,MAAJ,CAAW;AAAElR,YAAI,EAAE;AAAR,OAAX,CAAvD,CA/K4C,CA+KoC;;;AAChF,UAAM47B,sBAAsB,GAAG,MAAH,OAAG,CAAH,kBACrBf,iBADqB,CAAG,EACP;AACpB9F,yBAAiB,EAAE,IAAI,QAAAuE,WAAJ,CAAgB3kB,OAAO,CAACogB,iBAAR,IAA6B,mBAAAmG,gBAAA,CAAiBW,MAA9D,CADC;AAEpB/G,2BAAmB,EAAE,IAAI,QAAAwE,WAAJ,CAAgB3kB,OAAO,CAACmgB,mBAAR,IAA+B,CAA/C,CAFD;AAGpBJ,wBAAgB,EAAE,IAAI,QAAA4E,WAAJ,CAAgB3kB,OAAO,CAAC+f,gBAAR,IAA4BiH,WAAW,CAAC96B,QAAZ,CAAqB;AAAC2uB,cAAI,EAAE;AAAP,SAArB,CAA5C,CAHE;AAIpB+E,wBAAgB,EAAE,IAAI,QAAA+E,WAAJ,CAAgB3kB,OAAO,CAAC4f,gBAAR,IAA4B,CAA5C,CAJE;AAKpBU,oBAAY,EAAE,IAAI,QAAAqE,WAAJ,CAAgB3kB,OAAO,CAACsgB,YAAxB,CALM;AAMpBC,yBAAiB,EAAE,IAAI,QAAAoE,WAAJ,CAAgB3kB,OAAO,CAACugB,iBAAR,IAA6B,EAA7C,CANC;AAOpBN,6BAAqB,EAAE,IAAI,QAAA0E,WAAJ,CAAgB,EAAhB,CAPH;AAQpBwC,0BAAkB,EAAE,IAAI,QAAAxC,WAAJ,CAAgB,mBAAA4B,gBAAA,CAAiBW,MAAjC,CARA;AASpBrH,uBAAe,EAAE,IAAI,QAAA8E,WAAJ,CAAgB3kB,OAAO,CAAC6f,eAAR,IAA2B,EAA3C;AATG,OADO,CAA/B;;AAaA,UAAG7f,OAAO,CAACsgB,YAAR,IAAwBhkB,MAAM,KAAK,mBAAAsqB,aAAA,CAAcD,KAApD,EAA0D;AACtDM,8BAAsB,CAAC1G,iBAAvB,CAAyC6E,aAAzC,CAAuD,CAACgC,eAAD,CAAvD;AACAH,8BAAsB,CAAC1G,iBAAvB,CAAyCmF,sBAAzC;AACAuB,8BAAsB,CAAClH,gBAAvB,CAAwCqF,aAAxC,CAAsD,CAAC,QAAAP,UAAA,CAAWC,QAAZ,EAAsBW,WAAtB,CAAtD;AACH,OAjM2C,CAkM5C;;;AACA,UAAM1e,IAAI,GAAG,IAAI,QAAAsgB,SAAJ,CAAcJ,sBAAd,CAAb;AACA,aAAOlgB,IAAP;AACH;;AA1MD;AA4MA;;;;;AAIA,aAAgBye,QAAhB,CAAyB8B,OAAzB,EAAmD;AAC/C,UAAMt7B,MAAM,GAAGs7B,OAAO,CAAC/4B,KAAvB,CAD+C,CACjB;;AAC9B,aAAOvC,MAAM,CAACu2B,YAAP,CAAoB,UAAAztB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB6R,aAApB,CAAkC;AAAEhR,eAAO,EAAE;AAAX,OAAlC,CAApB,IACD;AAAEE,cAAM,EAAE;AAAV,OADC,GAED,IAFN;AAGH;;AALD;AAOA;;;;;AAIA,aAAgBo7B,eAAhB,CAAiCE,OAAjC,EAA2D;AACvD,aAAOA,OAAO,CAAC/4B,KAAR,CAAchB,MAAd,KAAyB,CAAzB,GAA6B,IAA7B,GAAoC;AAAE6G,aAAK,EAAE;AAAT,OAA3C;AACH;;AAFD;AAIA;;;;;AAIC,aAAgBmzB,SAAhB,CAA2BD,OAA3B,EAAqD;AACjD,UAAG,CAACA,OAAO,CAAC/4B,KAAZ,EAAkB;AACd,eAAO;AAAElD,cAAI,EAAE;AAAR,SAAP;AACH;;AACF,UAAMA,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,YAAI,EAAEi8B,OAAO,CAAC/4B;AAAf,OAAX,CAAb;AACA,UAAMuiB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,UAAMiC,OAAO,GAAG4jB,GAAG,CAACyR,YAAJ,CAAiBl3B,IAAjB,EAAuB,KAAvB,KAAiCylB,GAAG,CAAC0W,UAAJ,CAAen8B,IAAf,EAAqB,KAArB,CAAjD;AACA,aAAO6B,OAAO,GAAG,IAAH,GAAU;AAAE7B,YAAI,EAAE;AAAR,OAAxB;AACH;;AARA;AAUD;;;;;AAIC,aAAgBo6B,WAAhB,CAA6B6B,OAA7B,EAAuD;AACpD,UAAG,CAACA,OAAO,CAAC/4B,KAAZ,EAAkB;AACd,eAAO;AAAElD,cAAI,EAAE;AAAR,SAAP;AACH;;AACF,UAAMA,IAAI,GAAG,UAAAyJ,OAAA,CAAQwyB,OAAO,CAAC/4B,KAAR,CAAck5B,MAAtB,CAAb;AACA,UAAM3W,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,UAAMiC,OAAO,GAAG4jB,GAAG,CAACyR,YAAJ,CAAiBl3B,IAAjB,EAAuB,KAAvB,KAAiCylB,GAAG,CAAC0W,UAAJ,CAAen8B,IAAf,EAAqB,KAArB,CAAjD;AACA,aAAO6B,OAAO,GAAG,IAAH,GAAU;AAAE7B,YAAI,EAAE;AAAR,OAAxB;AACF;;AARA;AAUD;;;;;AAIA,aAAgBq8B,YAAhB,CAA6BC,SAA7B,EAA8D;AAC1D,aAAOtvB,MAAM,CAACsnB,MAAP,CAAcgI,SAAd,EAAyB34B,MAAzB,CAAgC,UAAC44B,GAAD,EAAMzD,KAAN,EAAgB;AACnD,YAAM0D,SAAS,GAAG1D,KAAK,CAACn1B,MAAN,CAAa,UAAC84B,UAAD,EAAa51B,EAAb,EAAoB;AAC/C,cAAIA,EAAE,CAAC61B,UAAH,CAAcD,UAAd,IAA4BE,eAAe,CAAC91B,EAAE,CAAC61B,UAAH,CAAcD,UAAf,CAAf,GAA4CF,GAA5E,EAAiF;AAC7E,mBAAOI,eAAe,CAAC91B,EAAE,CAAC61B,UAAH,CAAcD,UAAf,CAAtB;AACH,WAFD,MAEO;AACH,mBAAOA,UAAP;AACH;AACJ,SANiB,EAMf,CANe,CAAlB;;AAOA,YAAID,SAAS,GAAGD,GAAhB,EAAqB;AACjB,iBAAOC,SAAP;AACH,SAFD,MAEO;AACH,iBAAOD,GAAP;AACH;AACJ,OAbM,EAaJ,CAbI,CAAP;AAcH;;AAfD;AAiBA;;;;;;AAKA,aAAgBK,0BAAhB,CACIC,UADJ,EAEIC,UAFJ,EAE+B;AAE3B,UAAMhmB,KAAK,GAAW,OAAO+lB,UAAP,KAAsB,QAAtB,GAAiCF,eAAe,CAACE,UAAD,CAAhD,GAA+DA,UAArF;AACA,UAAMz8B,MAAM,GACR,OAAO08B,UAAP,KAAsB,QAAtB,GAAiCH,eAAe,CAACG,UAAD,CAAhD,GAA+DA,UADnE;AAEA,aAAOhmB,KAAK,IAAI1W,MAAhB;AACH;;AARD;AAUA;;;;;AAIA,aAAgBu8B,eAAhB,CAAgCn2B,GAAhC,EAA2C;AACvC,UAAMoB,KAAK,GAAGpB,GAAG,CAACxE,KAAJ,CAAU,GAAV,CAAd;AACA,aAAO,CAAC4F,KAAK,CAAC,CAAD,CAAN,GAAYowB,YAAY,CAACpwB,KAAK,CAAC,CAAD,CAAN,CAA/B;AACH;;AAHD;AAKA;;;;;;;AAMA,aAAgBoc,kBAAhB,GAKiB;AAAA,UAJbjU,QAIa,uEAJS,EAIT;AAAA,UAHb0T,QAGa,uEAHO,IAGP;AAAA,UAFbsZ,WAEa,uEAFU,KAEV;AAAA,UADbp8B,MACa,uEADI,UAAA8I,OAAA,EACJ;AAAA,UAAbiZ,KAAa;AAEb,UAAMsa,UAAU,GAAGzE,mBAAmB,CAACxoB,QAAQ,CAACnJ,MAAT,CAAgB,UAAC2lB,GAAD;AAAA,eAAS,CAACA,GAAG,CAAC6E,QAAd;AAAA,OAAhB,CAAD,CAAtC;AACA,UAAM3L,GAAG,GAAG,UAAAhc,OAAA,EAAZ,CAHa,CAGS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMwzB,cAAc,GAAGrE,sBAAsB,CAAC7oB,QAAQ,CAACnJ,MAAT,CAAgB,UAAC2lB,GAAD;AAAA,eAAS,CAACA,GAAG,CAAC6E,QAAd;AAAA,OAAhB,CAAD,CAA7C;AAEA,UAAMlxB,KAAK,GAAG,IAAI,UAAAgR,MAAJ,CAAW;AAAClR,YAAI,EAAE,CAAAi9B,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAE/8B,KAAhB,KAAyB;AAAhC,OAAX,CAAd;AACA,UAAMsrB,GAAG,GAAG,IAAI,UAAAta,MAAJ,CAAW;AAAClR,YAAI,EAAE,CAAAi9B,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAEzR,GAAhB,KAAuB;AAA9B,OAAX,CAAZ;AACA,UAAM0R,cAAc,GAAGzX,GAAG,CAAC0R,WAAJ,CAAgBj3B,KAAK,CAACwJ,YAAN,CAAmB,QAAnB,CAAhB,KAAiD+b,GAAG,CAACyR,YAAJ,CAAiB1L,GAAG,CAAC9hB,YAAJ,CAAiB,QAAjB,CAAjB,CAAxE;AACA,UAAMyzB,qBAAqB,GAAG,OAAAn2B,gBAAA,CAC1Bk2B,cAAc,GAAG1R,GAAG,CAACsL,QAAJ,CAAarR,GAAb,EAAkB,SAAlB,CAAH,GAAkCvlB,KAAK,CAAC42B,QAAN,CAAerR,GAAf,EAAoB,SAApB,CADtB,EAE1B,OAF0B,CAA9B;AAKA,UAAM2X,aAAa,GAAG,CAACF,cAAD,IAAmB,CAACh9B,KAAK,CAACi8B,UAAN,CAAiB1W,GAAjB,EAAsB,KAAtB,CAA1C;AACA,UAAM4X,UAAU,GAAGH,cAAc,IAAI,CAAC1R,GAAG,CAAC2Q,UAAJ,CAAe1W,GAAf,EAAoB,KAApB,CAAtC;AAEA,aAAO;AACH1B,cAAM,EAAG,CAACN,QAAD,GACH;AAAD;AADI,UAEHyZ,cAAc,GACVH,WAAW,GACP;AAAD;AADQ,UAEP;AAAD;AAHO,UAIV;AAAD;AAPN;AAQHO,uBAAe,EAAED,UAAU,GACrB,mBADqB,GAErBH,cAAc,wBACI1R,GAAG,CAAClqB,UAAJ,CAAe,OAAAwI,gBAAA,EAAf,CADJ,cAC0CqzB,qBAD1C,SAEVC,aAAa,GACT,mBADS,qBAEEl9B,KAAK,CAACoB,UAAN,CAAiB,OAAAwI,gBAAA,EAAjB,CAFF,cAE0CqzB,qBAF1C;AAZpB,OAAP;AAgBH;;AA9CD;AAgDA;;;;AAGa,YAAAI,oBAAA,GAAuB,UAACxZ,MAAD,EAAiC;AACjE,cAAQA,MAAR;AACI,aAAK;AAAL;AAAA;AACI,iBAAO,cAAP;;AACJ,aAAK;AAAL;AAAA;AACI,iBAAO,sBAAP;;AACJ,aAAK;AAAL;AAAA;AACI,iBAAO,aAAP;;AACJ,aAAK;AAAL;AAAA;AACI,iBAAO,qBAAP;;AACJ,aAAK;AAAL;AAAA;AACA;AACI,iBAAO,WAAP;AAXR;AAaH,KAdY;;AAgBb,aAAgB0M,eAAhB,CACIvyB,IADJ,EAEI6xB,YAFJ,EAGIyN,cAHJ,EAGwE;AAEpE,UAAMC,aAAa,GAAGv/B,IAAI,CAAC0I,MAAL,CAAY,UAAC+N,OAAD,EAAa;;;AAC3C,eACI,EAAE,OAAAA,OAAO,CAACqc,IAAR,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE5f,KAAd,MAAwBosB,cAAc,CAAC9M,UAAzC,KACA,CAACI,oBAAoB,CAAC0M,cAAc,CAAC7M,MAAf,CAAsBhnB,EAAvB,EAA2B6zB,cAAc,CAAC5M,IAAf,CAAoBjnB,EAA/C,EAAmDgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAAvE,EAA2EgL,OAAO,CAAC9J,SAAR,CAAkBlB,EAA7F,CAFzB;AAIH,OALqB,CAAtB;AAMA,UAAM+zB,YAAY,GAAGD,aAAa,CAACzN,MAAd,CAAqBD,YAArB,CAArB;AACA2N,kBAAY,CAACx1B,IAAb,CAAkB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACnI,IAAF,GAASoI,CAAC,CAACpI,IAArB;AAAA,OAAlB;AACA,aAAO,OAAA0G,MAAA,CAAOg3B,YAAP,EAAqB,SAArB,CAAP;AACH;;AAdD;;AAgBA,aAAgB5M,oBAAhB,CACI6M,MADJ,EAEIC,IAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKa;AAAA,UAAT74B,IAAS,uEAAF,EAAE;AAET,aACK04B,MAAM,IAAIE,MAAV,IAAoBF,MAAM,GAAGG,IAA9B,IACCF,IAAI,GAAGC,MAAP,IAAiBD,IAAI,IAAIE,IAD1B,IAECD,MAAM,IAAIF,MAAV,IAAoBE,MAAM,GAAGD,IAF9B,IAGCE,IAAI,GAAGH,MAAP,IAAiBG,IAAI,IAAIF,IAJ9B;AAMH;;AAbD;;AAeA,aAAgBG,UAAhB,QAKC;AAAA,UAJGjK,OAIH,SAJGA,OAIH;AAAA,UAHGkK,OAGH,SAHGA,OAGH;AAAA,UAFGC,KAEH,SAFGA,KAEH;AAAA,UADGC,YACH,SADGA,YACH;;AACG,UAAIpK,OAAJ,EAAa;AACT,yBAAUkK,OAAO,CAAC18B,UAAR,CAAmB,aAAnB,CAAV;AACH,OAFD,MAEO;AACH,YAAI08B,OAAO,CAAC7B,UAAR,CAAmB8B,KAAnB,EAA0B,KAA1B,CAAJ,EAAsC;AAClC,2BAAUD,OAAO,CAAC18B,UAAR,CAAmB,oBAAnB,CAAV,gBAAwD48B,YAAY,CAAC58B,UAAb,CAAwB,OAAxB,CAAxD;AACH,SAFD,MAEO;AACH,2BAAU08B,OAAO,CAAC18B,UAAR,CAAmB,oBAAnB,CAAV,gBAAwD48B,YAAY,CAAC58B,UAAb,CAAwB,oBAAxB,CAAxD;AACH;AACJ;AACJ;;AAfD;;;;;;;;;;;;;;;;;;;;ACvjBA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;QAKa68B,e;;;;;AACT,+BAAsB3nB,SAAtB,EACIoG,eADJ,EACoC;AAAA;;AAAA;;AAEhC,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAHkB,gBAAApG,SAAA,GAAAA,SAAA;AAIlB,gCAAAiG,cAAA,CAAe2hB,UAAf,CAA0B,gBAAAna,OAA1B;AACA,gBAAKhH,KAAL,GAAa,UAAb;AACA,gBAAKC,UAAL,GAAkB,UAAlB;;AACA,gBAAKH,QAAL,GAAgB,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBAAU,CAAC,CAACD,CAAC,CAAC8J,EAAF,IAAQ,EAAT,EAAa5J,aAAb,CAA2BD,CAAC,CAAC6J,EAA7B,CAAD,IAAqC,CAAC,CAAC9J,CAAC,CAAC8nB,OAAF,IAAa,EAAd,EAAkB5nB,aAAlB,CAAgCD,CAAC,CAAC6nB,OAAlC,CAAhD;AAAA,SAAhB;;AANgC;AAOnC;AAED;;;;;;;;qCAIoB9N,O,EAChBkc,Q,EAAiB;AAAA;;AACjB,cAAI,CAAClc,OAAL,EAAc;AACV,kBAAM,IAAI/lB,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,cAAMqpB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;;AACA,cAAI,CAACuiB,OAAO,CAACxS,IAAb,EAAmB;AACfwS,mBAAO,CAACxS,IAAR,GAAe8V,GAAG,CACb/b,YADU,CACG,KADH,EAEV+H,aAFU,CAEI;AAAE+d,kBAAI,EAAE;AAAR,aAFJ,EAGV7lB,EAHL;AAIH;;AACD,cAAI,CAACwY,OAAO,CAACmW,KAAb,EAAoB;AAChBnW,mBAAO,CAACmW,KAAR,GAAgB,IAAhB;AACH;;AAED,cAAM58B,GAAG,sBAAeymB,OAAO,CAAClQ,EAAR,GAAakQ,OAAO,CAAClQ,EAArB,GAA0B,EAAzC,cAA+CosB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAAA,QAAA,GAAY,EAA3D,CAAT;;AACA,cAAI,CAAC,KAAKvhB,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACtB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnD,kBAAMwiB,OAAO,GAAG,SAAVA,OAAU,CAACpgC,IAAD,EAAqB;AACjC,uBAAO,OAAI,CAAC4e,SAAL,CAAephB,GAAf,CAAP;AACAmgB,uBAAO,CAAC3d,IAAD,CAAP;AACH,eAHD;;AAIA,kBAAM8f,KAAK,GAAG,SAARA,KAAQ,CAAA3T,CAAC,EAAI;AACfyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAO,OAAI,CAACyS,SAAL,CAAephB,GAAf,CAAP;AACH,eAHD;;AAIA,kBAAM0X,KAAK,GAAG,oBAAAglB,qBAAA,CAAsBjW,OAAtB,CAAd;;AACA,kBAAIA,OAAO,CAAClQ,EAAZ,EAAgB;AACZ,uBAAI,CAACqf,IAAL,CAAUnP,OAAO,CAAClQ,EAAlB,EAAsBmB,KAAtB,EAA6B6I,IAA7B,CAAkC,UAAA5d,CAAC;AAAA,yBAAIigC,OAAO,CAAC,CAACjgC,CAAD,CAAD,CAAX;AAAA,iBAAnC,EAAqD2f,KAArD;AACH,eAFD,MAEO;AACH,uBAAI,CAAC5K,KAAL,CAAWA,KAAX,EAAkB6I,IAAlB,CAAuBqiB,OAAvB,EAAgCtgB,KAAhC;AACH;AACJ,aAfqB,CAAtB;AAgBH;;AACD,iBAAO,KAAKlB,SAAL,CAAephB,GAAf,CAAP;AACH;AAGD;;;;;;;6BAIYiZ,O,EAAkB4pB,M,EAAgB;AAC1C,cAAMryB,IAAI,GAAGyI,OAAO,CAAC6pB,SAAR,EAAb;;AACA,cAAGD,MAAH,EAAU;AACNryB,gBAAI,CAACqyB,MAAL,GAAc,IAAd;AACH;;AACD,iBAAO5pB,OAAO,CAAC1C,EAAR,GAAa,KAAK+J,MAAL,CAAYrH,OAAO,CAAC1C,EAApB,EAAwB/F,IAAxB,CAAb,GAA6C,KAAK7I,GAAL,CAAS6I,IAAT,CAApD;AACH;AAED;;;;;;;;gCAKe+F,E,EAAY1K,M,EAA8B;AACrD,iBAAQ,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,SAAd,EAAyB1K,MAAzB,CAAR;AACH;;;iDAC+B0K,E,EAAY1K,M,EAA8B;AACtE,iBAAQ,KAAKk3B,QAAL,CAAcxsB,EAAd,EAAkB,SAAlB,EAA6B1K,MAA7B,CAAR;AACH;;;+BAEa0K,E,EAAY1K,M,EAAkB;AACxC,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,QAAd,EAAwB1K,MAAxB,CAAP;AACH;;;6BAEW0K,E,EAAY8R,M,EAA8Bxc,M,EAAkB;AACpE,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc8R,MAAd,EAAsBxc,MAAtB,CAAP;AACH;;;gCAEc0K,E,EAAY1K,M,EAAkB;AACzC,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,KAAK2K,eAAL,CAAqBQ,SAArB,GAAiC,mBAAjC,GAAuD,SAArE,EAAgF7V,MAAhF,CAAP;AACH;;;gCAEiB4T,Q,EAAiB;AAC/B,iBAAO,IAAI,gBAAA8I,OAAJ,CAAY9I,QAAZ,CAAP;AACH;;;wCAEsBpL,Q,EAAmB;AAAA;;AACtC,cAAM2uB,QAAQ,GAAG,EAAjB;AACA3uB,kBAAQ,CAAC3R,OAAT,CAAiB,UAAAgyB,GAAG,EAAI;;;AACpB,gBAAMzb,OAAO,GAAGyb,GAAG,CAACzU,MAAJ,EAAhB;AACA,gBAAM1J,EAAE,GAAG0C,OAAO,CAAC1C,EAAnB;AACA,gBAAM1K,MAAM,GAAG;AACXo3B,wBAAU,EAAEhqB,OAAO,CAAC1C,EADT;AAEX0gB,uBAAS,EAAEhe,OAAO,CAACge,SAAR,CAAkBvhB,KAFlB;AAGXsf,wBAAU,EAAE,CAAF,KAAE/b,OAAO,CAAC+N,KAAR,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEtR,KAHhB;AAIX6e,qBAAO,EAAEtb,OAAO,CAACsb,OAJN;AAKX/vB,mBAAK,EAAEyU,OAAO,CAAC/J,WAAR,CAAoBtJ,UAApB,CAA+B,QAA/B,EAAyCmJ,iBAAzC,EALI;AAMX+gB,iBAAG,EAAE7W,OAAO,CAAC9J,SAAR,CAAkBvJ,UAAlB,CAA6B,QAA7B,EAAuCmJ,iBAAvC;AANM,aAAf;AAQAi0B,oBAAQ,CAAC72B,IAAT,CAAc,OAAI,CAAC42B,QAAL,CAAcxsB,EAAd,EAAkB,mBAAlB,EAAuC1K,MAAvC,CAAd;AACH,WAZD;AAaA,iBAAO,OAAAq3B,QAAA,CAASF,QAAT,CAAP;AACH;;;;MA9GgC,eAAA/hB,c;;AAHrC;;;uBAGawhB,e,EAAe,+B,EAAA,+B;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFZ;;;;;2BAEHA,e,EAAe;cAH3B,OAAAtrB,UAG2B;eAHhB;AACRoI,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAYa4jB,wB;;;;;AACT,wCAAsBroB,SAAtB,EACIoG,eADJ,EACoC;AAAA;;AAAA;;AAEhC,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAHkB,gBAAApG,SAAA,GAAAA,SAAA,CACc,CA4EpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEO,gBAAAsoB,aAAA,GAAgB,UAAC1rB,KAAD;AAAA,iBAAsD,QAAK2rB,eAAL,CAAqB3rB,KAArB,EAA4B;AAAE6F,eAAG,EAAE;AAAP,WAA5B,CAAtD;AAAA,SAAhB;;AA5FH,gCAAAwD,cAAA,CAAe2hB,UAAf,CAA0B,gBAAAna,OAA1B;AACA,gBAAKhH,KAAL,GAAa,UAAb;AACA,gBAAKC,UAAL,GAAkB,UAAlB;;AACA,gBAAKH,QAAL,GAAgB,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBAAU,CAAC,CAACD,CAAC,CAAC8J,EAAF,IAAQ,EAAT,EAAa5J,aAAb,CAA2BD,CAAC,CAAC6J,EAA7B,CAAD,IAAqC,CAAC,CAAC9J,CAAC,CAAC8nB,OAAF,IAAa,EAAd,EAAkB5nB,aAAlB,CAAgCD,CAAC,CAAC6nB,OAAlC,CAAhD;AAAA,SAAhB;;AANgC;AAOnC;AAED;;;;;;;;qCAIoB9N,O,EAChBkc,Q,EAAiB;AAAA;;AACjB,cAAI,CAAClc,OAAL,EAAc;AACV,kBAAM,IAAI/lB,KAAJ,CAAU,8CAAV,CAAN;AACH;;AAED,cAAMV,GAAG,+BAAwBymB,OAAO,CAAClQ,EAAR,GAAakQ,OAAO,CAAClQ,EAArB,GAA0B,EAAlD,cAAwDosB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAAA,QAAA,GAAY,EAApE,CAAT;;AACA,cAAI,CAAC,KAAKvhB,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACtB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnD,kBAAMwiB,OAAO,GAAG,SAAVA,OAAU,CAACU,QAAD,EAAmB;AAC/B,uBAAO,OAAI,CAACliB,SAAL,CAAephB,GAAf,CAAP;AACAmgB,uBAAO,CAACmjB,QAAD,CAAP;AACH,eAHD;;AAIA,kBAAMhhB,KAAK,GAAG,SAARA,KAAQ,CAAA3T,CAAC,EAAI;AACfyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAO,OAAI,CAACyS,SAAL,CAAephB,GAAf,CAAP;AACH,eAHD;;AAIA,kBAAM0X,KAAK,GAAG,oBAAAglB,qBAAA,CAAsBjW,OAAtB,CAAd;;AACA,kBAAIA,OAAO,CAAClQ,EAAZ,EAAgB;AACZ,uBAAI,CAACqf,IAAL,CAAUnP,OAAO,CAAClQ,EAAlB,EAAsBmB,KAAtB,EAA6B6I,IAA7B,CAAkC,UAAA5d,CAAC;AAAA,yBAAIigC,OAAO,CAAC,CAACjgC,CAAD,CAAD,CAAX;AAAA,iBAAnC,EAAqD2f,KAArD;AACH,eAFD,MAEO;AACH,uBAAI,CAAC5K,KAAL,CAAWA,KAAX,EAAkB6I,IAAlB,CAAuBqiB,OAAvB,EAAgCtgB,KAAhC;AACH;AACJ,aAfqB,CAAtB;AAgBH;;AAED,iBAAO,KAAKlB,SAAL,CAAephB,GAAf,CAAP;AACH;AAGD;;;;;;;6BAIYiZ,O,EAAgB;AACxB,iBAAOA,OAAO,CAAC1C,EAAR,GAAa,KAAK+J,MAAL,CAAYrH,OAAO,CAAC1C,EAApB,EAAwB0C,OAAO,CAACgH,MAAR,EAAxB,CAAb,GAAyD,KAAKtY,GAAL,CAASsR,OAAO,CAACgH,MAAR,EAAT,CAAhE;AACH;AAED;;;;;;;;gCAKe1J,E,EAAY1K,M,EAA8B;AACrD,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,SAAd,EAAyB1K,MAAzB,CAAP;AACH;;;+BAEa0K,E,EAAY1K,M,EAAkB;AACxC,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,QAAd,EAAwB1K,MAAxB,CAAP;AACH;;;gCAEc0K,E,EAAY1K,M,EAAkB;AACzC,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc,KAAK2K,eAAL,CAAqBQ,SAArB,GAAiC,mBAAjC,GAAuD,SAArE,EAAgF7V,MAAhF,CAAP;AACH;;;6BAEW0K,E,EAAY8R,M,EAA8Bxc,M,EAAkB;AACpE,iBAAO,KAAK8U,IAAL,CAAUpK,EAAV,EAAc8R,MAAd,EAAsBxc,MAAtB,CAAP;AACH;;;gCAEiB4T,Q,EAAiB;AAC/B,iBAAO,IAAI,gBAAA8I,OAAJ,CAAY9I,QAAZ,CAAP;AACH;;;;MA5EyC,oBAAA8jB,mB;;AAH9C;;;uBAGaJ,wB,EAAwB,+B,EAAA,+B;AAAA,K;;;aAAxBA,wB;AAAwB,eAAxBA,wBAAwB,K;AAAA,kBAFrB;;;;;2BAEHA,wB,EAAwB;cAHpC,OAAAhsB,UAGoC;eAHzB;AACRoI,oBAAU,EAAE;AADJ,S;AAGyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBrC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;;AAQA;AAAA;AAAA;AAEA;;;;;;AAIA,aAAgB+H,aAAhB,CAA8Bb,OAA9B,EAAuD;AACnD,UAAI,CAACA,OAAL,EAAc;AACV,cAAM/lB,KAAK,CAAC,8CAAD,CAAX;AACH;;AACD,UAAM8iC,oBAAoB,GAAe;AACrChb,oBAAY,EAAE,IADuB;AAErCd,YAAI,EAAE,IAF+B;AAGrCF,cAAM,EAAE;AAH6B,OAAzC;AAKA,UAAI/c,KAAK,GAAG,KAAZ;AACA;;AACA,UAAIgc,OAAO,CAACO,KAAZ,EAAmB;AAAA,qCACJzd,IADI;AAEX,cACIkd,OAAO,CAACY,KAAR,CAAcpnB,cAAd,CAA6BsJ,IAA7B,KACAkd,OAAO,CAACY,KAAR,CAAc9d,IAAd,aAA+B8H,KAD/B,IAEAoV,OAAO,CAACO,KAAR,CAAcI,KAAd,CAAoBtf,IAApB,CAAyB,UAAC2G,IAAD;AAAA,mBAAUA,IAAI,KAAKlF,IAAnB;AAAA,WAAzB,CAHJ,EAIE;AAAA,yDAC2Bkd,OAAO,CAACY,KAAR,CAAc9d,IAAd,CAD3B;AAAA;;AAAA;AACE,wEAA8C;AAAA,oBAAnCk6B,UAAmC;;AAC1C;AACA,oBACIC,UAAU,CAAC;AACPjnB,sBAAI,EAAEgK,OAAO,CAAChK,IADP;AAEPuK,uBAAK,EAAEP,OAAO,CAACO,KAFR;AAGPlZ,sBAAI,EAAE2Y,OAAO,CAAC3Y,IAHP;AAIPzI,0BAAQ,EAAEohB,OAAO,CAACphB,QAJX;AAKPgiB,uBAAK,EAAEoc,UAAU,CAACzC;AALX,iBAAD,CADd,EAQE;AACE,sBAAM2C,OAAO,GAAGF,UAAU,CAACpc,KAA3B;AACA,sBAAM2Z,UAAU,GAAGyC,UAAU,CAACzC,UAA9B;AACAwC,sCAAoB,CAAC9b,IAArB,GAA4B,KAA5B;AACA;;AACA,sBAAIsZ,UAAU,CAAC4C,UAAf,EAA2B;AACvBJ,wCAAoB,CAACI,UAArB,GAAkC,oBAAA3C,eAAA,CAC9BD,UAAU,CAAC4C,UADmB,CAAlC;AAGH;AACD;;;AACA,sBAAI5C,UAAU,CAACD,UAAf,EAA2B;AACvByC,wCAAoB,CAACzC,UAArB,GAAkC,oBAAAE,eAAA,CAC9BD,UAAU,CAACD,UADmB,CAAlC;AAGH,mBAfH,CAgBE;AACA;AACA;AACA;;AACA;;;AACA,sBAAI4C,OAAO,CAACnb,YAAR,KAAyBjiB,SAA7B,EAAwC;AACpCi9B,wCAAoB,CAAChb,YAArB,GAAoCmb,OAAO,CAACnb,YAA5C;AACH;;AACD/d,uBAAK,GAAG,IAAR;AACA+4B,sCAAoB,CAAChc,MAArB,GAA8B,EAA9B;AACA;AACH,iBAnCD,MAoCK;AACDgc,sCAAoB,CAAChc,MAArB,GAA8B,aAA9B;AACH;AACJ;AA1CH;AAAA;AAAA;AAAA;AAAA;AA2CD;AAED;;;AACA,cAAI,CAACgc,oBAAoB,CAAC9b,IAA1B,EAAgC;AAC5B;AACH;AAtDU;;AACf,aAAK,IAAMne,IAAX,IAAmBkd,OAAO,CAACY,KAA3B,EAAkC;AAAA,4BAAvB9d,IAAuB;;AAAA,gCAoD1B;AAEP;AACJ;;AACD,UAAI,CAACkB,KAAL,EAAY;AACR+4B,4BAAoB,CAAC9b,IAArB,GAA4B,IAA5B;AACH;;AACD,aAAO8b,oBAAP;AACH;;AAxED;AA2EA;;;;;AAIA,aAASE,UAAT,CAAoBjd,OAApB,EAA8C;AAC1C;AACA,UAAIA,OAAO,CAACY,KAAZ,EAAmB;AACf,YAAMvZ,IAAI,GAAG,IAAI,UAAA0H,MAAJ,CAAW;AAAClR,cAAI,EAAEmiB,OAAO,CAAC3Y;AAAf,SAAX,CAAb;AACA,YAAMzB,KAAK,GAAGiF,MAAM,CAACpH,IAAP,CAAYuc,OAAO,CAACY,KAApB,EAA2B7gB,MAAzC;AACA,YAAI8G,OAAO,GAAG,CAAd;AACAgE,cAAM,CAACpH,IAAP,CAAYuc,OAAO,CAACY,KAApB,EAA2B3kB,OAA3B,CAAmC,UAAC1C,GAAD,EAAS;AACxC,cAAI6jC,OAAO,GAAG,CAAd;AACA,cAAMC,SAAS,GACXrd,OAAO,CAACY,KAAR,CAAcrnB,GAAd,aAA8BqR,KAA9B,GACOoV,OAAO,CAACY,KAAR,CAAcrnB,GAAd,CADP,GAEM,CAACymB,OAAO,CAACY,KAAR,CAAcrnB,GAAd,CAAD,CAHV;;AAIA,kBAAQA,GAAR;AACI,iBAAK,QAAL;AACI;AACA,kBAAIymB,OAAO,CAAChK,IAAR,IAAgBgK,OAAO,CAAChK,IAAR,CAAasnB,MAAjC,EAAyC;AACrCF,uBAAO,GAAG,CAAV;AACAC,yBAAS,CAACphC,OAAV,CAAkB,UAACC,CAAD;AAAA,yBACd8jB,OAAO,CAAChK,IAAR,CAAasnB,MAAb,CAAoBj8B,IAApB,CAAyB,UAACk8B,CAAD;AAAA,2BAAOA,CAAC,KAAKrhC,CAAb;AAAA,mBAAzB,IAA2CkhC,OAAO,EAAlD,GAAuD,IADzC;AAAA,iBAAlB;AAGA;;AACA,oBAAIA,OAAO,GAAG,CAAd,EAAiB;AACbv2B,yBAAO;AACV;AACJ;;AACD;;AACJ,iBAAK,WAAL;AACI;AACA,kBAAImZ,OAAO,CAAChK,IAAR,IAAgBgK,OAAO,CAAChK,IAAR,CAAaS,QAAjC,EAA2C;AACvC2mB,uBAAO,GAAG,CAAV;AACAC,yBAAS,CAACphC,OAAV,CAAkB,UAACC,CAAD;AAAA,yBACd,CAAC8jB,OAAO,CAAChK,IAAR,CAAawnB,aAAb,CAA2B5jC,IAA3B,IAAmC,EAApC,EAAwCqH,OAAxC,CAAgD/E,CAAhD,KAAsD,CAAtD,GACMkhC,OAAO,EADb,GAEM,IAHQ;AAAA,iBAAlB;AAKA;;AACA,oBAAIA,OAAO,IAAIpd,OAAO,CAACY,KAAR,CAAcrnB,GAAd,EAAmBwG,MAAlC,EAA0C;AACtC8G,yBAAO;AACV;AACJ;;AACD;;AACJ,iBAAK,WAAL;AACI;AACA,kBAAImZ,OAAO,CAAC3Y,IAAZ,EAAkB;AACd,oBAAMzI,QAAQ,GAAG,oBAAA47B,eAAA,CAAgB6C,SAAS,CAAC,CAAD,CAAzB,CAAjB;AACA,oBAAMI,KAAK,GAAG,UAAAn2B,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBiB,QAApB,CAA6B;AAAEJ,yBAAO,EAAEM;AAAX,iBAA7B,CAAd;AACA,oBAAIoF,KAAK,GAAGqD,IAAI,CAAC0tB,YAAL,CAAkB0I,KAAlB,CAAZ;AACA;;AACA52B,uBAAO,IAAI7C,KAAK,GAAG,CAAH,GAAO,CAAvB;AACH;;AACD;;AACJ,iBAAK,UAAL;AACI;AACA,kBAAIgc,OAAO,CAAC3Y,IAAZ,EAAkB;AAEd,oBAAMzI,SAAQ,GAAG,oBAAA47B,eAAA,CAAgB6C,SAAS,CAAC,CAAD,CAAzB,CAAjB;;AACA,oBAAMI,MAAK,GAAG,UAAAn2B,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAd;;AACA4J,oBAAI,CAAC2tB,WAAL,CAAiByI,MAAK,CAAC/+B,QAAN,CAAe;AAAEJ,yBAAO,EAAEM;AAAX,iBAAf,CAAjB,IAA0DiI,OAAO,EAAjE,GAAsE,EAAtE;AACH;;AACD;;AACJ,iBAAK,YAAL;AACI;AACA,kBACImZ,OAAO,CAACphB,QAAR,IACA,oBAAA67B,0BAAA,CAA2Bza,OAAO,CAACphB,QAAnC,EAA6Cy+B,SAAS,CAAC,CAAD,CAAtD,CAFJ,EAGE;AACEx2B,uBAAO;AACV;;AACD;;AACJ,iBAAK,YAAL;AACI;AACA,kBACImZ,OAAO,CAACphB,QAAR,IACA,oBAAA67B,0BAAA,CAA2B4C,SAAS,CAAC,CAAD,CAApC,EAAyCrd,OAAO,CAACphB,QAAjD,CAFJ,EAGE;AACEiI,uBAAO;AACV;;AACD;AAjER;AAmEH,SAzED;AA0EA,eAAOA,OAAO,IAAIjB,KAAlB;AACH;;AACD,aAAO,KAAP;AACH;;;;;;;;;;;;;;;;;;;;;ACjLD;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAKa83B,yB;;;;;AAET,yCAAsBrpB,SAAtB,EACYoG,eADZ,EAC8C;AAAA;;AAAA;;AAC1C,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAFkB,gBAAApG,SAAA,GAAAA,SAAA;AAGlB,gCAAAiG,cAAA,CAAe2hB,UAAf,CAA0B,0BAAA0B,gBAA1B;AACA,gBAAK7iB,KAAL,GAAa,yBAAb;AACA,gBAAKC,UAAL,GAAkB,mBAAlB;AAJ0C;AAK7C;;;;gCAEW;AACR,gBAAM9gB,KAAK,CAAC,uEAAD,CAAX;AACH;;;+BAEU;AACP,gBAAMA,KAAK,CAAC,sEAAD,CAAX;AACH;;;oCAEkBkjB,Q,EAAe;AAC9B,iBAAO,IAAI,0BAAAwgB,gBAAJ,CAAqBxgB,QAArB,CAAP;AACH;;;+BAEa5W,I,EAAwB;AAClC,iBAAO,MAAP,OAAO,CAAP,EAAO,EAAKA,IAAL,CAAP;AACH;;;;MAxB0C,eAAAiU,c;;AAH/C;;;uBAGakjB,yB,EAAyB,+B,EAAA,+B;AAAA,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB,K;AAAA,kBAFtB;;;;;2BAEHA,yB,EAAyB;cAHrC,OAAAhtB,UAGqC;eAH1B;AACRoI,oBAAU,EAAE;AADJ,S;AAG0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXtC;AAAA;AAAA;;QAGa6kB,gB;;;;;AAKT,gCAAY3a,IAAZ,EAA2B;AAAA;;AAAA;;AACvB,sCAAMA,IAAN;AALJ;;AACO,gBAAA4a,WAAA,GAAc,IAAd;AAKH,gBAAKA,WAAL,GAAmB,IAAnB;AACC,gBAAaC,WAAb,GAA2B,QAAKA,WAAL,IAAoB,CAA/C;AACA,gBAAaC,aAAb,GAA6B,CAAC,CAAC9a,IAAI,CAAC8a,aAAP,IAAwB,kBAArD;AAJsB;AAK1B;AAED;;;;;;;iCAGa;AACT,cAAM3jB,GAAG,+EAAT;;AACAA,aAAG,CAAC2jB,aAAJ,GAAoB,CAAC,CAAC3jB,GAAG,CAAC2jB,aAAN,IAAuB3jB,GAAG,WAA9C;AACA,iBAAOA,GAAP;AACH;;;;MAnBiC,sBAAA4jB,Y;;AAAtC;;;;;;;;;;;;;;;;;;;;QCMaA,Y;AA0ET,4BAAY/a,IAAZ,EAA2B;AAAA;;;AAlC3B;;;AACQ,aAAAgb,OAAA,GAAU,CAAV;AAGR;;AACO,aAAAJ,WAAA,GAAuB,KAAvB;AA8BH,aAAKK,WAAL,kBAA2B9/B,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,KAAgB,SAA3B,CAA3B;AACA,aAAKoI,EAAL,GAAUkT,IAAI,CAAClT,EAAL,IAAW,EAArB;AACA,aAAKlW,IAAL,GAAYopB,IAAI,CAACppB,IAAL,IAAa,EAAzB;AACA,aAAKgkC,WAAL,GAAmB,KAAK9tB,EAAL,CAAQoH,QAAR,CAAiB,WAAjB,CAAnB;AACA,aAAK2S,SAAL,GAAiB;AACbqU,oBAAU,EAAE,CAAClb,IAAI,CAAC6G,SAAL,GAAiB7G,IAAI,CAAC6G,SAAL,CAAeqU,UAAhC,GAA6Clb,IAAI,CAAC8J,cAAnD,KAAsE,CAAC,CADtE;AAEbqR,kBAAQ,EAAE,CAACnb,IAAI,CAAC6G,SAAL,GAAiB7G,IAAI,CAAC6G,SAAL,CAAesU,QAAhC,GAA2Cnb,IAAI,CAAC+J,YAAjD,KAAkE,CAAC;AAFhE,SAAjB;AAIA,aAAKqR,WAAL,GAAmBpb,IAAI,CAACob,WAAL,IAAoB,EAAvC;AACA,aAAKC,YAAL,GAAoBrb,IAAI,CAACqb,YAAL,IAAqBrb,IAAI,CAACsb,MAA9C;AACA,aAAKC,UAAL,GAAkBvb,IAAI,CAACub,UAAL,IAAmBvb,IAAI,CAACwb,KAAxB,IAAiC,CAAnD;AACA,aAAKC,aAAL,GAAqBzb,IAAI,CAACyb,aAA1B;AACA,aAAKC,gBAAL,GAAwBvgC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY0hB,IAAI,CAAC0b,gBAAL,IAAyB,CAArC,CAAxB;AACA,aAAKC,gBAAL,GAAwBxgC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY0hB,IAAI,CAAC2b,gBAAL,IAAyB,GAArC,CAAxB;AACA,aAAKC,iBAAL,GAAyB5b,IAAI,CAAC6b,YAAL,IAAqB7b,IAAI,CAAC4b,iBAA1B,IAA+C5b,IAAI,CAAC8b,UAA7E;AACA,aAAKhB,aAAL,GAAqB,CAAC,CAAC9a,IAAI,CAAC8a,aAA5B;AACA,aAAKiB,UAAL,GAAkB/b,IAAI,CAAC+b,UAAL,IAAmB,EAArC;AACA,aAAKC,UAAL,GAAkBhc,IAAI,CAACgc,UAAvB;AACA,aAAKC,aAAL,GAAqBjc,IAAI,CAACic,aAA1B;AACA,aAAKpB,WAAL,GAAmB,CAAH,KAAG7a,IAAI,CAAC6a,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,EAAhB,GAAoB,CAAvC;AACA,aAAKG,OAAL,GAAehb,IAAI,CAACgb,OAAL,IAAgBhb,IAAI,CAACkc,MAArB,IAA+B,CAA9C;AACA,aAAKC,OAAL,GAAenc,IAAI,CAACmc,OAAL,IAAgB,EAA/B;AACA,YAAMC,aAAa,GAAmB,CAACpc,IAAI,CAACnnB,KAAL,IAAc,EAAf,EAAmB6H,GAAnB,CAAuB,UAAA6C,IAAI;AAAA,iBAAI,IAAIw3B,YAAJ,CAAiBx3B,IAAjB,CAAJ;AAAA,SAA3B,CAAtC;AACA,aAAK1K,KAAL,GAAaujC,aAAb;AACA,YAAMC,qBAAqB,GAAGD,aAAa,CAAC36B,MAAd,CAAqB,UAAAkI,CAAC;AAAA,iBAAI,CAACA,CAAC,CAAC2yB,YAAP;AAAA,SAAtB,CAA9B;AACA,aAAKC,cAAL,GAAsBF,qBAAtB;AACA,aAAKC,YAAL,GAAoB,CAAC,CAACtc,IAAI,CAACsc,YAAP,IAChB;AACCF,qBAAa,CAACr/B,MAAd,GAAuB,CAAvB,IAA4Bs/B,qBAAqB,CAACt/B,MAAtB,KAAiC,CAFlE;AAGA,0BAAeijB,IAAI,WAAJ,KAAiB,MAAjB,IAA2BA,IAAI,WAAJ,KAAiB,IAA3D;AACA,aAAKrC,KAAL,GAAaqC,IAAI,CAACrC,KAAL,IAAcqC,IAAI,CAACrC,KAAL,CAAW5gB,MAAzB,sBAAsCijB,IAAI,CAACrC,KAA3C,IAAoD,EAAjE;AACH;;;;oCAEkC;AAAA,cAAlBue,MAAkB,uEAAD,CAAC;;AAC/B,cAAIA,MAAM,IAAI,KAAKlB,OAAnB,EAA4B;AACxB,gBAAIkB,MAAM,GAAG,KAAKR,gBAAlB,EAAoC;AAChCQ,oBAAM,GAAG,CAAT;AACH;AACJ,WAJD,MAIO;AACH,gBAAIA,MAAM,GAAG,KAAKR,gBAAlB,EAAoC;AAChCQ,oBAAM,GAAG,KAAKR,gBAAd;AACH;AACJ;;AACD,eAAKV,OAAL,GAAe7/B,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAYnD,IAAI,CAACi8B,GAAL,CAAS,KAAKuE,gBAAd,EAAgCO,MAAhC,CAAZ,CAAf;AACH;AAED;;;;;;;mCAIiC;AAAA,cAAjBV,KAAiB,uEAAD,CAAC;AAC7B,cAAG,KAAKD,UAAL,KAAoBC,KAAvB,EAA8B,KAAKD,UAAL,GAAkBC,KAAlB;AACjC;AAED;;;;;;;qCAIsC;AAAA,cAApBU,MAAoB,uEAAH,CAAG;AAClCA,gBAAM,GAAG/gC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY49B,MAAZ,CAAT;AACA,eAAKlB,OAAL,IAAgBkB,MAAhB;;AACA,cAAI,KAAKlB,OAAL,GAAe,CAAnB,EAAsB;AAClB,iBAAKA,OAAL,GAAe,CAAf;AACH,WAFD,MAEO,IAAI,KAAKA,OAAL,GAAe,KAAKU,gBAAxB,EAA0C;AAC7C,iBAAKV,OAAL,GAAe,KAAKU,gBAApB;AACH,WAFM,MAEA,IAAI,KAAKV,OAAL,GAAe,KAAKW,gBAAxB,EAA0C;AAC7C,iBAAKX,OAAL,GAAe,KAAKW,gBAApB;AACH;AACJ;AAED;;;;;;;0CAI2C;AAAA,cAApBO,MAAoB,uEAAH,CAAG;AACvCA,gBAAM,GAAG/gC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY49B,MAAZ,CAAT;AACA,eAAKlB,OAAL,IAAgBkB,MAAhB;;AACA,cAAI,KAAKlB,OAAL,GAAe,CAAnB,EAAsB;AAClB,iBAAKA,OAAL,GAAe,CAAf;AACH,WAFD,MAEO,IAAI,KAAKA,OAAL,GAAe,KAAKU,gBAAxB,EAA0C;AAC7C,iBAAKV,OAAL,GAAe,CAAf;AACH;AACJ;AAED;;;;;;iCAGa;AACT,cAAM7jB,GAAG,qBAAa,IAAb,CAAT,CADS,CAET;;AACA,iBAAOA,GAAG,CAACC,QAAX;AACA,iBAAOD,GAAG,CAACf,aAAX,CAJS,CAKT;;AACAe,aAAG,CAACqkB,KAAJ,GAAYrkB,GAAG,CAACokB,UAAhB;AACApkB,aAAG,CAAC2kB,UAAJ,GAAiB3kB,GAAG,CAACykB,iBAArB;AACA,cAAMn7B,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAY0W,GAAZ,CAAb;;AACA,qCAAkB1W,IAAlB,8BAAwB;AAAnB,gBAAMlK,GAAG,cAAT;;AACD,gBAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAChB,kBAAM8gB,OAAO,GAAG9gB,GAAG,CAACimC,MAAJ,CAAW,CAAX,CAAhB;AACArlB,iBAAG,CAACE,OAAD,CAAH,GAAeF,GAAG,CAAC5gB,GAAD,CAAlB;AACA,qBAAO4gB,GAAG,CAAC5gB,GAAD,CAAV;AACH,aAJD,MAIO,IAAI4gB,GAAG,CAAC5gB,GAAD,CAAH,KAAauG,SAAjB,EAA4B;AAC/B,qBAAOqa,GAAG,CAAC5gB,GAAD,CAAV;AACH;AACJ;;AACD4gB,aAAG,CAACte,KAAJ,GAAYse,GAAG,CAACte,KAAJ,CAAU6H,GAAV,CAAc,UAAC6C,IAAD;AAAA,mBAAwBA,IAAI,CAACiT,MAAL,EAAxB;AAAA,WAAd,CAAZ;AACA,iBAAOW,GAAP;AACH;;;4BArI2B;AACxB,iBACI,KAAK2jB,aAAL,IACA,CAAC,eAAD,IAAiB,KAAKjiC,KAAL,CAAW2F,MAAX,CACb,UAACi+B,OAAD,EAAUl5B,IAAV;AAAA,mBAAmBk5B,OAAO,IAAIl5B,IAAI,CAACm5B,iBAAnC;AAAA,WADa,EAEb,KAFa,CAFrB;AAOH;AAED;;;;4BACiB;AACb,iBAAO,KAAK1B,OAAL,IAAgB,CAAvB;AACH;AAEA;;;;4BACgB;AACb,iBAAO,KAAKO,UAAL,IAAmB,CAA1B;AACH;AAED;;;;4BACgB;AACZ,iBAAQ,KAAKP,OAAL,GAAe,KAAKO,UAArB,IAAoC,CAA3C;AACH;;;;;;AAxEL;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAKaoB,oB;;;;;AACT,oCAAsBtrB,SAAtB,EACYoG,eADZ,EAC8C;AAAA;;AAAA;;AAC1C,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAFkB,gBAAApG,SAAA,GAAAA,SAAA;AAGlB,gCAAAiG,cAAA,CAAe2hB,UAAf,CAA0B,sBAAA8B,YAA1B;AACA,gBAAKjjB,KAAL,GAAa,eAAb;AACA,gBAAKC,UAAL,GAAkB,eAAlB;AAJ0C;AAK7C;;;;gCAEW;AACR,gBAAM9gB,KAAK,CAAC,yDAAD,CAAX;AACH;;;+BAEU;AACP,gBAAMA,KAAK,CAAC,wDAAD,CAAX;AACH;;;oCAEkBkjB,Q,EAAe;AAC9B,iBAAO,IAAI,sBAAA4gB,YAAJ,CAAiB5gB,QAAjB,CAAP;AACH;;;+BAEa5W,I,EAAoB;AAC9B,iBAAOA,IAAI,YAAY,sBAAAw3B,YAAhB,GAA+Bx3B,IAAI,CAACiT,MAAL,EAA/B,GAA+CjT,IAAtD;AACH;;;;MAvBqC,eAAAiU,c;;AAH1C;;;uBAGamlB,oB,EAAoB,+B,EAAA,+B;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFjB;;;;;2BAEHA,oB,EAAoB;cAHhC,OAAAjvB,UAGgC;eAHrB;AACRoI,oBAAU,EAAE;AADJ,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXjC;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;QAKa8mB,mB;;;;;AACT,mCAAsBvrB,SAAtB,EACYoG,eADZ,EAC8C;AAAA;;AAAA;;AAC1C,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAFkB,gBAAApG,SAAA,GAAAA,SAAA;AAGlB,gBAAKyG,KAAL,GAAa,eAAb;AACA,gBAAKC,UAAL,GAAkB,MAAlB;AAH0C;AAI7C;AAED;;;;;;;;oCAIsBxU,I,EAAe;AACjC,iBAAOA,IAAI,CAAC1K,KAAL,GAAa,IAAI,0BAAA8hC,gBAAJ,CAAqBp3B,IAArB,CAAb,GAA0C,IAAI,sBAAAw3B,YAAJ,CAAiBx3B,IAAjB,CAAjD;AACH;;;;MAdoC,eAAAiU,c;;AAHzC;;;uBAGaolB,mB,EAAmB,+B,EAAA,+B;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFhB;;;;;2BAEHA,mB,EAAmB;cAH/B,OAAAlvB,UAG+B;eAHpB;AACRoI,oBAAU,EAAE;AADJ,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXhC;AAAA;AAAA;;;;;;QAKa+mB,oB;AAHb;AAAA;;AAKW,aAAAC,aAAA,GAAgB,EAAhB;AAUV;;;;iCAPmBnP,K,EAAO;AACnB,eAAKmP,aAAL,GAAqBnP,KAArB;AACH;;;mCAEiB;AACd,iBAAO,KAAKmP,aAAZ;AACH;;;;;;AAdL;;;uBAGaD,oB;AAAoB,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFjB;;;;;2BAEHA,oB,EAAoB;cAHhC,OAAAnvB,UAGgC;eAHrB;AACRoI,oBAAU,EAAE;AADJ,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACNjC;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAaA,QAAMwK,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ,C,CAEA;;QACau0B,a;AA8EX,6BAAYhP,IAAZ,EAA2B;AAAA;;;AAzD3B;;;AACA,aAAAqS,WAAA,GAAsB,EAAtB;AACA;;AACA,aAAA5e,QAAA,GAAmB,EAAnB;AAMA;;;;;;;;;;AASO,aAAAjE,OAAA,GAAmB,IAAnB;AAaP;;AACS,aAAAgiB,aAAA,GAAwB,CAAxB;AAOT;;AACS,aAAA34B,KAAA,GAAsD,EAAtD,CAiBkB,CAV3B;AACA;;AACA;;AACU,aAAAud,aAAA,GAAiC,EAAjC;AAQR;;;;AAGA,YAAMqW,KAAK,GAAG,UAAAnoB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAd,CAJyB,CAKzB;;AACA,YAAM6zB,cAAc,GAAG7B,KAAK,CAAChxB,QAAN,CAAe;AAAEP,gBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUqxB,KAAK,CAACnxB,OAAN,GAAgB,CAA1B,IAA+B;AAAzC,SAAf,CAAvB;AACA,YAAMqxB,oBAAoB,GAAG,CAAH,WAAGC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,cAAN,EAAH,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAIC,eAAJ,EAApB,MAAuC,IAAvC,IAAuC,aAAvC,GAAuC,MAAvC,GAAuC,GAAIC,QAAxE;AAEA,aAAKjgB,EAAL,GAAUkT,IAAI,CAAClT,EAAL,oBAAoB3R,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,KAAgB,SAA3B,CAApB,CAAV,CATyB,CAWzB;;AACA,aAAK8K,OAAL,GAAewQ,IAAI,CAACxQ,OAAL,IAAgB,IAA/B,CAZyB,CAezB;;AACA,YAAI,KAAKutB,kBAAT,EAA6B;AAC3B,eAAKjU,YAAL,GAAoB,KAAKtZ,OAAL,CAAa/J,WAAb,CAAyBjB,EAA7C;AACA,eAAK8tB,gBAAL,GAAwB,KAAK9iB,OAAL,CAAa/P,QAArC;AACA,eAAKu9B,aAAL,GAAqB,KAAKxtB,OAAL,CAAa/J,WAAlC;AACA,eAAK4sB,WAAL,GAAmBrS,IAAI,CAACqS,WAAL,IAAoB,EAAvC;AACA,eAAK5e,QAAL,GAAgBuM,IAAI,CAACvM,QAAL,IAAiB,EAAjC;AACD,SAND,MAMO;AACL,eAAKqV,YAAL,GAAoB9I,IAAI,CAAC8I,YAAL,IAAqBwF,cAAc,CAAC9pB,EAAxD;AACA,eAAK8tB,gBAAL,GAAwBtS,IAAI,CAACsS,gBAAL,IAAyB3F,oBAAjD;AACA,eAAKqQ,aAAL,GAAqB,IAAI,UAAAjxB,MAAJ,CAAW;AAAElR,gBAAI,EAAE,KAAKiuB,YAAb;AAA2BnI,uBAAW,EAAE,KAAxC;AAA+CC,uBAAW,EAAE,KAAK0R;AAAjE,WAAX,CAArB;AACA,eAAKD,WAAL,GAAmBrS,IAAI,CAACqS,WAAL,IAAoB,EAAvC;AACA,eAAK5e,QAAL,GAAgBuM,IAAI,CAACvM,QAAL,IAAiB,EAAjC;AACD;;AAED,aAAK+d,aAAL,GAAqB,OAAOxR,IAAI,CAACwR,aAAZ,KAA8B,QAA9B,GAAyCxR,IAAI,CAACwR,aAA9C,GAA8D,CAAnF;AACA,aAAK5S,MAAL,GAAcoB,IAAI,CAACpB,MAAL,IAAe,UAA7B;AACA,aAAKqe,WAAL,GAAmBjd,IAAI,CAACid,WAAL,IAAoBjd,IAAI,CAACiD,IAA5C;AACA,aAAK0K,KAAL,GAAa3N,IAAI,CAAC2N,KAAlB;AACA,aAAKuP,OAAL,GAAeld,IAAI,CAACkd,OAAL,YAAwBt1B,KAAxB,GAAgC,CAAC,CAACoY,IAAI,CAACkd,OAAL,CAAangC,MAA/C,GAAwDijB,IAAI,CAACkd,OAA5E;AACA,aAAKC,MAAL,GAAcnd,IAAI,CAACmd,MAAL,YAAuBv1B,KAAvB,GAA+B,CAAC,CAACoY,IAAI,CAACmd,MAAL,CAAYpgC,MAA7C,GAAsDijB,IAAI,CAACmd,MAAzE;AACA,aAAKC,MAAL,GAAcpd,IAAI,CAACod,MAAL,IAAe,KAA7B;AACA,aAAKvkC,KAAL,GAAa,CAACmnB,IAAI,CAACnnB,KAAL,IAAc,EAAf,EACV6H,GADU,CACN,UAAA6C,IAAI;AAAA,iBAAKA,IAAI,CAAC1K,KAAL,GAAa,IAAI,0BAAA8hC,gBAAJ,CAAqBp3B,IAArB,CAAb,GAA0C,IAAI,sBAAAw3B,YAAJ,CAAiBx3B,IAAjB,CAA/C;AAAA,SADE,EAEV9B,MAFU,CAEH,UAAA8B,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAI,CAAC24B,MAAX;AAAA,SAFD,CAAb;AAGD;AAED;;;;;;AAgDA;;;gCAGY;AACR,iBAAO,IAAIlN,aAAJ,CAAkB,KAAKxY,MAAL,EAAlB,CAAP;AACH;AAED;;;;;;iCAGa;AACX,cAAMW,GAAG,qBAAa,IAAb,CAAT,CADW,CAEX;;AACA,iBAAOA,GAAG,CAACf,aAAX,CAHW,CAIX;;AACA,iBAAOe,GAAG,CAAC3H,OAAX;AACA,iBAAO2H,GAAG,CAAC9D,OAAX;AACA,iBAAO8D,GAAG,CAAC6lB,aAAX,CAPW,CASX;;AACA,cAAMv8B,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAY0W,GAAZ,CAAb;;AACA,qCAAkB1W,IAAlB,8BAAwB;AAAnB,gBAAMlK,GAAG,cAAT;;AACH,gBAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,kBAAM8gB,OAAO,GAAG,KAAKjB,aAAL,CAAmB7f,GAAG,CAACimC,MAAJ,CAAW,CAAX,CAAnB,KAAqCjmC,GAAG,CAACimC,MAAJ,CAAW,CAAX,CAArD;AACArlB,iBAAG,CAACE,OAAD,CAAH,GAAeF,GAAG,CAAC5gB,GAAD,CAAlB;AACA,qBAAO4gB,GAAG,CAAC5gB,GAAD,CAAV;AACD,aAJD,MAIO,IAAI4gB,GAAG,CAAC5gB,GAAD,CAAH,KAAauG,SAAjB,EAA4B;AACjC,qBAAOqa,GAAG,CAAC5gB,GAAD,CAAV;AACD;AACF;;AACD4gB,aAAG,CAACte,KAAJ,GAAYse,GAAG,CAACte,KAAJ,CAAU6H,GAAV,CAAc,UAAC6C,IAAD;AAAA,mBAAwBA,IAAI,CAACiT,MAAL,EAAxB;AAAA,WAAd,CAAZ;AAEA,iBAAOW,GAAP;AACD;;;4BAhF4B;AAC3B,iBAAO,CAAC,CAAC,KAAK3H,OAAd;AACD;AAED;;;;4BACe;AACb,cAAI1P,IAAI,GAAG,EAAX;AACA;;AACA,cAAI,KAAKo9B,OAAT,EAAkBp9B,IAAI,IAAI,SAAR;AAClB;;AACA,cAAI,KAAKq9B,MAAT,EAAiB;AACf;AACA,gBAAIr9B,IAAJ,EAAUA,IAAI,IAAI,KAAR;AACVA,gBAAI,IAAI,QAAR;AACD;;AACD,iBAAOA,IAAP;AACD;AAED;;;;4BACgB;AACd,iBAAO,KAAKjH,KAAL,CAAW2F,MAAX,CAAkB,UAAC6+B,KAAD,EAAQ95B,IAAR;AAAA,mBAAiB85B,KAAK,IAAI95B,IAAI,CAAC85B,KAAL,IAAc,CAAlB,CAAtB;AAAA,WAAlB,EAA8D,CAA9D,CAAP;AACD;AAED;;;;4BACqB;AACnB,iBAAO,KAAKxkC,KAAL,CAAW2F,MAAX,CAAkB,UAAC6+B,KAAD,EAAQ95B,IAAR;AAAA,mBAAiB85B,KAAK,IAAI95B,IAAI,CAAC24B,MAAL,IAAe,CAAnB,CAAtB;AAAA,WAAlB,EAA+D,CAA/D,CAAP;AACD;;;4BAEsB;;;AACrB,iBAAO,CAAC,KAAKc,aAAL,KAAkB,MAAI,KAAKxtB,OAAT,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE/J,WAApC,CAAD,EAAkD/J,QAAlD,CAA2D;AAAEJ,mBAAO,EAAE,KAAKk2B;AAAhB,WAA3D,CAAP;AACD;AAED;;;;4BACqB;AACnB,iBAAO,KAAK8L,YAAL,CAAkBnhC,UAAlB,CAA6B,QAA7B,CAAP;AACD;AAED;;;;4BAC0B;AACxB,iBAAO,KAAKmhC,YAAL,CAAkBnhC,UAAlB,CAA6B,OAA7B,EAAsCmJ,iBAAtC,EAAP;AACD;AAED;;;;4BAC0B;AACxB,iBAAO,KAAKg4B,YAAL,CAAkBnhC,UAAlB,CAA6B,aAA7B,CAAP;AACD;;;;;;AAtKH;;;;;;;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;;AAEa,YAAAohC,6BAAA,GAAgC,UAACC,QAAD,EAAyBC,QAAzB;AAAA,aACzC,IAAI,sBAAA1C,YAAJ,CAAiB,MAAD,OAAC,CAAD,kBACRyC,QAAQ,YAAY,sBAAAzC,YAApB,GAAmCyC,QAAQ,CAAChnB,MAAT,EAAnC,GAAuDgnB,QAD/C,CAAC,EAEVC,QAFU,CAAjB,CADyC;AAAA,KAAhC;;;;;;;;;;;;;;;;;;;;;;;;;ACFb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAKaC,gB;;;;AAHb;;YAGaA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAFlB,CAAC,SAAA5nC,YAAD,CAEkB;;;;+EAAhB4nC,gB,EAAgB;AAAA,kBAFjB,SAAA5nC,YAEiB;AAAA,O;AAFL,K;;;;;2BAEX4nC,gB,EAAgB;cAH5B,OAAA3nC,QAG4B;eAHnB;AACRC,iBAAO,EAAE,CAAC,SAAAF,YAAD;AADD,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;AAKA;;;AACA,QAAM6nC,uBAAuB,GAAa,CAAC,SAAD,EAAY,OAAZ,EAAqB,KAArB,EAA4B,MAA5B,EAAoC,IAApC,CAA1C;;QAKaC,c;AAcX,gCAAc;AAAA;;AAAA;;AAbd;AACQ,aAAAC,cAAA,GAAmD,EAAnD;AACR;;AACQ,aAAAC,iBAAA,GAAiD,EAAjD;AACR;;AACQ,aAAAC,SAAA,GAAsB,EAAtB;AACR;;AACQ,aAAAC,iBAAA,GAAgC,EAAhC;AACR;;AACQ,aAAA5D,OAAA,GAAkB,CAAlB;AAKNh6B,cAAM,CAAC69B,gBAAP,CAAwB,SAAxB,EAAmC,UAAC11B,KAAD,EAA0B;AAC3D,cAAM0a,IAAI,GAAG,OAAI,CAACib,MAAL,CAAY,CAAC31B,KAAK,CAAC0a,IAAN,IAAc,EAAf,EAAmB1gB,WAAnB,EAAZ,CAAb;AACA;;;AACA,cAAI,OAAI,CAAC47B,SAAL,KAAmBlb,IAAvB,EAA6B;AAC3B;AACA,gBAAI,CAAC,OAAI,CAAC4a,cAAL,CAAoB5a,IAApB,CAAL,EAAgC;AAC9B,qBAAI,CAAC4a,cAAL,CAAoB5a,IAApB,IAA4B,IAAI,OAAA3sB,eAAJ,CAAoB,IAApB,CAA5B;AACA,qBAAI,CAACwnC,iBAAL,CAAuB7a,IAAvB,IAA+B,OAAI,CAAC4a,cAAL,CAAoB5a,IAApB,EAA0BvQ,YAA1B,EAA/B;AACD;;AACD,mBAAI,CAACmrB,cAAL,CAAoB5a,IAApB,EAA0Bja,IAA1B,CAA+B,EAAE,OAAI,CAACoxB,OAAtC;AACA;;;AACA,gBAAI,OAAI,CAAC2D,SAAL,CAAe9/B,OAAf,CAAuBglB,IAAvB,KAAgC,CAApC,EAAuC;AACrC1a,mBAAK,CAAC61B,cAAN;AACD;;AACD,mBAAI,CAACD,SAAL,GAAiBlb,IAAjB;AACD;AACF,SAhBD;AAkBA7iB,cAAM,CAAC69B,gBAAP,CAAwB,OAAxB,EAAiC,UAAC11B,KAAD,EAA0B;AACzD,cAAM0a,IAAI,GAAG,OAAI,CAACib,MAAL,CAAY,CAAC31B,KAAK,CAAC0a,IAAN,IAAc,EAAf,EAAmB1gB,WAAnB,EAAZ,CAAb;AACA;;;AACA,cAAI,OAAI,CAACs7B,cAAL,CAAoB5a,IAApB,CAAJ,EAA+B;AAC7B,mBAAI,CAAC4a,cAAL,CAAoB5a,IAApB,EAA0Bja,IAA1B,CAA+B,IAA/B;AACD;AACD;;;AACA,cAAI,OAAI,CAACm1B,SAAL,KAAmBlb,IAAvB,EAA6B;AAC3B,mBAAI,CAACkb,SAAL,GAAiB,IAAjB;AACD;AACF,SAVD;AAWD;AAED;;;;;;;;;+BAKcE,K,EAA0Br1B,I,EAAgB;AAAA;;AACtDq1B,eAAK,GAAIA,KAAK,YAAYz2B,KAAjB,GAAyBy2B,KAAzB,GAAiCA,KAAK,CAACxhC,KAAN,CAAY,GAAZ,CAA1C;AACA,cAAMyhC,WAAW,GAAaD,KAAK,CAAC39B,GAAN,CAAU,UAAAxH,CAAC;AAAA,mBAAI,OAAI,CAACglC,MAAL,CAAYhlC,CAAC,CAACqJ,WAAF,EAAZ,CAAJ;AAAA,WAAX,CAA9B;AACA;;AACA,cAAI+7B,WAAW,CAACvhC,MAAZ,GAAqB,CAArB,IAA0B,KAAKwhC,gBAAL,CAAsBD,WAAtB,CAA9B,EAAkE;AAChE,iBAAKN,iBAAL,CAAuBt7B,IAAvB,CAA4B47B,WAA5B;AACA,gBAAME,QAAQ,GAAGF,WAAW,CAACA,WAAW,CAACvhC,MAAZ,GAAqB,CAAtB,CAA5B;AACA;;AACA,gBAAI,CAAC,KAAK8gC,cAAL,CAAoBW,QAApB,CAAL,EAAoC;AAClC,mBAAKX,cAAL,CAAoBW,QAApB,IAAgC,IAAI,OAAAloC,eAAJ,CAAoB,IAApB,CAAhC;AACA,mBAAKwnC,iBAAL,CAAuBU,QAAvB,IAAmC,KAAKX,cAAL,CAAoBW,QAApB,EAA8B9rB,YAA9B,EAAnC;AACD;;AACD,iBAAK+rB,wBAAL;AACA,mBAAO,KAAKX,iBAAL,CAAuBU,QAAvB,EAAiC1lC,SAAjC,CAA2C,UAAC8J,KAAD,EAAW;AAC3D;AACA,kBAAIA,KAAJ,EAAW;AACT,oBAAM87B,OAAO,GAAa,EAA1B;AACA;;AACA,oBAAIJ,WAAW,CAACvhC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B;AAD0B,+DAERuhC,WAFQ;AAAA;;AAAA;AAE1B,8EAA+B;AAAA,0BAApB/nC,GAAoB;AAC7B,0BAAMX,KAAK,GAAG,OAAI,CAACioC,cAAL,CAAoBtnC,GAApB,CAAd;AACAmoC,6BAAO,CAACh8B,IAAR,CAAa9M,KAAK,GAAGA,KAAK,CAACyB,QAAN,MAAoB,CAAC,CAAxB,GAA4B,CAAC,CAA/C;AACD,qBALyB,CAM1B;;AAN0B;AAAA;AAAA;AAAA;AAAA;;AAO1B,uBAAK,IAAI6B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGolC,WAAW,CAACvhC,MAAZ,GAAqB,CAAzC,EAA4C7D,GAAC,EAA7C,EAAiD;AAC/C,wBAAIwlC,OAAO,CAACxlC,GAAD,CAAP,GAAawlC,OAAO,CAACxlC,GAAC,GAAG,CAAL,CAAxB,EAAiC;AAC/B;AACD;AACF;AACF;;AACD,oBAAMmkC,KAAK,GAAGqB,OAAO,CAAClgC,MAAR,CAAe,UAACwE,CAAD,EAAIuE,CAAJ;AAAA,yBAAUvE,CAAC,IAAIuE,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAjB,CAAX;AAAA,iBAAf,EAA+C,CAA/C,CAAd;AACA;;AACA,oBAAI81B,KAAK,IAAIiB,WAAW,CAACvhC,MAAzB,EAAiC;AAC/BiM,sBAAI;AACL;AACF;AACF,aAxBM,CAAP;AAyBD;;AACD,iBAAO,IAAP;AACD;AAED;;;;;;;+BAIeia,I,EAAY;AACzB;AACA,cAAIA,IAAI,CAAChlB,OAAL,CAAa,KAAb,KAAuB,CAAvB,IAA4BglB,IAAI,CAAChlB,OAAL,CAAa,OAAb,KAAyB,CAArD,IAA0DglB,IAAI,CAAChlB,OAAL,CAAa,SAAb,KAA2B,CAAzF,EAA4F;AAC1F,mBAAOglB,IAAI,CAACnf,OAAL,CAAa,MAAb,EAAqB,EAArB,EAAyBA,OAAzB,CAAiC,OAAjC,EAA0C,EAA1C,CAAP;AACD;;AACD,iBAAOmf,IAAP;AACD;AAED;;;;;;mDAGgC;AAC9B,cAAM0b,QAAQ,GAAG,EAAjB;;AAD8B,uDAEV,KAAKX,iBAFK;AAAA;;AAAA;AAE9B,sEAA4C;AAAA,kBAAjCK,KAAiC;AAC1C,mBAAKN,SAAL,CAAer7B,IAAf,CAAoB27B,KAAK,CAACA,KAAK,CAACthC,MAAN,GAAe,CAAhB,CAAzB;AACD;AAJ6B;AAAA;AAAA;AAAA;AAAA;;AAK9B,eAAKghC,SAAL,GAAiB,OAAAx8B,MAAA,CAAOo9B,QAAP,CAAjB;AACD;AAED;;;;;;;yCAIyBN,K,EAAe;AACtC,cAAIO,QAAQ,GAAG,CAAf;;AADsC,uDAEpBP,KAFoB;AAAA;;AAAA;AAEtC,sEAAyB;AAAA,kBAAd9nC,GAAc;;AACvB;AACA,kBAAIonC,uBAAuB,CAAC1/B,OAAxB,CAAgC1H,GAAhC,IAAuC,CAA3C,EAA8C;AAC5CqoC,wBAAQ;AACT;AACF;AAPqC;AAAA;AAAA;AAAA;AAAA;;AAQtC,iBAAOA,QAAQ,GAAG,CAAlB;AACD;;;;;;AApIH;;;uBAGahB,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;2BAEDA,c,EAAc;cAH1B,OAAAlwB,UAG0B;eAHf;AACVoI,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB3B;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACCA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;QAEa+oB,W;AAyCX,2BAAY7oB,QAAZ,EAA+B;AAAA;;AAC7B,aAAKlJ,EAAL,GAAUkJ,QAAQ,CAAClJ,EAAT,IAAekJ,QAAQ,CAAC8oB,MAAxB,IAAkC9oB,QAAQ,CAAC+oB,OAArD;AACA,aAAKnoC,IAAL,GAAYof,QAAQ,CAACpf,IAAT,IAAiB,EAA7B;AACA,aAAKyB,CAAL,GAAS2d,QAAQ,CAAC3d,CAAT,GACL8C,IAAI,CAACY,KAAL,CAAW,KAAKijC,SAAL,CAAehpB,QAAQ,CAAC3d,CAAxB,EAA2B2d,QAAQ,CAACipB,KAAT,IAAkB,KAA7C,IAAsD,KAAjE,CADK,GAEL,IAFJ;AAGA,aAAK3mC,CAAL,GAAS0d,QAAQ,CAAC1d,CAAT,GACL6C,IAAI,CAACY,KAAL,CAAW,KAAKijC,SAAL,CAAehpB,QAAQ,CAAC1d,CAAxB,EAA2B0d,QAAQ,CAACipB,KAAT,IAAkB,KAA7C,IAAsD,KAAjE,CADK,GAEL,IAFJ;AAGA,YAAMrY,OAAO,GAAG,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B,qBAAA2nB,YAA1B,CAAhB;AACA,aAAK7a,KAAL,GACErO,QAAQ,CAACqO,KAAT,YAA0B,cAAA8a,aAA1B,GACInpB,QAAQ,CAACqO,KADb,GAEIuC,OAAO,GACPA,OAAO,CAACwY,WAAR,CAAoBppB,QAAQ,CAACqO,KAA7B,CADO,GAEP,IAAI,cAAA8a,aAAJ,CAAkBnpB,QAAQ,CAACqO,KAA3B,CALN;AAMA,aAAKgb,KAAL,GAAa,KAAKhnC,CAAL,KAAW,IAAX,IAAmB,KAAKC,CAAL,KAAW,IAA3C;AACA,aAAKgnC,UAAL,GAAkBnkC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAYnD,IAAI,CAACi8B,GAAL,CAAS,EAAT,EAAaphB,QAAQ,CAACspB,UAAT,IAAuB,CAApC,CAAZ,CAAlB;AACA,aAAKC,OAAL,GAAe,KAAKzyB,EAAL,IAAW,KAAKA,EAAL,CAAQ7O,OAAR,CAAgB,OAAhB,MAA6B,CAAvD;AACA,aAAKkQ,KAAL,GAAa,EAAE,KAAKvX,IAAL,IAAa,KAAKytB,KAAlB,KAA4B,KAAKvX,EAAL,IAAW,KAAKzU,CAAhB,IAAqB,KAAKC,CAAtD,CAAF,CAAb;AACD;AAzCD;;;;;;AA2CA;kCACkByF,K,EAAeO,G,EAAW;AAC1C,iBAAOP,KAAK,IAAIO,GAAG,GAAG,GAAV,CAAZ;AACD;;;4BA7CqB;AACpB,iBAAO,wBAAAgZ,cAAA,CAAeC,UAAf,CAA0BsnB,WAA1B,CAAP;AACD;AAED;;;;4BACkB;AAAA;;AAChB,cAAMjY,OAAO,GAAG,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B,qBAAA2nB,YAA1B,CAAhB;;AACA,cAAI,CAACtY,OAAL,EAAc;AACZ,mBAAO,KAAKvC,KAAL,CAAWztB,IAAlB;AACD;;AACD,cAAM4oC,GAAG,GAAG5Y,OAAO,CAACjX,SAAR,CAAkBtR,IAAlB,CAAuB,UAACmhC,GAAD;AAAA,mBAASA,GAAG,CAAC1yB,EAAJ,KAAW,OAAI,CAACuX,KAAL,CAAWob,WAA/B;AAAA,WAAvB,CAAZ;AACA,iBAAOD,GAAG,aAAMA,GAAG,CAAC5oC,IAAV,eAAmB,KAAKytB,KAAL,CAAWztB,IAA9B,IAAuC,KAAKytB,KAAL,CAAWztB,IAA5D;AACD;AAED;;;;4BAC8B;AAC5B,cAAMgwB,OAAO,GAAG,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B,qBAAA2nB,YAA1B,CAAhB;AACA,iBAAOtY,OAAO,IAAIA,OAAO,CAAClJ,QAAR,CAAiB5Q,EAAjB,KAAwB,KAAKuX,KAAL,CAAWob,WAArD;AACD;;;;;;AAvCH;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAKaC,e;;;;;AACT,+BAAsBruB,SAAtB,EACYoG,eADZ,EAC8C;AAAA;;AAAA;;AAC1C,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAFkB,gBAAApG,SAAA,GAAAA,SAAA;AAGlB,gCAAAiG,cAAA,CAAe2hB,UAAf,CAA0B,iBAAA4F,WAA1B;AACA,gBAAK/mB,KAAL,GAAa,UAAb;AACA,gBAAKC,UAAL,GAAkB,QAAlB;AAJ0C;AAK7C;;;;8BAEiB;AACd,gBAAM,IAAI9gB,KAAJ,CAAU,yCAAV,CAAN;AACH;;;iCAEoB;AACjB,gBAAM,IAAIA,KAAJ,CAAU,yCAAV,CAAN;AACH;;;kCAEoB;AACjB,gBAAM,IAAIA,KAAJ,CAAU,yCAAV,CAAN;AACH;;;gCAEcsM,I,EAAe;AAC1B,iBAAO,IAAI,iBAAAs7B,WAAJ,CAAgBt7B,IAAhB,CAAP;AACH;;;;MAvBgC,eAAAiU,c;;AAHrC;;;uBAGakoB,e,EAAe,+B,EAAA,+B;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFZ;;;;;2BAEHA,e,EAAe;cAH3B,OAAAhyB,UAG2B;eAHhB;AACRoI,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;QAmDa6pB,Q;;;;;AA2DT,wBAAY3pB,QAAZ,EAA+B;AAAA;;AAAA;;AAC3B,sCAAMA,QAAN;AACA,YAAMzC,QAAQ,GAAGyC,QAAQ,CAACzC,QAAT,IAAqB,EAAtC;AACA,YAAMqsB,SAAS,GAAGrsB,QAAQ,CAACssB,cAAT,IAA2B,EAA7C;AACA,gBAAKxpB,OAAL,GAAeL,QAAQ,CAACK,OAAT,IAAoBL,QAAQ,CAAChR,IAA5C;AACA,gBAAK86B,MAAL,GAAc,CAAC9pB,QAAQ,CAAC8pB,MAAT,IAAmBF,SAAS,CAACE,MAA7B,IAAuC,EAAxC,EAA4Cp/B,GAA5C,CAAgD,UAAAxH,CAAC;AAAA,iBAAK;AAChE4T,cAAE,EAAE5T,CAAC,CAAC6mC,QAAF,IAAc7mC,CAAC,CAAC4T,EAD4C;AAEhElW,gBAAI,EAAEsC,CAAC,CAAC8mC,UAAF,IAAgB9mC,CAAC,CAACtC;AAFwC,WAAL;AAAA,SAAjD,CAAd;AAIA,gBAAKqpC,UAAL,GAAkB,CAACjqB,QAAQ,CAACiqB,UAAT,IAAuBL,SAAS,CAACK,UAAjC,IAA+C,EAAhD,EAAoDv/B,GAApD,CAAwD,UAAAxH,CAAC;AAAA,iBAAK;AAC5E4T,cAAE,EAAE5T,CAAC,CAAC6mC,QAAF,IAAc7mC,CAAC,CAAC4T,EADwD;AAE5ElW,gBAAI,EAAEsC,CAAC,CAAC8mC,UAAF,IAAgB9mC,CAAC,CAACtC;AAFoD,WAAL;AAAA,SAAzD,CAAlB;AAIA,gBAAK8Z,MAAL,GAAc,CAACsF,QAAQ,CAACtF,MAAT,IAAmBkvB,SAAS,CAAClvB,MAA7B,IAAuC,EAAxC,EAA4ChQ,GAA5C,CAAgD,UAAAxH,CAAC;AAAA,iBAAI,IAAI,cAAAimC,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAC7EjmC,CAD6E,CAAC,EAC7E;AACJumC,uBAAW,EAAE,QAAK3yB;AADd,WAD6E,CAAlB,CAAJ;AAAA,SAAjD,CAAd;AAIA,gBAAKozB,MAAL,GAAclqB,QAAQ,CAACmqB,KAAT,IAAkBP,SAAS,CAACO,KAA5B,IAAqC,EAAnD;AACA,gBAAKC,QAAL,GAAgBpqB,QAAQ,CAACqqB,OAAT,IAAoBrqB,QAAQ,CAACsqB,gBAA7B,IAAiDV,SAAS,CAACU,gBAA3D,IAA+E,EAA/F;AACA,gBAAKC,QAAL,GAAgBvqB,QAAQ,CAACwqB,OAAT,IAAoBZ,SAAS,CAACY,OAA9B,IAAyC,EAAzD;AACA,gBAAKrvB,SAAL,GAAiBoC,QAAjB;AACA,gBAAKktB,cAAL,GAAsBzqB,QAAQ,CAAC0qB,aAAT,IAA0Bd,SAAS,CAACc,aAApC,IAAqD,EAA3E;AACA,gBAAKC,SAAL,GAAiB3qB,QAAQ,CAACvC,QAAT,IAAqBmsB,SAAS,CAACnsB,QAA/B,IAA2C;AAAEmtB,mBAAS,EAAE,IAAb;AAAmBC,kBAAQ,EAAE;AAA7B,SAA5D;AACA,gBAAK7a,cAAL,GAAsBhQ,QAAQ,CAACgQ,cAAT,IAA2B4Z,SAAS,CAAC5Z,cAArC,IAAuDzS,QAAQ,CAACyS,cAAhE,IAAkF;AACpGjrB,eAAK,EAAE,CAD6F;AAEpGsrB,aAAG,EAAE;AAF+F,SAAxG;AAIA,YAAMya,WAAW,GAAG,EAApB;;AACA,YAAI9qB,QAAQ,CAAC+qB,cAAb,EAA6B;AACzB,eAAK,IAAMC,GAAX,IAAkBhrB,QAAQ,CAAC+qB,cAA3B,EAA2C;AACvC,gBAAI/qB,QAAQ,CAAC+qB,cAAT,CAAwBvqC,cAAxB,CAAuCwqC,GAAvC,CAAJ,EAAiD;AAC7C,kBAAMC,YAAY,GAAGjrB,QAAQ,CAAC+qB,cAAT,CAAwBC,GAAxB,KAAgC,EAArD;;AACA,mBAAK,IAAMvmB,OAAX,IAAsBwmB,YAAtB,EAAoC;AAChC,oBAAIA,YAAY,CAACzqC,cAAb,CAA4BikB,OAA5B,CAAJ,EAA0C;AACtCqmB,6BAAW,CAACp+B,IAAZ,CAAiB;AACboK,sBAAE,EAAEm0B,YAAY,CAACxmB,OAAD,CADH;AAEb7jB,wBAAI,EAAE6jB,OAFO;AAGbymB,4BAAQ,EAAEF;AAHG,mBAAjB;AAKH;AACJ;AACJ;AACJ;AACJ;;AACD,gBAAKF,WAAL,GAAmBA,WAAnB;AACA,gBAAK7d,IAAL,GAAYjN,QAAQ,CAACiN,IAAT,IAAiB2c,SAAS,CAAC3c,IAA3B,IAAmC1P,QAAQ,CAAC0P,IAA5C,IAAoD,EAAhE;AACA,gBAAKC,OAAL,GAAelN,QAAQ,CAACkN,OAAT,IAAoB0c,SAAS,CAAC1c,OAA9B,IAAyC3P,QAAQ,CAAC2P,OAAlD,IAA6D,EAA5E;AACA,gBAAKie,eAAL,GAAuBnrB,QAAQ,CAACmrB,eAAT,IAA4BvB,SAAS,CAACuB,eAAtC,IAAyD5tB,QAAQ,CAAC4tB,eAAlE,IAAqF,EAA5G;AACA,gBAAKrjB,aAAL,GAAqB9H,QAAQ,CAAC8H,aAAT,IAA0B8hB,SAAS,CAAC9hB,aAApC,IAAqDvK,QAAQ,CAACuK,aAA9D,IAA+E,EAApG;AACA,gBAAKsjB,wBAAL,GAAgCprB,QAAQ,CAACorB,wBAAT,IAAqCxB,SAAS,CAACwB,wBAA/C,IAA2E7tB,QAAQ,CAAC6tB,wBAApF,IAAgH,CAAhJ;AACA,gBAAKC,QAAL,GAAgBrrB,QAAQ,CAACqrB,QAAT,IAAqBzB,SAAS,CAACyB,QAA/B,IAA2C9tB,QAAQ,CAAC8tB,QAApD,IAAgE,KAAhF;AACA,gBAAK/M,QAAL,GAAgBte,QAAQ,CAACse,QAAT,IAAqBsL,SAAS,CAACtL,QAA/B,IAA2C/gB,QAAQ,CAAC+gB,QAApD,IAAgE,EAAhF;;AACA,YAAIsL,SAAS,CAAC0B,uBAAd,EAAuC;AACnC,kBAAKhN,QAAL,CAAciN,cAAd,GAA+B,IAA/B;AACH;;AACD,YAAI3B,SAAS,CAAC4B,2BAAd,EAA2C;AACvC,kBAAKlN,QAAL,CAAczG,kBAAd,GAAmC,IAAnC;AACH;;AACD,gBAAKpuB,QAAL,GAAgBuW,QAAQ,CAACvW,QAAT,IAAqBmgC,SAAS,CAACngC,QAA/B,IAA2C8T,QAAQ,CAAC9T,QAApD,IAAgE,EAAhF;AACA,gBAAKkf,YAAL,GAAoB3I,QAAQ,CAAC2I,YAAT,IAAyBihB,SAAS,CAACjhB,YAAnC,IAAmDpL,QAAQ,CAACoL,YAA5D,IAA4E,KAAhG;AACA,gBAAK8iB,WAAL,GAAmBzrB,QAAQ,CAACyrB,WAAT,IAAwB7B,SAAS,CAAC6B,WAAlC,IAAiDluB,QAAQ,CAACkuB,WAA1D,IAAyE,EAA5F;AACA,gBAAKC,aAAL,GAAqB1rB,QAAQ,CAAC0rB,aAAT,IAA0B9B,SAAS,CAAC8B,aAApC,IAAqDnuB,QAAQ,CAACmuB,aAA9D,IAA+E,EAApG;AACA,gBAAKC,UAAL,GAAkB3rB,QAAQ,CAAC2rB,UAAT,IAAuB/B,SAAS,CAAC+B,UAAjC,IAA+CpuB,QAAQ,CAACouB,UAAxD,IAAsE,EAAxF;AACA,gBAAKrxB,IAAL,GAAY0F,QAAQ,CAAC1F,IAAT,IAAiBsvB,SAAS,CAACtvB,IAA3B,IAAmC,SAA/C;AA/D2B;AAgE9B;AA1HD;;;;;;AA4HA;;;;gCAIe/Z,G,EAAW;AACtB,cAAMkK,IAAI,GAAGlK,GAAG,CAACsG,KAAJ,CAAU,GAAV,CAAb;AACA,cAAMkB,KAAK,GAAG,OAAAyC,eAAA,CAAgBC,IAAhB,EAAsB,KAAK0Q,SAA3B,KAAyC,OAAA3Q,eAAA,EAAiB,gBAAjB,4BAAsCC,IAAtC,IAA6C,KAAK0Q,SAAlD,CAAvD;AACA,iBAAOpT,KAAP;AACH;AAED;;;;;;;6BAIYnH,I,EAAY;AACpB,oCAAY,KAAKspC,MAAL,CAAYtpC,IAAZ,KAAqB,EAAjC;AACH;AAED;;;;;;;AA2BA;;;;yCAIwBsqC,Q,EAAgB;AACpC,iBAAO,CAAC,KAAKJ,WAAL,IAAoB,EAArB,EAAyBr/B,MAAzB,CAAgC,UAAAvI,CAAC;AAAA,mBAAIA,CAAC,CAACgoC,QAAF,KAAeA,QAAnB;AAAA,WAAjC,CAAP;AACH;AAED;;;;;;+BAGiB;;;;;;0BACP,IAAIjqC,KAAJ,CAAU,qDAAV,C;;;;;;;;;AACT;AAED;;;;;;kCAGmB;;;;;;0BACT,IAAIA,KAAJ,CAAU,qDAAV,C;;;;;;;;;AACT;;;4BA5LwB;AACrB,iBAAO,wBAAAqgB,cAAA,CAAeC,UAAf,CAA0BooB,QAA1B,CAAP;AACH;;;4BA8IoB;AAAA;;AACjB,iBAAO93B,MAAM,CAACpH,IAAP,CAAY,KAAKy/B,MAAjB,EAAyBz+B,MAAzB,CAAgC,UAAAvI,CAAC;AAAA,mBAAI,OAAI,CAACgnC,MAAL,CAAY1pC,cAAZ,CAA2B0C,CAA3B,CAAJ;AAAA,WAAjC,CAAP;AACH;AAED;;;;4BACkB;AACd,iBAAO,MAAP,OAAO,CAAP,EAAO,EAAM,KAAKknC,QAAL,IAAiB,EAAvB,CAAP;AACH;AAED;;;;4BACkB;AACd,iBAAO,MAAP,OAAO,CAAP,EAAO,EAAM,KAAKG,QAAL,IAAiB,EAAvB,CAAP;AACH;AAED;;;;4BACwB;AACpB,iBAAO,MAAP,OAAO,CAAP,EAAO,EAAM,KAAKE,cAAL,IAAuB,EAA7B,CAAP;AACH;AAED;;;;4BACmB;AACf,iBAAO,MAAP,OAAO,CAAP,EAAO,EAAK,KAAKE,SAAV,CAAP;AACH;;;;MAxKyB,iBAAA5qB,a;;AAA9B;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACDA;;QACaopB,a,GAgBT,yBAAiC;AAAA,UAArByC,KAAqB,uEAAJ,EAAI;;AAAA;;AAC7B,WAAK90B,EAAL,GAAU80B,KAAK,CAAC90B,EAAN,IAAY80B,KAAK,CAACV,QAAlB,IAA8B,EAAxC;AACA,WAAKzB,WAAL,GAAmBmC,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACnC,WAAtB,IAAqC,EAAxD;AACA,WAAK7oC,IAAL,GAAYgrC,KAAK,CAAChrC,IAAN,IAAcgrC,KAAK,CAACE,UAApB,IAAkC,EAA9C;AACA,UAAMC,UAAU,GAAG,KAAKnrC,IAAL,CAAU2L,WAAV,EAAnB;AACA,UAAMkiB,GAAG,GAAGsd,UAAU,CAAC9jC,OAAX,CAAmB,OAAnB,KAA+B,CAA/B,GAAmC8jC,UAAU,CAACj+B,OAAX,CAAmB,aAAnB,EAAkC,EAAlC,CAAnC,GAA2Ei+B,UAAU,CAACvF,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwBvyB,WAAxB,EAAvF;AACA,WAAKyd,UAAL,GAAkBka,KAAK,CAACla,UAAN,IAAoBjD,GAApB,IAA2B,EAA7C;AACA,WAAKud,OAAL,GAAeJ,KAAK,CAACI,OAAN,IAAiB,EAAhC;AACA,WAAKliC,IAAL,GAAY8hC,KAAK,CAAC9hC,IAAN,IAAc8hC,KAAK,CAACK,UAApB,IAAkC,KAA9C;AACA,WAAK1uB,QAAL,GAAgBquB,KAAK,CAACruB,QAAtB;AACH,K;;AA1BL;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;;AACA;AAAA;AAAA;AAKA;;;QAEa2rB,Y;;;;;AAMX,8BAAoC;AAAA;;AAAA,YAAxBlpB,QAAwB,uEAAJ,EAAI;;AAAA;;;;AAClC,sCAAMA,QAAN;AACA,gBAAK7E,SAAL,GAAiB6E,QAAQ,CAACzC,QAAT,IAAqB,EAAtC;AACA,gBAAK2uB,mBAAL,GAA2B,CAAC,aAAAlsB,QAAQ,CAACzC,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEssB,cAAnB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAElwB,SAAnC,KAAgD,EAAjD,EAAqDjP,GAArD,CACzB,UAAC8+B,GAAD;AAAA,iBAASA,GAAG,CAACnpB,OAAb;AAAA,SADyB,CAA3B;AAHkC;AAMnC;AAED;;;;;;;;gCAIe9f,G,EAAW;AACxB,cAAMkK,IAAI,GAAGlK,GAAG,CAACsG,KAAJ,CAAU,GAAV,CAAb;AACA,cAAMkB,KAAK,GAAG,OAAAyC,eAAA,CAAgBC,IAAhB,EAAsB,KAAK0Q,SAA3B,CAAd;AACA,iBAAOpT,KAAP;AACD;;;;MAtB+B,iBAAAgY,a;;AAAlC;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;QAKaosB,mB;;;;;AAQX,mCACY9wB,SADZ,EAEUiF,QAFV,EAGU8rB,MAHV,EAIE3qB,eAJF,EAIkC;AAAA;;AAAA;;AAEhC,sCAAMpG,SAAN,EAAiBoG,eAAjB;AALU,gBAAApG,SAAA,GAAAA,SAAA;AACF,gBAAAiF,QAAA,GAAAA,QAAA;AACA,gBAAA8rB,MAAA,GAAAA,MAAA;AALF,gBAAAC,kBAAA,GAA0C,IAAI,OAAAnsB,OAAJ,EAA1C;AASN,gCAAAoB,cAAA,CAAe2hB,UAAf,CAA0B,qBAAAiG,YAA1B;AACA,gCAAA5nB,cAAA,CAAe2hB,UAAf,CAA0B,iBAAA0G,QAA1B;AACA,gBAAK7nB,KAAL,GAAa,cAAb;AACA,gBAAKC,UAAL,GAAkB,OAAlB;;AACA,gBAAKvd,GAAL,CAAS,WAAT,EAAsB,EAAtB;;AACA,gBAAKA,GAAL,CAAS,iBAAT,EAA4B,IAA5B;;AACA,gBAAK4nC,MAAL,CAAYzvB,WAAZ,CAAwBhH,IAAxB,CAA6B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,iBAAOA,CAAP;AAAA,SAAN,CAA7B,EAA8C9Y,SAA9C,CAAwD;AAAA,iBAAM,QAAK8Z,IAAL,EAAN;AAAA,SAAxD;;AATgC;AAUjC;AAED;;;;;;;4BAGiBoF,S,EAAoBM,Y,EAAsB;;;;;;0BACnD,IAAIrhB,KAAJ,CAAU,kDAAV,C;;;;;;;;;AACP;AAED;;;;;;+BAIE6V,E,EACAkL,S,EACAM,Y,EAAsB;;;;;;0BAEhB,IAAIrhB,KAAJ,CAAU,qDAAV,C;;;;;;;;;AACP;AAED;;;;;;gCAGoB6V,E,EAAU;;;;;;0BACtB,IAAI7V,KAAJ,CAAU,qDAAV,C;;;;;;;;;AACP;AAED;;;;;;;+BAIc4qC,M,EAAc;AAC1B,iBAAO,CAAC,KAAKlyB,SAAL,CAAetR,IAAf,CAAoB,UAACnF,CAAD;AAAA,mBAAOA,CAAC,CAAC4T,EAAF,KAAS+0B,MAAhB;AAAA,WAApB,KAAgD,EAAjD,EAAkEnxB,MAAzE;AACD;AAED;;;;;;;gCAIena,G,EAAa;AAC1B,iBAAO,KAAKmnB,QAAL,CAAclI,OAAd,CAAsBjf,GAAtB,KAA8B,KAAK+rC,aAAL,CAAmB9sB,OAAnB,CAA2Bjf,GAA3B,CAArC;AACD;AAED;;;;;AA2BA;;;;kCAIiBuW,E,EAAY+0B,M,EAAiB;AAC5C,cAAMrC,GAAG,GAAG,KAAK7vB,SAAL,CAAetR,IAAf,CAAoB,UAACnF,CAAD;AAAA,mBAAOA,CAAC,CAAC4T,EAAF,KAAS+0B,MAAhB;AAAA,WAApB,KAA+C,KAAKnkB,QAAhE;;AACA,cAAI8hB,GAAG,IAAI1yB,EAAX,EAAe;AACb,mBAAO0yB,GAAG,CAACM,MAAJ,CAAWr+B,MAAX,CAAkB,UAACvI,CAAD;AAAA,qBAAO,UAAGA,CAAC,CAAC4T,EAAL,EAAU7O,OAAV,CAAkB6O,EAAlB,KAAyB,CAAhC;AAAA,aAAlB,CAAP;AACD;;AACD,iBAAO,EAAP;AACD;AAED;;;;;;;oCAImBy1B,G,EAAsB;AACvC,cAAMxpC,IAAI,GAAGwpC,GAAG,YAAY36B,KAAf,GAAuB26B,GAAvB,GAA6B,CAACA,GAAD,CAA1C;AACA,cAAMC,QAAQ,GAAG,KAAK7yB,SAAtB;;AAFuC,uDAGtB5W,IAHsB;AAAA;;AAAA;AAGvC,sEAAuB;AAAA,kBAAZ+T,EAAY;;AAAA,2DACH01B,QADG;AAAA;;AAAA;AACrB,0EAA4B;AAAA,sBAAjBhD,GAAiB;;AAAA,+DACRA,GAAG,CAAC9uB,MADI;AAAA;;AAAA;AAC1B,8EAA8B;AAAA,0BAAnBswB,GAAmB;;AAC5B,0BAAIA,GAAG,CAACl0B,EAAJ,KAAWA,EAAf,EAAmB;AACjB,+BAAOk0B,GAAP;AACD;AACF;AALyB;AAAA;AAAA;AAAA;AAAA;AAM3B;AAPoB;AAAA;AAAA;AAAA;AAAA;AAQtB;AAXsC;AAAA;AAAA;AAAA;AAAA;;AAYvC,iBAAO,IAAP;AACD;AAED;;;;;;+BAGoB;;;;;;;AAClB;AACA,wBAAI3sB,YAAJ,EAAkB;AAChB,2BAAKouB,gBAAL,GAAwBpuB,YAAY,CAACC,OAAb,WAAwB,KAAKmD,eAAL,CAAqBrC,QAArB,CAA8BnL,WAA9B,EAAxB,eAAxB;AACD;;AACKoJ,2B,GAAmC,KAAKiD,QAAL,CAAc/F,GAAd,CAAkB,SAAlB,KAAgC,E;AACzE8C,2BAAO,CAACqvB,YAAR,GAAuB;AAAE3wB,6BAAO,EAAE,2BAAX;AAAwCnc,2BAAK,EAAE;AAA/C,qBAAvB;;AACA,2BAAM,KAAK+sC,gBAAL,EAAN;;;AACAtvB,2BAAO,CAACqvB,YAAR,GAAuB;AAAE3wB,6BAAO,EAAE,2BAAX;AAAwCnc,2BAAK,EAAE;AAA/C,qBAAvB;AACAyd,2BAAO,CAAC1D,SAAR,GAAoB;AAAEoC,6BAAO,EAAE,uBAAX;AAAoCnc,2BAAK,EAAE;AAA3C,qBAApB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;;AACA,2BAAM,KAAK5D,aAAL,EAAN;;;AACA4D,2BAAO,CAAC1D,SAAR,GAAoB;AAAEoC,6BAAO,EAAE,uBAAX;AAAoCnc,2BAAK,EAAE;AAA3C,qBAApB;AACAyd,2BAAO,CAAC3C,MAAR,GAAiB;AAAEqB,6BAAO,EAAE,6BAAX;AAA0Cnc,2BAAK,EAAE;AAAjD,qBAAjB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;;AACA,2BAAM,KAAKuvB,UAAL,EAAN;;;AACAvvB,2BAAO,CAAC3C,MAAR,GAAiB;AAAEqB,6BAAO,EAAE,6BAAX;AAA0Cnc,2BAAK,EAAE;AAAjD,qBAAjB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AACAA,2BAAO,CAACwvB,WAAR,GAAsB;AAAE9wB,6BAAO,EAAE,yBAAX;AAAsCnc,2BAAK,EAAE;AAA7C,qBAAtB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;;AACA,2BAAM,KAAKyvB,cAAL,EAAN;;;AACAzvB,2BAAO,CAACwvB,WAAR,GAAsB;AAAE9wB,6BAAO,EAAE,yBAAX;AAAsCnc,2BAAK,EAAE;AAA7C,qBAAtB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AACML,wB,GAAO,KAAKovB,MAAL,CAAYlO,O;;AAEzB,wBAAIlhB,IAAJ,EAAU;AACFlG,wBADE,GACGuH,YAAY,CAACC,OAAb,CAAqB,kBAArB,CADH;AAEFoJ,8BAFE,GAES,KAAK/N,SAAL,CAAetR,IAAf,CAAoB,UAAAmhC,GAAG;AAAA,+BAAI1yB,EAAE,IAAI0yB,GAAG,CAAC1yB,EAAJ,KAAWA,EAArB;AAAA,uBAAvB,KAAmD,KAAK6C,SAAL,CAAetR,IAAf,CAAoB,UAACmhC,GAAD;AAAA,+BAASA,GAAG,CAACvc,IAAJ,KAAajQ,IAAI,CAACS,QAA3B;AAAA,uBAApB,CAF5D;;AAGR,0BAAIiK,QAAJ,EAAc;AACZ,6BAAK+kB,gBAAL,GAAwB/kB,QAAQ,CAAC5Q,EAAjC;AACA,6BAAKtS,GAAL,CAAS,iBAAT,EAA4BkjB,QAA5B;AACD,uBAHD,MAGO,IAAG,KAAKA,QAAR,EAAkB;AACvB;AACA,6BAAK+kB,gBAAL,GAAwB,KAAK/kB,QAAL,CAAc5Q,EAAtC;AACA,6BAAKtS,GAAL,CAAS,iBAAT,EAA4B,KAAKkjB,QAAjC;AACD;AACF;;;;;;;;;AACF;AAED;;;;;;2CAG6B;;;;;;;;AACV,2BAAM,KAAKzP,KAAL,CAAW;AAAE80B,0BAAI,EAAE,KAAR;AAAe5qB,4BAAM,EAAE;AAAvB,qBAAX,CAAN;;;AAAX6qB,4B;AACN,yBAAKV,aAAL,GAAqB,IAAI,qBAAApD,YAAJ,CAAiB8D,QAAQ,CAAC,CAAD,CAAzB,CAArB;AACA,yBAAKxoC,GAAL,CAAS,cAAT,EAAyB,KAAK8nC,aAA9B;sDACO,KAAKA,a;;;;;;;;;AACb;AAED;;;;;;wCAG0B;;;;;;sDACjB,KAAKW,oBAAL,CAA0B,KAAKX,aAA/B,C;;;;;;;;;AACR;AAED;;;;;;6CAGkCI,Y,EAA0B;;;;;;;;AACzC,2BAAM,KAAKz0B,KAAL,CAAW;AAAE80B,0BAAI,EAAE,UAAR;AAAoB5qB,4BAAM,EAAE,IAA5B;AAAkChM,2BAAK,EAAE;AAAzC,qBAAX,CAAN;;;AAAX+2B,4B;AACAvzB,6B,GAAauzB,QAAsB,CACtCxiC,GADgB,CACZ,UAACxH,CAAD;AAAA,6BAAO,IAAI,iBAAAymC,QAAJ,CAAazmC,CAAb,CAAP;AAAA,qBADY,EAEhBuI,MAFgB,CAET,UAAC+9B,GAAD;AAAA,6BAASkD,YAAY,CAACR,mBAAb,CAAiChuB,QAAjC,CAA0CsrB,GAAG,CAAC1yB,EAA9C,CAAT;AAAA,qBAFS,C;AAGnB,yBAAKtS,GAAL,CAAS,WAAT,EAAsBmV,SAAtB;AACA;;AACA,wBAAI,CAAC,KAAK8yB,gBAAN,IAA0B9yB,SAA1B,IAAuCA,SAAS,CAAC5S,MAAV,GAAmB,CAA9D,EAAiE;AAC/D,2BAAK0lC,gBAAL,GAAwB9yB,SAAS,CAAC,CAAD,CAAT,CAAa7C,EAArC;AACD;;uDACM6C,S;;;;;;;;;AACR;AAED;;;;;;qCAGuB;;;;;;;;AACJ,2BAAM,KAAK1B,KAAL,CAAW;AAAE80B,0BAAI,EAAE,OAAR;AAAiB5qB,4BAAM,EAAE,IAAzB;AAA+BhM,2BAAK,EAAE;AAAtC,qBAAX,CAAN;;;AAAXg3B,4B;AACAzyB,0B,GAAUyyB,QAAsB,CAACziC,GAAvB,CAA2B,UAACxH,CAAD;AAAA,6BAAO,IAAI,cAAAimC,aAAJ,CAAkBjmC,CAAlB,CAAP;AAAA,qBAA3B,C;AAChB,yBAAKsB,GAAL,CAAS,QAAT,EAAmBkW,MAAnB;uDACOA,M;;;;;;;;;AACR;AAED;;;;;;yCAG2B;;;;;;;;AACP,2BAAM,KAAKzC,KAAL,CAAW;AAAE80B,0BAAI,EAAE,MAAR;AAAgB5qB,4BAAM,EAAE,IAAxB;AAA8BhM,2BAAK,EAAE,IAArC;AAA2CszB,iCAAW,EAAE,KAAKgD;AAA7D,qBAAX,CAAN;;;AAAZW,6B;AACAC,yB,GAASD,SAAuB,CAAC1iC,GAAxB,CAA4B,UAACxH,CAAD;AAAA,6BAAQ;AAAE4T,0BAAE,EAAE5T,CAAC,CAAC4T,EAAR;AAAYlW,4BAAI,EAAEsC,CAAC,CAACtC;AAApB,uBAAR;AAAA,qBAA5B,C;AACf,yBAAK4D,GAAL,CAAS,aAAT,EAAwB6oC,KAAxB,E,CACA;;AACA,yBAAKhB,kBAAL,CAAwBr5B,IAAxB,CAA6Bq6B,KAA7B;;;;;;;;;AACD;AAEC;;;;;;yDAOsC9sC,G,EAAa;AACnD,cAAI,CAAC,KAAK+rC,aAAV,EAAyB;AACvB,mBAAO,EAAP;AACD;;AACD,cAAMzC,cAAc,GAAG,KAAKyC,aAAL,CAAmB9sB,OAAnB,CAA2B,gBAA3B,CAAvB;;AAEA,iBAAOqqB,cAAc,IAAIA,cAAc,CAACtpC,GAAD,CAAhC,GAAwCspC,cAAc,CAACtpC,GAAD,CAAtD,GAA8D,EAArE;AACD;;;mDAEiCuJ,I,EAAa;AAC7C,cAAMwC,OAAO,GAAG,KAAKghC,gCAAL,CAAsCxjC,IAAtC,KAA+C,EAA/D;AACA,oCAAW+H,MAAM,CAACpH,IAAP,CAAY6B,OAAZ,EAAqB5B,GAArB,CAAyB,UAACnK,GAAD,EAAS;AACzC,gBAAMuQ,OAAO,GAAGxE,OAAO,CAAC/L,GAAD,CAAP,CAAa+K,QAAb,EAAhB;AACA,mBAAO;AACHwF,qBAAO,EAAPA,OADG;AAEH/I,mBAAK,EAAExH,GAFJ;AAGH6sB,kBAAI,EAAE;AAHH,aAAP;AAKH,WAPU,CAAX;AAQD;;;4BAnLkB;AAAA;;AACjB,iBAAO,KAAKzT,SAAL,CAAetR,IAAf,CAAoB,UAACnF,CAAD;AAAA,mBAAOA,CAAC,CAAC4T,EAAF,KAAS,OAAI,CAAC21B,gBAArB;AAAA,WAApB,CAAP;AACD;AAED;;0BAKoBjD,G,EAAe;AACjC,cAAIA,GAAG,YAAY,iBAAAG,QAAnB,EAA6B;AAC3B,iBAAK8C,gBAAL,GAAwBjD,GAAG,CAAC1yB,EAA5B;AACD,WAFD,MAEO;AACL,iBAAK21B,gBAAL,GAAwBjD,GAAxB;AACD;;AACD,eAAKhlC,GAAL,CAAS,iBAAT,EAA4B,KAAKkjB,QAAjC;AACA,eAAKolB,cAAL;AACAzuB,sBAAY,CAACkvB,OAAb,CAAqB,kBAArB,EAAyC,KAAKd,gBAA9C;AACApuB,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,EAA2C/D,GAAG,CAAC//B,QAA/C;AACD;AAED;;;;4BAhBsB;AACpB,iBAAO,KAAK8Q,GAAL,CAAS,aAAT,KAA2B,EAAlC;AACD;;;4BAemB;AAClB,iBAAO,KAAKA,GAAL,CAAqB,WAArB,KAAqC,EAA5C;AACD;;;4BAoIgC;AAC7B,iBAAO,KAAK8xB,kBAAL,CAAwB3vB,YAAxB,EAAP;AACD;;;;MAhOoC,eAAA8E,c;;AAHzC;;;uBAGa2qB,mB,EAAmB,+B,EAAA,kC,EAAA,4B,EAAA,+B;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;2BAEDA,mB,EAAmB;cAH/B,OAAAz0B,UAG+B;eAHpB;AACVoI,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBhC;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;QAOagkB,mB;;;;;AA0BX,mCAAsBzoB,SAAtB,EACsBoG,eADtB,EACwD;AAAA;;AAAA;;AACtD;AAFoB,gBAAApG,SAAA,GAAAA,SAAA;AACA,gBAAAoG,eAAA,GAAAA,eAAA;AApBtB;;AACU,gBAAAjG,SAAA,GAAoE,EAApE;AACV;;AACU,gBAAAC,UAAA,GAAiD,EAAjD;AACV;;AACU,gBAAAiG,YAAA,GAAmD,EAAnD;AACV;;AACU,gBAAAC,SAAA,GAA6C,EAA7C;AACV;;AACU,gBAAAC,QAAA,GAAoC,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBAC5CD,CAAC,KAAKC,CAAN,IAAYD,CAAS,CAAC8J,EAAV,KAAkB7J,CAAS,CAAC6J,EADI;AAAA,SAApC;AAEV;;;AACU,gBAAA+K,YAAA,GAAkC,UAAC7U,CAAD;AAAA,iBAAO,CAAC,CAACA,CAAT;AAAA,SAAlC;;AAUR,gBAAK8U,KAAL,GAAa,MAAb;AACA,gBAAKC,UAAL,GAAkB,MAAlB;;AACA,gBAAKvd,GAAL,CAAS,MAAT,EAAiB,EAAjB;;AAJsD;AAKvD;AAXD;;;;;;AAaA;;;wCAGwBwd,S,EAAoB;AACxC;AACA;AACA,cAAI,KAAKP,eAAL,CAAqBQ,SAAzB,EAAoC;AAChC,mBAAO,MAAP,OAAO,CAAP,kBAAYD,SAAZ,CAAO,EAAc;AAAEC,uBAAS,EAAE;AAAb,aAAd,CAAP;AACH;;AACD,iBAAOD,SAAP;AACH;AAED;;;;;;+BAGc;AAAA;;AACZ,eAAK9C,IAAL,GAAY4B,IAAZ,CACE,UAAClF,CAAD;AAAA,mBAAO,OAAI,CAACvb,YAAL,CAAkB2S,IAAlB,CAAuB,IAAvB,CAAP;AAAA,WADF,EAEE,UAACkP,GAAD;AAAA,mBAAS,OAAI,CAAC1e,OAAL,CAAa,MAAb,EAAqB;AAAA,qBAAM,OAAI,CAACoZ,IAAL,EAAN;AAAA,aAArB,EAAwC,IAAxC,CAAT;AAAA,WAFF;AAID;AAED;;;;;;;gCAIsC;AAAA,cAAzBuF,MAAyB,uEAAP,KAAO;AACpC,cAAMC,QAAQ,GAAGD,MAAM,GACnB,KAAK9G,SAAL,CAAesE,IAAf,CAAoBC,YADD,GAEnB,YAFJ;AAGA,2BAAUwC,QAAV,cAAsB,KAAKL,UAA3B;AACD;AAED;;;;;AAKA;;;;4BAIoBnhB,I,EAAY;AAC9B,cAAI,CAAC,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAL,EAA4B;AAC1B,iBAAK4D,GAAL,CAAY5D,IAAZ,EAAkB,IAAlB;AACD;;AACD,iBAAQ,KAAK4a,SAAL,CAAe5a,IAAf,EAA4CS,QAA5C,EAAR;AACD;AAED;;;;;;;;+BAKuBT,I,EAAY;AACjC,cAAI,CAAC,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAL,EAA4B;AAC1B,iBAAK4D,GAAL,CAAY5D,IAAZ,EAAkB,IAAlB;AACD;;AACD,iBAAO,KAAK6a,UAAL,CAAgB7a,IAAhB,CAAP;AACD;AAED;;;;;;;;4BAKuBA,I,EAAcmH,K,EAAQ;AAC3C,cAAI,CAAC,KAAKyT,SAAL,CAAe5a,IAAf,CAAL,EAA2B;AACzB,iBAAK4a,SAAL,CAAe5a,IAAf,IAAuB,IAAI,OAAAN,eAAJ,CAAuByH,KAAvB,CAAvB;AACA,iBAAK0T,UAAL,CAAgB7a,IAAhB,IAAwB,KAAK4a,SAAL,CAAe5a,IAAf,EAAqB8b,YAArB,EAAxB;AACD,WAHD,MAGO;AACL,iBAAKlB,SAAL,CAAe5a,IAAf,EAAqBoS,IAArB,CAA0BjL,KAA1B;AACD;AACF;AAED;;;;;;;iCAI8D;AAAA,cAAhDsa,SAAgD,uEAAjB,KAAKR,YAAY;AACxD,cAAM9e,IAAI,GAAQ,KAAKwX,GAAL,CAAS,MAAT,CAAlB;AACA,iBAAOxX,IAAI,CAAC0I,MAAL,CAAY4W,SAAZ,CAAP;AACL;AAED;;;;;;;6BAIYvL,E,EAAU;AACpB,cAAM/T,IAAI,GAAG,KAAKwX,GAAL,CAAS,MAAT,CAAb;AACA,iBAAOxX,IAAI,CAACsF,IAAL,CAAU,UAACnF,CAAD,EAAO;AAAD;;AAAC,mBAAAA,CAAC,CAAC4T,EAAF,KAASA,EAAT,IAAgB,OAAA5T,CAAC,CAAC+S,KAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAE1J,WAAF,EAAP,OAA2BuK,EAAE,SAAF,IAAAA,EAAE,WAAF,GAAE,MAAF,GAAAA,EAAE,CAAEvK,WAAJ,EAA3B,CAAhB;AAA6D,WAA9E,CAAP;AACD;AAED;;;;;;;gCAIsE;AAAA;;AAAA,cAAzD+V,YAAyD,uEAAjC,EAAiC;AAAA,cAA7B/D,MAA6B,uEAAF,EAAE;AACpE,cAAI4D,MAAM,GAAG,KAAb;AACA,cAAII,KAAK,GAAG,IAAZ;AACA;;AACA,cAAID,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACAI,iBAAK,GAAGD,YAAY,CAACC,KAAb,IAAsB,IAA9B;AACA,mBAAOD,YAAY,CAACC,KAApB;AACD;;AACD,cAAMtK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,cAAM/hB,GAAG,mBAAY0X,KAAZ,CAAT;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrD,kBAAM7C,GAAG,GAAGS,MAAM,IAAIA,MAAM,CAACT,GAAjB,aAA0BS,MAAM,CAACT,GAAjC,SAAuC7F,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA7D,cAAuE,OAAI,CAACgG,KAAL,CAAWkE,MAAX,CAAvE,SAA4FlK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAlH,CAAZ;AACA,kBAAIuK,MAAJ;;AACA,qBAAI,CAACC,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBhb,SAAnB,CACE,UAACkD,CAAD,EAAoC;AAClC,oBAAIA,CAAC,IAAIA,CAAC,YAAY4L,KAAtB,EAA6B;AAC3B,sBAAMvF,OAAO,GAAGrG,CAAC,CAAC0E,GAAF,CAAM,UAACxH,CAAD;AAAA,2BAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,mBAAN,CAAhB;AACAsf,wBAAM,GAAG;AACPnW,2BAAO,EAAPA,OADO;AAEPg7B,yBAAK,EAAEh7B,OAAO,CAACtF;AAFR,mBAAT;AAID,iBAND,MAMO,IAAIf,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAAhC,IAA2CrG,CAAC,CAACqhC,KAAjD,EAAwD;AAC7D,sBAAMh7B,QAAO,GAAGrG,CAAC,CAACqG,OAAF,CAAU3B,GAAV,CAAc,UAACxH,CAAD;AAAA,2BAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,mBAAd,CAAhB;;AACAsf,wBAAM,GAAG;AACPnW,2BAAO,EAAPA,QADO;AAEPg7B,yBAAK,EAAErhC,CAAC,CAACqhC;AAFF,mBAAT;AAID,iBANM,MAMA,IAAIrhC,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAApC,EAA6C;AAClD,sBAAMA,SAAO,GAAGrG,CAAC,CAACqG,OAAF,CAAU3B,GAAV,CAAc,UAACxH,CAAD;AAAA,2BAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,mBAAd,CAAhB;;AACAsf,wBAAM,GAAG;AACPnW,2BAAO,EAAPA,SADO;AAEPg7B,yBAAK,EAAEh7B,SAAO,CAACtF;AAFR,mBAAT;AAID,iBANM,MAMA;AACLyb,wBAAM,GAAG;AACPnW,2BAAO,EAAE,EADF;AAEPg7B,yBAAK,EAAE;AAFA,mBAAT;AAID;AACF,eA1BH,EA2BE,UAACn4B,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eA9BH,EA+BE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChf,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,IAAsB,IAA7B;AAAA,iBAAlB,EAAsDgiB,KAAtD;AACD,eAlCH;AAoCD,aAvCqB,CAAtB;AAwCD;;AACD,iBAAO,KAAKZ,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;;;;0CAMyE;AAAA;;AAAA,cAAzD+hB,YAAyD,uEAAjC,EAAiC;AAAA,cAA7B/D,MAA6B,uEAAF,EAAE;AACvE,cAAMtG,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,cAAMxE,GAAG,aAAOS,MAAM,CAACT,GAAd,SAAoB7F,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA1C,CAAT;AACA,iBAAO,KAAKwK,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBnI,IAAnB,CACL,YAAAjL,GAAA,CAAI,UAAC1E,CAAD;AAAA,mBAAqC,OAAI,CAAC2c,gBAAL,CAAsB3c,CAAtB,CAArC;AAAA,WAAJ,CADK,EAEL,YAAA4c,UAAA,CAAW,UAAIC,KAAJ,EAAgBL,MAAhB,EAA+B;AACxCjY,mBAAO,CAACV,GAAR,CAAYgZ,KAAZ;AACA,mBAAO,OAAAC,EAAA,CAAGN,MAAH,CAAP;AACC,WAHH,CAFK,CAAP;AAOD;AAED;;;;;;;;yCAKiBxc,C,EAA8B;AAAA;;AAC7C,cAAIwc,MAAJ;;AACA,cAAIxc,CAAC,IAAIA,CAAC,YAAY4L,KAAtB,EAA6B;AAC3B,gBAAMvF,OAAO,GAAGrG,CAAC,CAAC0E,GAAF,CAAM,UAACxH,CAAD;AAAA,qBAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,aAAN,CAAhB;AACAsf,kBAAM,GAAG;AACPnW,qBAAO,EAAPA,OADO;AAEPg7B,mBAAK,EAAEh7B,OAAO,CAACtF;AAFR,aAAT;AAID,WAND,MAMO,IAAIf,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAAhC,IAA2CrG,CAAC,CAACqhC,KAAjD,EAAwD;AAC7D,gBAAMh7B,SAAO,GAAGrG,CAAC,CAACqG,OAAF,CAAU3B,GAAV,CAAc,UAACxH,CAAD;AAAA,qBAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,aAAd,CAAhB;;AACAsf,kBAAM,GAAG;AACPnW,qBAAO,EAAPA,SADO;AAEPg7B,mBAAK,EAAErhC,CAAC,CAACqhC;AAFF,aAAT;AAID,WANM,MAMA,IAAIrhC,CAAC,IAAI,EAAEA,CAAC,YAAY4L,KAAf,CAAL,IAA8B5L,CAAC,CAACqG,OAApC,EAA6C;AAClD,gBAAMA,SAAO,GAAGrG,CAAC,CAACqG,OAAF,CAAU3B,GAAV,CAAc,UAACxH,CAAD;AAAA,qBAAO,OAAI,CAACwf,OAAL,CAAaxf,CAAb,CAAP;AAAA,aAAd,CAAhB;;AACAsf,kBAAM,GAAG;AACPnW,qBAAO,EAAPA,SADO;AAEPg7B,mBAAK,EAAEh7B,SAAO,CAACtF;AAFR,aAAT;AAID,WANM,MAMA;AACLyb,kBAAM,GAAG;AACPnW,qBAAO,EAAE,EADF;AAEPg7B,mBAAK,EAAE;AAFA,aAAT;AAID;;AACD,iBAAO7kB,MAAP;AACD;AAGD;;;;;;;;6BAKY1L,E,EAAsC;AAAA;;AAAA,cAA1BwL,YAA0B,uEAAF,EAAE;AAChD,cAAIH,MAAM,GAAG,KAAb;AACA;;AACA,cAAIG,YAAJ,EAAkB;AAChBH,kBAAM,GAAG,CAAC,CAACG,YAAY,CAACH,MAAxB;AACA,mBAAOG,YAAY,CAACH,MAApB;AACD;;AACD,cAAMlK,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,cAAM/hB,GAAG,kBAAWuW,EAAX,cAAiBmB,KAAjB,CAAT;AACA;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM7C,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWkE,MAAX,CAAN,cAA4BrL,EAA5B,SAAiCmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAvD,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUlI,GAAV,CAAcuD,GAAd,EAAmBhb,SAAnB,CACE,UAACkD,CAAD,EAAO;AACLwc,sBAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAT;AACD,eAHH,EAIE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eAPH,EAQE,YAAM;AACJrC,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChf,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,IAAsB,IAA7B;AAAA,iBAAlB,EAAsD,IAAtD;AACD,eAXH;AAaD,aAhBqB,CAAtB;AAiBD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;;;4BAKWyhB,S,EAA8C;AAAA;;AAAA,cAA1BM,YAA0B,uEAAF,EAAE;;AACvD;AACA,cAAI,CAAC,KAAKX,SAAL,CAAeoB,QAApB,EAA8B;AAC5B,iBAAKpB,SAAL,CAAeoB,QAAf,GAA0B,IAAItC,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5D,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAc0H,YAAd,CAAd;AACA,kBAAMxE,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,SAAwClK,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA9D,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoB,OAAI,CAACmF,eAAL,CAAqBjB,SAArB,CAApB,EAAqDlf,SAArD,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B;;AACA,uBAAI,CAACoV,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eANH,EAOE,YAAM;AACJrC,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChe,GAAL,CAAS,MAAT,EAAiB,OAAI,CAAC2e,UAAL,CAAgB,OAAI,CAAC5I,GAAL,CAAS,MAAT,CAAhB,EAAkC,CAACiI,MAAD,CAAlC,CAAjB;;AACA,uBAAI,CAACU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B;;AACA,uBAAI,CAACoV,SAAL,CAAeoB,QAAf,GAA0B,IAA1B;AACD,eAZH;AAcD,aAlByB,CAA1B;AAmBD;;AACD,iBAAO,KAAKpB,SAAL,CAAeoB,QAAtB;AACD;AAED;;;;;;;;;;6BAQEjM,E,EACAkK,S,EAE+B;AAAA;;AAAA,cAD/BgB,SAC+B,uEADV,EACU;AAAA,cAA/BoB,MAA+B,uEAAN,MAAM;AAE/B,cAAMnL,KAAK,GAAG,gBAAA2C,aAAA,CAAc,KAAKqI,eAAL,CAAqBjB,SAArB,CAAd,CAAd;AACA,cAAMzhB,GAAG,kBAAWuW,EAAX,cAAiBkK,SAAjB,cAA8B/I,KAA9B,CAAT;AACA;;AACA,cAAI,CAAC,KAAK0J,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM0C,SAAS,GAAG,MAAH,OAAG,CAAH,kBAAQrB,SAAR,CAAG,EAAc;AAAElL,kBAAE,EAAFA,EAAF;AAAMwM,qBAAK,EAAEtC;AAAb,eAAd,CAAlB;AACA,kBAAMlD,GAAG,aAAM,OAAI,CAACG,KAAL,CAAW,KAAX,CAAN,cAA2BnH,EAA3B,cAAiCkK,SAAjC,CAAT;AACA,kBAAIwB,MAAJ;AACA,kBAAMvL,OAAO,GACXmM,MAAM,KAAK,MAAX,GACI,OAAI,CAACX,IAAL,CAAUO,IAAV,CAAelF,GAAf,EAAoBuF,SAApB,CADJ,GAEI,OAAI,CAACZ,IAAL,CAAUlI,GAAV,WAAiBuD,GAAjB,SAAuB7F,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAA7C,EAHN;AAIAhB,qBAAO,CAACnU,SAAR,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAGxc,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,WACK,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EADL,mBACsCyU,SADtC,cAEElK,EAFF;;AAIA,uBAAO,OAAI,CAAC6K,SAAL,CAAephB,GAAf,CAAP;AACD,eATH,EAUE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAACU,cAAL,WACK,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EADL,mBACsCyU,SADtC,eAEElK,EAFF;;AAIA,uBAAI,CAACtT,OAAL,CAAajD,GAAb,EAAkB;AAAA,yBAAM,OAAO,OAAI,CAACohB,SAAL,CAAephB,GAAf,CAAb;AAAA,iBAAlB,EAAoD,IAApD;AACD,eAjBH;AAmBD,aA3BqB,CAAtB;AA4BD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAGD;;;;;;;;;+BAMcuW,E,EAAYkL,S,EAA8C;AAAA;;AAAA,cAA1BM,YAA0B,uEAAF,EAAE;AACtE,cAAM/hB,GAAG,oBAAauW,EAAb,CAAT;AACA;;AACA,cAAI,CAAC,KAAK6K,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAc,OAAI,CAACqI,eAAL,CAAqBX,YAArB,CAAd,CAAd;AACA,kBAAMxE,GAAG,aAAM,OAAI,CAACG,KAAL,CAAWqE,YAAY,CAACH,MAAxB,CAAN,cAAyCrL,EAAzC,SAA8CmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAApE,CAAT;AACA,kBAAIuK,MAAM,GAAM,IAAhB;;AACA,qBAAI,CAACC,IAAL,CAAUc,GAAV,CAAczF,GAAd,EAAmB,OAAI,CAACmF,eAAL,CAAqBjB,SAArB,CAAnB,EAAoDlf,SAApD,CACE,UAACkD,CAAD;AAAA,uBAAQwc,MAAM,GAAG,OAAI,CAACE,OAAL,CAAa1c,CAAb,CAAjB;AAAA,eADF,EAEE,UAACkJ,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;;AACA,uBAAI,CAACgU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B,cAAiEuK,EAAjE;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eANH,EAOE,YAAM;AACJmgB,uBAAO,CAAC8B,MAAD,CAAP;;AACA,uBAAI,CAAChe,GAAL,CACE,MADF,EAEE,OAAI,CAAC2e,UAAL,CAAgB,OAAI,CAACK,UAAL,CAAgB,OAAI,CAACjJ,GAAL,CAAS,MAAT,CAAhB,EAAkC;AAAEzD,oBAAE,EAAFA;AAAF,iBAAlC,CAAhB,EAAkE,CAChE0L,MADgE,CAAlE,CAFF;;AAMA,uBAAI,CAACU,cAAL,kBAA8B,OAAI,CAACpB,KAAL,CAAWvV,WAAX,EAA9B,eAAkEuK,EAAlE;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eAjBH;AAmBD,aAvBqB,CAAtB;AAwBD;;AACD,iBAAO,KAAKohB,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;;gCAIcuW,E,EAA2B;AAAA;;AAAA,cAAfmN,CAAe,uEAAF,EAAE;AACvC,cAAM1jB,GAAG,oBAAauW,EAAb,CAAT;AACA;;AACA,cAAI,CAAC,KAAK6K,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACxB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAkB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3D,kBAAM1I,KAAK,GAAG,gBAAA2C,aAAA,CAAcqJ,CAAd,CAAd;AACA,kBAAMnG,GAAG,aAAM,OAAI,CAACG,KAAL,EAAN,cAAsBnH,EAAtB,SAA2BmB,KAAK,GAAG,MAAMA,KAAT,GAAiB,EAAjD,CAAT;;AACA,qBAAI,CAACwK,IAAL,WAAiB3E,GAAjB,EAAsBhb,SAAtB,CACE,UAAC8Y,CAAD;AAAA,uBAAO,IAAP;AAAA,eADF,EAEE,UAAC1M,CAAD,EAAO;AACLyR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAI,CAACyS,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACD,eALH,EAME,YAAM;AACJ,uBAAI,CAACiE,GAAL,CAAS,MAAT,EAAiB,OAAI,CAACgf,UAAL,CAAgB,OAAI,CAACjJ,GAAL,CAAS,MAAT,CAAhB,EAAkC;AAAEzD,oBAAE,EAAFA;AAAF,iBAAlC,CAAjB;;AACA,uBAAI,CAAC6K,SAAL,CAAephB,GAAf,IAAsB,IAAtB;AACAmgB,uBAAO;AACR,eAVH;AAYD,aAfqB,CAAtB;AAgBD;;AACD,iBAAO,KAAKiB,SAAL,CAAephB,GAAf,CAAP;AACD;AAED;;;;;;+BAGoB;;;;;;;;;;;;AACnB;AAED;;;;;;;uCAIyBuV,M,EAAgBoO,K,EAAgB,CACvD;AACA;AACA;AACD;AAED;;;;;;;gCAIkBC,Q,EAAiB;AACjC,iBAAOA,QAAP;AACD;AAED;;;;;;;;;mCAOEC,Q,EACArhB,I,EACkD;AAAA,cAAlDshB,SAAkD,uEAAb,KAAKzC,QAAQ;;AAElD;AACA,cAAI,CAAC7e,IAAD,IAASA,IAAI,CAACgE,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,mBAAOqd,QAAP;AACD;;AACD,cAAME,QAAQ,GAAQ,EAAtB;AACA,cAAMC,UAAU,gCAAOxhB,IAAP,sBAAgBqhB,QAAhB,EAAhB;AACA;;AACA,cAAI,CAACC,SAAL,EAAgB;AACdA,qBAAS,GAAG,KAAKzC,QAAjB;AACD;;AAXiD,uDAY/B2C,UAZ+B;AAAA;;AAAA;AAAA;AAAA,kBAYvChX,IAZuC;AAahD,kBAAM8M,KAAK,GAAGiK,QAAQ,CAACjc,IAAT,CAAc,UAACnF,CAAD;AAAA,uBAAOmhB,SAAS,CAACnhB,CAAD,EAAIqK,IAAJ,CAAhB;AAAA,eAAd,CAAd;AACA;;AACA,kBAAI,CAAC8M,KAAL,EAAY;AACViK,wBAAQ,CAAC5X,IAAT,CAAca,IAAd;AACD;AAjB+C;;AAYlD,sEAA+B;AAAA;AAM9B;AAlBiD;AAAA;AAAA;AAAA;AAAA;;AAmBlD,iBAAO+W,QAAP;AACD;AAED;;;;;;;;;mCAMqBvhB,I,EAAWwK,I,EAAS8W,S,EAAqC;AAC5E,cAAMC,QAAQ,GAAG,EAAjB;AACA;;AACA,cAAI,CAACD,SAAL,EAAgB;AACdA,qBAAS,GAAG,KAAKzC,QAAjB;AACD;;AACD7e,cAAI,CAACE,OAAL,CAAa,UAACC,CAAD;AAAA,mBAAQmhB,SAAS,CAAC9W,IAAD,EAAOrK,CAAP,CAAT,GAAqB,IAArB,GAA4BohB,QAAQ,CAAC5X,IAAT,CAAcxJ,CAAd,CAApC;AAAA,WAAb;AACA,iBAAOohB,QAAP;AACD;;;4BAxdoB;AACnB,iBAAO,KAAKjJ,SAAL,CAAeoH,IAAtB;AACD;;;4BA4CsB;AACrB,iBAAO,KAAKV,UAAZ;AACD;;;;MAtEqE,OAAA9hB,S;;AAAxE;;;;;;;;;;;;;;;;;;;;ACbA;AAAA;AAAA;;AAEA,QAAY8/B,gBAAZ;;AAAA,eAAYA,gBAAZ,EAA4B;AACxB;AACA;AACA,4CAHwB,CAIxB;;AACA;AACH,KAND,EAAYA,gBAAgB,GAAhB,QAAAA,gBAAA,aAAAA,gBAAA,GAAgB,EAAhB,CAAZ;;AAQA,QAAYyN,UAAZ;;AAAA,eAAYA,UAAZ,EAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KATD,EAAYA,UAAU,GAAV,QAAAA,UAAA,aAAAA,UAAA,GAAU,EAAV,CAAZ;;AAWA,QAAYtN,YAAZ;;AAAA,eAAYA,YAAZ,EAAwB;AACpB;AACA;AACH,KAHD,EAAYA,YAAY,GAAZ,QAAAA,YAAA,aAAAA,YAAA,GAAY,EAAZ,CAAZ;;AAKA,QAAYE,aAAZ;;AAAA,eAAYA,aAAZ,EAAyB;AACrB;AACA;AACH,KAHD,EAAYA,aAAa,GAAb,QAAAA,aAAA,aAAAA,aAAA,GAAa,EAAb,CAAZ;;AAiBA,QAAYqN,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACjB;AACA;AACH,KAHD,EAAYA,SAAS,GAAT,QAAAA,SAAA,aAAAA,SAAA,GAAS,EAAT,CAAZ;;AAqBa,YAAAC,8BAAA,GAAiC,UAACrY,MAAD,EAA6B;AACvE,cAAQA,MAAR;AACI,aAAK0K,gBAAgB,CAAC4N,KAAtB;AACI,iBAAO,MAAP;;AACJ,aAAK5N,gBAAgB,CAACW,MAAtB;AACI,iBAAO,OAAP;;AACJ,aAAKX,gBAAgB,CAAC6N,gBAAtB;AACI,iBAAO,QAAP;;AACJ;AACI,iBAAO,MAAP;AARR;AAUH,KAXY;AAab;;;;;AAGa,YAAAC,gBAAA,GAAmB,UAAChpC,IAAD,EAAyE;AAAA,UAA1DipC,MAA0D,uEAAvB,EAAuB;AAAA,UAC7FljB,WAD6F,GAC7EkjB,MAD6E,CAC7FljB,WAD6F;AAErG,UAAImjB,UAAU,GAAG,UAAAz/B,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,MAAjC,EAAyC7I,QAAzC,CAAkD;AAAC2uB,YAAI,EAAG;AAAR,OAAlD,CAAjB,CAFqG,CAErB;;AAChF,UAAM2Z,SAAS,GAAoB,EAAnC;;AACA,WAAK,IAAI9qC,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAI,CAArB,EAAwBA,GAAC,EAAzB,EAA6B;AACzB,YAAM+qC,UAAU,GAAG,IAAI,UAAAl4B,MAAJ,CAAW;AAAClR,cAAI,EAAJA,IAAD;AAAO+lB,qBAAW,EAAXA,WAAP;AAAoBD,qBAAW,EAAE;AAAjC,SAAX,CAAnB;AACA,YAAMujB,MAAM,GAAGD,UAAU,CAAC5X,WAAX,KAA2BnzB,GAA1C;AACA,YAAMirC,SAAS,GAAGJ,UAAU,CAAC5nC,UAAX,CAAsB,MAAtB,CAAlB;AACA,YAAMioC,SAAS,GAAGlrC,GAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,GAAhC,CAJyB,CAIS;;AAClC8qC,iBAAS,CAACthC,IAAV,CAAe;AAACoK,YAAE,EAAEq3B,SAAS,CAACj8B,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAL;AAAgCg8B,gBAAM,EAANA,MAAhC;AAAwCE,mBAAS,EAATA,SAAxC;AAAmDD,mBAAS,EAAEA,SAAS,CAAC7+B,iBAAV;AAA9D,SAAf;AACAy+B,kBAAU,GAAGA,UAAU,CAACroC,QAAX,CAAoB;AAAE2uB,cAAI,EAAG;AAAT,SAApB,CAAb;AACH;;AACD,aAAO2Z,SAAP;AACH,KAbY;;AAeA,YAAAK,oBAAA,GAAuB,UAACtrC,IAAD,EAAyB;AACzD,aAAOA,IAAI,CAACyF,MAAL,CAAY,UAACwE,CAAD,EAAIC,CAAJ,EAAU;AAAE,eAAOD,CAAC,CAAC+uB,YAAF,CAAe9uB,CAAf,IAAoBD,CAApB,GAAwBC,CAA/B;AAAmC,OAA3D,CAAP;AACH,KAFY;;AAIA,YAAAqhC,mBAAA,GAAsB,UAACvrC,IAAD,EAAyB;AACxD,aAAOA,IAAI,CAACyF,MAAL,CAAY,UAACwE,CAAD,EAAIC,CAAJ,EAAU;AAAE,eAAOD,CAAC,CAACgvB,WAAF,CAAc/uB,CAAd,IAAmBD,CAAnB,GAAuBC,CAA9B;AAAkC,OAA1D,CAAP;AACH,KAFY;;AAIA,YAAAshC,iBAAA,GAAoB,UAACC,MAAD,EAAuC;AACpE,UAAMne,GAAG,GAAG,QAAAie,mBAAA,CAAoBE,MAAM,CAACzrC,IAA3B,EAAiCoD,UAAjC,CAA4C,iBAA5C,CAAZ;;AACA,UAAMsoC,SAAS,GAAG,SAAZA,SAAY,CAACpZ,MAAD,EAAoB;AAClC,YAAGmZ,MAAM,CAAC7Z,QAAP,KAAoB,CAAvB,EAAyB;AACrB,wCAAuBU,MAAvB,oBAAuChF,GAAvC;AACH,SAFD,MAEK;AACD,wCAAuBme,MAAM,CAAC7Z,QAA9B,cAA0CU,MAA1C,qBAA2DhF,GAA3D;AACH;AACJ,OAND;;AAQA,cAAQme,MAAM,CAACnZ,MAAf;AACI,aAAK0K,gBAAgB,CAAC4N,KAAtB;AACI,iBAAOc,SAAS,CAAC,KAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAACW,MAAtB;AACI,iBAAO+N,SAAS,CAAC,MAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAAC6N,gBAAtB;AACI,iBAAOa,SAAS,CAAC,OAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAACC,IAAtB;AACI,0DAAyC,QAAAsO,mBAAA,CAAoBE,MAAM,CAACzrC,IAA3B,EAAiCoD,UAAjC,CAA4C,iBAA5C,CAAzC;;AACJ;AACI,iBAAO,EAAP;AAVR;AAYH,KAtBY;;AAwBA,YAAAuoC,0BAAA,GAA6B,UAACF,MAAD,EAAgD;AACtF,UAAMne,GAAG,GAAGme,MAAM,CAACne,GAAnB;AACA,UAAMtrB,KAAK,GAAG,IAAI,UAAAgR,MAAJ,CAAW;AAAElR,YAAI,EAAE2pC,MAAM,CAACzpC;AAAf,OAAX,CAAd;;AAEA,UAAM0pC,SAAS,GAAG,SAAZA,SAAY,CAACpZ,MAAD,EAAoB;AAClC,YAAGmZ,MAAM,CAAC7Z,QAAP,KAAoB,CAAvB,EAAyB;AACrB,wCAAuBU,MAAvB,wBAA2CtwB,KAAK,CAACoB,UAAN,CAAiB,aAAjB,CAA3C,oBAAoFkqB,GAAG,CAAClqB,UAAJ,CAAe,aAAf,CAApF;AACH,SAFD,MAEK;AACD,wCAAuBqoC,MAAM,CAAC7Z,QAA9B,cAA0CU,MAA1C,yBAA+DtwB,KAAK,CAACoB,UAAN,CAAiB,aAAjB,CAA/D,oBAAwGkqB,GAAG,CAAClqB,UAAJ,CAAe,aAAf,CAAxG;AACH;AACJ,OAND;;AAQA,cAAQqoC,MAAM,CAACnZ,MAAf;AACI,aAAK0K,gBAAgB,CAAC4N,KAAtB;AACI,iBAAOc,SAAS,CAAC,KAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAACW,MAAtB;AACI,iBAAO+N,SAAS,CAAC,MAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAAC6N,gBAAtB;AACI,iBAAOa,SAAS,CAAC,OAAD,CAAhB;;AACJ,aAAK1O,gBAAgB,CAACC,IAAtB;AACI;;AACJ;AACI,iBAAO,EAAP;AAVR;AAYH,KAxBY;;AA0BA,YAAA5F,sBAAA,GAAyB,UAACpQ,IAAD,EAAmB;AACrD,UAAGA,IAAI,CAAC8P,YAAR,EAAqB;AACjB,YAAG9P,IAAI,CAAC4P,iBAAL,KAA2BmG,gBAAgB,CAACC,IAA/C,EAAoD;AAChD,iBAAOhW,IAAI,CAAC+P,iBAAZ;AACA,iBAAO/P,IAAI,CAACuP,gBAAZ;;AACA,cAAGvP,IAAI,CAAC4P,iBAAL,KAA2BmG,gBAAgB,CAACW,MAA/C,EAAsD;AAClD,mBAAO1W,IAAI,CAACqP,eAAZ;AACH;AACJ,SAND,MAMO,IAAGrP,IAAI,CAAC4P,iBAAR,EAA0B;AAC7B5P,cAAI,CAACqQ,eAAL,sBAA2B,CAACrQ,IAAI,CAAC+P,iBAAL,IAA0B,EAA3B,EAA+BrvB,GAA/B,CAAmC,UAAC7F,IAAD;AAAA,mBAAkBA,IAAI,CAAC0J,YAAL,CAAkB,QAAlB,EAA4BgI,OAA9C;AAAA,WAAnC,CAA3B;AACA,iBAAOyT,IAAI,CAAC2P,mBAAZ;AACA,iBAAO3P,IAAI,CAACuP,gBAAZ;AACA,iBAAOvP,IAAI,CAACoP,gBAAZ;AACA,iBAAOpP,IAAI,CAAC+P,iBAAZ;AACA,iBAAO/P,IAAI,CAACqP,eAAZ;AACH;;AACD,eAAOrP,IAAI,CAAC8P,YAAZ;AACH,OAhBD,MAgBK;AACD,eAAO9P,IAAI,CAAC4P,iBAAZ;AACA,eAAO5P,IAAI,CAAC2P,mBAAZ;AACA,eAAO3P,IAAI,CAACuP,gBAAZ;AACA,eAAOvP,IAAI,CAACoP,gBAAZ;AACA,eAAOpP,IAAI,CAAC+P,iBAAZ;AACA,eAAO/P,IAAI,CAAC8P,YAAZ;AACA,eAAO9P,IAAI,CAACyP,qBAAZ;AACA,eAAOzP,IAAI,CAACqP,eAAZ;AACH;;AAED,aAAOrP,IAAP;AACH,KA7BY;AA+Bb;;;AACa,YAAA2kB,uBAAA,GAA0B,UAACpuB,IAAD,EAAoB;;;AACvD,UAAG,OAAAA,IAAI,CAACquB,QAAL,CAAc94B,MAAd,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE/N,KAAtB,MAAgCm4B,YAAY,CAACC,KAAhD,EAAuD;AACnD,YAAM0O,EAAE,GAAGtuB,IAAI,CAACquB,QAAL,CAAc1a,UAAd,CAAyBnsB,KAAzB,CAA+B,CAA/B,EAAkC0B,QAA7C;AACA,YAAMqlC,QAAQ,GAAG,IAAI,UAAA/4B,MAAJ,CAAW;AAAE4U,qBAAW,EAAE,KAAf;AAAsBC,qBAAW,EAAEikB;AAAnC,SAAX,CAAjB;AACA,YAAM/O,WAAW,GAAGvf,IAAI,CAACquB,QAAL,CAAc7U,iBAAd,CAAgChyB,KAAhC,CAAsC0D,MAAtC,CAA6C,UAAC5G,IAAD;AAAA,iBAC7DiqC,QAAQ,CAAC/S,YAAT,CAAsBl3B,IAAtB,EAA4B,KAA5B,KAAsCiqC,QAAQ,CAAC9N,UAAT,CAAoBn8B,IAApB,EAA0B,KAA1B,CADuB;AAAA,SAA7C,CAApB;AAGA0b,YAAI,CAACquB,QAAL,CAAc7U,iBAAd,CAAgCt0B,QAAhC,CAAyCq6B,WAAzC;;AANmD,oCAO5B,QAAAiP,2BAAA,CAA4BjP,WAA5B,EAAyC+O,EAAzC,CAP4B;AAAA,YAO3C9pC,KAP2C,yBAO3CA,KAP2C;AAAA,YAOpCsrB,GAPoC,yBAOpCA,GAPoC;;AAQnD9P,YAAI,CAACquB,QAAL,CAAcppC,MAAd,CAAqBC,QAArB,CAA8BV,KAA9B;AACAwb,YAAI,CAACquB,QAAL,CAAcrV,gBAAd,CAA+B9zB,QAA/B,CAAwC4qB,GAAxC;AACH;AACJ,KAZY;AAcb;;;;;AAGc,YAAA0e,2BAAA,GAA8B,UAACC,KAAD,EAAuBH,EAAvB,EAAmE;AAC3G,UAAGG,KAAK,CAACjoC,MAAN,KAAiB,CAApB,EAAsB;AAClB,eAAO;AACHhC,eAAK,EAAEiqC,KAAK,CAACjiC,IAAN,CAAW,UAACuzB,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,CAAC9xB,EAAH,GAAQ+xB,EAAE,CAAC/xB,EAAvB;AAAA,WAAX,EAAsC,CAAtC,CADJ;AAEH6hB,aAAG,EAAE2e,KAAK,CAACjiC,IAAN,CAAW,UAACuzB,EAAD,EAAKC,EAAL;AAAA,mBAAYA,EAAE,CAAC/xB,EAAH,GAAQ8xB,EAAE,CAAC9xB,EAAvB;AAAA,WAAX,EAAsC,CAAtC;AAFF,SAAP;AAIH,OAN0G,CAO3G;;;AACA,UAAM8b,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B4/B,EAA3B,CAAZ;AACA,aAAO;AAAC9pC,aAAK,EAAEulB,GAAR;AAAa+F,WAAG,EAAE/F,GAAG,CAAC5kB,QAAJ,CAAa;AAAC2uB,cAAI,EAAE;AAAP,SAAb;AAAlB,OAAP;AACH,KAVa;;AAYD,YAAA4a,uBAAA,GAA0B,UAAC1uB,IAAD,EAAqB;AAAA,wBAClBA,IAAI,CAACxY,KADa;AAAA,UAChDgyB,iBADgD,eAChDA,iBADgD;AAAA,UAC7Bv0B,MAD6B,eAC7BA,MAD6B;AAExD,UAAMzC,IAAI,GAAG,CAACg3B,iBAAiB,IAAI,EAAtB,EAA0BrvB,GAA1B,CAA8B,UAAC7F,IAAD;AAAA,eAAkBA,IAAI,CAACY,QAAL,CAAc;AAAC0B,cAAI,EAAE3B,MAAM,CAAC0pC,QAAd;AAAwBhqC,gBAAM,EAAEM,MAAM,CAACF;AAAvC,SAAd,CAAlB;AAAA,OAA9B,CAAb;AACAib,UAAI,CAACquB,QAAL,CAAc7U,iBAAd,CAAgCt0B,QAAhC,CAAyC1C,IAAzC;AACH,KAJY;;;;;;;;;;;;;;;;;;;;;;;;;ACxNb;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;QAEaosC,M;AAMT,wBAAoC;AAAA,YAAxBnvB,QAAwB,uEAAJ,EAAI;;AAAA;;AAChC,aAAKlW,IAAL,GAAYkW,QAAQ,CAAClW,IAAT,IAAiB,EAA7B;AACA,aAAKkgB,IAAL,GAAY,KAAKolB,SAAL,CAAepvB,QAAQ,CAACgK,IAAxB,CAAZ;AACH;AAED;;;;;;AAMA;sCAC+C;AAAA,cAA5BppB,IAA4B,uEAAb,aAAa;AAC3C,iBAAA4P,YAAA,CAAa5P,IAAb,EAAmB,OAAA8Q,SAAA,CAAU,KAAKsY,IAAf,CAAnB;AACH;AAED;;;;uCACiD;AAAA,cAA7BppB,IAA6B,uEAAd,cAAc;AAC7C,iBAAA4P,YAAA,CAAa5P,IAAb,EAAmBwM,IAAI,CAACE,SAAL,CAAe,KAAK0c,IAApB,EAA0BljB,SAA1B,EAAqC,CAArC,CAAnB;AACH;;;0CAEwBmP,K,EAAe;AACpC,cAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKnP,SAAhC,EAA2C;AACvC,gBAAIlG,IAAI,GAAGqV,KAAK,CAACpP,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAX;AACAjG,gBAAI,GAAGA,IAAI,CAACiG,KAAL,CAAW,GAAX,EAAgBqH,IAAhB,CAAqB,GAArB,CAAP,CAFuC,CAEL;;AAClCtN,gBAAI,GAAGA,IAAI,CAACkN,OAAL,CAAa,QAAb,EAAuB,UAAUuhC,GAAV,EAAe;AACzC,+BAAUA,GAAG,CACRC,MADK,CACE,CADF,EAELr7B,WAFK,EAAV,SAEqBo7B,GAAG,CAAC7I,MAAJ,CAAW,CAAX,EAAcj6B,WAAd,EAFrB;AAGH,aAJM,CAAP;AAKA,mBAAO3L,IAAP;AACH,WATD,MASO;AACH,mBAAOqV,KAAP;AACH;AACJ;;;sCAEqBs5B,c,EAAsB;AACxC,cAAIviC,CAAC,GAAG,IAAIvI,IAAJ,CAAS8qC,cAAc,GAAG,IAA1B,CAAR;AACA,cAAIzS,MAAM,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,CAAb;AACA,cAAI51B,IAAI,GAAG8F,CAAC,CAAC7D,WAAF,EAAX;AACA,cAAIlC,KAAK,GAAG61B,MAAM,CAAC9vB,CAAC,CAACwiC,QAAF,EAAD,CAAlB;AACA,cAAI3qC,IAAI,GAAGmI,CAAC,CAAC/D,OAAF,EAAX;AACA,cAAI9B,IAAI,GAAI,CAAC6F,CAAC,CAACyiC,QAAF,KAAe,EAAhB,IAAsB,EAAtB,GAA2B,CAAvC;AACA,cAAIC,MAAM,GAAG1iC,CAAC,CAACyiC,QAAF,MAAgB,EAAhB,GAAqB,IAArB,GAA0B,IAAvC;AACA,cAAIrO,GAAG,GAAGp0B,CAAC,CAAC2iC,UAAF,EAAV;AACA,cAAIthC,IAAI,GAAGxJ,IAAI,GAAG,GAAP,GAAaoC,KAAb,GAAqB,GAArB,GAA2BC,IAA3B,GAAkC,KAAlC,GAA0CC,IAA1C,GAAiD,GAAjD,GAAuDi6B,GAAvD,GAA6D,GAA7D,GAAmEsO,MAA9E;AACA,iBAAOrhC,IAAP;AACH;;;oCAEiC;AAAA;;AAAA,cAAhB2b,IAAgB,uEAAJ,EAAI;;AAC9B,cAAIA,IAAI,CAACjjB,MAAL,GAAc,CAAd,IAAmB,KAAK+C,IAAL,KAAc,KAArC,EAA4C;AACxC,iBAAK,IAAI5G,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,IAAI,CAACjjB,MAAzB,EAAiC7D,GAAC,EAAlC,EAAsC;AAClC8mB,kBAAI,CAAC9mB,GAAD,CAAJ,CAAQ,QAAR,IAAoB8mB,IAAI,CAAC9mB,GAAD,CAAJ,CAAQ,QAAR,EAAkBtC,IAAtC;AACAopB,kBAAI,CAAC9mB,GAAD,CAAJ,CAAQ,oBAAR,IAAgC2O,MAAM,CAACsnB,MAAP,CAAcnP,IAAI,CAAC9mB,GAAD,CAAJ,CAAQ,oBAAR,CAAd,EAA6C,CAA7C,CAAhC;AACH;AACJ,WALD,MAKO,IAAI8mB,IAAI,CAACjjB,MAAL,GAAc,CAAd,IAAmB,KAAK+C,IAAL,KAAc,OAArC,EAA8C;AACjD,iBAAK,IAAI5G,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,IAAI,CAACjjB,MAAzB,EAAiC7D,GAAC,EAAlC,EAAsC;AAClC8mB,kBAAI,CAAC9mB,GAAD,CAAJ,CAAQ,YAAR,IAAwB,KAAK0sC,aAAL,CAAmB5lB,IAAI,CAAC9mB,GAAD,CAAJ,CAAQ,YAAR,CAAnB,CAAxB;AACH;AACJ,WAJM,MAIA,IAAI8mB,IAAI,CAACjjB,MAAL,GAAc,CAAd,IAAmB,KAAK+C,IAAL,KAAc,UAArC,EAAiD;AACpD,iBAAK,IAAI5G,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,IAAI,CAACjjB,MAAzB,EAAiC7D,GAAC,EAAlC,EAAsC;AAClC8mB,kBAAI,CAAC9mB,GAAD,CAAJ,CAAQ,cAAR,IAA0B,KAAK2sC,iBAAL,CACtB7lB,IAAI,CAAC9mB,GAAD,CAAJ,CAAQ,cAAR,CADsB,CAA1B;AAGH;;AACD,gBAAMkJ,MAAM,GAAGyF,MAAM,CAACpH,IAAP,CAAYuf,IAAI,CAAC,CAAD,CAAhB,CAAf;AACA,gBAAM8lB,UAAU,GAAG1jC,MAAM,CAAC/D,IAAP,CACf,UAAC9H,GAAD;AAAA,qBACIA,GAAG,CAACgM,WAAJ,GAAkB2R,QAAlB,CAA2B,MAA3B,KACA3d,GAAG,CAACgM,WAAJ,GAAkB2R,QAAlB,CAA2B,OAA3B,CAFJ;AAAA,aADe,CAAnB;AAKA,gBAAM6xB,WAAW,GAAG3jC,MAAM,CAAC/D,IAAP,CAAY,UAAC9H,GAAD;AAAA,qBAC5BA,GAAG,CAACgM,WAAJ,GAAkB2R,QAAlB,CAA2B,OAA3B,CAD4B;AAAA,aAAZ,CAApB;;AAZoD,yDAgBpC8L,IAhBoC;AAAA;;AAAA;AAgBpD,wEAAsB;AAAA,oBAAbgmB,GAAa;;AAClB;AACA,oBAAMC,aAAa,GAAG,wBAAA3uB,cAAA,CAAeC,UAAf,CAA0B,SAAAiG,KAA1B,CAAtB;;AACA,oBAAIsoB,UAAU,IAAIC,WAAd,IAA6BE,aAAjC,EAAgD;AAAA;AAC5C,wBAAMpa,IAAI,GAAGoa,aAAa,CAAC5nC,IAAd,CACT2nC,GAAG,CAACF,UAAD,CAAH,CAAgBvjC,WAAhB,EADS,CAAb;AAGA,wBAAM2jC,WAAW,GAAG,wBAAA5uB,cAAA,CAAeC,UAAf,CAA0B,eAAA2nB,YAA1B,CAApB;AACA,wBAAMM,GAAG,GAAG0G,WAAW,CAACv2B,SAAZ,CAAsBtR,IAAtB,CACR,UAACmhC,GAAD,EAAqB;AAAA;;AACjB,6BAAAA,GAAG,CAAC1yB,EAAJ,MAAM,MAAK+e,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAExH,KAAX,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEob,WAAxB;AAAmC,qBAF/B,CAAZ;AAIAuG,uBAAG,CAACD,WAAD,CAAH,GAAmB,IAAI,SAAAI,YAAJ,CAAiB,OAAjB,EAA0BC,SAA1B,CACfJ,GAAG,CAACD,WAAD,CAAH,GAAmB,GADJ,EAEfvG,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAE6B,QAFU,CAAnB;AAT4C;AAa/C;AACD;;;AAjBkB,6DAkBAj/B,MAlBA;AAAA;;AAAA;AAkBlB,4EAA0B;AAAA,wBAAjBwB,KAAiB;AACtBoiC,uBAAG,CAACpiC,KAAD,CAAH,GACI,OAAOoiC,GAAG,CAACpiC,KAAD,CAAV,KAAsB,QAAtB,GACMoiC,GAAG,CAACpiC,KAAD,CAAH,CAAWE,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CADN,GAEMkiC,GAAG,CAACpiC,KAAD,CAHb;AAIH;AAvBiB;AAAA;AAAA;AAAA;AAAA;AAwBrB;AAxCmD;AAAA;AAAA;AAAA;AAAA;AAyCvD,WAzCM,MAyCA,IAAI,KAAK9D,IAAL,KAAc,UAAlB,EAA8B;AACjCkgB,gBAAI,GAAGA,IAAI,CAACtf,GAAL,CAAS,UAACxH,CAAD,EAAgB;;;AAC5B,kBAAMsW,OAAO,GAAGtW,CAAhB;;AACA,kBAAI;AACA,oBAAIsW,OAAO,CAACsF,KAAR,YAAyBjN,MAA7B,EAAqC;AACjC2H,yBAAO,CAACsF,KAAR,GAAgBtF,OAAO,CAACsF,KAAR,CAActF,OAAO,CAAC+b,UAAtB,CAAhB;AACH;;AACD,oBAAI/b,OAAO,CAACuX,SAAR,YAA6Blf,MAAjC,EAAyC;AACrC2H,yBAAO,CAACuX,SAAR,GACIvX,OAAO,CAACuX,SAAR,CAAkBvX,OAAO,CAAC+b,UAA1B,CADJ;AAEH;;AACD/b,uBAAO,CAACsF,KAAR,GAAgB,OAAAjT,gBAAA,CAAiB,CAAC2N,OAAO,CAACsF,KAAR,IAAiB,CAAlB,IAAuB,EAAxC,CAAhB;AACAtF,uBAAO,CAACuX,SAAR,GAAoB,OAAAllB,gBAAA,CAChB,CAAC2N,OAAO,CAACuX,SAAR,IAAqB,CAAtB,IAA2B,EADX,CAApB;AAGAvX,uBAAO,CAAC4rB,WAAR,GAAsB,CAAC5rB,OAAO,CAAC4rB,WAAR,IAAuB,EAAxB,EACjBt3B,OADiB,CACT,YADS,EACK,EADL,EAEjBA,OAFiB,CAET,KAFS,EAEF,GAFE,EAGjBA,OAHiB,CAGT,WAHS,EAGI,GAHJ,CAAtB;AAIA0L,uBAAO,CAAC,cAAD,CAAP,GACI,OAAAA,OAAO,CAAC62B,SAAR,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEzvC,IAAnB,KAA2B4Y,OAAO,CAAC62B,SADvC;AAEA72B,uBAAO,CAAC,WAAD,CAAP,GACI,OAAAA,OAAO,CAACke,SAAR,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE92B,IAAnB,MAAuB,MACvB4Y,OAAO,CAACke,SADe,MACN,IADM,IACN,aADM,GACN,MADM,GACN,GAAEzhB,KADnB,KAEA,EAHJ;AAIAuD,uBAAO,CAACytB,WAAR,GACIztB,OAAO,CAACoe,eAAR,CAAwBpe,OAAO,CAAC+b,UAAhC,KAA+C,EADnD,CAtBA,CAwBA;;AACA/b,uBAAO,CAAC+d,SAAR,GAAoB,CAAC/d,OAAO,CAAC+d,SAAR,IAAqB,EAAtB,EACf7sB,GADe,CACX,UAAC4lC,MAAD;AAAA,yBAAYA,MAAM,CAAC1vC,IAAP,IAAe0vC,MAAM,CAACr6B,KAAtB,IAA+Bq6B,MAA3C;AAAA,iBADW,EAEfpiC,IAFe,CAEV,IAFU,CAApB;AAGAsL,uBAAO,CAACme,KAAR,GAAgB,CAACne,OAAO,CAACme,KAAR,IAAiB,EAAlB,EACXjtB,GADW,CACP,UAACyvB,IAAD;AAAA,yBACDA,IAAI,CAACH,MAAL,KACCG,IAAI,CAACrwB,IAAL,KAAc,aAAd,IACGqwB,IAAI,CAACrwB,IAAL,KAAc,SAFlB,eAGUqwB,IAAI,CAACH,MAHf,cAGyBG,IAAI,CAACrwB,IAH9B,cAGsCqwB,IAAI,CAACpe,OAAL,CAC3BjO,OAD2B,CACnB,YADmB,EACL,EADK,EAE3BA,OAF2B,CAEnB,KAFmB,EAEZ,GAFY,EAG3BA,OAH2B,CAGnB,WAHmB,EAGN,GAHM,CAHtC,IAOM,EARL;AAAA,iBADO,EAWXI,IAXW,CAWN,KAXM,CAAhB;AAYAsL,uBAAO,CAACjB,SAAR,GAAoBiB,OAAO,CAAC+2B,WAA5B;AACA/2B,uBAAO,CAACoP,MAAR,GAAiBpP,OAAO,CAACoP,MAAR,CAAepP,OAAO,CAAC+b,UAAvB,KAAsC,EAAvD;AACA/b,uBAAO,CAACwe,OAAR,GAAkBxe,OAAO,CAACwe,OAAR,CAAgB9pB,IAAhB,CAAqB,IAArB,CAAlB;;AACA,oBAAIsL,OAAO,CAACg3B,YAAZ,EAA0B;AACtBh3B,yBAAO,CAACg3B,YAAR,GAAuB,OAAI,CAACX,iBAAL,CACnBr2B,OAAO,CAACg3B,YADW,CAAvB;AAGH;;AACD,oBAAIh3B,OAAO,CAAC+2B,WAAZ,EAAyB;AACrB/2B,yBAAO,CAACi3B,kBAAR,GAA6B,IAAIhsC,IAAJ,CACzB+U,OAAO,CAACi3B,kBAAR,GAA6B,IADJ,EAE3BvnC,cAF2B,EAA7B;AAGH;;AACDsQ,uBAAO,CAACk3B,cAAR,GAAyBl3B,OAAO,CAACi3B,kBAAjC;AACH,eAtDD,CAsDE,OAAOvhC,CAAP,EAAU,CAAE;;AACd,kBAAMyhC,aAAa,GAAG,CAClB,IADkB,EAElB,SAFkB,EAGlB,aAHkB,EAIlB,aAJkB,EAKlB,WALkB,EAMlB,WANkB,EAOlB,SAPkB,EAQlB,cARkB,EASlB,cATkB,EAUlB,WAVkB,EAWlB,eAXkB,EAYlB,aAZkB,EAalB,oBAbkB,EAclB,UAdkB,EAelB,aAfkB,EAgBlB,MAhBkB,EAiBlB,SAjBkB,EAkBlB,sBAlBkB,EAmBlB,cAnBkB,EAoBlB,WApBkB,EAqBlB,WArBkB,EAsBlB,WAtBkB,EAuBlB,qBAvBkB,EAwBlB,uBAxBkB,EAyBlB,qBAzBkB,EA0BlB,YA1BkB,EA2BlB,aA3BkB,EA4BlB,SA5BkB,EA6BlB,aA7BkB,EA8BlB,gBA9BkB,EA+BlB,SA/BkB,EAgClB,OAhCkB,EAiClB,SAjCkB,EAkClB,MAlCkB,EAmClB,kBAnCkB,EAoClB,UApCkB,EAqClB,gBArCkB,EAsClB,iBAtCkB,EAuClB,oBAvCkB,CAAtB;;AAyCA,kDAAoBA,aAApB,wCAAmC;AAA9B,oBAAM/iC,OAAK,uBAAX;;AACD,oBAAI4L,OAAO,CAAC5L,OAAD,CAAP,KAAmB9G,SAAvB,EAAkC;AAC9B,yBAAO0S,OAAO,CAAC5L,OAAD,CAAd;AACH;AACJ;;AACD,kBAAMgjC,MAAM,GAAG,EAAf;AACA,kBAAMxU,KAAK,GAAG,CACV,OADU,EAEV,OAFU,EAGV,KAHU,EAIV,UAJU,EAKV,cALU,EAMV,WANU,EAOV,SAPU,EAQV,WARU,EASV,SATU,EAUV,aAVU,EAWV,WAXU,EAYV,cAZU,EAaV,gBAbU,CAAd;AAeA,kBAAM3xB,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAY+O,OAAZ,CAAb;AACA/O,kBAAI,CAACsC,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,oBAAM4jC,KAAK,GAAGzU,KAAK,CAACn0B,OAAN,CAAc+E,CAAd,CAAd;AACA,oBAAM8jC,KAAK,GAAG1U,KAAK,CAACn0B,OAAN,CAAcgF,CAAd,CAAd;AACA,uBACI,CAAC4jC,KAAK,KAAK,CAAC,CAAX,GAAepmC,IAAI,CAAC1D,MAApB,GAA6B8pC,KAA9B,KACCC,KAAK,KAAK,CAAC,CAAX,GAAermC,IAAI,CAAC1D,MAApB,GAA6B+pC,KAD9B,CADJ;AAIH,eAPD;;AAQA,0CAAkBrmC,IAAlB,gCAAwB;AAAnB,oBAAMlK,GAAG,eAAT;AACDqwC,sBAAM,CAACrwC,GAAD,CAAN,GAAciZ,OAAO,CAACjZ,GAAD,CAArB;AACH;;AACD,qBAAOqwC,MAAP;AACH,aApIM,CAAP;AAqIH;;AACD,iBAAO5mB,IAAP;AACH;;;gCAtOqBlgB,I,EAAckgB,I,EAAY;AAC5C,cAAM+mB,QAAQ,GAAG,OAAA5/B,SAAA,CAAU6Y,IAAV,CAAjB;AACA,iBAAO,IAAImlB,MAAJ,CAAW;AAAErlC,gBAAI,EAAJA,IAAF;AAAQkgB,gBAAI,EAAE+mB;AAAd,WAAX,CAAP;AACH;;;;;;AAfL;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAKaC,c;;;;;AACT,8BAAsB31B,SAAtB,EACYoG,eADZ,EAC8C;AAAA;;AAAA;;AAC1C,sCAAMpG,SAAN,EAAiBoG,eAAjB;AAFkB,gBAAApG,SAAA,GAAAA,SAAA;AAGlB,gBAAKyG,KAAL,GAAa,SAAb;AACA,gBAAKC,UAAL,GAAkB,SAAlB;AAH0C;AAI7C;;;;gCAEiB/B,Q,EAAa;AAC3B,iBAAOA,QAAQ,YAAYpO,KAApB,GACD,IAAI,eAAAu9B,MAAJ,CAAW;AAAEnlB,gBAAI,EAAEhK;AAAR,WAAX,CADC,GAED,eAAAmvB,MAAA,CAAO8B,OAAP,CAAe,EAAf,EAAmBjxB,QAAnB,CAFN;AAGH;;;;MAZ+B,eAAAwB,c;;AAHpC;;;uBAGawvB,c,EAAc,+B,EAAA,+B;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFX;;;;;2BAEHA,c,EAAc;cAH1B,OAAAt5B,UAG0B;eAHf;AACRoI,oBAAU,EAAE;AADJ,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCSdwB,c;AAuBT,gCAAc;AAAA;;AACV,cAAM,IAAIrgB,KAAJ,CAAU,iCAAV,CAAN;AACH;AArBD;;;;;mCACyB6I,I,EAAiB8mB,O,EAAY;AAClD,cAAIxmB,MAAM,CAACC,KAAX,EAAkB;AACbD,kBAAc,CAACkX,cAAf,GAAgC,KAAK4vB,aAArC;AACJ;;AACD,cAAM/tC,KAAK,GAAGme,cAAc,CAAC4vB,aAAf,CAA6BC,SAA7B,CAAuC,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,UAAT,KAAwBvnC,IAA5B;AAAA,WAA/C,CAAd;;AACA,cAAI3G,KAAK,IAAI,CAAb,EAAgB;AACZme,0BAAc,CAAC4vB,aAAf,CAA6B5/B,MAA7B,CAAoCnO,KAApC,EAA2C,CAA3C,EAA8C;AAAEkuC,wBAAU,EAAEvnC,IAAd;AAAoBwnC,sBAAQ,EAAE1gB;AAA9B,aAA9C;AACH,WAFD,MAEO;AACHtP,0BAAc,CAAC4vB,aAAf,CAA6BxkC,IAA7B,CAAkC;AAAE2kC,wBAAU,EAAEvnC,IAAd;AAAoBwnC,sBAAQ,EAAE1gB;AAA9B,aAAlC;AACH;AACJ;AAED;;;;mCACyB9mB,I,EAAe;AACpC,cAAMsnC,QAAQ,GAAG9vB,cAAc,CAAC4vB,aAAf,CAA6B7oC,IAA7B,CAAkC,UAAA+oC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,UAAT,KAAwBvnC,IAA5B;AAAA,WAA1C,KAA+E;AAAEwnC,oBAAQ,EAAE;AAAZ,WAAhG;AACA,iBAAOF,QAAQ,CAACE,QAAhB;AACH;;;;;;AArBL;AACI;;AACe,mBAAAJ,aAAA,GAAwC,EAAxC;;;;;;;;;;;;;;;;;;;;;;;;ACtBnB;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAQa,YAAAK,cAAA,GAAiB,uBAAjB;;QAwCAC,c,GACT,wBAAmBxnB,IAAnB,EAA4C;AAAA;;AAAzB,WAAAA,IAAA,GAAAA,IAAA;AAClB,K;;AAFL;;QAQauM,e;;;;;AAkDT,+BAAoBrb,MAApB,EAEoBqC,QAFpB,EAE8C;AAAA;;AAAA;;AAC1C;AAHgB,gBAAArC,MAAA,GAAAA,MAAA;AAEA,gBAAAqC,QAAA,GAAAA,QAAA;AAnDpB;;AACQ,gBAAAk0B,SAAA,GAAY,SAAZ;AACR;;AACQ,gBAAAC,UAAA,GAAa,IAAI,OAAApxC,eAAJ,CAA+B,EAA/B,CAAb;AACR;;AACQ,gBAAAkb,SAAA,GAA2C,EAA3C;AACR;;AACQ,gBAAAm2B,YAAA,GAAyC,EAAzC;AA8CJ,gCAAArwB,cAAA,CAAe2hB,UAAf,CAA0B1M,eAA1B;AACA,YAAMloB,IAAI,GAAG,IAAI,UAAA0H,MAAJ,CAAW;AAAClR,cAAI,EAAE,cAAA+sC,OAAA,CAAQvjC;AAAf,SAAX,CAAb;AACA,YAAMwjC,KAAK,GAAG,UAAAvjC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBu8B,UAApB,CAA+B3yB,IAA/B,EAAqC,KAArC,uBACIA,IAAI,CAAClI,UAAL,CAAgB,OAAhB,CADJ,IAERkI,IAAI,CAAClI,UAAL,CAAgB,oBAAhB,CAFN;AAGA,YAAMiZ,QAAQ,GAAG,QAAK7E,GAAL,CAAS,UAAT,KAAwB,SAAzC;AACA,gBAAK6E,QAAL,GAAgBA,QAAhB;AACA,eAAAvV,GAAA,CAAI,MAAJ,YAAe,cAAA+nC,OAAA,CAAQE,MAAvB,GAAiC,IAAjC,EAAuC,OAAvC,EAAgD,IAAhD,EAAsD1yB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEnL,WAAV,EAAtD;AACA,eAAApK,GAAA,CAAI,KAAJ,YAAc,cAAA+nC,OAAA,CAAQG,IAAtB,uBAAuCF,KAAvC,GAAgD,IAAhD,EAAsD,OAAtD,EAA+D,IAA/D,EAAqEzyB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEnL,WAAV,EAArE;;AACA,gBAAK2I,IAAL;;AAX0C;AAY7C;AApDD;;;;;;;;AAOA;+BACuBhc,I,EAAY;AAC/B,cAAI,CAAC,KAAK+wC,YAAL,CAAkB/wC,IAAlB,CAAL,EAA8B;AAC1B,iBAAK4a,SAAL,CAAe5a,IAAf,IAAuB,IAAI,OAAAN,eAAJ,CAAuB,IAAvB,CAAvB;AACA,iBAAKqxC,YAAL,CAAkB/wC,IAAlB,IAA0B,KAAK4a,SAAL,CAAe5a,IAAf,EAAqB8b,YAArB,EAA1B;AACH;;AACD,iBAAO,KAAKi1B,YAAL,CAAkB/wC,IAAlB,CAAP;AACH;AAED;;;;6BACeA,I,EAAcmH,K,EAAQ;AACjC,cAAI,CAAC,KAAK4pC,YAAL,CAAkB/wC,IAAlB,CAAL,EAA8B;AAC1B,iBAAK4a,SAAL,CAAe5a,IAAf,IAAuB,IAAI,OAAAN,eAAJ,CAAuB,IAAvB,CAAvB;AACA,iBAAKqxC,YAAL,CAAkB/wC,IAAlB,IAA0B,KAAK4a,SAAL,CAAe5a,IAAf,EAAqB8b,YAArB,EAA1B;AACH;;AACD,eAAKlB,SAAL,CAAe5a,IAAf,EAAqBoS,IAArB,CAA0BjL,KAA1B;AACH;;;8BAEqBnH,I,EAAY;AAC9B,iBAAO,CAAC,KAAK+wC,YAAL,CAAkB/wC,IAAlB,CAAD,GAA2B,IAA3B,GAAkC,KAAK4a,SAAL,CAAe5a,IAAf,EAAqBS,QAArB,EAAzC;AACH;AAED;;;;;AAyBA;;;+BAGoB;;;;;;;;AAChB,wBAAI,KAAKkZ,GAAL,CAAS,OAAT,CAAJ,EAAuB;AACnBnQ,4BAAM,CAACC,KAAP,GAAe,IAAf;AACH;;AACD,wBAAI,CAAJ,KAAI,KAAKkQ,GAAL,CAAS,KAAT,OAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE3Z,IAArB,EAA2B;AACvB,2BAAK6wC,SAAL,GAAiB,KAAKl3B,GAAL,CAAS,KAAT,EAAgB3Z,IAAjC;AACH;;AACD,2BAAAiJ,GAAA,CAAI,UAAJ,EAAgB,8BAAhB;;AACA,yBAAKxJ,YAAL,CAAkB2S,IAAlB,CAAuB,IAAvB;;;;;;;;;AACH;AAED;;;;;AASA;;;;4BAIWzS,G,EAAW;AAClB,cAAMkK,IAAI,GAAGlK,GAAG,CAACsG,KAAJ,CAAU,GAAV,CAAb;;AACA,cAAI4D,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhB,EAAuB;AACnB,mBAAO,OAAAD,eAAA,CAAgBC,IAAhB,EAAsB,KAAK8S,QAAL,CAAcyM,IAApC,CAAP;AACH;;AACD,cAAMgoB,iBAAiB,GAAG,KAAKN,UAAL,CAAgBrwC,QAAhB,EAA1B;;AALkB,uDAMK2wC,iBANL;AAAA;;AAAA;AAMlB,sEAA0C;AAAA,kBAA/BvK,QAA+B;AACtC,kBAAM1/B,KAAK,GAAG,OAAAyC,eAAA,CAAgBC,IAAI,CAACE,KAAL,CAAW,CAAX,CAAhB,EAA+B88B,QAA/B,CAAd;;AACA,kBAAI1/B,KAAK,IAAI,IAAb,EAAmB;AACf,uBAAOA,KAAP;AACH;AACJ;AAXiB;AAAA;AAAA;AAAA;AAAA;;AAYlB,iBAAO,OAAAyC,eAAA,CAAgBC,IAAhB,EAAsB,KAAK8S,QAAL,CAAcyM,IAApC,CAAP;AACH;;;0BA3FoBjiB,K,EAAkB;AACnC,eAAK2pC,UAAL,CAAgB1+B,IAAhB,CAAqBjL,KAArB;AACH;;;4BAyBkB;AACf,iBAAO,KAAKmT,MAAL,CAAYwE,QAAZ,EAAP;AACH,S;0BAEgB3X,K,EAAe;AAC5B,eAAKmT,MAAL,CAAYuE,QAAZ,WAAwB1X,KAAxB,gBAAmC,KAAK0pC,SAAxC;AACH;;;4BAiCqB;AAClB,iBAAO,KAAKA,SAAZ;AACH;;;4BAEsB;AACnB,iBAAO,KAAKryB,QAAL,KAAkB,WAAzB;AACH;;;;MAvFgC,OAAAnf,S;;AAHrC;;;uBAGas2B,e,EAAe,qB,EAAA,YAmDJ,QAAAgb,cAnDI,C;AAmDU,K;;;aAnDzBhb,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFZ;;;;;2BAEHA,e,EAAe;cAH3B,OAAA7e,UAG2B;eAHhB;AACRoI,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;gBAoDM0xB,c;AAAc;kBAD/B,OAAAS,MAC+B;mBADxB,QAAAV,c;AACwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HhD;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAiDa,YAAAW,eAAA,GAA6C;AACtDtsC,cAAQ,EAAE;AAD4C,KAA7C;AAoDb;;;;;;AAKA,QAAY8e,aAAZ;;AAAA,eAAYA,aAAZ,EAAyB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAnBD,EAAYA,aAAa,GAAb,QAAAA,aAAA,aAAAA,aAAA,GAAa,EAAb,CAAZ;;AAqBA,QAAYytB,eAAZ;;AAAA,eAAYA,eAAZ,EAA2B;AACvB;AACA;AACA;AACA;AACA;AACA;AACH,KAPD,EAAYA,eAAe,GAAf,QAAAA,eAAA,aAAAA,eAAA,GAAe,EAAf,CAAZ;;AAQA,QAAYC,WAAZ;;AAAA,eAAYA,WAAZ,EAAuB;AACnB;AACA;AACA;AACA;AACA;AACA,8DANmB,CAOnB;;AACA;AACA;AACA;AACH,KAXD,EAAYA,WAAW,GAAX,QAAAA,WAAA,aAAAA,WAAA,GAAW,EAAX,CAAZ;;AAaA,QAAMC,WAAW,GAAG,EAApB;;QAEa7qB,K;;;;;AAgET,uBAAoC;AAAA;;AAAA,YAAxBxH,QAAwB,uEAAJ,EAAI;;AAAA;;;;AAChC,sCAAMA,QAAN;AApDJ;;AACO,gBAAAwW,YAAA,GAAwB,KAAxB;AAOP;;;AAEO,gBAAA8b,UAAA,GAAuB,EAAvB;AAEP;;;AAEO,gBAAAC,SAAA,GAAsB,EAAtB,CAqC6B,CAGhC;;AACA,YAAM9wB,eAAe,GAAG,wBAAAH,cAAA,CAAeC,UAAf,CAA0B,mBAAAgV,eAA1B,CAAxB;AACA,gBAAKC,YAAL,GAAoB,CAAC,EAAC/U,eAAe,SAAf,IAAAA,eAAe,WAAf,GAAe,MAAf,GAAAA,eAAe,CAAEQ,SAAlB,CAArB;AAEA,YAAMuwB,iBAAiB,GAAGxyB,QAAQ,CAACpf,IAAT,IAAiBof,QAAQ,CAAC/J,KAA1B,IAAmC,cAA7D;AACA,YAAMw8B,eAAe,GAAG;AACpBC,mBAAS,EAAEF;AADS,SAAxB;AAGA;;;;;;;;;AAQA;;;;;;;;AAOA,gBAAKj1B,QAAL,GAAgByC,QAAQ,CAACzC,QAAT,IAAqBk1B,eAArC;AACA,gBAAKnmC,OAAL,GAAe0T,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE1T,OAAzB,CA3BgC,CA4BhC;;AACA,gBAAKgc,QAAL,GAAgBtI,QAAQ,CAACsI,QAAT,IAAqB,KAArC;AACA,gBAAK8B,QAAL,GAAgBpK,QAAQ,CAACoK,QAAT,IAAqB,CAArC;AACA,gBAAKuoB,WAAL,GAAmB3yB,QAAQ,CAAC2yB,WAA5B;AACA,gBAAKhrB,KAAL,GAAa3H,QAAQ,CAAC2H,KAAT,YAA0B/V,KAA1B,GAAkCoO,QAAQ,CAAC2H,KAA3C,GAAmD,EAAhE,CAhCgC,CAiChC;;AACA,gBAAKirB,QAAL,GAAgB5yB,QAAQ,CAAC4yB,QAAT,IAAqB,EAArC;AACA,gBAAKC,cAAL,GAAsB,OAAA7yB,QAAQ,CAACzC,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEs1B,cAAnB,KAAqC,EAA3D;AAEN,gBAAKC,SAAL,GAAiB9yB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE8yB,SAA3B;AACM,gBAAKC,WAAL,GAAmB/yB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE+yB,WAA7B;AACA,gBAAKjK,MAAL,GAAc,CAAA9oB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE8oB,MAAV,MAAgB,MAAI9oB,QAAQ,CAACzC,QAAb,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEurB,MAAvC,KAAiD,EAA/D;AACA,gBAAKwJ,UAAL,GAAkB,CAAAtyB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEsyB,UAAV,KAAwB,EAA1C;AACA,gBAAKC,SAAL,GAAiB,CAAAvyB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEuyB,SAAV,KAAuB,EAAxC;AAzCgC;AA2CnC;AA5DD;;;;;AAgMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;;gCAGY;AACR,iBAAO,IAAI/qB,KAAJ,CAAU,IAAV,CAAP;AACH;AAED;;;;;;oCAGgB;AACZ,cAAMD,KAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK,IAAL,CAAd;AACAA,eAAK,CAAChK,QAAN,CAAe3I,QAAf,GAA0B,EAA1B,CAFY,CAEkB;;AAC9B,iBAAO,IAAI4S,KAAJ,CAAU,MAAD,OAAC,CAAD,kBAAMD,KAAN,CAAC,EAAU;AAAEzQ,cAAE,EAAE,IAAN;AAAYb,iBAAK,EAAE;AAAnB,WAAV,CAAV,CAAP;AACH;AAED;;;;;;;iCAIgB+Q,O,EAAgC;AAC5C,cAAI,CAAC,KAAK1G,QAAN,IAAkB,CAAC,KAAK+N,KAA5B,EAAmC;AAC/B,mBAAO;AAAEtF,0BAAY,EAAE,IAAhB;AAAsBd,kBAAI,EAAE;AAA5B,aAAP;AACH;;AAED,cAAMP,QAAQ,GAAG,KAAK8O,YAAL,GAAoB,KAAKnI,KAAL,CAAWob,WAA/B,GAA6C,KAAK/hB,QAAnE;;AAEA,cAAI,CAACA,QAAL,EAAe;AACX,mBAAO;AAAEqB,0BAAY,EAAE,IAAhB;AAAsBd,kBAAI,EAAE;AAA5B,aAAP;AACH;;AAT2C,cAUpCziB,MAVoC,GAUTwhB,OAVS,CAUpCxhB,MAVoC;AAAA,cAU5BI,QAV4B,GAUTohB,OAVS,CAU5BphB,QAV4B;AAAA,cAUlB8X,IAVkB,GAUTsJ,OAVS,CAUlBtJ,IAVkB;AAW5C,cAAMkK,KAAK,GAAe,kBAAAC,aAAA,CAAc;AACpCxZ,gBAAI,EAAE7I,MAAM,CAACgJ,EADuB;AAEpC5I,oBAAQ,EAARA,QAFoC;AAGpC2hB,iBAAK,EAAE,IAH6B;AAIpCvK,gBAAI,EAAEU,IAJ8B;AAKpCkK,iBAAK,EAAEF,QAAQ,CAACI;AALoB,WAAd,CAA1B;AAOA,iBAAOF,KAAP;AACH;AAED;;;;;;;kCAIiBZ,O,EAAkC;AAC/C,cAAMY,KAAK,GAAG,KAAKorB,QAAL,CAAchsB,OAAd,CAAd;AACA,iBAAO,CAACY,KAAK,CAACmB,YAAd;AACH;AAED;;;;;;iCAGa;AACT,iBAAO,MAAP,OAAO,CAAP,oFAAO,EAAmB;AAAExL,oBAAQ,EAAE,MAAF,OAAE,CAAF,kBAAO,KAAKA,QAAZ,CAAE,EAAkB;AAAE3I,sBAAQ,EAAE;AAAZ,aAAlB,CAAZ;AAAgDtI,mBAAO,EAAE,MAAF,OAAE,CAAF,EAAE,EAAK,KAAKA,OAAV,CAAzD;AAA8EimC,qBAAS,qBAAO,KAAKA,SAAZ;AAAvF,WAAnB,CAAP;AACH;;;4BAhQwB;AACrB,iBAAO,wBAAAjxB,cAAA,CAAeC,UAAf,CAA0B,eAAAooB,QAA1B,CAAP;AACH;AAED;;;;4BACsB;AAAA;;;;AAClB,iBAAO,CAAP,KAAO,KAAKrpB,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE3G,SAAF,CAAYtR,IAAZ,CAAiB,UAACmhC,GAAD,EAAS;AAC1C,mBAAO,OAAI,CAAC7hB,KAAL,CAAWzJ,QAAX,CAAoBsrB,GAAG,CAAC1yB,EAAxB,CAAP;AACH,WAFmB,CAApB;AAGH;AAED;;;;4BACsB;;;AAClB,iBAAO,CAAP,KAAO,KAAK4Q,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEje,QAAtB;AACH;AA+CD;;;;;;;4BAIsB;AAClB,iBAAO,KAAK7I,IAAL,IAAa,EAApB;AACH;AAED;;;;;;;;4BAKqB;;;AACjB,iBAAO,KAAKmyC,WAAL,KAAgB,MAAI,KAAKx1B,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEm1B,SAAnC,KAAgD,KAAK9xC,IAArD,IAA6D,EAApE;AACH;;;4BAEyB;AACtB,iBAAO,KAAK8mB,QAAL,aAAmB,KAAKA,QAAL,CAAcwF,OAAjC,eAA6C,KAAKxF,QAAL,CAAcpN,IAA3D,IAAoE,EAA3E;AACH;AAED;;;;AAIA;AACA;AACA;;AAEA;;;;4BAC+B;;;AAC3B,cAAOuhB,QAAQ,SAAI,KAAKvvB,OAAT,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEuvB,QAAjC;AACA,iBAAO,CAAEA,QAAQ,GAAG,UAAH,GAAgB,CAAD,KAAC,KAAKte,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEkL,oBAAzC,KAAmE,UAA1E;AACH;AAED;;;;;;;;;4BAMoB;;;AAChB,iBAAO,CAAP,WAAO,KAAKlL,QAAZ,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEsT,SAAf,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,EAAxB,GAA4B,KAAnC;AACH;;;4BAE0B;;;AACvB,cAAMoiB,KAAK,GAAG,IAAI,UAAAl9B,MAAJ,CAAW;AAAElR,gBAAI,EAAE,QAAA2C,QAAA,CAAS8iB,GAAT,EAAR;AAAwBK,uBAAW,EAAE,KAArC;AAA4CC,uBAAW,EAAE,KAAKnhB;AAA9D,WAAX,EAAqF+E,EAAnG;AACA,cAAM0kC,eAAe,GAAG,CAAH,WAAG,KAAK31B,QAAR,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE3I,QAAf,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEnJ,MAAF,CAAU,UAAA0nC,GAAG,EAAI;AAC5D,gBAAMC,UAAU,GAAG,IAAI,UAAAr9B,MAAJ,CAAW;AAAElR,kBAAI,EAAEsuC,GAAG,CAACx8B,WAAJ,GAAkB,IAA1B;AAAgCgU,yBAAW,EAAE,KAA7C;AAAoDC,yBAAW,EAAEuoB,GAAG,CAAC1pC;AAArE,aAAX,EAA2F+E,EAA9G;AACA,gBAAM6kC,QAAQ,GAAG,IAAI,UAAAt9B,MAAJ,CAAW;AAAElR,kBAAI,EAAEsuC,GAAG,CAAC98B,SAAJ,GAAgB,IAAxB;AAA8BsU,yBAAW,EAAE,KAA3C;AAAkDC,yBAAW,EAAEuoB,GAAG,CAAC1pC;AAAnE,aAAX,EAAyF+E,EAA1G;AACC,mBAAO4kC,UAAU,IAAIH,KAAd,IAAuBI,QAAQ,IAAIJ,KAA1C;AACJ,WAJ8C,CAA/C,CAFuB,CAOvB;AACA;;AACA,iBAAO,CAAC,CAACC,eAAe,CAACnsC,MAAzB;AACH;AAED;;;;4BAC0B;;;AACtB,iBAAO,CAAP,KAAO,KAAKwW,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE4kB,eAAtB;AACH;AAED;;;;4BACmB;yBAAA,CACf;;;AACA,cAAI,CAAC,KAAK3L,YAAV,EAAwB;AACpB,mBAAO6b,WAAP;AACH;;AAED,cAAI,CAAJ,WAAI,KAAK90B,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE3I,QAAf,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAE7N,MAA7B,EAAqC;AACjC;;;;;;;;AAQA,gBAAMusC,iBAAiB,GAAI,IAAI9rB,KAAJ,CAAU,KAAKhH,MAAL,EAAV,CAA3B;AACA,mBAAO,CAAP,KAAO,KAAKjD,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE3I,QAAF,CAAWlK,GAAX,CAAe,UAAAuC,CAAC,EAAI;AACpCA,eAAC,CAAC4oB,IAAF,GAASyd,iBAAT;AACA,qBAAOrmC,CAAP;AACH,aAHmB,CAApB;AAIH;;AACD,iBAAOolC,WAAP;AACH;AAED;;;;;;;4BAIuB;;;AACnB,iBAAO,YAAK/lC,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEysB,QAAd,MAAsB,MAAI,KAAKxb,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEwb,QAAzC,KAAqD,KAA5D;AACH;AAEA;;;;;;4BAGuB;iCAAA,CACpB;;;AACA,cAAMwa,QAAQ,GAAG3hC,KAAK,CAACsB,OAAN,CAAc,KAAK4/B,SAAnB,IAAiC,KAAKA,SAAtC,GAAkD,CAAC,KAAKA,SAAN,CAAnE;AACA,cAAMF,QAAQ,GAAG,6BACN,KAAKA,QAAL,CAAc/rC,KAAd,CAAoB,GAApB,CADM,sBAEN,CAAH,KAAG,KAAKgsC,cAAL,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEhsC,KAAF,CAAQ,GAAR,CAFb,sBAIN0sC,QAJM,sBAKN,SAAI,IAAJ,aAAI,MAAJ,GAAI,MAAJ,QAAMjB,UALA,sBAMN,SAAI,IAAJ,aAAI,MAAJ,GAAI,MAAJ,QAAMC,SANA,IAQT,CAAC,YAAKjmC,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEknC,aAAd,MAA2B,MAAI,KAAKj2B,QAAT,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEi2B,aAA9C,CAAD,KAAiE9uB,aAAa,CAACW,YAA/E,IAA+Fve,SARtF,EAST,YAAKyW,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEi2B,aAAf,KAAgC9uB,aAAa,CAACW,YAA9C,IAA8Dve,SATrD,EAUT,YAAKyW,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEk2B,EAAf,KAAqB/uB,aAAa,CAACC,eAAnC,IAAsD7d,SAV7C,GAWX2E,MAXW,CAWJ,UAAAe,CAAC;AAAA,mBAAI,CAAC,CAACA,CAAN;AAAA,WAXG,EAWM9B,GAXN,CAWU,UAAA8B,CAAC;AAAA,mBAAIA,CAAC,CAACD,WAAF,EAAJ;AAAA,WAXX,CAAjB,CAHoB,CAepB;;AACA,oCAAY,IAAImnC,GAAJ,CAAQd,QAAR,CAAZ;AACH;AAED;;;;4BACgB;AACZ,cAAMhiB,OAAO,GAAG,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B,eAAA2nB,YAA1B,CAAhB;AACA,iBAAO,CAACtY,OAAO,GAAGA,OAAO,CAACwY,WAAR,CAAoB,KAAKzhB,KAAzB,CAAH,GAA4C,IAApD,KAA6D,IAAI,eAAAwhB,aAAJ,CAAkB,EAAlB,CAApE;AACH;AAED;;;;;;4BAGkC;;;AAC9B,iBAAO,YAAK5rB,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEo2B,uBAAf,KAA0C,EAAjD;AACH;;;;MA7OsB,iBAAA5zB,a;;AAA3B;;;;;;;;;;;;;;;;;;;;AC/JA;AAAA;AAAA;;AAEA,aAAgB6zB,0BAAhB,CAA2C5sB,OAA3C,EAA6E;AACzE,UAAI/O,KAAK,GAAY,EAArB;;AACA,UAAI+O,OAAJ,EAAa;AACT/O,aAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK+O,OAAL,CAAR;;AACA,YAAIA,OAAO,CAACxhB,MAAZ,EAAoB;AAChB,cAAMX,IAAI,GAAGmiB,OAAO,CAACxhB,MAAR,CAAe+I,YAAf,CAA4B,QAA5B,CAAb;AACA0J,eAAK,CAAC6b,cAAN,GAAuBjvB,IAAI,CAAC0R,OAA5B,CAFgB,CAEqB;;AACrC0B,eAAK,CAAC8b,YAAN,GAAqBlvB,IAAI,CAACa,QAAL,CAAc;AAAEJ,mBAAO,EAAE0hB,OAAO,CAACphB,QAAR,IAAoB;AAA/B,WAAd,EAAmD0Q,aAAnD,CAAiE;AAAEC,mBAAO,EAAE;AAAX,WAAjE,EAAiFA,OAAtG;AAEA,cAAIyQ,OAAO,CAAClI,KAAZ,EAAmB7G,KAAK,CAAC6G,KAAN,GAAckI,OAAO,CAAClI,KAAtB;AACnB,cAAIkI,OAAO,CAAC+J,SAAZ,EAAuB9Y,KAAK,CAAC8Y,SAAN,GAAkB/J,OAAO,CAAC+J,SAA1B;AAEvB,iBAAO9Y,KAAK,CAACzS,MAAb;AACA,iBAAOyS,KAAK,CAACrS,QAAb;AACH;;AAED,YAAI,CAACohB,OAAO,CAACqD,YAAb,EAA2B,OAAOpS,KAAK,CAACoS,YAAb;AAE3B,YAAIrD,OAAO,CAAC6sB,aAAZ,EAA2B57B,KAAK,CAAC47B,aAAN,GAAsB7sB,OAAO,CAAC6sB,aAA9B;AAC3B57B,aAAK,GAAG,mBAAAmiB,sBAAA,CAAuBniB,KAAvB,CAAR;AACH;;AACD,aAAOA,KAAP;AACH;;AAtBD;AAwBA;;;;;;AAKA,aAAgBlL,IAAhB,CAAqB4O,KAArB,EAAmC1W,MAAnC,EAAyE;AAAA,UAAvB6uC,IAAuB,uEAAJ,EAAI;AACrE,UAAMtK,GAAG,GAAGsK,IAAI,CAACzrC,IAAL,CAAU,UAAAmhC,GAAG;AAAA,eAAI7tB,KAAK,CAACgM,KAAN,CAAYzJ,QAAZ,CAAqBsrB,GAAG,CAAC1yB,EAAzB,CAAJ;AAAA,OAAb,CAAZ;AACA,UAAMi9B,KAAK,GAAGD,IAAI,CAACzrC,IAAL,CAAU,UAAAmhC,GAAG;AAAA,eAAIvkC,MAAM,CAAC0iB,KAAP,CAAazJ,QAAb,CAAsBsrB,GAAG,CAAC1yB,EAA1B,CAAJ;AAAA,OAAb,CAAd;;AACA,UAAI0yB,GAAJ,EAAS;AACL,YAAIA,GAAG,KAAKuK,KAAZ,EAAmB;AACf,iBAAQvK,GAAG,CAAC5oC,IAAL,CAAWsM,aAAX,CAAyB6mC,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEnzC,IAAhC,CAAP;AACH;;AACD,YAAM+qC,UAAU,GAAG,mBAAInC,GAAG,CAACmC,UAAR,EAAoBx4B,OAApB,EAAnB;;AAJK,qDAKiBw4B,UALjB;AAAA;;AAAA;AAKL,oEAAkC;AAAA,gBAAvBtrB,OAAuB;;AAC9B,gBAAIA,OAAO,KAAK,GAAhB,EAAqB;AACjB;AACH;;AACD,gBAAM2zB,UAAU,GAAGr4B,KAAK,CAACgM,KAAN,CAAY1f,OAAZ,CAAoBoY,OAApB,KAAgC,CAAnD;AACA,gBAAM4zB,UAAU,GAAGhvC,MAAM,CAAC0iB,KAAP,CAAa1f,OAAb,CAAqBoY,OAArB,KAAiC,CAApD;;AACA,gBAAI2zB,UAAU,IAAI,CAACC,UAAnB,EAA+B;AAC3B,qBAAO,CAAP;AACH,aAFD,MAEO,IAAIA,UAAU,IAAI,CAACD,UAAnB,EAA+B;AAClC,qBAAO,CAAC,CAAR;AACH;AACJ;AAhBI;AAAA;AAAA;AAAA;AAAA;AAiBR;;AACD,aAAOr4B,KAAK,CAAC/a,IAAN,CAAWsM,aAAX,CAAyBjI,MAAM,CAACrE,IAAhC,CAAP;AACH;;AAtBD;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAIA,QAAIszC,UAAU,GAAG,EAAjB;;AAEA,aAAgB7b,SAAhB,CAA0BvhB,EAA1B,EAAsC;AAClC,aAAOo9B,UAAU,CAAC7rC,IAAX,CAAgB,UAACuT,CAAD;AAAA,eAAOA,CAAC,CAAC9E,EAAF,KAASA,EAAT,IAAe8E,CAAC,CAAC3F,KAAF,KAAYa,EAAlC;AAAA,OAAhB,CAAP;AACH;;AAFD;;QAOaq9B,a;;;;;AACT,6BACc94B,SADd,EAEY0W,IAFZ,EAGYzR,QAHZ,EAIImB,eAJJ,EAIoC;AAAA;;AAAA;;AAGhC,sCAAMpG,SAAN,EAAiBoG,eAAjB;AANU,gBAAApG,SAAA,GAAAA,SAAA;AACF,gBAAA0W,IAAA,GAAAA,IAAA;AACA,gBAAAzR,QAAA,GAAAA,QAAA;AAiHZ;;;;;;;AAMO,gBAAA8zB,UAAA,GAAa;AAAA,cAACn8B,KAAD,uEAAkB,EAAlB;AAAA,gKAAoEA,KAApE;AAAA,SAAb;;AAOA,gBAAA2b,YAAA,GAAe;AAAA,cAAC3b,KAAD,uEAAkB,EAAlB;AAAA,6JAAkFA,KAAlF;AAAA,SAAf;;AACA,gBAAAo8B,WAAA,GAAc,UAACv9B,EAAD,EAAakL,SAAb;AAAA,cAAiCyB,uBAAjC,uEAAoE,KAApE;AAAA,cAA2EnB,YAA3E,uEAAmG,EAAnG;AAAA,8JAAoKxL,EAApK,EAAwKkL,SAAxK,EAAmLyB,uBAAnL,EAA4MnB,YAA5M;AAAA,SAAd;;AACA,gBAAAgyB,iBAAA,GAAoB,UAAC5wB,WAAD,EAAsB1B,SAAtB;AAAA,cAA0CyB,uBAA1C,uEAA6E,KAA7E;AAAA,cAAoFnB,YAApF,uEAA4G,EAA5G;AAAA,qKAAgLoB,WAAhL,EAA6L1B,SAA7L,EAAwMyB,uBAAxM,EAAiOnB,YAAjO;AAAA,SAApB;;AA3HH,gCAAAhB,cAAA,CAAe2hB,UAAf,CAA0B,cAAAzb,KAA1B;AACA,gBAAK1F,KAAL,GAAa,OAAb;AACA,gBAAKC,UAAL,GAAkB,OAAlB;;AACA,gBAAKH,QAAL,GAAgB,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBACZ,CAACD,CAAC,CAAC8J,EAAF,CAAK5J,aAAL,CAAmBD,CAAC,CAAC6J,EAArB,CAAD,IAA6B,CAAC9J,CAAC,CAACiJ,KAAF,CAAQ/I,aAAR,CAAsBD,CAAC,CAACgJ,KAAxB,CADlB;AAAA,SAAhB;;AAEA,gBAAK4L,YAAL,GAAoB,UAAC7U,CAAD,EAAc;AAC9B,cAAMw8B,GAAG,GAAG,QAAKzX,IAAL,CAAUrK,QAAtB;AACA,iBAAO1a,CAAC,CAACqhB,KAAF,CAAQob,WAAR,KAAwBD,GAAG,CAAC1yB,EAAnC;AACH,SAHD;;AAIA,gBAAKib,IAAL,CAAUpV,WAAV,CACKhH,IADL,CACU,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,iBAAOA,CAAP;AAAA,SAAN,CADV,EAEK9Y,SAFL,CAEe;AAAA,iBAAM,QAAK8Z,IAAL,EAAN;AAAA,SAFf;;AAbgC;AAgBnC;;;;gCAEuC;AAAA;;AAAA,cAArB3E,MAAqB,uEAAJ,EAAI;;;;;;;;;;;;;;;;;AACvB,2BAAM,OAAMA,KAAN,CAAW,IAAX,CAAW,IAAX,EAAYA,MAAZ,CAAN;;;AAAPlV,wB;;AACN,wBAAMkV,MAAK,CAACzX,cAAN,CAAqB,OAArB,KAAiCyX,MAAK,CAACsK,KAAN,KAAgB,KAAlD,IAA4D,CAAC1Q,MAAM,CAACpH,IAAP,CAAYwN,MAAZ,EAAmBlR,MAArF,EAA6F;AACzF,2BAAKvC,GAAL,CAAS,MAAT,EAAiBzB,IAAjB;AACAmxC,gCAAU,GAAGnxC,IAAb;AACH;;uDACMA,I;;;;;;;;;AACV;;;8CAE4BA,I,EAAe;AACxC,iBAAOA,IAAI,CAAC0I,MAAL,CAAY,UAACvI,CAAD,EAAO;;;AACtB,gBAAI,CAAJ,KAAIA,CAAC,CAACywC,uBAAF,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE5sC,MAA/B,EAAuC,OAAO7D,CAAP,CADjB,CAC2B;;AACjD,mBAAOA,CAAC,CAAC2tB,SAAT;AACH,WAHM,CAAP;AAIH;AAED;;;;;;;kCAKI7J,O,EACAkc,Q,EACsB;AAAA;;AAAA,cAAtBz3B,MAAsB,uEAAJ,IAAI;;AAEtB,cAAI,CAACub,OAAL,EAAc;AACV,kBAAM,IAAI/lB,KAAJ,CAAU,4CAAV,CAAN;AACH;;AAED,cAAMqpB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;;AACA,cAAI,CAACuiB,OAAO,CAACxhB,MAAb,EAAqB;AACjBwhB,mBAAO,CAACxhB,MAAR,GAAiB8kB,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,CAAjB;AACH;;AAED,cAAIyY,OAAO,CAAC6sB,aAAR,KAA0B/sC,SAA9B,EAAyC;AACrCkgB,mBAAO,CAAC6sB,aAAR,GAAwB,IAAxB;AACH;;AAED,cAAMtzC,GAAG,uBAAgBymB,OAAO,CAAClQ,EAAR,GAAakQ,OAAO,CAAClQ,EAArB,GAA0B,EAA1C,cACLosB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAAA,QAAA,GAAY,EADP,CAAT;;AAGA,cAAI,CAAC,KAAKvhB,SAAL,CAAephB,GAAf,CAAL,EAA0B;AACtB,iBAAKohB,SAAL,CAAephB,GAAf,IAAsB,IAAIkgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnD,kBAAMwiB,OAAO,GAAG,SAAVA,OAAU,CAACpgC,IAAD,EAAmB;AAC/B,uBAAO,OAAI,CAAC4e,SAAL,CAAephB,GAAf,CAAP;AACAmgB,uBAAO,CAACjV,MAAM,GAAG,OAAI,CAAC8oC,qBAAL,CAA2BxxC,IAA3B,CAAH,GAAsCA,IAA7C,CAAP;AACH,eAHD;;AAIA,kBAAM8f,KAAK,GAAG,SAARA,KAAQ,CAAC3T,CAAD,EAAO;AACjByR,sBAAM,CAACzR,CAAD,CAAN;AACA,uBAAO,OAAI,CAACyS,SAAL,CAAephB,GAAf,CAAP;AACH,eAHD;;AAIA,kBAAM0X,KAAK,GAAG,kBAAA27B,0BAAA,CAA2B5sB,OAA3B,CAAd;;AACA,kBAAIA,OAAO,CAAClQ,EAAZ,EAAgB;AACZ,uBAAI,CAACqf,IAAL,CAAUnP,OAAO,CAAClQ,EAAlB,EAAsBmB,KAAtB,EAA6B6I,IAA7B,CACI,UAAC5d,CAAD;AAAA,yBAAOigC,OAAO,CAAC,CAACjgC,CAAD,CAAD,CAAd;AAAA,iBADJ,EAEI2f,KAFJ;AAIH,eALD,MAKO;AACH,uBAAI,CAAC5K,KAAL,CAAWA,KAAX,EAAkB6I,IAAlB,CAAuBqiB,OAAvB,EAAgCtgB,KAAhC;AACH;AACJ,aAlBqB,CAAtB;AAmBH;;AAED,iBAAO,KAAKlB,SAAL,CAAephB,GAAf,CAAP;AACH;AAED;;;;;;+BAGoB;;;;;;;;;AACV8c,2B,GACF,KAAKiD,QAAL,CAAc/F,GAAd,CAAkB,SAAlB,KAAgC,E;;AACpC,wBAAI,CAAC8C,OAAO,CAACoJ,MAAb,EAAqB;AACjBpJ,6BAAO,CAACoJ,MAAR,GAAiB;AACb1K,+BAAO,EAAE,oBADI;AAEbnc,6BAAK,EAAE;AAFM,uBAAjB;;AAIA,2BAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;AACH;;;AACD,2BAAM,KAAKpF,KAAL,YAAmB,YAAM;AAC3BoF,6BAAO,CAACoJ,MAAR,GAAiB;AAAE1K,+BAAO,EAAE,oBAAX;AAAiCnc,6BAAK,EAAE;AAAxC,uBAAjB;;AACA,6BAAI,CAAC0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;AACH,qBAHK,CAAN;;;AAIAA,2BAAO,CAACoJ,MAAR,GAAiB;AAAE1K,6BAAO,EAAE,oBAAX;AAAiCnc,2BAAK,EAAE;AAAxC,qBAAjB;;AACA,yBAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;;;;;;;;AACH;AAED;;;;;;;gCAIe2C,Q,EAAiB;AAC5B,iBAAO,IAAI,cAAAwH,KAAJ,CAAUxH,QAAV,CAAP;AACH;;;qCASmBjd,I,EAAM;AACtB,eAAKyB,GAAL,CAAS,MAAT,EAAiBzB,IAAjB;AACAmxC,oBAAU,GAAGnxC,IAAb;AACH;;;;MAhI8B,eAAAye,c;;AAHnC;;;uBAGa2yB,a,EAAa,+B,EAAA,mC,EAAA,kC,EAAA,+B;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFV;;;;;2BAEHA,a,EAAa;cAHzB,OAAAz8B,UAGyB;eAHd;AACRoI,oBAAU,EAAE;AADJ,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB1B;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAOA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA00B,SAAK,CAACphC,IAAN,CAAW,IAAX;AAEA,QAAIqhC,OAAJ;AAWA;;AAEA,aAAgBC,+BAAhB,GAA+C;AAC3C,aAAO,MAAP,OAAO,CAAP;AACItL,mBAAW,EAAEuL,IAAI,CAAC9zC,EAAL,EADjB;AAEIuC,cAAM,EAAEuxC,IAAI,CAAC9zC,EAAL,EAFZ;AAGI8rC,wBAAgB,EAAEgI,IAAI,CAAC9zC,EAAL,EAHtB;AAII8b,mBAAW,EAAE,OAAAmG,EAAA,CAAG,IAAH,CAJjB;AAKI4E,gBAAQ,EAAE,IAAI,eAAAiiB,QAAJ,CAAaiL,oBAAoB,CAAC;AAAE99B,YAAE,EAAE;AAAN,SAAD,CAAjC,CALd;AAMIm2B,4BAAoB,EAAE0H,IAAI,CAAC9zC,EAAL,EAN1B;AAOIysC,wCAAgC,EAAEqH,IAAI,CAAC9zC,EAAL,EAPtC;AAQIg0C,kCAA0B,EAAEF,IAAI,CAAC9zC,EAAL;AARhC,OAAO,EASAi0C,uBAAuB,CAAC,qBAAD,CATvB,CAAP;AAWH;;AAZD;;AAca,YAAAC,yBAAA,GAA4B;AAAA,aAAgB,MAAD,OAAC,CAAD;AACpDlkB,iBAAS,EAAE8jB,IAAI,CAAC9zC,EAAL;AADyC,OAAC,EAElDi0C,uBAAuB,CAAC,eAAD,CAF2B,CAAhB;AAAA,KAA5B;;AAKA,YAAAE,wBAAA,GAA2B;AAAA,aAAgB,MAAD,OAAC,CAAD;AACnDC,uBAAe,EAAEN,IAAI,CAAC9zC,EAAL;AADkC,OAAC,EAEjDi0C,uBAAuB,CAAC,cAAD,CAF0B,CAAhB;AAAA,KAA3B;;AAKA,YAAAI,YAAA,GAAe;AAAA,aAAO;AAC/BtgC,gBAAQ,EAAE,OAAAkO,EAAA,CAAG,EAAH,CADqB;AAE/B8P,gBAAQ,EAAE,OAAA9P,EAAA,CAAG,EAAH,CAFqB;AAG/BsQ,qBAAa,EAAE,OAAAtQ,EAAA,CAAG,EAAH,CAHgB;AAI/ByQ,sBAAc,EAAE,OAAAzQ,EAAA,CAAG,EAAH,CAJe;AAK/BqyB,eAAO,EAAER,IAAI,CAAC9zC,EAAL,EALsB;AAM/Bu0C,eAAO,EAAET,IAAI,CAAC9zC,EAAL,EANsB;AAO/Bw0C,kBAAU,EAAEV,IAAI,CAAC9zC,EAAL,EAPmB;AAQ/BqH,WAAG,EAAEysC,IAAI,CAAC9zC,EAAL,EAR0B;AAS/BiN,eAAO,EAAE6mC,IAAI,CAAC9zC,EAAL,EATsB;AAU/By0C,cAAM,EAAEX,IAAI,CAAC9zC,EAAL,EAVuB;AAW/B00C,oBAAY,EAAEZ,IAAI,CAAC9zC,EAAL,EAXiB;AAY/B20C,yBAAiB,EAAEb,IAAI,CAAC9zC,EAAL,EAZY;AAa/B40C,wBAAgB,EAAEd,IAAI,CAAC9zC,EAAL,EAba;AAc/B60C,gCAAwB,EAAEf,IAAI,CAAC9zC,EAAL,EAdK;AAe/ByxB,qBAAa,EAAE,OAAAxP,EAAA,CAAG,EAAH;AAfgB,OAAP;AAAA,KAAf;;AAkBb,QAAM6yB,QAAQ,GAAG;AACb7lB,WAAK,EAAE,oBADM;AAEbsV,iBAAW,EAAE,4DAFA;AAGb1T,gBAAU,EAAE,OAHC;AAIbkkB,gBAAU,EAAE;AACR9rC,YAAI,EAAE,KADE;AAER4lB,WAAG,EAAE,qBAFG;AAGRmmB,kBAAU,EAAE;AAHJ,OAJC;AASbC,eAAS,EAAE;AACPhsC,YAAI,EAAE,KADC;AAEP4lB,WAAG,EAAE,6BAFE;AAGPmmB,kBAAU,EAAE;AAHL,OATE;AAcbE,aAAO,EAAE;AACL92B,cAAM,EAAE,UADH;AAEL+2B,iBAAS,EAAE,IAFN;AAGLC,qBAAa,EAAE,IAHV;AAILC,4BAAoB,EAAE,IAJjB;AAKLC,mBAAW,EAAE;AALR;AAdI,KAAjB;AAuBa,YAAAC,aAAA,GAA+C;AACxD/rC,WAAK,EAAE,IADiD;AAExDiT,cAAQ,EAAE;AACNK,cAAM,EAAE,EADF;AAENM,aAAK,EAAE,OAFD;AAGNT,gBAAQ,EAAE,EAHJ;AAINK,YAAI,EAAE,EAJA;AAKNE,kBAAU,EAAE,KALN;AAMNc,mBAAW,EAAE;AANP,OAF8C;AAUxDw3B,SAAG,EAAEV,QAVmD;AAWxDx3B,UAAI,EAAE,KAXkD;AAYxDiB,cAAQ,EAAE;AAZ8C,KAA/C;;AAeA,YAAAk3B,2BAAA,GAA8B;AAAA,UAACC,SAAD,uEAAyC,EAAzC;AAAA,aAAgD,IAAI,mBAAAhgB,eAAJ,CAAoB;AAAE7W,gBAAQ,EAAE;AAAA,iBAAMi1B,IAAI,CAAC9zC,EAAL,EAAN;AAAA;AAAZ,OAApB,EACvF,IAAI,mBAAA2wC,cAAJ,CAAmB,MAAD,OAAC,CAAD,kBACX,QAAA4E,aADW,CAAC,EAEZG,SAFY,CAAnB,CADuF,CAAhD;AAAA,KAA9B;AAMb;;;;;AAGa,YAAAC,yBAAA,GAA4B;AAAA,UAACj5B,QAAD,uEAAwC,EAAxC;AAAA,aAAgD;AACrFk5B,eAAO,EAAE,mBAAAlF,cAD4E;AAErFD,gBAAQ,EAAE,IAAI,mBAAAE,cAAJ,CAAmB,MAAD,OAAC,CAAD,kBACrB,QAAA4E,aADqB,CAAC,EAEtB74B,QAFsB,CAAnB;AAF2E,OAAhD;AAAA,KAA5B;AAQb;;;;;AAGA,aAAgBm5B,sBAAhB,GAA2F;AAAA,UAApDC,iBAAoD,uEAAJ,EAAI;AACvFlC,aAAO,GAAG;AACNj1B,eAAO,EAAEm1B,IAAI,CAAC9zC,EAAL,EADH;AAEN4b,cAAM,EAAEk4B,IAAI,CAAC9zC,EAAL,EAFF;AAGN+1C,kBAAU,EAAEjC,IAAI,CAAC9zC,EAAL,EAHN;AAINg2C,kBAAU,EAAElC,IAAI,CAAC9zC,EAAL,EAJN;AAKNi2C,qBAAa,EAAEnC,IAAI,CAAC9zC,EAAL,EALT;AAMNk2C,mBAAW,EAAEpC,IAAI,CAAC9zC,EAAL,EANP;AAONgJ,WAAG,EAAE8qC,IAAI,CAAC9zC,EAAL,EAPC;AAQNm2C,gBAAQ,EAAErC,IAAI,CAAC9zC,EAAL,EARJ;AASNo2C,oBAAY,EAAEtC,IAAI,CAAC9zC,EAAL,EATR;AAUN0Z,WAAG,EAAEo6B,IAAI,CAAC9zC,EAAL,EAVC;AAWNuC,cAAM,EAAEuxC,IAAI,CAAC9zC,EAAL,EAXF;AAYN2D,WAAG,EAAEmwC,IAAI,CAAC9zC,EAAL,EAZC;AAaNq2C,gBAAQ,EAAE;AAAEv3B,cAAI,EAAE;AAAEgE,iBAAK,EAAE;AAAT;AAAR,SAbJ;AAcNwzB,eAAO,EAAE;AAAE/zC,gBAAM,EAAEuxC,IAAI,CAAC9zC,EAAL;AAAV,SAdH;AAeNu2C,aAAK,EAAE,QAAApC,wBAAA,EAfD;AAgBN9L,oBAAY,EAAEwL,+BAA+B,EAhBvC;AAiBN2C,iBAAS,EAAEvC,uBAAuB,CAAC,kBAAD,CAjB5B;AAkBNwC,YAAI,EAAExC,uBAAuB,CAAC,aAAD,CAlBvB;AAmBNyC,YAAI,EAAEzC,uBAAuB,CAAC,qBAAD,CAnBvB;AAoBN0C,cAAM,EAAE,QAAAzC,yBAAA,EApBF;AAqBN0C,gBAAQ,EAAE3C,uBAAuB,CAAC,iBAAD,CArB3B;AAsBN4C,eAAO,EAAE5C,uBAAuB,CAAC,gBAAD,CAtB1B;AAuBN6C,qBAAa,EAAE7C,uBAAuB,CAAC,sBAAD,CAvBhC;AAwBN8C,0BAAkB,EAAE9C,uBAAuB,CAAC,2BAAD,CAxBrC;AAyBN+C,gBAAQ,EAAE,QAAAvB,2BAAA,CAA4BK,iBAA5B,CAzBJ;AA0BNh6B,mBAAW,EAAE,OAAAmG,EAAA,CAAG,IAAH;AA1BP,OAAV;AA4BA,8BAAAxB,cAAA,CAAe2hB,UAAf,CAA0B,iBAAAljB,aAA1B,EAAyC00B,OAAO,CAAC6C,IAAjD;AACA,8BAAAh2B,cAAA,CAAe2hB,UAAf,CAA0B,eAAAiG,YAA1B,EAAwCuL,OAAO,CAACvL,YAAhD;AACA,8BAAA5nB,cAAA,CAAe2hB,UAAf,CAA0B,eAAA0G,QAA1B,EAAoC8K,OAAO,CAACvL,YAA5C;AACA,8BAAA5nB,cAAA,CAAe2hB,UAAf,CAA0B,QAAA/L,IAA1B,EAAgCud,OAAO,CAAC2C,KAAxC;AACA,8BAAA91B,cAAA,CAAe2hB,UAAf,CAA0B,WAAAna,OAA1B,EAAmC2rB,OAAO,CAACgD,QAA3C;AACA,8BAAAn2B,cAAA,CAAe2hB,UAAf,CAA0B,SAAAzb,KAA1B,EAAiCitB,OAAO,CAAC+C,MAAzC;AACA,8BAAAl2B,cAAA,CAAe2hB,UAAf,CAA0B,WAAA4F,WAA1B,EAAuC4L,OAAO,CAAC4C,SAA/C;AACA,8BAAA/1B,cAAA,CAAe2hB,UAAf,CAA0B,UAAAkM,MAA1B,EAAkCsF,OAAO,CAACiD,OAA1C;AACA,8BAAAp2B,cAAA,CAAe2hB,UAAf,CAA0B,WAAA8B,YAA1B,EAAwC0P,OAAO,CAACkD,aAAhD;AACA,8BAAAr2B,cAAA,CAAe2hB,UAAf,CAA0B,WAAA0B,gBAA1B,EAA4C8P,OAAO,CAACmD,kBAApD;AACAnD,aAAO,CAACvL,YAAR,CAAqBvvB,SAArB,GAAiC,CAAC86B,OAAO,CAACvL,YAAR,CAAqBxhB,QAAtB,CAAjC;AACA+sB,aAAO,CAAC2C,KAAR,CAAclZ,OAAd,GAAwB,IAAI,QAAAhH,IAAJ,CAAS4gB,gBAAgB,EAAzB,CAAxB;AACArD,aAAO,CAAC2C,KAAR,CAAcz6B,WAAd,GAA4B,OAAAmG,EAAA,CAAG,IAAH,CAA5B;AACA2xB,aAAO,CAACgD,QAAR,CAAiBM,YAAjB,GAAgC,IAAI,OAAAz3C,eAAJ,CAAoB,IAAIsR,KAAJ,CAAU,EAAV,EAAcomC,IAAd,CAAmB,CAAnB,EAAsBttC,GAAtB,CAA0B,UAAAkR,CAAC;AAAA,eAAI,IAAI,WAAAkN,OAAJ,CAAYmvB,mBAAmB,EAA/B,CAAJ;AAAA,OAA3B,CAApB,CAAhC;AACAxD,aAAO,CAACrxC,MAAR,CAAe80C,eAAf,CAA+B,OAAAp1B,EAAA,CAAG,IAAH,EAAS,EAAT,CAA/B;AACA,aAAO2xB,OAAP;AACH;;AA7CD;;AA+CA,aAAgBK,uBAAhB,CAAwCl0C,IAAxC,EAAsD;AAClD,UAAMgwB,OAAO,GAAG;AACZvoB,YAAI,EAAEssC,IAAI,CAAC9zC,EAAL,EADM;AAEZ4K,cAAM,EAAEkpC,IAAI,CAAC9zC,EAAL,EAFI;AAGZuC,cAAM,EAAEuxC,IAAI,CAAC9zC,EAAL,EAHI;AAIZ0Z,WAAG,EAAEo6B,IAAI,CAAC9zC,EAAL,EAJO;AAKZ2D,WAAG,EAAEmwC,IAAI,CAAC9zC,EAAL,EALO;AAMZ2e,eAAO,EAAEm1B,IAAI,CAAC9zC,EAAL,EANG;AAOZoX,aAAK,EAAE08B,IAAI,CAAC9zC,EAAL,EAPK;AAQZs1B,YAAI,EAAEwe,IAAI,CAAC9zC,EAAL,EARM;AASZqH,WAAG,EAAEysC,IAAI,CAAC9zC,EAAL,EATO;AAUZs3C,YAAI,EAAExD,IAAI,CAAC9zC,EAAL,EAVM;AAWZy0C,cAAM,EAAEX,IAAI,CAAC9zC,EAAL,EAXI;AAYZ,kBAAQ8zC,IAAI,CAAC9zC,EAAL,EAZI;AAaZggB,cAAM,EAAE8zB,IAAI,CAAC9zC,EAAL,EAbI;AAcZu3C,eAAO,EAAEzD,IAAI,CAAC9zC,EAAL,EAdG;AAeZw3C,kBAAU,EAAE1D,IAAI,CAAC9zC,EAAL,EAfA;AAgBZqgB,YAAI,EAAEyzB,IAAI,CAAC9zC,EAAL,EAhBM;AAiBZgwB,iBAAS,EAAE8jB,IAAI,CAAC9zC,EAAL,EAjBC;AAkBZ6hB,eAAO,EAAEiyB,IAAI,CAAC9zC,EAAL,EAlBG;AAmBZsiB,kBAAU,EAAEwxB,IAAI,CAAC9zC,EAAL,EAnBA;AAoBZy3C,iBAAS,EAAE3D,IAAI,CAAC9zC,EAAL,EApBC;AAqBZ03C,sBAAc,EAAE5D,IAAI,CAAC9zC,EAAL,EArBJ;AAsBZ23C,cAAM,EAAE7D,IAAI,CAAC9zC,EAAL,EAtBI;AAuBZ43C,eAAO,EAAE9D,IAAI,CAAC9zC,EAAL,EAvBG;AAwBZ63C,eAAO,EAAE/D,IAAI,CAAC9zC,EAAL,EAxBG;AAyBZ83C,oBAAY,EAAE,KAzBF;AA0BZh8B,mBAAW,EAAE,OAAAmG,EAAA,CAAG,IAAH,CA1BD;AA2BZ6gB,qBAAa,EAAEgR,IAAI,CAAC9zC,EAAL,EA3BH;AA4BZD,YAAI,EAAJA,IA5BY;AA6BZwzC,kBAAU,EAAE,OAAAtxB,EAAA,CAAG,IAAH,CA7BA;AA8BZ81B,uBAAe,EAAE,OAAA91B,EAAA,CAAG,EAAH,CA9BL;AA+BZ+1B,iBAAS,EAAE,OAAA/1B,EAAA,CAAG,EAAH,CA/BC;AAgCZ8Q,oBAAY,EAAE,OAAA9Q,EAAA,CAAG,IAAH,CAhCF;AAiCZg2B,gCAAwB,EAAEnE,IAAI,CAAC9zC,EAAL,EAjCd;AAkCZyiC,gBAAQ,EAAE,OAAAxgB,EAAA,CAAG,IAAH,CAlCE;AAmCZuxB,mBAAW,EAAEM,IAAI,CAAC9zC,EAAL,EAnCD;AAoCZk4C,kBAAU,EAAE,OAAAj2B,EAAA,CAAG,EAAH,CApCA;AAqCZwxB,yBAAiB,EAAE,OAAAxxB,EAAA,CAAG,EAAH;AArCP,OAAhB;AAyCA8N,aAAO,CAAC+S,aAAR,CAAsBqV,kBAAtB,CAAyC,UAAAp9B,CAAC;AAAA,eAAI6E,OAAO,CAACC,OAAR,CAAgB,CAAC,IAAI,WAAAoI,OAAJ,CAAY,EAAZ,CAAD,CAAhB,CAAJ;AAAA,OAA1C;AACA8H,aAAO,CAACunB,IAAR,CAAaa,kBAAb,CAAgC,UAAAp9B,CAAC;AAAA,eAAI6E,OAAO,CAACC,OAAR,CAAgB,IAAI,WAAAoI,OAAJ,CAAY,EAAZ,CAAhB,CAAJ;AAAA,OAAjC;AAEA8H,aAAO,CAACxtB,MAAR,CAAe80C,eAAf,CAA+B,OAAAp1B,EAAA,CAAG,IAAH,CAA/B;AACA8N,aAAO,CAACnlB,MAAR,CAAeysC,eAAf,CAA+B,EAA/B;AACA,aAAOtnB,OAAP;AACH;;AAhDD;AAkDA,QAAIqoB,WAAW,GAAW,CAA1B;;AAEA,aAAgBC,0BAAhB,CAA2CtsC,KAA3C,EAA0D;AACtD,aAAO;AACHhM,YAAI,mBAAYgM,KAAZ,CADD;AAEHqJ,aAAK,mBAAYrJ,KAAZ,cAFF;AAGH2Q,gBAAQ,EAAE;AACN3c,cAAI,uBAAgBgM,KAAhB,CADE;AAENmsB,kBAAQ,EAAE;AAFJ;AAHP,OAAP;AAQH;;AATD;;AAWA,aAAgBogB,iBAAhB,GAAqH;AAAA,UAAnF5C,SAAmF,uEAA9D,EAA8D;AAAA,UAA1D6C,QAA0D,uEAAvC,IAAuC;AAAA,UAAjCC,gBAAiC,uEAAL,KAAK;AACjH,UAAMviC,EAAE,mBAAYsiC,QAAQ,IAAIH,WAAW,EAAnC,CAAR;AACA,UAAMr4C,IAAI,GAAG21C,SAAS,CAAC31C,IAAV,cAAqB4zC,KAAK,CAAC5zC,IAA3B,cAAmC4zC,KAAK,CAAC5zC,IAAN,CAAW04C,QAAX,EAAnC,WAAb;AACA,UAAM9oB,UAAU,GAAG,UAAAliB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,KAAjC,CAAnB;AACA,UAAIgP,QAAQ,GAAiB;AACzBsT,iBAAS,EAAE,IADc;AAEzBsR,uBAAe,EAAE3R,UAAU,CAAC9qB,QAAX,CAAoB;AAAE2uB,cAAI,EAAE;AAAR,SAApB,EAAiC9d,OAFzB;AAGzB3B,gBAAQ,EAAEhD,KAAK,CAAC,EAAD,CAAL,CAAUomC,IAAV,CAAe,CAAf,EAAkBttC,GAAlB,CAAsB,UAAAxH,CAAC;AAAA,iBAAI+0C,mBAAmB,EAAvB;AAAA,SAAvB,CAHe;AAIzBlf,gBAAQ,EAAE,IAJe;AAKzBkO,mBAAW,EAAE,IALY;AAMzB4L,sBAAc,EAAE,wBANS;AAOzBpqB,4BAAoB,EAAE,UAPG;AAQzBqgB,cAAM,EAAE,GARiB;AASzB0K,qBAAa,EAAE,KATU;AAUzB+F,2BAAmB,EAAE,IAVI;AAWzB7G,iBAAS,YAAK9xC,IAAL,kBAXgB;AAYzB6yC,UAAE,EAAE;AAZqB,OAA7B;;AAcA,UAAI8C,SAAS,CAACh5B,QAAd,EAAwB;AACpBA,gBAAQ,GAAG,MAAH,OAAG,CAAH,kBAAQA,QAAR,CAAG,EAAkBg5B,SAAS,CAACh5B,QAA5B,CAAX;AACA,eAAOg5B,SAAS,CAACh5B,QAAjB;AACH;;AACD,UAAI87B,gBAAJ,EAAsB;AAClB97B,gBAAQ,CAACo2B,uBAAT,GAAmC,CAC/B;AACI9uC,cAAI,EAAE2rB,UAAU,CAACja,OADrB;AAEIsa,mBAAS,EAAE;AAFf,SAD+B,EAK/B;AACIhsB,cAAI,EAAE2rB,UAAU,CAAC9qB,QAAX,CAAoB;AAAE2uB,gBAAI,EAAE;AAAR,WAApB,EAAiC9d,OAD3C;AAEIsa,mBAAS,EAAE;AAFf,SAL+B,EAS/B;AACIhsB,cAAI,EAAE2rB,UAAU,CAAC9qB,QAAX,CAAoB;AAAE2uB,gBAAI,EAAE;AAAR,WAApB,EAAiC9d,OAD3C;AAEIsa,mBAAS,EAAE;AAFf,SAT+B,EAa/B;AACIhsB,cAAI,EAAE2rB,UAAU,CAAC9qB,QAAX,CAAoB;AAAE2uB,gBAAI,EAAE;AAAR,WAApB,EAAiC9d,OAD3C;AAEIsa,mBAAS,EAAE;AAFf,SAb+B,CAAnC;AAkBH;;AAED,UAAM2oB,MAAM,GAAGr0C,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,IAA0C,CAA1C,KAAgD,CAAhD,IAAqDylC,WAAW,GAAG,CAAlF;AACA,aAAO,IAAI,SAAAzxB,KAAJ,CAAU,MAAD,OAAC,CAAD;AACZ1Q,UAAE,EAAFA,EADY;AAEZlW,YAAI,YAAKA,IAAL,mBAFQ;AAGZkoC,cAAM,YAAKsQ,QAAQ,IAAIH,WAAjB,CAHM;AAIZnvC,YAAI,EAAE0qC,KAAK,CAACiF,QAAN,CAAeC,WAAf,EAJM;AAKZC,kBAAU,EAAEx0C,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,IAA0C,CAA1C,KAAgD,CALhD;AAMZomC,mBAAW,EAAEz0C,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,IAA0C,CAA1C,KAAgD,CANjD;AAOZqmC,mBAAW,EAAE10C,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,GAArB,CAAX,IAAwC,GAPzC;AAQZ8U,gBAAQ,EAAEnjB,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,IAA0C,CAA1C,KAAgD,CAR9C;AASZ4W,gBAAQ,EAAE,EATE;AAUZ0vB,qBAAa,EAAE,CAVH;AAWZh7B,aAAK,EAAE3Z,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,CAAX,IAAsC,CAXjC;AAYZud,iBAAS,EAAE5rB,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,CAAX,IAAsC,CAZrC;AAaZm/B,mBAAW,uBAAgB77B,EAAhB,CAbC;AAcZ8Y,aAAK,EAAE4kB,KAAK,CAAC5kB,KAAN,CAAYmqB,QAAZ,EAdK;AAeZpyB,aAAK,EAAE,CAAC,YAAD,CAfK;AAgBZirB,gBAAQ,YAAK,SAAAluB,aAAA,CAAcY,SAAnB,cAAgC,SAAAZ,aAAA,CAAcM,oBAA9C,CAhBI;AAiBZ/O,aAAK,YAAKrV,IAAI,CAAC2L,WAAL,GAAmB1F,KAAnB,CAAyB,GAAzB,EAA8BqH,IAA9B,CAAmC,GAAnC,CAAL,cAAgD,QAAA8rC,WAAhD,CAjBO;AAkBZz8B,gBAAQ,EAARA;AAlBY,OAAC,EAmBVg5B,SAnBU,CAAV,CAAP;AAqBH;;AAjED;AAmEA,QAAI0D,aAAa,GAAG,CAApB;AACA,QAAIC,YAAY,GAAI,UAAA5rC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBgB,QAApB,CAA6B;AAAE0B,UAAI,EAAE;AAAR,KAA7B,EAA0C1B,QAA1C,CAAmD;AAACP,YAAM,EAAE;AAAT,KAAnD,EAAgEoR,aAAhE,CAA8E;AAAE+d,UAAI,EAAE;AAAR,KAA9E,EAA4F9lB,YAA5F,CAAyG,QAAzG,CAApB;AAEA;;;;;AAIA,aAAgB4rC,2BAAhB,CAA4C9rC,IAA5C,EAA0D;AACtD,UAAMxJ,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,YAAI,EAAEwJ;AAAP,OAAX,CAAb;AACA6rC,kBAAY,GAAGr1C,IAAI,CAAC0J,YAAL,CAAkB,QAAlB,CAAf;AACH;;AAHD;AAKA;;;;;AAIA,aAAgB0pC,mBAAhB,GAA4D;AAAA,UAAxBxQ,QAAwB,uEAAJ,EAAI;AACxD,UAAM3wB,EAAE,qBAAcmjC,aAAa,EAA3B,CAAR;AACAC,kBAAY,GAAGA,YAAY,CAACx0C,QAAb,CAAsB;AAAEJ,eAAO,EAAEH,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,IAA0B,CAArC,IAA0C;AAArD,OAAtB,CAAf;AACA,UAAMzO,KAAK,GAAGm1C,YAAY,CAAC1rC,EAA3B;AACA,UAAM5I,QAAQ,GAAGT,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,IAA0B,CAArC,IAA0C,EAA3D;AACA0mC,kBAAY,GAAGA,YAAY,CAACx0C,QAAb,CAAsB;AAAEJ,eAAO,EAAEH,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,CAAX,IAAsC;AAAjD,OAAtB,CAAf;AACA,UAAMgkB,SAAS,GAAGsgB,gBAAgB,CAAC;AAAEjc,gBAAQ,EAAE,KAAZ;AAAmBue,eAAO,EAAE;AAA5B,OAAD,CAAlC;AACA,UAAMje,MAAM,GAAGvqB,KAAK,CAACzM,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,CAAX,CAAD,CAAL,CACVwkC,IADU,CACL,CADK,EAEVttC,GAFU,CAEN,UAAAkR,CAAC;AAAA,eAAIy+B,yBAAyB,CAAC;AAAEvnB,sBAAY,EAAE/tB;AAAhB,SAAD,EAA0B0iC,QAAQ,CAAC3W,QAAnC,EAA6C2W,QAAQ,CAAC6S,IAAtD,CAA7B;AAAA,OAFK,CAAf;AAGA,UAAM5xB,WAAW,GAAGvjB,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,IAA0C,CAA1C,KAAgD,CAApE;AACA,UAAM+mC,UAAU,GAAG,IAAI,UAAAxkC,MAAJ,CAAW;AAAClR,YAAI,EAAEE;AAAP,OAAX,CAAnB;AACA,aAAO,MAAP,OAAO,CAAP;AACI+R,UAAE,EAAFA,EADJ;AAEIgZ,aAAK,YAAK0kB,KAAK,CAACiF,QAAN,CAAeC,WAAf,EAAL,aAFT;AAGIniB,iBAAS,EAAE3lB,KAAK,CAACzM,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,IAA0B,CAArC,CAAD,CAAL,CACNwkC,IADM,CACD,CADC,EAENttC,GAFM,CAEF,UAACkR,CAAD,EAAI1Y,CAAJ;AAAA,iBAAU40C,gBAAgB,CAACrQ,QAAQ,CAAC+S,KAAV,CAA1B;AAAA,SAFE,CAHf;AAMIhjB,iBAAS,EAATA,SANJ;AAOI7gB,mBAAW,EAAE4jC,UAAU,CAAChkC,OAP5B;AAQIF,iBAAS,EAAEkkC,UAAU,CAAC70C,QAAX,CAAoB;AAAEJ,iBAAO,EAAEM;AAAX,SAApB,EAA2C2Q,OAR1D;AASIxF,YAAI,EAAEyjC,KAAK,CAACiG,KAAN,CAAYC,SAAZ,EATV;AAUI/iB,aAAK,EAAE,CAAC;AAAE7tB,cAAI,EAAE,OAAR;AAAiBiS,iBAAO,EAAEy4B,KAAK,CAACiG,KAAN,CAAYC,SAAZ;AAA1B,SAAD,CAVX;AAWIj9B,gBAAQ,EAAE+2B,KAAK,CAACtnB,OAAN,CAAc5S,IAAd,EAXd;AAYI;AACAgd,oBAAY,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,OAAA9jB,oBAAA,CAAqB,CAArB,CAAzB,CAblB;AAcIsL,aAAK,EAAE;AAAE,sBAAY3Z,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY,CAAC,OAAAkL,oBAAA,CAAqB,EAArB,IAA2B,CAA5B,IAAiC,CAA7C;AAAd,SAdX;AAeIud,iBAAS,EAAE;AAAE,sBAAY5rB,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAY,CAAC,OAAAkL,oBAAA,CAAqB,EAArB,IAA2B,CAA5B,IAAiC,CAA7C;AAAd,SAff;AAgBIoV,cAAM,EAAE,UAhBZ;AAiBImQ,gBAAQ,EAAErQ,WAAW,GAAGyT,MAAH,GAAY,EAjBrC;AAkBItG,YAAI,EAAE,IAAI,SAAArO,KAAJ,CAAU0xB,0BAA0B,CAAC,CAAD,CAApC,CAlBV;AAmBIthB,uBAAe,EAAE,EAnBrB;AAoBII,eAAO,EAAC;AApBZ,OAAO,EAqBAyP,QArBA,CAAP;AAuBH;;AAnCD;AAqCA,QAAIkT,SAAS,GAAG,CAAhB;AACA,QAAIC,SAAS,GAAG,CAAhB;AAEA;;;;;;;AAMA,aAAgBhG,oBAAhB,GAA4D;AAAA,UAAvB2B,SAAuB,uEAAF,EAAE;AACxD,UAAMz/B,EAAE,sBAAe6jC,SAAS,EAAxB,CAAR;AACA,UAAMjgC,MAAM,GAAG9I,KAAK,CAAC,EAAD,CAAL,CACVomC,IADU,CACL,CADK,EAEVttC,GAFU,CAEN,UAACkR,CAAD,EAAI1Y,CAAJ,EAAU;AAAD;;AAAC,eAAA23C,iBAAiB,CAAC/zC,SAAD,EAAY,CAAF,KAAEyvC,SAAS,CAACuE,cAAV,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,QAAxBvE,SAAwB,EAAGrzC,CAAH,CAApC,CAAjB;AAA2D,OAF/D,CAAf;AAGA,UAAM0vC,QAAQ,GAAQ,EAAtB;;AALwD,mDAMtCl4B,MANsC;AAAA;;AAAA;AAMxD,kEAA0B;AAAA,cAAfswB,GAAe;AACtB,cAAMp+B,KAAK,GAAGzH,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,CAArB,IAA0B,CAArC,CAAd;AACAo/B,kBAAQ,CAAC5H,GAAG,CAACE,QAAL,CAAR,GAAyB,EAAzB;;AACA,eAAK,IAAIhoC,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG0J,KAApB,EAA2B1J,IAAC,EAA5B,EAAgC;AAC5B0vC,oBAAQ,CAAC5H,GAAG,CAACE,QAAL,CAAR,CAAuBsJ,KAAK,CAACiF,QAAN,CAAeC,WAAf,EAAvB,sBAAkEx2C,IAAC,GAAG,CAAtE;AACH;AACJ;AAZuD;AAAA;AAAA;AAAA;AAAA;;AAaxD,aAAO,MAAP,OAAO,CAAP;AACI4T,UAAE,EAAFA,EADJ;AAEIuJ,eAAO,EAAEvJ,EAFb;AAGIgzB,cAAM,EAAEl4B,KAAK,CAAC,EAAD,CAAL,CACHomC,IADG,CACE,CADF,EAEHttC,GAFG,CAEC,UAAAxH,CAAC,EAAI;AACN,cAAMtC,IAAI,GAAG4zC,KAAK,CAACiF,QAAN,CAAeC,WAAf,EAAb;AACA,iBAAO;AACH3P,oBAAQ,EAAEnpC,IAAI,CACTiG,KADK,CACC,GADD,EAELqH,IAFK,CAEA,GAFA,EAGL3B,WAHK,EADP;AAKHy9B,sBAAU,EAAEppC;AALT,WAAP;AAOH,SAXG,CAHZ;AAeIqsB,YAAI,EAAE,KAfV;AAgBIrsB,YAAI,EAAE4zC,KAAK,CAAC5zC,IAAN,CAAWm6C,SAAX,EAhBV;AAiBI7tB,eAAO,EAAE,wBAjBb;AAkBI5S,YAAI,EAAE,eAlBV;AAmBI2vB,kBAAU,EAAEr4B,KAAK,CAAC,EAAD,CAAL,CACPomC,IADO,CACF,CADE,EAEPttC,GAFO,CAEH,UAAAxH,CAAC,EAAI;AACN,cAAMtC,IAAI,GAAG4zC,KAAK,CAACiF,QAAN,CAAeC,WAAf,EAAb;AACA,iBAAO;AACH3P,oBAAQ,EAAEnpC,IAAI,CACTiG,KADK,CACC,GADD,EAELqH,IAFK,CAEA,GAFA,EAGL3B,WAHK,EADP;AAKHy9B,sBAAU,EAAEppC;AALT,WAAP;AAOH,SAXO,CAnBhB;AA+BI8Z,cAAM,EAANA,MA/BJ;AAgCIyvB,aAAK,EAAE;AACH,0BAAgBv4B,KAAK,CAAC,EAAD,CAAL,CACXomC,IADW,CACN,CADM,EAEXttC,GAFW,CAEP,UAAAxH,CAAC;AAAA,mBAAI40C,gBAAgB,EAApB;AAAA,WAFM;AADb,SAhCX;AAqCI/M,sBAAc,EAAE6H,QArCpB;AAsCIr1B,gBAAQ,EAAE;AACNy9B,cAAI,EAAE;AACFC,kBAAM,EAAE;AACJC,oBAAM,EAAE,IADJ;AAEJC,iBAAG,EAAE;AAFD;AADN,WADA;AAON7gC,cAAI,EAAEk6B,KAAK,CAACtnB,OAAN,CAAc5S,IAAd;AAPA,SAtCd;AA+CI7Q,gBAAQ,EAAE;AA/Cd,OAAO,EAgDA8sC,SAhDA,CAAP;AAkDH;;AA/DD;AAiEA;;;;;;AAKA,aAAgBsE,iBAAhB,CAAkC/jC,EAAlC,EAAsE;AAAA,UAAvBy/B,SAAuB,uEAAF,EAAE;;AAClE,UAAI,CAACz/B,EAAL,EAAS;AACLA,UAAE,sBAAe8jC,SAAS,EAAxB,CAAF;AACH;;AACD,aAAO,MAAP,OAAO,CAAP;AACI9jC,UAAE,EAAFA,EADJ;AAEIo0B,gBAAQ,EAAEp0B,EAFd;AAGIg1B,kBAAU,kBAAW8O,SAAX,CAHd;AAIIlpB,kBAAU,cAAOkpB,SAAP;AAJd,OAAO,EAKArE,SALA,CAAP;AAOH;;AAXD;AAaA,QAAI6E,UAAU,GAAG,CAAjB;AAEW,YAAApB,WAAA,GAAc,iBAAd;AAEX,QAAMqB,WAAW,GAAa,EAA9B;AAEA;;;;;;;AAMA,aAAgBvD,gBAAhB,GAAuD;AAAA,UAAtBrQ,QAAsB,uEAAF,EAAE;AACnD,UAAM3wB,EAAE,kBAAWskC,UAAU,EAArB,CAAR;AACA,UAAMx6C,IAAI,aAAM4zC,KAAK,CAAC5zC,IAAN,CAAWm6C,SAAX,EAAN,cAAgCvG,KAAK,CAAC5zC,IAAN,CAAW04C,QAAX,EAAhC,CAAV;AACA,UAAMzd,QAAQ,GAAG4L,QAAQ,CAAC5L,QAAT,IAAqB,EAAE,OAAAroB,oBAAA,CAAqB,KAArB,IAA8B,CAAhC,CAAtC;AACA,UAAMk5B,YAAY,GAAG7Q,QAAQ,GAAG2Y,KAAK,CAACxc,OAAN,CAAcsjB,WAAd,EAAH,GAAiC,QAAAtB,WAAA,CAAYnzC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAA9D;AACA,UAAI00C,SAAS,GAAa,EAA1B;AACA,UAAMC,cAAc,GAAGr2C,IAAI,CAACi8B,GAAL,CAAS,OAAA5tB,oBAAA,CAAqB,CAArB,IAA0B,CAAnC,EAAsC6nC,WAAW,CAACt0C,MAAlD,CAAvB;;AACA,WAAK,IAAI7D,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGs4C,cAApB,EAAoCt4C,IAAC,EAArC,EAAyC;AACrCq4C,iBAAS,CAAC7uC,IAAV,CAAe2uC,WAAW,CAACl2C,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB6nC,WAAW,CAACt0C,MAAjC,CAAX,CAAD,CAA1B;AACH;;AACDw0C,eAAS,GAAG,OAAAhwC,MAAA,CAAOgwC,SAAP,CAAZ;AACA,UAAMtlC,KAAK,aAAMrV,IAAI,CAChBiG,KADY,CACN,GADM,EAEZqH,IAFY,CAEP,GAFO,EAGZ3B,WAHY,EAAN,cAGWsvB,QAAQ,GAAG,MAAH,GAAY,EAH/B,SAGoC,QAAAme,WAHpC,CAAX;AAIAqB,iBAAW,CAAC3uC,IAAZ,CAAiBuJ,KAAjB;AACA,aAAO,MAAP,OAAO,CAAP;AACIa,UAAE,EAAFA,EADJ;AAEIlW,YAAI,EAAJA,IAFJ;AAGI66C,kBAAU,EAAE76C,IAAI,CAACiG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAHhB;AAII60C,iBAAS,EAAE96C,IAAI,CAACiG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAJf;AAKIoP,aAAK,EAALA,KALJ;AAMI0lC,aAAK,EAAEnH,KAAK,CAACmH,KAAN,CAAYC,WAAZ,EANX;AAOIxB,eAAO,EAAEve,QAPb;AAQI6Q,oBAAY,EAAE;AACV51B,YAAE,EAAE41B,YAAY,CACX7lC,KADD,CACO,GADP,EAECqH,IAFD,CAEM,GAFN,EAGC3B,WAHD,EADM;AAKV3L,cAAI,EAAE8rC;AALI,SARlB;AAeImP,kBAAU,EAAErH,KAAK,CAACiF,QAAN,CAAeoC,UAAf,EAfhB;AAgBIC,kBAAU,EAAE,OAAA1wC,OAAA,CAAQjG,IAAI,CAACY,KAAL,CAAW,OAAAyN,oBAAA,CAAqB,KAArB,CAAX,CAAR,EAAiD,CAAjD,CAhBhB;AAiBI+nC,iBAAS,EAATA,SAjBJ;AAkBI3rB,aAAK,EAAE4kB,KAAK,CAAC5kB,KAAN,CAAYmsB,MAAZ;AAlBX,OAAO,EAmBAtU,QAnBA,CAAP;AAqBH;;AArCD;;AAuCA,aAAgB4S,yBAAhB,GAAwH;AAAA,UAA9E9D,SAA8E,uEAAzD,EAAyD;AAAA,UAArDne,OAAqD,uEAAnC,EAAmC;AAAA,UAA/BkiB,IAA+B,uEAAJ,EAAI;AACpH,aAAO,MAAP,OAAO,CAAP;AACIxjC,UAAE,kBAAW,OAAAtD,oBAAA,CAAqB,QAArB,CAAX,CADN;AAEIgoB,qBAAa,EAAE,OAAAhoB,oBAAA,CAAqB,CAArB,IAA0B,CAF7C;AAGI6oB,mBAAW,EAAEjE,OAHjB;AAIIv1B,aAAK,EAAE,IAAI+O,KAAJ,CAAU,OAAA4B,oBAAA,CAAqB,CAArB,EAAwB,CAAxB,CAAV,EAAsCwkC,IAAtC,CAA2C,CAA3C,EAA8CttC,GAA9C,CAAkD,UAAAxH,CAAC;AAAA,iBAAI84C,YAAY,CAAC1B,IAAD,CAAhB;AAAA,SAAnD;AAJX,OAAO,EAKA/D,SALA,CAAP;AAOH;;AARD;;AAUA,aAASyF,YAAT,GAAyD;AAAA,UAAnCC,QAAmC,uEAAJ,EAAI;;;;AACrD,UAAMt0B,KAAK,GAAG9V,MAAM,CAACpH,IAAP,CAAYwxC,QAAZ,CAAd;AACA,UAAM3B,IAAI,GAAG2B,QAAQ,CAACt0B,KAAK,CAAC,OAAAnU,oBAAA,CAAqBmU,KAAK,CAAC5gB,MAA3B,CAAD,CAAN,CAAR,IAAuD,EAApE;AACA,UAAMm1C,QAAQ,GAAG5B,IAAI,CAAC,OAAA9mC,oBAAA,CAAqB8mC,IAAI,CAACvzC,MAA1B,CAAD,CAAJ,IAA2C;AAAElE,aAAK,EAAE;AAAT,OAA5D;AACA,UAAMwkB,KAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAM60B,QAAQ,CAACr5C,KAAT,CAAe,OAAA2Q,oBAAA,CAAqB0oC,QAAQ,CAACr5C,KAAT,CAAekE,MAApC,CAAf,KAA+D,EAArE,CAAd;;AACA,UAAI,CAACsgB,KAAK,WAAN,KAAc,MAAIA,KAAK,CAACxkB,KAAV,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEkE,MAA/B,CAAJ,EAA2C;AACvC,YAAMwG,IAAI,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK8Z,KAAK,CAACxkB,KAAN,CAAY,OAAA2Q,oBAAA,CAAqB6T,KAAK,CAACxkB,KAAN,CAAYkE,MAAjC,CAAZ,CAAL,CAAb;AACAwG,YAAI,CAAC24B,MAAL,GAAc,OAAA1yB,oBAAA,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,eAAOjG,IAAP;AACH;;AACD8Z,WAAK,CAAC6e,MAAN,GAAe,OAAA1yB,oBAAA,CAAqB,CAArB,EAAwB,CAAxB,CAAf;AACA,aAAO6T,KAAP;AACH;;AAED,aAAgB80B,oBAAhB,CAAqC5F,SAArC,EAAyD6F,eAAzD,EAAoFC,IAApF,EAAkG;AAC9F,UAAMhT,KAAK,GAAG,OAAA71B,oBAAA,CAAqB,SAArB,IAAoC,CAApC,KAA0C,CAAxD;;AACA,UAAI61B,KAAK,KAAK,CAACkN,SAAD,IAAcA,SAAS,CAAClN,KAA7B,CAAT,EAA8C;AAC1C,eAAO,MAAP,OAAO,CAAP;AACIP,gBAAM,EAAEsT,eAAe,CAAC,OAAA5oC,oBAAA,CAAqB4oC,eAAe,CAACr1C,MAArC,CAAD,CAD3B;AAEIsnB,eAAK,EAAEguB,IAAI,CAAC,OAAA7oC,oBAAA,CAAqB6oC,IAAI,CAACt1C,MAA1B,CAAD;AAFf,SAAO,EAGAwvC,SAHA,CAAP;AAKH,OAND,MAMO;AACH,eAAO,MAAP,OAAO,CAAP;AACIl0C,WAAC,EAAE,OAAAmR,oBAAA,CAAqB,GAArB,EAA0B,GAA1B,CADP;AAEIy1B,eAAK,EAAE,IAFX;AAGI3mC,WAAC,EAAE,OAAAkR,oBAAA,CAAqB,GAArB,EAA0B,GAA1B,CAHP;AAII6a,eAAK,EAAEguB,IAAI,CAAC,OAAA7oC,oBAAA,CAAqB6oC,IAAI,CAACt1C,MAA1B,CAAD,CAJf;AAKIuiC,oBAAU,EAAE,OAAA91B,oBAAA,CAAqB,EAArB;AALhB,SAAO,EAMA+iC,SANA,CAAP;AAQH;AACJ;;AAlBD;AAoBA,QAAI+F,SAAS,GAAG,CAAhB;;AAEA,aAAgBC,wBAAhB,GAAwC;AACpC,UAAM5iC,SAAS,GAAG/H,KAAK,CAAC,CAAD,CAAL,CAASomC,IAAT,CAAc,CAAd,EAAiBttC,GAAjB,CAAqB,UAAAxH,CAAC;AAAA,eAAI0xC,oBAAoB,EAAxB;AAAA,OAAtB,CAAlB;AACA,aAAO;AACH99B,UAAE,qBAAcwlC,SAAS,EAAvB,CADC;AAEH17C,YAAI,yBAAkB07C,SAAlB,CAFD;AAGH3iC,iBAAS,EAATA,SAHG;AAIH4D,gBAAQ,EAAE;AACNssB,wBAAc,EAAE;AACZlwB,qBAAS,EAATA;AADY,WADV;AAINqhC,cAAI,EAAE;AACFC,kBAAM,EAAE;AACJE,iBAAG,EAAE;AADD;AADN;AAJA;AAJP,OAAP;AAeH;;AAjBD;;AAoBa,YAAAqB,6BAAA,GAAgC,YAAM;AAC/C,UAAM7iC,SAAS,GAAe/H,KAAK,CAAC,EAAD,CAAL,CAAUomC,IAAV,CAAe,CAAf,EACzBttC,GADyB,CACrB;AAAA,eAAM,IAAI,eAAAi/B,QAAJ,CAAaiL,oBAAoB,EAAjC,CAAN;AAAA,OADqB,CAA9B;AAEAj7B,eAAS,CAACjN,IAAV,OAAAiN,SAAS,qBAAS/H,KAAK,CAAC,CAAD,CAAL,CAASomC,IAAT,CAAc,CAAd,EAAiBttC,GAAjB,CAAqB;AAAA,eAAM,IAAI,eAAAi/B,QAAJ,CAAaiL,oBAAoB,CAAC;AAC3Er3B,kBAAQ,EAAE;AACNjD,gBAAI,EAAE;AADA,WADiE;AAI3EA,cAAI,EAAE;AAJqE,SAAD,CAAjC,CAAN;AAAA,OAArB,CAAT,EAAT;AAMAX,eAAS,CAACjN,IAAV,OAAAiN,SAAS,qBAAS/H,KAAK,CAAC,CAAD,CAAL,CAASomC,IAAT,CAAc,CAAd,EAAiBttC,GAAjB,CAAqB;AAAA,eAAM,IAAI,eAAAi/B,QAAJ,CAAaiL,oBAAoB,CAAC;AAC3Er3B,kBAAQ,EAAE;AACNjD,gBAAI,EAAE;AADA,WADiE;AAI3EA,cAAI,EAAE;AAJqE,SAAD,CAAjC,CAAN;AAAA,OAArB,CAAT,EAAT;AAMA,aAAOX,SAAP;AACH,KAhBY;;AAkBb,aAAgB8iC,qBAAhB,GAAiE;AAAA,UAA3BzyB,IAA2B,uEAAN,IAAM;;AAC7D,UAAIA,IAAJ,EAAU;AACN,eAAOA,IAAP;AACH;;AACD,aAAO;AACH0yB,mBAAW,EAAE,IAAIj4C,IAAJ,CAAS,aAAc,OAAO,EAAP,GAAY,EAAnC,CADV;AAEHk4C,uBAAe,EAAE,EAFd;AAGH93C,YAAI,EAAE,UAHH;AAIHe,gBAAQ,EAAE;AAJP,OAAP;AAMH;;AAVD;;AAYa,YAAAg3C,oBAAA,GAAuB,UAAC/3C,IAAD,EAAkB;AAClD,aAAO,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,YAAI,EAAJA,IAAD;AAAO+lB,mBAAW,EAAE,iBAApB;AAAuCD,mBAAW,EAAE;AAApD,OAAX,CAAP;AACH,KAFY;;;;;;;;;;;;;;;;;;;;;;;;;AChnBb;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;QAEauM,I;;;;;AAwCX;AACA;AAEA,sBAAoC;AAAA;;AAAA,YAAxBlX,QAAwB,uEAAJ,EAAI;;AAAA;;AAClC,sCAAMA,QAAN;AACA,gBAAKy7B,UAAL,GAAkBz7B,QAAQ,CAACy7B,UAAT,IAAuB,EAAzC;AACA,gBAAKC,SAAL,GAAiB17B,QAAQ,CAAC07B,SAAT,IAAsB,EAAvC;AACA,gBAAKmB,UAAL,GAAkB78B,QAAQ,CAAC/J,KAAT,IAAkB,EAApC;AACA,gBAAKkH,IAAL,GAAY6C,QAAQ,CAAC7C,IAArB;AACA,gBAAK0e,QAAL,GAAgB7b,QAAQ,CAAC6b,QAAT,IAAqB,KAArC;AACA,gBAAKue,OAAL,GAAep6B,QAAQ,CAACo6B,OAAT,IAAoB,KAAnC;AAGA,gBAAKtwC,IAAL,GAAY,QAAKswC,OAAL,GAAe,UAAf,GAA4B,UAAxC;AACA,gBAAKuB,KAAL,GAAa37B,QAAQ,CAAC27B,KAAT,IAAkB37B,QAAQ,CAAC88B,MAA3B,IAAqC,EAAlD;AACA,gBAAKC,aAAL,GAAqB/8B,QAAQ,CAAC+8B,aAAT,IAA0B/8B,QAAQ,CAAC67B,UAAnC,IAAiD,EAAtE;AACA,gBAAKvP,aAAL,GAAqBtsB,QAAQ,CAAC0sB,YAAT,IAAyB;AAC5C51B,YAAE,EAAEkJ,QAAQ,CAACg9B,eAD+B;AAE5Cp8C,cAAI,EAAEof,QAAQ,CAACi9B;AAF6B,SAA9C;AAKA,gBAAKtS,SAAL,GAAiB,IAAjB;AACA,gBAAK/a,KAAL,GAAa5P,QAAQ,CAAC4P,KAAT,IAAkB,EAA/B;AACA,gBAAKksB,UAAL,GAAkB97B,QAAQ,CAAC87B,UAAT,IAAuB97B,QAAQ,CAAC7C,IAAhC,IAAwC,EAA1D;AACA,gBAAKo+B,SAAL,GAAiBv7B,QAAQ,CAACu7B,SAAT,IAAsB,EAAvC;AACA,gBAAK5Q,SAAL,GAAiB,IAAI,WAAA9B,WAAJ,CACf7oB,QAAQ,CAACvC,QAAT,IAAqBuC,QAAQ,CAACvC,QAAT,YAA6B5L,MAAlD,GACImO,QAAQ,CAACvC,QADb,GAEI;AAAE7c,cAAI,EAAEof,QAAQ,CAACvC;AAAjB,SAHW,CAAjB;AAKA,gBAAK6mB,MAAL,GAActkB,QAAQ,CAACskB,MAAT,IAAmB,EAAjC;AACA,gBAAK7mB,QAAL,GAAgBuC,QAAQ,CAACvC,QAAT,IAAqBuC,QAAQ,CAACk9B,cAA9B,IAAgD,EAAhE;AA5BkC;AA6BnC;AAvED;;;;;;AAmFA;;;iCAGa;AAAA;;AACX,cAAMtsB,OAAO,GAAQ,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B,WAAAsnB,WAA1B,CAArB;AACA,iBAAO,IAAIpoB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,gBAAIiQ,OAAJ,EAAa;AACXA,qBAAO,CAACuF,IAAR,CAAa,OAAI,CAACrf,EAAlB,EAAsB;AAAEqmC,oBAAI,EAAE,OAAI,CAAClnC;AAAb,eAAtB,EAA4C6K,IAA5C,CACE,UAAAnG,CAAC,EAAI;AACH,uBAAI,CAACgwB,SAAL,GAAiBhwB,CAAjB;AACA+F,uBAAO,CAAC/F,CAAD,CAAP;AACD,eAJH,EAKE,UAAAzL,CAAC;AAAA,uBAAIyR,MAAM,CAACzR,CAAD,CAAV;AAAA,eALH;AAOD,aARD,MAQO;AACLwR,qBAAO,CAAC,IAAD,CAAP;AACD;AACF,WAZM,CAAP;AAaD;AAED;;;;;;;;kCAKiB3b,K,EAAgBsrB,G,EAAY;AAAA;;AAC3C,iBAAO,IAAI5P,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AACrC,mBAAI,CAACJ,QAAL,CAAcrI,KAAd,CAAoB;AAAEhC,mBAAK,EAAE,OAAI,CAACA,KAAd;AAAqBlR,mBAAK,EAALA,KAArB;AAA4BsrB,iBAAG,EAAHA;AAA5B,aAApB,EAAuDvP,IAAvD,CACE,UAAAnG,CAAC;AAAA,qBAAI+F,OAAO,CAAC/F,CAAC,IAAIA,CAAC,CAAC5T,MAAF,GAAW,CAAjB,CAAX;AAAA,aADH,EAEE,UAAA6U,CAAC;AAAA,qBAAI8E,OAAO,CAAC,KAAD,CAAX;AAAA,aAFH;AAID,WALM,CAAP;AAMD;AAED;;;;;;gCAGY;AACV,iBAAO,IAAIwW,IAAJ,CAAS,IAAT,CAAP;AACD;AAED;;;;;;oCAGgB;AACd,iBAAO,IAAIA,IAAJ,CAAS,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAEpgB,cAAE,EAAE,IAAN;AAAYb,iBAAK,EAAE;AAAnB,WAAT,CAAT,CAAP;AACD;AAED;;;;;;iCAGa;AACX,cAAM+T,IAAI,mEAAV;;AACA,iBAAOA,IAAI,CAACvM,QAAZ;AACA,iBAAOuM,IAAP;AACD;;;;AAjED;4BAC0B;AACxB,iBAAO,KAAKsiB,aAAZ;AACD;AAED;;;;4BACwB;AACtB,iBAAO,IAAI,WAAAzD,WAAJ,CAAgB,KAAK8B,SAAL,IAAkB,EAAlC,CAAP;AACD;;;4BAhF4B;AAC3B,cAAM/Z,OAAO,GAAG,wBAAAtP,cAAA,CAAeC,UAAf,CAA0B2V,IAA1B,CAAhB;AACA,iBAAOtG,OAAO,GAAGA,OAAO,CAACsN,OAAX,GAAqB,IAAnC;AACD;;;;MALuB,iBAAAne,a;;AAA1B,wB,CA8IA;;;;;;;;;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AASA;;;;;;AAIA,aAAgBq9B,gBAAhB,CAAiCpgC,IAAjC,EAA2C;AACzC,UAAI,CAACA,IAAL,EAAW;AACT,cAAM/b,KAAK,CAAC,gBAAD,CAAX;AACD;;AACD,UAAMmL,MAAM,GAAyB;AACnC0K,UAAE,EAAE,IAAI,QAAAqnB,WAAJ,CAAgBnhB,IAAI,CAAClG,EAAL,IAAW,EAA3B,CAD+B;AAEnClW,YAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgBnhB,IAAI,CAACpc,IAAL,IAAa,EAA7B,CAF6B;AAGnC66C,kBAAU,EAAE,IAAI,QAAAtd,WAAJ,CAAgBnhB,IAAI,CAACy+B,UAAL,IAAmB,EAAnC,EAAuC,CAAC,QAAApd,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWgf,OAAX,CAAmB,sBAAnB,CAAtB,CAAvC,CAHuB;AAInC3B,iBAAS,EAAE,IAAI,QAAAvd,WAAJ,CAAgBnhB,IAAI,CAAC0+B,SAAL,IAAkB,EAAlC,EAAsC,CAAC,QAAArd,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWgf,OAAX,CAAmB,sBAAnB,CAAtB,CAAtC,CAJwB;AAKnCpnC,aAAK,EAAE,IAAI,QAAAkoB,WAAJ,CAAgBnhB,IAAI,CAAC/G,KAAL,IAAc,EAA9B,EAAkC,CAAC,QAAAooB,UAAA,CAAWpoB,KAAZ,CAAlC;AAL4B,OAArC,CAJyC,CAWzC;;AACE,aAAO,IAAI,QAAA4qB,SAAJ,CAAcz0B,MAAd,CAAP;AACH;;AAbD;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;QAcakxC,Y;;;;;AACT,4BACcjiC,SADd,EAEckiC,KAFd,EAGc9/B,QAHd,EAIY6C,QAJZ,EAKImB,eALJ,EAKoC;AAAA;;AAAA;;AAEhC,sCAAMpG,SAAN,EAAiBoG,eAAjB;AANU,gBAAApG,SAAA,GAAAA,SAAA;AACA,gBAAAkiC,KAAA,GAAAA,KAAA;AACA,gBAAA9/B,QAAA,GAAAA,QAAA;AACF,gBAAA6C,QAAA,GAAAA,QAAA;AAIR,gCAAAgB,cAAA,CAAe2hB,UAAf,CAA0B,aAAA/L,IAA1B;AACA,gBAAKpV,KAAL,GAAa,OAAb;AACA,gBAAKC,UAAL,GAAkB,OAAlB;;AACA,gBAAKH,QAAL,GAAgB,UAAC5U,CAAD,EAAIC,CAAJ;AAAA,iBAAU,CAACD,CAAC,CAAC8J,EAAF,CAAK5J,aAAL,CAAmBD,CAAC,CAAC6J,EAArB,CAAD,IAA6B,CAAC9J,CAAC,CAACiJ,KAAF,CAAQ/I,aAAR,CAAsBD,CAAC,CAACgJ,KAAxB,CAAxC;AAAA,SAAhB;;AACA,gBAAKzR,GAAL,CAAS,MAAT,EAAiB,EAAjB;;AACA,gBAAKA,GAAL,CAAS,cAAT,EAAyB,IAAI,aAAA0yB,IAAJ,CAAS;AAAEpgB,YAAE,EAAE,YAAN;AAAoBlW,cAAI,EAAE;AAA1B,SAAT,CAAzB;;AACA,gBAAK4D,GAAL,CAAS,WAAT,EAAsB,IAAtB;;AACA,gBAAK6W,SAAL,CAAesB,WAAf,CAA2BhH,IAA3B,CAAgC,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,iBAAOA,CAAP;AAAA,SAAN,CAAhC,EAAiD9Y,SAAjD,CAA2D;AAAA,iBAAM,QAAK8Z,IAAL,EAAN;AAAA,SAA3D;;AAVgC;AAWnC;AAED;;;;;;AAUA;;AACA;;;;;;iCAMgB+G,K,EAAe65B,M,EAAyC;AAAA,cAAxBC,MAAwB,uEAAN,IAAM;;AACpE,cAAI,CAACD,MAAL,EAAa;AACT,gBAAMlzB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA+4C,kBAAM,GAAGlzB,GAAG,CAAC5kB,QAAJ,CAAa;AAAE2uB,kBAAI,EAAE;AAAR,aAAb,EAA0BpB,UAA1B,CAAqC,KAArC,EAA4CzkB,EAArD;AACH;;AACD,cAAMygB,IAAI,aAAMxR,QAAQ,CAACO,MAAf,SACN,KAAKsC,QAAL,CAAcd,OAAd,CAAsB,gBAAtB,KAA2C,EADrC,qBAAV;AAGA,cAAMk+B,SAAS,GAAG,MAAAC,GAAA,CAAIC,OAAJ,CAAY3uB,IAAZ,CAAlB;;AACA,cAAIrL,cAAJ,EAAoB;AAChBA,0BAAc,CAAC2pB,OAAf,WAA0BmQ,SAA1B,oBAAoD/5B,KAApD;AACAC,0BAAc,CAAC2pB,OAAf,WAA0BmQ,SAA1B,4BAAqDF,MAArD;AACH;;AACD,cAAIn/B,YAAJ,EAAkB;AACdA,wBAAY,CAACkvB,OAAb,WAAwBmQ,SAAxB,oBAAkD/5B,KAAlD;AACAtF,wBAAY,CAACkvB,OAAb,WAAwBmQ,SAAxB,4BAAmDF,MAAnD;AACH;;AACD,cAAIC,MAAJ,EAAY;AACR,iBAAKhgC,QAAL,CAAcogC,EAAd,CAAiB,KAAKpgC,QAAL,CAAcwR,IAAd,EAAjB;AACH;;AACD,iBAAOA,IAAP;AACH;AAED;;;;;;;;8BAKmB3M,Y,EAAkD;AAAA,cAA3B0E,OAA2B,uEAAF,EAAE;;;;;;;;yBAC7D,KAAKvF,eAAL,CAAqBQ,S;;;;;AACrB,wBAAI,CAAC,KAAKN,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC1B,2BAAKA,SAAL,CAAe,OAAf,IAA0B,IAAIlB,OAAJ,CAAkB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7D,+BAAI,CAACnc,GAAL,CAAS,QAAT,EAAmB,SAAnB;;AACA,4BAAIsf,OAAO,GAAG,IAAI,OAAAC,WAAJ,EAAd;;AACA,4BAAI,CAACiD,OAAD,IAAYA,OAAO,CAACzG,IAAR,KAAiB,KAAjC,EAAwC;AACpCuD,iCAAO,GAAGA,OAAO,CAACg6B,MAAR,CAAe,cAAf,EAA+B,mCAA/B,CAAV;AACH;;AACD,4BAAMhgC,GAAG,GAAG,CAACkJ,OAAO,GAAGA,OAAO,CAAClJ,GAAX,GAAiB,EAAzB,KAAgC,cAA5C;;AACA,+BAAI,CAACy/B,KAAL,CAAWv6B,IAAX,CAAgBlF,GAAhB,EAAqBwE,YAArB,EAAmC;AAAEwB,iCAAO,EAAPA;AAAF,yBAAnC,EAAgDhhB,SAAhD,CACI,UAAC8Y,CAAD;AAAA,iCAAO,IAAP;AAAA,yBADJ,EAEI,UAAC1M,CAAD;AAAA,iCAAOyR,MAAM,CAACzR,CAAD,CAAb;AAAA,yBAFJ,EAGI,YAAM;AACF,iCAAI,CAACmM,SAAL,CAAesE,IAAf,CAAoBo+B,SAApB;;AACAr9B,iCAAO;AACV,yBANL;AAQH,uBAfyB,CAA1B;AAgBH;;uDACM,KAAKiB,SAAL,CAAe,OAAf,C;;;;;;;;;AAEd;AAGD;;;;;;iCAGgB;AACZ,eAAKtG,SAAL,CAAesE,IAAf,CAAoBq+B,MAApB;AACH;AAED;;;;;;;0CAI4B;;;;;;uDACjB,KAAK7nB,IAAL,CAAU,SAAV,C;;;;;;;;;AACV;AAED;;;;;;+BAGgC;AAAA;;AAAA,cAAjB8nB,KAAiB,uEAAD,CAAC;AAC5B,cAAM5gC,OAAO,GAA4B,KAAKiD,QAAL,CAAc/F,GAAd,CAAkB,SAAlB,KAAgC,EAAzE;AACA8C,iBAAO,CAACL,IAAR,GAAe;AAAEjB,mBAAO,EAAE,0BAAX;AAAuCnc,iBAAK,EAAE;AAA9C,WAAf;;AACA,eAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AACA,eAAK7Y,GAAL,CAAS,QAAT,EAAmB,SAAnB;AACA,iBAAO,IAAIic,OAAJ,CAAkB,UAACC,OAAD,EAAa;AAClC;AACA;AACA,gBAAI,OAAI,CAACe,eAAL,CAAqBQ,SAArB,IAAkCg8B,KAAK,GAAG,CAA9C,EAAiD;AAC7C,qBAAI,CAACz5C,GAAL,CAAS,QAAT,EAAmB,SAAnB;;AACA6Y,qBAAO,CAACL,IAAR,GAAe;AAAEjB,uBAAO,EAAE,0BAAX;AAAuCnc,qBAAK,EAAE;AAA9C,eAAf;;AACA,qBAAI,CAAC0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AACA,qBAAOqD,OAAO,EAAd;AACH;;AACD,mBAAI,CAACyV,IAAL,CAAU,SAAV,EAAqBrV,IAArB,CACI,UAAOmd,YAAP;AAAA,qBAAwB,OAAD,UAAC,CAAD,OAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB,6BAAKz5B,GAAL,CAAS,QAAT,EAAmB,WAAnB;AACA,6BAAKA,GAAL,CAAS,cAAT,EAAyBy5B,YAAzB;;AACA,6BAAK59B,YAAL,CAAkB2S,IAAlB,CAAuB,IAAvB;;AAHmB,8BAIf,KAAKsN,QAAL,IAAiB,KAAKA,QAAL,CAAcd,OAAd,CAAsB,2BAAtB,CAJF;AAAA;AAAA;AAAA;;AAKf,6BAAK2W,IAAL,CAAU8H,YAAY,CAAChoB,KAAvB,EAA8B6K,IAA9B,CACI,UAAO9D,IAAP;AAAA,iCAAgB,OAAD,UAAC,CAAD,OAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AACX,yCAAKxY,GAAL,CAAS,cAAT,EAAyBwY,IAAzB;;AACA,wCAAI,KAAKsD,QAAL,CAAcd,OAAd,CAAsB,0BAAtB,CAAJ,EAAuD;AACnD,2CAAKmV,QAAL,CAAc,UAAd,EAA0B;AAAA,+CAAM3X,IAAI,CAACkhC,MAAL,EAAN;AAAA,uCAA1B,EAA+C,IAA/C;AACH;;AAJU;AAKX,2CAAM,KAAKC,aAAL,YAA2B,UAAAviC,CAAC;AAAA,6CAAI,IAAJ;AAAA,qCAA5B,CAAN;;AALW;AAMX8E,2CAAO;AACPrD,2CAAO,CAACL,IAAR,GAAe;AACXjB,6CAAO,EAAE,0BADE;AAEXnc,2CAAK,EAAE;AAFI,qCAAf;;AAIA,yCAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAC,EAAhB;AAAA,yBADJ,EAcI;AAAA,iCAAM,OAAI,CAAC7Z,OAAL,CAAa,MAAb,EAAqB;AAAA,mCAAM,OAAI,CAAC0b,IAAL,CAAU,EAAE++B,KAAZ,EAAmBn9B,IAAnB,CAAwB;AAAA,qCAAMJ,OAAO,EAAb;AAAA,6BAAxB,CAAN;AAAA,2BAArB,EAAqEvb,IAAI,CAACi8B,GAAL,CAAS,IAAT,EAAe,MAAM6c,KAArB,CAArE,CAAN;AAAA,yBAdJ;AALe;AAAA;;AAAA;AAuBf;AACA,4BAAI,KAAK39B,QAAL,CAAcd,OAAd,CAAsB,0BAAtB,CAAJ,EAAuD;AACnD,+BAAKmV,QAAL,CAAc,UAAd,EAA0B;AAAA,mCAAMsJ,YAAY,CAACigB,MAAb,EAAN;AAAA,2BAA1B,EAAuD,IAAvD;AACH;;AA1Bc;AA2Bf,+BAAM,KAAKC,aAAL,YAA2B,UAAAviC,CAAC;AAAA,iCAAI,IAAJ;AAAA,yBAA5B,CAAN;;AA3Be;AA4Bf8E,+BAAO;AACPrD,+BAAO,CAACL,IAAR,GAAe;AAAEjB,iCAAO,EAAE,0BAAX;AAAuCnc,+BAAK,EAAE;AAA9C,yBAAf;;AACA,6BAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,SAAlB,EAA6B6Y,OAA7B;;AA9Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAC,EAAxB;AAAA,aADJ,EAkCI;AAAA,qBAAM,OAAI,CAAC7Z,OAAL,CAAa,MAAb,EAAqB;AAAA,uBAAM,OAAI,CAAC0b,IAAL,CAAU,EAAE++B,KAAZ,EAAmBn9B,IAAnB,CAAwB;AAAA,yBAAMJ,OAAO,EAAb;AAAA,iBAAxB,CAAN;AAAA,eAArB,EAAqEvb,IAAI,CAACi8B,GAAL,CAAS,IAAT,EAAe,MAAM6c,KAArB,CAArE,CAAN;AAAA,aAlCJ;AAoCH,WA7CM,CAAP;AA8CH;;;wCAE6B;;;;;;;;AACpB1C,6B,GAAY,KAAKrd,OAAL,CAAaqd,S;;0BAC3B,CAACA,SAAD,IAAc,CAACA,SAAS,CAACx0C,M;;;;;uDAClB,E;;;AAELq3C,4B,GAA4B,E;6DACd7C,S;;;AAApB,gFAA+B;AAApBtlC,6BAAoB;AAC3BmoC,gCAAQ,CAAC1xC,IAAT,CAAc,KAAKypB,IAAL,CAAUlgB,KAAV,CAAd;AACH;;;;;;;;AACY,2BAAMwK,OAAO,CAAC49B,GAAR,CAAYD,QAAZ,CAAN;;;AAAPr7C,wB;AACN,yBAAKyB,GAAL,CAAS,WAAT,EAAsBzB,IAAtB;AACA,yBAAKyB,GAAL,CAAS,MAAT,EAAiB,OAAA+G,MAAA,CAAO,CAAC,KAAKgP,GAAL,CAAS,MAAT,KAAoB,EAArB,EAAyBsa,MAAzB,CAAgC9xB,IAAhC,CAAP,CAAjB;uDACOA,I;;;;;;;;;AACV;AAED;;;;;;;gCAIkBid,Q,EAAa;AAC3B,iBAAO,IAAI,aAAAkX,IAAJ,CAASlX,QAAT,CAAP;AACH;;;4BAjKiB;AACd,iBAAO,KAAKzF,GAAL,CAAS,cAAT,CAAP;AACH;AAED;;;;4BACuB;AACnB,iBAAO,KAAK2jB,OAAL,IAAgB,KAAKA,OAAL,CAAapnB,EAAb,KAAoB,YAA3C;AACH;;;;MA3B6B,eAAA0K,c;;AAHlC;;;uBAGa87B,Y,EAAY,+B,EAAA,0B,EAAA,wB,EAAA,kC,EAAA,+B;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFT;;;;;2BAEHA,Y,EAAY;cAHxB,OAAA5lC,UAGwB;eAHb;AACRoI,oBAAU,EAAE;AADJ,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCzB;AAAA;AAAA;;AAGA,QAAMw+B,SAAS,GAAG,IAAlB;AAEA;;;;;AAIA,aAAgBC,iBAAhB,CAAkC15C,IAAlC,EAAiD;AAC/C,UAAM2P,IAAI,GAAG,IAAI,UAAAuB,MAAJ,CAAW;AAAElR,YAAI,EAAJA;AAAF,OAAX,CAAb;AACA,aAAO,UAAC8O,CAAD;AAAA,eAAO6qC,YAAY,CAAC7qC,CAAD,EAAI9O,IAAJ,CAAnB;AAAA,OAAP;AACD;;AAHD;AAKA;;;;;;AAKA,aAAgB25C,YAAhB,CAA6B1d,OAA7B,EAAuD2d,OAAvD,EAAyE;AACvE,UAAMjqC,IAAI,GAAG,IAAI,UAAAuB,MAAJ,CAAW;AAAClR,YAAI,EAAE45C;AAAP,OAAX,CAAb;AACA,UAAM55C,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,YAAI,EAAEi8B,OAAO,CAAC/4B;AAAf,OAAX,CAAb;AACA,aAAOlD,IAAI,CAACk3B,YAAL,CAAkBvnB,IAAlB,IAA0B;AAAE3P,YAAI,EAAEy5C,SAAR;AAAmBviC,eAAO,EAAE;AAA5B,OAA1B,GAAmG,IAA1G;AACD;;AAJD;AAMA;;;;;;AAKA,aAAgB2iC,sBAAhB,CAAuC75C,IAAvC,EAAqD45C,OAArD,EAAuE;AACrE,UAAMjqC,IAAI,GAAG,IAAI,UAAAuB,MAAJ,CAAW;AAAClR,YAAI,EAAE45C;AAAP,OAAX,CAAb;AACA,aAAO,UAAC9qC,CAAD;AAAA,eAAOgrC,iBAAiB,CAAChrC,CAAD,EAAI9O,IAAJ,EAAU2P,IAAI,CAAChG,EAAf,CAAxB;AAAA,OAAP;AACD;;AAHD;AAKA;;;;;;;AAMA,aAAgBmwC,iBAAhB,CAAkC7d,OAAlC,EAA4Dj8B,IAA5D,EAA0E45C,OAA1E,EAA4F;AAC1F,UAAMn0B,GAAG,GAAG,IAAI,UAAAvU,MAAJ,CAAW;AAAClR,YAAI,EAAE45C;AAAP,OAAX,CAAZ;AACA,UAAMhyC,KAAK,GAAGq0B,OAAO,CAAC/4B,KAAR,CAAclB,KAAd,CAAoB,GAApB,CAAd;AACA,UAAM+3C,QAAQ,GAAG,IAAI,UAAA7oC,MAAJ,CAAW;AAAClR,YAAI,EAAJA;AAAD,OAAX,CAAjB;AACA,aAAO+5C,QAAQ,CAACn5C,QAAT,CAAkB;AAAE0B,YAAI,EAAE,CAACsF,KAAK,CAAC,CAAD,CAAd;AAAmBvH,cAAM,EAAE,CAACuH,KAAK,CAAC,CAAD;AAAjC,OAAlB,EAA0DsvB,YAA1D,CAAuEzR,GAAvE,IAA8E;AACnFvlB,aAAK,EAAEu5C,SAD4E;AAEnFviC,eAAO,EAAE;AAF0E,OAA9E,GAGH,IAHJ;AAID;;AARD;;AAUA,aAAgB8iC,qBAAhB,GAA2E;AAAA,UAArCzd,GAAqC,uEAAvB,EAAuB;AAAA,UAAnB94B,GAAmB,uEAAL,GAAK;AACzE,aAAO,UAACqL,CAAD;AAAA,eAAOmrC,gBAAgB,CAACnrC,CAAD,EAAIytB,GAAJ,EAAS94B,GAAT,CAAvB;AAAA,OAAP;AACD;;AAFD;;AAIA,aAAgBw2C,gBAAhB,CAAiChe,OAAjC,EAAgG;AAAA,UAArCM,GAAqC,uEAAvB,EAAuB;AAAA,UAAnB94B,GAAmB,uEAAL,GAAK;;AAC9F,UAAIw4B,OAAO,CAAC/4B,KAAR,IAAiBq5B,GAAG,IAAI,EAAxB,CAAJ,EAAiC;AAC/B,eAAO;AAAEx7B,kBAAQ,EAAE04C,SAAZ;AAAuBviC,iBAAO,wCAAiCqlB,GAAjC,oBAA8CA,GAAG,KAAK,CAAR,GAAY,GAAZ,GAAkB,EAAhE;AAA9B,SAAP;AACD,OAFD,MAEO,IAAIN,OAAO,CAAC/4B,KAAR,IAAiBO,GAAG,IAAI,GAAxB,CAAJ,EAAkC;AACvC,eAAO;AAAEvB,gBAAM,EAAEu3C,SAAV;AAAqBviC,iBAAO,wCAAiCzT,GAAjC,oBAA8CA,GAAG,KAAK,CAAR,GAAY,GAAZ,GAAkB,EAAhE;AAA5B,SAAP;AACD;;AACD,aAAO,IAAP;AACD;;AAPD;;AASA,aAAgBy2C,sBAAhB,CAAuCrhC,IAAvC,EAAoE;AAAA,UAAjB0jB,GAAiB,uEAAH,CAAG;AAClE,aAAO,UAACztB,CAAD;AAAA,eAAOqrC,iBAAiB,CAACrrC,CAAD,EAAI+J,IAAJ,EAAU0jB,GAAV,CAAxB;AAAA,OAAP;AACD;;AAFD;;AAIA,aAAgB4d,iBAAhB,CAAkCle,OAAlC,EAA4DpjB,IAA5D,EAAyF;AAAA,UAAjB0jB,GAAiB,uEAAH,CAAG;;AACvF,UAAI,CAACN,OAAD,IAAY,EAAEA,OAAO,CAAC/4B,KAAR,YAAyB6J,KAA3B,CAAhB,EAAmD;AACjD,eAAOwvB,GAAG,GAAG,CAAN,GACH;AAAE6d,iBAAO,EAAE,IAAX;AAAiBljC,iBAAO,uBAAgBqlB,GAAhB,sBAA+BA,GAAG,KAAK,CAAR,GAAY,KAAZ,GAAoB,OAAnD;AAAxB,SADG,GAEH,IAFJ;AAGD;;AACD,UAAMr+B,IAAI,GAAW+9B,OAAO,CAAC/4B,KAA7B;;AACA,UAAI2V,IAAJ,EAAU;AACR,YAAM8E,MAAM,GAAGzf,IAAI,CAACsF,IAAL,CAAU,UAAA2E,CAAC;AAAA,iBAAIA,CAAC,CAACiJ,KAAF,KAAYyH,IAAI,CAACzH,KAArB;AAAA,SAAX,CAAf;;AACA,YAAIuM,MAAJ,EAAY;AACVzf,cAAI,CAACuO,MAAL,CAAYvO,IAAI,CAACkF,OAAL,CAAaua,MAAb,CAAZ,EAAkC,CAAlC;AACD;AACF;;AACD,aAAOzf,IAAI,CAACgE,MAAL,IAAeq6B,GAAf,GAAqB,IAArB,GAA4B;AACjCx0B,aAAK,EAAE,IAD0B;AAEjCmP,eAAO,uBAAgBqlB,GAAhB,sBAA+BA,GAAG,KAAK,CAAR,GAAY,KAAZ,GAAoB,OAAnD;AAF0B,OAAnC;AAID;;AAjBD;;AAmBA,aAAgBvC,eAAhB,CAAgCqgB,aAAhC,EAAgE;AAC9D,aAAO,UAACpe,OAAD,EAA8B;AACnC;AACA,YAAMxW,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,eAAOy6C,aAAa,CAACn3C,KAAd,CAAoBrC,QAApB,CAA6B;AAAEJ,iBAAO,EAAEw7B,OAAO,CAAC/4B,KAAR,IAAiB;AAA5B,SAA7B,EAA+Dg0B,YAA/D,CAA4EzR,GAA5E,IAAkF;AAAE4G,kBAAQ,EAAE;AAAZ,SAAlF,GAAuG,IAA9G;AACD,OAJD;AAKD;;AAND;;AAQA,aAAgBiuB,qBAAhB,CAAsCre,OAAtC,EAAgE;AAC9D,UAAM/4B,KAAK,GAAG+4B,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE/4B,KAAvB;;AACA,UAAKA,KAAK,KAAK,EAAf,EAAmB;AACf,eAAO,IAAP,CADe,CACF;AAChB;;AACD,UAAMq3C,YAAY,GAAGr3C,KAAK,CAACs3C,IAAN,GAAat4C,MAAb,KAAwB,CAA7C,CAL8D,CAM9D;;AACA,aAAO,CAACq4C,YAAD,GAAgB,IAAhB,GAAuB;AAAEE,kBAAU,EAAE;AAAd,OAA9B;AACD;;AARD;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA,aAASl0C,OAAT,CAAiBrD,KAAjB,EAAgChB,MAAhC,EAA8C;AAC1C,UAAIsE,GAAG,aAAMtD,KAAN,CAAP;;AACA,aAAOsD,GAAG,CAACtE,MAAJ,GAAaA,MAApB;AAA4BsE,WAAG,cAAOA,GAAP,CAAH;AAA5B;;AACA,aAAOA,GAAP;AACH;;AASD,QAAMif,GAAG,GAAG,IAAI7lB,IAAJ,EAAZ;;QAEasR,M;AAST,sBAAYiU,IAAZ,EAAiC;AAAA;;AALjC,aAAAW,WAAA,GAAuB,IAAvB;AAMI,aAAK40B,QAAL,GAAgB,QAAOv1B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEnlB,IAAb,MAAsB,QAAtB,GAAiC,QAAA2C,QAAA,CAASC,UAAT,CAAoBuiB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEnlB,IAA1B,CAAjC,GAAmE,CAAAmlB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEnlB,IAAN,IAAamlB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEnlB,IAAnB,GAA0B,QAAA2C,QAAA,CAASC,UAAT,CAAoB6iB,GAAG,CAAC5iB,OAAJ,EAApB,CAA7G;AACA,aAAKijB,WAAL,GAAmB,CAAAX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEW,WAAN,MAAsB,KAAtB,GAA8BX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEW,WAApC,GAAkD,IAArE;AACA,aAAKgO,OAAL,GAAe,CAAA3O,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAE2O,OAAN,KAAiB,KAAhC;AACA,aAAK6mB,QAAL,GAAgB,QAAAh4C,QAAA,CAAS8iB,GAAT,GAAem1B,QAA/B;AACA,aAAK70B,WAAL,GAAmB,CAAAZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEY,WAAN,KAAqB,KAAK40B,QAA7C;AACA,aAAK36C,IAAL,GAAY,CAAC,KAAK8lB,WAAN,GAAoB,KAAK40B,QAAL,CAAcpK,OAAd,CAAsB,KAAKvqB,WAA3B,CAApB,GAA8D,KAAK20B,QAA/E;AACA,aAAKv3B,KAAL,GAAa,KAAKnjB,IAAL,CAAU6B,OAAvB;AACH,O,CAED;;;;;iCAsDiBg5C,U,EAAoBC,I,EAAyC;AAAA,cAApBC,QAAoB,uEAAT,SAAS;AAC1E,iBAAO,KAAK/6C,IAAL,CAAUsD,IAAV,CAAeu3C,UAAU,CAAC76C,IAA1B,EAAgC86C,IAAhC,EAAsCC,QAAtC,CAAP;AACH,S,CAED;;;;qCACqBD,I,EAAoB;AACrC;AACA,cAAIE,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAUi7C,OAAV,CAAkBH,IAAlB;AAAR,WAAR,CAAX,CAAd,CAFqC,CAGrC;;AACA,cAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,gBAAI,KAAKtpB,WAAL,KAAqB,CAAzB,EAA4B;AACxB;AACAwpB,qBAAO,GAAI,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAElR,oBAAI,EAAE,KAAKA;AAAb,eAAT,CAAX,CAAX;AACH,aAHD,MAGO,IAAI,KAAKwxB,WAAL,KAAqB,CAAzB,EAA4B;AAC/B;AACA,kBAAM0pB,MAAM,GAAI,IAAIhqC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAElR,oBAAI,EAAE,KAAKA;AAAb,eAAT,CAAX,CAAhB;AACAg7C,qBAAO,GAAGE,MAAM,CAACzpC,aAAP,CAAqB;AAAE+d,oBAAI,EAAE;AAAR,eAArB,CAAV;AACH,aAJM,MAIA;AACH;AACA,kBAAM0rB,OAAM,GAAG,IAAIhqC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,oBAAI,EAAE,KAAKA,IAAL,CAAUi7C,OAAV,CAAkBH,IAAlB;AAAR,eAAR,CAAX,CAAf;;AACAE,qBAAO,GAAGE,OAAM,CAACzpC,aAAP,CAAqB;AAAE+d,oBAAI,EAAE;AAAR,eAArB,CAAV;AACH;AACJ;;AAED,iBAAOwrB,OAAP;AACH,S,CAED;;;;mCACmBF,I,EAAoB;AACnC;AACA,cAAIE,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAUi7C,OAAV,CAAkBH,IAAlB;AAAR,WAAR,CAAX,CAAd,CAFmC,CAGnC;;AACA,cAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,gBAAI,KAAKtpB,WAAL,KAAqB,CAAzB,EAA4B;AACxB;AACAwpB,qBAAO,GAAI,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAElR,oBAAI,EAAE,KAAKA;AAAb,eAAT,CAAX,CAAX;AACH,aAHD,MAGO,IAAI,KAAKwxB,WAAL,KAAqB,CAAzB,EAA4B;AAC/B;AACA;AACA,kBAAM2pB,MAAM,GAAI,IAAIjqC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAM,IAAN,CAAC,EAAS;AAAElR,oBAAI,EAAE,KAAKA;AAAb,eAAT,CAAX,EAAyCa,QAAzC,CAAkD;AAAE2uB,oBAAI,EAAE;AAAR,eAAlD,CAAhB;AACAwrB,qBAAO,GAAGG,MAAM,CAAC/sB,UAAP,CAAkB0sB,IAAlB,EAAwBrpC,aAAxB,CAAsC;AAAE+d,oBAAI,EAAE;AAAR,eAAtC,CAAV,CAJ+B,CAI+B;AACjE,aALM,MAKA;AACH;AACA;AACA,kBAAM4rB,KAAK,GAAG,IAAIlqC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,oBAAI,EAAE,KAAKA,IAAL,CAAUq7C,KAAV,CAAgBP,IAAhB;AAAR,eAAR,CAAX,CAAd;AACAE,qBAAO,GAAGI,KAAK,CAAC3pC,aAAN,CAAoB;AAAE+d,oBAAI,EAAE;AAAR,eAApB,CAAV;AACH;AACJ,WAfD,MAeO;AACHwrB,mBAAO,GAAI,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,kBAAI,EAAE,KAAKA,IAAL,CAAUq7C,KAAV,CAAgBP,IAAhB;AAAR,aAAR,CAAX,CAAX;AACH;;AAED,iBAAOE,OAAP;AACH;;;qCAEgB;AACb,cAAM1E,GAAG,GAAG,IAAIplC,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAK06C;AAAZ,WAAX,CAAZ;AACA,iBAAO,KAAK5mB,OAAL,GACL,KAAKpqB,YAAL,CAAkB,KAAlB,EAAyBC,EAAzB,GAA8B,KAAKmtB,QAAL,CAAcwf,GAAd,EAAmB,SAAnB,CADzB,GAEL,KAAK3sC,EAFP;AAGH,S,CAED;;;;gCACY;AACR;AACA,iBAAO,KAAK9I,QAAL,CAAc;AAAE6Q,mBAAO,EAAE;AAAX,WAAd,CAAP;AACH,S,CAED;;;;iCACiB3Q,Q,EAAwBu6C,gB,EAA0B;AAC/D,iBAAO,IAAIpqC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAEs7C,gBAAgB,GAAG,KAAKt7C,IAAL,CAAUQ,IAAV,CAAeO,QAAf,EAAyBs6C,KAAzB,CAA+B,OAA/B,CAAH,GAA6C,KAAKr7C,IAAL,CAAUQ,IAAV,CAAeO,QAAf;AAArE,WAAR,CAAX,CAAP;AACH,S,CAED;;;;sCACsBA,Q,EAAsB;AACxC,cAAMi6C,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAUu7C,KAAV,CAAgBx6C,QAAhB;AAAR,WAAR,CAAX,CAAhB;AACA,iBAAOi6C,OAAP;AACH;;;iCAEgB1+B,G,EAAoB;AACjC,cAAM0+B,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAUL,GAAV,CAAc2c,GAAd;AAAR,WAAR,CAAX,CAAhB;AACA,iBAAO0+B,OAAP;AACH;;;mCAEkB5zC,M,EAAc;AAC7B;AACA;AACA;AACA,iBAAO,KAAKpH,IAAL,CAAUQ,IAAV,CAAe;AAAEkR,mBAAO,EAAE;AAAX,WAAf,EAA+B3O,QAA/B,CAAwCqE,MAAxC,CAAP;AACH;;;wCAEuBA,M,EAAc;AAClC;AACA,iBAAO,KAAKpH,IAAL,CAAUQ,IAAV,CAAe;AAAEkR,mBAAO,EAAE;AAAX,WAAf,EAA+B4+B,OAA/B,CAAuC,KAAKqK,QAA5C,EAAsD53C,QAAtD,CAA+DqE,MAA/D,CAAP;AACH;;;mCAEiByzC,U,EAAoB33C,K,EAAmB;AACrD,iBAAO,KAAKlD,IAAL,CAAUw7C,OAAV,CAAkBX,UAAU,CAAC76C,IAA7B,EAAmCkD,KAAnC,CAAP;AACH;;;oCAEkB23C,U,EAAoBC,I,EAAmB;AACtD,kBAAQA,IAAR;AACI,iBAAK,MAAL;AACI,qBAAO,KAAKW,QAAL,GAAgBZ,UAAU,CAACY,QAAlC;;AACJ,iBAAK,OAAL;AACI,kBAAG,KAAKtkB,WAAL,CAAiB0jB,UAAjB,EAA6B,MAA7B,CAAH,EAAwC;AACpC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,MAA5B,CAAJ,EAAwC;AAC1C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKa,SAAL,GAAiBb,UAAU,CAACa,SAAnC;AACH;;AACL,iBAAK,KAAL;AACI,kBAAG,KAAKvkB,WAAL,CAAiB0jB,UAAjB,EAA6B,OAA7B,CAAH,EAAyC;AACrC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,OAA5B,CAAJ,EAAyC;AAC3C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKc,OAAL,GAAed,UAAU,CAACc,OAAjC;AACH;;AACL,iBAAK,MAAL;AACI,kBAAG,KAAKxkB,WAAL,CAAiB0jB,UAAjB,EAA6B,KAA7B,CAAH,EAAuC;AACnC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,KAA5B,CAAJ,EAAuC;AACzC,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKxQ,QAAL,GAAgBwQ,UAAU,CAACxQ,QAAlC;AACH;;AACL,iBAAK,QAAL;AACI,kBAAG,KAAKlT,WAAL,CAAiB0jB,UAAjB,EAA6B,MAA7B,CAAH,EAAwC;AACpC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,MAA5B,CAAJ,EAAwC;AAC1C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKp6C,OAAL,GAAeo6C,UAAU,CAACp6C,OAAjC;AACH;;AACL;AACI,qBAAO,KAAKkJ,EAAL,GAAUkxC,UAAU,CAAClxC,EAA5B;AApCR;AAsCH;;;qCAEmBkxC,U,EAAoBC,I,EAAmB;AACvD,kBAAQA,IAAR;AACI,iBAAK,MAAL;AACI,qBAAO,KAAKW,QAAL,GAAgBZ,UAAU,CAACY,QAAlC;;AACJ,iBAAK,OAAL;AACI,kBAAG,KAAKvkB,YAAL,CAAkB2jB,UAAlB,EAA8B,MAA9B,CAAH,EAAyC;AACrC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,MAA5B,CAAJ,EAAwC;AAC1C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKa,SAAL,GAAiBb,UAAU,CAACa,SAAnC;AACH;;AACL,iBAAK,KAAL;AACI,kBAAG,KAAKxkB,YAAL,CAAkB2jB,UAAlB,EAA8B,OAA9B,CAAH,EAA0C;AACtC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,OAA5B,CAAJ,EAAyC;AAC3C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKc,OAAL,GAAed,UAAU,CAACc,OAAjC;AACH;;AACL,iBAAK,MAAL;AACI,kBAAG,KAAKzkB,YAAL,CAAkB2jB,UAAlB,EAA8B,KAA9B,CAAH,EAAwC;AACpC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,KAA5B,CAAJ,EAAuC;AACzC,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKxQ,QAAL,GAAgBwQ,UAAU,CAACxQ,QAAlC;AACH;;AACL,iBAAK,QAAL;AACI,kBAAG,KAAKnT,YAAL,CAAkB2jB,UAAlB,EAA8B,MAA9B,CAAH,EAAyC;AACrC,uBAAO,IAAP;AACH,eAFD,MAEM,IAAG,CAAC,KAAK1e,UAAL,CAAgB0e,UAAhB,EAA4B,MAA5B,CAAJ,EAAwC;AAC1C,uBAAO,KAAP;AACH,eAFK,MAED;AACD,uBAAO,KAAKp6C,OAAL,GAAeo6C,UAAU,CAACp6C,OAAjC;AACH;;AACL;AACI,qBAAO,KAAKkJ,EAAL,GAAUkxC,UAAU,CAAClxC,EAA5B;AApCR;AAsCH;;;+BAEaqgC,E,EAAU;AACpB,cAAMgR,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBACnB,IADmB,CAAC,EAChB;AACPlR,gBAAI,EAAE,KAAKA,IAAL,CAAUswC,OAAV,CAAkBtG,EAAlB,CADC;AAEPjkB,uBAAW,EAAEikB,EAFN;AAGPlkB,uBAAW,EAAE;AAHN,WADgB,CAAX,CAAhB;AAMA,iBAAOk1B,OAAP;AACH;;;qCAEmBj3C,S,EAAiB;AACjC,cAAMi3C,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBACnB,IADmB,CAAC,EAChB;AACPlR,gBAAI,EAAE+D;AADC,WADgB,CAAX,CAAhB;AAIA,iBAAOi3C,OAAP;AACH;;;AAMD;oCACoC;AAAA,cAAlB37B,KAAkB,uEAAF,EAAE;AAChC3Z,iBAAO,CAACV,GAAR,WAAeqa,KAAf,0BAA2C,KAAKxe,QAAL,CAAc;AAAE6Q,mBAAO,EAAE;AAAX,WAAd,EAA8BzG,eAA9B,CAA8C,wBAA9C,CAA3C,EAAoH,KAAK0vC,QAAzH;AACAj1C,iBAAO,CAACV,GAAR,WAAeqa,KAAf,6BAA8C,KAAKxe,QAAL,CAAc;AAAE6Q,mBAAO,EAAE;AAAX,WAAd,EAA8BpQ,UAA9B,CAAyC,wBAAzC,CAA9C,EAAkH,KAAKykB,WAAvH;AACH;;;4BApQY;AACT,iBAAO,KAAK/lB,IAAL,CAAU6C,OAAV,EAAP;AACH,S,CAED;;;;4BACkB;AACd,iBAAOvC,IAAI,CAACs7C,KAAL,CAAW,KAAK57C,IAAL,CAAU67C,SAAV,EAAX,CAAP;AACH,S,CAED;;;;4BACiB;AACb,iBAAO,KAAK77C,IAAL,CAAUI,MAAjB;AACH,S,CAED;;;;4BACkB;AACd,iBAAO,KAAKJ,IAAL,CAAUK,MAAjB;AACH,S,CAED;;;;4BACgB;AACZ,iBAAO,KAAKL,IAAL,CAAUsC,IAAjB;AACH;;;4BAEa;AACV,cAAM04C,OAAO,GAAG,IAAI9pC,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAK,IAAL,CAAC,EAAQ;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAU87C,KAAV;AAAR,WAAR,CAAX,CAAhB;AACA,iBAAOd,OAAO,CAACtpC,OAAf;AACH;;;4BAEiB;AACd,iBAAO,KAAK1R,IAAL,CAAUmE,GAAjB;AACH;;;4BAEkB;AACf,iBAAO,KAAKnE,IAAL,CAAUsC,IAAjB;AACH;;;4BAEkB;AACf,iBAAO,KAAKtC,IAAL,CAAUqC,IAAjB;AACH;;;4BAEqB;AAClB,cAAI;AACA,mBAAO,KAAKrC,IAAL,CAAU8E,OAAjB;AACH,WAFD,CAEE,OAAOuF,CAAP,EAAU;AACR,mBAAO,KAAKrK,IAAL,CAAU+7C,QAAV,GAAqBC,MAArB,EAAP;AACH;AACJ;;;4BAEmB;AAChB,iBAAO,KAAKh8C,IAAL,CAAUoC,KAAjB;AACH;;;4BAyMgB;AACb,iBAAO,KAAKpC,IAAL,CAAU+7C,QAAV,EAAP;AACH;;;;;;AAlRL;;AA2Ra,YAAAtyC,OAAA,GAAU,YAA6B;AAAA,UAA5BzJ,IAA4B,uEAAf,IAAIJ,IAAJ,EAAe;AAChD,aAAO,IAAIsR,MAAJ,CAAW;AAAClR,YAAI,EAAEA,IAAI,CAAC6C,OAAL;AAAP,OAAX,CAAP;AACH,KAFY,C,CAIb;;;AACa,YAAAo5C,sCAAA,GAAyC,UAACl4C,SAAD,EAAoBm4C,gBAApB,EAAyD;AAC3G,UAAMl8C,IAAI,GAAG,IAAIJ,IAAJ,CAASmE,SAAT,CAAb;AACA,aAAO,IAAImN,MAAJ,CAAW;AAAElR,YAAI,EAAE+D,SAAR;AAAmBgiB,mBAAW,EAAEm2B,gBAAhC;AAAkDp2B,mBAAW,EAAE;AAA/D,OAAX,EAAmFllB,QAAnF,CAA4F;AAC/FuD,WAAG,EAAEnE,IAAI,CAACoE,OAAL,EAD0F;AAE/F9B,YAAI,EAAEtC,IAAI,CAAC4qC,QAAL,EAFyF;AAG/FvqC,cAAM,EAAEL,IAAI,CAAC8qC,UAAL;AAHuF,OAA5F,CAAP;AAKH,KAPY,C,CASb;;;AACa,YAAAqR,sCAAA,GAAyC,UAACp4C,SAAD,EAAoBm4C,gBAApB,EAAyD;AAC3G,UAAMvB,QAAQ,GAAG,QAAAh4C,QAAA,CAAS8iB,GAAT,GAAem1B,QAAhC;AACA,UAAMwB,WAAW,GAAG,cAAAC,iBAAA,CAAkB1B,QAAlB,EAA4B,IAAI/6C,IAAJ,CAASmE,SAAT,CAA5B,CAApB;AACA,UAAMu4C,aAAa,GAAG,cAAAD,iBAAA,CAAkBH,gBAAlB,EAAoC,IAAIt8C,IAAJ,CAASmE,SAAT,CAApC,CAAtB;;AACA,UAAIq4C,WAAW,GAAGE,aAAlB,EAAiC;AAC7B,YAAMC,IAAI,GAAGx4C,SAAS,IAAIq4C,WAAW,GAAGE,aAAlB,CAAtB;AACA,eAAQ,IAAIprC,MAAJ,CAAW;AAAClR,cAAI,EAAEu8C,IAAP;AAAax2B,qBAAW,EAAEm2B,gBAA1B;AAA4Cp2B,qBAAW,EAAE;AAAzD,SAAX,CAAR;AACH,OAHD,MAGO;AACH,YAAMy2B,KAAI,GAAGx4C,SAAS,IAAIu4C,aAAa,GAAGF,WAApB,CAAtB;;AACA,eAAQ,IAAIlrC,MAAJ,CAAW;AAAClR,cAAI,EAAEu8C,KAAP;AAAax2B,qBAAW,EAAEm2B,gBAA1B;AAA4Cp2B,qBAAW,EAAE;AAAzD,SAAX,CAAR;AACH;AACJ,KAXY;;AAaA,YAAA02B,aAAA,GAAgB,YAAM;AAC/B,aAAOzqB,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAA/C;AACH,KAFY;;AAIA,YAAA0E,uBAAA,GAA0B,UAACoT,EAAD,EAAgB;AACnD,UAAMyS,cAAc,GAAGn8C,IAAI,CAACY,KAAL,CAAW,cAAAm7C,iBAAA,CAAkBrS,EAAlB,IAAwB,IAAxB,GAA+B,EAA1C,CAAvB;AACA,UAAM3iC,KAAK,GAAG/G,IAAI,CAACY,KAAL,CAAWu7C,cAAc,GAAC,EAA1B,CAAd;AACA,UAAMh8C,OAAO,GAAGg8C,cAAc,GAAG,EAAjC;AACA,uBAAUA,cAAc,GAAG,CAAjB,GAAqB,GAArB,GAA2B,GAArC,SAA2Cl2C,OAAO,CAACjG,IAAI,CAACu2B,GAAL,CAASxvB,KAAT,CAAD,EAAkB,CAAlB,CAAlD,SAAyEd,OAAO,CAAC9F,OAAD,EAAU,CAAV,CAAhF;AACH,KALY;;AAOb,aAAgBi8C,WAAhB,GAAuD;AAAA,UAA3Bx5C,KAA2B,uEAAX,QAAAuG,OAAA,EAAW;AACnD;AACA,aAAOvG,KAAK,CAAC6iB,WAAN,CAAkB1M,QAAlB,CAA2B,UAA3B,IAAyCnW,KAAzC,GAAkD,IAAIgO,MAAJ,CAAW;AAChElR,YAAI,EAAEkD,KAAK,CAACtC,QAAN,CAAe;AAAE0B,cAAI,EAAE,EAAR;AAAYjC,gBAAM,EAAE;AAApB,SAAf,EAAwCsJ,EADkB;AAEhEmc,mBAAW,EAAE,KAFmD;AAGhEC,mBAAW,EAAE;AAHmD,OAAX,EAItDnlB,QAJsD,CAI7C;AAAE0B,YAAI,EAAE,EAAR;AAAYjC,cAAM,EAAE;AAApB,OAJ6C,CAAzD;AAKH;;AAPD;AASA;;AACA,aAAgBs8C,cAAhB,CAA+B3S,EAA/B,EAAyC;AACrC,UAAMpY,KAAK,GAAG,QAAAnoB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAd;AACA,UAAM8D,MAAM,GAAGkuB,KAAK,CAAC5xB,IAAN,CAAW0D,MAAX,GAAoBkuB,KAAK,CAACxnB,MAAN,CAAa4/B,EAAb,EAAiBhqC,IAAjB,CAAsB0D,MAAzD;AACA,aAAO;AAACjD,eAAO,EAAEiD,MAAV;AAAkB2D,aAAK,EAAE3D,MAAM,GAAC;AAAhC,OAAP;AACH;;AAJD;;AAMA,aAAgBmB,OAAhB,CAAyB7E,IAAzB,EAA+B4E,QAA/B,EAAyC;AAErC,aAAO,IAAIsM,MAAJ,CAAW;AACdlR,YAAI,EAAE08C,WAAW,CAAC18C,IAAD,CAAX,CAAkB2J,EADV;AAEdmc,mBAAW,EAAE,KAFC;AAGdC,mBAAW,EAAEnhB;AAHC,OAAX,EAIJu3B,UAJI,CAKH,IAAIjrB,MAAJ,CAAW;AACPlR,YAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EADC;AAEPK,mBAAW,EAAE,KAFN;AAGPC,mBAAW,EAAEnhB;AAHN,OAAX,CALG,EAUH,KAVG,CAAP;AAYH;;AAdD;;;;;;;;;;;;;;;;;;;;;;;;ACpWA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAMag4C,iB;;;;AAJb;;YAIaA;;;;yBAAAA,iB;AAAiB,O;AAAA,iBAFf,E;AAAE,gBADJ,CAAC,SAAA3hD,YAAD,CACI;;;;+EAEJ2hD,iB,EAAiB;AAAA,kBAHhB,SAAA3hD,YAGgB;AAAA,O;AAHJ,K;;;;;2BAGb2hD,iB,EAAiB;cAJ7B,OAAA1hD,QAI6B;eAJpB;AACNC,iBAAO,EAAE,CAAC,SAAAF,YAAD,CADH;AAEN4hD,mBAAS,EAAE;AAFL,S;AAIoB,Q;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;AAAA;;;;;;AAMa,YAAAC,iBAAA,GAAoB,2BAApB;;QAKAC,kB;AAUT,kCAA+CC,WAA/C,EAA6E;AAAA;;AAA9B,aAAAA,WAAA,GAAAA,WAAA;AAC9C;;;;4BAToB;AACjB,iBAAO,KAAKA,WAAL,CAAiBC,UAAxB;AACH;;;4BAEoB;AACjB,iBAAO,KAAKD,WAAL,CAAiB9iC,UAAxB;AACH;;;;;;AAXL;;;uBAGa6iC,kB,EAAkB,YAUP,QAAAD,iBAVO,C;AAUU,K;;;aAV5BC,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFf;;;;;2BAEHA,kB,EAAkB;cAH9B,OAAAlqC,UAG8B;eAHnB;AACRoI,oBAAU,EAAE;AADJ,S;AAGmB,Q;;;;kBAUd,OAAAmyB,M;mBAAO,QAAA0P,iB;;;;;;;;;;;;;;;;;;;;;;;QCrBxB;;AACA;;AACa,YAAA/P,OAAA,GAAU;AACnB,eAAS,KADU;AAEnB,aAAO,WAFY;AAGnB,cAAQ,WAHW;AAInB,kBAAY,IAJO;AAKnB,aAAO,IALY;AAMnB,gBAAU,IANS;AAOnB,gBAAU,WAPS;AAQnB,sBAAgB,IARG;AASnB,iBAAW,OATQ;AAUnB,cAAQ;AAVW,KAAV;AAYb;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;;AAOA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAmBA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBgB;AAAqC;AAAU;;;;;;AAC/C;AAAoD;AAAU;;;;;;AAElE;AAAgD;AAAiC;;;;;;AAGrE;AAA4B;AAAC;;;;;;AAI9B;AAA2B;AAAC;;;;;;AAItB;AAAiC;AAAC;;;;;;;;AAEnD;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;;AATJ;AACI;AAAO;AAAU;AAAyC;AAAC;AAC3D;AAAmB;AAAgB;AACnC;AAOJ;;;;;AAT2B;AAAA;AACJ;AAAA;AAGf;AAAA;;;;;;AAOW;AAA+B;AAAC;;;;;;AAKL;AAA+B;AAAC;;;;;;AAO9D;AAKI;AACJ;;;;;;AAHI;;;;;;AAIJ;AAeI;AACJ;;;;;;AAbI;;;;;;AAZR;AACI;AAAuC;AAAsB;AAC7D;AAOA;AAiBJ;;;;;;AAzBsB;AAAA;AAAqB;AAAA;AAGnC;AAAA;AAOA;AAAA;;;;;;AAgBR;AAA8C;AAAY;;;;;;;;AAE9D;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;AADI;AAAA;;;;;;AAKG;AAAgC;AAAC;;;;;;AAI5B;AAAgC;AAAC;;;;;;AADrD;AACI;AAAO;AAAS;AAAwC;AAAC;AACzD;AACI;AACJ;AACJ;;;;;AAJ0B;AAAA;AACH;AAAA;AACf;AAAA;;;;;;AAKyC;AAAgC;AAAC;;;;;;AAI1E;AAA8C;AAAoB;;;;;;AAStD;AACI;AAAiE;AAE/D;AACN;;;;;;AAHO;AAAA;AAA8D;AAAA;;;;;;AAR7E;AAKI;AACI;AAAkB;AAAe;AACjC;AAKJ;AACJ;;;;;AAVI;AAGsB;AAAA;AACC;AAAA;;;;;;;;AAQ/B;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;AADI;AAAA;;;;;;AAKI;AAA2B;AAAC;;;;;;AAKU;AAA+B;AAAC;;;;;;AAK1E;AACI;AACI;AAAkB;AAAyC;AAC3D;AACI;;AAEJ;AACJ;AACJ;;;;;AAN0B;AAAA;AAEd;AAAA;;;;;;;;AAMhB;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;AADI;AAAA;;;;;;;;;;;;;;AAhKpB;AACI;AACI;AACI;AAGJ;AACA;AACI;AASA;AACI;AACA;AACA;AACJ;AACA;AACJ;AACA;AACI;AAAO;AAAK;AAAoC;AAAC;AACjD;AAAmB;AAAyB;AAChD;AACA;AACI;AAAO;AAAI;AAAmC;AAAC;AAC/C;AAAmB;AAAU;AACjC;AACA;AAWA;AACI;AAAO;AAAQ;AAAuC;AAAC;AACvD;AAAmB;AAAc;AACrC;AACA;AACI;AACK;AAAqC;AACrC;AAAC;AAEN;AACI;AACI;AA2BA;AACJ;AACA;AAOJ;AACJ;AACA;AACI;AAAO;AAAI;AAAwC;AAAC;AACpD;AAAmB;AAAyC;AAChE;AACA;AAMA;AACI;AACK;AAAwC;AACxC;AAAC;AAEN;AACI;AACA;AACI;AAcJ;AACA;AAOJ;AACJ;AACA;AACI;AAAO;AAAK;AAAmC;AAAC;AAChD;AACJ;AACA;AACI;AACK;AAA6C;AAC7C;AAAC;AAEN;AACI;AACI;AASJ;AACA;AAOJ;AACJ;AACJ;AACJ;;;;;AAjKgB;AAAA;AAKA;AAAA;AAUM;AAAA;AACgB;AAAA;AAER;AAAA;AAGA;AAAA;AACC;AAAA;AAGF;AAAA;AACE;AAAA;AAEQ;AAAA;AAYN;AAAA;AACF;AAAA;AAId;AAAA;AAA2C;AAAA;AAI1B;AAAA;AACS;AAAA;AA2BA;AAAA;AAIvB;AAAA;AAQS;AAAA;AACE;AAAA;AAEQ;AAAA;AAQtB;AAAA;AAA8C;AAAA;AAIzC;AAAA;AACY;AAAA;AAGV;AAAA;AAeJ;AAAA;AAQU;AAAA;AACC;AAAA;AAId;AAAA;AAAmD;AAAA;AAIlC;AAAA;AACS;AAAA;AAYvB;AAAA;;;;;;;;AAWZ;AACI;AAAoF;AAAI;AACxF;AAA+D;AAAA;AAAA;AAAA;AAAA;AAAwB;AAAI;AAC/F;;;;;AAFuC;AAAA;AACJ;AAAA;;;;;;AAJ3C;AACI;AACI;AAIJ;AACJ;;;;;;;;AALsB;AAAA,+CAAsC,UAAtC,EAAsC,GAAtC;;;;;;AAOlB;AACI;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;AACJ;;;;;AAHY;AAAA;;;;;;AAMZ;AAA+D;AAAK;;;;;;;;AACpE;AACI;AAA8C;AAAA;AAAA;AAAA;AAAA;AAAuB;AAAW;AAChF;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAuB;AAAM;AACvE;;;;;;AAJA;AACA;;;;;AADoC;AACtB;AAAA;;;;QD/HLmQ,uB;;;;;AAsJT,uCACYzhC,QADZ,EAEY8rB,MAFZ,EAGYra,IAHZ,EAIYM,SAJZ,EAKY2vB,sBALZ,EAMYhwB,OANZ,EAOYiwB,OAPZ,EAQYC,OARZ,EASYC,WATZ,EAUqCvW,KAVrC,EAWWruB,QAXX,EAWoC;AAAA;;AAAA;;AAEhC;AAZQ,gBAAA+C,QAAA,GAAAA,QAAA;AACA,gBAAA8rB,MAAA,GAAAA,MAAA;AACA,gBAAAra,IAAA,GAAAA,IAAA;AACA,gBAAAM,SAAA,GAAAA,SAAA;AACA,gBAAA2vB,sBAAA,GAAAA,sBAAA;AACA,gBAAAhwB,OAAA,GAAAA,OAAA;AACA,gBAAAiwB,OAAA,GAAAA,OAAA;AACA,gBAAAC,OAAA,GAAAA,OAAA;AACA,gBAAAC,WAAA,GAAAA,WAAA;AACyB,gBAAAvW,KAAA,GAAAA,KAAA;AAC1B,gBAAAruB,QAAA,GAAAA,QAAA;AAhKX;;AACiB,gBAAAhL,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAmBjB,gBAAAC,kBAAA,GAA8B,KAA9B;AA+II,gBAAK7oC,OAAL,CAAa8c,YAAb,GACI,QAAKgsB,WAAL,KACC,QAAKA,WAAL,CAAiB7yC,WAAjB,CAA6BjB,EAA7B,KAAoC,QAAKgL,OAAL,CAAa/J,WAAb,CAAyBjB,EAA7D,IACG,QAAK8zC,WAAL,CAAiB18C,QAAjB,KAA8B,QAAK4T,OAAL,CAAa5T,QAF/C,CADJ,CAHgC,CAOhC;;AAEA,YAAMgiB,KAAK,GAAG,cAAAC,aAAA,CAAc;AAAE7K,cAAI,EAAE,QAAKA,IAAb;AAAmBuK,eAAK,EAAE,QAAK/N,OAAL,CAAaqc,IAAvC;AAA6CjwB,kBAAQ,EAAE;AAAvD,SAAd,CAAd;AACA,gBAAK28C,UAAL,GAAkB,QAAKhlC,QAAL,CAAc0E,SAAd,GAA0B,KAA1B,GAAkC2F,KAAK,CAACmB,YAA1D;AAVgC;AAWnC;AArJD;;;;;mCAuJQ;AACJ,eAAKy5B,QAAL,GAAgB,KAAKhpC,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAeimB,QAAvD;AACA,eAAKvsB,QAAL,GAAgB,KAAKzc,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAetG,QAAvD,CAFI,CAGJ;;AAHI,8BAI2C,KAAKzc,OAJhD;AAAA,cAIGie,OAJH,iBAIGA,OAJH;AAAA,cAIYD,SAJZ,iBAIYA,SAJZ;AAAA,cAIuBU,gBAJvB,iBAIuBA,gBAJvB;AAKJ,eAAKuqB,cAAL,GAAsB;AAClBC,oBAAQ,EAAE;AACN5xC,qBAAO,EAAE2mB,OAAO,KAAMA,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAsCwhB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAsCiiB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAIpxB,SAAvF,IAAsG0wB,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAArL,CADV;AAENnwB,mBAAK,EAAG0vB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAqCiiB,gBAAgB,KAAK,IAA1D,IAAmEA,gBAAgB,CAAC,OAAD,CAAhB,IAA6BV,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAApI,GAAoJA,gBAAgB,CAAC,MAAD,CAAhB,IAA4BA,gBAAgB,CAAC,OAAD,CAAhM,GAA8M,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE72B,IAAT,KAAiB62B,OAAO,CAACxhB;AAFxO;AADQ,WAAtB;AAMH;AAED;;;;;;sCAGqB;AAAA;;AACjB,eAAKoH,OAAL,GAAe,0CAAf;AACA,eAAK8kC,WAAL,CAAiBQ,YAAjB,GAAgC,IAAhC;AACA,eAAKC,sBAAL,GAA8B9hC,IAA9B,CACI,YAAM;;;AACF,mBAAI,CAACzD,OAAL,GAAe,+BAAf,CADE,CAEF;;AACA,gBAAMwlC,QAAQ,GAAG,OAAI,CAACrpC,OAAL,CAAa+N,KAAb,CAAmBtR,KAApC;AACA,gBAAM6sC,cAAc,GAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,iBAAvB,CAAvB;AACAA,0BAAc,CAAC7/C,OAAf,CAAuB,UAAA1C,GAAG,EAAI;AAC1B,kBAAM4gB,GAAG,GAAG,OAAI,CAAC3H,OAAL,CAAajZ,GAAb,CAAZ;;AACA,kBAAI4gB,GAAG,IAAIA,GAAG,CAAC4hC,WAAJ,KAAoBlxC,MAA/B,EAAuC;AACnC,oBAAMpH,IAAI,GAAGoH,MAAM,CAACpH,IAAP,CAAY0W,GAAZ,CAAb;;AACA,oBAAI1W,IAAI,CAAC1D,MAAL,GAAc,CAAlB,EAAqB;AACjB,sBAAMi8C,WAAW,GAAG,EAApB;AACAv4C,sBAAI,CAACxH,OAAL,CAAa,UAAAggD,EAAE,EAAI;AACfD,+BAAW,CAACH,QAAD,CAAX,GAAwB1hC,GAAG,CAAC8hC,EAAD,CAA3B;AACH,mBAFD;AAGA,yBAAI,CAACzpC,OAAL,CAAajZ,GAAb,IAAoByiD,WAApB;AACH;AACJ;AACJ,aAZD,EALE,CAmBF;;AACA,gBAAME,eAAe,GAAI,OAAI,CAAC1pC,OAAL,CAAame,KAAb,KAAkB,MAAI,OAAI,CAACne,OAAL,CAAame,KAAjB,MAAsB,IAAtB,IAAsB,aAAtB,GAAsB,MAAtB,GAAsB,GAAE5wB,MAA1C,CAAD,IAAuD,OAAI,CAACyS,OAAL,CAAauf,QAAb,KAAqB,MAAI,OAAI,CAACvf,OAAL,CAAauf,QAAjB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEhyB,MAAhD,CAAvD,uBAAmH,CAAD,WAAC,OAAI,CAACyS,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE+N,KAAd,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEtR,KAAxI,EAAgJ,GAAhJ,IAAwJ,IAAhL,CApBE,CAoBoL;;AACtL,gBAAIitC,eAAJ,EAAqB;AACnB,qBAAI,CAAC1pC,OAAL,CAAasF,KAAb,GAAqBokC,eAArB;AACA,qBAAI,CAAC1pC,OAAL,CAAauX,SAAb,GAAyBmyB,eAAzB;AACD;;AAED,mBAAI,CAAC7wB,SAAL,CAAe8lB,IAAf,CAAoB,OAAI,CAAC3+B,OAAzB,EAAkC,OAAI,CAACoyB,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaijB,IAArE,EAA2EriC,IAA3E,CACI,UAAOsQ,GAAP;AAAA,qBAAe,OAAD,UAAC,CAAD,OAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,6BAAK/T,OAAL,GAAe,IAAf;AACA,6BAAKpD,OAAL,GAAe,IAAf;AACA,6BAAKkoC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACMS,+BAJI,GAIM,IAAI,cAAAt6B,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,KAAKtP,OAAX,CAAC,EAAsB4X,GAAG,CAACiS,SAAJ,EAAtB,CAAZ,CAJN;;AAKV,6BAAK2e,sBAAL,CAA4Bl0C,OAA5B,CAAoCs1C,OAApC;AAEA;;;;;AAPU,8BAUPA,OAAO,CAAChuB,oBAAR,KAAiC,IAV1B;AAAA;AAAA;AAAA;;AAAA;AAYiB,+BAAM,KAAK/C,SAAL,CAAe8D,IAAf,CAAoBitB,OAAO,CAAChuB,oBAA5B,CAAN;;AAZjB;AAYAiuB,sCAZA;;AAaN,6BAAKrB,sBAAL,CAA4Bl0C,OAA5B,CAAoCu1C,cAApC;;AAbM;AAgBVhlC,oCAAY,CAACmF,UAAb,CAAwB,6BAAxB;AACA,6BAAKjR,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,gCAAM,EAAE;AAAV,yBAAhB;;AACA,6BAAKzH,QAAL,CAAcw2B,aAAd,wBACoB,KAAKt9B,OAAL,CAAa1C,EAAb,GAAkB,SAAlB,GAA8B,SADlD;;AAlBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAC,EAAf;AAAA,aADJ,EAuBI,UAACoL,GAAD,EAAS;AAEL,qBAAI,CAACigC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACA,kBAAIY,WAAW,GAAW,EAA1B;;AACA,sBAAOrhC,GAAG,CAAC0G,MAAX;AACX,qBAAK,GAAL;AACC26B,6BAAW,GAAG,+IAAd;AACA;;AACD,qBAAK,GAAL;AACCA,6BAAW,GAAG,wFAAd;AACA,yBAAI,CAAClB,kBAAL,GAA0B,IAA1B;AACA;AAPU;;AASA,qBAAI,CAAChlC,OAAL,GAAekmC,WAAf;;AACA,qBAAI,CAACjjC,QAAL,CAAcy2B,WAAd,iBACa,OAAI,CAACv9B,OAAL,CAAa1C,EAAb,GAAkB,UAAlB,GAA+B,UAD5C,uBACmEysC,WADnE;;AAGDviD,wBAAU,CAAC,YAAK;AACf,uBAAI,CAACqc,OAAL,GAAe,IAAf;;AACA,uBAAI,CAAC9K,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,wBAAM,EAAE;AAAV,iBAAhB;AACA,eAHS,EAGP,IAHO,CAAV;AAIF,aA5CL;AA8CH,WAzEL,EA0EI,UAAC7F,GAAD,EAAS;AAEL,mBAAI,CAACmgC,kBAAL,GAA0B,IAA1B;AACA,mBAAI,CAACF,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACA,gBAAMY,WAAW,GAAG,wFAApB;AACA,mBAAI,CAAClmC,OAAL,GAAekmC,WAAf;;AACA,mBAAI,CAACjjC,QAAL,CAAcy2B,WAAd,iBACa,OAAI,CAACv9B,OAAL,CAAa1C,EAAb,GAAkB,UAAlB,GAA+B,UAD5C,uBACmEysC,WADnE;;AAGDviD,sBAAU,CAAC,YAAK;AACf,qBAAI,CAACqc,OAAL,GAAe,IAAf;;AACA,qBAAI,CAAC9K,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE;AAAV,eAAhB;AACA,aAHS,EAGP,IAHO,CAAV;AAIF,WAvFL;AAyFH;AAED;;;;;;qCAGoB;AAChB,eAAKk6B,OAAL,CAAajL,QAAb,CAAsB,CAAC,OAAD,EAAU,QAAV,CAAtB;;AACA,eAAKmL,WAAL,CAAiBqB,KAAjB;AACH;AAED;;;;;;qCAGoB;AAChB,eAAKvB,OAAL,CAAajL,QAAb,CAAsB,CAAC,WAAD,CAAtB,EAAqC;AACjCyM,uBAAW,EAAE;AAAExtC,mBAAK,EAAE,KAAKuD,OAAL,CAAage,SAAb,CAAuBvhB;AAAhC;AADoB,WAArC;;AAGA,eAAKksC,WAAL,CAAiBqB,KAAjB;AACH;AAED;;;;;;iDAG6B;AAAA;;AACzB,cAAM/8B,MAAM,GAAY,KAAKA,MAA7B;;AACA,cACK,KAAKjN,OAAL,CAAa1C,EAAb,IACI,KAAK0C,OAAL,CAAa/J,WAAb,CAAyBjB,EAAzB,KAAgC,KAAK8zC,WAAL,CAAiB7yC,WAAjB,CAA6BjB,EAA7D,IACG,KAAKgL,OAAL,CAAa5T,QAAb,KAA0B,KAAK08C,WAAL,CAAiB18C,QAFnD,IAGC6gB,MAAM,IAAIA,MAAM,CAAC1f,MAAP,IAAiB,CAJhC,EAKE;AACE,mBAAO0Z,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,iBAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,gBAAMgY,OAAO,GAAG,OAAI,CAACnf,OAAL,CAAamf,OAA7B,CAFoC,CAGpC;;AACA,mBAAI,CAAC3G,OAAL,CACKnB,SADL,CACe;AACPC,sBAAQ,EAAErK,MAAM,CAAC/b,GAAP,CAAW,UAAC6c,KAAD;AAAA,uBAAWA,KAAK,CAACzQ,EAAjB;AAAA,eAAX,EAAgC5I,IAAhC,CAAqC,GAArC,CADH;AAEP1I,oBAAM,EAAE,OAAI,CAACgU,OAAL,CAAa/J,WAFd;AAGP7J,sBAAQ,EAAE+yB,OAAO,GAAG,KAAK,EAAR,GAAa,OAAI,CAACnf,OAAL,CAAa5T,QAHpC;AAIP89C,oBAAM,EAAE,OAAI,CAAClqC,OAAL,CAAasb,OAJd;AAKPsE,8BAAgB,EAAE,OAAI,CAAC5f,OAAL,CAAa4f,gBALxB;AAMPQ,+BAAiB,EAAE,OAAI,CAACpgB,OAAL,CAAaogB,iBANzB;AAOPL,8BAAgB,EAAE,OAAI,CAAC/f,OAAL,CAAa+f,gBAPxB;AAQPI,iCAAmB,EAAE,OAAI,CAACngB,OAAL,CAAamgB,mBAR3B;AASPI,+BAAiB,EAAE,OAAI,CAACvgB,OAAL,CAAaugB,iBATzB;AAUPD,0BAAY,EAAE,OAAI,CAACtgB,OAAL,CAAasgB,YAVpB;AAWPT,6BAAe,EAAE,OAAI,CAAC7f,OAAL,CAAa6f;AAXvB,aADf,EAcKvY,IAdL,CAeQ,UAACoT,UAAD,EAAgB;AAAA,2DACQA,UADR;AAAA;;AAAA;AACZ,0EAAgC;AAAA,sBAArB3M,KAAqB;;AAC5B,sBAAI,CAACA,KAAK,CAACe,QAAX,EAAqB;AACjB,2BAAI,CAAC+5B,kBAAL,GAA0B,IAA1B;AACA,2BAAO1hC,MAAM,WACN4G,KAAK,CAAC3mB,IADA,kDAAb;AAGH;AACJ;AARW;AAAA;AAAA;AAAA;AAAA;;AASZ,kBAAIszB,UAAU,CAACntB,MAAX,GAAoB0f,MAAM,CAAC1f,MAA/B,EAAuC;AACnC,uBAAI,CAACs7C,kBAAL,GAA0B,IAA1B;AACA,uBAAO1hC,MAAM,WACN8F,MAAM,CAAC,CAAD,CAAN,CAAU7lB,IADJ,kDAAb;AAGH;;AACD8f,qBAAO;AACV,aA/BT,EAgCQ,UAACwB,GAAD;AAAA,qBAASvB,MAAM,CAACuB,GAAD,CAAf;AAAA,aAhCR;AAkCH,WAtCM,CAAP;AAuCH;;;6CAEwB;AAAA;;AACrB,cAAMyhC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CACiB,KAAAwnC,uBADjB,EAC0C;AACtDC,oBAAQ,EAAE,MAD4C;AAEtDC,iBAAK,EAAE,MAF+C;AAGtD95B,gBAAI,EAAE;AACF0oB,uBAAS,EAAE,KAAKl5B,OAAL,CAAaqc,IAAb,CAAkBlE,UAD3B;AAEFoyB,uBAAS,EAAE,KAAKvqC,OAAL,CAAaigB,qBAFtB;AAGFuqB,4BAAc,EAAE,IAHd;AAIFv6C,sBAAQ,EAAE,KAAK+P,OAAL,CAAa/P;AAJrB;AAHgD,WAD1C,CAAZ;;AAYA,eAAK7G,YAAL,CACA,cADA,EAEA+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC1D,gBAAGA,KAAK,CAACwV,MAAN,KAAiB,OAApB,EAA4B;AACxB47B,iBAAG,CAACH,KAAJ;AACH,aAFD,MAEM,IAAGjxC,KAAK,CAACwV,MAAN,KAAkB,QAArB,EAA8B;AAChCjd,uBAAS,CAACo5C,SAAV,CAAoBC,SAApB,CAA8B,OAAI,CAACC,aAAnC;AACH;AAEJ,WAPD,CAFA;AAWAT,aAAG,CAACU,WAAJ,GAAkBvhD,SAAlB,CAA4B;AAAA,mBAAM,OAAI,CAACnC,KAAL,CAAW,cAAX,CAAN;AAAA,WAA5B;AACH;;;4BArWqB;AAClB,iBAAO,KAAKirC,KAAL,CAAW0W,WAAlB;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAK1W,KAAL,CAAWpyB,OAAlB;AACH;AAED;;;;4BACe;AACX,iBAAO,KAAK4yB,MAAL,CAAYlO,OAAnB;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAK1kB,OAAL,CAAasW,KAApB;AACH;AAED;;;;4BACe;AACX,cAAMw0B,cAAc,GAAG,KAAK9qC,OAAL,CAAa5T,QAApC;AACA,cAAM+yB,OAAO,GAAG,KAAKnf,OAAL,CAAamf,OAAb,IAAwB2rB,cAAc,GAAG,KAAK,EAA9D;;AACA,cAAG,KAAK9qC,OAAL,CAAasgB,YAAb,IAA6B,KAAKtgB,OAAL,CAAaugB,iBAA1C,IAA+D,KAAKvgB,OAAL,CAAaugB,iBAAb,CAA+BhzB,MAAjG,EAAwG;AACpG,mBAAO,cAAA67B,UAAA,CAAW,MAAD,OAAC,CAAD;AAAEjK,qBAAO,EAAPA;AAAF,aAAC,EAAa,KAAK4rB,eAAlB,CAAX,CAAP;AACH;;AACD,iBAAO,cAAA3hB,UAAA,CAAW;AACdjK,mBAAO,EAAPA,OADc;AAEdkK,mBAAO,EAAE,KAAKrpB,OAAL,CAAa/J,WAFR;AAGdqzB,iBAAK,EAAE,KAAKtpB,OAAL,CAAa9J,SAHN;AAIdqzB,wBAAY,EAAE,KAAKvpB,OAAL,CAAaoiB;AAJb,WAAX,CAAP;AAKH;;;4BAEyB;AACtB,cAAMiH,OAAO,GAAG,cAAAwL,oBAAA,CAAqB,KAAK70B,OAAL,CAAaugB,iBAAlC,CAAhB;AACA,cAAM+I,KAAK,GAAGD,OAAO,CAACn9B,QAAR,CAAiB;AAACJ,mBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAvB,WAAjB,CAAd;AACA,iBAAO;AAACi9B,mBAAO,EAAPA,OAAD;AAAUC,iBAAK,EAALA,KAAV;AAAiBC,wBAAY,EAAED;AAA/B,WAAP;AACH;AAED;;;;4BACqB;AACjB,iBAAO,cAAAyL,iBAAA,CAAkB;AACrBlZ,kBAAM,EAAE,KAAK7b,OAAL,CAAaogB,iBADA;AAErBvJ,eAAG,EAAE,KAAK7W,OAAL,CAAa+f,gBAFG;AAGrBx2B,gBAAI,EAAE,KAAKyW,OAAL,CAAaugB,iBAHE;AAIrBpF,oBAAQ,EAAE,KAAKnb,OAAL,CAAamgB;AAJF,WAAlB,CAAP;AAMH;AAED;;;;4BACmB;AACf,cAAM2qB,cAAc,GAAG,KAAK9qC,OAAL,CAAa5T,QAApC;AACA,iBAAO,KAAK4T,OAAL,CAAamf,OAAb,GAAuB,SAAvB,GAAmC,OAAA9sB,gBAAA,CAAiBy4C,cAAjB,CAA1C;AACH;AAED;;;;4BACiB;AACb,iBAAO,CAAC,KAAK9qC,OAAL,CAAaqc,IAAd,CAAP;AACH;AAED;;;;4BACoB;AAAA;;AAChB,cAAM0B,SAAS,GAAG,KAAK/d,OAAL,CAAa+d,SAA/B;AACA,iBAAOA,SAAS,CAAC9rB,MAAV,CAAiB,UAACvI,CAAD;AAAA,mBAAOA,CAAC,CAAC+S,KAAF,KAAY,OAAI,CAACuhB,SAAL,CAAevhB,KAAlC;AAAA,WAAjB,CAAP;AACH;AAED;;;;4BACoB;AAChB,iBAAO,KAAKuD,OAAL,CAAage,SAAb,IAA0B,KAAK4U,MAAL,CAAYlO,OAA7C;AACH;AAED;;;;4BAC0B;AACtB,iBAAO,KAAK1kB,OAAL,CAAaoe,eAAb,IAAgC,EAAvC;AACH;AAED;;;;4BACyB;AACrB,cAAMmB,QAAQ,GAAG,KAAKA,QAAtB;AACA,cAAMuG,KAAK,GAAG,EAAd;;AAFqB,uDAGD,KAAKvG,QAHJ;AAAA;;AAAA;AAGrB,sEAAmC;AAAA,kBAAxBqD,KAAwB;AAC/BkD,mBAAK,CAAClD,KAAK,CAACC,WAAP,CAAL,GAA2BD,KAAK,CAAC6K,WAAjC;AACH;AALoB;AAAA;AAAA;AAAA;AAAA;;AAMrB,iBAAO3H,KAAP;AACH;AAED;;;;4BAC0B;AACtB,iBAAO,KAAK9lB,OAAL,CAAame,KAAb,CACFlsB,MADE,CACK,UAAC0uB,IAAD;AAAA,mBAAUA,IAAI,CAACrwB,IAAL,KAAc,WAAxB;AAAA,WADL,EAEFtB,MAFE,CAEK,UAACkC,GAAD,EAAMitB,KAAN,EAAgB;AACpBjtB,eAAG,CAACitB,KAAK,CAACpQ,KAAP,CAAH,GAAmBoQ,KAAK,CAAC5b,OAAzB;AACA,mBAAOrR,GAAP;AACH,WALE,EAKA,EALA,CAAP;AAMH;AAED;;;;4BACgB;AACZ,iBAAO,KAAK8O,OAAL,CAAazI,IAApB;AACH;AAED;;;;4BACmB;AAAA;;AACf,iBAAO,CAAC,KAAKyI,OAAL,CAAauf,QAAb,IAAyB,EAA1B,EAA8BruB,GAA9B,CAAkC,UAAC0xB,KAAD,EAAW;AAChD,gBAAM7U,KAAK,GAAQ,OAAI,CAACd,MAAL,CAAYpe,IAAZ,CACf,UAACm8C,OAAD;AAAA,qBAAaA,OAAO,CAACvuC,KAAR,KAAkBmmB,KAAK,CAACC,WAArC;AAAA,aADe,KAEd;AACDhO,mBAAK,EAAE;AADN,aAFL;AAKA,gBAAM3G,QAAQ,GACV,OAAI,CAACqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,qBAASA,GAAG,CAAC1yB,EAAJ,KAAWyQ,KAAK,CAAC8G,KAAN,CAAYob,WAAhC;AAAA,aAAzB,KAAyE,EAD7E;AAEA,mBAAO,IAAI,cAAAzQ,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBACjBoD,KADiB,CAAC,EACb;AACR3e,sBAAQ,EAAE8J,KAAK,CAACoK,UADR;AAERyV,oBAAM,EAAE1f,QAAQ,CAAC2jB,QAFT;AAGRvY,0BAAY,EAAE,OAAI,CAACtZ,OAAL,CAAa/J,WAAb,CAAyBjB,EAH/B;AAIR8tB,8BAAgB,EAAE,OAAI,CAAC9iB,OAAL,CAAa/P;AAJvB,aADa,CAAlB,CAAP;AAOH,WAfM,CAAP;AAgBH;AAED;;;;4BACkB;AACd,iBAAO,EAAP;AACH;;;4BA2OuB;AACpB,cAAIomB,IAAI,GAAG,EAAX;AACA,eAAKrW,OAAL,CAAaigB,qBAAb,CAAmC/uB,GAAnC,CAAuC,UAAC7F,IAAD,EAAQ;AAC3C,gBAAM4/C,MAAM,GAAG,IAAI,UAAA1uC,MAAJ,CAAW;AAAClR,kBAAI,EAAEA,IAAI,GAAC;AAAZ,aAAX,CAAf;AACA,gBAAMiM,OAAO,GAAG2zC,MAAM,CAACt+C,UAAP,CAAkB,iBAAlB,CAAhB;AACA0pB,gBAAI,aAAMA,IAAN,eAAe/e,OAAf,SAAyB2zC,MAAM,CAACzjB,UAAP,CAAkB,UAAA1yB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAlB,EAAuC,KAAvC,IAAgD,UAAhD,GAA6D,EAAtF,CAAJ;AACH,WAJD;AAKA,iBAAOorB,IAAP;AACH;;;;MAvYwC,OAAAvuB,a;;AAL7C;;;uBAKaygD,uB,EAAuB,2C,EAAA,qC,EAAA,4C,EAAA,wC,EAAA,4C,EAAA,sC,EAAA,+B,EAAA,kC,EAAA,qC,EAAA,qBAgKpB,SAAA2C,eAhKoB,C,EAgKL,wC;AAAA,K;;;YAhKlB3C,uB;AAAuB,8C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,upD;AAAA;AAAA;AC7DpC;AAsKA;AAQA;AAYA;;;;;;AA1LoB,8CAAiC,UAAjC,EAAiC,GAAjC;AAsKA;AAAA;;;;;;;;;;2BDzGPA,uB,EAAuB;cALnC,OAAA4C,SAKmC;eALzB;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD;AAHJ,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;kBAgK3B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;;;gBA9JX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE/DL;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAWA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BI;AAII;AAAA;AAA6D;AAC7D;AAGI;AAAA;AAAA;AAAA;AAAA;AACH;AACL;;;;;AAHQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA;AAAA;AAIA;;;;;AAAA;AAAA;AAAA;;;;;;;;AAfR;AACI;AAAA;AAKS;AACT;AAAA;AACA;AACI;AAAA;AAAkG;AAAA;AAAA;AAAA,8BAAa,OAAb;AAAoB,SAApB;AAAlG;AAEA;AAMJ;AACJ;;;;;AAfQ;AAAA;AAQW;AAAA;;;;;;;;;;;;;;;;;;AAwBX;AACI;AACJ;;;;;;AAfJ;AACI;AAAA;AAAuD;AACvD;AAWA;AAGJ;;;;;AAZQ;AAAA;AADA,yJAA0G,YAA1G,EAA0G,kBAA1G,EAA0G,aAA1G,EAA0G,gDAA1G,EAA0G,SAA1G,EAA0G,oCAA1G,EAA0G,gBAA1G,EAA0G,KAA1G;AAUoB;AAAA;;;;;;AAfhC;AAEI;AAiBJ;;;;;AAjBwC;AAAA;;;;;;;;;;;;;;;;;;AAwChC;AACI;AACJ;;;;;;;;;;;;;;AAvBJ;AACI;AAAA;AAAyE;AACzE;AAeI;AAAA;AAAA;AAAA,iBAAiB,QAAAvkC,IAAA,iCAAjB;AAAsD,SAAtD;AAGH;AACD;AAGJ;;;;;AApBQ;AAAA,wCAAiB,YAAjB,EAAiB,iBAAjB,EAAiB,iBAAjB,EAAiB,6SAAjB,EAAiB,SAAjB,EAAiB,gFAAjB,EAAiB,SAAjB,EAAiB,iCAAjB,EAAiB,UAAjB,EAAiB,yBAAjB,EAAiB,gBAAjB,EAAiB,2BAAjB,EAAiB,cAAjB,EAAiB,wDAAjB;AAiBoB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB;AAAA;AAMA;;;;;;AAWJ;AACI;AACJ;;;;;;AAtBJ;AACI;AACI;AAAA;AAAmE;AACnE;AAQJ;AACA;AAQA;AAGJ;;;;;AAjBY;AAAA;AASJ;AAAA,wEAA0C,UAA1C,EAA0C,IAA1C,EAA0C,SAA1C,EAA0C,gFAA1C;AAKoB;AAAA;;;;;;AAI5B;AACI;AACJ;;;;;AADI;AAAA;;;;;;AAYR;;;;;AAAiE;;;;;;;;;;;;;;;;;;AAG7D;;;;;;AAQQ;AACI;AACJ;;;;;AAF2C;AACvC;AAAA;;;;;;AAPZ;AACI;AAKI;AAGJ;AACJ;;;;;AANQ;AAAA;AAEY;AAAA;;;;;;AAVxB;AACI;AAAA;AAAiE;AACjE;AAEA;AAWJ;;;;;AAZyB;AAAA;AACgB;AAAA;;;;;;;;;;;;;;;;;;;;AAYzC;AACI;AAAA;AAAsE;AACtE;AAGI;AAAA;AAAA;AAAA;AAAA;AACH;AACL;;;;;;;;;;;;;;;;;;AAKY;AACI;AACJ;;;;;AAF+C;AAC3C;AAAA;;;;;;AALhB;AACI;AAAA;AAA+E;AAC/E;AACI;AACI;AAGJ;AACJ;AACJ;;;;;AALwB;AAAA;;;;;;;;;;;;;;;;;;AAMxB;AACI;AAAA;AAEA;AAEJ;;;;;;;;;;;;;;;;;;AACA;AAEI;AAAA;AAMA;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGI;AACI;AAAA;AAMI;AAAA;AAAA;AAAA,8BAAa,MAAb;AAAmB,SAAnB;AACH;AACL;;;;;;AAEI;;;;;;AAbR;AACI;AAAA;AAAyD;AACzD;AAUA;AAGJ;;;;;;;AAbqD;AAAA,iDAAmC,UAAnC,EAAmC,IAAnC;;;;;;AAxKzD;AACI;AAWA;AAoBA;AAoBA;AACI;AAyBA;AAwBA;AAGJ;AACA;AACI;AAKC;AAAiB;AACtB;AAEA;AACA;AAgBA;AAQA;AAUA;AAMA;AAUA;AAgBJ;;;;;;;;;AAtLuC;AAG/B;AAAA;AAS4B;AAAA;AAoBR;AAAA;AAqBiB;AAAA;AAyBF;AAAA;AAwB9B;AAAA;AAagB;AAAA;AACW;AAAA;AAgBA;AAAA;AAQG;AAAA;AAUF;AAAA;AAME;AAAA;AAUR;AAAA;;;;QD7HtBwkC,oB;;;;;AAeT,oCACYzkC,QADZ,EAEY8rB,MAFZ,EAGY8V,OAHZ,EAIYzgC,eAJZ,EAKYujC,KALZ,EAKoC;AAAA;;AAAA;;AAEhC;AANQ,gBAAA1kC,QAAA,GAAAA,QAAA;AACA,gBAAA8rB,MAAA,GAAAA,MAAA;AACA,gBAAA8V,OAAA,GAAAA,OAAA;AACA,gBAAAzgC,eAAA,GAAAA,eAAA;AACA,gBAAAujC,KAAA,GAAAA,KAAA;AAjBZ;;AACO,gBAAAC,SAAA,GAAoB,EAApB;AACA,gBAAAxuB,KAAA,GAAgB,UAAAnoB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAhB;AACP;;AACO,gBAAAygD,UAAA,GAAqB,QAAKzuB,KAAL,CAAWhxB,QAAX,CAAoB;AAAEP,gBAAM,EAAEC,IAAI,CAACC,IAAL,CAAU,QAAKqxB,KAAL,CAAWnxB,OAAX,GAAqB,CAA/B,IAAoC;AAA9C,SAApB,CAArB;AACP;;AACgB,gBAAA6/C,WAAA,GAAc,UAAA72C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBiB,QAApB,CAA6B;AAAE2uB,cAAI,EAAE;AAAR,SAA7B,EAA4CpB,UAA5C,CAAuD,KAAvD,CAAd;AAET,gBAAAouB,aAAA,GAAgB,UAAA/yC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBmmB,WAApC;AACA,gBAAAw6B,UAAA,GAAa,EAAb;AACA,gBAAAC,QAAA,GAAW,EAAX;AAUH,gBAAKvnB,WAAL,GAAmB,QAAKrc,eAAL,CAAqBQ,SAAxC;AAHgC;AAInC;;;;mCAEc;AAAA;;qBAAA,CACX;AACA;;;AACA,eAAKo/B,aAAL,GAAqB,UAAA/yC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBmmB,WAAzC;AACA,cAAMA,WAAW,GACb,KAAKrK,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,KAEI,KAAKyK,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,eAApC,IACA,KAAKwY,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,OADpC,IAEA,KAAKwY,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,MAFpC,IAGA,KAAKwY,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,cALxC,KAOA,KAAKwY,IAAL,CAAUquB,QAAV,CAAmBppC,MAPnB,IAQA,KAAK+a,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KATV,GAUhB,KAAKwY,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAA1B,CAAgC6iB,WAVhB,GAU8B,KAAKy2B,aAVvD;AAYA,eAAK5qB,KAAL,GAAa,IAAI,UAAA1gB,MAAJ,CAAW;AAAElR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,uBAAW,EAAE,KAAjC;AAAwCC,uBAAW,EAAXA;AAAxC,WAAX,CAAb;AACA,eAAKs6B,UAAL,GAAkB,OAAA3/C,mBAAA,CAAoB,KAAKkxB,KAAzB,EAAgC,EAAhC,CAAlB;;AAEA,eAAK2V,MAAL,CAAYzvB,WAAZ,CAAwBhH,IAAxB,CAA6B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA7B,EAA8C9Y,SAA9C,CAAwD,YAAM;AAC1D,gBAAMka,IAAI,GAAS,OAAI,CAACovB,MAAL,CAAYlO,OAA/B;AACA,gBAAMqd,SAAS,GAAGv+B,IAAI,CAACu+B,SAAL,CAAe7wC,GAAf,CACd,UAACuL,KAAD;AAAA,qBAAW,OAAI,CAACm2B,MAAL,CAAY/jC,IAAZ,CAAiB4N,KAAjB,KAA2B,IAAI,cAAAihB,IAAJ,CAAS;AAAEjhB,qBAAK,EAALA,KAAF;AAASrV,oBAAI,EAAEqV,KAAK,CAACpP,KAAN,CAAY,GAAZ,EAAiB,CAAjB;AAAf,eAAT,CAAtC;AAAA,aADc,CAAlB;AAGA,mBAAI,CAACo+C,SAAL,GAAiB,CAACjoC,IAAD,EAAO6X,MAAP,CAAc0mB,SAAd,CAAjB;AACH,WAND;;AAQA,eAAK+J,oBAAL,CAA0B,KAAK/kC,IAAL,CAAUquB,QAAV,CAAmBnlC,QAAnB,CAA4B1B,KAAtD;AACA,eAAKnF,YAAL,CAAkB,aAAlB,EAAkC,KAAK2d,IAAL,CAAU6e,YAAV,CAC7BzpB,IAD6B,CAE1B,YAAA4vC,IAAA,CAAK,CAAL,CAF0B,EAEjB;AACT,sBAAAC,oBAAA,EAH0B,EAI7B1iD,SAJ6B,CAInB,YAAM;AACb,mBAAI,CAACU,OAAL,CAAa,kBAAb,EAAiC,YAAM;AACnC,qBAAI,CAAC8hD,oBAAL,CAA0B,OAAI,CAAC/kC,IAAL,CAAUquB,QAAV,CAAmBnlC,QAAnB,CAA4B1B,KAAtD;AACH,aAFD,EAEG,GAFH;AAGH,WAR6B,CAAlC;AAWA,eAAKnF,YAAL,CAAkB,oBAAlB,EAAyC,KAAK2d,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgCsF,YAAhC,CACpCt8B,SADoC,CAC1B,YAAM;AACb,gBAAM2iD,gBAAgB,GAAG,OAAI,CAACllC,IAAL,CAAUquB,QAAV,CAAmB7U,iBAA5C;;AACA,gBAAG,CAAC,OAAI,CAACxZ,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgC/xB,KAApC,EAA0C;AACtC09C,8BAAgB,CAACC,eAAjB;AACH,aAFD,MAEK;AACD,kBAAMC,eAAe,GAAG,CAAC,QAAAtnB,UAAA,CAAWC,QAAZ,CAAxB;AACAqnB,6BAAe,CAACj5C,IAAhB,CAAqB,cAAAk0B,eAArB;AACA6kB,8BAAgB,CAAC7mB,aAAjB,CAA+B+mB,eAA/B;AACH;;AACDF,4BAAgB,CAACvmB,sBAAjB;AACH,WAXoC,CAAzC;AAcA;;AACA,eAAK0mB,aAAL;AAEA;;AACA,cAAG,YAAKrlC,IAAL,CAAUquB,QAAV,CAAmB93B,EAAnB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAE/O,KAAvB,KAAgC,QAAC,KAAKwY,IAAL,CAAUquB,QAAV,CAAmB94B,MAApB,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,MAA1B,GAA0B,GAAE/N,KAA5B,CAAnC,EAAqE;AACjE,iBAAKwY,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgCr0B,QAAhC,CAAyC,KAAzC;AACH;AACJ;AAED;;;;;;;;6BAKYlF,G,EAAW;AACnB,eAAKggB,IAAL,CAAUhG,GAAV,CAAcha,GAAd,EAAmBkF,QAAnB,CAA4B,KAAK8a,IAAL,CAAUhG,GAAV,CAAcha,GAAd,EAAmBwH,KAAnB,CAAyBs3C,IAAzB,EAA5B;AACH;AAED;;;;wCAoBuB;;;AAAA,iCAC+B,KAAK9+B,IAAL,CAAUxY,KADzC;AAAA,cACX+O,EADW,oBACXA,EADW;AAAA,cACPhB,MADO,oBACPA,MADO;AAAA,cACC4oB,WADD,oBACCA,WADD;AAAA,cACc5E,YADd,oBACcA,YADd;AAEnB,cAAM+rB,MAAM,GAAG,CAAC,CAAC/uC,EAAjB;AACA,cAAMgvC,OAAO,GAAGhwC,MAAM,KAAK,cAAAsqB,aAAA,CAAc+iB,IAAzC;;AACA,cAAI0C,MAAJ,EAAY;AACR,uBAAKtlC,IAAL,CAAUhG,GAAV,CAAc,cAAd,OAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAEukB,OAAF,EAA7B;AACH;;AAED,cAAI,CAAC,KAAKhB,WAAN,IAAqB,CAACY,WAA1B,EAAuC;AACnC,uBAAKne,IAAL,CAAUhG,GAAV,CAAc,cAAd,OAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAEukB,OAAF,EAA7B;AACH;;AACD,cAAG+mB,MAAM,IAAIC,OAAV,IAAqBhsB,YAAxB,EAAqC;AACjC,uBAAKvZ,IAAL,CAAUhG,GAAV,CAAc,QAAd,OAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEukB,OAAF,EAAvB;AACA,iBAAKve,IAAL,CAAUwlC,UAAV,CAAqB;AAAEjwC,oBAAM,EAAE;AAAV,aAArB;AACH;AACJ;AAED;;;;;;0CAGsB;AAAA;;;;AAClB,cAAM6tC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CACR,+BAAA4pC,yBADQ,EAER;AACIlC,iBAAK,EAAE,MADX;AAEIrkD,kBAAM,EAAE,MAFZ;AAGIokD,oBAAQ,EAAE,MAHd;AAII75B,gBAAI,EAAE;AACFvD,oBAAM,EAAE,KAAKlG,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KADpC;AAEFvC,oBAAM,EAAE,KAAK+a,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAFhC;AAGFnC,sBAAQ,EAAE,KAAK2a,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAnB,CAA4BmC,KAHpC;AAIF2V,kBAAI,EAAE,KAAK6C,IAAL,CAAUquB,QAAV,CAAmBpX,SAAnB,CAA6BzvB,KAJjC;AAKFk+C,sBAAQ,EAAE,IALR;AAMFC,2BAAa,EAAE,CAAC,cAAC,KAAK3lC,IAAL,CAAUquB,QAAV,CAAmB7V,QAApB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEhxB,KAA9B,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAEhB,MAArC;AANd;AAJV,WAFQ,CAAZ;;AAgBA,eAAKnE,YAAL,CACI,YADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAW;;AAC7C;;;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,kBAAImM,UAAU,GAAG,OAAI,CAAC3T,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAA/C;AACAmsB,wBAAU,GAAG3hB,KAAK,CAACwO,QAAnB;;AACA,qBAAI,CAACR,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BzuB,QAA9B,CAAuC,OAAA8F,MAAA,CAAO2oB,UAAP,EAAmB,IAAnB,CAAvC;;AACA,kBAAM6E,QAAQ,GAAG,CAAH,WAAG,OAAI,CAACxY,IAAL,CAAUquB,QAAb,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAE7V,QAApB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEhxB,KAAF,CAAQ2C,GAAR,CAAY,UAAC0xB,KAAD,EAA0B;AAC/EA,qBAAK,CAAC3e,QAAN,GAAiByW,UAAU,CAAC,CAAD,CAAV,CAActzB,IAA/B;AACAw7B,qBAAK,CAACC,WAAN,GAAoBnI,UAAU,CAAC,CAAD,CAAV,CAAcje,KAAlC;AACA,uBAAOmmB,KAAP;AACH,eAJ4C,CAA7C;AAKA,2BAAI,CAAC7b,IAAL,CAAUquB,QAAV,CAAmB7V,QAAnB,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAEtzB,QAAF,CAAWszB,QAAQ,IAAI,EAAvB,CAA3B;AACA4qB,iBAAG,CAACH,KAAJ;;AACA,qBAAI,CAAC7iD,KAAL,CAAW,YAAX;AACH;;AACD,gBAAI4R,KAAK,CAACwV,MAAN,KAAiB,OAArB,EAA8B;AAC1B47B,iBAAG,CAACH,KAAJ;;AACA,qBAAI,CAAC7iD,KAAL,CAAW,YAAX;AACH;AACJ,WAnBD,CAFJ;AAuBH;AAED;;;;;;2CAG0B;AAAA;;AACtB,cAAMgjD,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAyC,2BAAA+pC,qBAAzC,EAAgE;AACxErC,iBAAK,EAAE,MADiE;AAExErkD,kBAAM,EAAE;AAFgE,WAAhE,CAAZ;;AAIA,eAAKmD,YAAL,CACI,UADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAW;AAC7C;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,kBAAMwP,SAAS,GAAG,OAAI,CAAChX,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6BxvB,KAA/C;AACAwvB,uBAAS,CAAC7qB,IAAV,CAAe6F,KAAK,CAACwO,QAArB;;AACA,qBAAI,CAACR,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6B9xB,QAA7B,CAAsC,OAAA8F,MAAA,CAAOgsB,SAAP,EAAkB,OAAlB,CAAtC;;AACAosB,iBAAG,CAACH,KAAJ;;AACA,qBAAI,CAAC7iD,KAAL,CAAW,UAAX;;AACA,qBAAI,CAACqkD,KAAL,CAAWoB,aAAX;AACH;AACJ,WAVD,CAFJ;AAcH;;;6CAE4B38C,Q,EAAkB;AAC3C,cAAI,CAACA,QAAL,EAAeA,QAAQ,GAAG,KAAK43C,aAAhB,CAD4B,CAE3C;;AACA,cAAMgF,aAAa,GAAG,QAAA7+C,QAAA,CAAS8iB,GAAT,GAAe6qB,OAAf,CAAuB,KAAKkM,aAA5B,EAA2C94C,MAAjE;AACA,cAAM+9C,gBAAgB,GAAG,QAAA9+C,QAAA,CAAS8iB,GAAT,GAAe6qB,OAAf,CAAuB1rC,QAAvB,EAAiClB,MAA1D;AACA,cAAM/C,MAAM,GAAG,KAAK+a,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAAzC;;AACA,cAAIvC,MAAM,IAAI6gD,aAAa,KAAKC,gBAAhC,EAAkD;AAC9C,gBAAM//C,SAAS,GAAGf,MAAM,CAACo6B,KAAP,EAAlB;AACA,iBAAKwlB,UAAL,GAAkB7+C,SAAS,CAACuJ,eAAV,CAA0B,OAA1B,CAAlB;AACA,iBAAKu1C,QAAL,GAAgB9+C,SAAS,CAACb,QAAV,CAAmB;AAAEJ,qBAAO,EAAE,KAAKib,IAAL,CAAUxY,KAAV,CAAgBnC;AAA3B,aAAnB,EAA0DkK,eAA1D,CAA0E,OAA1E,CAAhB;AACH,WAJD,MAIO;AACH;AACA,iBAAKs1C,UAAL,GAAkB,EAAlB;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACH;;AACD,eAAKL,KAAL,CAAWoB,aAAX;AACH;;;4BAzHkB;AACf,iBAAO,KAAK9lC,QAAL,CAAcd,OAAd,CAAsB,uBAAtB,KAAkD,KAAzD;AACH;AAED;;;;4BACwB;AACpB,iBAAO,KAAKc,QAAL,CAAcd,OAAd,CAAsB,2BAAtB,KAAsD,EAA7D;AACH;AAED;;;;4BACiB;AACb,cAAMiH,MAAM,GAAG,KAAKlG,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAA7C;AACA,iBAAO0e,MAAM,CAAC1f,MAAP,KAAkB,CAAlB,GACD0f,MAAM,CAAC,CAAD,CAAN,CAAUkL,UADT,GAEDlL,MAAM,CAAC1f,MAAP,GAAgB,CAAhB,aACO0f,MAAM,CAAC1f,MADd,wBAEI,oBAJV;AAKH;;;4BA0GwB;AACrB,iBAAO,KAAKwZ,IAAL,CAAUxY,KAAV,CAAgB+N,MAAhB,KAA2B,cAAAoqB,YAAA,CAAaC,KAAxC,IAAiD,KAAK5f,IAAL,CAAUxY,KAAV,CAAgB+N,MAAhB,KAA2B,cAAAoqB,YAAA,CAAaijB,IAAhG;AACH;;;;MA/NqC,OAAA7hD,a;;AAN1C;;;uBAMayjD,oB,EAAoB,2C,EAAA,qC,EAAA,kC,EAAA,wC,EAAA,0C;AAAA,K;;;YAApBA,oB;AAAoB,qC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,o/F;AAAA;AAAA;ACzCjC;;;;AAA0B;;;;;;;;;;2BDyCbA,oB,EAAoB;cANhC,OAAAJ,SAMgC;eANtB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAMsB,Q;;;;;;;;;;;;;;gBAE5B,OAAAtiD;;;;;;;;;;;;;;;;;;;;;;;;AE3CL;AAAA;AAAA;;AAOA;AAAA;AAAA;;AASA;AAAA;AAAA;;AAOA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXY;;;;;;AAEI,kDAAoB,SAApB,EAAoB,IAApB,EAAoB,MAApB,EAAoB,OAApB,EAAoB,QAApB,EAAoB,aAApB;;;;;;;;;;;QD2BHuiD,oC;;;;;AA6CT,oDACYpmC,QADZ,EAEYyR,IAFZ,EAGYC,OAHZ,EAIYmwB,WAJZ,EAKqCvW,KALrC,EAKoE;AAAA;;AAAA;;AAEhE;AANQ,gBAAAtrB,QAAA,GAAAA,QAAA;AACA,gBAAAyR,IAAA,GAAAA,IAAA;AACA,gBAAAC,OAAA,GAAAA,OAAA;AACA,gBAAAmwB,WAAA,GAAAA,WAAA;AACyB,gBAAAvW,KAAA,GAAAA,KAAA;AAjDrC;;AACiB,gBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AACjB;;AACO,gBAAAj1C,SAAA,GAA4B,EAA5B;;AAiDH,YAAI,CAAC,QAAKy+B,KAAL,CAAWrrB,IAAhB,EAAsB;AAClB,kBAAKD,QAAL,CAAcy2B,WAAd,CAA0B,wBAA1B;;AACA,kBAAKoL,WAAL,CAAiBqB,KAAjB;AACH;;AAN+D;AAOnE;AAnDD;;;;;mCAqDe;AAAA;;AACX;AACA,cAAI,KAAK5X,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyB/rC,KAA7B,EAAoC;AAChC,iBAAKD,YAAL,CACI,WADJ,EAEI,KAAKgpC,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyB/rC,KAAzB,CAA+Bu8B,YAA/B,CAA4Ct8B,SAA5C,CAAsD,UAACD,KAAD,EAAW;AAC7D;AACA,kBAAI,CAACA,KAAD,IAAUA,KAAK,CAACkE,MAAN,IAAgB,CAA9B,EAAiC;AAC7B,uBAAI,CAACo7C,WAAL,CAAiBqB,KAAjB;AACH;AACJ,aALD,CAFJ;AASH;;AACD,eAAKr2C,SAAL,GAAiB,KAAKy+B,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyB/rC,KAAzB,CAA+BkF,KAA/B,CAAqC2C,GAArC,CAAyC,UAAC6C,IAAD;AAAA,mBAAU,IAAI,cAAAw3B,YAAJ,CAAiBx3B,IAAI,CAACiT,MAAL,EAAjB,CAAV;AAAA,WAAzC,CAAjB;AACH;;;4BAlEe;;;AACZ,iBAAO,KAAKwR,OAAL,CAAa3pB,IAAb,CAAkB,CAAD,iBAAC,KAAKujC,KAAL,CAAWrrB,IAAZ,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEquB,QAAlB,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,MAA1B,GAA0B,GAAEvS,WAA3B,MAAsC,IAAtC,IAAsC,aAAtC,GAAsC,MAAtC,GAAsC,GAAEt0B,KAA1D,CAAP;AACH;AAED;;;;4BACwB;AACpB,cAAIlD,IAAI,GAAG,KAAK+mC,KAAL,CAAWpmC,MAAtB;;AACA,cAAI,KAAKomC,KAAL,CAAWrrB,IAAX,IAAmB,KAAKqrB,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyBpT,aAAhD,EAA+D;AAC3D32B,gBAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAEJ,qBAAO,EAAE,KAAKsmC,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyBpT,aAAzB,CAAuCzzB;AAAlD,aAAd,CAAP;AACH;;AACD,iBAAOlD,IAAI,CAACsB,UAAL,CAAgB,OAAhB,EAAyBmJ,iBAAzB,EAAP;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKs8B,KAAL,CAAWrrB,IAAX,CAAgBquB,QAAhB,CAAyB/rC,KAAhC;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKsK,SAAL,CAAe3E,MAAf,CAAsB,UAAC09B,MAAD,EAAS34B,IAAT,EAAkB;AAC3C,gBAAMi4B,KAAK,GAAGj4B,IAAI,CAACi4B,KAAnB;AACA,mBAAOU,MAAM,GAAG34B,IAAI,CAAC24B,MAAL,GAAcV,KAA9B;AACH,WAHM,EAGJ,CAHI,CAAP;AAIH;AAED;;;;4BACiB;AAAA;;AACb;AACA,cAAI,CAAC,KAAKje,KAAN,IAAe,CAAC,KAAKA,KAAL,CAAW8G,KAA/B,EAAsC;AAClC,mBAAO,KAAP;AACH;;AACD,cAAM3G,QAAQ,GAAG,KAAKqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CACb,UAACmhC,GAAD;AAAA,mBAASA,GAAG,CAAC1yB,EAAJ,KAAW,OAAI,CAACyQ,KAAL,CAAW8G,KAAX,CAAiBob,WAArC;AAAA,WADa,KAEZ;AAAE4B,oBAAQ,EAAE;AAAZ,WAFL;AAGA,iBAAO3jB,QAAQ,CAAC2jB,QAAhB;AACH;;;;MA3CqD,OAAA/pC,a;;AAL1D;;;uBAKaolD,oC,EAAoC,2C,EAAA,4C,EAAA,sC,EAAA,qC,EAAA,qBAkDjC,SAAAhC,eAlDiC,C;AAkDlB,K;;;YAlDlBgC,oC;AAAoC,+C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,kS;AAAA;AAAA;ACzCjD;AACI;AAAA;AAAgE;AAChE;AACI;AACJ;AACJ;AACA;AACI;AACI;AACI;AAAc;AAAM;AAA0C;AAAQ;AAAG;AAAM;AAAmB;AACtG;AACA;AACI;AAOJ;AACA;AACI;AAAO;AAAY;AACnB;AAAmB;;AAAwC;AAC/D;AACJ;AACJ;AACA;AACI;AACI;AAAmB;AAAA,mBAAS,IAAAn0C,KAAA;AAAA,sBAAqB;AAArB,cAAT;AAAuC,WAAvC;AAAnB;AAA0G;AAC9G;AACJ;;;;AA3BkB;AAAA;AAMc;AAAA;AAA2D;AAAA;AAI3E;AAAA;AASe;AAAA;;;;;;;;;;2BDmBlBm0C,oC,EAAoC;cALhD,OAAA/B,SAKgD;eALtC;AACPljD,kBAAQ,EAAE,0BADH;AAEPmjD,qBAAW,EAAE,yCAFN;AAGPC,mBAAS,EAAE,CAAC,yCAAD;AAHJ,S;AAKsC,Q;;;;;;;;;;;;kBAkDxC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAhDX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE3CL;AAAA;AAAA;;AASA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAcA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BY;;;;;;AAEI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCI;;;;;;;AAzBZ;AACI;AACI;AAAA;AAGA;AACA;AACI;AAAA;AAMC;AACL;AACJ;AACA;AACI;AAAA;AAQI;AACJ;AAAA;AACA;AACI;AAAA;AAAA;AAOA;AAAA;AACI;AACJ;AAAA;AACA;AAAA;AAEA;AACJ;AACJ;AACJ;;;;;AA3CsD;AAmB1C;AAAA;AAMM;AAAA;AAeN;AAAA;AAAA;;;;;;;;;;;QDbP6B,6B;AAyCT,6CACY50B,IADZ,EAEYqa,MAFZ,EAGYwa,qBAHZ,EAIqChb,KAJrC,EAIoE;AAAA;;AAHxD,aAAA7Z,IAAA,GAAAA,IAAA;AACA,aAAAqa,MAAA,GAAAA,MAAA;AACA,aAAAwa,qBAAA,GAAAA,qBAAA;AACyB,aAAAhb,KAAA,GAAAA,KAAA;AA5CrC;;AACiB,aAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AACjB;;AACO,aAAAzqB,KAAA,GAAyB,EAAzB;AACP;;AACO,aAAA2H,KAAA,GAAyB,EAAzB;AACP;;AACO,aAAAunB,WAAA,GAA+B,EAA/B;AACP;;AACO,aAAAtmC,IAAA,GAA2B,EAA3B;AACP;;AACO,aAAAumC,iBAAA,GAAsC,EAAtC;AACP;;AACO,aAAAC,YAAA,GAAuB,CAAvB;AAiCN;AA7BD;;;;;mCA+Be;AACX,cAAMC,SAAS,GAAG,KAAKpb,KAAL,CAAWqb,WAAX,CAAuBl/C,KAAvB,CAA6B0D,MAA7B,CACd,UAAC0uB,IAAD;AAAA,mBAAuBA,IAAI,CAACrwB,IAAL,KAAc,UAArC;AAAA,WADc,CAAlB;;AAGA,eAAK6tB,KAAL,GAAaqvB,SAAS,CAACx+C,MAAV,CAAiB,UAACkC,GAAD,EAAMyvB,IAAN,EAAe;AACzCzvB,eAAG,CAACyvB,IAAI,CAAC5S,KAAN,CAAH,GAAkB4S,IAAI,CAACpe,OAAvB;AACA,mBAAOrR,GAAP;AACH,WAHY,EAGV,EAHU,CAAb;AAIA,eAAK40B,KAAL,GAAa,KAAKsM,KAAL,CAAW7S,QAAX,CAAoBhxB,KAApB,CAA0BS,MAA1B,CAAiC,UAACkC,GAAD,EAAM0xB,KAAN,EAA+B;AACzE1xB,eAAG,CAAC0xB,KAAK,CAACC,WAAP,CAAH,GAAyBD,KAAK,CAAC6K,WAA/B;AACA,mBAAOv8B,GAAP;AACH,WAHY,EAGV,EAHU,CAAb;AAIA,eAAKw8C,kBAAL;AACH;;;iCAEY;AAAA;;AACT,eAAKhzB,UAAL,CAAgBjxB,OAAhB,CAAwB,UAACskB,KAAD;AAAA,mBAAW,OAAI,CAAChH,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuBkxC,gBAAvB,EAAX;AAAA,WAAxB;AACA;;AACA,cAAI,KAAKC,QAAT,EAAmB;AACf;AACA,gBAAMzvB,KAAK,GAAG,KAAKiU,KAAL,CAAWqb,WAAX,CAAuBl/C,KAAvB,CAA6B0D,MAA7B,CACV,UAAC0uB,IAAD;AAAA,qBAAuBA,IAAI,CAACrwB,IAAL,KAAc,UAArC;AAAA,aADU,CAAd;;AAGA,gBAAMu9C,SAAS,GAAG,KAAKnzB,UAAL,CAAgBxpB,GAAhB,CACd,UAAC6c,KAAD;AAAA,qBACK;AACGyS,sBAAM,EAAE,OAAI,CAAC4R,KAAL,CAAWpyB,OAAX,CAAmBke,SAAnB,GAA+B,OAAI,CAACkU,KAAL,CAAWpyB,OAAX,CAAmBke,SAAnB,CAA6B,MAA7B,CAA/B,GAAsE,OAAI,CAAC0U,MAAL,CAAYlO,OAAZ,CAAoBt9B,IADrG;AAEGkJ,oBAAI,EAAE,UAFT;AAGGiS,uBAAO,EAAE,OAAI,CAACwE,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB24B,QAAvB,CAAgCjX,KAAhC,CAAsC5vB,KAHlD;AAIGwf,qBAAK,EAAEA,KAAK,CAACtR,KAJhB;AAKGpR,oBAAI,EAAE,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J;AAL7B,eADL;AAAA,aADc,CAAlB;;AAUA,iBAAKo4C,qBAAL,CAA2BU,QAA3B,CAAoCD,SAApC;;AACA,iBAAKzb,KAAL,CAAWqb,WAAX,CAAuBxhD,QAAvB,CAAgCkyB,KAAK,CAAC9C,MAAN,CAAawyB,SAAb,EAAwB57C,MAAxB,CAA+B,UAAC0uB,IAAD;AAAA,qBAAUA,IAAI,CAACpe,OAAf;AAAA,aAA/B,CAAhC,EAhBe,CAiBf;;;AACA,gBAAMogB,MAAM,GAAG,KAAKyP,KAAL,CAAW7S,QAAX,CAAoBhxB,KAApB,CAA0B2C,GAA1B,CACX,UAAC0xB,KAAD;AAAA,qBACI,IAAI,cAAApD,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBACVoD,KADU,CAAC,EACN;AACR6K,2BAAW,EAAE,OAAI,CAAC1mB,IAAL,CAAU6b,KAAK,CAACC,WAAhB,IACP,OAAI,CAAC9b,IAAL,CAAU6b,KAAK,CAACC,WAAhB,EAA6BuS,QAA7B,CAAsC3hB,IAAtC,CAA2CllB,KADpC,GAEP;AAHE,eADM,CAAlB,CADJ;AAAA,aADW,CAAf;;AAUA,iBAAK6jC,KAAL,CAAW7S,QAAX,CAAoBtzB,QAApB,CAA6B02B,MAA7B,EA5Be,CA6Bf;;;AACA,iBAAK5pB,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE;AAAV,aAAhB;AACH,WA/BD,MA+BO;AACH,iBAAKw/B,eAAL;AACH;AACJ;AAED;;;;6CAC0B;AAAA;;;;AAAA,uDACF,KAAKrzB,UADH;AAAA;;AAAA;AAAA;AAAA,kBACX3M,KADW;;AAElB,kBAAMG,QAAQ,GAAG,OAAI,CAACqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CACb,UAAAmhC,GAAG;AAAA,uBAAIA,GAAG,CAAC1yB,EAAJ,KAAWyQ,KAAK,CAAC8G,KAAN,CAAYob,WAA3B;AAAA,eADU,CAAjB;;AAIA,qBAAI,CAACqd,iBAAL,CAAuBv/B,KAAK,CAACtR,KAA7B,IAAsC,OAAAsR,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEjb,OAAP,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAE26B,WAAhB,MAA2B,MAAI1f,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEhK,QAAX,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAE0pB,WAAhD,KAA+D,KAArG;AACA,qBAAI,CAAC1mB,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,IAAyB,IAAI,QAAA4qB,SAAJ,CAAc;AACnClJ,qBAAK,EAAE,IAAI,QAAAwG,WAAJ,CAAgB,OAAI,CAACxG,KAAL,CAAWpQ,KAAK,CAACtR,KAAjB,KAA2B,EAA3C,CAD4B;AAEnCgX,oBAAI,EAAE,IAAI,QAAAkR,WAAJ,CAAgB,OAAI,CAACmB,KAAL,CAAW/X,KAAK,CAACtR,KAAjB,KAA2B,EAA3C,EACF,OAAI,CAAC6wC,iBAAL,CAAuBv/B,KAAK,CAACtR,KAA7B,IACI,CAAC,QAAAooB,UAAA,CAAWgf,OAAX,CAAmB,mBAAnB,CAAD,EAA0C,QAAAhf,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAA1C,EAAoE,QAAAH,UAAA,CAAWC,QAA/E,CADJ,GACgG,CAAC,QAAAD,UAAA,CAAWgf,OAAX,CAAmB,mBAAnB,CAAD,EAA0C,QAAAhf,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAA1C,CAF9F;AAF6B,eAAd,CAAzB;AAPkB;;AACtB,sEAAqC;AAAA;AAYpC;AAbqB;AAAA;AAAA;AAAA;AAAA;AAczB;AAED;;;;0CACuB;;;AACnB,qBAAKgpB,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE9kD,aAAF,CAAgB+kD,QAAhB,CAAyB;AACrCC,eAAG,EAAE,KAAKF,WAAL,CAAiB9kD,aAAjB,CAA+BilD,YADC;AAErCC,gBAAI,EAAE,CAF+B;AAGrCC,oBAAQ,EAAE;AAH2B,WAAzB,CAAhB;AAKH;;;4BA5GoB;AAAA;;AACjB,iBAAO,CAAC,KAAKjc,KAAL,CAAWnlB,MAAX,IAAqB,EAAtB,EAA0Bhb,MAA1B,CAAiC,UAAC8b,KAAD;AAAA,mBACpC,OAAI,CAACqkB,KAAL,CAAW7S,QAAX,CAAoBhxB,KAApB,CAA0BM,IAA1B,CAA+B,UAAC+zB,KAAD;AAAA,qBAAWA,KAAK,CAACC,WAAN,KAAsB9U,KAAK,CAACtR,KAAvC;AAAA,aAA/B,CADoC;AAAA,WAAjC,CAAP;AAGH;;;4BAEqB;AAClB,iBAAO,KAAKsK,IAAL,CAAU,KAAK2T,UAAL,CAAgB,KAAK6yB,YAArB,EAAmC9wC,KAA7C,CAAP;AACH;;;4BAE6B;;;AAC1B,iBAAO,YAAK6xC,WAAL,CAAiBlZ,QAAjB,CAA0B3hB,IAA1B,CAA+B86B,MAA/B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAE1K,OAAvC,MAA8C,MAAI,KAAKyK,WAAL,CAAiBlZ,QAAjB,CAA0B3hB,IAA1B,CAA+B86B,MAAnC,MAAyC,IAAzC,IAAyC,aAAzC,GAAyC,MAAzC,GAAyC,GAAEC,SAAzF,CAAP;AACH;AAED;;;;4BACmB;AAAA;;AACf,iBAAO,KAAK9zB,UAAL,CAAgB1rB,MAAhB,CACH,UAACwf,KAAD,EAAQT,KAAR;AAAA,mBAAkBS,KAAK,IAAI,OAAI,CAACzH,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB+R,KAAlD;AAAA,WADG,EAEH,IAFG,CAAP;AAIH;;;;;;AA5CL;;;uBAKa2+B,6B,EAA6B,4C,EAAA,qC,EAAA,6C,EAAA,qBA6C1B,SAAAjC,eA7C0B,C;AA6CX,K;;;YA7ClBiC,6B;AAA6B,+C;AAAA;AAAA;;;;;;;;;;;;;;;;;;AC9C1C;AACI;AACI;AAAe;AAAA;AAAA;AACX;AAIJ;AACJ;AACA;AACI;AACJ;AACJ;AACA;AACI;AACI;AACI;AACA;AAAkB;AAAmD;AACzE;AACA;AA4CJ;AACJ;AACA;AACI;AACI;AAA+B;AAAA,mBAAS,IAAAsB,MAAA,EAAT;AAAiB,WAAjB;AAA/B;AAEA;AACJ;AACJ;;;;AArEuB;AAAA;AAEP;AAAA;AAME;AAAA;AASJ;AAAA;;;;;;;;;2BD2BDtB,6B,EAA6B;cALzC,OAAAhC,SAKyC;eAL/B;AACPljD,kBAAQ,EAAE,0BADH;AAEPmjD,qBAAW,EAAE,yCAFN;AAGPC,mBAAS,EAAE,CAAC,yCAAD;AAHJ,S;AAK+B,Q;;;;;;;;;;kBA6CjC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBA3CX,OAAAI;;;gBAcA,OAAAoD,S;iBAAU,S,EAAW;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AE9D1B;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPQ;;;;;AAAuB;;;;;;AAD3B;AACI;AACA;AACI;AACJ;AACJ;;;;;AAJc;AAAA;AAEH;AAAA;;;;;;;;;;;;;;;;;;;;AAIf;AACI;AACI;AAAA;AAAqF;AACrF;AAAiC;AAAA;AAAA;AAAA;AAAA;AAAmB;AAAoB;AAC5E;AACJ;;;;;AAF4D;AAAA;;;;;;AAIxD;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;ADKjB,YAAAC,gBAAA,GAAmB;AAC5B1oD,YAAM,EAAE,MADoB;AAE5BqkD,WAAK,EAAE,MAFqB;AAG5BsE,eAAS,EAAE,mBAHiB;AAI5BvE,cAAQ,EAAE;AAJkB,KAAnB;;QAYAwE,qB;;;;;AA0BT,qCACYnG,OADZ,EAEqCtW,KAFrC,EAE4D;AAAA;;AAAA;;AAExD;AAHQ,gBAAAsW,OAAA,GAAAA,OAAA;AACyB,gBAAAtW,KAAA,GAAAA,KAAA;AA3BrC;;AACiB,gBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AA0B2C;AAG3D;AAzBD;;;;;;AA2BA;;;iCAGgB;AACZ,eAAK7vC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACH;;;4BA/Be;AACZ,iBAAO,CAAC,KAAK6jB,KAAL,GAAa,KAAKA,KAAL,CAAW9b,KAAxB,GAAgC,IAAjC,KAA0C,SAAjD;AACH;AAED;;;;4BACkB;AACd,iBAAO,CAAC,KAAK8b,KAAL,GAAa,KAAKA,KAAL,CAAW1vB,OAAxB,GAAkC,IAAnC,KAA4C,eAAnD;AACH;AAED;;;;4BACiB;AACb,iBAAO,CAAC,KAAK0vB,KAAL,GAAa,KAAKA,KAAL,CAAW91B,MAAxB,GAAiC,IAAlC,KAA2C,IAAlD;AACH;AAED;;;;4BACe;AACX,iBAAO,CAAC,KAAK81B,KAAL,GAAa,KAAKA,KAAL,CAAW3vB,IAAxB,GAA+B,IAAhC,KAAyC,IAAhD;AACH;;;;MAxBsC,OAAA3a,a;;AAL3C;;;uBAKa+mD,qB,EAAqB,qC,EAAA,qBA4BlB,SAAA3D,eA5BkB,C;AA4BH,K;;;YA5BlB2D,qB;AAAqB,oC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,oX;AAAA;AAAA;ACxClC;AACI;AAAqB;AAAwB;AACjD;AACA;AACI;AAMJ;AACA;AAMA;;;;;;AAhByB;AAAA;AAGH;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAOF;AAAA;;;;;;;;;2BD6BPA,qB,EAAqB;cALjC,OAAA1D,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,eADH;AAEPmjD,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,gCAAD;AAHJ,S;AAKuB,Q;;;;;;kBA4BzB,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBA1BX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE1CL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMwD,YAAY,GAAG,CACjB,+BAAAtC,yBADiB,EAEjB,2BAAAG,qBAFiB,EAGjB,0BAAAkC,qBAHiB,EAIjB,8BAAAE,wBAJiB,EAKjB,mCAAA7B,oCALiB,EAMjB,mCAAAC,6BANiB,EAOjB,sCAAA6B,gCAPiB,EAQjB,4BAAAzG,uBARiB,EASjB,sBAAA0G,iBATiB,EAUjB,yBAAA1D,oBAViB,CAArB;;QA+Ba2D,oB;;;;AAlBb;;YAkBaA;;;;yBAAAA,oB;AAAoB,O;AAAA,gBAjBpB,CACL,YAAAC,cADK,EAEL,QAAAC,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAA/oD,YAJK,EAKL,KAAAgpD,QALK,EAML,OAAApnD,UANK,EAOL,kBAAAqnD,YAPK,CAiBoB,EAHzB,OAAArnD,UAGyB;;;;+EAApBgnD,oB,EAAoB;AAAA,uBA9B7B,+BAAA1C,yBA8B6B,EA7B7B,2BAAAG,qBA6B6B,EA5B7B,0BAAAkC,qBA4B6B,EA3B7B,8BAAAE,wBA2B6B,EA1B7B,mCAAA7B,oCA0B6B,EAzB7B,mCAAAC,6BAyB6B,EAxB7B,sCAAA6B,gCAwB6B,EAvB7B,4BAAAzG,uBAuB6B,EAtB7B,sBAAA0G,iBAsB6B,EArB7B,yBAAA1D,oBAqB6B;AArBT,kBAKhB,YAAA4D,cALgB,EAMhB,QAAAC,WANgB,EAOhB,QAAAC,mBAPgB,EAQhB,SAAA/oD,YARgB,EAShB,KAAAgpD,QATgB,EAUhB,OAAApnD,UAVgB,EAWhB,kBAAAqnD,YAXgB,CAqBS;AAVb,kBApBhB,+BAAA/C,yBAoBgB,EAnBhB,2BAAAG,qBAmBgB,EAlBhB,0BAAAkC,qBAkBgB,EAjBhB,8BAAAE,wBAiBgB,EAhBhB,mCAAA7B,oCAgBgB,EAfhB,mCAAAC,6BAegB,EAdhB,sCAAA6B,gCAcgB,EAbhB,4BAAAzG,uBAagB,EAZhB,sBAAA0G,iBAYgB,EAXhB,yBAAA1D,oBAWgB,EAOZ,OAAArjD,UAPY;AAUa,O;AAHf,K;;;;;2BAGLgnD,oB,EAAoB;cAlBhC,OAAA3oD,QAkBgC;eAlBvB;AACNC,iBAAO,EAAE,CACL,YAAA2oD,cADK,EAEL,QAAAC,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAA/oD,YAJK,EAKL,KAAAgpD,QALK,EAML,OAAApnD,UANK,EAOL,kBAAAqnD,YAPK,CADH;AAUNnnD,sBAAY,YACL0mD,YADK,CAVN;AAaNzmD,iBAAO,YACAymD,YADA,GAEH,OAAA5mD,UAFG;AAbD,S;AAkBuB,Q;;;;;;;;;;;;;;;;;;;;;;ACpDjC;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFI;AACI;AACJ;;;;AADc;AAAA;;;;;;AAGlB;AACI;AACJ;;;;;AADe;AAAA;;;;;;;;AAEf;AACI;AAAoE;AAAM;AAC1E;AAA+B;AAAA;AAAA;AAAA;AAAA;AAAwB;AAAI;AAC/D;;;;;;AAEI;AACI;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;AACJ;;;;QDZSykD,qB;;;;;AALb;AAAA;;AAAA;;;AAMI;;AACiB,gBAAA5zC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAPrB;AAsCC;;;;mCAvBkB;AACX,eAAKplC,IAAL,GAAY,IAAI,cAAAka,IAAJ,EAAZ;AACA,eAAK3W,IAAL,GAAY,cAAA68B,gBAAA,CAAiB,KAAKpgC,IAAtB,CAAZ;AACH;;;sCAEoB;AACjB,eAAKuD,IAAL,CAAU4mC,gBAAV;;AACA,cAAI,KAAK5mC,IAAL,CAAUyH,KAAd,EAAqB;AACjB,gBAAI,CAAC,KAAKzH,IAAL,CAAUquB,QAAV,CAAmB34B,KAAnB,CAAyBlO,KAA9B,EAAqC;AACjC,mBAAKwY,IAAL,CAAUquB,QAAV,CAAmB34B,KAAnB,CAAyBxQ,QAAzB,WACON,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,KAAgB,KAA3B,CADP;AAGH;;AACD,gBAAMs6C,QAAQ,GAAG,IAAI,cAAA9xB,IAAJ,CAAS,MAAD,OAAC,CAAD,kBAClB,KAAK3W,IAAL,CAAUxY,KADQ,CAAC,EACJ;AAClBnH,kBAAI,YAAK,KAAK2f,IAAL,CAAUxY,KAAV,CAAgB0zC,UAArB,cAAmC,KAAKl7B,IAAL,CAAUxY,KAAV,CAAgB2zC,SAAnD,CADc;AAElB5xC,kBAAI,EAAE,UAFY;AAGlB+xB,sBAAQ,EAAE,IAHQ;AAIlBue,qBAAO,EAAE;AAJS,aADI,CAAT,CAAjB;AAOA,iBAAK7nC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE,MAAV;AAAkBhH,sBAAQ,EAAEioC;AAA5B,aAAhB;AACH;AACJ;;;;MAhCsC,OAAA1nD,a;;AAL3C;;;qDAKa6kD,qB;AAAqB,K;;;YAArBA,qB;AAAqB,qC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,sc;AAAA;AAAA;ACXlC;AACI;AAAqB;AAAqB;AAC1C;AAGJ;AACA;AAGA;AAIA;;;;;;AAX6C;AAAA;AAI3B;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAGV;AAAA;;;;;;sEDEKA,qB;;;;2BAAAA,qB,EAAqB;cALjC,OAAAxB,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,iCAFN;AAGPC,mBAAS,EAAE,CAAC,iCAAD;AAHJ,S;AAKuB,Q;;gBAE7B,OAAAC;;;;;;;;;;;;;;;;;;;;;;;;AEbL;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;QAUayD,wB;;;;;AACT,wCACYpG,WADZ,EAC+D;AAAA;;AAAA;;AAE3D;AAFQ,gBAAAA,WAAA,GAAAA,WAAA,CAAmD,CAK/D;;AACiB,gBAAA5vC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAN8C;AAG9D,O,CAKD;;;;;kCACiB;AACb,eAAK7vC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;;AACA,eAAKo6B,WAAL,CAAiBqB,KAAjB;AACH,S,CAED;;;;iCACgB;AACZ,eAAKjxC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;;AACA,eAAKo6B,WAAL,CAAiBqB,KAAjB;AACH;;;;MApByC,OAAAliD,a;;AAL9C;;;uBAKainD,wB,EAAwB,qC;AAAA,K;;;YAAxBA,wB;AAAwB,wC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,mO;AAAA;AAAA;AClBrC;AACI;AACI;AACI;AACI;AACI;AACA;AAAG;AACH;AAAI;AAAsC;AAC9C;AACJ;AACA;AACI;AACgC;AAAA,mBAAiB,IAAAU,OAAA,EAAjB;AAA0B,WAA1B,EAA2B,iBAA3B,EAA2B;AAAA,mBACZ,IAAAC,MAAA,EADY;AACJ,WADvB;AAE/B;AACL;AACJ;AACJ;AACJ;;;;;;;;;2BDAaX,wB,EAAwB;cALpC,OAAA5D,SAKoC;eAL1B;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,oCAFN;AAGPC,mBAAS,EAAE,CAAC,oCAAD;AAHJ,S;AAK0B,Q;;;;;;gBAQhC,OAAAC;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AASA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAYA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBoB;AACI;AAIJ;;;;;;AALM;AACF;AAAA;;;;;;AAHZ;AACI;AAQJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;AACI;AAAA;AAGA;AACA;AACI;AAAA;AAMC;AACL;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcuB;;;;;;;AAZnB;AAKI;AAAA;AAOe;AAGf;AAAA;AACA;AACI;AAAA;AAAA;AAOA;AAAA;AACI;AAEJ;AAAA;AACA;AAAA;AAEA;AACJ;AACJ;;;;;AAzBQ;AAAA;AAKiB;AAAA;AAkBjB;AAAA;AAAA;;;;;;AA/ChB;AACI;AAeA;AACI;AAiCA;AACI;AAAA;AAQsB;AACtB;AAAA;AACA;AACI;AAAA;AAAA;AASA;AAAA;AACI;AAEJ;AAAA;AACA;AAAA;AAEA;AACJ;AACJ;AACJ;AACJ;;;;;AAjFsD;AAC/B;AAAA;AAmBX;AAAA;AAiCI;AAAA;;;;;;;;;;;QDvCX0D,gC;AA2CT,gDACYz2B,IADZ,EAEYqa,MAFZ,EAGqCR,KAHrC,EAIYzwB,SAJZ,EAIsC;AAAA;;AAH1B,aAAA4W,IAAA,GAAAA,IAAA;AACA,aAAAqa,MAAA,GAAAA,MAAA;AACyB,aAAAR,KAAA,GAAAA,KAAA;AACzB,aAAAzwB,SAAA,GAAAA,SAAA;AA9CZ;;AACiB,aAAA5I,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AACjB;;AACO,aAAAzqB,KAAA,GAAyB,EAAzB;AACP;;AACO,aAAA2H,KAAA,GAAyB,EAAzB;AACP;;AACO,aAAAunB,WAAA,GAA+B,EAA/B;AACP;;AACO,aAAAtmC,IAAA,GAA2B,EAA3B;AACP;;AACO,aAAAumC,iBAAA,GAAsC,EAAtC;AACP;;AACO,aAAAC,YAAA,GAAuB,CAAvB;AAmCH,aAAKjpB,WAAL,GAAmB3iB,SAAS,CAAC8G,SAA7B;AACA,aAAK7C,QAAL,GAAgBjE,SAAS,CAACiE,QAA1B;AACH;AAjCD;;;;;mCAmCe;AACX,cAAM4nC,SAAS,GAAG,KAAKpb,KAAL,CAAWqb,WAAX,CAAuBl/C,KAAvB,CACb0D,MADa,CACN,UAAC0uB,IAAD;AAAA,mBAAuBA,IAAI,CAACrwB,IAAL,KAAc,WAArC;AAAA,WADM,CAAlB;;AAEA,eAAK6tB,KAAL,GAAaqvB,SAAS,CAACx+C,MAAV,CAAiB,UAACkC,GAAD,EAAMyvB,IAAN,EAAe;AACzCzvB,eAAG,CAACyvB,IAAI,CAAC5S,KAAN,CAAH,GAAkB4S,IAAI,CAACpe,OAAvB;AACA,mBAAOrR,GAAP;AACH,WAHY,EAGV,EAHU,CAAb;AAIA,eAAK40B,KAAL,GAAa,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKsM,KAAL,CAAWud,WAAX,CAAuBphD,KAA5B,CAAb;AACA,eAAK8+C,WAAL,GAAmB,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKjb,KAAL,CAAWwd,iBAAX,CAA6BrhD,KAAlC,CAAnB;AACA,eAAKm/C,kBAAL;AACH;;;iCAEY;AAAA;;AACT,eAAKhzB,UAAL,CAAgBjxB,OAAhB,CAAwB,UAAAskB,KAAK;AAAA,mBAAI,OAAI,CAAChH,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuBkxC,gBAAvB,EAAJ;AAAA,WAA7B;AACA;;AACA,cAAI,KAAKC,QAAT,EAAmB;AACf;AACA,gBAAMzvB,KAAK,GAAG,KAAKiU,KAAL,CAAWqb,WAAX,CAAuBl/C,KAAvB,CACT0D,MADS,CACF,UAAC0uB,IAAD;AAAA,qBAAuBA,IAAI,CAACrwB,IAAL,KAAc,WAArC;AAAA,aADE,CAAd;;AAEA,gBAAMu9C,SAAS,GAAG,KAAKnzB,UAAL,CAAgBxpB,GAAhB,CAAoB,UAAA6c,KAAK;AAAA,qBAAK;AAC5CyS,sBAAM,EAAE,OAAI,CAACoS,MAAL,CAAYlO,OAAZ,CAAoBt9B,IADgB;AAE5CkJ,oBAAI,EAAE,WAFsC;AAG5CiS,uBAAO,EAAE,OAAI,CAACwE,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB24B,QAAvB,CAAgCjX,KAAhC,CAAsC5vB,KAAtC,CAA4Cs3C,IAA5C,EAHmC;AAI5C93B,qBAAK,EAAEA,KAAK,CAACtR,KAJ+B;AAK5CpR,oBAAI,EAAE,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J;AALkB,eAAL;AAAA,aAAzB,CAAlB;;AAOA,iBAAKo9B,KAAL,CAAWqb,WAAX,CAAuBxhD,QAAvB,CAAgCkyB,KAAK,CAAC9C,MAAN,CAAawyB,SAAb,EAAwB57C,MAAxB,CAA+B,UAAA0uB,IAAI;AAAA,qBAAIA,IAAI,CAACpe,OAAT;AAAA,aAAnC,CAAhC;;AACA,iBAAK6vB,KAAL,CAAWud,WAAX,CAAuB1jD,QAAvB,CAAgC,KAAKyuB,UAAL,CAAgB1rB,MAAhB,CAAuB,UAACkC,GAAD,EAAM6c,KAAN,EAAgB;AACnE7c,iBAAG,CAAC6c,KAAK,CAACtR,KAAP,CAAH,GAAmB,OAAI,CAACsK,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB24B,QAAvB,CAAgC3hB,IAAhC,CAAqCllB,KAAxD;AACA,qBAAO2C,GAAP;AACH,aAH+B,EAG7B,EAH6B,CAAhC;;AAIA,iBAAKkhC,KAAL,CAAWwd,iBAAX,CAA6B3jD,QAA7B,CAAsC,KAAKyuB,UAAL,CAAgB1rB,MAAhB,CAAuB,UAACkC,GAAD,EAAM6c,KAAN,EAAgB;AACzE7c,iBAAG,CAAC6c,KAAK,CAACtR,KAAP,CAAH,GAAmB,OAAI,CAACsK,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB24B,QAAvB,CAAgCya,UAAhC,CAA2CthD,KAA9D;AACA,qBAAO2C,GAAP;AACH,aAHqC,EAGnC,EAHmC,CAAtC;;AAIA,iBAAK6H,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE;AAAV,aAAhB;AACH,WArBD,MAqBO;AACH,iBAAKy/B,WAAL,CAAiB9kD,aAAjB,CAA+B+kD,QAA/B,CAAwC;AACpCC,iBAAG,EAAE,KAAKF,WAAL,CAAiB9kD,aAAjB,CAA+BilD,YADA;AAEpCC,kBAAI,EAAE,CAF8B;AAGpCC,sBAAQ,EAAE;AAH0B,aAAxC;AAKH;AACJ;AAED;;;;6CAC0B;AAAA;;;;AAAA,uDACF,KAAK3zB,UADH;AAAA;;AAAA;AAAA;AAAA,kBACX3M,KADW;;AAElB,kBAAMG,QAAQ,GAAG,OAAI,CAACqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CACb,UAAAmhC,GAAG;AAAA,uBAAIA,GAAG,CAAC1yB,EAAJ,KAAWyQ,KAAK,CAAC8G,KAAN,CAAYob,WAA3B;AAAA,eADU,CAAjB,CAFkB,CAKlB;;;AALkB,kBAMVn9B,OANU,GAMYib,KANZ,CAMVjb,OANU;AAAA,kBAMDiR,QANC,GAMYgK,KANZ,CAMDhK,QANC;AAOlB,kBAAM+rC,eAAe,GAAG,CAAAh9C,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEi/B,cAAT,MAA2BhuB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEguB,cAArC,CAAxB;AACA,kBAAMge,iBAAiB,GAAG,CAAH,KAAG7hC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE4W,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEiN,cAA9C;AACA,qBAAI,CAACub,iBAAL,CAAuBv/B,KAAK,CAACtR,KAA7B,IAAsCqzC,eAAe,KAAKxiD,SAApB,GAAgCwiD,eAAhC,GAAkDC,iBAAiB,KAAKziD,SAAtB,GAAkCyiD,iBAAlC,GAAqD,KAA7I;AAEA,qBAAI,CAAChpC,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,IAAyB,IAAI,QAAA4qB,SAAJ,CAAc;AACnClJ,qBAAK,EAAE,IAAI,QAAAwG,WAAJ,CAAgB,OAAI,CAACxG,KAAL,CAAWpQ,KAAK,CAACtR,KAAjB,KAA2B,EAA3C,CAD4B;AAEnCgX,oBAAI,EAAE,IAAI,QAAAkR,WAAJ,CACF,OAAI,CAACmB,KAAL,CAAW/X,KAAK,CAACtR,KAAjB,KAA2B,EADzB,EAEF,OAAI,CAAC6wC,iBAAL,CAAuBv/B,KAAK,CAACtR,KAA7B,IACI,CAAC,QAAAooB,UAAA,CAAWgf,OAAX,CAAmB,gBAAnB,CAAD,EAAuC,QAAAhf,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAvC,EAAiE,QAAAH,UAAA,CAAWC,QAA5E,CADJ,GAC4F,CAAC,QAAAD,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAD,EAA0B,QAAAH,UAAA,CAAWgf,OAAX,CAAmB,gBAAnB,CAA1B,CAH1F,CAF6B;AAOnCgM,0BAAU,EAAE,IAAI,QAAAlrB,WAAJ,CAAgB,OAAI,CAAC0oB,WAAL,CAAiBt/B,KAAK,CAACtR,KAAvB,KAAiC,EAAjD,EAAqD,CAAC,QAAAooB,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWgf,OAAX,CAAmB,UAAnB,CAAtB,CAArD;AAPuB,eAAd,CAAzB;AAXkB;;AACtB,sEAAqC;AAAA;AAmBpC;AApBqB;AAAA;AAAA;AAAA;AAAA;AAqBzB;;;4BArGoB;AACjB,iBAAO,KAAKzR,KAAL,CAAWnlB,MAAlB;AACH;;;4BAEwB;AACrB,iBAAO,KAAP;AACH;;;4BAEqB;AAClB,iBAAO,KAAKlG,IAAL,CAAU,KAAK2T,UAAL,CAAgB,KAAK6yB,YAArB,EAAmC9wC,KAA7C,CAAP;AACH;;;4BAE6B;;;AAC1B,iBAAO,YAAK6xC,WAAL,CAAiBlZ,QAAjB,CAA0B3hB,IAA1B,CAA+B86B,MAA/B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAEC,SAAvC,MAAgD,MAAI,KAAKF,WAAL,CAAiBlZ,QAAjB,CAA0B3hB,IAA1B,CAA+B86B,MAAnC,MAAyC,IAAzC,IAAyC,aAAzC,GAAyC,MAAzC,GAAyC,GAAE1K,OAA3F,CAAP;AACH;AAED;;;;4BACmB;AAAA;;AACf,iBAAO,KAAKnpB,UAAL,CAAgB1rB,MAAhB,CAAuB,UAACwf,KAAD,EAAQT,KAAR;AAAA,mBAAkBS,KAAK,IAAI,QAAI,CAACzH,IAAL,CAAUgH,KAAK,CAACtR,KAAhB,EAAuB+R,KAAlD;AAAA,WAAvB,EAAgF,IAAhF,CAAP;AACH;;;;;;AA3CL;;;uBAKawgC,gC,EAAgC,4C,EAAA,qC,EAAA,qBA8C7B,SAAA9D,eA9C6B,C,EA8Cd,wC;AAAA,K;;;YA9ClB8D,gC;AAAgC,kD;AAAA;AAAA;;;;;;;;;;;;;;;;;;AC7C7C;AACI;AACI;AAAe;AAAA;AAAA;AACX;AAUJ;AACJ;AACA;AACI;AACJ;AACJ;AACA;AACI;AACI;AACI;AACA;AAAA;AAMA;AACJ;AACA;AAkFJ;AACJ;AACA;AACI;AACI;AAA+B;AAAA,mBAAS,IAAAP,MAAA,EAAT;AAAiB,WAAjB;AAAmB;AAAc;AACpE;AACJ;;;;AArHuB;AAAA;AACF;AAAA;AAaH;AAAA;AAIR;AAAA;AAGO;AAAA;AAML;AAAA;AAAA;AAEE;AAAA;;;;;;;;;2BDcDO,gC,EAAgC;cAL5C,OAAA7D,SAK4C;eALlC;AACPljD,kBAAQ,EAAE,6BADH;AAEPmjD,qBAAW,EAAE,4CAFN;AAGPC,mBAAS,EAAE,CAAC,4CAAD;AAHJ,S;AAKkC,Q;;;;;;;;kBA8CpC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;;;gBA5CX,OAAAI;;;gBAcA,OAAAoD,S;iBAAU,S,EAAW;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7D1B;AAAA;AAAA;;AAOA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBgB;AAA6C;AAAI;;;;;;AAOzC;AACI;AACJ;;;;;AAFuC;AACnC;AAAA;;;;;;;;AAPZ;AACI;AAEI;AAAA;AAAA;AAAA;AAAA,WAAuB,aAAvB,EAAuB;AAAA;AAAA;AAAA,iBACR,QAAAsB,OAAA,mCAAkC,GAAlC,GAAwC,OAAH,YAAG,CAAH,EAArC,CADQ;AAC+C,SADtE;AAGA;AAGJ;AACJ;;;;;AAPQ;AAAA;AAGY;AAAA;;;;;;;;AAvBxB;AACI;AASI;AAAA;AAAA;AAAA;AAAA,WAAiC,cAAjC,EAAiC;AAAA;AAAA;AAAA;AAAA,SAAjC,EAAiC,gBAAjC,EAAiC;AAAA;AAAA;AAAA;AAAA,SAAjC;AAKH;AACD;AACA;AAWJ;;;;;AAxBQ;AAAA,wCAAiB,oBAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,cAAjB,EAAiB,iBAAjB,EAAiB,sBAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,IAAjB;AAYO;AAAA;AAC0B;AAAA;;;;;;;;;;;;;;AAoBzB;AACI;AAIJ;;;;AAHQ;AAAA;;;;;;;;;;;;;;;;AAPZ;AACI;AACI;AAAkB;AAAsB;AACxC;AAAkB;AAAsB;AAC5C;AACA;AAMA;AACI;AAIA;AAAkB;AAA2B;AACjD;AACA;AACI;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;AACJ;AACJ;;;;;;AA1B0B;AAAA;AACA;AAAA;AAEI;AAAA;AAQlB;AAAA;AAGc;AAAA;AAEjB;AAAA;AAEG;AAAA;AAKA;AAAA;;;;;;AA1BhB;AACI;AA6BJ;;;;;AA7BsB;AAAA;;;;;;AAF1B;AACI;AA+BJ;;;;;;;;AA/BkB;AAAA,qEAAiD,UAAjD,EAAiD,GAAjD;;;;;;;;;;;;;;;;;;;;;;AAwCd;AACI;AASI;AAMJ;AACA;AACI;AAAkB;AAAgB;AAClC;AAAkB;AAAsB;AAC5C;AACA;AACI;AAGA;AAAkB;AAA2B;AACjD;AACA;AACI;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC;AAGJ;AACJ;AACJ;;;;;;AA/BQ;AAAA;AACA;AAOI;AAAA;AAOc;AAAA;AACA;AAAA;AAId;AAAA;AAEc;AAAA;AAEjB;AAAA;AAGO;AAAA;;;;;;AAjCpB;AAGI;AAmCJ;;;;;AAnCsB;AAAA;;;;;;;;;;;;;;;AAN9B;AACI;AAAI;AAAe;AACnB;AACI;AAuCJ;AACA;AACI;AAA+B;AAAA;AAAA;AAAA;AAAA;AAAqC;AAAc;AACtF;AACA;AAAwE;AAAA;AAAA;AAAA,qCAAqB,KAArB;AAA0B,SAA1B;AACpE;AACJ;AACA;AACI;AAAwB;AAAA;AAAA;AAAA,qCAAqB,IAArB;AAAyB,SAAzB;AACpB;AACJ;AACJ;AACJ;;;;;;;;AAtDK;AAAqD;AAI9C;AAAA,uFAA0E,UAA1E,EAA0E,GAA1E;AA0CgB;AAAA,sCAAoB,aAApB,EAAoB,IAApB;AACV;AAAA;AAII;AAAA;;;;;;AAO1B;AACI;AACI;AACJ;AACA;AAAkB;AAA2B;AACjD;;;;;;AAGA;AACI;AACI;AACJ;AACA;AAAkB;AAAoD;AAC1E;;;;AAHkB;AAAA;;;;;;AAMlB;AACI;AACI;AACJ;AACA;AAAkB;AAAkB;AACxC;;;;AAHkB;AAAA;;;;QD9ETxD,yB;;;;;AAkET,yCACYj0B,IADZ,EAEYqa,MAFZ,EAGYpa,OAHZ,EAIY7W,SAJZ,EAKY+mC,OALZ,EAMqCtW,KANrC,EAMgE;AAAA;;AAAA;;AAE5D;AAPQ,iBAAA7Z,IAAA,GAAAA,IAAA;AACA,iBAAAqa,MAAA,GAAAA,MAAA;AACA,iBAAApa,OAAA,GAAAA,OAAA;AACA,iBAAA7W,SAAA,GAAAA,SAAA;AACA,iBAAA+mC,OAAA,GAAAA,OAAA;AACyB,iBAAAtW,KAAA,GAAAA,KAAA;AAvErC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAGjB;;AACO,iBAAA37B,MAAA,GAAkB,EAAlB;AAOP;;AACgB,iBAAA+iC,OAAA,GAAU,IAAI,OAAAtpC,OAAJ,EAAV;AAChB;;AACO,iBAAAupC,eAAA,GAA2B,EAA3B;AACP;;AACO,iBAAAC,WAAA,GAAgC,EAAhC;AAOP;;AACO,iBAAArc,KAAA,GAAoB,EAApB;AAmBA,iBAAAsc,SAAA,GAAY,IAAI,QAAA9oB,SAAJ,CAAc;AAC7BpjB,kBAAQ,EAAE,IAAI,QAAA0gB,WAAJ,CAAgB,EAAhB;AADmB,SAAd,CAAZ;AAIA,iBAAAnX,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CAAyC,EAAzC,CAAV;AAEA,iBAAAmtB,eAAA,GAAkB,IAAI,OAAAntB,eAAJ,CAAyC,EAAzC,CAAlB;AAKP;;AACO,iBAAAuzB,QAAA,GAAqB,EAArB;;AAuPA,iBAAA+1B,aAAA,GAAgB,YAAM;AACzB,cAAI,SAAKC,cAAL,CAAoB9iD,MAAxB,EAAgC;AAC5B,qBAAKyiD,OAAL,CAAax2C,IAAb,CAAkB,SAAK62C,cAAvB;AACH,WAFD,MAEO;AACH,qBAAKpjC,MAAL,GAAc,EAAd;AACH;AACJ,SANM;;AArOH,iBAAKqX,WAAL,GAAmB3iB,SAAS,CAAC8G,SAA7B;AACA,iBAAK7C,QAAL,GAAgBjE,SAAS,CAACiE,QAA1B;AAJ4D;AAK/D;AA9CD;;;;;mCAgDe;AAAA;;AACX,eAAK4S,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;;;AAC3D,gBAAIgnD,UAAU,GAAG,CAAjB,CAD2D,CAE3D;;AACA,oBAAI,CAACC,eAAL,GAAuB,QAAI,CAACP,OAAL,CAAa7zC,IAAb,CACnB,YAAA8d,YAAA,CAAa,GAAb,CADmB,EAEnB,YAAA+xB,oBAAA,EAFmB,EAGnB,YAAA9xB,SAAA,CAAU,UAAC8V,GAAD,EAAS;AACf,sBAAI,CAACnsB,OAAL,GAAe,IAAf;AACA,kBAAMwW,QAAQ,GAAa,EAA3B;AACA;;AACA,kBAAI,QAAI,CAACm2B,eAAT,EAA0B;AACtBn2B,wBAAQ,CAACnnB,IAAT,CAAc,QAAI,CAACs9C,eAAL,CAAqBlzC,EAAnC;AACH;;AAED,kBAAI0yB,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEtrB,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACpBsrB,mBAAG,GAAG,QAAI,CAACqgB,cAAX;AACH;;AAED,kBAAM/yC,EAAE,GAAGgzC,UAAX;AACA,qBAAO,QAAI,CAAC93B,OAAL,CAAanB,SAAb,CAAuB;AAC1BgD,wBAAQ,EAAE,CAAA2V,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEziC,MAAL,IAAcyiC,GAAd,GAAoB,QAAI,CAACoC,KAAL,CAAWnlB,MAAX,CAAkB,CAAlB,EAAqBiB,QAArB,CAA8B5Q,EAA9B,IAAoC+c,QAAQ,CAAC3lB,IAAT,CAAc,GAAd,CADxC;AAE1B1I,sBAAM,EAAE,QAAI,CAAComC,KAAL,CAAWpmC,MAFO;AAG1BI,wBAAQ,EAAE,QAAI,CAACgmC,KAAL,CAAWhmC;AAHK,eAAvB,EAIJkb,IAJI,CAIC,UAAO/d,IAAP;AAAA,uBAAgB,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAE;AAAE+T,8BAAE,EAAFA,EAAF;AAAM/T,gCAAI,EAAJA;AAAN,2BAAF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAC,EAAhB;AAAA,eAJD,CAAP;AAKH,aAlBD,CAHmB,EAsBnB,YAAA6f,UAAA,CAAW,UAAChH,CAAD;AAAA,qBAAO,OAAAkH,EAAA,CAAG;AAAEhM,kBAAE,EAAEgzC,UAAN;AAAkB/mD,oBAAI,EAAE,EAAxB;AAA4B8f,qBAAK,EAAEjH;AAAnC,eAAH,CAAP;AAAA,aAAX,CAtBmB,EAuBnB,YAAAlR,GAAA,CAAI,UAACu/C,IAAD,EAAyC;AACzC,sBAAI,CAAC5sC,OAAL,GAAe,KAAf;AACA,kBAAMilB,aAAa,GAAG2nB,IAAI,CAAClnD,IAAL,CAAU0I,MAAV,CAAiB,UAAC8b,KAAD,EAAkB;AACrD;AACA,oBAAI,QAAI,CAACpM,SAAL,CAAe8G,SAAnB,EAA8B;AAC1B,yBAAO,CAAC,QAAI,CAACioC,WAAL,IAAoB,QAAI,CAACA,WAAL,CAAiBpzC,EAArC,GAA0CyQ,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,WAAwB,QAAI,CAACgsC,WAAL,CAAiBpzC,EAAzC,EAA1C,GAA2F,IAA5F,KACH,CAAC,QAAI,CAAC2yC,eAAL,CAAqBphD,IAArB,CAA0B,UAAC+R,CAAD;AAAA,2BAAOA,CAAC,CAACtD,EAAF,KAASyQ,KAAK,CAACzQ,EAAtB;AAAA,mBAA1B,CADL;AAEH;;AAED,oBAAM8Q,KAAK,GAAGL,KAAK,CAACyrB,QAAN,CAAe;AACzBxtC,wBAAM,EAAE,QAAI,CAAComC,KAAL,CAAWpmC,MADM;AAEzBI,0BAAQ,EAAE,QAAI,CAACgmC,KAAL,CAAWhmC,QAFI;AAGzB8X,sBAAI,EAAE,QAAI,CAACA,IAAL,IAAa,QAAI,CAACkuB,KAAL,CAAWluB;AAHL,iBAAf,CAAd;AAKA,uBACIkK,KAAK,CAACK,IAAN,KAAe,IAAf,KACC,QAAI,CAACiiC,WAAL,IAAoB,QAAI,CAACA,WAAL,CAAiBpzC,EAArC,GACKyQ,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,WAAwB,QAAI,CAACgsC,WAAL,CAAiBpzC,EAAzC,EADL,GAEK,IAHN,KAIA,CAAC,QAAI,CAAC2yC,eAAL,CAAqBphD,IAArB,CAA0B,UAAC8hD,MAAD;AAAA,yBAAYA,MAAM,CAACrzC,EAAP,KAAcyQ,KAAK,CAACzQ,EAAhC;AAAA,iBAA1B,CALL;AAOH,eAnBqB,CAAtB;AAoBA,qBAAOmzC,IAAI,CAACnzC,EAAL,KAAYgzC,UAAZ,GAAyBxnB,aAAzB,GAAyC,QAAI,CAAC7b,MAArD;AACH,aAvBD,CAvBmB,CAAvB,CAH2D,CAmD3D;;AACA,oBAAI,CAAC7jB,YAAL,CACI,gBADJ,EAEI,QAAI,CAACmnD,eAAL,CAAqBjnD,SAArB,CAA+B,UAACC,IAAD,EAAU;AACrC,sBAAI,CAAC0jB,MAAL,GAAc1jB,IAAI,CAAC0I,MAAL,CAAY,UAAC8b,KAAD,EAAW;AACjC,oBAAI,CAACA,KAAK,CAACsJ,SAAX,EAAsB;AAClB,yBAAO,KAAP;AACH;;AAHgC,6DAId,QAAI,CAACgD,QAJS;AAAA;;AAAA;AAIjC,4EAAkC;AAAA,wBAAvB7kB,IAAuB;;AAC9B,wBAAIuY,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqBlP,IAArB,CAAJ,EAAgC;AAC5B,6BAAO,IAAP;AACH;AACJ;AARgC;AAAA;AAAA;AAAA;AAAA;;AASjC,uBAAO,CAAC,QAAI,CAAC6kB,QAAL,CAAc9sB,MAAtB;AACH,eAVa,CAAd;;AAWA,sBAAI,CAAC0f,MAAL,CAAY1Z,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAU,QAAI,CAACF,IAAL,CAAUC,CAAV,EAAaC,CAAb,CAAV;AAAA,eAAjB;;AACA,kBAAI,CAAC,QAAI,CAACwgB,eAAL,CAAqB1lB,KAArB,CAA2BhB,MAAhC,EAAwC;AACpC,wBAAI,CAACqjD,kBAAL;AACH;AACJ,aAhBD,CAFJ;;AAoBA,oBAAI,CAACJ,eAAL,GAAuB,eAAI,CAACpe,KAAL,CAAWnlB,MAAX,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE1f,MAAnB,IACjB,QAAI,CAACgrB,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACnF,CAAD;AAAA,qBAAOA,CAAC,CAAC4T,EAAF,KAAS,QAAI,CAAC80B,KAAL,CAAWnlB,MAAX,CAAkB,CAAlB,EAAqB4H,KAArB,CAA2Bob,WAA3C;AAAA,aAAzB,CADiB,GAEjB,QAAI,CAAC1X,IAAL,CAAUrK,QAFhB;AAGA,oBAAI,CAAC2lB,KAAL,GAAa,CAAC;AAAEv2B,gBAAE,EAAE,EAAN;AAAUlW,kBAAI,EAAE;AAAhB,aAAD,EAA4Ci0B,MAA5C,CACT,QAAI,CAAC9C,IAAL,CAAU8a,WAAV,IAAyB,EADhB,CAAb;AAGA,oBAAI,CAACqd,WAAL,GAAmB,QAAI,CAAC7c,KAAL,CAAW,CAAX,CAAnB;;AACA,oBAAI,CAACmc,OAAL,CAAax2C,IAAb,CAAkB,EAAlB;AACH,WAhFD;;AAkFA,eAAKpQ,YAAL,CAAkB,WAAlB,EAA+B,KAAKmvB,IAAL,CAAU3uB,MAAV,CAAiB,WAAjB,EAA8BN,SAA9B,CAAwC,UAAC0pC,QAAD,EAAc;AACjF,gBAAMlyB,IAAI,GAAG,QAAI,CAACyX,IAAL,CAAUrK,QAAV,CAAmBpN,IAAhC;AACA,gBAAM7Q,QAAQ,GAAG,QAAI,CAACsoB,IAAL,CAAUrK,QAAV,CAAmBje,QAApC;AACA,gBAAM4gD,eAAe,GAAG;AACpB9pD,iBAAG,EAAE;AAAEK,oBAAI,EAAE0Z,IAAR;AAAc7Q,wBAAQ,EAARA;AAAd,eADe;AAEpB1B,mBAAK,EAAE,CAAAykC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE/gC,MAAV,CAAiB,UAAC+9B,GAAD;AAAA,uBAASA,GAAG,CAAClvB,IAAJ,KAAaA,IAAtB;AAAA,eAAjB,MAAgD;AAFnC,aAAxB;AAIA,gBAAMgwC,cAAc,GAAGD,eAAe,CAACtiD,KAAhB,CAAsB2C,GAAtB,CACnB,UAAC8+B,GAAD;AAAA,qBAAS,cAAAzc,yBAAA,CAA0Bs9B,eAAe,CAAC9pD,GAAhB,CAAoBK,IAA9C,EAAoD4oC,GAApD,CAAT;AAAA,aADmB,CAAvB;AAGA,gBAAM7vB,SAAS,IACX,cAAA0T,wBAAA,CAAyBg9B,eAAe,CAAC9pD,GAAzC,CADW,4BAER+pD,cAFQ,EAAf;;AAIA,oBAAI,CAACtjC,OAAL,CAAahU,IAAb,CAAkB2G,SAAlB;AACH,WAf8B,CAA/B;AAiBH;AAED;;;;iCACgB4N,K,EAAc;AAC1B,eAAKkiC,eAAL,CAAqB/8C,IAArB,CAA0B6a,KAA1B;AACA,eAAKkiC,eAAL,GAAuB,OAAAl+C,MAAA,CAAO,KAAKk+C,eAAZ,EAA6B,IAA7B,CAAvB;AACH;AAED;;;;oCACmBliC,K,EAAc;AAC7B,eAAKkiC,eAAL,GAAuB,KAAKA,eAAL,CAAqBh+C,MAArB,CAA4B,UAAC+4C,OAAD;AAAA,mBAAaA,OAAO,CAAC1tC,EAAR,KAAeyQ,KAAK,CAACzQ,EAAlC;AAAA,WAA5B,CAAvB;AACH;AAED;;;;6BACY/T,I,EAAe;AAAA;;AACvB,cAAI,CAAC,KAAK6oC,KAAL,CAAWsa,aAAhB,EAA+B;AAC3B;AACA,iBAAK3zC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE,MAAV;AAAkBhH,sBAAQ,EAAEhe;AAA5B,aAAhB;AACA;AACH,WALsB,CAMvB;;;AACA,cAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ4lB,YAAZ,EAA0B;AACtB,iBAAKpW,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE,MAAV;AAAkBhH,sBAAQ,EAAEhe;AAA5B,aAAhB;AACA;AACH,WAVsB,CAWvB;;;AACA,eAAKwnD,mBAAL,GAA2B,KAAKrI,OAAL,CAAa9lC,IAAb,CAAkB,8BAAAmsC,wBAAlB,EAA4C;AACnElsC,sBAAU,EAAE,gBADuD;AAEnEmuC,qBAAS,EAAE,KAFwD;AAGnEC,yBAAa,EAAE;AAHoD,WAA5C,CAA3B;AAKA,eAAK7nD,YAAL,CACI,mBADJ,EAEI,KAAK2nD,mBAAL,CAAyBtG,iBAAzB,CAA2C1xC,KAA3C,CAAiDzP,SAAjD,CAA2D,UAACyP,KAAD,EAAW;AAClE,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,sBAAI,CAACxV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE,MAAV;AAAkBhH,wBAAQ,EAAEhe;AAA5B,eAAhB;AACH;;AACD,gBAAIwP,KAAK,CAACwV,MAAN,KAAiB,OAArB,EAA8B;AAC1B,sBAAI,CAACxV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE;AAAV,eAAhB;AACH;AACJ,WAPD,CAFJ;AAWH;;;iCAEgB;AACb,cAAMrd,GAAG,GAAG,EAAZ;AACA,cAAMsc,OAAO,GAA4B;AACrCxhB,kBAAM,EAAE,KAAKomC,KAAL,CAAWpmC,MADkB;AAErCI,oBAAQ,EAAE,KAAKgmC,KAAL,CAAWhmC,QAFgB;AAGrC8X,gBAAI,EAAE,KAAKkuB,KAAL,CAAWluB;AAHoB,WAAzC;AAKA,eAAK+rC,eAAL,CAAqBxmD,OAArB,CAA6B,UAACskB,KAAD;AAAA,mBAAY7c,GAAG,CAAC6c,KAAK,CAACzQ,EAAP,CAAH,GAAgByQ,KAAK,CAAC+T,SAAN,CAAgBtU,OAAhB,CAA5B;AAAA,WAA7B;AACA,eAAKP,MAAL,CAAYxjB,OAAZ,CAAoB,UAACskB,KAAD;AAAA,mBAAY7c,GAAG,CAAC6c,KAAK,CAACzQ,EAAP,CAAH,GAAgByQ,KAAK,CAAC+T,SAAN,CAAgBtU,OAAhB,CAA5B;AAAA,WAApB;AACA,eAAK0iC,WAAL,GAAmBh/C,GAAnB;AACH;;;6CAE2B;AAAA;;AACxB,cAAMggD,UAAU,GAAG,KAAK1jC,OAAL,CAAajf,KAAb,CAAmB0D,MAAnB,CAA0B,UAAAk/C,GAAG;AAAA,mBAAIA,GAAG,CAAC5iD,KAAJ,KAAc,QAAI,CAACgqB,IAAL,CAAUrK,QAAV,CAAmB5Q,EAArC;AAAA,WAA7B,CAAnB;AACA,eAAK2W,eAAL,CAAqBza,IAArB,CAA0B03C,UAA1B;AACH;AAED;;;;;;;;6BAKYE,O,EAAgBC,O,EAAgB;AACxC,cAAMrhB,GAAG,GAAG,KAAKzX,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASohB,OAAO,CAACjjC,KAAR,CAAczJ,QAAd,CAAuBsrB,GAAG,CAAC1yB,EAA3B,CAAT;AAAA,WAAzB,KAAqE;AAAElW,gBAAI,EAAE,EAAR;AAAY+qC,sBAAU,EAAE;AAAxB,WAAjF;;AACA,cAAMoI,KAAK,GAAG,KAAKhiB,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASqhB,OAAO,CAACljC,KAAR,CAAczJ,QAAd,CAAuBsrB,GAAG,CAAC1yB,EAA3B,CAAT;AAAA,WAAzB,CAAd;;AACA,cAAI0yB,GAAG,IAAIA,GAAG,KAAKuK,KAAnB,EAA0B;AACtB,mBAAOvK,GAAG,CAAC5oC,IAAJ,CAASsM,aAAT,CAAuB6mC,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEnzC,IAA9B,CAAP;AACH;;AACD,cAAM+qC,UAAU,GAAG,mBAAInC,GAAG,CAACmC,UAAR,EAAoBx4B,OAApB,EAAnB;;AANwC,uDAOlBw4B,UAPkB;AAAA;;AAAA;AAOxC,sEAAkC;AAAA,kBAAvBtrB,OAAuB;;AAC9B,kBAAIA,OAAO,KAAK,GAAhB,EAAqB;AACjB;AACH;;AACD,kBAAM2zB,UAAU,GAAG4W,OAAO,CAACjjC,KAAR,CAAc1f,OAAd,CAAsBoY,OAAtB,KAAkC,CAArD;AACA,kBAAM4zB,UAAU,GAAG4W,OAAO,CAACljC,KAAR,CAAc1f,OAAd,CAAsBoY,OAAtB,KAAkC,CAArD;;AACA,kBAAI2zB,UAAU,IAAI,CAACC,UAAnB,EAA+B;AAC3B,uBAAO,CAAP;AACH,eAFD,MAEO,IAAIA,UAAU,IAAI,CAACD,UAAnB,EAA+B;AAClC,uBAAO,CAAC,CAAR;AACH;AACJ;AAlBuC;AAAA;AAAA;AAAA;AAAA;;AAmBxC,iBAAO4W,OAAO,CAAChqD,IAAR,CAAasM,aAAb,CAA2B29C,OAAO,CAACjqD,IAAnC,CAAP;AACH;;;+BAEa8sB,M,EAA2B;AAAA;;AACrC;AACA,eAAKD,eAAL,CAAqB9X,IAArB,CACI,YAAAsH,IAAA,CAAK,CAAL,CADJ,EAEI,YAAA6tC,cAAA,CAAe,KAAK9jC,OAApB,CAFJ,EAGI,YAAAtc,GAAA,CAAI,iBAAgC;AAAA;AAAA,gBAA9B+iB,eAA8B;AAAA,gBAAbzG,OAAa;;AAChC,mBAAO,cAAAwG,qBAAA,CAAsBxG,OAAtB,EAA+ByG,eAA/B,EAAgDC,MAAhD,CAAP;AACH,WAFD,CAHJ,EAME5qB,SANF,CAMY,UAAAkQ,IAAI,EAAI;AAChB,gBAAM+3C,QAAQ,GAAG,QAAI,CAACpB,SAAL,CAAe5hD,KAAhC;;AACA,oBAAI,CAAC4hD,SAAL,CAAelkD,QAAf,CAAwB;AACpBgY,sBAAQ,EAAEstC,QAAQ,CAACttC;AADC,aAAxB;;AAGA,oBAAI,CAACgQ,eAAL,CAAqBza,IAArB,CAA0BA,IAA1B;;AACA,oBAAI,CAAC62C,cAAL,GAAsB72C,IAAI,CAACtI,GAAL,CAAS,UAAC8+B,GAAD;AAAA,qBAASA,GAAG,CAACzhC,KAAb;AAAA,aAAT,CAAtB;AAEH,WAdD;AAeH;AAED;;;;;;;oCAImBwf,K,EAAc;AAC7B,cAAMxkB,IAAI,GAAG,KAAK0jB,MAAlB;;AACA,cAAI1jB,IAAI,CAACsF,IAAL,CAAU,UAACkF,IAAD;AAAA,mBAAUA,IAAI,CAACuJ,EAAL,KAAYyQ,KAAK,CAACzQ,EAA5B;AAAA,WAAV,CAAJ,EAA+C;AAC3C,iBAAK2P,MAAL,GAAc1jB,IAAI,CAAC0I,MAAL,CAAY,UAAC8B,IAAD;AAAA,qBAAUA,IAAI,CAACuJ,EAAL,KAAYyQ,KAAK,CAACzQ,EAA5B;AAAA,aAAZ,CAAd;AACH,WAFD,MAEO;AACH,iBAAK2P,MAAL,GAAc,CAACc,KAAD,CAAd;AACH;AACJ;;;oCAEkB;AACf,eAAKd,MAAL,GAAc,EAAd;AACA,eAAKojC,cAAL,GAAsB,EAAtB;AACH;;;4BA9QmB;AAChB,iBAAO,KAAK93B,IAAL,CAAUpY,SAAjB;AACH;AAED;;;;4BACmB;AACf,iBAAO,KAAP;AACH;;;4BAEkB;AACf,iBAAO,CAAC,CAAC,KAAKiyB,KAAL,CAAW/X,QAApB;AACH;;;4BAiB4B;AACzB,iBAAO,KAAK9B,IAAL,CAAUrK,QAAV,GAAqB,CAAC,KAAKqK,IAAL,CAAUrK,QAAV,CAAmB5Q,EAApB,CAArB,GAA+C,EAAtD;AACH;;;;MA9D0C,OAAAxV,a;;AAL/C;;;uBAKa0kD,yB,EAAyB,4C,EAAA,qC,EAAA,sC,EAAA,wC,EAAA,kC,EAAA,qBAwEtB,SAAAtB,eAxEsB,C;AAwEP,K;;;YAxElBsB,yB;AAAyB,2C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,+yC;AAAA;AAAA;ACxEtC;AACI;AAAqB;AAA6C;AAClE;AACI;AACJ;AACJ;AACA;AACI;AACI;AACI;AA6BA;AACI;AAiCJ;AACJ;AACA;AAuDJ;AACJ;AACA;AAQA;AAQA;;;;;;AAlJyB;AAAA;AAEP;AAAA;AAKL;AAAA;AAAqC;AACxB;AAAA;AA8BI;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAmCmB;AAAA;;;;;;;;;2BDFpCA,yB,EAAyB;cALrC,OAAArB,SAKqC;eAL3B;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,qCAFN;AAGPC,mBAAS,EAAE,CAAC,qCAAD;AAHJ,S;AAK2B,Q;;;;;;;;;;;;;;kBAwE7B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAtEX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE1EL;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCQ;AACI;AAAA;AAOgB;AAEhB;AACI;AAAA;AAAA;AAOA;AAAA;AAEA;AACJ;AACJ;;;;;AAnBQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBR;AACI;AAAA;AAOe;AAEf;AACI;AAAA;AAAA;AAOA;AAAA;AAC0B;AAE9B;AACJ;;;;;AAnBQ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBR;AACI;AAAA;AAMW;AAEX;AACI;AAAA;AAAA;AAOA;AAAA;AAC8B;AAElC;AACJ;;;;;AAlBQ;AAAA;;;;;;AAnDhB;AACI;AACI;AAuBA;AAuBA;AAsBJ;AACJ;;;;;AAtEU;AAAA;AACiB;AAAA;AAuBA;AAAA;AAuBA;AAAA;;;;QDxCd2D,iB;;;;AALb;;;uBAKaA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,se;AAAA;AAAA;ACR9B;;;;AAAuB;;;;;;;;;2BDQVA,iB,EAAiB;cAL7B,OAAA9D,SAK6B;eALnB;AACTljD,kBAAQ,EAAE,WADD;AAETmjD,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;gBAEzB,OAAA1gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEI;AACI;AACJ;;;;;AADc;AAAA;;;;;;AAEd;AACI;AACJ;;;;AADiB;AAAA;;;;QDER6mD,mB;AAQT,qCAAc;AAAA;;AAHd;AACgB,aAAAprD,KAAA,GAAkC,EAAlC;AAEA;;;;mCAER,CAAW;;;;;;AAfvB;;;uBAKaorD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,kC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,6N;AAAA;AAAA;ACRhC;AACI;AACA;AAGA;AAGJ;;;;AARyB;AACX;AAAA;AAC2B;AAAA;AAGV;AAAA;;;;;;;;;2BDGlBA,mB,EAAmB;cAL/B,OAAArG,SAK+B;eALrB;AACPljD,kBAAQ,EAAE,aADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKqB,Q;;;;gBAE3B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEdL;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVI;;AAIC;;;;;AADG;;;;;;AAMI;AACI;;AACJ;;;;;AADI;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEJ;AAAA;AAQA;;;;;AALI;AAKJ;AAAA,wDAAM,iCAAN;AAAA;;;;;;;;;;;;;;;;;;AACA;AAKI;AACA;AAAA;AAEA;AACJ;;;;;AANI;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;AAKJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ;AAOA;;;;;;AAGR;AACI;;AACJ;;;;;AADI;AAAA;;;;;;;;AAEJ;AAKI;AAAA;AAAA;AAAA;AAAA;AACH;;;;;AAJG,4GAAuE,KAAvE,EAAuE,4BAAvE,EAAuE,SAAvE,EAAuE,kBAAvE;;;;;;;;;;;;;;;AAKJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AAMJ;;;;;AALQ;AAAA;;;;;;AAhEZ;AAOI;AAKA;AACI;AAAkB;AAAe;AACjC;AAAyB;AAA4D;AACrF;AACI;AAGA;AASA;AAUA;AAQJ;AACJ;AACA;AAGA;AAOA;AAYJ;;;;;AAnEI,kDAAyB,SAAzB,EAAyB,cAAzB;AAEA;AAII;AAAA;AAIkB;AAAA;AACO;AAAA;AAEiB;AAAA;AAKlC;AAAA;AASA;AAAA;AAUA;AAAA;AAQyB;AAAA;AAIjC;AAAA;AAQA;AAAA;;;;;;AAYJ;;;;;;AAEI,iDAAmB,SAAnB,EAAmB,IAAnB,EAAmB,QAAnB,EAAmB,aAAnB,EAAmB,MAAnB,EAAmB,YAAnB,EAAmB,UAAnB,EAAmB,6CAAnB,EAAmB,OAAnB,EAAmB,YAAnB;;;;ADvDR,aAAS8mD,wBAAT,CAAkC/O,QAAlC,EAA8D;AAC1D,aACIA,QAAQ,CAACrX,WAAT,GAAuBqX,QAAQ,CAACr5C,KAAT,CAAekE,MAAtC,IACCm1C,QAAQ,CAACrX,WAAT,KAAyBqX,QAAQ,CAACr5C,KAAT,CAAekE,MAAxC,IACGm1C,QAAQ,CAACr5C,KAAT,CAAewF,IAAf,CAAoB,UAACkF,IAAD;AAAA,eAAeA,IAAI,CAAC1K,KAAL,IAAc0K,IAAI,CAACs3B,WAAL,GAAmBt3B,IAAI,CAAC1K,KAAL,CAAWkE,MAA3D;AAAA,OAApB,CAHR;AAKH;;AAED,aAASmkD,aAAT,CAAuBhP,QAAvB,EAAmD;AAC/C,UAAMr5C,KAAK,GAAGq5C,QAAQ,CAACr5C,KAAT,IAAkB,EAAhC;AACA,UAAIE,IAAI,GAAGF,KAAK,CAAC4I,MAAN,CAAa,UAAC8B,IAAD;AAAA,eAAUA,IAAI,CAAC24B,MAAL,GAAc,CAAxB;AAAA,OAAb,EAAwCx7B,GAAxC,CAA4C,UAAC6C,IAAD;AAAA,eAAUA,IAAI,CAACuJ,EAAf;AAAA,OAA5C,CAAX;;AAF+C,mDAG5BjU,KAH4B;AAAA;;AAAA;AAG/C,kEAA0B;AAAA,cAAf0K,IAAe;;AACtB,cAAKA,IAAY,CAAC1K,KAAb,IAAuB0K,IAAY,CAAC1K,KAAb,CAAmBkE,MAA/C,EAAuD;AACnDhE,gBAAI,GAAGA,IAAI,CAAC8xB,MAAL,CAAYq2B,aAAa,CAAC39C,IAAD,CAAzB,CAAP;AACH;AACJ;AAP8C;AAAA;AAAA;AAAA;AAAA;;AAQ/C,aAAOxK,IAAP;AACH;;QAQYooD,yB;;;;;AAsCT,yCAAoB7qC,QAApB,EAA0D4hC,OAA1D,EACmB3kC,QADnB,EAC8C;AAAA;;AAAA;;AAC1C;AAFgB,iBAAA+C,QAAA,GAAAA,QAAA;AAAsC,iBAAA4hC,OAAA,GAAAA,OAAA;AACvC,iBAAA3kC,QAAA,GAAAA,QAAA;AAxBZ,iBAAA6tC,aAAA,GAAgB,IAAhB,CAwBuC,CAE1C;;AACA,iBAAKA,aAAL,GAAqB,SAAK79C,IAA1B;AAH0C;AAI7C;AA1BD;;;;;oCA4BmBhL,O,EAAsB;AAAA;;AACrC;AACA,cAAIA,OAAO,CAACqL,KAAR,IAAiB,KAAKA,KAA1B,EAAiC;AAC7B,gBAAM7K,IAAI,GAAG,KAAK6K,KAAL,CAAW7F,KAAxB,CAD6B,CAE7B;;AACA,gBAAIwF,IAAI,GAAGxK,IAAI,CAACsF,IAAL,CAAU,UAACgjD,MAAD;AAAA,qBAAYA,MAAM,CAACv0C,EAAP,KAAc,QAAI,CAACvJ,IAAL,CAAUuJ,EAApC;AAAA,aAAV,CAAX;;AACA,gBAAIvJ,IAAJ,EAAU;AACN;AACA,mBAAKA,IAAL,CAAU+9C,SAAV,CAAoB/9C,IAAI,GAAGA,IAAI,CAAC24B,MAAR,GAAiB,CAAzC;AACH,aAHD,MAGO;AACH;AADG,2DAEanjC,IAFb;AAAA;;AAAA;AAEH,0EAAsB;AAAA,sBAAbwoD,GAAa;AAClBh+C,sBAAI,GAAGg+C,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAE1oD,KAAL,CAAWwF,IAAX,CAAgB,UAACmjD,OAAD;AAAA,2BAAaA,OAAO,CAAC10C,EAAR,KAAe,QAAI,CAACvJ,IAAL,CAAUuJ,EAAtC;AAAA,mBAAhB,CAAP;;AACA,sBAAIvJ,IAAJ,EAAU;AACN,yBAAKA,IAAL,CAAU+9C,SAAV,CAAoB/9C,IAAI,GAAGA,IAAI,CAAC24B,MAAR,GAAiB,CAAzC;AACA;AACH;AACJ;AARE;AAAA;AAAA;AAAA;AAAA;;AAQF;AACJ,aAhB4B,CAkB7B;;;AACA,gBAAI,CAAC,KAAKklB,aAAN,IAAuB,KAAK79C,IAAL,CAAU24B,MAArC,EAA6C;AACzC,mBAAKklB,aAAL,GAAqB,KAAK79C,IAA1B;AACH;;AAED,iBAAK3K,YAAL,CACI,cADJ,EAEI,KAAKgL,KAAL,CAAWwxB,YAAX,CAAwBt8B,SAAxB,CAAkC,UAACC,IAAD,EAAU;AACxC,kBAAMwK,IAAI,GAAGxK,IAAI,CAACsF,IAAL,CAAU,UAACmjD,OAAD;AAAA,uBAAaA,OAAO,CAAC10C,EAAR,KAAe,QAAI,CAACvJ,IAAL,CAAUuJ,EAAtC;AAAA,eAAV,CAAb;;AACA,sBAAI,CAACvJ,IAAL,CAAU+9C,SAAV,CAAoB/9C,IAAI,GAAGA,IAAI,CAAC24B,MAAR,GAAiB,CAAzC;;AACA,sBAAI,CAACulB,sBAAL;AACH,aAJD,CAFJ;AAQH;AACJ;AAED;;;;;;;qCAIoB1jD,K,EAAe;AAAA;;AAC/B;AACA,cAAI,KAAK6F,KAAT,EAAgB;AACZ,gBAAM7K,IAAI,GAAmB,KAAK6K,KAAL,CAAW7F,KAAxC;AACA,gBAAMwF,IAAI,GAAGxK,IAAI,CAACsF,IAAL,CAAU,UAACmjD,OAAD;AAAA,qBAAaA,OAAO,CAAC10C,EAAR,KAAe,QAAI,CAACvJ,IAAL,CAAUuJ,EAAtC;AAAA,aAAV,CAAb;;AACA,gBAAIvJ,IAAJ,EAAU;AACN,mBAAKA,IAAL,CAAU+9C,SAAV,CAAoBvjD,KAApB;AACAwF,kBAAI,CAAC+9C,SAAL,CAAevjD,KAAf,EAFM,CAGN;;AACA,kBAAMy9B,KAAK,GAAG,KAAKj4B,IAAL,CAAUi4B,KAAxB;AACAj4B,kBAAI,CAACm+C,QAAL,CAAclmB,KAAd;AACH,aAND,MAMO;AACH,kBAAMU,MAAM,GAAG,KAAK34B,IAAL,CAAU24B,MAAzB;AACA,mBAAK34B,IAAL,CAAU+9C,SAAV,CAAoBvjD,KAApB;;AACA,kBACI,KAAKwF,IAAL,eACA24B,MAAM,GAAGn+B,KADT,IAEA,KAAKwF,IAAL,CAAU1K,KAFV,IAGA,KAAK0K,IAAL,CAAU1K,KAAV,CAAgBkE,MAHhB,IAIAkkD,wBAAwB,CAAC,KAAK19C,IAAN,CAL5B,EAME;AACE,qBAAKo+C,oBAAL,GAA4B7qC,IAA5B,CACI,UAAC8qC,cAAD,EAAoB;AAChB7oD,sBAAI,CAAC2J,IAAL,CAAU,IAAI,cAAAi4B,gBAAJ,CAAqBinB,cAArB,CAAV;;AACA,0BAAI,CAACh+C,KAAL,CAAWnI,QAAX,CAAoB1C,IAAI,CAAC0I,MAAL,CAAY,UAAC+/C,OAAD;AAAA,2BAAaA,OAAO,CAACtlB,MAArB;AAAA,mBAAZ,CAApB;AACH,iBAJL,EAKI,YAAM;AACF,0BAAI,CAAC34B,IAAL,CAAU+9C,SAAV,CAAoB,GAApB;;AACA,0BAAI,CAAC9nD,OAAL,CAAa,QAAb,EAAuB;AAAA,2BAAM,QAAI,CAAC+J,IAAL,CAAU+9C,SAAV,CAAoB,CAApB,CAAN;AAAA,mBAAvB,EAAqD,CAArD;;AACA,0BAAI,CAAChrC,QAAL,CAAcu2B,UAAd,CACI,uDADJ;AAGH,iBAXL;AAaH,eApBD,MAoBO;AACH9zC,oBAAI,CAAC2J,IAAL,CAAU,IAAI,cAAAq4B,YAAJ,CAAiB,KAAKx3B,IAAtB,CAAV;AACH;AACJ;;AACD,iBAAKK,KAAL,CAAWnI,QAAX,CAAoB1C,IAAI,CAAC0I,MAAL,CAAY,UAAC+/C,OAAD;AAAA,qBAAaA,OAAO,CAACtlB,MAArB;AAAA,aAAZ,CAApB;AACH;AACJ;;;iDAE+B;AAAA;;AAC5B,cAAM2lB,SAAS,GAAG,KAAKj+C,KAAL,CAAW7F,KAAX,CAAiBM,IAAjB,CAAsB,UAACkF,IAAD;AAAA,mBAAUA,IAAI,CAACuJ,EAAL,KAAY,QAAI,CAACvJ,IAAL,CAAUuJ,EAAhC;AAAA,WAAtB,CAAlB;;AACA,cAAI+0C,SAAJ,EAAe;AACX,gBAAMC,YAAY,GAAGZ,aAAa,CAACW,SAAD,CAAlC;AACA,iBAAKroD,OAAL,CACI,gBADJ,EAEI,YAAM;AACF,sBAAI,CAAC+J,IAAL,CAAU1K,KAAV,CAAgBI,OAAhB,CAAwB,UAACsK,IAAD,EAAU;AAC9BA,oBAAI,CAAC+9C,SAAL,CAAeQ,YAAY,CAAC5tC,QAAb,CAAsB3Q,IAAI,CAACuJ,EAA3B,IAAiC,CAAjC,GAAqC,CAApD;;AACA,oBAAKvJ,IAAY,CAAC1K,KAAlB,EAAyB;AACpB0K,sBAAY,CAAC1K,KAAb,CAAmBI,OAAnB,CAA2B,UAACsK,IAAD,EAAU;AAClCA,wBAAI,CAAC+9C,SAAL,CAAeQ,YAAY,CAAC5tC,QAAb,CAAsB3Q,IAAI,CAACuJ,EAA3B,IAAiC,CAAjC,GAAqC,CAApD;AACH,mBAFA;AAGJ;AACJ,eAPD;AAQH,aAXL,EAYI,CAZJ;AAcH;AACJ;AAED;;;;+CAC2B;AAAA;;AACvB,cAAIi1C,WAAW,GAAmB,EAAlC;AACA,eAAKJ,oBAAL,GAA4B7qC,IAA5B,CACI,UAAC8qC,cAAD,EAAoB;AAChB;AACA,oBAAI,CAACh+C,KAAL,CAAW7F,KAAX,CAAiB9E,OAAjB,CAAyB,UAACi5C,QAAD,EAAgC;AACrD,kBAAIA,QAAQ,CAACplC,EAAT,KAAgB80C,cAAc,CAAC90C,EAAnC,EAAuC;AACnCi1C,2BAAW,CAACr/C,IAAZ,CAAiB,IAAI,cAAAi4B,gBAAJ,CAAqBinB,cAArB,CAAjB;AACH,eAFD,MAEO;AACHG,2BAAW,CAACr/C,IAAZ,CAAiBwvC,QAAjB;AACH;AACJ,aAND;;AAOA,oBAAI,CAACtuC,KAAL,CAAWnI,QAAX,CAAoBsmD,WAAW,CAACtgD,MAAZ,CAAmB,UAAC+/C,OAAD;AAAA,qBAAaA,OAAO,CAACtlB,MAArB;AAAA,aAAnB,CAApB;AACH,WAXL,EAYI,YAAM;AACF,oBAAI,CAAC34B,IAAL,CAAU+9C,SAAV,CAAoB,GAApB;;AACA,oBAAI,CAAC9nD,OAAL,CAAa,QAAb,EAAuB;AAAA,qBAAM,QAAI,CAAC+J,IAAL,CAAU+9C,SAAV,CAAoB,CAApB,CAAN;AAAA,aAAvB,EAAqD,CAArD;;AACA,oBAAI,CAAChrC,QAAL,CAAcu2B,UAAd,CACI,uDADJ;AAGH,WAlBL;AAoBH;AAED;;;;;;+CAG4B;AAAA;;AACxB,iBAAO,IAAIp2B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAMgjC,GAAG,GAAG,QAAI,CAACzB,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA4vC,4BAAlB,EAAgD;AACxDnI,sBAAQ,EAAE,MAD8C;AAExD75B,kBAAI,EAAE;AACFzc,oBAAI,EAAE,IAAI,cAAAo3B,gBAAJ,CAAqB,QAAI,CAACp3B,IAA1B;AADJ,eAFkD;AAKxDi9C,uBAAS,EAAE,KAL6C;AAMxDC,2BAAa,EAAE;AANyC,aAAhD,CAAZ;;AAQA,gBAAIwB,IAAI,GAAG,KAAX;AACAtI,eAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAW;AAC7C;AACA,kBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzBkkC,oBAAI,GAAG,IAAP;AACAvrC,uBAAO,CAACijC,GAAG,CAACM,iBAAJ,CAAsB12C,IAAvB,CAAP;AACA,wBAAI,CAAC69C,aAAL,GAAqB,QAAI,CAAC79C,IAA1B;AACAo2C,mBAAG,CAACH,KAAJ;AACH;AACJ,aARD;AASAG,eAAG,CAACU,WAAJ,GAAkBvhD,SAAlB,CAA4B,YAAM;AAC9B;AACA,kBAAI,CAACmpD,IAAL,EAAW;AACP,oBAAI,QAAI,CAACb,aAAT,EAAwB;AACpB1qC,yBAAO,CAAC,QAAI,CAAC0qC,aAAN,CAAP;AACH,iBAFD,MAEO;AACHzqC,wBAAM;AACT;AACJ;AACJ,aATD;AAUH,WA7BM,CAAP;AA8BH;;;4BA7LkB;AACf,iBAAO,KAAKpT,IAAL,CAAU1K,KAAV,GACD,KAAK0K,IAAL,CAAU1K,KAAV,CAAgB2F,MAAhB,CAAuB,UAACzF,IAAD,EAAOwK,IAAP,EAAgB;AACrC;AACA,gBAAIxK,IAAJ,EAAU;AACNA,kBAAI,IAAI,MAAR;AACH;;AACD,mBAAQA,IAAI,cAAOwK,IAAI,CAAC3M,IAAZ,SACP2M,IAAY,CAAC1K,KAAb,GACM0K,IAAY,CAAC1K,KAAb,CAAmB2F,MAAnB,CACH,UAAC0jD,MAAD,EAASV,OAAT;AAAA,qBACKU,MAAM,iBAAUV,OAAO,CAACtlB,MAAR,GAAiB,GAAjB,GAAuB,GAAjC,cAAwCslB,OAAO,CAAC5qD,IAAhD,MADX;AAAA,aADG,EAGH,EAHG,CADN,GAMK,EAPE,cAQR2M,IAAI,CAAC24B,MAAL,GAAc,GAAd,GAAoB,EARZ,CAAZ;AASH,WAdC,EAcC,EAdD,CADC,GAgBD,EAhBN;AAiBH;;;;MApC0C,OAAA5kC,a;;AAN/C;;;uBAMa6pD,yB,EAAyB,2C,EAAA,kC,EAAA,wC;AAAA,K;;;YAAzBA,yB;AAAyB,2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,y8B;AAAA;AAAA;AC5CtC;AAuEA;AACI;AASJ;;;;AA/EI;AAqEkB;AAAA;AAEd;AAAA;;;4ID7BKA,yB;AAAyB,2C;AAAA,w9U;AAAA;AAAA,mBAFtB,CAAC,aAAAxrD,8BAAD;AAEsB;;;;;2BAAzBwrD,yB,EAAyB;cANrC,OAAAxG,SAMqC;eAN3B;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPsH,oBAAU,EAAE,CAAC,aAAAxsD,8BAAD;AAJL,S;AAM2B,Q;;;;;;;;;;gBAEjC,OAAAwE;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AExDL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEQ;;;;;;;;AAqBQ;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;AAJI;AAGA;AAAA;;;;;;;;AAEJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAwC,IAAxC;AAA4C,SAA5C;AAEA;AACJ;;;;;AAJI;AAGA;AAAA;;;;;;AAnBR;AAOI;AAOA;AAOJ;;;;;AAbQ;AAAA;AAOA;AAAA;;;;;;AAOR;AACI;AACJ;;;;;AADI;AAAA;;;;;;AAEJ;;;;;;;;;;;;AA1BA;AACA;AAsBA;AAGA;AAGJ;;;;;;;;;;AA7BoE;AAE5D;AAAA;AAqBU;AAAA;AAIV;AAAA,+CAA8D,yBAA9D,EAA8D,qCAA9D;;;;;;AA7BZ;AACI;AACI;AA8BR;AACA;;;;;;AAhCqB;AAAA;AACK;AAAA;;;;;;AAF1B;;;;;AAAc;;;;;;;;;;;ADElB,aAAgBioD,qBAAhB,CAAsClQ,QAAtC,EAAgE;AAC5D,UAAMr5C,KAAK,GAAGq5C,QAAQ,CAACr5C,KAAT,IAAkB,EAAhC;AACA,aAAOq5C,QAAQ,CAACrX,WAAT,IAAwBhiC,KAAK,CAACkE,MAA9B,GACDlE,KAAK,CAAC2F,MAAN,CAAa,UAACwf,KAAD,EAAQza,IAAR;AAAA,eAAiBya,KAAK,IAAIokC,qBAAqB,CAAC7+C,IAAD,CAA/C;AAAA,OAAb,EAA2E,IAA3E,CADC,GAED1K,KAAK,CAAC2F,MAAN,CAAa,UAAC09B,MAAD,EAAS34B,IAAT;AAAA,eAAkB24B,MAAM,IAAI34B,IAAI,CAAC24B,MAAL,GAAc,CAAd,GAAkB,CAAtB,CAAxB;AAAA,OAAb,EAA+D,CAA/D,MACFgW,QAAQ,CAACrX,WAHb;AAIH;;AAND;;AAQA,aAAgBwnB,cAAhB,CAA+BnQ,QAA/B,EAAyD;AACrD,UAAIxxC,GAAG,GAAG,EAAV;;AACA,UAAIwxC,QAAQ,CAACr5C,KAAb,EAAoB;AAChB,YAAM0K,IAAI,GAAG2uC,QAAQ,CAACr5C,KAAT,CAAewF,IAAf,CAAoB,UAAAkF,IAAI;AAAA,iBAAIA,IAAI,CAAC24B,MAAL,GAAc,CAAlB;AAAA,SAAxB,CAAb;;AACA,YAAI34B,IAAJ,EAAU;AACN7C,aAAG,CAACwxC,QAAQ,CAACplC,EAAV,CAAH,GAAmBvJ,IAAI,CAACuJ,EAAxB;AACH;;AACDolC,gBAAQ,CAACr5C,KAAT,CAAeI,OAAf,CAAuB,UAAAsK,IAAI;AAAA,iBAAI7C,GAAG,GAAG,MAAH,OAAG,CAAH,kBAAQA,GAAR,CAAG,EAAa2hD,cAAc,CAAC9+C,IAAD,CAA3B,CAAV;AAAA,SAA3B;AACH;;AACD,aAAO7C,GAAP;AACH;;AAVD;;QAiBashD,4B;AAkBT,4CAA6CpgB,KAA7C,EAA6E;AAAA;;AAAhC,aAAAA,KAAA,GAAAA,KAAA;AAjB7C;;AACiB,aAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAiBhB;AAfD;;;;;;AAiBA;;;qCAGoBkK,S,EAA6B5+B,M,EAAsB9tB,K,EAAgB;AACnF,cAAIA,KAAJ,EAAW;AACP,gBAAM2sD,MAAM,GAAGD,SAAS,CAACznB,WAAzB;AACA,gBAAMqJ,MAAM,GAAGoe,SAAS,CAACzpD,KAAV,CAAgB4I,MAAhB,CAAuB,UAAA+/C,OAAO;AAAA,qBAAIA,OAAO,CAACtlB,MAAR,GAAiB,CAArB;AAAA,aAA9B,EAAsDn/B,MAArE;;AACA,gBAAImnC,MAAM,IAAIqe,MAAd,EAAsB;AAClB,kBAAMh/C,IAAI,GAAG++C,SAAS,CAACzpD,KAAV,CAAgBwF,IAAhB,CAAqB,UAAAmjD,OAAO;AAAA,uBAAIA,OAAO,CAACtlB,MAAR,GAAiB,CAArB;AAAA,eAA5B,CAAb;AACA34B,kBAAI,CAAC+9C,SAAL,CAAe,CAAf;AACH;;AACD59B,kBAAM,CAAC49B,SAAP,CAAiB,CAAjB;AACH,WARD,MAQO;AACH59B,kBAAM,CAAC49B,SAAP,CAAiB,CAAjB;AACH;AACJ;;;4BA/Bc;AACX,iBAAO,KAAK1f,KAAL,CAAWr+B,IAAlB;AACH;AAED;;;;4BAC2B;AACvB,iBAAO6+C,qBAAqB,CAAC,KAAK7+C,IAAN,CAA5B;AACH;;;4BAEsB;AACnB,iBAAO8+C,cAAc,CAAC,KAAK9+C,IAAN,CAArB;AACH;;;;;;AArBL;;;uBAKay+C,4B,EAA4B,qBAkBjB,SAAAtH,eAlBiB,C;AAkBF,K;;;YAlB1BsH,4B;AAA4B,8C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,wa;AAAA;AAAA;AC9CzC;AACI;AAAA;AAA0D;AAC1D;AACI;AACJ;AACJ;AACA;AACI;AACI;AACJ;AACJ;AACA;AACI;AACI;AAAkD;AAAA,mBAAS,IAAAz5C,KAAA;AAAA,sBAAqB;AAArB,cAAT;AAAuC,WAAvC;AAAlD;AAEA;AACJ;AACJ;AACA;;;;;;AAfkB;AAAA;AAKI;AAAA,iDAA4D,yBAA5D,EAA4D,oCAA5D;AAKK;AAAA;;;;;;;;;2BDiCdy5C,4B,EAA4B;cALxC,OAAArH,SAKwC;eAL9B;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,wCAFN;AAGPC,mBAAS,EAAE,CAAC,wCAAD;AAHJ,S;AAK8B,Q;;;;kBAkBxB,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAhBnB,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AEhDL;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QAOa0H,oB;;;;;AALb;AAAA;;AAAA;;;AAYI;;AAC2B,iBAAAxwC,SAAA,GAAY,IAAI,OAAAomC,YAAJ,EAAZ;AAC3B;;AACO,iBAAAqK,YAAA,GAAe,KAAf;AAfX;AAwBC;AAPG;;;;;;;wCAGuB;AACnB,eAAKA,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,eAAKzwC,SAAL,CAAesnC,IAAf;AACH;;;;MAlBqC,OAAAhiD,a;;AAL1C;;;oDAKakrD,oB;AAAoB,K;;;YAApBA,oB;AAAoB,sC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,+J;AAAA;AAAA;ACTjC;AAMI;AAAA,mBAAiB,IAAAE,aAAA,EAAjB;AAAgC,WAAhC,EAAiC,OAAjC,EAAiC;AAAA,mBACxB,IAAAA,aAAA,EADwB;AACT,WADxB;AAGA;AAAqB;AAAiB;AACtC;AACI;AAOJ;AACJ;;;;AAhBI;AAMqB;AAAA;AAGb;AAAA;;;;;;qEDHCF,oB;;;;2BAAAA,oB,EAAoB;cALhC,OAAA7H,SAKgC;eALtB;AACTljD,kBAAQ,EAAE,iBADD;AAETmjD,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;gBAE5B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD,M;iBAAO,U;;;;;;;;;;;;;;;;;;;;;;;;AEjBZ;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACWI;AAII;AAAA;;AAAA;;AAAA;AAAA;AAAA,WAA+C,MAA/C,EAA+C;AAAA;;AAAA;;AAAA;AAAA;AAAA,SAA/C,EAA+C,eAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C,EAA+C,eAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C;AAJJ;;;;;AAOI;;;;;;AAEJ;AACI;AACJ;;;;;AADI;AAAA;;;;;;;;;;;;;;;;;;QDNK6H,gB;AAbb;AAAA;;AAcI;AACgB,aAAArkD,GAAA,GAAc,EAAd;AAChB;;AACgB,aAAA84B,GAAA,GAAc,CAAd;AAEA,aAAAwrB,QAAA,GAAW,KAAX;AAIT,aAAAC,cAAA,GAAyB,CAAzB;AAuCA,aAAAC,aAAA,GAAgB,IAAhB;AA8DV;AA1FG;;;;;;;8BAGa;AACT,cAAI,CAAC,KAAK/kD,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,KAAKq5B,GAAL,IAAY,CAAzB;AACH;;AACD,cAAM/5B,IAAI,GAAG,KAAK0lD,QAAL,GAAgB,GAAhB,GAAsB,KAAKC,SAAL,GAAiB,EAAjB,GAAsB,CAAzD;AACA,eAAKjlD,KAAL,IAAcV,IAAd;;AACA,cAAI,KAAKU,KAAL,GAAa,KAAKO,GAAtB,EAA2B;AACvB,iBAAKP,KAAL,GAAa,KAAKO,GAAL,IAAY,EAAzB;AACH;;AACD,eAAK7C,QAAL,CAAc,KAAKsC,KAAnB;AACH;AAED;;;;iCACgB;AACZ,cAAI,CAAC,KAAKA,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,KAAKq5B,GAAL,IAAY,CAAzB;AACH;;AACD,cAAM/5B,IAAI,GAAG,KAAK0lD,QAAL,GAAgB,GAAhB,GAAsB,KAAKC,SAAL,GAAiB,EAAjB,GAAsB,CAAzD;AACA,eAAKjlD,KAAL,IAAcV,IAAd;;AACA,cAAI,KAAKU,KAAL,GAAa,KAAKq5B,GAAtB,EAA2B;AACvB,iBAAKr5B,KAAL,GAAa,KAAKq5B,GAAL,IAAY,CAAzB;AACH;;AACD,eAAK37B,QAAL,CAAc,KAAKsC,KAAnB;AACH;;;sCAIoBklD,S,EAAmB;AAAA;;AACpC,cAAI,KAAKH,aAAT,EAAwB;AACpBrsD,wBAAY,CAAC,KAAKqsD,aAAN,CAAZ;AACA,iBAAKA,aAAL,GAAqB,IAArB;AACH;;AACD,eAAKA,aAAL,GAAqB9rD,UAAU,CAAC;AAAA,mBAAM,QAAI,CAACksD,WAAL,CAAiBD,SAAjB,CAAN;AAAA,WAAD,EAAoC,GAApC,CAA/B;AACH;;;oCAEkBA,S,EAAmB;AAClC,cAAIllD,KAAK,GAAGolD,MAAM,CAACF,SAAD,CAAlB;;AACA,cAAIG,KAAK,CAACrlD,KAAD,CAAT,EAAkB;AACdA,iBAAK,GAAG,KAAK8kD,cAAb;AACH;;AACD,cAAI9kD,KAAK,GAAG,KAAKq5B,GAAjB,EAAsB;AAClBr5B,iBAAK,GAAG,KAAKq5B,GAAL,IAAY,CAApB;AACH;;AACD,cAAIr5B,KAAK,GAAG,KAAKO,GAAjB,EAAsB;AAClBP,iBAAK,GAAG,KAAKO,GAAL,IAAY,EAApB;AACH;;AACD,eAAK7C,QAAL,CAAcsC,KAAd;AACH;AAED;;;;;;;iCAIgBklD,S,EAAiB;AAC7B,eAAKJ,cAAL,GAAsBI,SAAtB;AACA,eAAKllD,KAAL,GAAaklD,SAAb;AACA;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeJ,SAAf;AACH;AACJ;AAED;;;;;;;mCAIkBllD,K,EAAe;AAC7B,eAAKA,KAAL,GAAaA,KAAb;AACH;AAED;;AACA;;;;;;;yCAIwBlH,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;AACA;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;;;;AA3HL;;;uBAaa8rD,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,gC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,uCATd,CACP;AACIlW,eAAO,EAAE,QAAA8W,iBADb;;AAEI;AACAC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMd,gBAAN;AAAA,SAAX,CAHjB;AAIIe,aAAK,EAAE;AAJX,OADO,CASc,E;AAFxB,c;AAAA,a;AAAA,qlB;AAAA;AAAA;ACdL;AAEI;AAAA,mCAAoC,IAApC;AAAwC,WAAxC,EAAwC,KAAxC,EAAwC,kBAAxC,EAAyC,iBAAzC,EAAyC;AAAA,kCACJ,IADI;AACA,WADzC,EACyC,KADzC,EACyC,kBADzC,EAAyC,cAAzC,EAAyC;AAAA,kCAEP,IAFO;AAEH,WAFtC,EAEsC,KAFtC,EAEsC,kBAFtC,EAAyC,aAAzC,EAAyC;AAAA,mCAGP,KAHO;AAGF,WAHvC,EAGuC,KAHvC,EAGuC,kBAHvC,EAAyC,eAAzC,EAAyC;AAAA,kCAIN,KAJM;AAID,WAJxC,EAIwC,KAJxC,EAIwC,kBAJxC,EAAyC,YAAzC,EAAyC;AAAA,kCAKT,KALS;AAKJ,WALrC,EAKqC,KALrC,EAKqC,kBALrC;AAOA;AAA2E;AAAA,mBAAS,IAAApY,MAAA,EAAT;AAAiB,WAAjB;AACvE;AACJ;AACA;AASA;AAGA;AAA8D;AAAA,mBAAS,IAAAptC,GAAA,EAAT;AAAc,WAAd;AAC1D;AACJ;AACJ;;;;AAlB0C;AAAA;AACxB;AAAA;AAKV;AAAA;AAMe;AAAA;AAGgB;AAAA;AACrB;AAAA;;;;;;;;;2BDTLykD,gB,EAAgB;cAb5B,OAAAhI,SAa4B;eAblB;AACPljD,kBAAQ,EAAE,WADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;;AAEI;AACAC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMd,gBAAN;AAAA,aAAX,CAHjB;AAIIe,iBAAK,EAAE;AAJX,WADO;AAJJ,S;AAakB,Q;;gBAExB,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEtBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAcawpD,kB;;;;;AAZb;AAAA;;AAAA;;;AAaI;;AACsB,iBAAAC,KAAA,GAAgB,UAAAt/C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAApC;AAGtB;;AACgB,iBAAAq/C,QAAA,GAA6B,OAA7B;AAChB;;AACgB,iBAAAtlD,MAAA,GAA2B,QAA3B;AAKhB;;AACiB,iBAAAulD,QAAA,GAAW,IAAI,OAAA1L,YAAJ,EAAX;AA1BrB;AA+HC;AAxFG;;;;;mCAoBkB;AACd,eAAKv9C,IAAL,GAAY,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAhC;AACH;AAED;;;;;;;iCAIgBy+C,S,EAAmB;AAC/B;AACA,cAAMc,QAAQ,GAAG,IAAI,UAAAh4C,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAjB;AACA,cAAMmpD,KAAK,GAAG,IAAI,UAAAj4C,MAAJ,CAAW;AAAClR,gBAAI,EAAEooD;AAAP,WAAX,CAAd;AACA,cAAIgB,QAAQ,GAAGD,KAAK,CACfvoD,QADU,CACD;AAAE0B,gBAAI,EAAE4mD,QAAQ,CAAC7e,QAAjB;AAA2BhqC,kBAAM,EAAE6oD,QAAQ,CAACzoD;AAA5C,WADC,EAEVkJ,EAFL,CAJ+B,CAO/B;;AACA,cAAIy/C,QAAQ,GAAG,KAAKz5C,IAApB,EAA0B;AACtBy5C,oBAAQ,GAAG,KAAKz5C,IAAhB;AACH;;AACD,eAAK3P,IAAL,GAAYopD,QAAZ;;AACA,cAAI,KAAKZ,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeY,QAAf;;AACA,iBAAKH,QAAL,CAAcxK,IAAd,CAAmB2K,QAAnB;AACH;;AACD,eAAKxB,YAAL,GAAoB,KAApB;AACH;AAED;;AACA;;;;;;;mCAIkB1kD,K,EAAe;AAC7B,eAAKlD,IAAL,GAAYkD,KAAZ;AACA,eAAK0kD,YAAL,GAAoB,KAApB;AACH;AAED;;AACA;;;;;;;yCAIwB5rD,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;AACA;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;yCAEuBu9B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;0CACyB;AACrB,eAAK8vB,QAAL,CAAcC,SAAd;AACH;AAED;;;;yCACwB;AACpB,eAAKD,QAAL,CAAcE,QAAd;AACH;;;4BAtFc;AACX,iBAAO,KAAKR,KAAL,IAAc,UAAAt/C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,KAAjC,EAAwCC,EAA7D;AACH;AACD;;;;4BACgB;AACZ,iBAAO,KAAK6/C,GAAL,IAAY,UAAA//C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwuB,UAApB,CAA+B,KAA/B,EAAsCvtB,QAAtC,CAA+C;AAAE4oD,iBAAK,EAAE;AAAT,WAA/C,EAA6D9/C,EAAhF;AACH;AACD;;;;4BACsB;AAClB;AACA,cAAM3J,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAb;AACA,iBAAOA,IAAI,CAACsB,UAAL,CAAgB,aAAhB,CAAP;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAK+nD,QAAL,CAAcK,QAArB;AACH;;;;MA7CmC,OAAAjtD,a;;AAZxC;;;kDAYaqsD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,mC;AAAA;AAAA;+BAyBhB,OAAAa,c,EAAgB,I;;;;;;;;;;;;;;;;;;;;uCAjChB,CACP;AACI/X,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAME,kBAAN;AAAA,SAAX,CAFjB;AAGID,aAAK,EAAE;AAHX,OADO,C,GAMV,6B;AAAA,c;AAAA,c;AAAA,kS;AAAA;AAAA;ACjBL;AAQI;AAAA,mBAAiB,IAAAe,cAAA,EAAjB;AAAiC,WAAjC;AAGA;AAAqB;AAAiB;AACtC;AACI;AAOJ;AACJ;AACA;AACI;AAAuC;AAAA,mBAASC,MAAM,CAACr6C,eAAP,EAAT;AAAiC,WAAjC;AACnC;AAGI;AAAiB,gBAAA5O,QAAA;AAAkB,uBAAAkpD,eAAA;AAAiB,WAApD;AACH;AACL;AACJ;;;;;;AAzBI,gDAAwB,OAAxB,EAAwB,SAAxB;AAIA;AAFA;AAIqB;AAAA;AAGb;AAAA;AAWA;AAAA,6CAAgB,SAAhB,EAAgB,gDAAhB;;;;;;mEDNChB,kB;;;;2BAAAA,kB,EAAkB;cAZ9B,OAAAhJ,SAY8B;eAZpB;AACPljD,kBAAQ,EAAE,cADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAME,kBAAN;AAAA,aAAX,CAFjB;AAGID,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAYoB,Q;;gBAE1B,OAAAvpD,K;iBAAM,M;;;gBAEN,OAAAA,K;iBAAM,I;;;gBAEN,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAWA,OAAAoD,S;iBAAU,OAAAsG,c,EAAgB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AE5C/B;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AChBY;AACI;AACJ;;;;;AAFoD;AAChD;AAAA;;;;QD6BHI,sB;;;;;AAZb;AAAA;;AAAA;;;AAcI;;AACgB,iBAAAtmD,GAAA,GAAc,GAAd;AAChB;;AACgB,iBAAA84B,GAAA,GAAc,EAAd;AAChB;;AACgB,iBAAA/5B,IAAA,GAAe,EAAf;AAKhB;;AACgB,iBAAAwnD,eAAA,GAAiC,EAAjC;AAChB;;AACgB,iBAAAl2B,OAAA,GAAmB,KAAnB;AAET,iBAAA/yB,QAAA,GAAmB,EAAnB;AA7BX;AA4HC;;;;mCAtFkB;AACX,eAAKkpD,gBAAL,GAAwB,KAAKC,uBAAL,CAA6B,KAAKzmD,GAAlC,EAAuC,KAAK84B,GAA5C,EAAiD,KAAK/5B,IAAtD,EAA4D,KAAKsxB,OAAjE,CAAxB;AACH;;;oCAEkBp2B,O,EAAsB;AACrC;AACA,cAAIA,OAAO,CAAC+F,GAAR,IAAe/F,OAAO,CAAC6+B,GAAvB,IAA8B7+B,OAAO,CAAC8E,IAAtC,IAA8C9E,OAAO,CAAC8L,IAAtD,IAA8D9L,OAAO,CAACo2B,OAA1E,EAAmF;AAC/E,iBAAKm2B,gBAAL,GAAwB,KAAKC,uBAAL,CAA6B,KAAKzmD,GAAlC,EAAuC,KAAK84B,GAA5C,EAAiD,KAAK/5B,IAAtD,EAA4D,KAAKsxB,OAAjE,CAAxB;AACH;AACJ;AAED;;;;;;;iCAIgBs0B,S,EAAiB;AAC7B,eAAKrnD,QAAL,GAAgBqnD,SAAhB;AACA;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe,CAACJ,SAAhB;AACH;AACJ;AAED;;AACA;;;;;;;mCAIkBllD,K,EAAe;AAC7B,eAAKnC,QAAL,GAAgBmC,KAAhB;AACH;;;yCAEuBq2B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;AACA;;;;;;;yCAIwBv9B,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;AACA;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;gDAE+ByH,G,EAAa84B,G,EAAa/5B,I,EAAsC;AAAA,cAAxBsxB,OAAwB,uEAAL,KAAK;AAC5F,cAAMq2B,MAAM,GAAe,EAA3B;AACA,cAAI3gD,IAAI,GAAG+yB,GAAX,CAF4F,CAG5F;;AACA,cAAIv8B,IAAI,GAAG,KAAKwJ,IAAL,GAAY,IAAI,UAAA0H,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKwJ;AAAZ,WAAX,CAAZ,GAA4C,IAAvD,CAJ4F,CAM5F;;AAN4F,uDAOvE,KAAKwgD,eAPkE;AAAA;;AAAA;AAO5F,sEAA2C;AAAA,kBAAhCnhC,MAAgC;AACvCshC,oBAAM,CAACtiD,IAAP,CAAY;AACRoK,kBAAE,EAAE4W,MADI;AAER9sB,oBAAI,EAAEiE,IAAI,aACDA,IAAI,CAACa,QAAL,CAAc;AAAEJ,yBAAO,EAAEooB;AAAX,iBAAd,EAAmCvnB,UAAnC,CAA8C,OAAAwI,gBAAA,EAA9C,EAAkEW,iBAAlE,EADC,eACyF,OAAAzD,gBAAA,CAAiB6hB,MAAjB,CADzF,mBAED,OAAA7hB,gBAAA,CAAiB6hB,MAAjB,CAFC;AAFF,eAAZ;AAMH;AAd2F;AAAA;AAAA;AAAA;AAAA;;AAiB5F,iBAAOrf,IAAI,IAAI/F,GAAf,EAAoB;AAChB0mD,kBAAM,CAACtiD,IAAP,CAAY;AACRoK,gBAAE,EAAEzI,IADI;AAERzN,kBAAI,EAAEiE,IAAI,aACDA,IAAI,CAACa,QAAL,CAAc;AAAEJ,uBAAO,EAAE+I;AAAX,eAAd,EAAiClI,UAAjC,CAA4C,OAAAwI,gBAAA,EAA5C,EAAgEW,iBAAhE,EADC,eACuF,OAAAzD,gBAAA,CAAiBwC,IAAjB,CADvF,mBAED,OAAAxC,gBAAA,CAAiBwC,IAAjB,CAFC;AAFF,aAAZ;AAMAA,gBAAI,IAAIhH,IAAR;AACH;;AACD,cAAIsxB,OAAJ,EAAa;AACVq2B,kBAAM,CAACtiD,IAAP,CAAY;AAAEoK,gBAAE,EAAE,KAAK,EAAX;AAAelW,kBAAI,EAAE;AAArB,aAAZ;AACF;;AACDouD,gBAAM,CAACtiD,IAAP,CAAY;AAAEoK,cAAE,EAAE,IAAI,EAAJ,GAAS,EAAf;AAAmBlW,gBAAI,EAAE;AAAzB,WAAZ;AACA,iBAAOouD,MAAP;AACH;;;;MA/GuC,OAAA1tD,a;;AAZ5C;;;sDAYastD,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,uC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,uCARpB,CACP;AACInY,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMmB,sBAAN;AAAA,SAAX,CAFjB;AAGIlB,aAAK,EAAE;AAHX,OADO,CAQoB,GAF9B,6BAE8B,EAF9B,uBAE8B,C;AAF9B,c;AAAA,a;AAAA,4K;AAAA;AAAA;AC/BL;AACI;AACI;AAA6D;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;AACzD;AAGJ;AACJ;AACJ;;;;AAR4B;AAEA;AAAA,+CAAkB,UAAlB,EAAkB,YAAlB;AACJ;AAAA;;;;;;uED8BXmpD,sB;;;;2BAAAA,sB,EAAsB;cAZlC,OAAAjK,SAYkC;eAZxB;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,iCAFN;AAGPC,mBAAS,EAAE,CAAC,iCAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMmB,sBAAN;AAAA,aAAX,CAFjB;AAGIlB,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAYwB,Q;;gBAG9B,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;;AASA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUQ;AACI;AACJ;;;;;AAFgD;AAC5C;AAAA;;;;;;;;AAHZ;AACI;AAAyD;AAAA;AAAA;AAAA;AAAA;AACrD;AAGJ;AACJ;;;;;AALwB;AAAA,4CAAc,UAAd,EAAc,eAAd;AACJ;AAAA;;;;;;;;;;;;QDIP8qD,kB;;;;;AAZb;AAAA;;AAAA;;;AAaI;;AACgB,iBAAA5nD,IAAA,GAAe,EAAf;AAGhB;;AACgB,iBAAA6nD,aAAA,GAAyB,IAAzB;AAChB;;AACO,iBAAArqD,IAAA,GAAe,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAnC;AACP;;AACO,iBAAAH,IAAA,GAAe,UAAAC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB0B,UAApB,CAA+B,OAA/B,CAAf;AAtBX;AA8JC,O,CA3HG;;;;;mCACe;AAAA;;AACX,eAAKgpD,WAAL,GAAmB,IAAnB;AACA,eAAKC,aAAL,GAAqB,KAAKC,sBAAL,CAA4B,KAAKxqD,IAAjC,EAAuC,CAAC,KAAKqqD,aAA7C,EAA4D,KAAK7nD,IAAjE,CAArB;AACA,eAAK7D,OAAL,CAAa,MAAb,EAAqB;AAAA,mBAAM,QAAI,CAAC2rD,WAAL,GAAmB,KAAzB;AAAA,WAArB;AACH;;;oCAEkB5sD,O,EAAsB;AACrC,cAAIA,OAAO,CAAC2sD,aAAR,IAAyB3sD,OAAO,CAAC8E,IAArC,EAA2C;AACvC,iBAAK+nD,aAAL,GAAqB,KAAKC,sBAAL,CAA4B,KAAKxqD,IAAjC,EAAuC,CAAC,KAAKqqD,aAA7C,EAA4D,KAAK7nD,IAAjE,CAArB;AACH;AACJ;;;;AAqBD;;;;iCAIgB4lD,S,EAAiB;AAC7B,eAAK5+C,IAAL,GAAY4+C,SAAZ;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,gBAAMh/C,IAAI,GAAG,CAAC,KAAKA,IAAL,IAAa,OAAd,EAAuBxH,KAAvB,CAA6B,GAA7B,CAAb;AACA,gBAAMhC,IAAI,GAAG,KAAK64B,KAAL,CAAWj4B,QAAX,CAAoB;AAAE0B,kBAAI,EAAE,CAACkH,IAAI,CAAC,CAAD,CAAb;AAAkBnJ,oBAAM,EAAE,CAACmJ,IAAI,CAAC,CAAD;AAA/B,aAApB,EAA0DE,YAA1D,CAAuE,QAAvE,CAAb;;AACA,iBAAK8+C,SAAL,CAAexoD,IAAI,CAAC2J,EAApB;AACH;AACJ;AAED;;;;;;;mCAIkBzG,K,EAAe;AAC7B,cAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,eAAKlD,IAAL,GAAYkD,KAAZ;AACA,cAAIlD,IAAI,GAAG,KAAK64B,KAAL,CAAWnvB,YAAX,CAAwB,QAAxB,CAAX;AACA1J,cAAI,GAAGA,IAAI,CAACY,QAAL,CAAc;AAAEP,kBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUP,IAAI,CAACS,OAAL,GAAe,CAAzB,IAA8B;AAAxC,WAAd,CAAP;AACA,eAAK+I,IAAL,GAAYxJ,IAAI,CAACsB,UAAL,CAAgB,OAAhB,CAAZ;AACA,eAAKipD,aAAL,GAAqB,KAAKC,sBAAL,CAA4B,KAAKxqD,IAAjC,EAAuC,CAAC,KAAKqqD,aAA7C,EAA4D,KAAK7nD,IAAjE,CAArB;AACH;;;yCAEuB+2B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;;;yCAIwBv9B,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;AAED;;;;;;qCAGoB;AAAA;;AAChB,eAAKsuD,WAAL,GAAmB,IAAnB;AACA,eAAK3rD,OAAL,CAAa,UAAb,EAAyB,YAAM;AAC3B,gBAAI,QAAI,CAAC8rD,YAAT,EAAuB;AACnB,sBAAI,CAACA,YAAL,CAAkBC,KAAlB;;AACA,sBAAI,CAACD,YAAL,CAAkBlzC,IAAlB;;AACA,sBAAI,CAACxZ,YAAL,CAAkB,cAAlB,EAAkC,QAAI,CAAC0sD,YAAL,CAAkBE,YAAlB,CAA+B1sD,SAA/B,CAAyC,UAAClD,KAAD,EAAW;AAClF,oBAAI,CAACA,KAAL,EAAY;AACR,0BAAI,CAACuvD,WAAL,GAAmB,KAAnB;AACH;AACJ,eAJiC,CAAlC;AAKH;AACJ,WAVD;AAWH;AAED;;;;;;;;+CAK+BM,S,EAAmBC,S,EAAqC;AAAA,cAAjBroD,IAAiB,uEAAF,EAAE;AACnF,cAAIxC,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAE4qD;AAAP,WAAX,CAAX;AACA,cAAMT,MAAM,GAAG,EAAf;;AACA,cAAIU,SAAS,IAAI7qD,IAAI,CAACm3B,WAAL,CAAiB,UAAA1tB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB,CAAjB,EAAwD;AACpDI,gBAAI,GAAGA,IAAI,CAAC0J,YAAL,CAAkB,KAAlB,CAAP;AACH,WAFD,MAEO,IAAI1J,IAAI,CAACm3B,WAAL,CAAiB,UAAA1tB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB,CAAJ,EAA2C;AAC9CI,gBAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAP;AACH;;AACDI,cAAI,GAAGA,IAAI,CAACY,QAAL,CAAc;AAAEP,kBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUP,IAAI,CAACS,OAAL,GAAe+B,IAAzB,IAAiCA;AAA3C,WAAd,CAAP;AACA,cAAMgpB,GAAG,GAAGxrB,IAAI,CAACouB,UAAL,CAAgB,KAAhB,CAAZ,CATmF,CAUnF;;AACA,iBAAOpuB,IAAI,CAACk3B,YAAL,CAAkB1L,GAAlB,CAAP,EAA+B;AAC3B2+B,kBAAM,CAACtiD,IAAP,CAAY;AACR9L,kBAAI,YAAKiE,IAAI,CAACsB,UAAL,CAAgB,OAAAwI,gBAAA,EAAhB,EAAoCW,iBAApC,EAAL,CADI;AAERwH,gBAAE,EAAEjS,IAAI,CAACsB,UAAL,CAAgB,OAAhB;AAFI,aAAZ;AAIAtB,gBAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAEJ,qBAAO,EAAE+B;AAAX,aAAd,CAAP;AACH;;AACD,iBAAO2nD,MAAP;AACH;;;4BA7Ge;AACZ,iBAAO,IAAI,UAAAj5C,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAP;AACH;AAED;;;;4BAC0B;AACtB,cAAMwJ,IAAI,GAAG,CAAC,KAAKA,IAAL,IAAa,OAAd,EAAuBxH,KAAvB,CAA6B,GAA7B,CAAb;AACA,cAAMhC,IAAI,GAAG,KAAK64B,KAAL,CAAWj4B,QAAX,CAAoB;AAAE0B,gBAAI,EAAE,CAACkH,IAAI,CAAC,CAAD,CAAb;AAAkBnJ,kBAAM,EAAE,CAACmJ,IAAI,CAAC,CAAD;AAA/B,WAApB,CAAb;;AACA,cAAIxJ,IAAI,CAACS,OAAL,GAAe,EAAf,KAAsB,CAAtB,IAA2B,CAAC,KAAK8pD,aAAL,CAAmB/mD,IAAnB,CAAwB,UAAAgG,IAAI;AAAA,mBAAIA,IAAI,CAACyI,EAAL,KAAYjS,IAAI,CAACsB,UAAL,CAAgB,OAAhB,CAAhB;AAAA,WAA5B,CAAhC,EAAuG;AACnG,iBAAKipD,aAAL,CAAmB1iD,IAAnB,CAAwB;AACpB9L,kBAAI,YAAKiE,IAAI,CAACsB,UAAL,CAAgB,OAAAwI,gBAAA,EAAhB,CAAL,CADgB;AAEpBmI,gBAAE,EAAEjS,IAAI,CAACsB,UAAL,CAAgB,OAAhB;AAFgB,aAAxB;;AAIA,iBAAKipD,aAAL,CAAmBriD,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAU,UAAGD,CAAC,CAAC8J,EAAL,EAAU5J,aAAV,WAA2BD,CAAC,CAAC6J,EAA7B,EAAV;AAAA,aAAxB;AACH;;AACD,iBAAO,KAAKs4C,aAAZ;AACH;;;;MApDmC,OAAA9tD,a;;AAZxC;;;kDAYa2tD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,mC;AAAA;AAAA;;;;;;;;;;;;;;;uCARhB,CACP;AACIxY,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMwB,kBAAN;AAAA,SAAX,CAFjB;AAGIvB,aAAK,EAAE;AAHX,OADO,C,GAMV,6B,EAAA,uB;AAAA,c;AAAA,a;AAAA,0Z;AAAA;AAAA;AChCL;AAOI;AAAA,mBAAiB,IAAAiC,UAAA,EAAjB;AAA6B,WAA7B;AAEA;AACI;AAKI;AAAA,mBAAiB,IAAAlqD,QAAA,QAAjB;AAAiC,WAAjC;AALJ;AAOJ;AACA;AAAkB;AAAA,mBAAS,IAAAkqD,UAAA,EAAT;AAAqB,WAArB;AACd;AAOJ;AACJ;AACA;;;;AAzBI;AACA;AASQ;AAAA,kDAAqB,SAArB,EAAqB,QAArB;AAOA;AAAA;AAQyB;AAAA;;;;;;mEDMxBV,kB;;;;2BAAAA,kB,EAAkB;cAZ9B,OAAAtK,SAY8B;eAZpB;AACPljD,kBAAQ,EAAE,cADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMwB,kBAAN;AAAA,aAAX,CAFjB;AAGIvB,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAYoB,Q;;gBAE1B,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAeA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AEvDf;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBQ;AACI;AACJ;;;;;;AAGA;AACI;AAAkB;AAAiB;AACnC;AAAmB;AAAkB;AACzC;;;;;AAH6C;AACvB;AAAA;AACC;AAAA;;;;;;;;;;;;;;;;AAoBnB;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIJ;;;;;AAVI,2CAAiB,OAAjB,EAAiB,uCAAjB,EAAiB,WAAjB,EAAiB,IAAjB;AAKA;AAAA;AAGI;AAAA;;;;;;AAdZ;AAII;AAaJ;;;;;AAZQ;AAAA;;;;;;;;;;;;;;;;;;AAgBZ;AAAA;AAA6C;;;;;;;;;;;;QDPpC0H,sB;;;;;AA4BT,sCAAoBtvC,QAApB,EAA0D8rB,MAA1D,EAAyF4Y,KAAzF,EAAmH;AAAA;;AAAA;;AAC/G;AADgB,iBAAA1kC,QAAA,GAAAA,QAAA;AAAsC,iBAAA8rB,MAAA,GAAAA,MAAA;AAA+B,iBAAA4Y,KAAA,GAAAA,KAAA;AAzBzF;;AACgB,iBAAA7uC,KAAA,GAAgB,CAAhB;AAChB;;AAC0B,iBAAA6yC,QAAA,GAAW,IAAI,OAAA5G,YAAJ,EAAX;AAY1B;;AACO,iBAAAyN,OAAA,GAAU,IAAI,OAAA3vC,OAAJ,EAAV;AAS4G;AAElH;;;;mCAEU;AAAA;;AACP;AACA,eAAK6pC,eAAL,GAAuB,KAAK8F,OAAL,CAAal6C,IAAb,CACnB,YAAA8d,YAAA,CAAa,GAAb,CADmB,EAEnB,YAAA+xB,oBAAA,EAFmB,EAGnB,YAAA9xB,SAAA,CAAU,UAACzb,KAAD,EAAW;AACjB,oBAAI,CAACoF,OAAL,GAAe,IAAf;AACA,mBAAOpF,KAAK,CAAClR,MAAN,IAAgB,QAAI,CAACoP,KAArB,GACD,QAAI,CAACi2B,MAAL,CAAYn0B,KAAZ,CAAkB;AAChBgM,eAAC,EAAEhM,KAAK,CAACtN,KAAN,CAAY,CAAZ,EAAexF,IAAI,CAACmD,GAAL,CAAS,QAAI,CAAC6N,KAAd,EAAqB,CAArB,CAAf,CADa;AAEhBoM,mBAAK,EAAE,KAAK;AAFI,aAAlB,CADC,GAKD9B,OAAO,CAACC,OAAR,CAAgB,EAAhB,CALN;AAMH,WARD,CAHmB,EAYnB,YAAAkC,UAAA,CAAW,UAAChH,CAAD;AAAA,mBAAO,OAAAkH,EAAA,CAAG,EAAH,CAAP;AAAA,WAAX,CAZmB,EAanB,YAAApY,GAAA,CAAI,UAAC3H,IAAD,EAAkB;AAClB,oBAAI,CAACsa,OAAL,GAAe,KAAf;AACA,mBAAO,OAAAlR,UAAA,CAAW,QAAI,CAAC2jD,UAAhB,EAA4B/sD,IAA5B,EAAkC,CAAC,MAAD,EAAS,OAAT,CAAlC,CAAP;AACH,WAHD,CAbmB,CAAvB,CAFO,CAoBP;;AACA,eAAKH,YAAL,CACI,gBADJ,EAEI,KAAKmnD,eAAL,CAAqBjnD,SAArB,CAA+B,UAACC,IAAD,EAAU;AACrC,oBAAI,CAACkiD,SAAL,GAAiBliD,IAAjB;;AACA,oBAAI,CAACkiD,SAAL,CAAehiD,OAAf,CAAuB,UAACC,CAAD,EAAY;AAC/BA,eAAC,CAAC6sD,UAAF,GAAe,OAAA5hD,gBAAA,CAAiBjL,CAAC,CAAC6sD,UAAnB,CAAf;AACA7sD,eAAC,CAAC8sD,WAAF,GAAgB,OAAA7hD,gBAAA,CAAiBjL,CAAC,CAAC8sD,WAAnB,CAAhB;AACA,qBAAO9sD,CAAP;AACH,aAJD;;AAKA,oBAAI,CAAC+hD,SAAL,CAAel+C,MAAf,GAAwB,QAAI,CAACkpD,iBAAL,CAAuBC,SAAvB,EAAxB,GAA6D,QAAI,CAACD,iBAAL,CAAuBE,UAAvB,EAA7D;AACH,WARD,CAFJ;AAYH;AAED;;;;;;;gCAIenzC,I,EAAY;AACvB;AACA,cAAI,CAAC,KAAKozC,WAAV,EAAuB;AACnB,iBAAKA,WAAL,GAAmB,EAAnB;AACH;;AACD,cAAMjtD,KAAK,GAAG,KAAKitD,WAAL,CAAiBjf,SAAjB,CAA2B,UAACkf,MAAD;AAAA,mBAAYA,MAAM,CAACv5C,EAAP,KAAckG,IAAI,CAAClG,EAA/B;AAAA,WAA3B,CAAd;AACA;;AACA,cAAI3T,KAAK,GAAG,CAAZ,EAAe;AACX,iBAAKitD,WAAL,gCAAuB,KAAKA,WAA5B,IAAyCpzC,IAAzC;AACH;;AACD,eAAKvX,QAAL,CAAc,KAAK2qD,WAAnB;AACA,eAAKN,UAAL,GAAkB,EAAlB;AACH;AAED;;;;;;;mCAIkB9yC,I,EAAY;AAC1B,eAAKozC,WAAL,GAAmB,KAAKA,WAAL,CAAiB3kD,MAAjB,CAAwB,UAAC4kD,MAAD;AAAA,mBAAYA,MAAM,CAACv5C,EAAP,KAAckG,IAAI,CAAClG,EAA/B;AAAA,WAAxB,CAAnB;AACA,eAAKrR,QAAL,CAAc,KAAK2qD,WAAnB;AACH;AAED;;;;;;;yCAIwB79C,K,EAAO;AAAA;;AAC3B;AACA,cAAIA,KAAK,CAACyE,MAAV,EAAkB;AACd,gBAAMs5C,IAAI,GAAG/9C,KAAK,CAACyE,MAAN,CAAau5C,KAAb,CAAmB,CAAnB,CAAb;AACA;;AACA,gBAAID,IAAJ,EAAU;AACN,kBAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,oBAAM,CAACE,UAAP,CAAkBJ,IAAlB,EAAwB,OAAxB;AACAE,oBAAM,CAACvoB,gBAAP,CAAwB,MAAxB,EAAgC,UAAC0oB,GAAD,EAAS;AACrC,wBAAI,CAACC,cAAL,CAAqBD,GAAG,CAACE,UAAJ,CAAuBruC,MAA5C;;AACAjQ,qBAAK,CAACyE,MAAN,CAAajP,KAAb,GAAqB,EAArB;;AACA,wBAAI,CAACi9C,KAAL,CAAWoB,aAAX;AACH,eAJD;AAKAoK,oBAAM,CAACvoB,gBAAP,CAAwB,OAAxB,EAAiC,UAACrsB,CAAD;AAAA,uBAC7B,QAAI,CAAC0E,QAAL,CAAcy2B,WAAd,CAA0B,qBAA1B,CAD6B;AAAA,eAAjC;AAGH;AACJ;AACJ;AAED;;;;;;;uCAIuB/sB,I,EAAc;AAAA;;AACjC,cAAMjnB,IAAI,GAAG,OAAAoO,SAAA,CAAU6Y,IAAV,KAAmB,EAAhC;AACA,cAAMlT,EAAE,GAAG,KAAKs1B,MAAL,CAAYlO,OAAZ,CAAoB4d,UAA/B;AACA/4C,cAAI,CAACE,OAAL,CAAa,UAACyI,EAAD,EAAQ;AACjBA,cAAE,CAAC9K,IAAH,GAAU8K,EAAE,CAAC9K,IAAH,cAAc8K,EAAE,CAAC+vC,UAAjB,cAA+B/vC,EAAE,CAACgwC,SAAlC,CAAV;AACA,gBAAM5qC,OAAO,GAAG,CAACpF,EAAE,CAAC9K,IAAH,cAAcuE,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,KAAgB,QAA3B,CAAd,CAAD,EACX7H,KADW,CACL,GADK,EAEXqH,IAFW,CAEN,GAFM,EAGX3B,WAHW,EAAhB;AAIA;;AACA,gBAAI,CAACb,EAAE,CAACuK,KAAR,EAAe;AACXvK,gBAAE,CAACuK,KAAH,aAAcnF,OAAd,cAAyBgG,EAAzB;AACH;;AACDpL,cAAE,CAAC5B,IAAH,GAAU,UAAV;AACA4B,cAAE,CAACmwB,QAAH,GAAc,CAACnwB,EAAE,CAACuK,KAAH,CAAS66C,QAAT,CAAkB,eAAlB,CAAD,IAAuC,CAACplD,EAAE,CAACuK,KAAH,CAAS66C,QAAT,CAAkB,wBAAlB,CAAtD;;AACA,oBAAI,CAACC,OAAL,CAAa,IAAI,cAAA75B,IAAJ,CAASxrB,EAAT,CAAb;AACH,WAbD;AAcH;AAED;;AACA;;;;8CAC6B;AACzB,cAAMslD,QAAQ,+GAAd;AACA,iBAAAxgD,YAAA,CAAa,cAAb,EAA6BwgD,QAA7B;AACH;AAED;;;;;;;iCAIgB/D,S,EAAiB;AAC7B,eAAKmD,WAAL,GAAmBnD,SAAnB;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeJ,SAAf;AACH;AACJ;AAED;;AACA;;;;;;;mCAIkBllD,K,EAAe;AAC7B,eAAKqoD,WAAL,GAAmBroD,KAAnB;AACH;;;yCAEuBq2B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;AACA;;;;;;;yCAIwBv9B,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;AACA;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;;MA5LuC,OAAAS,a;;AAZ5C;;;uBAYasuD,sB,EAAsB,2C,EAAA,qC,EAAA,0C;AAAA,K;;;YAAtBA,sB;AAAsB,wC;AAAA;AAAA;yBA0BpB,eAAAqB,sB,EAAwB,I,EAAO,eAAAA,sB;;;;;;;;;;;;;;;;uCAlC/B,CACP;AACIxa,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMmC,sBAAN;AAAA,SAAX,CAFjB;AAGIlC,aAAK,EAAE;AAHX,OADO,C,GAMV,6B;AAAA,e;AAAA,c;AAAA,giC;AAAA;AAAA;ACtDL;AACI;AACI;AAAA;AAII;AAAA;AAAA,aAAwB,eAAxB,EAAwB;AAAA,mBACP,IAAAmC,OAAA,MAAanB,MAAM,CAACrP,IAAP,EAAb,CADO;AACoB,WAD5C;AAJJ;AAYA;AACI;AAGJ;AACA;AAGJ;AACA;AAA0C;AAAA,mBAAkB,IAAA0R,OAAA,qBAAlB;AAA8C,WAA9C;AACtC;AAIJ;AACA;AACI;AAAmD;AAAA,mBAAS,IAAA/H,QAAA,OAAT;AAAwB,WAAxB;AAAnD;AAEA;AACA;AAAA;AAEI;AAAmB;AAAA,mBAAU,IAAAkI,gBAAA,QAAV;AAAkC,WAAlC;AAAnB;AACJ;AAAA;AACA;AAAyD;AAAA,mBAAS,IAAAC,mBAAA,EAAT;AAA8B,WAA9B;AAAzD;AAEA;AACJ;AACA;AACI;AAkBJ;AACJ;AACA;;;;;;;;AA9DwC;AAM5B;AAAA,mDAAwB,UAAxB,EAAwB,YAAxB,EAAwB,iBAAxB,EAAwB,GAAxB;AAUI;AAAA;AAGsB;AAAA;AAKlB;AAAA;AAoBR;AAAA,2EAA2D,UAA3D,EAA2D,GAA3D;;;;;;;;;2BDYCvB,sB,EAAsB;cAZlC,OAAAjL,SAYkC;eAZxB;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMmC,sBAAN;AAAA,aAAX,CAFjB;AAGIlC,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAYwB,Q;;;;;;;;;;gBAE9B,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD,M;iBAAO,S;;;gBAoBP,OAAAoD,S;iBAAU,eAAA+I,sB,EAAwB;AAACG,gBAAI,EAAE,eAAAH;AAAP,W;;;;;;;;;;;;;;;;;;;;;;;;AElFvC;AAAA;AAAA;;AAOA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAIA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACI;AACJ;;;;;;AAGA;AACI;AAAkB;AAAiB;AACnC;AAAmB;AAAkB;AACzC;;;;;AAH6C;AACvB;AAAA;AACC;AAAA;;;;;;;;;;;;QDuBlBI,wB;;;;;AAwBT,wCAAoBjlB,MAApB,EAA0C;AAAA;;AAAA;;AACtC;AADgB,iBAAAA,MAAA,GAAAA,MAAA;AATpB;;AACO,iBAAAyjB,OAAA,GAAU,IAAI,OAAA3vC,OAAJ,EAAV;AAQmC;AAEzC;;;;mCAEc;AAAA;;AAEX;AACA,eAAK6pC,eAAL,GAAuB,KAAK8F,OAAL,CAAal6C,IAAb,CACnB,YAAA8d,YAAA,CAAa,GAAb,CADmB,EAEnB,YAAA+xB,oBAAA,EAFmB,EAGnB,YAAA9xB,SAAA,CAAU,UAAAzb,KAAK,EAAI;AACf,oBAAI,CAACoF,OAAL,GAAe,IAAf;AACA,mBAAO,QAAI,CAAC2J,OAAL,IAAgB,QAAI,CAACA,OAAL,CAAajgB,MAAb,GAAsB,CAAtC,GACD0Z,OAAO,CAACC,OAAR,CAAgB,QAAI,CAACsG,OAArB,CADC,GAED/O,KAAK,CAAClR,MAAN,IAAgB,CAAhB,GACK,QAAI,CAACqlC,MAAL,CAAYn0B,KAAZ,CAAkB;AAAEgM,eAAC,EAAEhM,KAAL;AAAYsK,mBAAK,EAAE,KAAK;AAAxB,aAAlB,CADL,GAEI9B,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAJV;AAKH,WAPD,CAHmB,EAWnB,YAAAkC,UAAA,CAAW,UAACV,GAAD;AAAA,mBAAS,OAAAY,EAAA,CAAG,EAAH,CAAT;AAAA,WAAX,CAXmB,EAYnB,YAAApY,GAAA,CAAI,UAAC3H,IAAD,EAAkB;AAClB,oBAAI,CAACsa,OAAL,GAAe,KAAf;AACA,mBAAO,OAAAlR,UAAA,CAAW,QAAI,CAAC2jD,UAAhB,EAA4B/sD,IAA5B,EAAkC,CAAC,MAAD,EAAS,OAAT,CAAlC,CAAP;AACH,WAHD,CAZmB,CAAvB,CAHW,CAoBX;;AACA,eAAKH,YAAL,CAAkB,gBAAlB,EAAoC,KAAKmnD,eAAL,CAAqBjnD,SAArB,CAA+B,UAAAC,IAAI,EAAI;AACvE,oBAAI,CAACkiD,SAAL,GAAiBliD,IAAjB;;AACA,oBAAI,CAACkiD,SAAL,CAAehiD,OAAf,CAAuB,UAACC,CAAD,EAAY;AAC/BA,eAAC,CAAC6sD,UAAF,GAAe,OAAA5hD,gBAAA,CAAiBjL,CAAC,CAAC6sD,UAAnB,CAAf;AACA7sD,eAAC,CAAC8sD,WAAF,GAAgB,OAAA7hD,gBAAA,CAAiBjL,CAAC,CAAC8sD,WAAnB,CAAhB;AACA,qBAAO9sD,CAAP;AACH,aAJD;;AAKA,oBAAI,CAAC+hD,SAAL,CAAel+C,MAAf,GAAwB,QAAI,CAACkpD,iBAAL,CAAuBC,SAAvB,EAAxB,GAA6D,QAAI,CAACD,iBAAL,CAAuBE,UAAvB,EAA7D;AACH,WARmC,CAApC;AASH;AAED;;;;;;4CAG2B;AACvB,cAAI,KAAKh5B,WAAT,EAAsB;AAClB,iBAAK24B,UAAL,GAAkB,KAAK34B,WAAL,CAAiBv2B,IAAnC;AACH;AACJ;AAED;;;;;;;iCAIgBqsD,S,EAAe;AAC3B,eAAK91B,WAAL,GAAmB81B,SAAnB;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeJ,SAAf;AACH;;AACD,eAAKqE,iBAAL;AACH;AAED;;;;;;;mCAIkBvpD,K,EAAa;AAC3B,eAAKovB,WAAL,GAAmBpvB,KAAnB;AACA,eAAKupD,iBAAL;AACH;;;yCAEuBlzB,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;;;yCAIwBv9B,E,EAAqB;AACzC,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAqB;AAC1C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;;MA5GyC,OAAAS,a;;AAZ9C;;;uBAYa+vD,wB,EAAwB,qC;AAAA,K;;;YAAxBA,wB;AAAwB,0C;AAAA;AAAA;yBAsBtB,eAAAJ,sB,EAAwB,I,EAAO,eAAAA,sB;;;;;;;;;;;;;uCA9B/B,CACP;AACIxa,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAM4D,wBAAN;AAAA,SAAX,CAFjB;AAGI3D,aAAK,EAAE;AAHX,OADO,C,GAMV,6B;AAAA,e;AAAA,a;AAAA,ihB;AAAA;AAAA;AC7CL;AACI;AACI;AAAA;AAGI;AAAA;AAAA,aAAwB,eAAxB,EAAwB;AAAA,mBACP,IAAAmC,OAAA,aADO;AACa,WADrC,EAAwB,MAAxB,EAAwB;AAAA,mBAMhB,IAAAyB,iBAAA,EANgB;AAMG,WAN3B;AAHJ;AAYA;AACI;AACJ;AACA;AAGJ;AACA;AAA0C;AAAA,mBAAkB,IAAA7rD,QAAA,qBAAlB;AAA+C,WAA/C;AACtC;AAIJ;AACJ;;;;;;AAtBY;AAAA,mDAAwB,UAAxB,EAAwB,YAAxB,EAAwB,iBAAxB,EAAwB,GAAxB;AAUU;AAAA;AAEgB;AAAA;AAKlB;AAAA;;;;;;;;;2BDyBP4rD,wB,EAAwB;cAZpC,OAAA1M,SAYoC;eAZ1B;AACPljD,kBAAQ,EAAE,qBADH;AAEPmjD,qBAAW,EAAE,oCAFN;AAGPC,mBAAS,EAAE,CAAC,oCAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAM4D,wBAAN;AAAA,aAAX,CAFjB;AAGI3D,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAY0B,Q;;;;;;gBAEhC,OAAAvpD;;;gBAEA,OAAAA;;;gBAkBA,OAAA+jD,S;iBAAU,eAAA+I,sB,EAAwB;AAACG,gBAAI,EAAE,eAAAH;AAAP,W;;;;;;;;;;;;;;;;;;;;;;;;AErEvC;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOaM,iB;;;;;AAIT,iCAAoBtP,OAApB,EAAqC;AAAA;;AAAA;;AACjC;AADgB,iBAAAA,OAAA,GAAAA,OAAA;AAAiB;AAEpC;;;;mCAEc;AAAA;;AACX,eAAKz+C,OAAL,CAAa,eAAb,EAA8B;AAAA,mBAAM,QAAI,CAACguD,WAAL,CAAiBphD,QAAQ,CAAC0f,KAA1B,CAAN;AAAA,WAA9B,EAAsE,IAAtE;;AACA,eAAKmyB,OAAL,CAAa9hC,MAAb,CAAoBrd,SAApB,CAA8B,UAACyP,KAAD,EAA0B;AACpD;AACA,gBAAIA,KAAK,YAAY,SAAAk/C,aAArB,EAAoC;AAChC,sBAAI,CAACjuD,OAAL,CAAa,eAAb,EAA8B;AAAA,uBAAM,QAAI,CAACguD,WAAL,CAAiBphD,QAAQ,CAAC0f,KAA1B,CAAN;AAAA,eAA9B;AACH;AACJ,WALD;AAMH;;;oCAEkBrS,Q,EAAU;AACzBA,kBAAQ,GAAGA,QAAQ,CAAC+oB,MAAT,CAAgB,CAAhB,EAAmB/oB,QAAQ,CAACxV,OAAT,CAAiB,IAAjB,CAAnB,CAAX;AACA,eAAKypD,YAAL,GAAoBj0C,QAApB;AACH;;;;MArBkC,OAAAnc,a;;AALvC;;;uBAKaiwD,iB,EAAiB,+B;AAAA,K;;;YAAjBA,iB;AAAiB,+B;AAAA,+C;AAAA,c;AAAA,a;AAAA,0F;AAAA;AAAA;ACV9B;AACI;AACI;AAAA;AAAgC;AAChC;AACI;AACJ;AACJ;AACJ;;;;AAPG;AAImB;AAAA;;;;;;;;;2BDMTA,iB,EAAiB;cAL7B,OAAA5M,SAK6B;eALnB;AACPljD,kBAAQ,EAAE,UADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;AAAA;;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;ACJI;AAAoD;AAAkB;;;;;AAAvC;AAAqB;AAAA;;;;;;AACpD;;;;;;AAAiC;;;;;;AAFrC;AACI;AACA;AACJ;;;;;AAFO;AAAA;AACE;AAAA;;;;QDUI8M,a;;;;;;;;;;;;MAAsB,OAAArwD,a;;AALnC;;;6CAKaqwD,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,6H;AAAA;AAAA;ACZ1B;;;;AAAsB;;;;;;;8DDYTA,a;;;;2BAAAA,a,EAAa;cALzB,OAAAhN,SAKyB;eALf;AACPljD,kBAAQ,EAAE,UADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD;AAHJ,S;AAKe,Q;;gBACrB,OAAA1gD;;;;;;;;;;;;;;;;;;;;;;;;AEbL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AASA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMmkD,YAAY,GAAG,CACjB,gBAAAkE,oBADiB,EAEjB,iBAAAmF,aAFiB,EAGjB,gBAAAhF,gBAHiB,EAIjB,gBAAAgB,kBAJiB,EAKjB,gBAAAiB,sBALiB,EAMjB,gBAAAK,kBANiB,EAOjB,gBAAAoC,wBAPiB,EAQjB,gBAAAzB,sBARiB,EASjB,qBAAA2B,iBATiB,EAUjB,wBAAAvG,mBAViB,EAWjB,wBAAA4G,mBAXiB,EAYjB,sBAAAC,kBAZiB,EAajB,wBAAAC,mBAbiB,EAcjB,iBAAA3G,yBAdiB,EAejB,kCAAAa,4BAfiB,CAArB;AAkBA,QAAM+F,gBAAgB,GAAU,CAC5B,SAAAC,eAD4B,EAE5B,YAAAC,iBAF4B,EAG5B,SAAAC,eAH4B,EAI5B,aAAAC,kBAJ4B,EAK5B,QAAAC,cAL4B,EAM5B,mBAAAC,wBAN4B,EAO5B,eAAAC,oBAP4B,EAQ5B,eAAAC,qBAR4B,EAS5B,SAAAC,eAT4B,EAU5B,QAAAC,cAV4B,EAW5B,OAAAC,eAX4B,EAY5B,OAAAC,aAZ4B,EAa5B,WAAAC,iBAb4B,EAc5B,UAAAC,gBAd4B,EAe5B,QAAAC,cAf4B,EAgB5B,OAAAC,aAhB4B,EAiB5B,eAAAC,oBAjB4B,CAAhC;;QAwCarK,c;;;;AApBb;;YAoBaA;;;;yBAAAA,c;AAAc,O;AAAA,iBAlBnB,SAAA7oD,YAkBmB,EAjBnB,YAAAmzD,gBAiBmB,EAhBnB,QAAArK,WAgBmB,EAfnB,QAAAC,mBAemB,SAdhBkJ,gBAcgB,GAbnB,OAAArwD,UAamB,EAZnB,KAAAonD,QAYmB,IANnB,YAAAmK,gBAMmB,EAvCvB,SAAAjB,eAuCuB,EAtCvB,YAAAC,iBAsCuB,EArCvB,SAAAC,eAqCuB,EApCvB,aAAAC,kBAoCuB,EAnCvB,QAAAC,cAmCuB,EAlCvB,mBAAAC,wBAkCuB,EAjCvB,eAAAC,oBAiCuB,EAhCvB,eAAAC,qBAgCuB,EA/BvB,SAAAC,eA+BuB,EA9BvB,QAAAC,cA8BuB,EA7BvB,OAAAC,eA6BuB,EA5BvB,OAAAC,aA4BuB,EA3BvB,WAAAC,iBA2BuB,EA1BvB,UAAAC,gBA0BuB,EAzBvB,QAAAC,cAyBuB,EAxBvB,OAAAC,aAwBuB,EAvBvB,eAAAC,oBAuBuB,EAHnB,OAAAtxD,UAGmB;;;;+EAAdinD,c,EAAc;AAAA,uBAzDvB,gBAAA6D,oBAyDuB,EAxDvB,iBAAAmF,aAwDuB,EAvDvB,gBAAAhF,gBAuDuB,EAtDvB,gBAAAgB,kBAsDuB,EArDvB,gBAAAiB,sBAqDuB,EApDvB,gBAAAK,kBAoDuB,EAnDvB,gBAAAoC,wBAmDuB,EAlDvB,gBAAAzB,sBAkDuB,EAjDvB,qBAAA2B,iBAiDuB,EAhDvB,wBAAAvG,mBAgDuB,EA/CvB,wBAAA4G,mBA+CuB,EA9CvB,sBAAAC,kBA8CuB,EA7CvB,wBAAAC,mBA6CuB,EA5CvB,iBAAA3G,yBA4CuB,EA3CvB,kCAAAa,4BA2CuB;AA3CK,kBAyBxB,SAAAlsD,YAzBwB,EA0BxB,YAAAmzD,gBA1BwB,EA2BxB,QAAArK,WA3BwB,EA4BxB,QAAAC,mBA5BwB,EAI5B,SAAAmJ,eAJ4B,EAK5B,YAAAC,iBAL4B,EAM5B,SAAAC,eAN4B,EAO5B,aAAAC,kBAP4B,EAQ5B,QAAAC,cAR4B,EAS5B,mBAAAC,wBAT4B,EAU5B,eAAAC,oBAV4B,EAW5B,eAAAC,qBAX4B,EAY5B,SAAAC,eAZ4B,EAa5B,QAAAC,cAb4B,EAc5B,OAAAC,eAd4B,EAe5B,OAAAC,aAf4B,EAgB5B,WAAAC,iBAhB4B,EAiB5B,UAAAC,gBAjB4B,EAkB5B,QAAAC,cAlB4B,EAmB5B,OAAAC,aAnB4B,EAoB5B,eAAAC,oBApB4B,EA8BxB,OAAAtxD,UA9BwB,EA+BxB,KAAAonD,QA/BwB,CA2CL;AAZX,kBAMR,YAAAmK,gBANQ,EA7CZ,gBAAAzG,oBA6CY,EA5CZ,iBAAAmF,aA4CY,EA3CZ,gBAAAhF,gBA2CY,EA1CZ,gBAAAgB,kBA0CY,EAzCZ,gBAAAiB,sBAyCY,EAxCZ,gBAAAK,kBAwCY,EAvCZ,gBAAAoC,wBAuCY,EAtCZ,gBAAAzB,sBAsCY,EArCZ,qBAAA2B,iBAqCY,EApCZ,wBAAAvG,mBAoCY,EAnCZ,wBAAA4G,mBAmCY,EAlCZ,sBAAAC,kBAkCY,EAjCZ,wBAAAC,mBAiCY,EAhCZ,iBAAA3G,yBAgCY,EA/BZ,kCAAAa,4BA+BY,EA3BZ,SAAAgG,eA2BY,EA1BZ,YAAAC,iBA0BY,EAzBZ,SAAAC,eAyBY,EAxBZ,aAAAC,kBAwBY,EAvBZ,QAAAC,cAuBY,EAtBZ,mBAAAC,wBAsBY,EArBZ,eAAAC,oBAqBY,EApBZ,eAAAC,qBAoBY,EAnBZ,SAAAC,eAmBY,EAlBZ,QAAAC,cAkBY,EAjBZ,OAAAC,eAiBY,EAhBZ,OAAAC,aAgBY,EAfZ,WAAAC,iBAeY,EAdZ,UAAAC,gBAcY,EAbZ,QAAAC,cAaY,EAZZ,OAAAC,aAYY,EAXZ,eAAAC,oBAWY,EASR,OAAAtxD,UATQ;AAYW,O;AAHT,K;;;;;2BAGLinD,c,EAAc;cApB1B,OAAA5oD,QAoB0B;eApBjB;AACNC,iBAAO,GACH,SAAAF,YADG,EAEH,YAAAmzD,gBAFG,EAGH,QAAArK,WAHG,EAIH,QAAAC,mBAJG,SAKAkJ,gBALA,GAMH,OAAArwD,UANG,EAOH,KAAAonD,QAPG,EADD;AAUNlnD,sBAAY,YACL0mD,YADK,CAVN;AAaNzmD,iBAAO,GACH,YAAAoxD,gBADG,SAEA3K,YAFA,EAGAyJ,gBAHA,GAIH,OAAArwD,UAJG;AAbD,S;AAoBiB,Q;;;;;;;;;;;;;;;;;;;;;;ACtG3B;AAAA;AAAA;;AAOA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACPA;AAMI;AAAA;AAAA;AAAA;AAAS,iBAAAoU,MAAA;AAAsB,iBAAF,cAAS,KAAP;AAAY,SAA3C;AAEA;AACJ;;;;;;;AAJI;AAHA;AAMU;AAAA;;;;;;;;;;;QDWD87C,mB;;;;;AALb;AAAA;;AAAA;;;AAMI;;AACgB,iBAAAp8C,OAAA,GAA0B,EAA1B;AAChB;;AACiB,iBAAAM,MAAA,GAAS,IAAI,OAAAssC,YAAJ,EAAT;AATrB;AAkBC;;;;gCALkB;AAAA;;AACX,eAAK5+C,OAAL,CAAa,OAAb,EAAsB,YAAM;AACxB,oBAAI,CAAC2yB,IAAL,GAAY,KAAZ;AACH,WAFD;AAGH;;;;MAZoC,OAAA70B,a;;AALzC;;;mDAKaswD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,oC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,qO;AAAA;AAAA;ACnBhC;AAUA;AAAwD;AAAA;AAAA,aAAsB,OAAtB,EAAsB;AAAA,8BAAwB,IAAApO,KAAA,EAAxB,GAAkC,EAAlC;AAAoC,WAA1D,EAA0D,KAA1D,EAA0D,kBAA1D;AACpD;AACJ;;;;AARI;AAMgC;AAAA;AACtB;AAAA;;;;;;oEDQDoO,mB;;;;2BAAAA,mB,EAAmB;cAL/B,OAAAjN,SAK+B;eALrB;AACPljD,kBAAQ,EAAE,eADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKqB,Q;;gBAE3B,OAAA1gD;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEvBL;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACYI;AACI;AACJ;;;;;;;;;;;;QDPS+M,kB;;;;;AALb;AAAA;;AAAA;;;AAcI;;AACiB,iBAAAqB,WAAA,GAAc,IAAI,OAAA9Q,YAAJ,EAAd;AAfrB;AAgCC;;;;oCAbsB7/C,O,EAAsB;AACrC;AACA,cAAIA,OAAO,CAAC4wD,SAAR,IAAqB,KAAKA,SAA9B,EAAyC;AACrC,iBAAKC,UAAL;AACH;AACJ;;;qCAEmB;AAChB;AACA,cAAI,KAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiB3wD,aAAzC,EAAwD;AACpD,iBAAK2wD,WAAL,CAAiB3wD,aAAjB,CAA+B6sD,KAA/B;AACH;AACJ;;;;MA1BmC,OAAAjuD,a;;AALxC;;;kDAKauwD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,kC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAAoC;AAAA,mBAAS,IAAAuB,UAAA,EAAT;AAAqB,WAArB,EAAsB,OAAtB,EAAsB;AAAA,mBAAU,IAAAA,UAAA,EAAV;AAAsB,WAA5C;AAChC;AACI;AACJ;AACA;AACI;AAEI;AAAA;AAAA,aAAmB,eAAnB,EAAmB;AAAA,mBACF,IAAAF,WAAA,aADE;AACsB,WADzC;AAFJ;AAOJ;AACA;AAGJ;;;;AAdkB;AAAA;AAKN;AAAA,8CAAmB,aAAnB,EAAmB,8BAAnB;AAMY;AAAA;;;;;;mEDLXrB,kB;;;;2BAAAA,kB,EAAkB;cAL9B,OAAAlN,SAK8B;eALpB;AACPljD,kBAAQ,EAAE,aADH;AAEPmjD,qBAAW,EAAE,4BAFN;AAGPC,mBAAS,EAAE,CAAC,4BAAD;AAHJ,S;AAKoB,Q;;gBAE1B,OAAA1gD,K;iBAAM,O;;;gBAEN,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAoD,S;iBAAU,O,EAAS;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AEpBxB;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACAI;AAA4D;AAAc;;;;;AAAd;AAAA;;;;;;AADhE;AACI;AACJ;;;;;;;;AAFsC;AACZ;AAAA,kDAAqC,UAArC,EAAqC,GAArC;;;;;;AAGtB;;;;;;AAAK;;;;QDII4J,mB;;;;;;;4BAIU;AACf,cAAI,CAAC,KAAK90C,IAAV,EAAgB;AACZ,mBAAO,IAAP;AACH;;AACD,cAAMvQ,KAAK,GAAG,KAAKuQ,IAAL,CAAUpc,IAAV,CAAeiG,KAAf,CAAqB,GAArB,CAAd;AACA,iBAAO4F,KAAK,CAAC1F,MAAN,GAAe,CAAf,aACE0F,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CADF,SACgBA,KAAK,CAACA,KAAK,CAAC1F,MAAN,GAAe,CAAhB,CAAL,CAAwB,CAAxB,CADhB,IAED,KAAKiW,IAAL,CAAUpc,IAAV,CAAe+J,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAFN;AAGH;;;;;;AAjBL;;;uBAKamnD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,oC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACRhC;AAGA;;;;AAHyB;;;;;;;;;;2BDQZA,mB,EAAmB;cAL/B,OAAAnN,SAK+B;eALrB;AACPljD,kBAAQ,EAAE,eADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKqB,Q;;gBAE3B,OAAA1gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAAA;AAAA;;AAOA;AAAA;AAAA;;AAIA;AAAA;AAAA;AA0CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDa,YAAA8Q,mBAAA,GAAsB,UAC/Bq+C,YAD+B,EAE/BC,QAF+B,EAGmB;AAClD,UAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;AAAA,0BAAyBH,YAAzB,eAA0CG,OAA1C;AAAA,OAApB,CADkD,CAElD;;;AACA,UAAMx8C,OAAO,GAAG,QAAAnC,YAAA,CAAa0+C,WAAW,CAAC,SAAD,CAAxB,EAAqC,QAAAz+C,KAAA,EAArC,CAAhB;AACA,UAAMkF,OAAO,GAAG,QAAAnF,YAAA,CAAa0+C,WAAW,CAAC,SAAD,CAAxB,EAAqC,QAAAz+C,KAAA,EAArC,CAAhB;AACA,UAAM8N,KAAK,GAAG,QAAA/N,YAAA,CAAa0+C,WAAW,CAAC,OAAD,CAAxB,EAAmC,QAAAz+C,KAAA,EAAnC,CAAd;AACA,UAAM2+C,KAAK,GAAG,QAAA5+C,YAAA,CAAa0+C,WAAW,CAAC,OAAD,CAAxB,CAAd;AACA,UAAM76C,GAAG,GAAiB,CACtB,QAAAD,EAAA,CAAGzB,OAAH,EAAY,UAACrX,KAAD,EAAkDkW,MAAlD;AAAA,eACP,MAAD,OAAC,CAAD,kBACOlW,KADP,CAAC,sBAEI2zD,QAFJ,EAEe,gBAAAI,WAAA,CAAsB/zD,KAAK,CAAC2zD,QAAD,CAA3B,EAAuCl2C,OAAvC,EAFf,EADO;AAAA,OAAZ,CADsB,EAMtB,QAAA3E,EAAA,CAAGuB,OAAH,EAAY,UAACra,KAAD,EAAkDkW,MAAlD;AAAA,eAAgG,MAAD,OAAC,CAAD,kBACpGlW,KADoG,CAAC,sBAEvG2zD,QAFuG,EAE5F,gBAAAr7C,YAAA,CAAa+B,OAAb,CAAqBnE,MAAM,CAACmD,OAA5B,CAF4F,EAAhG;AAAA,OAAZ,CANsB,EAUtB;AACA,cAAAP,EAAA,CAAGmK,KAAH,EAAU,UAACjjB,KAAD,EAAakW,MAAb;AAAA,eAAwD,MAAD,OAAC,CAAD,kBAC1DlW,KAD0D,CAAC,sBAE7D2zD,QAF6D,EAElD,gBAAAr7C,YAAA,CAAa2K,KAAb,CAA6B/M,MAAM,CAACmD,OAApC,CAFkD,EAAxD;AAAA,OAAV,CAXsB,EAetB,QAAAP,EAAA,CAAGg7C,KAAH,EAAU;AAAA,eAAO,MAAD,OAAC,CAAD,kBACT,QAAI,CAAC9zD,KADI,CAAC,sBAEZ2zD,QAFY,EAED,gBAAAr7C,YAAA,CAAaC,KAAb,EAFC,EAAP;AAAA,OAAV,CAfsB,CAA1B;;AAoBA,UAAMy7C,UAAU,GAAG,SAAbA,UAAa,CAACh0D,KAAD,EAAmB;AAClC,YAAI,CAACA,KAAL,EAAY;AACR2K,iBAAO,CAACspD,IAAR,CAAa,yCAAb,EAAwDN,QAAxD;AACH;;AACD,eAAO,gBAAAI,WAAA,CAAsB/zD,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAG2zD,QAAH,CAA3B,CAAP;AACH,OALD;;AAMA,UAAMO,UAAU,GAAG,QAAAj6C,cAAA,CACf+5C,UADe,EAEf,oBAAAG,aAFe,CAAnB;AAIA,UAAMC,kBAAkB,GAAG,QAAAn6C,cAAA,CACvB+5C,UADuB,EAEvB,oBAAAK,qBAFuB,CAA3B;AAIA,UAAMC,QAAQ,GAAG,QAAAr6C,cAAA,CACb+5C,UADa,EAEb,oBAAAO,mBAFa,CAAjB;AAIA,UAAMC,UAAU,GAAG,QAAAv6C,cAAA,CACf+5C,UADe,EAEf,oBAAAS,eAFe,CAAnB;AAIA,aAAO;AACHp9C,eAAO,EAAPA,OADG;AAEHgD,eAAO,EAAPA,OAFG;AAGH4I,aAAK,EAALA,KAHG;AAIH6wC,aAAK,EAALA,KAJG;AAKH/6C,WAAG,EAAHA,GALG;AAMHmB,iBAAS,EAAE;AACPG,iBAAO,EAAE65C,UADF;AAEP/5C,yBAAe,EAAEi6C,kBAFV;AAGPnxC,eAAK,EAAEqxC,QAHA;AAIP72C,iBAAO,EAAE+2C,UAJF;AAKP/oC,eAAK,EAAEuoC;AALA;AANR,OAAP;AAcH,KAlEY;;;;;;;;;;;;;;;;;;;;;ACvGb;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;AAMA;;;;;;;;;;AAQa,YAAAz8C,mBAAA,GAAsB,UACjC3B,OADiC,EACf8+C,YADe,EAEjCC,MAFiC;AAAA,aAEmE/+C,OAAO,CAACG,IAAR,CACpG,UAAAC,MAAA,CAAO0+C,YAAY,CAACr9C,OAApB,CADoG,EAEpG,YAAAu9C,OAAA,CAAQ,UAAC1+C,MAAD;AAAA,eAAYy+C,MAAM,CAACz+C,MAAD,CAAlB;AAAA,OAAR,CAFoG,EAGpG,YAAApL,GAAA,CAAI,UAACm5B,QAAD;AAAA,eAAwBywB,YAAY,CAACr6C,OAAb,CAAqB;AAAEhB,iBAAO,EAAE4qB;AAAX,SAArB,CAAxB;AAAA,OAAJ,CAHoG,EAIpG,YAAAjhB,UAAA,CAAW,UAAAV,GAAG,EAAI;AAChB,eAAO,OAAAY,EAAA,CAAGwxC,YAAY,CAACzxC,KAAb,CAAmB;AAAE5J,iBAAO,EAAEiJ;AAAX,SAAnB,CAAH,CAAP;AACD,OAFD,CAJoG,CAFnE;AAAA,KAAtB;;;;;;;;;;;;;;;;;;;;AC7Bb;;AACA;;;;;QAIahK,Y;AAqCT,4BACWu8C,SADX,EAEYC,QAFZ,EAGYC,UAHZ,EAIYC,QAJZ,EAKW/xC,KALX,EAKwB;AAAA;;AAAA;;AAJb,aAAA4xC,SAAA,GAAAA,SAAA;AACC,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACD,aAAA/xC,KAAA,GAAAA,KAAA;AAjCX;;;;;AAIA,aAAAyJ,MAAA,GAAS,UACLrS,OADK;AAAA,iBACkB,IAAI/B,YAAJ,CACvB,QAAI,CAACu8C,SADkB,EAEvB,QAAI,CAACC,QAFkB,EAGvB,CAAC,CAACz6C,OAHqB,EAIvB,CAACA,OAAD,GAAWnT,SAAX,GAAuBmT,OAJA,CADlB;AAAA,SAAT;;AAQA,aAAAoD,OAAA,GAAU;AAAA,cAACpD,OAAD,uEAAqB,QAAI,CAACA,OAA1B;AAAA,iBACN,IAAI/B,YAAJ,CACI,IADJ,EAEI,KAFJ,EAGI,CAAC,CAAC+B,OAAF,IAAa,QAAI,CAAC06C,UAHtB,EAII,CAAC16C,OAAD,GAAWnT,SAAX,GAAuBmT,OAJ3B,CADM;AAAA,SAAV;;AAyBA,aAAA46C,OAAA,GAAU;AAAA,iBAAM,CAAC,QAAI,CAACC,SAAL,EAAD,IAAqB,CAAC,QAAI,CAACC,OAAL,EAA5B;AAAA,SAAV;;AAEA,aAAAC,SAAA,GAAY;AAAA,iBAAM,CAAC,QAAI,CAACH,OAAL,EAAD,IAAmB,CAAC,QAAI,CAACJ,SAA/B;AAAA,SAAZ;;AAEA,aAAAK,SAAA,GAAY;AAAA,iBAAM,QAAI,CAACH,UAAX;AAAA,SAAZ;;AAEA,aAAAI,OAAA,GAAU;AAAA,iBAAM,QAAI,CAACL,QAAX;AAAA,SAAV;;AAEA,aAAAO,UAAA,GAAa;AAAA,iBAAM,CAAC,QAAI,CAACH,SAAL,EAAD,IAAqB,CAAC,QAAI,CAACL,SAAjC;AAAA,SAAb;;AAEO,aAAAnpD,QAAA,GAAW;AAAA,iBACd,mBAAY,QAAI,CAACmpD,SAAjB,wBAAwC,QAAI,CAACE,UAA7C,gBAA6D,QAAI,CAACC,QAAlE,6BACU,QAAI,CAACF,QADf,cAC2B,QAAI,CAAC7xC,KADhC,CADc;AAAA,SAAX;AAZN;;;;4BAfiB;AACd,iBAAO,KAAK+xC,QAAZ;AACH;;;4BAEyB;AACtB,iBAAO,KAAKA,QAAZ;AACH;;;;;;AAnCL;;AACW,iBAAAz8C,KAAA,GAAQ;AAAA,aAAS,IAAID,YAAJ,CAAoB,KAApB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyCpR,SAAzC,CAAT;AAAA,KAAR;;AAEA,iBAAAmT,OAAA,GAAU,UAAIA,OAAJ;AAAA,aACb,IAAI/B,YAAJ,CAAiB,KAAjB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC+B,OAArC,CADa;AAAA,KAAV;;AAGA,iBAAA4I,KAAA,GAAQ,UAAIA,KAAJ,EAAmB9I,eAAnB;AAAA,aACX,IAAI7B,YAAJ,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,KAAjC,EAAwC6B,eAAxC,EAAyD8I,KAAzD,CADW;AAAA,KAAR;AAuDX;;;;;;AAIa,YAAA8wC,WAAA,GAAc,UAAgBt2C,OAAhB,EAAkD;AACzE,UAAIA,OAAO,YAAYnF,YAAvB,EAAqC;AACjC,eAAOmF,OAAP;AACH,OAFD,MAEO;AACH,YAAI,CAACA,OAAL,EAAc;AACV,iBAAOnF,YAAY,CAACC,KAAb,EAAP;AACH,SAFD,MAEO;AACH,iBAAO,IAAID,YAAJ,CACHmF,OAAO,CAACo3C,SAAR,IAAqB,KADlB,EAEHp3C,OAAO,CAACq3C,QAAR,IAAoB,KAFjB,EAGHr3C,OAAO,CAACs3C,UAAR,IAAsB,KAHnB,EAIHt3C,OAAO,CAACu3C,QAJL,EAKHv3C,OAAO,CAACwF,KALL,CAAP;AAOH;AACJ;AACJ,KAhBY;;;;;;;;;;;;;;;;;;;;;ACtEb;AAAA;AAAA;;AAEa,YAAAkxC,aAAA,GAAgB,UAAIn0D,KAAJ;AAAA,aAC3B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBqa,OADK;AAAA,KAAhB;;AAEA,YAAAg6C,qBAAA,GAAwB,UAAIr0D,KAAJ;AAAA,aACnC,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBma,eADa;AAAA,KAAxB;;AAEA,YAAAs6C,eAAA,GAAkB,UAAIz0D,KAAJ;AAAA,aAC7B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsB60D,SADO;AAAA,KAAlB;;AAEA,YAAAS,eAAA,GAAkB,UAAIt1D,KAAJ;AAAA,aAC7B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBk1D,SAAtB,EAD6B;AAAA,KAAlB;;AAEA,YAAAX,mBAAA,GAAsB,UAACv0D,KAAD;AAAA,aACjC,gBAAA+zD,WAAA,CAAiB/zD,KAAjB,EAAwBijB,KADS;AAAA,KAAtB;;AAEA,YAAAsyC,aAAA,GAAgB,UAAIv1D,KAAJ;AAAA,aAC3B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBm1D,OAAtB,EAD2B;AAAA,KAAhB;;AAEA,YAAAK,eAAA,GAAkB,UAAIx1D,KAAJ;AAAA,aAC7B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBo1D,SAAtB,EAD6B;AAAA,KAAlB;;AAEA,YAAAK,aAAA,GAAgB,UAAIz1D,KAAJ;AAAA,aAC3B,gBAAA+zD,WAAA,CAAe/zD,KAAf,EAAsBi1D,OAAtB,EAD2B;AAAA,KAAhB;;;;;;;;;;;;;;;;;;;;;AChBb;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAKa,YAAAS,mBAAA,GAAsB,YAAM;AACvC,UAAMC,UAAU,GAAG,IAAI,OAAAr1C,OAAJ,EAAnB;AACA,aAAO;AACLq1C,kBAAU,EAAVA,UADK;AAEL//C,eAAO,EAAE,IAAI,UAAAggD,OAAJ,CAAYD,UAAZ;AAFJ,OAAP;AAID,KANY;AAQb;;;;;AAGa,YAAAE,mBAAA,GAAsB,UACjC3/C,MADiC,EAEjC4/C,MAFiC,EAGjCH,UAHiC,EAIjCvuC,OAJiC,EAO3B;AACN,UAAIxE,MAAJ;AACAkzC,YAAM,CACH//C,IADH,CACQ,YAAAsH,IAAA,CAAK,CAAL,CADR,EAEGna,SAFH,CAEa,UAAAkQ,IAAI,EAAI;AACjBwP,cAAM,GAAGxP,IAAT;AACD,OAJH,EAFM,CAON;;AACAuiD,gBAAU,CAACviD,IAAX,CAAgB8C,MAAM,CAACmB,OAAP,CAAgB+P,OAAO,CAAC/N,OAAR,IAAmB,EAAnC,CAAhB;AAEA08C,YAAM,CAACnzC,MAAD,CAAN,CAAeozC,WAAf;AACAD,YAAM,CAACnzC,MAAD,CAAN,CAAeqzC,aAAf,CAA6B//C,MAAM,CAACmE,OAAP,CAAe;AAAEhB,eAAO,EAAE+N,OAAO,CAACgD;AAAnB,OAAf,CAA7B;AACD,KAnBY;AAqBb;;;;;AAGa,YAAA8rC,iBAAA,GAAoB,UAC/BhgD,MAD+B,EAE/B4/C,MAF+B,EAG/BH,UAH+B,EAI/BvuC,OAJ+B,EAOzB;AACN,UAAIxE,MAAJ;AACAkzC,YAAM,CACH//C,IADH,CACQ,YAAAsH,IAAA,CAAK,CAAL,CADR,EAEGna,SAFH,CAEa,UAAAkQ,IAAI,EAAI;AACjBwP,cAAM,GAAGxP,IAAT;AACD,OAJH,EAFM,CAON;;AACAuiD,gBAAU,CAACviD,IAAX,CAAgB8C,MAAM,CAACmB,OAAP,CAAgB+P,OAAO,CAAC/N,OAAR,IAAmB,EAAnC,CAAhB;AAEA08C,YAAM,CAACnzC,MAAD,CAAN,CAAeozC,WAAf;AACAD,YAAM,CAACnzC,MAAD,CAAN,CAAeqzC,aAAf,CAA6B//C,MAAM,CAAC+M,KAAP,CAAa;AAAE5J,eAAO,EAAE+N,OAAO,CAACnE;AAAnB,OAAb,CAA7B;AACD,KAnBY;;;;;;;;;;;;;;;;;;;;;;;;;AC/Cb;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;AAOA;AAAA;AAAA;;AAMa,YAAAsI,iBAAA,GAAoB,UAACvrB,KAAD;AAAA,aAA2BA,KAAK,CAACm2D,KAAjC;AAAA,KAApB;;AAEA,YAAAC,kBAAA,GAAqB,QAAAlhD,YAAA,CAAa,+BAAb,EAA8C,QAAAC,KAAA,EAA9C,CAArB;AAEA,YAAAqW,mBAAA,GAAsB,kBAAAnW,mBAAA,CAA0D,OAA1D,EAAmE,OAAnE,CAAtB;AAEA,YAAAsW,sBAAA,GAAyB,kBAAAtW,mBAAA,CAA0D,eAA1D,EAA2E,OAA3E,CAAzB;AAGA,YAAAwW,uBAAA,GAA0B,kBAAAxW,mBAAA,CAA0D,aAA1D,EAAyE,OAAzE,CAA1B;AAEA,YAAA0W,kBAAA,GAAqB,kBAAA1W,mBAAA,CAA0D,gBAA1D,EAA4E,MAA5E,CAArB;AAEA,YAAA4W,eAAA,GAAkB,kBAAA5W,mBAAA,CAA0D,aAA1D,EAAyE,MAAzE,CAAlB;AAEA,YAAAghD,wBAAA,GAA2B,QAAAp8C,cAAA,CAAe,QAAAsR,iBAAf,EACpC,QAAAC,mBAAA,CAAoBtR,SAApB,CAA8BC,eADM,CAA3B;AAGA,YAAAgS,mBAAA,GAAsB,kBAAA9W,mBAAA,CAA0D,sBAA1D,EAAkF,MAAlF,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;AC/Bb;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;QCDaihD,mB;AAEX,mCAAoBC,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;iCAEkB51D,G,EAAawH,K,EAAe;AAC7CsW,sBAAY,CAACkvB,OAAb,WAAwB,KAAK4oB,MAA7B,cAAuC51D,GAAvC,GAA8CwH,KAA9C;AACD;;;iCAEqBxH,G,EAAW;AAC/B,iBAAO8d,YAAY,CAACC,OAAb,WAAwB,KAAK63C,MAA7B,cAAuC51D,GAAvC,EAAP;AACD;;;oCAEqBA,G,EAAa;AACjC8d,sBAAY,CAACmF,UAAb,WAA2B,KAAK2yC,MAAhC,cAA0C51D,GAA1C;AACD;;;;;;AAfH;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;QAKa61D,a;;;;AAHb;;YAGaA;;;;yBAAAA,a;AAAa,O;AAAA,gBAFf,EAEe;;;;;2BAAbA,a,EAAa;cAHzB,OAAAr2D,QAGyB;eAHhB;AACRC,iBAAO,EAAE;AADD,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACL1B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACZA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;ACSQ;AAAqD;AAAQ;;;;;AAAR;AAAA;;;;;;AAW7C;;;;;;AACA;AAAsC;AAAsC;;;;;AAAtC;AAAA;;;;;;;;AAT9C;AACI;AACI;AAAA;AAAA;AAAA;AAAA,oCAAyB,IAAzB,GAAgC,MAAH,QAAG,CAAH,OAAG,CAAhC;AAA6B,SAA7B,EAA8C,UAA9C,EAA8C;AAAA;AAAA;AAAA;AAAA,oCAClB,IADkB,GACX,MAAH,QAAG,CAAH,OAAG,CADW;AACd,SADhC;AAKA;AACA;AACA;AACJ;AACJ;;;;;AAPQ;AAAA,uDAAkC,QAAlC,EAAkC,cAAlC;AAGA;AAAA;AACiB;AAAA;AACE;AAAA;;;;QDqBtBq2D,sB;AAZb;AAAA;;AAaI;AACgB,aAAAC,KAAA,GAAQ,SAAR;AAKhB;;AACiB,aAAArvD,KAAA,GAAQ,IAAI,OAAAm7C,YAAJ,EAAR;AACjB;;AACgB,aAAAmU,mBAAA,GAAgC,IAAhC;AAET,aAAA1xD,IAAA,GAAe,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAnC,CAxBX,CA0BI;;AACA;;AACO,aAAAjG,MAAA,GAAS,CAAT;AACP;;AACO,aAAAiuD,UAAA,GAAa,CAAC,MAAd;AACP;;AACO,aAAAC,UAAA,GAAa,MAAb;AACP;;AACO,aAAAC,SAAA,GAA0B,EAA1B;AACP;;AACO,aAAAC,UAAA,GAAa,UAAAroD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB0B,UAApB,CAA+B,WAA/B,CAAb;AACP;;AACO,aAAAywD,YAAA,GAAe,EAAf;AAKP;;AACQ,aAAAC,UAAA,GAAa,KAAb;AACR;;AACQ,aAAAC,YAAA,GAAe,WAAf;AA+LX;;;;mCAvLkB;AACX,eAAKC,aAAL;AACA,eAAKC,qBAAL;AACH;;;oCAEkBz0D,O,EAAsB;AACrC,cAAIA,OAAO,CAACykB,OAAZ,EAAqB;AACjB,iBAAKiwC,aAAL;AACH;;AACD,cAAI10D,OAAO,CAAC20D,QAAZ,EAAsB;AAClB,iBAAKH,aAAL;AACH;AACJ;AAED;;;;gCACexpD,I,EAAkB;AAC7B,eAAK1I,IAAL,GAAY0I,IAAI,CAACxF,KAAjB;;AACA,cAAI,KAAKslD,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe,KAAKxoD,IAApB;AACH;;AACD,eAAKkyD,aAAL;AACH;AAED;;;;;;qCAGiB;AAEb,cAAI,CAAC,KAAKlyD,IAAV,EAAgB;AACZ;AACH;;AACD,cAAMylB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,OAAjC,CAAZ;AACA,cAAMmvB,KAAK,GAAG,IAAI,UAAA3nB,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAd;AACA,cAAMA,IAAI,GAAG64B,KAAK,CAACnvB,YAAN,CAAmB,OAAnB,CAAb;;AACA,cAAI1J,IAAI,CAACmjB,KAAT,EAAgB;AACZ,gBAAMmvC,UAAU,GAAGtyD,IAAI,CAAC82B,QAAL,CAAcrR,GAAd,EAAmB,QAAnB,EAA6B,QAA7B,CAAnB;;AACA,gBAAI,KAAK/hB,MAAL,KAAgB4uD,UAApB,EAAgC;AAC5B,mBAAK5uD,MAAL,GAAc4uD,UAAd;AACA,mBAAKlwD,KAAL,CAAWq8C,IAAX,CAAgB,KAAK/6C,MAArB;AACH;;AACD,iBAAKwuD,aAAL;AACH;AACJ;AAED;;;;;;wCAGoB;AAChB,cAAI,KAAK/vC,OAAT,EAAkB;AACd;AACA,gBAAI,KAAKA,OAAL,CAAaxS,IAAjB,EAAuB;AACnB,kBAAMkpB,KAAK,GAAG,IAAI,UAAA3nB,MAAJ,CAAW;AAAClR,oBAAI,EAAE,KAAKmiB,OAAL,CAAaxS;AAApB,eAAX,CAAd;AACA,mBAAKA,IAAL,GAAYkpB,KAAK,CAACnvB,YAAN,CAAmB,KAAnB,CAAZ;AAAsC;AACtC,kBAAM6oD,KAAK,GAAG,UAAA9oD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,OAAjC,CAAd;AACA,kBAAM1J,IAAI,GAAG,KAAK2P,IAAL,CAAUjG,YAAV,CAAuB,OAAvB,CAAb;AACA,mBAAKioD,UAAL,GAAkB3xD,IAAI,CAAC82B,QAAL,CAAcy7B,KAAd,EAAqB,QAArB,EAA+B,QAA/B,CAAlB;AACH,aAND,MAMO,IAAI,KAAK5iD,IAAT,EAAe;AAClB,mBAAKA,IAAL,GAAY,IAAZ;AACA,mBAAKgiD,UAAL,GAAkB,CAAC,MAAnB;AACH,aAXa,CAYd;;;AACA,gBAAI,KAAKxvC,OAAL,CAAavS,EAAjB,EAAqB;AACjB,kBAAMipB,MAAK,GAAG,IAAI,UAAA3nB,MAAJ,CAAW;AAAClR,oBAAI,EAAE,KAAKmiB,OAAL,CAAavS;AAApB,eAAX,CAAd;;AACA,mBAAKA,EAAL,GAAUipB,MAAK,CAACnvB,YAAN,CAAmB,KAAnB,CAAV;;AACA,kBAAM6oD,MAAK,GAAG,UAAA9oD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,OAAjC,CAAd;;AACA,kBAAM1J,KAAI,GAAG,KAAK4P,EAAL,CAAQlG,YAAR,CAAqB,OAArB,CAAb;;AACA,mBAAKkoD,UAAL,GAAkB5xD,KAAI,CAAC82B,QAAL,CAAcy7B,MAAd,EAAqB,QAArB,EAA+B,QAA/B,CAAlB;AACH,aAND,MAMO,IAAI,KAAK3iD,EAAT,EAAa;AAChB,mBAAKA,EAAL,GAAU,IAAV;AACA,mBAAKgiD,UAAL,GAAkB,MAAlB;AACH;;AACD,gBAAI,KAAKzvC,OAAL,CAAa8vC,YAAjB,EAA+B;AAC3B,mBAAKA,YAAL,GAAoB,KAAK9vC,OAAL,CAAa8vC,YAAb,IAA6B,WAAjD;AACH;;AACD,gBAAI,KAAK9vC,OAAL,CAAa6vC,UAAjB,EAA6B;AACzB,mBAAKA,UAAL,GAAkB,KAAK7vC,OAAL,CAAa6vC,UAAb,IAA2B,KAA7C;AACA,mBAAKG,qBAAL;AACH,aA7Ba,CA8Bd;;;AACA,iBAAKD,aAAL;AACH;AACJ;AAED;;;;;;wCAGqB;AACjB,cAAI,CAAC,KAAKlyD,IAAV,EAAgB;AACZ;AACH;;AACD,cAAMA,IAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBiB,QAApB,CAA6B;AAAEo3B,kBAAM,EAAG,KAAKv0B;AAAhB,WAA7B,CAAb;AACA,cAAM2lC,MAAM,GAAG,IAAI,UAAAn4B,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAf;AACA,cAAIE,KAAK,GAAGF,IAAI,CAACY,QAAL,CAAc;AAAEuD,eAAG,EAAE;AAAP,WAAd,EAA0BvD,QAA1B,CAAmC;AAAEkE,mBAAO,EAAE;AAAX,WAAnC,EAAmD2M,aAAnD,CAAiE;AAAE0mB,iBAAK,EAAE;AAAT,WAAjE,CAAZ;AACA,cAAMq6B,IAAI,GAAG,IAAI,UAAAthD,MAAJ,CAAW;AAAClR,gBAAI,EAAEE,KAAK,CAACyJ;AAAb,WAAX,CAAb;AACA,cAAM6hB,GAAG,GAAGgnC,IAAI,CAAC3xD,QAAL,CAAc;AAAEs3B,iBAAK,EAAE;AAAT,WAAd,EAA4B/J,UAA5B,CAAuC,OAAvC,EAAgDvtB,QAAhD,CAAyD;AAAE2uB,gBAAI,EAAE;AAAR,WAAzD,EAAsEpB,UAAtE,CAAiF,MAAjF,CAAZ;AACA,eAAKyjC,SAAL,GAAiB,EAAjB;;AACA,iBAAO3xD,KAAK,CAACg3B,YAAN,CAAmB1L,GAAnB,KAA2BtrB,KAAK,CAACi8B,UAAN,CAAiB3Q,GAAjB,EAAsB,KAAtB,CAAlC,EAAgE;AAC5D,iBAAKqmC,SAAL,CAAehqD,IAAf,CAAoB;AAChB3E,mBAAK,EAAEhD,KAAK,CAACyJ,EADG;AAEhBsC,qBAAO,EAAE/L,KAAK,CAACoB,UAAN,CAAiB,GAAjB,CAFO;AAGhB+nC,oBAAM,EAAG,KAAKqoB,mBAAL,IAA4BroB,MAAM,CAAClN,UAAP,CAAkBj8B,KAAlB,EAAyB,KAAzB,CAHrB;AAIhBuyD,uBAAS,EAAE,CAACzyD,IAAI,CAACm8B,UAAL,CAAgBj8B,KAAhB,EAAuB,OAAvB,CAJI;AAKhB6H,mBAAK,EAAE,KAAKsqD,QAAL,GAAgB,KAAKA,QAAL,CAAcnyD,KAAK,CAACoB,UAAN,CAAiB,YAAjB,CAAd,KAAiD,CAAjE,GAAqE,CAL5D;AAMhBi4B,sBAAQ,EAAE,CAAC,KAAK5pB,IAAL,GAAYzP,KAAK,CAACg3B,YAAN,CAAmB,KAAKvnB,IAAxB,EAA8B,KAA9B,CAAZ,GAAmD,KAApD,MAA+D,KAAKC,EAAL,GAAU1P,KAAK,CAACi3B,WAAN,CAAkB,KAAKvnB,EAAvB,EAA2B,KAA3B,CAAV,GAA8C,KAA7G,CANM;AAOhB2iD,mBAAK,EAAE,UAAA9oD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBu8B,UAApB,CAA+Bj8B,KAA/B,EAAsC,KAAtC;AAPS,aAApB;AASAA,iBAAK,GAAGA,KAAK,CAACW,QAAN,CAAe;AAAE2uB,kBAAI,EAAG;AAAT,aAAf,CAAR;AACH;;AACD,eAAKsiC,UAAL,GAAkB9xD,IAAI,CAACsB,UAAL,CAAgB,KAAK2wD,YAArB,CAAlB;AACH;AAED;;;;;;gDAGgC;AAC5B,cAAIjyD,IAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,MAAjC,CAAX;AACA,eAAKqoD,YAAL,GAAoB,EAApB;;AACA,eAAK,IAAI1zD,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,CAApB,EAAuBA,IAAC,EAAxB,EAA4B;AACxB,iBAAK0zD,YAAL,CAAkBlqD,IAAlB,CAAuB7H,IAAI,CAACsB,UAAL,CAAgB,KAAK0wD,UAArB,CAAvB;AACAhyD,gBAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAE2uB,kBAAI,EAAG;AAAT,aAAd,CAAP;AACH;AACJ;AAED;;;;;;;;oCAKmBtsB,K,EAAa;AAAA;;AAC5B,cAAI,KAAKwvD,aAAT,EAAwB;AACpB92D,wBAAY,CAAC,KAAK82D,aAAN,CAAZ;AACH;;AACD,eAAKA,aAAL,GAA0Bv2D,UAAU,CAAC,YAAM;AACvC,gBAAMw2D,UAAU,GAAG,QAAI,CAACjvD,MAAL,GAAcR,KAAjC;AACA,gBAAMuiB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,gBAAMI,IAAI,GAAGylB,GAAG,CAAC5kB,QAAJ,CAAa;AAAEo3B,oBAAM,EAAG06B,UAAX;AAAuBnjC,kBAAI,EAAE/J,GAAG,CAACi2B,SAAJ,KAAkB,CAAlB,GAAsB,CAAtB,GAA0B;AAAvD,aAAb,CAAb,CAHuC,CAGgD;;AACvF,gBAAI,QAAI,CAAC/rC,IAAL,IAAa3P,IAAI,CAACk3B,YAAL,CAAkB,QAAI,CAACvnB,IAAvB,EAA6B,OAA7B,CAAjB,EAAwD;AAAE;AAAS;;AACnE,gBAAI,QAAI,CAACC,EAAL,IAAW5P,IAAI,CAACm3B,WAAL,CAAiB,QAAI,CAACvnB,EAAtB,EAA0B,OAA1B,CAAf,EAAmD;AAAE;AAAS;;AAC9D,oBAAI,CAAClM,MAAL,GAAcivD,UAAd;;AACA,oBAAI,CAACvwD,KAAL,CAAWq8C,IAAX,CAAgB,QAAI,CAAC/6C,MAArB;;AACA,oBAAI,CAACwuD,aAAL;;AACA,oBAAI,CAACQ,aAAL,GAAqB,IAArB;AACH,WAVmC,EAUjC,GAViC,CAApC;AAWH;AAED;;;;;;gCAGe;AACX,cAAM1yD,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAb;AACA,cAAM0D,MAAM,GAAG,KAAKA,MAApB;AACA,eAAKA,MAAL,GAAc,UAAA+F,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBk3B,QAApB,CAA6B92B,IAA7B,EAAmC,QAAnC,EAA6C,QAA7C,CAAd;;AACA,cAAI0D,MAAM,KAAK,KAAKA,MAApB,EAA4B;AACxB,iBAAKwuD,aAAL;AACH;;AACD,eAAK9vD,KAAL,CAAWq8C,IAAX,CAAgB,KAAK/6C,MAArB;AACH;AAED;;;;;;;mCAIkBR,K,EAAe;AAC7B,eAAKlD,IAAL,GAAYkD,KAAZ;AACA,eAAK0vD,UAAL;AACA,eAAKV,aAAL;AACH;AAED;;;;;;;yCAIwBl2D,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;;;;AA5OL;;;uBAYaw1D,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,sC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,uCARpB,CACP;AACI5f,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAM4I,sBAAN;AAAA,SAAX,CAFjB;AAGI3I,aAAK,EAAE;AAHX,OADO,CAQoB,GAF9B,uBAE8B,C;AAF9B,e;AAAA,a;AAAA,sa;AAAA;AAAA;AC1CL;AACI;AACI;AAAoE;AAAA,mBAAS,IAAAgK,WAAA,CAAY,IAAC,CAAb,CAAT;AAAwB,WAAxB,EAAyB,UAAzB,EAAyB;AAAA,mBAAa,IAAAA,WAAA,CAAY,IAAC,CAAb,CAAb;AAA4B,WAArD;AAChE;AACJ;AACA;AAAmB;AAAA,mBAAY,IAAA/yD,KAAA,EAAZ;AAAmB,WAAnB;AAAqB;AAAc;AACtD;AAAgE;AAAA,mBAAS,IAAA+yD,WAAA,CAAY,CAAZ,CAAT;AAAuB,WAAvB,EAAwB,UAAxB,EAAwB;AAAA,mBAAa,IAAAA,WAAA,CAAY,CAAZ,CAAb;AAA2B,WAAnD;AAC5D;AACJ;AACJ;AACA;AACI;AACJ;AACA;AACI;AAYJ;AACJ;;;;AA3BK;AAE+B;AAAA;AAGY;AAAA;AAChB;AAAA;AAKL;AAAA;AAGA;AAAA;;;;;;;;;2BD8BdrB,sB,EAAsB;cAZlC,OAAA1R,SAYkC;eAZxB;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAM4I,sBAAN;AAAA,aAAX,CAFjB;AAGI3I,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAYwB,Q;;gBAE9B,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAA3gD;;;;;;;;;;;;;;;;;;;;;;;;AEtDL;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsCgB;AACI;AAMQ;AAAA;AAAA;AAAA,iBAAS,OAAA2R,MAAA,aAAT;AAA4B,SAA5B;AAA8B;AAAc;AACxD;;;;;AARK;AAGO;AAAA;AACA,sEAA6C,WAA7C,EAA6C,uBAA7C;AAFA;AAK8B;AAAA;;;;;;;;AAG9C;AAKI;AAAA;AAAA;AAAA,iBAAS,OAAA0tC,KAAA,aAAT;AAA2B,SAA3B;AACA;AACJ;;;;;AAHI;AAEK;AAAA;;;;AA5CrB,QAAYmU,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACjB;AACA;AACA;AACA;AACH,KALD,EAAYA,SAAS,GAAT,QAAAA,SAAA,aAAAA,SAAA,GAAS,EAAT,CAAZ;;AAOA,QAAYC,kBAAZ;;AAAA,eAAYA,kBAAZ,EAA8B;AAC1B;;;AAGA;AAEA;;;;AAGA;AACH,KAVD,EAAYA,kBAAkB,GAAlB,QAAAA,kBAAA,aAAAA,kBAAA,GAAkB,EAAlB,CAAZ;;QA2CaC,oB;AA/Bb;AAAA;;AAkCW,aAAAC,IAAA,GAAkBH,SAAS,CAACI,OAA5B;AAGA,aAAAvU,KAAA,GAAQ,IAAI,OAAApB,YAAJ,EAAR;AAGA,aAAAtsC,MAAA,GAAS,IAAI,OAAAssC,YAAJ,EAAT;AASA,aAAA4V,SAAA,GAAY,IAAZ;AAGA,aAAAlnD,OAAA,GAA8B8mD,kBAAkB,CAACK,EAAjD;AAEA,aAAAC,QAAA,GAAmB,gCAAnB;AACA,aAAAC,aAAA,GAAwB,OAAxB;AACA,aAAAC,SAAA,GAAoB,mBAApB;AAoCV;;;;mCAlCkB;AACX,eAAKC,aAAL;AACH;;;oCAEkB91D,O,EAAwB;AACvC,cAAIA,OAAO,CAACu1D,IAAZ,EAAkB;AACd,iBAAKO,aAAL;AACH;AACJ;;;wCAEuB;AACpB,eAAKH,QAAL,GAAgB,gCAAhB;AACA,eAAKE,SAAL,GAAiB,mBAAjB;;AACA,kBAAQ,KAAKN,IAAb;AACI,iBAAKH,SAAS,CAACI,OAAf;AACI,mBAAKI,aAAL,GAAqB,OAArB;AACA;;AACJ,iBAAKR,SAAS,CAACW,SAAf;AACI,mBAAKH,aAAL,GAAqB,WAArB;AACA,mBAAKC,SAAL,GAAiB,6BAAjB;AACA;;AACJ,iBAAKT,SAAS,CAACY,aAAf;AACI,mBAAKL,QAAL,GAAgB,8BAAhB;AACA,mBAAKC,aAAL,GAAqB,gBAArB;AACA;;AACJ,iBAAKR,SAAS,CAAC12D,KAAf;AACI,mBAAKi3D,QAAL,GAAgB,2BAAhB;AACA,mBAAKC,aAAL,GAAqB,OAArB;AACA;;AACJ;AACI,mBAAKA,aAAL,GAAqB,OAArB;AAjBR;AAmBH;;;;;;AA1FL;;;uBA+BaN,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,yC;AAAA,c;AAAA,c;AAAA,0b;AAAA;AAAA;AA5BzB;AACI;AACI;AACJ;AACA;AACI;;AACA;AASJ;AACA;AAQJ;;;;AAxBK;AACI;AAAA;AACI;AAAA;AAGe;AAAA;AAAqC;AACP;AAAA;AAWlD;AAAA;;;;;;;;;;2BAWHA,oB,EAAoB;cA/BhC,OAAAlT,SA+BgC;eA/BtB;AACPljD,kBAAQ,EAAE,kBADH;AAEPuvD,kBAAQ,yyCAFD;AA6BPnM,mBAAS,EAAE,CAAC,+BAAD;AA7BJ,S;AA+BsB,Q;;gBAE5B,OAAA1gD;;;gBAGA,OAAA2gD;;;gBAGA,OAAAA;;;gBAGA,OAAA3gD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AChFL;AAAA;AAAA;;AAeA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMY;AAAyF;AAAA;AAAA;AAAA;AAAA;AACrF;AACJ;;;;;;AA0BY;AACI;AACJ;;;;;;;;AACA;AACI;AAAA;AAAA;AAAA;AAAA;;AAEuC;;;;;AAAvC;;;;;;;;AACJ;AACK;AAAA;AAAA;AAAA;AAAA;AACD;AAEJ;;;;;AAJK;AAEiB;AAAA;;;;;;AAK9B;;;;;;AAGI;;;;AACU;;;;;;;;AACV;AACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;AACtG;AAAgF;AAAK;AACzF;;;;;;AAF6C;AAA6D;AAAA;AACxE;AAAA;;;;;;AAGtC;;;;;;;;AASQ;AAGI;AAAA;AAAA,iBAASuqD,MAAM,CAACr6C,eAAP,EAAT;AAAiC,SAAjC;AAGA;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoC,OAApC,EAAoC;AAAA;AAAA,iBAC3Bq6C,MAAM,CAACr6C,eAAP,EAD2B;AACH,SADjC;AAEA;AACJ;AACJ;;;;;AAbI;AADA,uDAA4B,OAA5B,EAA4B,gBAA5B;AAQI;AAAA;AAFA,iFAAsD,UAAtD,EAAsD,mBAAtD,EAAsD,SAAtD,EAAsD,mBAAtD;AAMA;AAAA;;;;;;;;AAIZ;AACI;AAEI;AAAA;AAAA;AAAA;AAAA;AAGA;AACJ;AACA;AAEI;AAAA;AAAA;AAAA,iCAAiB,KAAjB;AAAsB,SAAtB;AAGA;AACJ;AACJ;;;;;AAXQ;AAAA;AAOA;AAAA;;;;;;AAOhB;AAAqC;AAAgB;;;;;AAAhB;AAAA;;;;QAMpCmkD,mC;;;;;AA6FT,mDAAwC13B,OAAxC,EAA4D;AAAA;;AAAA;;AACxD;AADoC,iBAAAA,OAAA,GAAAA,OAAA;AA5DxC,iBAAA23B,cAAA,GAAiB,IAAI,OAAArW,YAAJ,EAAjB;AAGA,iBAAAsW,cAAA,GAAiB,IAAI,OAAAtW,YAAJ,EAAjB;AAGA,iBAAAuW,YAAA,GAAmC,IAAI,OAAAvW,YAAJ,EAAnC;AAGA,iBAAAwW,cAAA,GAAqC,IAAI,OAAAxW,YAAJ,EAArC;AAEA;;;;AAIA,iBAAAyW,kBAAA,GAAqB,KAArB;AAKgB,iBAAAC,WAAA,GAAuB,IAAvB;AAcR,iBAAAC,wBAAA,GAA2B,IAAI,OAAAz4D,eAAJ,CAAoB,KAApB,CAA3B;AAER,iBAAA04D,kBAAA,GAAqB,CAAC,WAAAC,KAAD,EAAQ,WAAAC,KAAR,CAArB;AAEO,iBAAAC,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEA,iBAAAi7B,OAAA,GAAU,KAAV;AACA,iBAAAC,gBAAA,GAAmB,KAAnB;AAEA,iBAAAC,mBAAA,GAAsB,IAAI,OAAAh5D,eAAJ,CAAyC,EAAzC,CAAtB;AACA,iBAAAi5D,2BAAA,GAA8B,IAAI,OAAAj5D,eAAJ,CAAyC,EAAzC,CAA9B;AAEP;;AACO,iBAAAk5D,WAAA,GAAc,IAAI,OAAAl5D,eAAJ,CAAyC,EAAzC,CAAd;AAOC,iBAAAyH,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAAyC,EAAzC,CAAR;AAED,iBAAAm5D,UAAA,GAAsB,KAAtB;AAEA,iBAAAC,QAAA,GAAoB,KAApB;;AAiSC,iBAAAC,WAAA,GAAc,UAACpnD,KAAD,EAAiB;AACnC,cAAI,SAAKlT,OAAL,KAAiB,IAArB,EAA2B;AACzB;AACD;AACD;;;;;AAGA,cAAI,SAAKA,OAAL,CAAau6D,SAAb,IAA0BrnD,KAAK,CAACyE,MAAN,CAAarU,OAAb,CAAqB,yBAArB,MAAoD,IAA9E,IAAsF,CAAC4P,KAAK,CAACs+C,UAAN,CAAiBgJ,SAAjB,CAA2BC,QAA3B,CAAoC,iCAApC,CAA3F,EAAmK;AAC/J,qBAAKC,OAAL,CAAa,KAAb;;AACA,qBAAK16D,OAAL,CAAa,UAAb,EAAyBqD,aAAzB,CAAuCs3D,IAAvC;AACH;AACF,SAXK;;AA7RJ,YAAI,SAAKl5B,OAAT,EAAkB;AACd,mBAAKA,OAAL,CAAam5B,aAAb;AACH;;AAJuD;AAK3D;;;;sCAgBoBC,K,EAAc;AAC/B,iBAAOA,KAAK,KAAK,UAAV,GAAuB,oBAAvB,GAA8C,qBAArD;AACH;;;mCAEU;AAAA;;AACP,eAAKt3D,YAAL,CAAkB,qBAAlB,EAAyC,OAAA+vB,aAAA,CAAc,CACnD,KAAK3L,OAD8C,EAEnD,KAAKyG,eAF8C,EAGnD,KAAKsrC,wBAH8C,CAAd,EAKpCpjD,IALoC,CAMjC,YAAAjL,GAAA,CAAI,iBAAoD;AAAA;AAAA,gBAAlDsc,OAAkD;AAAA,gBAAzCyG,eAAyC;AAAA,gBAAxBorC,kBAAwB;;AACpD,oBAAI,CAACa,QAAL,GAAgB,CAAC,CAACjsC,eAAe,CAAC1mB,MAAlC;AACA,mBAAOigB,OAAO,CAACtc,GAAR,CAAY,UAAAgjB,MAAM,EAAI;AACzB,kBAAME,QAAQ,GAAG,CAAC,CAACH,eAAe,CAACplB,IAAhB,CAAqB,UAAA+R,CAAC;AAAA,uBAAIA,CAAC,CAACrS,KAAF,KAAY2lB,MAAM,CAAC3lB,KAAvB;AAAA,eAAtB,CAAnB;AACA,kBAAIoyD,OAAO,GAAG,IAAd;;AACA,kBAAItB,kBAAJ,EAAwB;AACpB;AACA,oBAAMuB,mBAAmB,GAAG3sC,eAAe,CAACplB,IAAhB,CAAqB,UAAA+R,CAAC;AAAA,yBAAIA,CAAC,CAAC2Q,WAAF,IAAiB3Q,CAAC,CAAC+S,OAAF,KAAcO,MAAM,CAACP,OAA1C;AAAA,iBAAtB,CAA5B,CAFoB,CAIpB;;AACAgtC,uBAAO,GACH1sC,eAAe,CAAC1mB,MAAhB,KAA2B,CAA3B,KACCqzD,mBAAmB,GAAGA,mBAAmB,CAACjtC,OAApB,KAAgCO,MAAM,CAACP,OAA1C,GAAoD,KADxE,CADJ;AAGA,wBAAI,CAACssC,UAAL,GAAkBhsC,eAAe,CAAC1mB,MAAhB,KAA2B,CAA7C;AACH;;AAED,qBAAO,gCACA2mB,MADA,GACM;AACTysC,uBAAO,EAAPA,OADS;AAETvsC,wBAAQ,EAARA;AAFS,eADN,CAAP;AAKH,aAnBM,CAAP;AAoBH,WAtBD,CANiC,EA6BnC9qB,SA7BmC,CA6BzB,UAAAkQ,IAAI,EAAI;;;AAChB,gBAAMgU,OAAO,GAAGhU,IAAI,CAACjG,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChC,kBAAID,CAAC,CAACmgB,OAAF,KAAclgB,CAAC,CAACkgB,OAApB,EAA6B;AACzB,uBAAOlgB,CAAC,CAAC6D,OAAF,GAAY9D,CAAC,CAAC8D,OAAd,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH;;AACD,qBAAO7D,CAAC,CAACkgB,OAAF,GAAYngB,CAAC,CAACmgB,OAAd,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH,aALe,CAAhB;;AAMA,oBAAI,CAACmsC,mBAAL,CAAyBtmD,IAAzB,CAA8BgU,OAA9B;;AACA,oBAAI,CAACuyC,2BAAL,CAAiCvmD,IAAjC,CAAsC,QAAI,CAACqnD,8BAAL,CAAoC,CAAD,KAAC,QAAI,CAAClB,iBAAL,CAAuBpxD,KAAvB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEs3C,IAAF,EAAhE,CAAtC;AACH,WAtCoC,CAAzC;AAuCA,eAAKz8C,YAAL,CAAkB,0BAAlB,EACI,KAAKu2D,iBAAL,CAAuB/5B,YAAvB,CAAoCt8B,SAApC,CAA8C,UAAAiF,KAAK,EAAI;AACnD,gBAAI,QAAI,CAAC+wD,WAAL,IAAoB/wD,KAAK,CAAChB,MAA9B,EAAsC;AAClC,sBAAI,CAACwyD,2BAAL,CAAiCvmD,IAAjC,CAAsC,QAAI,CAACqnD,8BAAL,CAAoCtyD,KAApC,CAAtC;AACH,aAFD,MAEO;AACH,sBAAI,CAACwxD,2BAAL,CAAiCvmD,IAAjC,CAAsC,QAAI,CAACqnD,8BAAL,EAAtC;AACH;AACJ,WAND,CADJ;AAQA,eAAKz3D,YAAL,CAAkB,aAAlB,EAAiC,KAAK6qB,eAAL,CAC5B9X,IAD4B,CACvB,YAAAjL,GAAA,CAAI,UAAA+iB,eAAe,EAAI;AACzB;AACA;AACA,gBAAM6sC,YAAY,GAAG7sC,eAAe,CAAChiB,MAAhB,CAAuB,UAAA2O,CAAC;AAAA,qBAAIA,CAAC,CAAC2Q,WAAN;AAAA,aAAxB,KAA8C,EAAnE;AACA,mBAAO0C,eAAe,CAAChiB,MAAhB,CAAuB,UAAA2O,CAAC;AAAA,qBAAIA,CAAC,CAAC2Q,WAAF,IAAiB3Q,CAAC,CAAC8P,UAAF,IAAgB,CAAEowC,YAAY,CAACjyD,IAAb,CAAkB,UAAAkyD,CAAC;AAAA,uBAAIA,CAAC,CAACptC,OAAF,KAAc/S,CAAC,CAAC+S,OAApB;AAAA,eAAnB,CAAvC;AAAA,aAAxB,CAAP;AACH,WALK,CADuB,EAO5BrqB,SAP4B,CAOlB,UAAAkQ,IAAI,EAAI;AACf,oBAAI,CAACwmD,WAAL,CAAiBxmD,IAAjB,CAAsBA,IAAtB;AACH,WAT4B,CAAjC;AAWA,eAAKpQ,YAAL,CAAkB,UAAlB,EAA8B,KAAK6qB,eAAL,CACzB9X,IADyB,CACpB,YAAAjL,GAAA,CAAI,UAAAkjB,QAAQ,EAAI;AAClB;AACA,mBAAOA,QAAP;AACH,WAHK,CADoB,EAKzB9qB,SALyB,CAKf,UAAAkQ,IAAI,EAAI;AACf,oBAAI,CAACjL,KAAL,CAAWiL,IAAX,CAAgBA,IAAhB;AACH,WAPyB,CAA9B,EA3DO,CAoEP;;AACA,eAAKpQ,YAAL,CAAkB,cAAlB,EAAkC,KAAKmF,KAAL,CAC7B4N,IAD6B,CACxB,YAAA6vC,oBAAA,EADwB,EAE7B1iD,SAF6B,CAEnB,UAAAkQ,IAAI,EAAI;AACf,gBAAI,QAAI,CAACq6C,SAAT,EAAoB;AAChB;AACA,kBAAMl0B,MAAM,GAAG,EAAf;AACAnmB,kBAAI,CAAC/P,OAAL,CAAa,UAACsO,CAAD,EAAIrO,CAAJ,EAAU;;;AACnB,oBAAM6E,KAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAKwJ,CAAL,CAAd;;AACA,oBAAI,CAAJ,KAAIA,CAAC,CAAC6b,IAAF,MAAM,IAAN,IAAM,aAAN,GAAM,MAAN,GAAM,GAAEpQ,IAAZ,EAAkB;AACdjV,uBAAK,CAAC+I,OAAN,GAAgBS,CAAC,CAAC6b,IAAF,CAAOpQ,IAAP,CAAYpc,IAA5B;AACH;;AACDu4B,sBAAM,CAACzsB,IAAP,CAAY3E,KAAZ;AACH,eAND;;AAOA,sBAAI,CAACslD,SAAL,CAAel0B,MAAf;AACH;AACJ,WAf6B,CAAlC;AAiBA/uB,gBAAM,CAAC69B,gBAAP,CAAwB,QAAxB,EAAkC,KAAK0xB,WAAvC,EAAoD,IAApD;AACH;;;yDAEyD;AAAA,cAA3Ba,YAA2B,uEAAJ,EAAI;AACtD;AACA,cAAMC,YAAY,GAAG,KAAKnB,mBAAL,CAAyBvxD,KAAzB,CAA+B0D,MAA/B,CAAsC,UAAAsiB,CAAC,EAAI;AAC5D,gBAAIysC,YAAY,IAAIA,YAAY,CAACzzD,MAAjC,EAAyC;AACrC,qBAAOgnB,CAAC,CAACZ,OAAF,CAAU5gB,WAAV,GAAwBtE,OAAxB,CAAgCuyD,YAAY,CAACjuD,WAAb,EAAhC,MAAgE,CAAhE,IAAqEwhB,CAAC,CAACjd,OAAF,CAAUvE,WAAV,GAAwBtE,OAAxB,CAAgCuyD,YAAY,CAACjuD,WAAb,EAAhC,MAAgE,CAA5I;AACH;;AACD,mBAAOwhB,CAAC,CAACZ,OAAF,IAAaY,CAAC,CAACjd,OAAtB;AACH,WALoB,CAArB,CAFsD,CAQtD;;AACA,cAAM4pD,WAAW,GAAG,KAAKpB,mBAAL,CAAyBvxD,KAAzB,CAA+B0D,MAA/B,CAAsC,UAAAsiB,CAAC,EAAI;;;AAC3D,gBAAI,OAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEf,gBAAH,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEjmB,MAArB,KAA+ByzD,YAAnC,EAAiD;AAC7C,kBAAMxvD,KAAK,GAAG,OAAA+iB,CAAC,CAACf,gBAAF,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEzgB,WAAF,GAAgBtE,OAAhB,CAAwBuyD,YAAY,CAACjuD,WAAb,EAAxB,CAAlB,IAAwE,CAAC,CAAvF,CAD6C,CAE7C;;AACA,qBAAOvB,KAAK,IAAI,CAACyvD,YAAY,CAACpyD,IAAb,CAAkB,UAAA6G,CAAC,EAAI;AACpC,uBAAOA,CAAC,CAACnH,KAAF,KAAYgmB,CAAC,CAAChmB,KAArB;AACH,eAFgB,CAAjB;AAGH;;AACD,mBAAO,KAAP;AACH,WATmB,CAApB,CATsD,CAoBtD;;AACA,cAAI4yD,aAAa,GAAGF,YAAY,CAAC5lC,MAAb,CAAoB6lC,WAApB,EAAiC3tD,IAAjC,CAAsC,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChE,gBAAID,CAAC,CAACmgB,OAAF,KAAclgB,CAAC,CAACkgB,OAApB,EAA6B;AACzB,qBAAOlgB,CAAC,CAAC6D,OAAF,GAAY9D,CAAC,CAAC8D,OAAd,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH;;AACD,mBAAO7D,CAAC,CAACkgB,OAAF,GAAYngB,CAAC,CAACmgB,OAAd,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH,WALmB,CAApB,CArBsD,CA4BtD;;AACA,cAAMytC,QAAQ,GAAGD,aAAa,CAACjwD,GAAd,CAAkB,UAAAqjB,CAAC;AAAA,mBAAIA,CAAC,CAACZ,OAAN;AAAA,WAAnB,CAAjB,CA7BsD,CA8BtD;;AACA,cAAM0tC,OAAO,GAAG,KAAKvB,mBAAL,CAAyBvxD,KAAzB,CAA+B0D,MAA/B,CAAsC,UAAAsiB,CAAC,EAAI;AACvD,mBAAO,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEhD,WAAH,KAAkB6vC,QAAQ,CAAC3yD,OAAT,CAAiB8lB,CAAC,CAACZ,OAAnB,MAAgC,CAAC,CAA1D;AACH,WAFe,CAAhB,CA/BsD,CAmCtD;AACA;;AACA,cAAMosC,2BAA2B,GAAGsB,OAAO,CAAChmC,MAAR,CAAe8lC,aAAa,CAAClvD,MAAd,CAAqB,UAAAqvD,EAAE;AAAA,mBAAI,CAAC,CAACA,EAAE,CAAC9tC,gBAAT;AAAA,WAAvB,CAAf,EAAkEjgB,IAAlE,CAAuE,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACjH,mBAAOA,CAAC,CAACkgB,OAAF,GAAYngB,CAAC,CAACmgB,OAAd,GAAwB,CAAC,CAAzB,GAA6B,CAApC;AACH,WAFmC,CAApC;AAGA,iBAAOosC,2BAAP;AACH;;;oCAEQ;AACL,eAAKF,gBAAL,GAAwB,KAAxB;AACA,eAAKD,OAAL,GAAe,KAAf;AACH;;;oCAEW72D,O,EAAsB;AAC9B,cAAIA,OAAO,CAACs2D,kBAAZ,EAAgC;AAC5B,iBAAKE,wBAAL,CAA8B/lD,IAA9B,CAAmC,KAAK6lD,kBAAxC;AACH;AACJ;;;mCAEUkC,Q,EAAkB;AACzB,cAAI,KAAKC,aAAT,EAAwB;AACpB,iBAAKtC,cAAL,CAAoBpV,IAApB,CAAyByX,QAAzB;AACH;AACJ;;;qCAEYhzD,K,EAAe;AAAA;;AACxB,eAAKif,OAAL,CAAarR,IAAb,CACI,YAAAsH,IAAA,CAAK,CAAL,CADJ,EAEI,YAAAvS,GAAA,CAAI,UAACsc,OAAD;AAAA,mBAAkCA,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,qBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,aAAd,CAAlC;AAAA,WAAJ,CAFJ,EAGEjF,SAHF,CAGY,UAAAkQ,IAAI,EAAI;AAChB,gBAAIA,IAAJ,EAAU;AACN,sBAAI,CAACylD,cAAL,CAAoBnV,IAApB,CAAyBtwC,IAAzB;AACH;AACJ,WAPD;AAQH;;;qCAEYjL,K,EAA0B;AACnC,eAAK0wD,cAAL,CAAoBnV,IAApB,CAAyBv7C,KAAzB;;AACA,cAAI,KAAKkzD,OAAT,EAAkB;AACd,iBAAKrC,cAAL,CAAoBtV,IAApB;AACH;AAEJ;;;0CAEiB;AACd,eAAK71B,eAAL,CAAqBza,IAArB,CAA0B,EAA1B;AACA,eAAK2lD,YAAL,CAAkBrV,IAAlB;AACH;;;uCAEc;AACX;AACA,cAAI,KAAK8V,OAAT,EAAkB;AACd,iBAAKW,OAAL,CAAa,KAAb;AACH;AACJ;;;2CAEkBmB,O,EAAkB;AACjC,eAAKnB,OAAL,CAAamB,OAAb,EAAsB,IAAtB;AACH;;;gCAEOA,O,EAAkBC,S,EAAqB;AAAA;;AAC3C,cAAI,CAACD,OAAD,IAAY,KAAKD,OAArB,EAA8B;AAC1B,iBAAKrC,cAAL,CAAoBtV,IAApB;AACH,WAH0C,CAI3C;;;AACA,cAAI,KAAKwV,WAAL,IAAoBqC,SAApB,IAAiCD,OAArC,EAA8C;AAC1C;AACA,iBAAK7B,gBAAL,GAAwB,IAAxB;AACA,iBAAK71D,OAAL,CAAa,cAAb,EAA6B,YAAM;AAC/B;AACA;AACA,sBAAI,CAACu2D,OAAL,CAAa,IAAb;AACH,aAJD,EAIG,GAJH;AAKH;;AAED,cAAI,KAAKiB,aAAL,IAAsB,CAACG,SAA3B,EAAsC;AAClC;AACA,iBAAKC,cAAL,CAAoBrzD,KAApB,GAA4B,EAA5B;AACA,iBAAKoxD,iBAAL,CAAuB1zD,QAAvB,CAAgC,EAAhC;AACA,iBAAKizD,cAAL,CAAoBpV,IAApB,CAAyB,EAAzB;AACH;;AAED,cAAI,KAAK8V,OAAL,KAAiB8B,OAArB,EAA8B;AAC1B,iBAAK9B,OAAL,GAAe8B,OAAf,CAD0B,CAE1B;;AACA,gBAAI,CAACA,OAAL,EAAc;AACV,mBAAKE,cAAL,CAAoBrzD,KAApB,GAA4B,EAA5B;AACA,mBAAKoxD,iBAAL,CAAuB1zD,QAAvB,CAAgC,EAAhC;AACH;;AACD,gBAAI,CAAC01D,SAAL,EAAgB;AACZ,kBAAID,OAAJ,EAAa;AACT,qBAAK77D,OAAL,CAAa6wD,SAAb;AACH,eAFD,MAEO;AACH,qBAAK7wD,OAAL,CAAa8wD,UAAb,GADG,CAEH;;AACA,qBAAKkL,SAAL;AACH;AACJ;AACJ;AACJ;;;kCAEStzD,K,EAA0BwK,K,EAA0B;AAC1D,eAAKkmD,cAAL,CAAoBnV,IAApB,CAAyBv7C,KAAzB;AACH;;;4BAEGwK,K,EAA0B;AAC1B;AACA,cAAIA,KAAK,CAAClM,KAAV,EAAiB;AACbkM,iBAAK,CAAClM,KAAN,CAAY0B,KAAZ,GAAoB,EAApB;AACH;;AACD,eAAKoxD,iBAAL,CAAuB1zD,QAAvB,CAAgC,EAAhC;AACH;;;yCAEgB5E,E,EAAO;AACpB,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;;;0CAEiBA,E,EAAO;AACrB,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;yCAEgBy6D,U,EAAmB;AAChC;AACA,eAAKl9B,QAAL,GAAgBk9B,UAAhB;AACH;;;mCAEUn6C,G,EAAoC;AAAA;;iBAAA,CAC3C;;;AACA,qBAAK6F,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAErR,IAAF,CACR,YAAAsH,IAAA,CAAK,CAAL,CADQ,EAER,YAAAvS,GAAA,CAAI,UAACsc,OAAD,EAAkC;AAClC,mBAAOA,OAAO,CAACvb,MAAR,CAAe,UAAAsiB,CAAC;AAAA,qBAAI5M,GAAG,GAAG,CAAC,CAACA,GAAG,CAAC9Y,IAAJ,CAAS,UAAAkzD,GAAG;AAAA,uBAAIxtC,CAAC,CAAChmB,KAAF,KAAYwzD,GAAG,CAACxzD,KAApB;AAAA,eAAZ,CAAL,GAA8C,KAArD;AAAA,aAAhB,CAAP;AACH,WAFD,CAFQ,EAKVjF,SALU,CAKA,UAAAkQ,IAAI,EAAI;AAChB,oBAAI,CAACya,eAAL,CAAqBza,IAArB,CAA0BA,IAA1B;AACH,WAPW,CAAZ;AAQH;;;sCAcmB;AAChB5I,gBAAM,CAACoxD,mBAAP,CAA2B,QAA3B,EAAqC,KAAK7B,WAA1C,EAAuD,IAAvD;AACD;;;4BAtSe;AACd,iBAAO,KAAK74B,OAAL,GAAe,KAAKA,OAAL,CAAame,OAA5B,GAAsC,KAA7C;AACH;;;4BAEmB;AAChB,cAAI,CAAC,KAAKne,OAAV,EAAmB;AACf,mBAAO,KAAP;AACH;;AAHe,8BAKW,KAAKA,OALhB;AAAA,cAKR26B,KALQ,iBAKRA,KALQ;AAAA,cAKDC,OALC,iBAKDA,OALC;AAOhB,iBAAO,KAAKzc,OAAL,GAAgBwc,KAAK,IAAIC,OAAzB,GAAoC,KAA3C;AACH;;;;MAhHoD,OAAAp6D,a;;AA1GzD;;;uBA0Gak3D,mC,EAAmC,sC;AAAA,K;;;YAAnCA,mC;AAAmC,wD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvGxC;AACI;AAGA;AAAiC;AAAS;AAC1C;AAMI;AACI;AASI;AAAA,mBAAW,IAAAuB,OAAA,CAAQ,IAAR,CAAX;AAAwB,WAAxB,EAAyB,OAAzB,EAAyB;AAAA,mBAChB,IAAA4B,UAAA,qBADgB;AACe,WADxC,EAAyB,sBAAzB,EAAyB;AAAA,mBAKD,IAAAzzD,GAAA,QALC;AAKU,WALnC;AATJ;AAgBA;AACI;AAGA;AAIA;AAKJ;AACJ;AACA;AACA;AAEI;AAEA;;AAIJ;AACA;AACA;AAGI;AAAA,mBAAU,IAAA0zD,kBAAA,CAAmB,IAAnB,CAAV;AAAkC,WAAlC,EAAmC,QAAnC,EAAmC;AAAA,mBACzB,IAAAA,kBAAA,CAAmB,KAAnB,CADyB;AACA,WADnC,EAAmC,gBAAnC,EAAmC;AAAA,mBAEjB,IAAAC,YAAA,qBAFiB;AAEgB,WAFnD;AAIA;AACI;;;AAgBJ;AACA;AAgBJ;AACJ;AACA;AACJ;;;;;;;;;;AAlGuC;AAC3B;AAAA;AAGG;AAAA;AAAsB;AAAA;AAI7B;AAAA;AAQQ;AAAA,0CAAsB,QAAtB,EAAsB,GAAtB;AAGA;AADA,8DAAiC,iBAAjC,EAAiC,IAAjC,EAAiC,4BAAjC,EAAiC,GAAjC,EAAiC,iBAAjC,EAAiC,GAAjC;AAW8B;AAAA;AAK1B;AAAA;AAG0B;AAAA;AAMf;AAAA;AAGT;AAAA;AAEA;AAAA;AAKS;AAAA;AAEnB;AAAA;AAWQ;AAAA;AAa4B;AAAA;AAkBzB;AAAA;;;;;;;;;;;2BAMlBrD,mC,EAAmC;cA1G/C,OAAA7T,SA0G+C;eA1GrC;AACPljD,kBAAQ,EAAE,mCADH;AAEPuvD,kBAAQ,gtLAFD;AAuGPnM,mBAAS,EAAE,CAAC,iDAAD,CAvGJ;AAwGPiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AAxG1B,S;AA0GqC,Q;;;;kBA6F/B,OAAA8yC;;kBAAQ,OAAAC;;;;;gBA3FpB,OAAA/T,S;iBAAU,S;;;gBAGV,OAAAA,S;iBAAU,gB;;;gBAGV,OAAA/jD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAA2gD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAMA,OAAA3gD;;;gBAIA,OAAAA;;;gBAEA,OAAAA;;;gBAKA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnNL;AAAA;AAAA;;;;;AAMA;;;;;;;;QASa+3D,e;;;;;;;kCACCr5D,K,EAA0B;AAChC,cAAI,CAACA,KAAL,EAAY;AACR,mBAAO,EAAP;AACH;;AAED,iBAAOA,KAAK,CAAC6H,GAAN,CAAU,UAAA6G,CAAC,EAAI;AAClB,gBAAM4qD,SAAS,GAAG,CAAC,CAACt5D,KAAK,CAACwF,IAAN,CAAW,UAAAnF,CAAC;AAAA,qBAAIA,CAAC,CAAC6nB,WAAF,IAAiB7nB,CAAC,CAACiqB,OAAF,KAAc5b,CAAC,CAAC4b,OAArC;AAAA,aAAZ,CAApB;AACA,mBAAO,MAAP,OAAO,CAAP,kBACO5b,CADP,CAAO,EACC;AACJ6qD,6BAAe,EAAE,CAACD;AADd,aADD,CAAP;AAIH,WANM,CAAP;AAOH;;;;;;AAhBL;;;uBAGaD,e;AAAe,K;;;;YAAfA,e;AAAe;;;;;2BAAfA,e,EAAe;cAH3B,OAAAxnD,IAG2B;eAHtB;AACF9T,cAAI,EAAE;AADJ,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;ACf5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLI;AAA+C;AAAS;;;;;AAA/B;AAAsB;AAAA;;;;;;AAoB3C;AACE;AACF;;;;;AAF2D;AACzD;AAAA;;;ADZV;;;;;QAeay7D,iC;AAZb;AAAA;;AAAA;;AAoBS,aAAAr1C,OAAA,GAA+B,EAA/B;AAeA,aAAAs1C,qBAAA,GAAwB,IAAI,OAAAla,YAAJ,EAAxB;AAGA,aAAAma,eAAA,GAAkB,IAAI,OAAAna,YAAJ,EAAlB;AAEG,aAAAoa,aAAA,GAAgB,IAAI,OAAApa,YAAJ,EAAhB;AAOV,aAAA+W,iBAAA,GAAoB,IAAI,QAAAh7B,WAAJ,EAApB;AAGA;;AACO,aAAAp2B,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAAqC,EAArC,CAAR;AAEP;;AACO,aAAAm8D,QAAA,GAAW,IAAI,OAAAn8D,eAAJ,CAAyC,KAAK0mB,OAA9C,CAAX;;AA0GC,aAAA2yC,WAAA,GAAc,UAACpnD,KAAD,EAAiB;AACrC,cAAI,QAAI,CAAClT,OAAL,KAAiB,IAArB,EAA2B;AACzB;AACD;AACD;;;;;AAGA,cAAI,QAAI,CAACA,OAAL,CAAau6D,SAAb,IAA0BrnD,KAAK,CAACyE,MAAN,CAAarU,OAAb,CAAqB,yBAArB,MAAoD,IAAlF,EAAyF;AACvF,oBAAI,CAACtD,OAAL,CAAa8wD,UAAb;;AACE,oBAAI,CAAC9wD,OAAL,CAAa,UAAb,EAAyBqD,aAAzB,CAAuCs3D,IAAvC;AACH;AACF,SAXO;AAgBT;;;;mCAtHY;AACT,eAAK0C,qBAAL;AACAtyD,gBAAM,CAAC69B,gBAAP,CAAwB,QAAxB,EAAkC,KAAK0xB,WAAvC,EAAoD,IAApD;AACD;;;oCAEkBp3D,O,EAAsB;AACvC;AACA,cAAIA,OAAO,CAACykB,OAAR,IAAmBzkB,OAAO,CAACo6D,aAA/B,EAA8C;AAC5C,gBAAIp6D,OAAO,CAACykB,OAAR,IAAmB,CAACzkB,OAAO,CAACo6D,aAAhC,EAA+C;AAC7C,mBAAKxD,iBAAL,CAAuB1zD,QAAvB,CAAgC,EAAhC;AACD;;AACD,iBAAKi3D,qBAAL;AACD;;AACD,cAAIn6D,OAAO,CAACq6D,UAAZ,EAAwB;AACtB,iBAAKzD,iBAAL,CAAuB1zD,QAAvB,CAAgC,EAAhC;AACA,iBAAKi3D,qBAAL;AACD;AAEF;;;gDAE+B;AAAA;;AAC9B,eAAKG,eAAL,GAAuB,KAAK1D,iBAAL,CAAuB/5B,YAAvB,CACpBzpB,IADoB,CAEnB,YAAAmnD,SAAA,CAAU,EAAV,CAFmB,EAGnB,YAAApyD,GAAA,CAAI,UAAA3C,KAAK;AAAA,mBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,KAAIA,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAE+I,OAAX,CAAL,GAA0B/I,KAAK,CAAC+I,OAAhC,GAA0C,EAAlF;AAAA,WAAT,CAHmB,EAInB,YAAApG,GAAA,CAAI,UAAA9J,IAAI;AAAA,mBAAIA,IAAI,GAAG,QAAI,CAACm8D,OAAL,CAAan8D,IAAb,CAAH,GAAwB,QAAI,CAAComB,OAAL,CAAarc,KAAb,EAAhC;AAAA,WAAR,CAJmB,CAAvB;AAMD;;;kCAESqf,I,EAAuB;AAC/B,iBAAOA,IAAI,KAAIA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAElZ,OAAV,CAAJ,GAAwBkZ,IAAI,CAAClZ,OAA7B,GAAuC,EAA9C;AACD;;;gCAEeA,O,EAAe;AAC7B,cAAMksD,WAAW,GAAGlsD,OAAO,CAACvE,WAAR,EAApB,CAD6B,CAE7B;;AACA,cAAMqmB,QAAQ,GAAG,KAAK5L,OAAL,CAAavb,MAAb,CAAoB,UAAAiiB,MAAM,EAAI;AAC7C;AACA;AACA,gBAAIsvC,WAAW,CAAC9+C,QAAZ,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,kBAAM++C,YAAY,GAAED,WAAW,CAACn2D,KAAZ,CAAkB,GAAlB,CAApB;AACA,kBAAIq2D,UAAU,GAAG,IAAjB;;AACA,mBAAK,IAAI76D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG46D,YAAY,CAACl2D,MAAjC,EAAyC1E,CAAC,EAA1C,EAA8C;AAC5C,oBAAIqrB,MAAM,CAAC5c,OAAP,CAAevE,WAAf,GAA6BtE,OAA7B,CAAqCg1D,YAAY,CAAC56D,CAAD,CAAjD,MAA0D,CAAC,CAA/D,EAAkE;AAChE66D,4BAAU,GAAG,KAAb;AACD;AACF;;AACD,kBAAIA,UAAJ,EAAgB;AACd,uBAAO,IAAP;AACD;AACF,aAd4C,CAe7C;;;AACA,mBAAOxvC,MAAM,CAAC5c,OAAP,CAAevE,WAAf,GAA6BtE,OAA7B,CAAqC+0D,WAArC,IAAoD,CAAC,CAA5D;AACD,WAjBgB,CAAjB;AAkBA,eAAKT,eAAL,CAAqBjZ,IAArB,CAA0B0Z,WAA1B;AACA,eAAKV,qBAAL,CAA2BhZ,IAA3B,CAAgC1wB,QAAhC;AACA,iBAAOA,QAAP;AACD;AAED;;;;;;;iCAIgBq6B,S,EAA4B;AAC1C,eAAKllD,KAAL,CAAWiL,IAAX,CAAgBi6C,SAAhB;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAClB,iBAAKA,SAAL,CAAe,KAAKrmC,OAAL,CAAa3e,IAAb,CAAkB,UAAAmE,CAAC;AAAA,qBAAIA,CAAC,CAACzE,KAAF,KAAYklD,SAAS,CAACllD,KAA1B;AAAA,aAAnB,CAAf;AACD;AACF;AAED;;;;;;;mCAIkBA,K,EAAiC;AACjD,cAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAKA,KAAL,CAAWiL,IAAX,CAAgBjL,KAAK,CAACA,KAAtB;AACD;AACF;AAED;;;;;;;yCAIwBlH,E,EAAkC;AACxD,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACD;AAED;;;;;;;0CAIyBA,E,EAAkC;AACzD,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACD;;;wCAEsB;AACrB,cAAI,KAAKs4D,iBAAL,CAAuBpxD,KAAvB,KAAiC,EAArC,EAAyC;AACvC,iBAAKy0D,aAAL,CAAmBlZ,IAAnB,CAAwB,IAAxB;AACD;AACF;;;sCAciB;AAChBl5C,gBAAM,CAACoxD,mBAAP,CAA2B,QAA3B,EAAqC,KAAK7B,WAA1C,EAAuD,IAAvD;AACD;;;;;;AA9KH;;;uBAYa0C,iC;AAAiC,K;;;YAAjCA,iC;AAAiC,qD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;uCARjC,CACT;AACE5lB,eAAO,EAAE,QAAA8W,iBADX;AAEEC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAM4O,iCAAN;AAAA,SAAX,CAFf;AAGE3O,aAAK,EAAE;AAHT,OADS,C,GAMV,uB;AAAA,c;AAAA,a;AAAA,+a;AAAA;AAAA;ACvBH;AACI;AACA;AAGE;AASE;AAAA,mBAAS,IAAAyP,aAAA,EAAT;AAAwB,WAAxB;AATF;AAWA;AAGE;AAAA,mBAAkB,IAAA13D,QAAA,qBAAlB;AAA+C,WAA/C;AAEA;;AAGF;AACF;AACJ;;;;;;AAzBe;AAAA;AAYP;AAAA;AAHA,8DAAiC,iBAAjC,EAAiC,GAAjC,EAAiC,aAAjC,EAAiC,eAAjC;AAQA;AAAA;AAGY;AAAA;;;;;;;;;;2BDIP42D,iC,EAAiC;cAZ7C,OAAA1X,SAY6C;eAZnC;AACTljD,kBAAQ,EAAE,gCADD;AAETmjD,qBAAW,EAAE,4CAFJ;AAGTC,mBAAS,EAAE,CAAC,4CAAD,CAHF;AAITnD,mBAAS,EAAE,CACT;AACEjL,mBAAO,EAAE,QAAA8W,iBADX;AAEEC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAM4O,iCAAN;AAAA,aAAX,CAFf;AAGE3O,iBAAK,EAAE;AAHT,WADS;AAJF,S;AAYmC,Q;;gBAC3C,OAAAvpD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAA2gD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAeA,OAAAoD,S;iBAAU,S;;;;;;;;;;;;;;;;;;;;;;;;AEpEb;AAAA;AAAA;;AAQA;AAAA;AAAA;;;;;AAEA;;;;;;;;;;;QASakV,qB;;;;;AAMT,qCAAoBC,KAApB,EAA6C;AAAA;;AAAA;;AACzC;AADgB,iBAAAA,KAAA,GAAAA,KAAA;AAFZ,iBAAAC,UAAA,GAAa,KAAb;AAEqC;AAE5C;;;;mCAEc;AACX;AACA,eAAKC,gBAAL;AACH;;;2CAEyB;AACtB,cAAI,KAAKvM,QAAL,IAAiB,CAAC,KAAKsM,UAA3B,EAAuC;AACnC,iBAAKA,UAAL,GAAkB,IAAlB;AACA,iBAAKD,KAAL,CAAWG,kBAAX,CAA8B,KAAKxM,QAAnC;AACA,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;;;0CAEqB;AAAA;;AAClB,cAAI,CAAC,KAAKsM,UAAV,EAAsB;AAClB/yD,mBAAO,CAACV,GAAR,CAAY,0DAAZ;AACA7I,sBAAU,CAAC,YAAM;AACbuJ,qBAAO,CAACV,GAAR,CAAY,6BAAZ,EAA2C,QAAI,CAACmnD,QAAhD;;AACA,kBAAI,CAAC,QAAI,CAACuM,gBAAL,EAAL,EAA8B;AAC1BhzD,uBAAO,CAACV,GAAR,CAAY,gDAAZ;AACA7I,0BAAU,CAAC,YAAM;AACb,sBAAI,CAAC,QAAI,CAACu8D,gBAAL,EAAL,EAA8B;AAC1BhzD,2BAAO,CAACsY,KAAR,CAAc,yBAAd;AACH;AACJ,iBAJS,EAIP,IAJO,CAAV;AAKH;AACJ,aAVS,CAAV;AAWH;AACJ;;;sCAEiB;AACd;;AACA,eAAKy6C,UAAL,GAAkB,KAAlB;AACH;;;;MA5CsC,OAAAh8D,a;;AAA3C;;;uBAAa87D,qB,EAAqB,yC;AAAA,K;;;YAArBA,qB;AAAqB;AAAA;+BACnB,OAAAK,W,EAAa,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB5B;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACCI;AAAK;AAAA;AAAA;AAAA,iBAAS,OAAArtC,MAAA,OAAT;AAAsB,SAAtB;AACH;AACF;;;;;AAFkE;;;;;;QDcvDstC,yB,GAKX,qCAAc;AAAA;;AAHJ,WAAAttC,MAAA,GAAS,IAAI,OAAAgyB,YAAJ,EAAT;AAGM,K;;AAVlB;;;uBAKasb,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,yC;AAAA;AAAA;yBACzB,OAAAD,W,EAAW,I;;;;;;;;;;;;;;;;;;;;;;AChB1B;;;;;;;;;2BDeeC,yB,EAAyB;cALrC,OAAA/Y,SAKqC;eAL3B;AACTljD,kBAAQ,EAAE,oBADD;AAETmjD,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK2B,Q;;;;gBACnC,OAAAqD,S;iBAAU,OAAAuV,W;;;gBACV,OAAA3Y;;;gBACA,OAAA3gD;;;;;;;;;;;;;;;;;;;;;;;;AElBL;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSI;AAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuK;AAAiB;;;;;;AAAzH;AAA+B;AAAyE;AAAA;;;;;;;;;;;QDO9Mw5D,kB;AAIX,oCAAc;AAAA;;AAFP,aAAAC,QAAA,GAAoB,KAApB;AAIN;;;;mCACO;AACN,eAAKhwC,QAAL,GAAgB,KAAK5D,IAAL,CAAU6zC,eAA1B;AACD;;;uCAEqBtwD,I,EAAqB;qBAAA,CACzC;;;AACA,eAAKyc,IAAL,CAAU6zC,eAAV,GAA4BtwD,IAA5B;AACA,sBAAKyc,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAE8zC,gBAAX,MAA2B,MAAI,KAAK9zC,IAAT,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE8zC,gBAAF,CAAmBvwD,IAAnB,CAAxC;AACD;;;;;;AApBH;;;uBAKaowD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,iC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,c;AAAA,+e;AAAA;AAAA;ACdjC;AAAgL;AAAA;AAAA;AAC9K;AAAoD;AAAkC;AACtF;AACI;AACJ;AACF;AACA;AACI;AACJ;;;;;;AAR8E;AAA5D,mDAA+B,SAA/B,EAA+B,qFAA/B;AACoC;AAAA;AAE9B;AAAA;AAIL;AAAA;;;;;;;;;2BDOJA,kB,EAAkB;cAL9B,OAAAhZ,SAK8B;eALpB;AACTljD,kBAAQ,EAAE,YADD;AAETmjD,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;gBAC5B,OAAA1gD;;;;;;;;;;;;;;;;;;;;;;;;AEjBL;AAAA;AAAA;;AAaE;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;QAQa45D,2B;AAOX,2CACUC,OADV,EAEUC,UAFV,EAGUC,gBAHV,EAIUC,QAJV,EAI6B;AAAA;;AAHnB,aAAAH,OAAA,GAAAA,OAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AAVF,aAAAC,cAAA,GAAiB,KAAjB;AAEA,aAAAC,yBAAA,GAA4B,OAAAl9D,YAAA,CAAam9D,KAAzC;AAGE,aAAAC,aAAA,GAAgB,IAAI,OAAAnc,YAAJ,EAAhB;AAQT;;;;mCACO,CACN;AACA;AACA;AACD;;;0CACc,CAEd;;;yCAGa;AACZ,eAAKgc,cAAL,GAAsB,KAAKI,eAAL,EAAtB,GAA+C,KAAKC,YAAL,EAA/C;AAED;;;uCAEW;AAAA;;AAAA,cACLC,OADK,GACM,KAAKC,aADX,CACLD,OADK;AAEV,eAAKC,aAAL,CAAmBD,OAAnB,GAA6BA,OAAO,KAAI,EAAX,GAAgBA,OAAhB,aAA6B,KAAKT,UAAL,CAAgBv7D,aAAhB,CAA8Bk8D,WAA3D,OAA7B;AACA,eAAKR,cAAL,GAAsB,IAAtB;AACA,eAAKG,aAAL,CAAmBjb,IAAnB,CAAwB,KAAK8a,cAA7B;AACA,eAAKS,UAAL,GAAkB,KAAKb,OAAL,CAAac,MAAb,CAAoB;AACpCC,uBAAW,EAAE,IADuB;AAEpCtU,yBAAa,EAAE,kCAFqB;AAGpCuU,0BAAc,EAAE,KAAKhB,OAAL,CAAaiB,gBAAb,CAA8Bzb,KAA9B,EAHoB;AAIpC0b,4BAAgB,EAAE,KAAKlB,OAAL,CACfnQ,QADe,GAEfsR,mBAFe,CAEK,KAAKlB,UAFV,EAGfmB,aAHe,CAGD,CACb;AACEC,qBAAO,EAAE,KADX;AAEEC,qBAAO,EAAE,QAFX;AAGEC,sBAAQ,EAAE,KAHZ;AAIEC,sBAAQ,EAAE,KAJZ;AAKEC,qBAAO,EAAE;AALX,aADa,CAHC;AAJkB,WAApB,CAAlB;AAkBA,cAAMC,cAAc,GAAG,IAAI,SAAAC,cAAJ,CACrB,KAAKhB,aAAL,CAAmBiB,WADE,EAErB,KAAK1B,gBAFgB,CAAvB;AAIA,eAAKW,UAAL,CAAgBgB,MAAhB,CAAuBH,cAAvB;AAEA,eAAKrB,yBAAL,GAAiC,KAAKyB,sBAAL,GAA8Bh9D,SAA9B,CAC/B;AAAA,mBAAM,QAAI,CAAC07D,eAAL,EAAN;AAAA,WAD+B,CAAjC;AAGD;;;iDAE6B;AAC5B,cAAMuB,cAAc,GAAG,KAAKlB,UAAL,CAAgBmB,aAAhB,EAAvB;AACA,cAAMC,WAAW,GAAG,KAAKpB,UAAL,CAAgBqB,WAAhB,EAApB;AACA,cAAMC,cAAc,GAAG,KAAKxB,aAAL,CAAmBvuC,MAA1C;AAEA,iBAAO,OAAAgwC,KAAA,CAAML,cAAN,EAAsBE,WAAtB,EAAmCE,cAAnC,CAAP;AACD;;;0CAEsB;AACrB,cAAI,CAAC,KAAKtB,UAAN,IAAoB,CAAC,KAAKT,cAA9B,EAA8C;AAC5C;AACD;;AAED,eAAKC,yBAAL,CAA+Bj9D,WAA/B;AACA,eAAKg9D,cAAL,GAAsB,KAAtB;AACA,eAAKG,aAAL,CAAmBjb,IAAnB,CAAwB,KAAK8a,cAA7B;AACA,eAAKS,UAAL,CAAgBwB,MAAhB;AACD;;;sCAEU;AACT,cAAI,KAAKxB,UAAT,EAAqB;AACnB,iBAAKA,UAAL,CAAgByB,OAAhB;AACD;AACF;;;;;;AA7FH;;;uBAMavC,2B,EAA2B,gC,EAAA,mC,EAAA,yC,EAAA,kC;AAAA,K;;;YAA3BA,2B;AAA2B,iD;AAAA;AAAA;;mBAA3B,oB;AAAgB,W;;;;;;;;;;;;;2BAAhBA,2B,EAA2B;cANvC,OAAAv8D,SAMuC;eAN7B;AACTC,kBAAQ,EAAE,sBADD;AAETic,cAAI,EAAE;AACJ,uBAAW;AADP;AAFG,S;AAM6B,Q;;;;;;;;;;;;gBAKrC,OAAAvZ,K;iBAAM,oB;;;gBACN,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AC7BL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAWY;AACI;AAAiB;AAAS;AAC1B;;AAAqE;AACzE;;;;;AAFqB;AAAA;AACc;AAAA;;;;;;AAEnC;AACI;AACI;AACJ;AACJ;;;;;;AACA;AAAmE;AAAe;;;;;AAAf;AAAA;;;;;;AAE/D;;;;;;QAMHyb,uB;AAgBT,yCAAc;AAAA;;AARd;;;AAIA,aAAA9L,SAAA,GAAY,KAAZ;AAEO,aAAA+L,UAAA,GAAa,IAAI,OAAAlgE,eAAJ,CAAoB,KAApB,CAAb;AAGN;;;;mCAEO,CACP;;;;;;AA9CL;;;uBA0BaigE,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,c;AAAA,c;AAAA,sT;AAAA;AAAA;;AAvB5B;AAII;AAAA,mBAAU,IAAAC,UAAA,MAAgB,IAAhB,CAAV;AAA+B,WAA/B,EAAgC,QAAhC,EAAgC;AAAA,mBACtB,IAAAA,UAAA,MAAgB,KAAhB,CADsB;AACA,WADhC;;AAEA;AAIA;AAKA;;AACA;AAGJ;;;;AAhBI;AAFA;AAK4B;AAAA;AAIA;AAAA;AAKL;AAAA;;;;;;;;;;2BAQtBD,uB,EAAuB;cA1BnC,OAAA5b,SA0BmC;eA1BzB;AACPljD,kBAAQ,EAAE,qBADH;AAEPuvD,kBAAQ,yoCAFD;AAwBPnM,mBAAS,EAAE,CAAC,kCAAD;AAxBJ,S;AA0ByB,Q;;;;gBAE/B,OAAA1gD;;;gBAGA,OAAAA;;;gBAMA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AC7CL;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QAgBas8D,2B;AACT,2CAAmBC,SAAnB,EACoCC,UADpC,EACyE;AAAA;;AADtD,aAAAD,SAAA,GAAAA,SAAA;AACiB,aAAAC,UAAA,GAAAA,UAAA;AACnC;;;;mCACO,CAAW;;;+BAEL;;;AACV,qBAAKA,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAEC,QAAF,EAAf;AAA6B,eAAKF,SAAL,CAAeld,KAAf;AAChC;;;;;;AAdL;;;uBAMaid,2B,EAA2B,qC,EAAA,qBAExB,SAAA/b,eAFwB,C;AAET,K;;;YAFlB+b,2B;AAA2B,2C;AAAA,e;AAAA,a;AAAA,+N;AAAA;AAAA;ACjBxC;AACI;AACI;AACH;AACE;AACE;AACA;AAAM;AAA0B;AAClC;AACA;AAA2B;AAAuB;AACpD;AACD;AACD;AACA;AACG;AAA+D;AAAA,mBAAiB,IAAAxU,IAAA,EAAjB;AAAuB,WAAvB;AAAyB;AAC3F;AACH;;;;AAde;AAAA;AAKA;AAAA;AAEmB;AAAA;AAKN;AAAA;;;;;;;;;;2BDIfwU,2B,EAA2B;cANvC,OAAA9b,SAMuC;eAN7B;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,qCAFN;AAGPC,mBAAS,EAAE,CAAC,uCAAD,CAHJ;AAIPiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AAJ1B,S;AAM6B,Q;;;;;;kBAE/B,OAAA+oB,M;mBAAO,SAAAyS,e;;;;;;;;;;;;;;;;;;;;;;;;;AEnBhB;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKQ;AACI;AACuB;AAAM;AAAe;AAAQ;AACxD;;;;;AAFI;AAAA;;;;;;AAGJ;AACI;AAEJ;;;;;AAFI;AAAA;;;;;;AASA;AACI;AACJ;;;;;;AADI;AAAA;;;;QDNHd,uB;AASX,uCAA6ChY,KAA7C,EAA+E;AAAA;;AAAlC,aAAAA,KAAA,GAAAA,KAAA;AAF5B,aAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAIhB;;;;mCAEc;AACb,eAAK34C,QAAL,GAAgB,KAAKmiC,KAAL,CAAWniC,QAA3B;AACA,eAAKipC,SAAL,GAAiB,KAAK9G,KAAL,CAAW8G,SAA5B;AACA,eAAKqR,SAAL,GAAiB,KAAKnY,KAAL,CAAWmY,SAA5B;AACA,eAAKC,cAAL,GAAsB,KAAKpY,KAAL,CAAWoY,cAAjC;AACD;;;mCAEiBn/C,I,EAAc;AAC9B,cAAM4/C,MAAM,GAAG,IAAI,UAAA1uC,MAAJ,CAAW;AAAClR,gBAAI,EAAEA,IAAI,GAAC,IAAZ;AAAmB8lB,uBAAW,EAAE,KAAhC;AAAuCC,uBAAW,EAAE,KAAKghB,KAAL,CAAWniC;AAA/D,WAAX,CAAf;AACA,cAAMo3D,WAAW,GAAG,UAAAn3D,OAAA,CAAQ+6C,MAAR,EAAgB,KAAKh7C,QAArB,CAApB;AACA,cAAMqH,OAAO,GAAG2zC,MAAM,CAACt+C,UAAP,CAAkB,iBAAlB,CAAhB;AACA,2BAAU2K,OAAV,SAAoB+vD,WAAW,GAAG,UAAH,GAAgB,EAA/C;AACD;;;oCAEc;AACb,eAAKtuD,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACD;;;gCAEW;AACV,eAAKxV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACD;;;+BAEU;AACT,eAAKxV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACD;;;;;;AA1CH;;;uBAKa67B,uB,EAAuB,qBASd,SAAAc,eATc,C;AASC,K;;;YATxBd,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,ya;AAAA;AAAA;ACjBpC;AACI;AACI;AACJ;AACJ;AACA;AACI;AACI;AAAI;AAAgC;AACpC;AAIA;AAIJ;AACA;AACI;AACI;AACJ;AACA;AACI;AAGJ;AACJ;AACJ;AACA;AACI;AAIQ;AAAA,wCAA0B,IAAAkd,IAAA,EAA1B,GAAmC,IAAAtd,KAAA,EAAnC;AAA0C,WAA1C;AAJR;AAQA;AACA;AAIQ;AAAA,wCAA0B,IAAAA,KAAA,EAA1B,GAAoC,iBAApC;AAA8C,WAA9C;AAJR;AAQA;AACJ;;;;AAxCY;AAAA;AACc;AAAA;AAIA;AAAA;AAUI;AAAA;AAYlB;AAAA;AAGR;AAAA;AAAA;AAMQ;AAAA;AAGR;AAAA;AAAA;;;;;;;;;2BD7BSI,uB,EAAuB;cALnC,OAAAe,SAKmC;eALzB;AACTljD,kBAAQ,EAAE,qBADD;AAETmjD,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;kBASrB,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAFnB,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AExBH;AAAA;AAAA;;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACUY;AAAsC;AAAU;;;;;AAAV;AAAA;;;;;;AAc1B;;;;;;AACA;AAAsC;AAAsC;;;;;AAAtC;AAAA;;;;;;;;AAX9C;AACI;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACJ;AACJ;;;;;AAPQ;AAAA,uDAAkC,QAAlC,EAAkC,cAAlC;AADA;AAIA;AAAA;AACiB;AAAA;AACE;AAAA;;;;;;AAZ/B;AACI;;AAcJ;;;;;;AAdQ;AAAA;;;;QD4BPic,6B;;;;;AAZb;AAAA;;AAAA;;;AAgBI;;AACgB,iBAAAC,SAAA,GAAY,SAAZ;AAKhB;;AACiB,iBAAA/5D,KAAA,GAAQ,IAAI,OAAAm7C,YAAJ,EAAR;AAED,iBAAAplB,KAAA,GAAQ,IAAIprB,KAAJ,CAAU,CAAV,EAAaomC,IAAb,CAAkB,CAAlB,CAAR;AACT,iBAAAipB,cAAA,GAAyB,UAAA3yD,OAAA,EAAzB,CA1BX,CA4BI;;AACA;;AACO,iBAAA/F,MAAA,GAAS,CAAT;AACP;;AACO,iBAAAiuD,UAAA,GAAa,CAAC,MAAd;AACP;;AACO,iBAAAC,UAAA,GAAa,MAAb;AACP;;AACO,iBAAAC,SAAA,GAA0B,EAA1B;AACP;;AACO,iBAAAC,UAAA,GAAa,UAAAroD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB0B,UAApB,CAA+B,WAA/B,CAAb;AACP;;AACO,iBAAAywD,YAAA,GAAe,EAAf;AAKP;;AACQ,iBAAAC,UAAA,GAAa,KAAb;AACR;;AACQ,iBAAAC,YAAA,GAAe,WAAf;AAMA,iBAAAoK,MAAA,GAAS,UAAA5yD,OAAA,EAAT;;AA+KQ,iBAAA6yD,gBAAA,GAAmB,UAACtgE,EAAD;AAAA,iBAA6B,SAAKwsD,SAAL,GAAiBxsD,EAA9C;AAAA,SAAnB;;AACA,iBAAAugE,iBAAA,GAAoB,UAACvgE,EAAD;AAAA,iBAA6B,SAAKysD,QAAL,GAAgBzsD,EAA7C;AAAA,SAApB;;AAtOpB;AAuOC;;;;mCA3KkB;AACX,eAAKk2D,aAAL;AACA,eAAKC,qBAAL;AACH;;;oCAEkBz0D,O,EAAsB;AACrC,cAAIA,OAAO,CAACykB,OAAZ,EAAqB;AACjB,iBAAKiwC,aAAL;AACH;;AACD,cAAI10D,OAAO,CAAC20D,QAAZ,EAAsB;AAClB,iBAAKH,aAAL;AACH;AACJ;AAED;;;;gCACexpD,I,EAAkB;AAC7B,eAAK0zD,cAAL,GAAsB1zD,IAAI,CAACxF,KAA3B;;AACA,cAAI,KAAKslD,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe,KAAK4T,cAApB;AACH;;AACD,eAAKlK,aAAL;AACH;AAED;;;;;;qCAGiB;AACb,cAAI,CAAC,KAAKkK,cAAV,EAA0B;AACtB;AACH;;AACD,cAAM32C,GAAG,GAAG,KAAK42C,MAAL,CAAY3yD,YAAZ,CAAyB,OAAzB,CAAZ;;AACA,cAAM8yD,kBAAkB,GAAG,KAAKJ,cAAL,CAAoB1yD,YAApB,CAAiC,OAAjC,CAA3B;;AACA,cAAI8yD,kBAAkB,CAACr5C,KAAvB,EAA8B;AAC1B,gBAAMmvC,UAAU,GAAGkK,kBAAkB,CAAC1lC,QAAnB,CACfrR,GADe,EAEf,QAFe,EAGf,QAHe,CAAnB;;AAKA,gBAAI,KAAK/hB,MAAL,KAAgB4uD,UAApB,EAAgC;AAC5B,mBAAK5uD,MAAL,GAAcpD,IAAI,CAACszB,KAAL,CAAW0+B,UAAX,CAAd;AACA,mBAAKlwD,KAAL,CAAWq8C,IAAX,CAAgB,KAAK/6C,MAArB;AACH;;AACD,iBAAKwuD,aAAL;AACH;AACJ;AAED;;;;;;wCAGoB;AAChB,cAAI,KAAK/vC,OAAT,EAAkB;AACd;AACA,gBAAI,KAAKA,OAAL,CAAak+B,UAAjB,EAA6B;AACzB,kBAAMkS,KAAK,GAAG,KAAK8J,MAAL,CAAY3yD,YAAZ,CAAyB,OAAzB,CAAd;;AACA,mBAAKinB,MAAL,GAAc,KAAKxO,OAAL,CAAak+B,UAAb,CAAwB32C,YAAxB,CAAqC,KAArC,CAAd;AACA,mBAAKioD,UAAL,GAAkBrxD,IAAI,CAACszB,KAAL,CACd,KAAKjD,MAAL,CACKjnB,YADL,CACkB,OADlB,EAEKotB,QAFL,CAEcy7B,KAFd,EAEqB,QAFrB,EAE+B,QAF/B,CADc,CAAlB;AAKH,aARD,MAQO,IAAI,KAAK5hC,MAAT,EAAiB;AACpB,mBAAKA,MAAL,GAAc,IAAd,CADoB,CACA;;AACpB,mBAAKghC,UAAL,GAAkB,CAAC,MAAnB;AACH,aAba,CAcd;;;AACA,gBAAI,KAAKxvC,OAAL,CAAam+B,WAAjB,EAA8B;AAC1B,kBAAMiS,OAAK,GAAG,KAAK8J,MAAL,CAAY3yD,YAAZ,CAAyB,OAAzB,CAAd;;AACA,mBAAKknB,IAAL,GAAY,KAAKzO,OAAL,CAAam+B,WAAb,CAAyB52C,YAAzB,CAAsC,KAAtC,CAAZ;AACA,mBAAKkoD,UAAL,GAAkB,KAAKhhC,IAAL,CACblnB,YADa,CACA,OADA,EAEbotB,QAFa,CAEJy7B,OAFI,EAEG,QAFH,EAEa,QAFb,CAAlB;AAGH,aAND,MAMO,IAAI,KAAK3hC,IAAT,EAAe;AAClB,mBAAKA,IAAL,GAAY,IAAZ;AACA,mBAAKghC,UAAL,GAAkB,MAAlB;AACH;;AACD,gBAAI,KAAKzvC,OAAL,CAAa8vC,YAAjB,EAA+B;AAC3B,mBAAKA,YAAL,GAAoB,KAAK9vC,OAAL,CAAa8vC,YAAb,IAA6B,WAAjD;AACH;;AACD,gBAAI,KAAK9vC,OAAL,CAAa6vC,UAAjB,EAA6B;AACzB,mBAAKA,UAAL,GAAkB,KAAK7vC,OAAL,CAAa6vC,UAAb,IAA2B,KAA7C;AACA,mBAAKG,qBAAL;AACH,aA/Ba,CAgCd;;;AACA,iBAAKD,aAAL;AACH;AACJ;AAED;;;;;;wCAGqB;AACjB,eAAKmK,MAAL,GAAc,IAAI,UAAAnrD,MAAJ,CAAW;AAAElR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,uBAAW,EAAE,CAAC,KAAKlhB,QAAvC;AAAiDmhB,uBAAW,EAAE,KAAKnhB;AAAnE,WAAX,CAAd;;AACA,cAAM43D,kBAAkB,GAAG,KAAKH,MAAL,CAAYx7D,QAAZ,CAAqB;AAAEo3B,kBAAM,EAAE,KAAKv0B;AAAf,WAArB,CAA3B;;AACA,cAAM2lC,MAAM,GAAG,KAAK+yB,cAAL,IAAuB,UAAA3yD,OAAA,EAAtC;AACA,cAAI/H,SAAS,GAAG86D,kBAAkB,CAC7B57D,QADW,CACF;AAAEuD,eAAG,EAAE;AAAP,WADE,EAEXvD,QAFW,CAEF;AAAEkE,mBAAO,EAAE;AAAX,WAFE,EAGX2M,aAHW,CAGG;AAAE0mB,iBAAK,EAAE;AAAT,WAHH,CAAhB;AAIA,eAAK05B,SAAL,GAAiB,EAAjB;;AACA,eAAK,IAAIxzD,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,EAApB,EAAwBA,IAAC,EAAzB,EAA6B;AACzB,iBAAKwzD,SAAL,CAAehqD,IAAf,CAAoB;AAChB3E,mBAAK,EAAExB,SADS;AAEhBuK,qBAAO,EAAEvK,SAAS,CAACJ,UAAV,CAAqB,GAArB,CAFO;AAGhB+nC,oBAAM,EAAEA,MAAM,CAAClN,UAAP,CAAkBz6B,SAAlB,EAA6B,KAA7B,CAHQ;AAIhB+wD,uBAAS,EAAE,CAAC+J,kBAAkB,CAACrgC,UAAnB,CAA8Bz6B,SAA9B,EAAyC,OAAzC,CAJI;AAKhBqG,mBAAK,EAAE,KAAKsqD,QAAL,GACD,KAAKA,QAAL,CAAc3wD,SAAS,CAACJ,UAAV,CAAqB,YAArB,CAAd,KAAqD,CADpD,GAED,CAPU;AAQhBi4B,sBAAQ,EACJ,CAAC,KAAK5I,MAAL,GAAcjvB,SAAS,CAACiI,EAAV,GAAe,KAAKgnB,MAAL,CAAYhnB,EAAzC,GAA8C,KAA/C,MACC,KAAKinB,IAAL,GAAYlvB,SAAS,CAACiI,EAAV,GAAe,KAAKinB,IAAL,CAAUjnB,EAArC,GAA0C,KAD3C,CATY;AAWhB4oD,mBAAK,EAAE,KAAK8J,MAAL,CAAYlgC,UAAZ,CAAuBz6B,SAAvB,EAAkC,KAAlC;AAXS,aAApB;AAaAA,qBAAS,GAAGA,SAAS,CAACb,QAAV,CAAmB;AAAE2uB,kBAAI,EAAE;AAAR,aAAnB,CAAZ;AACH;;AACD,eAAKsiC,UAAL,GAAkB0K,kBAAkB,CAACl7D,UAAnB,CAA8B,KAAK2wD,YAAnC,CAAlB;AACH;AAED;;;;;;gDAGgC;AAC5B,cAAIjyD,IAAI,GAAG,KAAKq8D,MAAL,CAAY3yD,YAAZ,CAAyB,MAAzB,CAAX;;AACA,eAAKqoD,YAAL,GAAoB,EAApB;;AACA,eAAK,IAAI1zD,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,CAApB,EAAuBA,IAAC,EAAxB,EAA4B;AACxB,iBAAK0zD,YAAL,CAAkBlqD,IAAlB,CAAuB7H,IAAI,CAACsB,UAAL,CAAgB,KAAK0wD,UAArB,CAAvB;AACAhyD,gBAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAE2uB,kBAAI,EAAE;AAAR,aAAd,CAAP;AACH;AACJ;AAED;;;;;;;;oCAKmBtsB,K,EAAa;AAC5B,cAAMyvD,UAAU,GAAGryD,IAAI,CAACi8B,GAAL,CACf,KAAKq1B,UADU,EAEftxD,IAAI,CAACmD,GAAL,CAAS,KAAKkuD,UAAd,EAA0B,KAAKjuD,MAAL,GAAcR,KAAxC,CAFe,CAAnB;AAIA,eAAKQ,MAAL,GAAcpD,IAAI,CAACszB,KAAL,CAAW++B,UAAX,CAAd;AACA,eAAKT,aAAL;AACA,eAAK9vD,KAAL,CAAWq8C,IAAX,CAAgB,KAAK/6C,MAArB;AACH;AAED;;;;;;gCAGe;AACX,cAAMA,MAAM,GAAG,KAAKA,MAApB;AACA,eAAKA,MAAL,GAAcpD,IAAI,CAACszB,KAAL,CACV,KAAKyoC,MAAL,CAAYvlC,QAAZ,CAAqB,KAAKslC,cAA1B,EAA0C,QAA1C,EAAoD,QAApD,CADU,CAAd;AAGA,cAAI14D,MAAM,KAAK,KAAKA,MAApB,EAA4B,KAAKwuD,aAAL;AAC5B,eAAK9vD,KAAL,CAAWq8C,IAAX,CAAgB,KAAK/6C,MAArB;AACH;AAED;;;;;;;mCAIkBR,K,EAAe;AAC7B,cAAIA,KAAJ,EAAW;AACP,iBAAKk5D,cAAL,GAAsBl5D,KAAtB;AACA,iBAAK0vD,UAAL;AACA,iBAAKV,aAAL;AACH;AACJ;;;4BA3KqB;;;AAClB,iBAAO,YAAKkK,cAAL,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEr2C,WAArB,KAAoC,EAA3C;AACH;;;;MA7CO,OAAA3qB,S;;AAbZ;;;6DAYa8gE,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,8C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,uCAR3B,CACP;AACItqB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMsT,6BAAN;AAAA,SAAX,CAFjB;AAGIrT,aAAK,EAAE;AAHX,OADO,CAQ2B,GAFrC,6BAEqC,EAFrC,uBAEqC,C;AAFrC,e;AAAA,a;AAAA,+Z;AAAA;AAAA;ACpDL;AACI;AACI;AAII;AAAA,mBAAS,IAAAgK,WAAA,CAAY,IAAC,CAAb,CAAT;AAAwB,WAAxB;AAEA;AACJ;AACA;AAAmB;AAAA,mBAAY,IAAA/yD,KAAA,EAAZ;AAAmB,WAAnB;AAAqB;AAAgB;AACxD;AAII;AAAA,mBAAS,IAAA+yD,WAAA,CAAY,CAAZ,CAAT;AAAuB,WAAvB;AAEA;AACJ;AACJ;AACA;AACI;AACI;AACJ;AACA;AACI;AAgBJ;AACJ;AACJ;;;;AA3CK;AAKO;AAAA;AAKoC;AAAA;AAIpC;AAAA;AAQI;AAAA;AAGA;AAAA;;;;;;;8ED6BHqJ,6B;;;;2BAAAA,6B,EAA6B;cAZzC,OAAApc,SAYyC;eAZ/B;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,0CAFN;AAGPC,mBAAS,EAAE,CAAC,0CAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMsT,6BAAN;AAAA,aAAX,CAFjB;AAGIrT,iBAAK,EAAE;AAHX,WADO;AAJJ,S;AAY+B,Q;;gBAKrC,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEjEL;AAAA;AAAA;;AASA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWY;AAAyD;AAAS;;;;;AAAvD;AAA8C;AAAA;;;;;;AAcrD;AAAwC;;AAAwB;;;;;AAAxB;AAAA;;;;;;;;AAgBpC;AAKI;AAAA;AAAA;AAAA;AAAA;AACH;AACD;;;;;;;;;;;;QAcPwc,yB;;;;;AA5Db;AAAA;;AAAA;;;AA8DI;;AACgB,iBAAApc,UAAA,GAAqB,UAAA52C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAArB;AAChB;;AACgB,iBAAA0gD,WAAA,GAAsB,UAAA72C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwuB,UAApB,CAA+B,KAA/B,EAAsCvtB,QAAtC,CAA+C;AAAE4oD,eAAK,EAAE;AAAT,SAA/C,CAAtB;AAChB;;AACgB,iBAAAT,QAAA,GAA6B,OAA7B;AAChB;;AACgB,iBAAAtlD,MAAA,GAA2B,QAA3B,CArEpB,CAwEI;;AACgB,iBAAAowB,OAAA,GAAmB,KAAnB;AAChB;;AACgB,iBAAA4oC,SAAA,GAAqB,KAArB;AAMC,iBAAAC,QAAA,GAAW,IAAI,OAAApf,YAAJ,EAAX;AAMD,iBAAAqf,cAAA,GAA0B,IAA1B;AAoBhB;;AACO,iBAAAC,mBAAA,GAAsB,IAAI,OAAAphE,eAAJ,CAA4B,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAA5B,CAAtB;;AAoDA,iBAAAk9D,oBAAA,GAAuB;AAAA,iBAAM,SAAKC,cAAL,CAAoBnK,UAApB,EAAN;AAAA,SAAvB;;AAeS,iBAAA0J,gBAAA,GAAmB,UAACtgE,EAAD;AAAA,iBAA6B,SAAKwsD,SAAL,GAAiBxsD,EAA9C;AAAA,SAAnB;;AACA,iBAAAugE,iBAAA,GAAoB,UAACvgE,EAAD;AAAA,iBAA6B,SAAKysD,QAAL,GAAgBzsD,EAA7C;AAAA,SAApB;;AAhLpB;AA+LC;;;;mCAnGkB;AACX,cAAI,KAAKghE,sBAAT,EAAiC;AAC7B,iBAAKC,UAAL,CAAgB,KAAKD,sBAArB;AACH;AACJ;AAcD;;;;;AAqBA;;;;iCAIgBE,U,EAAoB;AAChC;AACA,cAAMhU,QAAQ,GAAG,KAAK2T,mBAAL,CAAyB35D,KAA1C;AACA,cAAIi6D,SAAS,GAAGD,UAAU,CAACt8D,QAAX,CAAoB;AAAE0B,gBAAI,EAAE4mD,QAAQ,CAAC7e,QAAjB;AAA2BhqC,kBAAM,EAAE6oD,QAAQ,CAACzoD,OAA5C;AAAqDL,kBAAM,EAAE8oD,QAAQ,CAAC9oD;AAAtE,WAApB,CAAhB,CAHgC,CAKhC;;AACA,cAAI+8D,SAAS,CAACxzD,EAAV,GAAe,KAAK02C,UAAL,CAAgB12C,EAAnC,EAAuC;AACnCwzD,qBAAS,GAAG,KAAK9c,UAAjB;AACH;;AAED,eAAKwc,mBAAL,CAAyB1uD,IAAzB,CAA8BgvD,SAA9B;;AACA,cAAI,KAAK3U,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe2U,SAAf;AACH;;AAED,eAAKR,QAAL,CAAcle,IAAd,CAAmB0e,SAAnB;AACA,eAAKvV,YAAL,GAAoB,KAApB;AACH;;;oCAEkB;AACf,cAAM7hC,WAAW,GAAG,KAAKnhB,QAAL,IAAiB,KAAKy7C,UAAL,CAAgBt6B,WAArD;AACA,cAAMD,WAAW,GAAG,UAAArc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBmmB,WAApB,KAAoCA,WAAxD;AACA,eAAKnlB,QAAL,CAAc,IAAI,UAAAsQ,MAAJ,CAAW;AAAE4U,uBAAW,EAAXA,WAAF;AAAeC,uBAAW,EAAXA;AAAf,WAAX,CAAd;AACH;;;4CAI0B;AACvB,eAAK+2C,oBAAL;AACH;AACD;;AACA;;;;;;;mCAIkBV,c,EAAwB;AACtC,eAAKS,mBAAL,CAAyB1uD,IAAzB,CAA8BiuD,cAA9B;AACA,eAAKxU,YAAL,GAAoB,KAApB;AACH;;;yCAKuBruB,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;0CACyB;AACrB,eAAK8vB,QAAL,CAAcC,SAAd;AACH;AAED;;;;yCACwB;AACpB,eAAKD,QAAL,CAAcE,QAAd;AACH;;;4BA/EoB;AACjB,iBAAO,KAAKsT,mBAAL,CAAyB/rD,IAAzB,CAA8B,YAAAjL,GAAA,CAAI,UAAA1E,CAAC,EAAI;AAC1C,gBAAM8K,OAAO,GAAG9K,CAAC,CAACG,UAAF,CAAa,iBAAb,CAAhB;AACA,6BAAU2K,OAAV,SAAoB9K,CAAC,CAACg7B,UAAF,CAAa,IAAI,UAAAjrB,MAAJ,CAAW;AAAE4U,yBAAW,EAAE,KAAf;AAAsBC,yBAAW,EAAE5kB,CAAC,CAAC4kB;AAArC,aAAX,CAAb,EAA6E,KAA7E,IAAsF,UAAtF,GAAmG,EAAvH;AACH,WAHoC,CAA9B,CAAP;AAIH;AAED;;;;4BACkB;AACd,iBAAO,KAAKsjC,QAAL,CAAcK,QAArB;AACH,S,CAED;;;;4BAC2B;AACvB,iBAAO,KAAKmT,mBAAL,CAAyB/rD,IAAzB,CAA8B,YAAAjL,GAAA,CAAI,UAAA1E,CAAC,EAAI;AAC1C,mBAAOA,CAAP;AACH,WAFoC,CAA9B,CAAP;AAIH;;;;MArE0C,OAAA1E,a;;AA5D/C;;;yDA4DaggE,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,0C;AAAA;AAAA;+BA6CvB,OAAA9S,c,EAAgB,I;+BAChB,oCAAAuS,6B,EAA+B,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAtD/B,CACP;AACItqB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAM6T,yBAAN;AAAA,SAAX,CAFjB;AAGI5T,aAAK,EAAE;AAHX,OADO,C,GAMV,6B;AAAA,e;AAAA,c;AAAA,wnB;AAAA;AAAA;AAvDG;AAMI;AACI;AAQI;AAAA,mBAAiB,IAAAe,cAAA,EAAjB;AAAiC,WAAjC;AAKJ;AACA;AACI;AAEJ;AACJ;AAEA;AAAgD;AAAA,mBAAS,IAAAwT,iBAAA,EAAT;AAA4B,WAA5B;AAC5C;AAAyB;AAAA,mBAASvT,MAAM,CAACr6C,eAAP,EAAT;AAAiC,WAAjC;AACrB;AAKI;AAAiB,gBAAA5O,QAAA;AAAkB,uBAAAkpD,eAAA;AAAiB,WAApD;;AACH;AACD;AAQJ;AACJ;AACJ;;;;;;AA7CI,qDAA6B,gBAA7B,EAA6B,cAA7B,EAA6B,YAA7B,EAA6B,cAA7B,EAA6B,OAA7B,EAA6B,SAA7B;AAK6B;AAAA;AAErB;AAAA,6DAAqC,WAArC,EAAqC,cAArC,EAAqC,QAArC,EAAqC,WAArC,EAAqC,YAArC,EAAqC,wBAArC;AAQA;AAFA;AAMiB;AAAA;AAGb;AAAA;AAQA;AAAA,kDAAqB,SAArB,EAAqB,+CAArB,EAAqB,SAArB,EAAqB,4DAArB;AASA;AAAA;;;;;;;0EAiBX2S,yB;;;;2BAAAA,yB,EAAyB;cA5DrC,OAAA3c,SA4DqC;eA5D3B;AACPljD,kBAAQ,EAAE,qBADH;AAEPuvD,kBAAQ,6sEAFD;AAmDPnM,mBAAS,EAAE,CAAC,sCAAD,CAnDJ;AAoDPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAM6T,yBAAN;AAAA,aAAX,CAFjB;AAGI5T,iBAAK,EAAE;AAHX,WADO;AApDJ,S;AA4D2B,Q;;gBACjC,OAAAvpD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAA3gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAGA,OAAAA;;;gBAeA,OAAA+jD,S;iBAAU,OAAAsG,c,EAAgB;AAAE,sBAAQ;AAAV,W;;;gBAC1B,OAAAtG,S;iBAAU,oCAAA6Y,6B,EAA+B;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;;;;;ACnI9C;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMY;AAA+C;AAAS;;;;;AAA/B;AAAsB;AAAA;;;;;;AAgBvC;AAII;;AAIJ;;;;;;AANI,gDAAsB,UAAtB,EAAsB,4BAAtB;AAGI;AAAA,2CAAiB,UAAjB,EAAiB,kDAAjB;;;;QAqBfmB,4B;;;;;AA9Cb;AAAA;;AAAA;;;AAyDI;AACA;;AACgB,iBAAAvpC,OAAA,GAAmB,KAAnB;AAEhB;;;;AAGgB,iBAAA7wB,cAAA,GAAkC,aAAAq6D,qBAAlC;AAUhB;;AACO,iBAAAp6D,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAA4B,aAAA8hE,gBAA5B,CAAR;AAEA,iBAAAC,kBAAA,GAAqB,IAAI,OAAA/hE,eAAJ,CAAoB,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAApB,CAArB;AAEA,iBAAA00D,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEA,iBAAAmkC,WAAA,GAAc,OAAA3vC,aAAA,CAAc,CAAC,SAAKwmC,iBAAL,CAAuB/5B,YAAxB,EAAsC,SAAKijC,kBAA3C,CAAd,EAA8E1sD,IAA9E,CAEb,YAAAjL,GAAA,CAAI,iBAA+B;AAAA;AAAA,cAA7B3C,KAA6B;AAAA,cAAtBT,gBAAsB;;AAC/B;;;;AAIA,cAAMkH,EAAE,GAAG,UAAAwyC,sCAAA,CAAuC15C,gBAAgB,CAACkH,EAAxD,EAA4DlH,gBAAgB,CAACsjB,WAA7E,EAA0Fpc,EAArG;AACA,iBAAO,OAAA3G,sBAAA,CAAuB,SAAKC,cAA5B,EAA4C0G,EAA5C,EAAgDzG,KAAhD,CAAP;AACH,SAPD,CAFa,CAAd;AAYA,iBAAAif,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CAAyC,EAAzC,CAAV;AAEA,iBAAAiiE,iBAAA,GAAoB,SAAKv7C,OAAL,CAAarR,IAAb,CACvB,YAAAjL,GAAA,CAAI,UAAAsc,OAAO;AAAA,iBAAIA,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAY,aAAAq6D,gBAAhB;AAAA,WAAd,CAAJ;AAAA,SAAX,CADuB,CAApB;AAIA,iBAAAI,cAAA,GAAiB,OAAA7vC,aAAA,CAAc,CAAC,SAAK3L,OAAN,EAAe,SAAKjf,KAApB,CAAd,EAA0C4N,IAA1C,CACpB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAEsc,OAAF;AAAA,cAAWjf,KAAX;;AAAA,iBAAsBif,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,WAAd,CAAtB;AAAA,SAAJ,CADoB,CAAjB;AAnGX;AA4KC;;;;mCArEqB2lB,M,EAA2B;AACzC,iBAAO,KAAK3lB,KAAL,CAAW4N,IAAX,CAAgB,YAAAjL,GAAA,CAAI,UAAAkJ,CAAC;AAAA,mBAAIA,CAAC,KAAK8Z,MAAM,CAAC3lB,KAAjB;AAAA,WAAL,CAAhB,CAAP;AACH;;;mCAEiB2lB,M,EAA2B;AACzC,iBAAO,KAAKyW,UAAL,GAAkBzW,MAAM,CAAC3lB,KAAP,GAAe,KAAKo8B,UAAtC,GAAmD,KAA1D;AACH;;;mCAMO;AAAA;;AACJ,eAAKvhC,YAAL,CAAkB,oBAAlB,EACI,KAAKy/D,kBAAL,CAAwB1sD,IAAxB,CACI,YAAAjL,GAAA,CAAI,UAAA1E,CAAC;AAAA,mBAAI,aAAAy8D,iCAAA,CAAkCz8D,CAAlC,EAAqC,QAAI,CAAC8B,cAA1C,EAA0D,QAAI,CAAC46D,QAA/D,CAAJ;AAAA,WAAL,CADJ,EAEE5/D,SAFF,CAEY,UAAAkQ,IAAI,EAAI;AAChB,oBAAI,CAACgU,OAAL,CAAahU,IAAb,CAAkBA,IAAlB;AACH,WAJD,CADJ;AAMH;;;oCAEkBzQ,O,EAAsB;AACrC,cAAIA,OAAO,CAACkH,QAAZ,EAAsB;AAClB,gBAAMk5D,IAAI,GAAG,aAAAF,iCAAA,CAAkC,KAAKJ,kBAAL,CAAwBt6D,KAA1D,EAAiE,KAAKD,cAAtE,EAAsF,KAAK46D,QAA3F,CAAb;AACA,iBAAK17C,OAAL,CAAahU,IAAb,CAAkB2vD,IAAlB;AACH;;AACD,cAAIpgE,OAAO,CAACkN,WAAZ,EAAyB;AACrB,iBAAK4yD,kBAAL,CAAwBrvD,IAAxB,CAA6BzQ,OAAO,CAACkN,WAAR,CAAoB/G,YAAjD;AACH;AACJ;AAED;;;;;;;iCAIgBukD,S,EAAiB;AAC7B,eAAK6U,UAAL,CAAgB7U,SAAhB;AACH;AAED;;;;;;;mCAIW9rC,G,EAAW;AAClB,eAAKpZ,KAAL,CAAWiL,IAAX,CAAgBmO,GAAhB;;AACA,cAAI,KAAKksC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAelsC,GAAf;AACH;AACJ,S,CAED;AACA;AACA;;AAEA;;;;;;;yCAIwBtgB,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;4BA5DmB;;;AAChB,iBAAO,CAAP,WAAO,KAAKyuD,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;;;;MAnE6C,OAAAt4D,a;;AA9ClD;;;4DA8Ca4gE,4B;AAA4B,K;;;YAA5BA,4B;AAA4B,6C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;uCAT1B,CACP;AACIzrB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMyU,4BAAN;AAAA,SAAX,CAFjB;AAGIxU,aAAK,EAAE;AAHX,OADO,C,GAMV,6B,EAAA,uB;AAAA,e;AAAA,c;AAAA,gmB;AAAA;AAAA;AAxCG;AACI;AACA;AACI;AAMI;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;;;AAEA;AACI;;AAIJ;AACA;;;;AASJ;AACA;AACI;AACJ;AACJ;AACJ;;;;;;;;AA9Be;AAAA;AAIH;AAAA,kDAAoD,UAApD,EAAoD,WAApD,EAAoD,OAApD,EAAoD,gCAApD;AASQ;AAAA,uDAAsD,aAAtD,EAAsD,qBAAtD;AAIJ;AAAA;AAUc;AAAA;;;;;;;;6EAezBy8D,4B;;;;2BAAAA,4B,EAA4B;cA9CxC,OAAAvd,SA8CwC;eA9C9B;AACPljD,kBAAQ,EAAE,wBADH;AAEPuvD,kBAAQ,8vDAFD;AAoCPnM,mBAAS,EAAE,CAAC,wCAAD,CApCJ;AAqCPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMyU,4BAAN;AAAA,aAAX,CAFjB;AAGIxU,iBAAK,EAAE;AAHX,WADO,CArCJ;AA4CPoO,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AA5C1B,S;AA8C8B,Q;;gBACpC,OAAA/kB;;;gBACA,OAAAA;;;gBACA,OAAAA;;;gBAKA,OAAAA;;;gBAEA,OAAAA;;;gBAGA,OAAAA;;;gBAKA,OAAAA;;;gBAQA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AC3Gf;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMY;AAA+C;AAE7C;;;;;AAFuB;AAAsB;AAAA;;;;;;AAwBvC;AAQI;AAIJ;;;;;;AANI;AAGI;AAAA,2CAAiB,UAAjB,EAAiB,4BAAjB;;;;QAyBf0a,wB;;;;;AA9Db;AAAA;;AAAA;;;AAoEI;;AACgB,iBAAAv7D,IAAA,GAAO,EAAP;AAChB;AACA;;AACA;;AACgB,iBAAAw7D,WAAA,GAAc,IAAd;AAChB;;AACgB,iBAAA3d,UAAA,GAAqB,UAAA52C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAArB,CA3EpB,CA4EI;;AACgB,iBAAAk0B,OAAA,GAAmB,KAAnB;AACA,iBAAAmqC,YAAA,GAAwB,KAAxB;AACA,iBAAAC,eAAA,GAA2B,KAA3B;AAShB;;AACO,iBAAA9B,cAAA,GAAiB,IAAI,OAAA3gE,eAAJ,CACpB,OAAAiF,mBAAA,CAAoB,UAAA+I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAApB,EAAyC,SAAK4C,IAA9C,CADoB,CAAjB;AAIP;;AACO,iBAAA27D,kBAAA,GAAqB,IAAI,OAAA1iE,eAAJ,CACxB,OAAAiP,6BAAA,CAA8B,SAAK0xD,cAAL,CAAoBl5D,KAAlD,CADwB,CAArB;AAIA,iBAAAoxD,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEP;;AACO,iBAAAnX,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CACb,aAAA2iE,wBAAA,CACI,UAAA30D,OAAA,EADJ,EAEI,CAAC,SAAKu0D,WAFV,EAGI,SAAKx7D,IAHT,EAII,SAAKoC,QAJT,EAKI,SAAKkvB,OALT,EAMI,SAAKmqC,YAAL,GACM,CAACI,uBAAuB,CAAC,UAAA50D,OAAA,EAAD,CAAxB,CADN,GAEM,EARV,EASI,SAAKy0D,eATT,CADa,CAAV;AAyHP;;;;AAGO,iBAAAT,WAAA,GAAc,OAAA3vC,aAAA,CAAc,CAC/B,SAAKwmC,iBAAL,CAAuB/5B,YADQ,EAE/B,SAAK6hC,cAF0B,CAAd,EAGlBtrD,IAHkB,CAIjB,YAAAjL,GAAA,CAAI,kBAA6B;AAAA;AAAA,cAA3B3C,KAA2B;AAAA,cAApBk5D,cAAoB;;AAC7B,iBAAO,OAAA75D,kBAAA,CACH,SAAKC,IADF,EAEHU,KAFG,EAGH,QAAAP,QAAA,CAAS8iB,GAAT,GAAe5iB,OAAf,EAHG,CAAP;AAKH,SAND,CAJiB,CAAd;AAaP;;;;AAGO,iBAAA66D,iBAAA,GAAoB,SAAKv7C,OAAL,CAAarR,IAAb,CACvB,YAAAjL,GAAA,CAAI,UAACy4D,EAAD;AAAA,iBAAQA,EAAE,CAACp8D,MAAH,GAAY,CAAZ,IAAiBo8D,EAAE,CAAC,CAAD,CAA3B;AAAA,SAAJ,CADuB,CAApB;AAIP;;;;AAGO,iBAAAX,cAAA,GAAiB,OAAA7vC,aAAA,CAAc,CAClC,SAAK3L,OAD6B,EAElC,SAAKi6C,cAF6B,CAAd,EAGrBtrD,IAHqB,CAIpB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAEsc,OAAF;AAAA,cAAWi6C,cAAX;;AAAA,iBACAj6C,OAAO,CAAC3e,IAAR,CACI,UAAC0lB,CAAD;AAAA,mBACIA,CAAC,CAACjd,OAAF,KAAc,OAAAvB,6BAAA,CAA8B0xD,cAA9B,CADlB;AAAA,WADJ,CADA;AAAA,SAAJ,CAJoB,CAAjB;AAxPX;AA+VC;;;;mCA5OkB;AAAA;;AACX;AACA,eAAKj6C,OAAL,CAAahU,IAAb,CACI,aAAAiwD,wBAAA,CACI,KAAKhC,cAAL,CAAoBl5D,KADxB,EAEI,CAAC,KAAK86D,WAFV,EAGI,KAAKx7D,IAHT,EAII,KAAKoC,QAJT,EAKI,KAAKkvB,OALT,EAMI,KAAKmqC,YAAL,GACM,CAACI,uBAAuB,CAAC,KAAKjC,cAAL,CAAoBl5D,KAArB,CAAxB,CADN,GAEM,EARV,EASI,KAAKg7D,eATT,CADJ,EAFW,CAeX;;AACA,eAAKngE,YAAL,CACI,iBADJ,EAEI,OAAA+vB,aAAA,CAAc,CAAC,KAAKsuC,cAAN,CAAd,EACKtrD,IADL,CAEQ,YAAAjL,GAAA,CAAI,kBAAsB;AAAA;AAAA,gBAApBu2D,cAAoB;;AACtB;;;;AAIA,mBAAO,OAAA17D,mBAAA,CAAoB07D,cAApB,EAAoC,QAAI,CAAC55D,IAAzC,CAAP;AACH,WAND,CAFR,EASQ,YAAAyjD,cAAA,CAAe,KAAK9jC,OAApB,CATR,EAUQ,YAAAvb,MAAA,CACI,kBAGM;AAAA;AAAA,gBAHJ5G,IAGI;AAAA,gBAHEu+D,WAGF;;AACF;AACA,mBAAO,CAACA,WAAW,CAAC/6D,IAAZ,CACJ,UAACuL,CAAD;AAAA,qBAAOA,CAAC,CAAC7L,KAAF,KAAYlD,IAAI,CAACsB,UAAL,CAAgB,OAAhB,CAAnB;AAAA,aADI,CAAR;AAGH,WATL,CAVR,EAqBQ,YAAAuE,GAAA,CAAI,kBAA2B;AAAA;AAAA,gBAAzBlF,MAAyB;AAAA,gBAAjB49D,WAAiB;;AAC3B;AACA;AACAA,uBAAW,CAAC12D,IAAZ,CAAiB;AACboE,qBAAO,EAAE,OAAAvB,6BAAA,CAA8B/J,MAA9B,CADI;AAEbsgB,0BAAY,EAAEtgB,MAAM,CAACW,UAAP,CAAkB,QAAlB,CAFD;AAGb4B,mBAAK,EAAEvC;AAHM,aAAjB,EAH2B,CAS3B;;AACA49D,uBAAW,CAACr2D,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBACb,UAAGD,CAAC,CAACjF,KAAL,EAAamF,aAAb,WAA8BD,CAAC,CAAClF,KAAhC,EADa;AAAA,aAAjB;AAGA,mBAAOq7D,WAAP;AACH,WAdD,CArBR,EAqCKtgE,SArCL,CAqCe,UAACkQ,IAAD,EAAU;AACjB,mBAAO,QAAI,CAACgU,OAAL,CAAahU,IAAb,CAAkBA,IAAlB,CAAP;AACH,WAvCL,CAFJ;AA2CH;;;oCAEkBzQ,O,EAAsB;AACrC,cACIA,OAAO,CAAC2sD,aAAR,IACA3sD,OAAO,CAAC8E,IADR,IAEA9E,OAAO,CAAC2iD,UAFR,IAGA3iD,OAAO,CAACo2B,OAJZ,EAKE;AACE;AACA,iBAAK3R,OAAL,CAAahU,IAAb,CACI,aAAAiwD,wBAAA,CACI,KAAKhC,cAAL,CAAoBl5D,KADxB,EAEI,CAAC,KAAK86D,WAFV,EAGI,KAAKx7D,IAHT,EAII,KAAKoC,QAJT,EAKI,KAAKkvB,OALT,EAMI,KAAKmqC,YAAL,GACM,CAACI,uBAAuB,CAAC,KAAKjC,cAAL,CAAoBl5D,KAArB,CAAxB,CADN,GAEM,EARV,EASI,KAAKg7D,eATT,CADJ,EAFF,CAeE;;AACA,gBACIxgE,OAAO,CAACo2B,OAAR,IACA,CAACp2B,OAAO,CAACo2B,OAAR,CAAgBjwB,YADjB,IAEAnG,OAAO,CAACo2B,OAAR,CAAgBlwB,aAHpB,EAIE;AACE,mBAAKhD,QAAL,CAAc,KAAKuhB,OAAL,CAAajf,KAAb,CAAmB,CAAnB,EAAsB+I,OAApC;AACH;AACJ;AACJ;AAED;;;;;;;AAoDA;;;;;;mCAMkB4c,M,EAA8B;AAC5C,iBAAO,KAAKs1C,kBAAL,CAAwBj7D,KAAxB,KAAkC2lB,MAAM,CAAC5c,OAAhD;AACH;AAED;;;;;;;yCAIwBjQ,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;AAED;;;;AAIA;AACA;AACA;;AAEA;;;;;;;0CAIyB2E,M,EAAgB;AACrC;AACA,eAAKw9D,kBAAL,CAAwBhwD,IAAxB,CAA6B,OAAAzD,6BAAA,CAA8B/J,MAA9B,CAA7B;AACA,eAAKy7D,cAAL,CAAoBjuD,IAApB,CAAyBxN,MAAzB;;AACA,cAAI,KAAK6nD,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe7nD,MAAf;AACH;AACJ;AAED;;;;;;;iCAIgB69D,a,EAAqB;AACjC;AACA,cAAMC,SAAS,GAAG,KAAKt8C,OAAL,CAAajf,KAAb,CAAmBM,IAAnB,CACd,UAACsiD,GAAD;AAAA,mBAASA,GAAG,CAAC75C,OAAJ,KAAgBuyD,aAAzB;AAAA,WADc,EAEhBt7D,KAFF,CAFiC,CAKjC;;AACA,eAAKw7D,iBAAL,CAAuBD,SAAvB,EANiC,CAOjC;;AACA,cAAIA,SAAJ,EAAe;AACX,gBAAI,KAAKjW,SAAT,EAAoB;AAChB,mBAAKA,SAAL,CAAeiW,SAAf;AACH;AACJ;AACJ;AAED;;;;;;;mCAIkB99D,M,EAAuB;AACrC;AACA,cAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB;AACA,iBAAK+9D,iBAAL,CAAuB/9D,MAAvB,EAFgB,CAGhB;;AACA,iBAAKwhB,OAAL,CAAahU,IAAb,CACI,aAAAiwD,wBAAA,CACIz9D,MADJ,EAEI,CAAC,KAAKq9D,WAFV,EAGI,KAAKx7D,IAHT,EAII7B,MAAM,CAAColB,WAJX,EAKI,KAAK+N,OALT,EAMI,KAAKmqC,YAAL,GACM,CAACI,uBAAuB,CAAC19D,MAAD,CAAxB,CADN,GAEM,EARV,EASI,KAAKu9D,eATT,CADJ;AAaH;AACJ;;;4BA3ImB;;;AAChB,iBAAO,CAAP,WAAO,KAAKzT,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;AAED;;;;;;4BAGmB;AACf,iBAAO,KAAK1U,UAAL,CAAgBt6B,WAAvB;AACH;;;;MA7JO,OAAAtpB,a;;AA/DZ;;;wDA8DashE,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;uCATtB,CACP;AACInsB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMmV,wBAAN;AAAA,SAAX,CAFjB;AAGIlV,aAAK,EAAE;AAHX,OADO,C,GAMV,6B,EAAA,uB;AAAA,e;AAAA,c;AAAA,wkB;AAAA;AAAA;AAxDG;AACI;AAGA;AACI;AAMI;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;;;AAGA;AACI;;;AASJ;AACA;;;;AAaJ;AACA;AACI;AAKJ;AACJ;AACJ;;;;;;;;AA9Ce;AAAA;AAMH;AAAA,kDAAoD,UAApD,EAAoD,WAApD,EAAoD,OAApD,EAAoD,6CAApD;AAUQ;AAAA,uDAIC,aAJD,EAIC,qBAJD;AASJ;AAAA;AAeA;AAAA;;;;;;;;yEAkBXm9D,wB;;;;2BAAAA,wB,EAAwB;cA9DpC,OAAAje,SA8DoC;eA9D1B;AACPljD,kBAAQ,EAAE,oBADH;AAEPuvD,kBAAQ,2rEAFD;AAoDPnM,mBAAS,EAAE,CAAC,qCAAD,CApDJ;AAqDPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMmV,wBAAN;AAAA,aAAX,CAFjB;AAGIlV,iBAAK,EAAE;AAHX,WADO,CArDJ;AA4DPoO,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AA5D1B,S;AA8D0B,Q;;gBAIhC,OAAA/kB;;;gBACA,OAAAA;;;gBAEA,OAAAA;;;gBAIA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBACA,OAAAA;;;gBACA,OAAAA;;;gBAQA,OAAA+jD,S;iBAAU,Q;;;;;AA0Qf,aAASgb,uBAAT,CAAiC19D,MAAjC,EAA+C;AAC3C,aAAO;AACHsL,eAAO,EAAE,OAAAvB,6BAAA,CAA8B/J,MAA9B,CADN;AAEHsgB,oBAAY,EAAEtgB,MAAM,CAACW,UAAP,CAAkB,QAAlB,CAFX;AAGH4B,aAAK,EAAEvC;AAHJ,OAAP;AAKH;;;;;;;;;;;;;;;;;;;;;ACzYD;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBoB;AAII;;AAIJ;;;;;;AANI,gDAAsB,UAAtB,EAAsB,4BAAtB;AAGI;AAAA,2CAAiB,UAAjB,EAAiB,kDAAjB;;;;QAqBfopD,sB;;;;;AA9Cb;AAAA;;AAAA;;;AA2DI;;AACgB,iBAAAnlD,QAAA,GAAoB,IAAI,UAAAsM,MAAJ,CAAW;AAAElR,cAAI,EAAEJ,IAAI,CAAC6lB,GAAL;AAAR,SAAX,EAAiCk1B,QAArD;AAEhB;;;;AAGgB,iBAAA13C,cAAA,GAAkC,aAAAq6D,qBAAlC;AAUT,iBAAAp6D,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAA4B,aAAA8hE,gBAA5B,CAAR;AAEA,iBAAA96D,gBAAA,GAAmB,IAAI,OAAAhH,eAAJ,CAAoB,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAApB,CAAnB;AAEA,iBAAA00D,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEA,iBAAAmkC,WAAA,GAAc,OAAA3vC,aAAA,CAAc,CAAC,SAAKwmC,iBAAL,CAAuB/5B,YAAxB,EAAsC,SAAK93B,gBAA3C,CAAd,EAA4EqO,IAA5E,CACjB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAE3C,KAAF;AAAA,cAAST,gBAAT;;AAAA,iBAA+B,OAAAO,sBAAA,CAAuB,SAAKC,cAA5B,EAA4CR,gBAAgB,CAACkH,EAA7D,EAAiEzG,KAAjE,CAA/B;AAAA,SAAJ,CADiB,CAAd;AAIA,iBAAAif,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CAAyC,EAAzC,CAAV;AAEA,iBAAAiiE,iBAAA,GAAoB,SAAKv7C,OAAL,CAAarR,IAAb,CACvB,YAAAjL,GAAA,CAAI,UAAAsc,OAAO;AAAA,iBAAIA,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAY,aAAAq6D,gBAAhB;AAAA,WAAd,CAAJ;AAAA,SAAX,CADuB,CAApB;AAIA,iBAAAI,cAAA,GAAiB,OAAA7vC,aAAA,CAAc,CAAC,SAAK3L,OAAN,EAAe,SAAKjf,KAApB,CAAd,EAA0C4N,IAA1C,CACpB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAEsc,OAAF;AAAA,cAAWjf,KAAX;;AAAA,iBAAsBif,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,WAAd,CAAtB;AAAA,SAAJ,CADoB,CAAjB;AA3FX;AAsKC;;;;mCAvEqB2lB,M,EAA2B;AACzC,iBAAO,KAAK3lB,KAAL,CAAW4N,IAAX,CAAgB,YAAAjL,GAAA,CAAI,UAAAkJ,CAAC;AAAA,mBAAIA,CAAC,KAAK8Z,MAAM,CAAC3lB,KAAjB;AAAA,WAAL,CAAhB,CAAP;AACH;;;mCAEiB2lB,M,EAA2B;AACzC,iBAAO,KAAKyW,UAAL,GAAkBzW,MAAM,CAAC3lB,KAAP,GAAe,KAAKo8B,UAAtC,GAAmD,KAA1D;AACH;;;mCAMO;AAAA;;AACJ,eAAKvhC,YAAL,CAAkB,oBAAlB,EACI,KAAK0E,gBAAL,CAAsBqO,IAAtB,CACI,YAAAjL,GAAA,CAAI,UAAA1E,CAAC;AAAA,mBAAI,aAAAy8D,iCAAA,CAAkCz8D,CAAC,CAACiJ,MAAF,CAAS,QAAI,CAACxF,QAAd,CAAlC,EAA2D,QAAI,CAAC3B,cAAhE,EAAgF,QAAI,CAAC46D,QAArF,CAAJ;AAAA,WAAL,CADJ,EAEE5/D,SAFF,CAEY,UAAAkQ,IAAI,EAAI;AAChB,oBAAI,CAACgU,OAAL,CAAahU,IAAb,CAAkBA,IAAlB;AACH,WAJD,CADJ;AAMH;;;oCAEkBzQ,O,EAAsB;AACrC,cAAIA,OAAO,CAACkH,QAAZ,EAAsB;AAClB,gBAAMk5D,IAAI,GAAG,aAAAF,iCAAA,CAAkC,KAAKn7D,gBAAL,CAAsBS,KAAtB,CAA4BkH,MAA5B,CAAmC,KAAKxF,QAAxC,CAAlC,EAAqF,KAAK3B,cAA1F,EAA0G,KAAK46D,QAA/G,CAAb;AACA,iBAAK17C,OAAL,CAAahU,IAAb,CAAkB2vD,IAAlB;AACH;;AACD,cAAIpgE,OAAO,CAACgE,SAAZ,EAAuB;AACnB;AACA,gBAAM1B,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,kBAAI,EAAE,KAAK0B;AAAZ,aAAX,CAAb;AACA,iBAAKe,gBAAL,CAAsB0L,IAAtB,CAA2BnO,IAA3B;AACH;AACJ;AAED;;;;;;;iCAIgBooD,S,EAAiB;AAC7B,eAAK6U,UAAL,CAAgB7U,SAAhB;AACH;AAED;;;;;;;mCAIW9rC,G,EAAW;AAClB,eAAKpZ,KAAL,CAAWiL,IAAX,CAAgBmO,GAAhB;;AACA,cAAI,KAAKksC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAelsC,GAAf;AACH;AACJ;;;yCAEuBid,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;;;yCAIwBv9B,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;4BA9DmB;;;AAChB,iBAAO,CAAP,WAAO,KAAKyuD,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;;;;MA3DuC,OAAAt4D,a;;AA9C5C;;;sDA8CastD,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;uCATpB,CACP;AACInY,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMmB,sBAAN;AAAA,SAAX,CAFjB;AAGIlB,aAAK,EAAE;AAHX,OADO,C,GAMV,6B,EAAA,uB;AAAA,e;AAAA,c;AAAA,okB;AAAA;AAAA;AAxCG;AACI;AAAiC;AAAS;AAC1C;AACI;AAMI;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;;;AAEA;AACI;;AAIJ;AACA;;;;AASJ;AACA;AACI;AACJ;AACJ;AACJ;;;;;;;;AA9Be;AAAA;AAAsB;AAAA;AAIzB;AAAA,kDAAoD,OAApD,EAAoD,gCAApD,EAAoD,UAApD,EAAoD,YAApD;AASQ;AAAA,uDAAsD,aAAtD,EAAsD,qBAAtD;AAIJ;AAAA;AAUc;AAAA;;;;;;;;uEAezBmpD,sB;;;;2BAAAA,sB,EAAsB;cA9ClC,OAAAjK,SA8CkC;eA9CxB;AACPljD,kBAAQ,EAAE,oBADH;AAEPuvD,kBAAQ,+uDAFD;AAoCPnM,mBAAS,EAAE,CAAC,gCAAD,CApCJ;AAqCPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMmB,sBAAN;AAAA,aAAX,CAFjB;AAGIlB,iBAAK,EAAE;AAHX,WADO,CArCJ;AA4CPoO,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AA5C1B,S;AA8CwB,Q;;gBAC9B,OAAA/kB;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAGA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAKA,OAAAA;;;gBAQA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AC9Gf;AAAA;AAAA;;;;;;;;QAgBasb,qB,GAET,iCAAc;AAAA;AACb,K;;AAjBL;;;uBAcaA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA,6B;AAAA,c;AAAA,a;AAAA,0F;AAAA;AAAA;;AAX1B;AACI;AACI;AACA;AACI;AACJ;AACJ;AACJ;;;;;;;;2BAIKA,qB,EAAqB;cAdjC,OAAA7e,SAciC;eAdvB;AACPljD,kBAAQ,EAAE,mBADH;AAEPuvD,kBAAQ,yRAFD;AAYPnM,mBAAS,EAAE,CAAC,gCAAD;AAZJ,S;AAcuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AChBlC;AAAA;AAAA;;AAKA;AAAA;AAAA;;;;;;;;;;;;AAMY;AAAA;AACI;AAIJ;;;;;AAHU;AAAA;;;;QAOT4e,qB;;;;;AAKT,qCAAYpG,KAAZ,EAAqC;AAAA;;AAAA,mCAC3BA,KAD2B;AAEpC;;;MAPsC,0BAAAD,qB;;AAb3C;;;uBAaaqG,qB,EAAqB,yC;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,4nB;AAAA;AAAA;AAV1B;;;;;;;;;2BAUKA,qB,EAAqB;cAbjC,OAAA9e,SAaiC;eAbvB;AACPljD,kBAAQ,EAAE,mBADH;AAEPuvD,kBAAQ;AAFD,S;AAauB,Q;;;;;;gBAE7B,OAAA7sD;;;;;;;;;;;;;;;;;;;;;;;;ACtBL;AAAA;AAAA;;AAKA;AAAA;AAAA;;;;;;;;;;;;AAMY;AACI;AACI;AAAA;AACI;AAKJ;AACJ;AACJ;;;;;AATkC;AAAA;AAIlB;AAAA;;;;QAgBfu/D,oB;;;;;AAQT,oCAAYrG,KAAZ,EAAqC;AAAA;;AAAA,mCAC3BA,KAD2B;AAEpC;;;MAVqC,0BAAAD,qB;;AAzB1C;;;uBAyBasG,oB,EAAoB,yC;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,yQ;AAAA;AAAA;AAtBzB;;;;;;;;;2BAsBKA,oB,EAAoB;cAzBhC,OAAA/e,SAyBgC;eAzBtB;AACPljD,kBAAQ,EAAE,kBADH;AAEPuvD,kBAAQ;AAFD,S;AAyBsB,Q;;;;;;gBAE5B,OAAA7sD;;;gBAGA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrCL;AAAA;AAAA;;;;;;;;;;QAoBaw/D,kB;AAKT,oCAAc;AAAA;AACb;;;;mCAEO,CACP;;;;;;AAvBL;;;uBAcaA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,suB;AAAA;AAAA;AAXvB;AAAA;AACI;AAGA;AAIJ;;;;AALU;AAAA;AAGA;AAAA;;;;;;;;;2BAKLA,kB,EAAkB;cAd9B,OAAAhf,SAc8B;eAdpB;AACPljD,kBAAQ,EAAE,gBADH;AAEPuvD,kBAAQ;AAFD,S;AAcoB,Q;;;;gBAE1B,OAAA7sD;;;;;;;;;;;;;;;;;;;;;;;;ACtBL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;AAOgB;AACI;AACI;AACI;AACJ;AACJ;AACJ;;;;;AAHiB;AAAA,+CAAAurB,GAAA;;;;QAUpBk0C,2B;;;;;AAKT,2CAAYvG,KAAZ,EAAqC;AAAA;;AAAA,mCAC3BA,KAD2B;AAEpC;;;MAP4C,0BAAAD,qB;;AAlBjD;;;uBAkBawG,2B,EAA2B,yC;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,gG;AAAA;AAAA;AAd5B;;;;;;;;;2BAcCA,2B,EAA2B;cAlBvC,OAAAjf,SAkBuC;eAjBpC;AACIljD,kBAAQ,EAAE,yBADd;AAEIuvD,kBAAQ,mWAFZ;AAaInM,mBAAS,EAAE,CAAC,sCAAD,CAbf;AAcIiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AAdrC,S;AAiBoC,Q;;;;;;gBAEnC,OAAA/kB;;;;;;;;;;;;;;;;;;;;;;;;AC5BL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;AAQgB;AAA6C;AAAC;;;;;;AAFlD;AACI;AACA;AACJ;;;;;AADgC;AAAA;;;;;;QAM/B0/D,c;;;;;AAKT,8BAAYxG,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,uCAAMA,KAAN;AAHJ,iBAAA/+B,QAAA,GAAW,KAAX;AAEqC;AAEpC;;;MAP+B,0BAAA8+B,qB;;AAZpC;;;uBAYayG,c,EAAc,yC;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,6B;AAAA,c;AAAA,a;AAAA,2E;AAAA;AAAA;;AATnB;;;;;;;;;2BASKA,c,EAAc;cAZ1B,OAAAlf,SAY0B;eAZhB;AACPljD,kBAAQ,EAAE,WADH;AAEPuvD,kBAAQ,kOAFD;AAUPnM,mBAAS,EAAE,CAAC,wBAAD;AAVJ,S;AAYgB,Q;;;;;;gBAEtB,OAAA1gD;;;;;;;;;;;;;;;;;;;;;;;;ACtBL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeoB;AAII;AAII;AACJ;AACJ;;;;;AATI,wCAAiB,OAAjB,EAAiB,eAAjB;AAII;AAAA,8CAAuB,QAAvB,EAAuB,SAAvB,EAAuB,UAAvB,EAAuB,KAAvB;AAGK;AAAA;;;;QAkBpB2/D,uB;AAtCb;AAAA;;AA4CW,aAAA98C,OAAA,GAA+B,EAA/B;AAeV;;;;2CAH0B;AACnB,iBAAO,KAAK+8C,MAAL,IAAe,KAAKC,eAApB,GAAsC,KAAKA,eAA3C,GAA6D,KAAKC,WAAzE;AACH;;;4BANmB;;;AAChB,iBAAO,CAAP,WAAO,KAAK3U,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;;;;;;AAtDL;;;uBAsCakK,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAnC5B;AACI;AAGI;AAKI;AAWJ;AACA;AAAiC;AAAwB;AACzD;AAIA;AACI;AACJ;AACJ;AACJ;;;;AAnBgB;AAAA;AAUyB;AAAA;AAG7B;AAAA;AAGkB;AAAA;;;;;;;;;;2BAQzBA,uB,EAAuB;cAtCnC,OAAAnf,SAsCmC;eAtCzB;AACPljD,kBAAQ,EAAE,qBADH;AAEPuvD,kBAAQ,khDAFD;AAmCPnM,mBAAS,EAAE,CAAC,kCAAD,CAnCJ;AAoCPiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AApC1B,S;AAsCyB,Q;;gBAE/B,OAAA/kB;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAIA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AC3Df;AAAA;AAAA;;AASA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUY;AAAgD;AAAI;;;;AAAzC;;;;;;AAcP;AAAwC;;AAAwB;;;;;AAAxB;AAAA;;;;;;;;;;;;QAmC3Cgc,sB;;;;;AAzDb;AAAA;;AAAA;;;AA0DI;;AACsB,iBAAAtW,KAAA,GAAgB,UAAAt/C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAApC;AAGtB;;AACgB,iBAAAq/C,QAAA,GAA6B,OAA7B;AAChB;;AACgB,iBAAAtlD,MAAA,GAA2B,QAA3B;AAGhB;;AACgB,iBAAAg5D,SAAA,GAAqB,KAArB;AAMC,iBAAAC,QAAA,GAAW,IAAI,OAAApf,YAAJ,EAAX;AAmBjB;;AACO,iBAAA+hB,SAAA,GAAY,IAAI,OAAA7jE,eAAJ,CAA4B,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAA5B,CAAZ;;AA0DA,iBAAAk9D,oBAAA,GAAuB;AAAA,iBAAM,SAAKC,cAAL,CAAoBnK,UAApB,EAAN;AAAA,SAAvB;;AAzJX;AAyMC,O,CA5HG;;;;;mCACe;AACX,cAAI,KAAK2M,oBAAT,EAA+B;AAC3B,iBAAKtC,UAAL,CAAgB,KAAKsC,oBAArB;AACH;AACJ;AAeD;;;;;AA4BA;;;;iCAIgBnX,S,EAAmB;AAC/B;AACA,cAAMc,QAAQ,GAAG,KAAKoW,SAAL,CAAep8D,KAAhC;AACA,cAAM/B,CAAC,GAAG,IAAI,UAAA+P,MAAJ,CAAW;AAAClR,gBAAI,EAAEooD;AAAP,WAAX,CAAV;AACA,cAAIgB,QAAQ,GAAGjoD,CAAC,CACXP,QADU,CACD;AAAE0B,gBAAI,EAAE4mD,QAAQ,CAAC7e,QAAjB;AAA2BhqC,kBAAM,EAAE6oD,QAAQ,CAACzoD;AAA5C,WADC,EAEVkJ,EAFL,CAJ+B,CAO/B;;AACA,cAAIy/C,QAAQ,GAAG,KAAKz5C,IAApB,EAA0B;AACtBy5C,oBAAQ,GAAG,KAAKz5C,IAAhB;AACH;;AACD,cAAMw5C,KAAK,GAAG,IAAI,UAAAj4C,MAAJ,CAAW;AAAElR,gBAAI,EAAEopD;AAAR,WAAX,CAAd;AACA,eAAKkW,SAAL,CAAenxD,IAAf,CAAoBg7C,KAApB;;AACA,cAAI,KAAKX,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeY,QAAf;AACH;;AACD,eAAKuT,QAAL,CAAcle,IAAd,CAAmB2K,QAAnB;AACA,eAAKxB,YAAL,GAAoB,KAApB;AACH;;;oCAEkB;AACf,eAAKhnD,QAAL,CAAc,UAAA6I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAlC;AACH;;;4CAI0B;AACvB,eAAKmzD,oBAAL;AACH;AAED;;AACA;;;;;;;mCAIkB55D,K,EAAe;AAC7B,cAAMlD,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAEkD;AAAP,WAAX,CAAb;AACA,eAAKo8D,SAAL,CAAenxD,IAAf,CAAoBnO,IAApB;AACA,eAAK4nD,YAAL,GAAoB,KAApB;AACH;AAED;;AACA;;;;;;;yCAIwB5rD,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;AACA;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;yCAEuBu9B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;0CACyB;AACrB,eAAK8vB,QAAL,CAAcC,SAAd;AACH;AAED;;;;yCACwB;AACpB,eAAKD,QAAL,CAAcE,QAAd;AACH;;;4BAtGc;AACX,iBAAO,KAAKR,KAAL,IAAc,UAAAt/C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,KAAjC,EAAwCC,EAA7D;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAK6/C,GAAL,IAAY,UAAA//C,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwuB,UAApB,CAA+B,KAA/B,EAAsCvtB,QAAtC,CAA+C;AAAE4oD,iBAAK,EAAE;AAAT,WAA/C,EAA6D9/C,EAAhF;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAK21D,SAAL,CAAexuD,IAAf,CAAoB,YAAAjL,GAAA,CAAI,UAAA1E,CAAC,EAAI;AAChC,gBAAM8K,OAAO,GAAG9K,CAAC,CAACG,UAAF,CAAa,iBAAb,CAAhB;AACA,6BAAU2K,OAAV,SAAoB9K,CAAC,CAACg7B,UAAF,CAAa,UAAA1yB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAb,EAAkC,KAAlC,IAA2C,UAA3C,GAAwD,EAA5E;AACH,WAH0B,CAApB,CAAP;AAIH;AAED;;;;4BACkB;AACd,iBAAO,KAAKypD,QAAL,CAAcK,QAArB;AACH;;;4BAEc;AACX,iBAAO,KAAK4V,SAAZ;AAEH;;;;MAlEuC,OAAA7iE,a;;AAzD5C;;;sDAyDa4iE,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,sC;AAAA;AAAA;+BAkCpB,OAAA1V,c,EAAgB,I;+BAChB,4BAAA6H,sB,EAAwB,I;;;;;;;;;;;;;;;;;;;;;;;uCA3CxB,CACP;AACI5f,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMyW,sBAAN;AAAA,SAAX,CAFjB;AAGIxW,aAAK,EAAE;AAHX,OADO,C,GAMV,6B;AAAA,e;AAAA,c;AAAA,whB;AAAA;AAAA;AApDG;AAKI;AACA;AASI;AAAA,mBAAiB,IAAAe,cAAA,EAAjB;AAAiC,WAAjC;AAIA;AACA;AACI;AAEJ;AACJ;AAEA;AAAgD;AAAA,mBAAS,IAAAwT,iBAAA,EAAT;AAA4B,WAA5B;AAC5C;AAAkD;AAAA,mBAASvT,MAAM,CAACr6C,eAAP,EAAT;AAAiC,WAAjC;AAC9C;AAII;AAAiB,gBAAA5O,QAAA;AAAkB,uBAAAkpD,eAAA;AAAiB,WAApD;;AACH;AACD;AAII;AAAA,mBAAS,IAAA0V,SAAA,EAAT;AAAoB,WAApB;AACH;AACD;AACJ;AACJ;AACJ;;;;;;AA1CI,qDAA6B,gBAA7B,EAA6B,cAA7B,EAA6B,YAA7B,EAA6B,cAA7B;AAI6B;AAAA;AAEzB;AAAA,6DAAqC,WAArC,EAAqC,cAArC,EAAqC,YAArC,EAAqC,WAArC,EAAqC,QAArC,EAAqC,WAArC;AASA;AAFA;AAKqB;AAAA;AAGb;AAAA;AAQA;AAAA,qEAAwB,SAAxB,EAAwB,gDAAxB;;;;;;;uEAwBXH,sB;;;;2BAAAA,sB,EAAsB;cAzDlC,OAAAvf,SAyDkC;eAzDxB;AACPljD,kBAAQ,EAAE,iBADH;AAEPuvD,kBAAQ,q+DAFD;AAgDPnM,mBAAS,EAAE,CAAC,kCAAD,CAhDJ;AAiDPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMyW,sBAAN;AAAA,aAAX,CAFjB;AAGIxW,iBAAK,EAAE;AAHX,WADO;AAjDJ,S;AAyDwB,Q;;gBAE9B,OAAAvpD,K;iBAAM,M;;;gBAEN,OAAAA,K;iBAAM,I;;;gBAEN,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAgBA,OAAAoD,S;iBAAU,OAAAsG,c,EAAgB;AAAE,sBAAQ;AAAV,W;;;gBAC1B,OAAAtG,S;iBAAU,4BAAAmO,sB,EAAwB;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;;;;;ACrHvC;AAAA;AAAA;;AAOA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAeoB;AAII;AAAA;AAAA;AAAA,iBAAS,OAAAiO,eAAA,OAAT;AAA+B,SAA/B;AAGA;AACJ;;;;;AAHI;AAEA;AAAA;;;;;;;;AAEJ;AAII;AAAA;AAAA;AAAA,iBAAS,OAAAC,aAAA,OAAT;AAA6B,SAA7B;AAGA;AAEJ;;;;;AAJI;AAEA;AAAA;;;;;;AAzBZ;AAGI;AAKA;AACI;AASA;AAUJ;AACJ;;;;;AA3BI;AAEI;AAAA;AAIuC;AAAA;AAEnC;AAAA;AASA;AAAA;;;;QAeXC,uB;;;;;AAyCT,uCAAYnH,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,uCAAMA,KAAN;AArCJ;;;;AAIA,iBAAAoH,eAAA,GAA4B,KAA5B;AAEA;;;;AAIO,iBAAAF,aAAA,GAAgB,IAAI,OAAAniB,YAAJ,EAAhB;AASP,iBAAAsiB,YAAA,GAAwB,KAAxB;AAEA;;;;AAIA,iBAAAC,iBAAA,GAA8B,KAA9B;AAEA;;;;AAIO,iBAAAL,eAAA,GAAkB,IAAI,OAAAliB,YAAJ,EAAlB;AAGP,iBAAAwiB,YAAA,GAAyB,KAAzB;AAEqC;AAEpC;;;MA3CwC,0BAAAxH,qB;;AAtC7C;;;uBAsCaoH,uB,EAAuB,yC;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,+rB;AAAA;AAAA;AAnC5B;;;;;;;;;2BAmCKA,uB,EAAuB;cAtCnC,OAAA7f,SAsCmC;eAtCzB;AACPljD,kBAAQ,EAAE,sBADH;AAEPuvD,kBAAQ,g4CAFD;AAoCPnM,mBAAS,EAAE,CAAC,mCAAD;AApCJ,S;AAsCyB,Q;;;;;;gBAE/B,OAAA1gD;;;gBAMA,OAAAA;;;gBAMA,OAAA2gD;;;gBAMA,OAAA3gD;;;gBAGA,OAAAA;;;gBAMA,OAAAA;;;gBAMA,OAAA2gD;;;gBAGA,OAAA3gD;;;;;;;;;;;;;;;;;;;;;;;;ACrFL;AAAA;AAAA;;AAIA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAQoB;AAA+D;AAAA;AAAA;AAAA;AAAA;AAC3D;AACJ;;;;;;AAGA;AAA2D;AAAU;;;;;AAAV;AAAA;;;;;;QAQlE0gE,c;AAMT,8BAAoBnE,SAApB,EAA6D;AAAA;;AAAzC,aAAAA,SAAA,GAAAA,SAAA;AAFX,aAAAoE,WAAA,GAAwB,IAAxB;AAGR;;;;gCAEc;AACX,eAAKpE,SAAL,CAAeld,KAAf;AACH;;;;;;AA9BL;;;uBAmBaqhB,c,EAAc,qC;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,c;AAAA,a;AAAA,mb;AAAA;AAAA;;AAhBnB;AACI;AACI;AACI;AAGJ;AACA;AACI;AACJ;AACJ;AACA;AACJ;;;;AAToB;AAAA;AAKoC;AAAA;;;;;;;;;2BAQnDA,c,EAAc;cAnB1B,OAAAlgB,SAmB0B;eAnBhB;AACPljD,kBAAQ,EAAE,WADH;AAEPuvD,kBAAQ,8rBAFD;AAiBPnM,mBAAS,EAAE,CAAC,wBAAD;AAjBJ,S;AAmBgB,Q;;;;;;gBAEtB,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AC7BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACsBY;AACI;AAAI;AAAoB;AAC5B;;;;;;AADQ;AAAA;;;;QDfP4gE,6B;AAOX,6CAA6Cn5B,KAA7C,EAAiF;AAAA;;AAApC,aAAAA,KAAA,GAAAA,KAAA;AAF5B,aAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAIhB;;;;mCAEc;AACX,eAAKlpB,KAAL,GAAa,KAAK0S,KAAL,CAAW1S,KAAX,CAAiBnsB,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAWD,CAAC,GAAGC,CAAf;AAAA,WAAtB,CAAb;AACH;;;mCAEiBpI,I,EAAc;AAC9B,cAAM4/C,MAAM,GAAG,IAAI,UAAA1uC,MAAJ,CAAW;AAAClR,gBAAI,EAAEA,IAAI,GAAC,IAAZ;AAAkB8lB,uBAAW,EAAE,KAA/B;AAAsCC,uBAAW,EAAE,KAAKghB,KAAL,CAAWniC;AAA9D,WAAX,CAAf;AACA,cAAMo3D,WAAW,GAAG,UAAAn3D,OAAA,CAAQ+6C,MAAR,EAAgB,KAAK7Y,KAAL,CAAWniC,QAA3B,CAApB;AACA,cAAMqH,OAAO,GAAG2zC,MAAM,CAACt+C,UAAP,CAAkB,iBAAlB,CAAhB;AACA,2BAAU2K,OAAV,SAAoB+vD,WAAW,GAAG,UAAH,GAAgB,EAA/C;AACD;;;oCAEc;AACb,eAAKtuD,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACD;;;gCAEW;AACV,eAAKxV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,kBAAM,EAAE;AAAV,WAAhB;AACD;;;;;;AAjCH;;;uBAKag9C,6B,EAA6B,qBAOpB,SAAArgB,eAPoB,C;AAOL,K;;;YAPxBqgB,6B;AAA6B,6C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,8nC;AAAA;AAAA;ACX1C;AACI;AAAuB;AAAO;AAC9B;AACI;AACI;AAAA;AACI;AACJ;AACJ;AACJ;AACJ;AACA;AAAA;AACI;AAAA;AACI;AACJ;AAEA;AAAA;AAAI;AAAkB;AACtB;AAAG;AAA4H;AAE/H;AACI;AACI;AACI;AAAI;AAAK;AACb;AACJ;AACA;AACI;AAGJ;AACJ;AACJ;AAEA;AACI;AAA2B;AAAA,mBAAS,IAAAvhB,KAAA,EAAT;AAAgB,WAAhB;AAAkB;AAAM;AAAI;AAAO;AAC9D;AAAmB;AAAA,mBAAS,iBAAT;AAAmB,WAAnB;AAAqB;AAAM;AAAa;AAAO;AACtE;;;;AAVgB;AAAA;;;;;;;;;2BDdHuhB,6B,EAA6B;cALzC,OAAApgB,SAKyC;eAL/B;AACTljD,kBAAQ,EAAE,wBADD;AAETmjD,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAK+B,Q;;gBAOYkgB,6B;AAA6B;kBAApE,OAAA9yB,MAAoE;mBAA7D,SAAAyS,e;AAA6D;;;;gBAFhF,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;AAAA;;;;;AAKA;;;;;;;;QASakgB,U;;;;;;;kCACCniE,K,EAAcoiE,U,EAAoBC,S,EAAkB;;;AAC1D,cAAI,CAACriE,KAAL,EAAY,OAAO,EAAP;AACZ,cAAI,CAACoiE,UAAL,EAAiB,OAAOpiE,KAAP;AACjBoiE,oBAAU,GAAGA,UAAU,CAAC14D,WAAX,EAAb;AACA,cAAM44D,SAAS,GAAG,CAAH,KAAGD,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAEr+D,KAAX,CAAiB,GAAjB,OAAoB,IAApB,IAAoB,aAApB,GAAoB,EAApB,GAAyB,EAA3C;AACA,iBAAOhE,KAAK,CAAC4I,MAAN,CAAa,UAAA25D,EAAE,EAAI;AACtB,gBAAIC,QAAQ,GAAG,KAAf;AACAF,qBAAS,CAACliE,OAAV,CAAkB,UAAC1C,GAAD,EAAS;;;AACvB,kBAAI,CAAJ,KAAI6kE,EAAE,CAAC7kE,GAAD,CAAF,MAAO,IAAP,IAAO,aAAP,GAAO,MAAP,GAAO,GAAEgM,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAAX,EAAiD;AAC7CI,wBAAQ,GAAG,IAAX;AACH;AACJ,aAJD;;AAKA,gBAAIF,SAAS,CAACp+D,MAAV,KAAqB,CAAzB,EAA4B;AACxB,qBAAOq+D,EAAE,CAAC74D,WAAH,GAAiB2R,QAAjB,CAA0B+mD,UAA1B,CAAP;AACH;;AACD,mBAAOI,QAAP;AACH,WAXM,CAAP;AAYH;;;;;;AArBL;;;uBAGaL,U;AAAU,K;;;;YAAVA,U;AAAU;;;;;2BAAVA,U,EAAU;cAHtB,OAAAtwD,IAGsB;eAHjB;AACF9T,cAAI,EAAE;AADJ,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACdvB;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAQA,QAAY0kE,eAAZ;;AAAA,eAAYA,eAAZ,EAA2B;AACvB;AACA;AACA;AACA;AACA;AACA;AACH,KAPD,EAAYA,eAAe,GAAf,QAAAA,eAAA,aAAAA,eAAA,GAAe,EAAf,CAAZ;;QAYaC,Y;AACT,4BAAoBC,SAApB,EAA6C;AAAA;;AAAzB,aAAAA,SAAA,GAAAA,SAAA;AAA2B;;;;kCAG3Cz9D,K,EAC+D;AAAA,cAA/D+B,IAA+D,uEAAN,MAAM;;AAE/D,kBAAQA,IAAR;AACI,iBAAK,UAAL;AACI,qBACI,KAAK07D,SAAL,CAAeC,QAAf,CACIH,eAAe,CAACI,YADpB,EAEI39D,KAFJ,KAGK,EAJT;;AAMJ,iBAAK,KAAL;AACI,qBACI,KAAKy9D,SAAL,CAAeC,QAAf,CAAwBH,eAAe,CAACK,GAAxC,EAA6C59D,KAA7C,KAAuD,EAD3D;;AAGJ,iBAAK,QAAL;AACI,qBACI,KAAKy9D,SAAL,CAAeC,QAAf,CAAwBH,eAAe,CAACM,MAAxC,EAAgD79D,KAAhD,KAA0D,EAD9D;;AAGJ,iBAAK,OAAL;AACI,qBACI,KAAKy9D,SAAL,CAAeC,QAAf,CAAwBH,eAAe,CAACO,KAAxC,EAA+C99D,KAA/C,KAAyD,EAD7D;AAjBR;;AAqBA,iBAAO,KAAKy9D,SAAL,CAAeC,QAAf,CAAwBH,eAAe,CAACQ,IAAxC,EAA8C/9D,KAA9C,KAAwD,EAA/D;AACH;;;;;;AAhCL;;;uBAGaw9D,Y,EAAY,qC;AAAA,K;;;;YAAZA,Y;AAAY;;;;;2BAAZA,Y,EAAY;cAHxB,OAAA7wD,IAGwB;eAHnB;AACF9T,cAAI,EAAE;AADJ,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBzB;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAWoB;AACyC;AAAkB;;;;;AAAzC;AAAuB;AAAA;;;;;;;;AANjD;AACI;AAAiC;AAAS;AAC1C;AAEiB;AAAA;AAAA;AAAA;AAAA;;AACb;AAEJ;AACJ;;;;;AAPe;AAAA;AAAsB;AAAA;AAChB;AAAA,mDAAqB,OAArB,EAAqB,wCAArB;AAGK;AAAA;;;;QAezBmlE,oB;;;;;AAoBT,oCAAY1I,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,uCAAMA,KAAN;AAVG,iBAAAt1D,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAAmDwG,SAAnD,CAAR;AAS8B;AAEpC;;;;yCAEgBjG,E,EAAO;AACpB,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;;;0CAEiBA,E,EAAO;AACrB,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;yCAEgBy6D,U,EAAmB;AAChC,eAAKl9B,QAAL,GAAgBk9B,UAAhB;AACH;;;iCAEevzD,K,EAAe;AAC3B,cAAMoZ,GAAG,GAAG,KAAK6F,OAAL,CAAa3e,IAAb,CAAkB,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,WAAnB,CAAZ;AACA,eAAK+5D,UAAL,CAAgB3gD,GAAhB;;AACA,cAAI,KAAKksC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAelsC,GAAf;AACH;AACJ;;;mCAEUA,G,EAAsB;AAC7B,eAAKpZ,KAAL,CAAWiL,IAAX,CAAgBmO,GAAhB;AACH;;;;MA9CqC,0BAAAi8C,qB;;AAxB1C;;;uBAwBa2I,oB,EAAoB,yC;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,uCARlB,CACP;AACItvB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMsY,oBAAN;AAAA,SAAX,CAFjB;AAGIrY,aAAK,EAAE;AAHX,OADO,CAQkB,GAF5B,6BAE4B,C;AAF5B,c;AAAA,a;AAAA,+K;AAAA;AAAA;AAnBG;;;;;;;;;;2BAqBKqY,oB,EAAoB;cAxBhC,OAAAphB,SAwBgC;eAxBtB;AACPljD,kBAAQ,EAAE,kBADH;AAEPuvD,kBAAQ,snBAFD;AAePnM,mBAAS,EAAE,CAAC,+BAAD,CAfJ;AAgBPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMsY,oBAAN;AAAA,aAAX,CAFjB;AAGIrY,iBAAK,EAAE;AAHX,WADO;AAhBJ,S;AAwBsB,Q;;;;;;gBAE5B,OAAAvpD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAMA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrDL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;AAAiC;AAAoC;;;;QDXxD6hE,oB;AAcT,oCACYj0C,IADZ,EACqC;AAAA;;AAAzB,aAAAA,IAAA,GAAAA,IAAA;AAVL,aAAAk0C,gBAAA,GAA0C,CAC7C;AAACn8D,cAAI,EAAE,cAAA2jC,SAAA,CAAUy4B,OAAjB;AAA0BhiD,eAAK,EAAE;AAAjC,SAD6C,EAE7C;AAACpa,cAAI,EAAE,cAAA2jC,SAAA,CAAU04B,IAAjB;AAAuBjiD,eAAK,EAAE;AAA9B,SAF6C,CAA1C;AAKA,aAAA0G,WAAA,GAAc,EAAd;AAMH;;;;mCAMW;AAAA;;AACX,eAAKmH,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;;;AACxD,oBAAI,CAAC8nB,WAAL,GAAmB,qBAAI,CAACmH,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAErK,QAAX,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEje,QAArB,KAAiC,iBAApD;AACH,WAFD;;AAGA,cAAG,KAAK28D,gBAAL,CAAsBr+D,KAAtB,KAAgC,cAAAg4B,gBAAA,CAAiBC,IAApD,EAAyD;AACrD,iBAAKqmC,YAAL,GAAoB,KAAKJ,gBAAL,CAAsB,CAAtB,CAApB;AACA,0BAAAt3B,uBAAA,CAAwB,KAAKpuB,IAA7B;AACH,WAHD,MAGK;AACD,iBAAK8lD,YAAL,GAAoB,KAAKJ,gBAAL,CAAsB,CAAtB,CAApB;AACH;AACJ;;;qCAEmBl+D,K,EAAe;AAC/B,eAAKs+D,YAAL,GAAoB,KAAKJ,gBAAL,CAAsBx6D,MAAtB,CAA6B,UAAC3B,IAAD;AAAA,mBAAUA,IAAI,CAACA,IAAL,KAAc/B,KAAxB;AAAA,WAA7B,EAA4D,CAA5D,CAApB;;AACA,cAAG,KAAKs+D,YAAL,CAAkBv8D,IAAlB,KAA2B,cAAA2jC,SAAA,CAAUy4B,OAAxC,EAAgD;AAC5C,iBAAKE,gBAAL,CAAsB3gE,QAAtB,CAA+B,KAAK6gE,YAAL,CAAkBC,4BAAlB,CAA+Cx+D,KAA9E;AACH,WAFD,MAEK;AACD,iBAAKq+D,gBAAL,CAAsB3gE,QAAtB,CAA+B,cAAAs6B,gBAAA,CAAiBC,IAAhD;AACH;AACJ;;;yCAEuBn7B,I,EAAa;AACjC,iBAAO,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAJA,IAAD;AAAO+lB,uBAAW,EAAE,KAAKA,WAAzB;AAAsCD,uBAAW,EAAE;AAAnD,WAAX,CAAP;AACH;;;4BA3B0B;AACvB,iBAAO,KAAKpK,IAAL,CAAUhG,GAAV,CAAc,mBAAd,CAAP;AACH;;;4BA2Be;AACZ,cAAMwf,iBAAiB,GAAG,KAAKxZ,IAAL,CAAUquB,QAAV,CAAmB7U,iBAA7C;AACA,cAAMV,eAAe,GAAG,KAAK9Y,IAAL,CAAUquB,QAAV,CAAmBvV,eAA3C;AACA,iBAAOU,iBAAiB,CAACklB,OAAlB,IAA6B5lB,eAAe,CAAC4lB,OAApD;AACH;;;;;;AAzDL;;;uBAMa+mB,oB,EAAoB,4C;AAAA,K;;;YAApBA,oB;AAAoB,8C;AAAA;AAAA;yBAYlB,oCAAAQ,qB,EAAqB,I;;;;;;;;;;;;;;;;;ACzBpC;AACI;AAA6C;AAAA,mBAAU,IAAAC,YAAA,cAAV;AAAoC,WAApC;AACzC;AAEI;AACI;AACJ;AACA;AAIJ;AACA;AAEI;AACI;AACJ;AACA;AAIJ;AACJ;AACJ;AACA;;;;AAxBuC;AAClB;AAAA;AAGS;AAAA;AACd;AAAA;AAGA;AAAA,4FAA2D,MAA3D,EAA2D,QAA3D;AAMc;AAAA;AACd;AAAA;AAGA;AAAA,4FAA2D,MAA3D,EAA2D,QAA3D;AAMG;AAAA;;;;;;;;;2BDXNT,oB,EAAoB;cANhC,OAAArhB,SAMgC;eANtB;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,0CAFN;AAGPC,mBAAS,EAAE,CAAC,0CAAD;AAHJ,S;AAMsB,Q;;;;;;gBAE5B,OAAA1gD;;;gBAUA,OAAA+jD,S;iBAAU,oCAAAse,qB;;;;;;;;;;;;;;;;;;;;;;;;AEzBf;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCQ;AACI;AAAI;AAAoB;AACxB;AAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AAAM;AACvE;;;;;;AAFQ;AAAA;;;;;;;;;;;;QDMHE,kB;;;;;AAqBT,kCAAqB30C,IAArB,EAAgD;AAAA;;AAAA;;AAC5C;AADiB,iBAAAA,IAAA,GAAAA,IAAA;AAfd,iBAAA40C,cAAA,GAAgC,EAAhC;AACA,iBAAAl9D,QAAA,GAAmB,EAAnB;AACA,iBAAAgtB,KAAA,GAAgB,UAAAnoB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAhB;AACA,iBAAAygD,UAAA,GAAqB,SAAKzuB,KAAL,CAAWmJ,KAAX,EAArB;AACA,iBAAAulB,WAAA,GAAsB,SAAKD,UAAL,CAAgBjyB,UAAhB,CAA2B,KAA3B,EAAkCvtB,QAAlC,CAA2C;AAAE4oD,eAAK,EAAE;AAAT,SAA3C,CAAtB;AACA,iBAAA9oD,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAkEP;;;;AAGO,iBAAAw9D,iBAAA,GAAoB,YAAM;AAC7B,mBAAK2E,oBAAL,CAA0B,SAAKnwC,KAA/B;AACH,SAFM;;AA3DyC;AAE/C;;;;mCAEc;AAAA;;AACX;AACA,eAAKhtB,QAAL,GAAgB,KAAK8W,IAAL,CAAUhG,GAAV,CAAc,UAAd,EAA0BxS,KAA1C;AACA,eAAK0uB,KAAL,GAAa,IAAI,UAAA1gB,MAAJ,CAAW;AAAElR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,uBAAW,EAAE,KAAjC;AAAwCC,uBAAW,EAAE,KAAKnhB;AAA1D,WAAX,CAAb,CAHW,CAIX;;AACA,eAAKy7C,UAAL,GAAkB,KAAKzuB,KAAL,CAAWmJ,KAAX,EAAlB;AACA,eAAKulB,WAAL,GAAmB,KAAKD,UAAL,CAAgBjyB,UAAhB,CAA2B,KAA3B,EAAkCvtB,QAAlC,CAA2C;AAAE4oD,iBAAK,EAAE;AAAT,WAA3C,CAAnB;;AAEA,cAAG,KAAK7I,gBAAL,CAAsB19C,KAAzB,EAA+B;AAC3B,iBAAK4+D,cAAL,GAAsB,KAAKlhB,gBAAL,CAAsB19C,KAAtB,CAA4BgF,IAA5B,CAAiC,UAACuzB,EAAD,EAAaC,EAAb;AAAA,qBAA4BD,EAAE,CAAC9xB,EAAH,GAAQ+xB,EAAE,CAAC/xB,EAAvC;AAAA,aAAjC,CAAtB;AACH;;AACD,eAAK5L,YAAL,CAAkB,kBAAlB,EAAuC,KAAK6iD,gBAAL,CAAsBrmB,YAAtB,CAClCt8B,SADkC,CACxB,YAAM;AACb,oBAAI,CAAC6jE,cAAL,sBAA0B,QAAI,CAAClhB,gBAAL,CAAsB19C,KAAhD;AACH,WAHkC,CAAvC;AAKH;AAED;;;;;;;gCAIei6D,S,EAAmB;AAC9B,cAAMh8D,CAAC,GAAGg8D,SAAS,CAACpiC,KAAV,EAAV;AACA,cAAMinC,UAAU,GAAG,KAAKC,UAAL,CAAgB/+D,KAAnC;AACA,cAAIkmD,QAAQ,GAAGjoD,CAAC,CAACP,QAAF,CAAW;AAAC0B,gBAAI,EAAE0/D,UAAU,CAAC33B,QAAlB;AAA4BhqC,kBAAM,EAAE2hE,UAAU,CAACvhE;AAA/C,WAAX,CAAf;AAEA;;AACA,cAAI2oD,QAAQ,CAAClyB,YAAT,CAAsB,KAAKmpB,UAA3B,CAAJ,EAA4C;AACxC+I,oBAAQ,GAAG,KAAK/I,UAAhB;AACH;AAED;;;AACA,cAAM6hB,WAAW,GAAG,KAAKJ,cAAL,CAAoBl7D,MAApB,CAA2B,UAAC5G,IAAD;AAAA,mBAAiBopD,QAAQ,CAACjtB,UAAT,CAAoBn8B,IAApB,EAA0B,KAA1B,CAAjB;AAAA,WAA3B,CAApB;;AACA,cAAGkiE,WAAW,CAAChgE,MAAf,EAAsB;AAClB;AACH;;AAED,eAAK4/D,cAAL,CAAoBj6D,IAApB,CAAyBuhD,QAAzB;AACA,eAAKxI,gBAAL,CAAsBhgD,QAAtB,CAA+B,KAAKkhE,cAAL,CAAoB55D,IAApB,CAAyB,UAACuzB,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,CAAC9xB,EAAH,GAAQ+xB,EAAE,CAAC/xB,EAAvB;AAAA,WAAzB,CAA/B;AACA,eAAKw4D,aAAL;AACH;AAED;;;;;;;;6CAK6BC,W,EAAqB;AAC9C,eAAK/hB,UAAL,GAAkB+hB,WAAW,CAACrnC,KAAZ,EAAlB;AACH;;;oCASkB;AACf,eAAKsnC,OAAL,CAAa,KAAKzwC,KAAlB;AACA,eAAKmwC,oBAAL,CAA0B,KAAKnwC,KAA/B;AACH;;;0CAEwB;AACrB,eAAKy3B,QAAL,CAAcC,SAAd;AACH;;;yCAEuB;AACpB,eAAKD,QAAL,CAAcE,QAAd;AACH;;;mCAEiBvpD,I,EAAc;AAC5B,cAAM1B,KAAK,GAAG,KAAKwjE,cAAL,CAAoBj8D,GAApB,CAAwB,UAAC1E,CAAD;AAAA,mBAAeA,CAAC,CAACwI,EAAjB;AAAA,WAAxB,EAA6CvG,OAA7C,CAAqDpD,IAAI,CAAC2J,EAA1D,CAAd;AACA,eAAKm4D,cAAL,CAAoBr1D,MAApB,CAA2BnO,KAA3B,EAAkC,CAAlC;AACA,eAAKsiD,gBAAL,CAAsBhgD,QAAtB,CAA+B,KAAKkhE,cAApC;AACA,eAAKK,aAAL;AACH;;;gCAEcniE,I,EAAM;AACjB,iBAAO,IAAI,UAAAkR,MAAJ,CAAW;AACdlR,gBAAI,EAAE,UAAA08C,WAAA,CAAY18C,IAAZ,EAAkB2J,EADV;AAEdmc,uBAAW,EAAE,KAFC;AAGdC,uBAAW,EAAE,KAAKnhB;AAHJ,WAAX,EAIJu3B,UAJI,CAKH,IAAI,UAAAjrB,MAAJ,CAAW;AACPlR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EADC;AAEPK,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,KAAKnhB;AAHX,WAAX,CALG,EAUH,KAVG,CAAP;AAYH;;;mCAEiB5E,I,EAAY;AAC1B,cAAM6E,OAAO,GAAG,KAAKA,OAAL,CAAa7E,IAAb,CAAhB;AACA,cAAMiM,OAAO,GAAGjM,IAAI,CAACsB,UAAL,CAAgB,iBAAhB,CAAhB;AAEA,2BAAW2K,OAAX,SAAqBpH,OAAO,GAAG,UAAH,GAAgB,EAA5C;AACH;;;wCAEoB;AACjB,cAAI,KAAKi9D,cAAL,CAAoB5/D,MAApB,KAA+B,CAAnC,EACI;AAEJ,cAAM8nC,EAAE,GAAG,KAAK9c,IAAL,CAAUrK,QAAV,CAAmBje,QAA9B;AACA,cAAMqlC,QAAQ,GAAG,UAAAxgC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B4/B,EAA3B,CAAjB;AACA,cAAIrpC,MAAM,GAAG,KAAKmhE,cAAL,CAAoB,CAApB,EAAuB/mC,KAAvB,EAAb;AAEAp6B,gBAAM,GAAGA,MAAM,CAACC,QAAP,CAAgB;AACrB0B,gBAAI,EAAG,KAAK2/D,UAAL,CAAgB/+D,KAAhB,CAAiCmE,KADnB;AAErBhH,kBAAM,EAAG,KAAK4hE,UAAL,CAAgB/+D,KAAhB,CAAiCzC;AAFrB,WAAhB,CAAT;;AAKA,cAAI,KAAKqhE,cAAL,CAAoB,CAApB,EAAuB3lC,UAAvB,CAAkC,KAAKvK,KAAvC,EAA8C,KAA9C,KAAwDjxB,MAAM,CAAC0G,KAAP,GAAe4iC,QAAQ,CAAC5iC,KAApF,EAA2F;AAAA,wCAC9C,OAAA3G,mBAAA,CAAoB,KAAKkxB,KAAzB,EAAgC,EAAhC,CAD8C;AAAA,gBACtEvxB,MADsE,yBAC/EI,OAD+E;AAAA,gBACvD6B,IADuD,yBAC9D+E,KAD8D;;AAEvF1G,kBAAM,GAAGA,MAAM,CAACC,QAAP,CAAgB;AAAEP,oBAAM,EAANA,MAAF;AAAUiC,kBAAI,EAAJA,IAAV;AAAgBlC,oBAAM,EAAE;AAAxB,aAAhB,CAAT;AACH;;AAED,eAAK6hE,UAAL,CAAgBrhE,QAAhB,CAAyBD,MAAzB;AACH;;;4BApI0B;AACvB,iBAAO,KAAK+a,IAAL,CAAUhG,GAAV,CAAc,mBAAd,CAAP;AACH;;;4BAEoB;AACjB,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,QAAd,CAAP;AACH;;;;MAnBmC,OAAAjZ,a;;AANxC;;;uBAMaolE,kB,EAAkB,4C;AAAA,K;;;YAAlBA,kB;AAAkB,2C;AAAA;AAAA;+BAIhB,OAAAlY,c,EAAgB,I;;;;;;;;;;;;;;;;;;;ACjB/B;AACI;AACI;AACI;AAAI;AAAI;AACR;AAAI;AAAM;AACd;AACA;AAIA;AACI;AACI;AAAK;AAAA,mBAAiB,IAAAC,cAAA,EAAjB;AAAiC,WAAjC;AACyB;AAAoB;AAClD;AAAiD;AAAA,mBAAU,IAAAwT,iBAAA,EAAV;AAA6B,WAA7B;AAC7C;AAAkD;AAAA,mBAASvT,MAAM,CAACr6C,eAAP,EAAT;AAAiC,WAAjC;AAC9C;AAII;AAAiB,gBAAA6yD,OAAA;AAAiB,uBAAAvY,eAAA;AAAiB,WAAnD;AACH;AACD;AAII;AAAA,mBAAS,IAAA0V,SAAA,EAAT;AAAoB,WAApB;AACH;AACD;AACJ;AACJ;AACJ;AACA;AACJ;AACJ;AACJ;;;;;;AAnCuB;AACZ;AAAA;AAKC;AAAA;AAOI;AAAA;AAKY;AAAA,mDAAsB,SAAtB,EAAsB,2DAAtB;;;;;;;;;2BDLfqC,kB,EAAkB;cAN9B,OAAA/hB,SAM8B;eANpB;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,uCAFN;AAGPC,mBAAS,EAAE,CAAC,uCAAD;AAHJ,S;AAMoB,Q;;;;;;gBAE1B,OAAA1gD;;;gBACA,OAAAA;;;gBACA,OAAA+jD,S;iBAAU,OAAAsG,c,EAAgB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AEjB/B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOQ;AAAoE;AAAmC;;;;;;AAYvG;AAA4D;AAAmC;;;;;;AAQ/E;AACI;AACJ;;;;;AAFkE;AAC9D;AAAA;;;;;;AAMJ;AACI;AACJ;;;;;;AAFyD;AACrD;AAAA;;;;;;;;;;;;;;;;;;;;AASZ;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACJ;;;;;AAHA;AAEI;AAAA;;;;;;AARZ;AACI;AAAA;AAA6C;AAC7C;AACI;AAOJ;AACJ;;;;;AANQ;AAAA;;;;QDtCHgY,qB;;;;;AANb;AAAA;;AAAA;;;AAWI;;AACO,iBAAA/vC,KAAA,GAAgB,UAAAnoB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAhB;AACA,iBAAA0iE,WAAA,GAAsB,SAAK1wC,KAAL,CAAWhxB,QAAX,CAAoB;AAAEP,gBAAM,EAAEC,IAAI,CAACC,IAAL,CAAU,SAAKqxB,KAAL,CAAWnxB,OAAX,GAAqB,CAA/B,IAAoC;AAA9C,SAApB,CAAtB;AACA,iBAAA8hE,OAAA,GAAkB,SAAK3wC,KAAL,CAAW/wB,QAAX,CAAoB;AAAE4oD,eAAK,EAAE;AAAT,SAApB,EAAkCr7B,UAAlC,CAA6C,KAA7C,CAAlB;AACA,iBAAAxpB,QAAA,GAAmB,EAAnB;AAMA,iBAAA49D,qBAAA,GAA6C,CAChD;AAACnjD,eAAK,EAAE,KAAR;AAAepN,YAAE,EAAE,cAAAipB,gBAAA,CAAiB4N;AAApC,SADgD,EAEhD;AAACzpB,eAAK,EAAE,MAAR;AAAepN,YAAE,EAAE,cAAAipB,gBAAA,CAAiBW;AAApC,SAFgD,EAGhD;AAACxc,eAAK,EAAE,OAAR;AAAiBpN,YAAE,EAAE,cAAAipB,gBAAA,CAAiB6N;AAAtC,SAHgD,CAA7C;AAKA,iBAAAI,SAAA,GAA6B,EAA7B;AAyHP;;AACQ,iBAAAs5B,0BAAA,GAA6B,YAAM;AACvC,cAAG,SAAKC,oBAAL,CAA0BxgE,MAA1B,GAAmC,SAAKygE,6BAAL,CAAmCz/D,KAAzE,EAA+E;AAC3E,qBAAKy/D,6BAAL,CAAmC/hE,QAAnC,CAA4C,CAA5C;AACH;AACJ,SAJO;;AApJZ;AAoRC;;;;mCA7NkB;AAAA;;AACX;AACA,eAAKgE,QAAL,GAAgB,KAAK8W,IAAL,CAAUhG,GAAV,CAAc,UAAd,EAA0BxS,KAA1C;AACA,eAAK0uB,KAAL,GAAa,IAAI,UAAA1gB,MAAJ,CAAW;AAAElR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,uBAAW,EAAE,KAAjC;AAAwCC,uBAAW,EAAE,KAAKnhB;AAA1D,WAAX,CAAb,CAHW,CAIX;;AACA,eAAK89D,oBAAL,GAA4B,IAAI31D,KAAJ,CAAU,CAAV,CAA5B;AACA,eAAKu1D,WAAL,GAAmB,OAAA5hE,mBAAA,CAAoB,KAAKkxB,KAAzB,EAAgC,EAAhC,CAAnB;AACA,eAAK2wC,OAAL,GAAe,KAAK3wC,KAAL,CAAW/wB,QAAX,CAAoB;AAAE4oD,iBAAK,EAAE;AAAT,WAApB,EAAkCr7B,UAAlC,CAA6C,KAA7C,CAAf;AACA,eAAKw0C,SAAL,GAAiB,KAAKN,WAAL,CAAiBzhE,QAAjB,CAA0B;AAAC2uB,gBAAI,EAAE;AAAP,WAA1B,CAAjB;AAEA,eAAKqzC,uBAAL,CAA6B,KAAKC,gCAAL,CAAsC5/D,KAAnE,EAVW,CAU+D;;AAE1E,cAAG,CAAC,KAAK6/D,2BAAL,CAAiC7/D,KAArC,EAA2C;AACvC,iBAAK6/D,2BAAL,CAAiCniE,QAAjC,CAA0C,cAAAs6B,gBAAA,CAAiBW,MAA3D;AACH;;AAED,cAAG,KAAKknC,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBC,IAA/D,EAAoE;AAChE,iBAAKumC,4BAAL,CAAkC9gE,QAAlC,CAA2C,KAAKmiE,2BAAL,CAAiC7/D,KAA5E;AACH;;AAED,eAAKimC,SAAL,GAAiB,cAAAH,gBAAA,CAAiB,KAAK85B,gCAAL,CAAsC5/D,KAAtC,CAA4CyG,EAA7D,EAAiE;AAAEoc,uBAAW,EAAE,KAAKu8C,WAAL,CAAiBv8C;AAAhC,WAAjE,CAAjB;AACA,eAAKi9C,oBAAL;;AAEA,cAAG,KAAKC,yBAAL,CAA+B//D,KAA/B,CAAqChB,MAArC,GAA8C,CAAjD,EAAmD;AAC/C,iBAAKinC,SAAL,GAAiB,KAAKA,SAAL,CAAetjC,GAAf,CAAmB,UAAC1B,GAAD;AAAA,qBAC/B,MAAD,OAAC,CAAD,kBAAKA,GAAL,CAAC,EAAO;AAAEklC,sBAAM,EAAE,QAAI,CAAC45B,yBAAL,CAA+B//D,KAA/B,CAAqCmW,QAArC,CAA8ClV,GAAG,CAACmlC,SAAlD;AAAV,eAAP,CAD+B;AAAA,aAAnB,CAAjB;AAGH;;AAED,cAAG,CAAC,KAAK25B,yBAAL,CAA+B//D,KAA/B,CAAqChB,MAAtC,IAAgD,KAAK6gE,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBW,MAA/G,EAAsH;AAClH,gBAAMqnC,YAAY,GAAG,KAAK/5B,SAAL,CAAeviC,MAAf,CAAsB,UAACzC,GAAD;AAAA,qBAASA,GAAG,CAACklC,MAAb;AAAA,aAAtB,EAA2CxjC,GAA3C,CAA+C,UAAC1B,GAAD;AAAA,qBAAOA,GAAG,CAACmlC,SAAX;AAAA,aAA/C,CAArB;AACA,iBAAK25B,yBAAL,CAA+BriE,QAA/B,CAAwCsiE,YAAxC;AACH;;AAED,eAAKC,qBAAL;AAEA,eAAKplE,YAAL,CAAkB,kBAAlB,EAAuC,KAAK+kE,gCAAL,CAAsCvoC,YAAtC,CAClCt8B,SADkC,CACxB,UAACkQ,IAAD,EAAU;AACjB,oBAAI,CAAC00D,uBAAL,CAA6B10D,IAA7B;AACH,WAHkC,CAAvC;AAMA,eAAKpQ,YAAL,CAAkB,gBAAlB,EAAqC,KAAKqlE,wBAAL,CAA8B7oC,YAA9B,CAChCt8B,SADgC,CACtB,YAAM;AACb,oBAAI,CAAC+kE,oBAAL;AACH,WAHgC,CAArC;AAMA,eAAKjlE,YAAL,CAAkB,oCAAlB,EAAyD,KAAKglE,2BAAL,CAAiCxoC,YAAjC,CACpDt8B,SADoD,CAC1C,YAAM;AACb,oBAAI,CAAC+kE,oBAAL;AACH,WAHoD,CAAzD;AAKH;;;gDAE8Bp4D,W,EAAmB;AAC9C,cAAIy4D,QAAQ,GAAG,KAAKD,wBAAL,CAA8BlgE,KAA9B,CAAoCtC,QAApC,CAA6C;AAAC0B,gBAAI,EAAEsI,WAAW,CAACy/B,QAAnB;AAA6BhqC,kBAAM,EAAEuK,WAAW,CAACnK;AAAjD,WAA7C,CAAf;AAEA;;AACA,eAAKmiE,SAAL,GAAiBh4D,WAAW,CAACuxB,UAAZ,CAAuB,KAAKomC,OAA5B,EAAoC,KAApC,IAA6C33D,WAA7C,GAA2DA,WAAW,CAAC/J,QAAZ,CAAqB;AAAC2uB,gBAAI,EAAE;AAAP,WAArB,CAA5E;;AAEA,cAAG6zC,QAAQ,CAACnsC,YAAT,CAAsB,KAAK0rC,SAA3B,CAAH,EAAyC;AACrCS,oBAAQ,GAAG,KAAKT,SAAhB;AACH;;AAED,eAAKQ,wBAAL,CAA8BxiE,QAA9B,CAAuCyiE,QAAvC;AAEA,eAAKL,oBAAL;AACA,eAAKM,mBAAL;AACH;;;wCAEsBpgE,K,EAAuB;AAC1C,eAAKqgE,gBAAL,CAAsBrgE,KAAtB;AACA,eAAK6/D,2BAAL,CAAiCniE,QAAjC,CAA0CsC,KAA1C;AACA,eAAKw+D,4BAAL,CAAkC9gE,QAAlC,CAA2CsC,KAA3C;AACA,eAAKy/D,6BAAL,CAAmC/hE,QAAnC,CAA4C,CAA5C;AACA,eAAKuiE,qBAAL;AACH;;;uCAEqBjgE,K,EAAa;AAC/B,eAAKy/D,6BAAL,CAAmC/hE,QAAnC,CAA4CsC,KAA5C;AACA,eAAKigE,qBAAL;AACH;;;yCAEuBjgE,K,EAAa;AACjC,iBAAO,KAAKy/D,6BAAL,CAAmCz/D,KAAnC,KAA6C,CAA7C,aAAoDA,KAApD,WAAiEA,KAAxE;AACH;;;;AAaD;;;+CAG2B;AACvB,cAAMhD,KAAK,GAAG,KAAK4iE,gCAAL,CAAsC5/D,KAApD;AACA,cAAMsgE,SAAS,GAAG,KAAKJ,wBAAL,CAA8BlgE,KAA9B,CAAoC4zB,QAApC,CAA6C52B,KAA7C,EAAoD,KAAKujE,oBAAzD,EAA+E,KAAKA,oBAApF,CAAlB,CAFuB,CAGvB;;AACA,eAAKf,oBAAL,GAA4B,IAAI31D,KAAJ,CAAUzM,IAAI,CAACszB,KAAL,CAAW4vC,SAAX,KAAyB,CAAnC,CAA5B;AACA,eAAKf,0BAAL;;AACA,cAAG,KAAKM,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBC,IAA/D,EAAoE;AAChE,iBAAKgoC,qBAAL;AACH;AACJ;AAED;;;;;;gDAG+B;AAE3B;;AAEA,cAAG,KAAKJ,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBC,IAA/D,EAAoE;AAChE;AACH;;AAED,cAAMC,UAAU,GAAG,EAAnB;AACA,cAAMsoC,UAAU,GAAG,KAAKZ,gCAAL,CAAsC5/D,KAAzD;AACA,cAAIhD,KAAK,GAAGwjE,UAAZ;AACA,cAAMl4C,GAAG,GAAG,KAAK43C,wBAAL,CAA8BlgE,KAA1C;AACA,cAAM4sB,QAAQ,GAAG,KAAK6yC,6BAAL,CAAmCz/D,KAApD;AACA,cAAMygE,WAAW,GAAG,KAAKx6B,SAAL,CAAeviC,MAAf,CAAsB,UAAAzC,GAAG;AAAA,mBAAIA,GAAG,CAACklC,MAAR;AAAA,WAAzB,CAApB;AACA;;;;AAIA;;AACA,cAAMiS,gBAAgB,GAAGooB,UAAU,CAAC/nB,OAAX,KAAuB,EAAvB,IAA6B,KAAKonB,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiB6N,gBAAlH;;AAEA,cAAG,KAAKg6B,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBW,MAA/D,EAAsE;AAClE37B,iBAAK,GAAGA,KAAK,CAACwJ,YAAN,CAAmB,MAAnB,CAAR;AACH;;AAED,iBAAO8hB,GAAG,CAACsL,QAAJ,CAAa52B,KAAK,CAACwJ,YAAN,CAAmB,KAAnB,CAAb,EAAwC,KAAK+5D,oBAA7C,EAAmE,KAAKA,oBAAxE,KAAiG,CAAxG,EAA2G;AAEvG,gBAAG,KAAKV,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBW,MAA/D,EAAsE;AAClET,wBAAU,CAACvzB,IAAX,CAAgB3H,KAAhB;AACAA,mBAAK,GAAGA,KAAK,CAACW,QAAN,qBAAiB,KAAK4iE,oBAAtB,EAA6C3zC,QAA7C,GAAwDwrB,gBAAxD,CAAR;AACD;;;;;;;;AAOC,kBAAGp7C,KAAK,CAACy7C,OAAN,KAAkB+nB,UAAU,CAAC/nB,OAA7B,IAAwCz7C,KAAK,CAACy7C,OAAN,KAAkBz7C,KAAK,CAACF,IAAN,CAAW4jE,WAArE,IAAoF,KAAKb,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiB6N,gBAAnJ,EAAqK;AACjK7oC,qBAAK,GAAGA,KAAK,CAACU,QAAN,CAAe;AAACuD,qBAAG,EAAEu/D,UAAU,CAAC/nB;AAAjB,iBAAf,CAAR;AACH;AACJ,aAbD,MAaM;AACFgoB,yBAAW,CAACvlE,OAAZ,CAAoB,UAAC+F,GAAD,EAAO;AACvB,oBAAMnE,IAAI,GAAGE,KAAK,CAACW,QAAN,CAAe;AAAC2uB,sBAAI,EAAErrB,GAAG,CAAColC;AAAX,iBAAf,CAAb;;AACA,oBAAG,CAACvpC,IAAI,CAACm3B,WAAL,CAAiBusC,UAAjB,KAAgC1jE,IAAI,CAACm8B,UAAL,CAAgBunC,UAAhB,EAA4B,KAA5B,CAAjC,MACA1jE,IAAI,CAACk3B,YAAL,CAAkB1L,GAAlB,KAA0BxrB,IAAI,CAACm8B,UAAL,CAAgB3Q,GAAhB,EAAqB,KAArB,CAD1B,CAAH,EAC0D;AACtD4P,4BAAU,CAACvzB,IAAX,CAAgB7H,IAAhB;AACH;AACJ,eAND;AAOAE,mBAAK,GAAGA,KAAK,CAACW,QAAN,qBAAiB,KAAK4iE,oBAAtB,EAA6C3zC,QAA7C,EAAR;AACH;AACJ;;AAED,eAAKpU,IAAL,CAAUquB,QAAV,CAAmBxV,gBAAnB,CAAoC3zB,QAApC,CAA6Cw6B,UAAU,CAACl5B,MAAxD;AACA,eAAKwZ,IAAL,CAAUquB,QAAV,CAAmB7U,iBAAnB,CAAqCt0B,QAArC,CAA8Cw6B,UAAU,CAAClzB,IAAX,CAAgB,UAACuzB,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,CAAC9xB,EAAH,GAAQ+xB,EAAE,CAAC/xB,EAAvB;AAAA,WAAhB,CAA9C;AAEH;;;;AAOD;;;8CAG+B;AAAA;;AAC3B,cAAMk6D,UAAU,GAAG,KAAK16B,SAAL,CAAetjC,GAAf,CAAmB,UAAC1B,GAAD,EAAO;AACzC,gBAAG,QAAI,CAAC8+D,yBAAL,CAA+B//D,KAA/B,CAAqCmW,QAArC,CAA8ClV,GAAG,CAACmlC,SAAlD,CAAH,EAAgE;AAC5D,qBAAO,MAAP,OAAO,CAAP,kBAAWnlC,GAAX,CAAO,EAAO;AAAEklC,sBAAM,EAAE;AAAV,eAAP,CAAP;AACH,aAFD,MAEK;AACD,qBAAO,MAAP,OAAO,CAAP,kBAAWllC,GAAX,CAAO,EAAO;AAAEklC,sBAAM,EAAE;AAAV,eAAP,CAAP;AACH;AACJ,WANkB,CAAnB;;AAOA,eAAKF,SAAL,sBAAqB06B,UAArB;AACH;;;oCAEkBC,O,EAAiB;AAChC,cAAMt0C,IAAI,GAAG,KAAKyzC,yBAAL,CAA+B//D,KAA5C;;AACA,cAAG,KAAKq2B,QAAR,EAAiB;AACb;AACH;;AAED,cAAG,CAACuqC,OAAO,CAACz6B,MAAZ,EAAmB;AACf7Z,gBAAI,CAAC3nB,IAAL,CAAUi8D,OAAO,CAACx6B,SAAlB;AACH,WAFD,MAEK;AACD,gBAAMy6B,aAAa,GAAGv0C,IAAI,CAACpsB,OAAL,CAAa0gE,OAAO,CAACx6B,SAArB,CAAtB;AACA9Z,gBAAI,CAAC/iB,MAAL,CAAYs3D,aAAZ,EAA0B,CAA1B;AACH;;AACD,eAAKd,yBAAL,CAA+BriE,QAA/B,oBAA4C4uB,IAA5C;AACA,eAAK8zC,mBAAL;AACA,eAAKH,qBAAL;AACH;AAED;;;;yCACwBjgE,K,EAAuB;AAC3C,cAAGA,KAAK,KAAK,cAAAg4B,gBAAA,CAAiBW,MAA3B,IAAqC,KAAKknC,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBW,MAApG,EAA2G;AACvG,gBAAMilB,eAAe,GAAG,CAAC,QAAAtnB,UAAA,CAAWC,QAAZ,CAAxB;AACAqnB,2BAAe,CAACj5C,IAAhB,CAAqB,cAAAk0B,eAArB;AACA,iBAAKknC,yBAAL,CAA+BlpC,aAA/B,CAA6C+mB,eAA7C;AACA,iBAAKmiB,yBAAL,CAA+B5oC,sBAA/B;AACH,WALD,MAKM,IAAGn3B,KAAK,KAAK,cAAAg4B,gBAAA,CAAiBW,MAA3B,IAAqC,KAAKknC,2BAAL,CAAiC7/D,KAAjC,KAA2C,cAAAg4B,gBAAA,CAAiBW,MAApG,EAA2G;AAC7G,iBAAKonC,yBAAL,CAA+BpiB,eAA/B;AACA,iBAAKoiB,yBAAL,CAA+B5oC,sBAA/B;AACH;AACJ;;;4BApP6C;AAC1C,iBAAO,KAAK3e,IAAL,CAAUhG,GAAV,CAAc,QAAd,CAAP;AACH;;;4BAEkC;AAC/B,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,kBAAd,CAAP;AACH;;;4BAEqC;AAClC,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,mBAAd,CAAP;AACH;;;4BAEuC;AACpC,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,qBAAd,CAAP;AACH;;;4BAEsC;AACnC,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,oBAAd,CAAP;AACH;;;4BAEmC;AAChC,iBAAO,KAAKgG,IAAL,CAAUhG,GAAV,CAAc,iBAAd,CAAP;AACH;;;4BA0FyB;AACtB,iBAAO,KAAKgsD,4BAAL,CAAkCx+D,KAAlC,KAA4C,cAAAg4B,gBAAA,CAAiBW,MAApE;AACH;;;4BAmF8B;AAC3B,cAAMrL,MAAM,GAAG,KAAKuyC,2BAAL,CAAiC7/D,KAAhD;AACA,iBAAO,cAAA2lC,8BAAA,CAA+BrY,MAA/B,CAAP;AACH;;;;MAjOsC,OAAA/zB,a;;AAN3C;;;qDAMaklE,qB;AAAqB,K;;;YAArBA,qB;AAAqB,8C;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,+uB;AAAA;AAAA;ACZlC;AACI;AACI;AAAA;AAAsD;AAAe;AAAA;AACrE;AAQA;AACJ;AACA;AACI;AAAA;AAAkD;AAAe;AAAA;AACjE;AAQA;AACJ;AACA;AACI;AACI;AAAA;AAA0D;AAAe;AAAA;AACzE;AACI;AACI;AAAwF;AAAA,mBAAe,IAAAqC,cAAA,QAAf;AAAqC,WAArC;AACpF;AAGJ;AACJ;AACA;AACI;AAAuF;AAAA,mBAAe,IAAAC,eAAA,QAAf;AAAsC,WAAtC;AACnF;AAGJ;AACJ;AACJ;AACJ;AACA;AAYJ;AACJ;;;;AA1D0C;AAAnB;AAMX;AAAA,uDAA0B,aAA1B,EAA0B,WAA1B,EAA0B,UAA1B,EAA0B,YAA1B,EAA0B,SAA1B,EAA0B,4CAA1B;AAKe;AAAA;AAOf;AAAA,qDAAwB,aAAxB,EAAwB,WAAxB,EAAwB,UAAxB,EAAwB,YAAxB,EAAwB,SAAxB,EAAwB,oCAAxB;AAKe;AAAA;AAOa;AAAA,0EAA6C,UAA7C,EAA6C,YAA7C;AACJ;AAAA;AAMI;AAAA,yEAA4C,UAA5C,EAA4C,YAA5C;AACJ;AAAA;AAOO;AAAA;;;;;;sEDjC9BtC,qB;;;;2BAAAA,qB,EAAqB;cANjC,OAAA7hB,SAMiC;eANvB;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,0CAFN;AAGPC,mBAAS,EAAE,CAAC,0CAAD;AAHJ,S;AAMuB,Q;;gBAE7B,OAAA1gD;;;gBACA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEfL;AAAA;AAAA;;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AAOY;AAII;AAKA;AACA;AACJ;;;;;AARI;AADA;AAGI;AAAA,wCAAiB,MAAjB,EAAiB,UAAjB;AAKJ;AAAA;;;;;;AAVJ;;;;;AACI;;;;;;QAeH4kE,qB;;;;;AAcT,qCAAY1L,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,uCAAMA,KAAN;AAPJ;;;;AAIA,iBAAA2L,cAAA,GAAiB,KAAjB;AAEqC;AAEpC;;;MAhBsC,0BAAA5L,qB;;AApB3C;;;uBAoBa2L,qB,EAAqB,yC;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,6B;AAAA,c;AAAA,a;AAAA,sI;AAAA;AAAA;;AAjB1B;;;;;;;;;2BAiBKA,qB,EAAqB;cApBjC,OAAApkB,SAoBiC;eApBvB;AACPljD,kBAAQ,EAAE,mBADH;AAEPuvD,kBAAQ,mnBAFD;AAkBPnM,mBAAS,EAAE,CAAC,+BAAD;AAlBJ,S;AAoBuB,Q;;;;;;gBAE7B,OAAA1gD;;;gBAGA,OAAAA;;;gBAMA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;ACvCL;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJY;AACI;;AAIJ;;;;;;;AAHQ;AAAA,+DAAA8kE,mBAAA;AACA,qDAAsD,aAAtD,EAAsD,wBAAtD;;;;;;AAGR;AAGI;;AAIJ;;;;;;AALI;AAEI;AAAA,2CAAiB,UAAjB,EAAiB,kDAAjB;;;;;;AAKZ;;;;AAGI;;;;QDKCC,e;AAgET,iCAAc;AAAA;;;;AAvDP,aAAAliD,OAAA,GAA+B,EAA/B;AAKP;;;;AAIO,aAAAmiD,aAAA,GAAgB,KAAhB;AAGA,aAAAC,YAAA,GAAe,KAAf;AASA,aAAAC,WAAA,GAAuB,KAAvB;AAOA,aAAAlQ,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEA,aAAAp2B,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAAwC,KAAKq8D,aAAL,KAAkB,MAAI,KAAK31C,OAAL,CAAa,CAAb,CAAJ,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEjf,KAAvC,CAAxC,CAAR;AAEP;;AACO,aAAA00D,QAAA,GAAW,IAAI,OAAAn8D,eAAJ,CAAyC,KAAK0mB,OAA9C,CAAX;AAKA,aAAAw7C,cAAA,GAAiB,OAAA7vC,aAAA,CAAc,CAAC,KAAK8pC,QAAN,EAAgB,KAAK10D,KAArB,CAAd,EAA2C4N,IAA3C,CACpB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAEsc,OAAF;AAAA,cAAWjf,KAAX;;AAAA,iBAAsBif,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,WAAd,CAAtB;AAAA,SAAJ,CADoB,CAAjB;AAIA,aAAAw6D,iBAAA,GAAoB,KAAK9F,QAAL,CAAc9mD,IAAd,CACvB,YAAAjL,GAAA,CAAI,UAAAy4D,EAAE;AAAA,iBAAIA,EAAE,CAACp8D,MAAH,GAAY,CAAZ,IAAiBo8D,EAAE,CAAC,CAAD,CAAvB;AAAA,SAAN,CADuB,CAApB;AAcN;;;;mCAViBz1C,M,EAA2B;AACzC,iBAAO,KAAK3lB,KAAL,CAAW4N,IAAX,CAAgB,YAAAjL,GAAA,CAAI,UAAAkJ,CAAC;AAAA,mBAAIA,CAAC,KAAK8Z,MAAM,CAAC3lB,KAAjB;AAAA,WAAL,CAAhB,CAAP;AACH;;;mCAUc,CACd;;;oCAEkBxF,O,EAAsB;;;AACrC,cAAIA,OAAO,CAACykB,OAAZ,EAAqB;AACjB,iBAAKy1C,QAAL,CAAczpD,IAAd,CAAmB,KAAKgU,OAAxB;;AACA,iBAAKjf,KAAL,CAAWiL,IAAX,CAAgB,KAAK2pD,aAAL,KAAkB,YAAI,KAAK31C,OAAT,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAG,CAAH,CAAhB,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAGjf,KAAzC,CAAhB;AACH;;AACD,cAAIxF,OAAO,CAACo6D,aAAZ,EAA2B;AACvB,iBAAK50D,KAAL,CAAWiL,IAAX,CAAgB,CAAD,KAAC,KAAK2pD,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE50D,KAApC;AACH;AACJ;AAED;;;;;;;iCAIgBklD,S,EAAiB;AAC7B,eAAKllD,KAAL,CAAWiL,IAAX,CAAgBi6C,SAAhB;;AACA,cAAI,KAAKI,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAe,KAAKrmC,OAAL,CAAa3e,IAAb,CAAkB,UAAAmE,CAAC;AAAA,qBAAIA,CAAC,CAACzE,KAAF,KAAYklD,SAAhB;AAAA,aAAnB,CAAf;AACH;AACJ;AAED;;;;;;;mCAIkBllD,K,EAAiC;AAC/C,cAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,iBAAKA,KAAL,CAAWiL,IAAX,CAAgBjL,KAAK,CAACA,KAAtB;AACH;AACJ;;;yCAEuBq2B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;;;yCAIwBv9B,E,EAAkC;AACtD,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAkC;AACvD,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;4BA5DmB;;;AAChB,iBAAO,CAAP,WAAO,KAAKyuD,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;;;;;;AA1EL;;;uBAaasP,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;uCATb,CACP;AACIzyB,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMyb,eAAN;AAAA,SAAX,CAFjB;AAGIxb,aAAK,EAAE;AAHX,OADO,C,GAMV,uB;AAAA,e;AAAA,c;AAAA,iqB;AAAA;AAAA;ACjCL;AACI;AAAiC;AAAS;AAC1C;AAGI;AAMI;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;;;AAEA;AAMA;;;;AAQJ;AACA;AAKA;AACI;AACJ;AACJ;AACJ;;;;;;AArCuC;AACxB;AAAA;AAAsB;AAAA;AAMzB;AAAA,kDAAoD,OAApD,EAAoD,gCAApD,EAAoD,UAApD,EAAoD,YAApD;AAMY;AAAA;AAOR;AAAA;AASJ;AAAA;AAKkB;AAAA;;;;;;;;;;;2BDEjByjE,e,EAAe;cAb3B,OAAAvkB,SAa2B;eAbjB;AACPljD,kBAAQ,EAAE,YADH;AAEPmjD,qBAAW,EAAE,yBAFN;AAGPC,mBAAS,EAAE,CAAC,yBAAD,CAHJ;AAIPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMyb,eAAN;AAAA,aAAX,CAFjB;AAGIxb,iBAAK,EAAE;AAHX,WADO,CAJJ;AAWPoO,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AAX1B,S;AAaiB,Q;;;;gBAEvB,OAAA/kB;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAMA,OAAAA;;;gBAGA,OAAAA;;;gBAIA,OAAAA;;;gBAEA,OAAAA;;;gBAGA,OAAAA;;;gBAgBA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AEjFf;AAAA;AAAA;;;;;;;;;;QAmBaohB,0B,GAZb;AAAA;;AAkBI,WAAA9lB,KAAA,GAAQ,IAAI,OAAApB,YAAJ,EAAR;AAEH,K;;AApBD;;;uBAYaknB,0B;AAA0B,K;;;YAA1BA,0B;AAA0B,8C;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qH;AAAA;AAAA;AAT/B;AACI;AAAA,mBAAS,IAAA9lB,KAAA,OAAT;AAAqB,WAArB;AAEA;AAAM;AAAS;AACf;AACJ;;;;AAFU;AAAA;;;;;;;;;2BAML8lB,0B,EAA0B;cAZtC,OAAA3kB,SAYsC;eAZ5B;AACPljD,kBAAQ,EAAE,yBADH;AAEPuvD,kBAAQ,kQAFD;AAUPnM,mBAAS,EAAE,CAAC,sCAAD;AAVJ,S;AAY4B,Q;;gBAElC,OAAA1gD;;;gBAGA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;ACxBL;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AAiBY;;;;;AAAK;AAEA;;;;;;;;;;;;;AAEL;;;;;AAAK;AAEA;;;;;;AANL;AAIA;;;;;AAHK;AAIA;AAAA;;;;AApBjB,QAAYykB,UAAZ;;AAAA,eAAYA,UAAZ,EAAsB;AAClB;;;AAGA;AACA;;;;AAGA;AACH,KATD,EAAYA,UAAU,GAAV,QAAAA,UAAA,aAAAA,UAAA,GAAU,EAAV,CAAZ;;QA2BaC,e;;;;;AAeT,+BAAYnM,KAAZ,EAAqC;AAAA;;AAAA;;AACjC,uCAAMA,KAAN;AAfJ,iBAAAkM,UAAA,GAAaA,UAAb;AAMA,iBAAAzR,IAAA,GAAmByR,UAAU,CAACE,UAA9B;AAQqC;AAEpC;;;MAjBgC,0BAAArM,qB;;AAhBrC;;;uBAgBaoM,e,EAAe,yC;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,kE;AAAA;AAAA;AAbpB;;;;;;;;;2BAaKA,e,EAAe;cAhB3B,OAAA7kB,SAgB2B;eAhBjB;AACPljD,kBAAQ,EAAE,YADH;AAEPuvD,kBAAQ,2fAFD;AAcPnM,mBAAS,EAAE,CAAC,wBAAD;AAdJ,S;AAgBiB,Q;;;;;;gBAGvB,OAAA1gD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AC/CL;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAgBY;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+B;AAAkB;;;;;;AAHjD;AAGA;AAA+B;AAAA;;;;QAKlCulE,oB;AAcT,sCAAc;AAAA;;AALd,aAAAj8C,eAAA,GAAuC,EAAvC;AAGA,aAAAk8C,aAAA,GAAgB,IAAI,OAAAvnB,YAAJ,EAAhB;AAGC;;;;mCAEO,CACP;;;wCAEsB10B,M,EAA2B;AAC9C,eAAKi8C,aAAL,CAAmBrmB,IAAnB,CAAwB51B,MAAxB;AACH;;;mCAEiBA,M,EAA2B;AACzC,iBAAO,CAAC,CAAC,KAAKD,eAAL,CAAqBplB,IAArB,CAA0B,UAAA+R,CAAC;AAAA,mBAAIA,CAAC,CAACrS,KAAF,KAAY2lB,MAAM,CAAC3lB,KAAvB;AAAA,WAA3B,CAAT;AACH;;;;;;AA5CL;;;uBAkBa2hE,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,mU;AAAA;AAAA;AAfzB;AACI;AAEyB;AAAS;AAClC;AAOJ;;;;AATQ;AAAA;AACqB;AAAA;AAKrB;AAAA;;;;;;;;;2BAOHA,oB,EAAoB;cAlBhC,OAAA/kB,SAkBgC;eAlBtB;AACPljD,kBAAQ,EAAE,kBADH;AAEPuvD,kBAAQ,ylBAFD;AAgBPnM,mBAAS,EAAE,CAAC,+BAAD;AAhBJ,S;AAkBsB,Q;;;;gBAE5B,OAAA1gD;;;gBAGA,OAAAA;;;gBAGA,OAAAA;;;gBAGA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;ACtCL;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBoB;AAGI;;AAIJ;;;;;;AALI;AAEI;AAAA,2CAAiB,UAAjB,EAAiB,kDAAjB;;;;QAqBfmK,kB;;;;;AA/Cb;AAAA;;AAAA;;;AAoDI;;AACgB,iBAAA5nD,IAAA,GAAO,EAAP;AAGhB;;AACgB,iBAAAw7D,WAAA,GAAc,IAAd;AAGhB;;AACgB,iBAAAp5D,QAAA,GAAoB,IAAI,UAAAsM,MAAJ,CAAW;AAAElR,cAAI,EAAEJ,IAAI,CAAC6lB,GAAL;AAAR,SAAX,EAAiCk1B,QAArD;AAWhB;;AACO,iBAAA36C,IAAA,GAAO,IAAI,OAAAvE,eAAJ,CAAoB,UAAAgO,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAAxC,CAAP;AAEA,iBAAA2qD,iBAAA,GAAiC,IAAI,QAAAh7B,WAAJ,EAAjC;AAEA,iBAAAmkC,WAAA,GAAc,OAAA3vC,aAAA,CAAc,CAC/B,SAAKwmC,iBAAL,CAAuB/5B,YADQ,EAE/B,SAAKv6B,IAF0B,CAAd,EAEL8Q,IAFK,CAGjB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAE3C,KAAF;AAAA,cAASlD,IAAT;;AAAA,iBAAmB,OAAAuC,kBAAA,CAAmB,SAAKC,IAAxB,EAA8BU,KAA9B,EAAqC,QAAAP,QAAA,CAAS8iB,GAAT,GAAe5iB,OAAf,EAArC,CAAnB;AAAA,SAAJ,CAHiB,CAAd;AAMP;;AACO,iBAAAK,KAAA,GAAQ,IAAI,OAAAzH,eAAJ,CAA4B,OAAAsE,iBAAA,CAAkB,QAAA4C,QAAA,CAAS8iB,GAAT,EAAlB,EAAkC,SAAKjjB,IAAvC,EAA6CO,QAA7C,CAAsD,OAAtD,CAA5B,CAAR;AAEP;;AACO,iBAAAof,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CAAyC,aAAA+uD,sBAAA,CAAuB,UAAA/gD,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB+J,EAA3C,EAA+C,CAAC,SAAKq0D,WAArD,EAAkE,SAAKx7D,IAAvE,EAA6E,SAAKoC,QAAlF,CAAzC,CAAV;AAEA,iBAAA+4D,cAAA,GAAiB,OAAA7vC,aAAA,CAAc,CAAC,SAAK3L,OAAN,EAAe,SAAKjf,KAApB,CAAd,EAA0C4N,IAA1C,CACpB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAEsc,OAAF;AAAA,cAAWjf,KAAX;;AAAA,iBAAsBif,OAAO,CAAC3e,IAAR,CAAa,UAAA0lB,CAAC;AAAA,mBAAIA,CAAC,CAAChmB,KAAF,KAAYA,KAAhB;AAAA,WAAd,CAAtB;AAAA,SAAJ,CADoB,CAAjB;AAIA,iBAAAw6D,iBAAA,GAAoB,SAAKv7C,OAAL,CAAarR,IAAb,CACvB,YAAAjL,GAAA,CAAI,UAAAy4D,EAAE;AAAA,iBAAIA,EAAE,CAACp8D,MAAH,GAAY,CAAZ,IAAiBo8D,EAAE,CAAC,CAAD,CAAvB;AAAA,SAAN,CADuB,CAApB;AA7FX;AA4MC;;;;mCA3GqBz1C,M,EAA2B;AACzC,iBAAO,KAAK3lB,KAAL,CAAW4N,IAAX,CAAgB,YAAAjL,GAAA,CAAI,UAAAkJ,CAAC;AAAA,mBAAIA,CAAC,KAAK8Z,MAAM,CAAC3lB,KAAjB;AAAA,WAAL,CAAhB,CAAP;AACH;;;mCAMc;AAAA;;AACX;AACA,eAAKif,OAAL,CAAahU,IAAb,CAAkB,aAAAq8C,sBAAA,CAAuB,KAAKxqD,IAAL,CAAUkD,KAAjC,EAAwC,CAAC,KAAK86D,WAA9C,EAA2D,KAAKx7D,IAAhE,EAAsE,KAAKoC,QAA3E,CAAlB,EAFW,CAIX;;AACA,eAAK7G,YAAL,CAAkB,iBAAlB,EACI,OAAA+vB,aAAA,CAAc,CACV,KAAK9tB,IADK,CAAd,EAEG8Q,IAFH,CAGI,YAAAjL,GAAA,CAAI,kBAAY;AAAA;AAAA,gBAAV7F,IAAU;;AACZ;AACA,gBAAM+kE,eAAe,GAAG,OAAAhlE,iBAAA,CAAkB,QAAA4C,QAAA,CAASC,UAAT,CAAoB5C,IAAI,CAAC6C,OAAL,EAApB,CAAlB,EAAuD,QAAI,CAACL,IAA5D,CAAxB,CAFY,CAGZ;;AACA,mBAAO,IAAI,UAAA0O,MAAJ,CAAW;AAAClR,kBAAI,EAAE+kE,eAAe,CAACliE,OAAhB,EAAP;AAAkCijB,yBAAW,EAAC,KAA9C;AAAqDC,yBAAW,EAAE,QAAI,CAACnhB;AAAvE,aAAX,CAAP;AACH,WALD,CAHJ,EASI,YAAAqhD,cAAA,CAAe,KAAK9jC,OAApB,CATJ,EAUI,YAAAvb,MAAA,CAAO,kBAAwD;AAAA;AAAA,gBAAtD5G,IAAsD;AAAA,gBAAhDu+D,WAAgD;;AAC3D;AACA,mBAAO,CAACA,WAAW,CAAC/6D,IAAZ,CAAiB,UAAAuL,CAAC;AAAA,qBAAIA,CAAC,CAAC7L,KAAF,KAAYlD,IAAI,CAACsB,UAAL,CAAgB,OAAhB,CAAhB;AAAA,aAAlB,CAAR;AACH,WAHD,CAVJ,EAcI,YAAAuE,GAAA,CAAI,kBAAyB;AAAA;AAAA,gBAAvB7F,IAAuB;AAAA,gBAAjBu+D,WAAiB;;AACzB;AACA;AACAA,uBAAW,CAAC12D,IAAZ,CAAiB;AACboE,qBAAO,EAAE,OAAAvB,6BAAA,CAA8B1K,IAA9B,CADI;AAEbkD,mBAAK,EAAElD,IAAI,CAACsB,UAAL,CAAgB,OAAhB;AAFM,aAAjB,EAHyB,CAOzB;;AACAi9D,uBAAW,CAACr2D,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAU,UAAGD,CAAC,CAACjF,KAAL,EAAamF,aAAb,WAA8BD,CAAC,CAAClF,KAAhC,EAAV;AAAA,aAAjB;AACA,mBAAOq7D,WAAP;AACH,WAVD,CAdJ,EAyBEtgE,SAzBF,CAyBY,UAAAkQ,IAAI;AAAA,mBAAI,QAAI,CAACgU,OAAL,CAAahU,IAAb,CAAkBA,IAAlB,CAAJ;AAAA,WAzBhB,CADJ;AA2BH;;;oCAEkBzQ,O,EAAsB;AACrC,cAAIA,OAAO,CAAC2sD,aAAR,IAAyB3sD,OAAO,CAAC8E,IAAjC,IAAyC9E,OAAO,CAACkH,QAArD,EAA+D;AAC3D;AACA,iBAAKud,OAAL,CAAahU,IAAb,CAAkB,aAAAq8C,sBAAA,CAAuB,KAAKxqD,IAAL,CAAUkD,KAAjC,EAAwC,CAAC,KAAK86D,WAA9C,EAA2D,KAAKx7D,IAAhE,EAAsE,KAAKoC,QAA3E,CAAlB;AACA,gBAAMogE,YAAY,GAAG,IAAI,UAAA9zD,MAAJ,CAAW;AAAClR,kBAAI,EAAE,KAAK2P,IAAZ;AAAkBmW,yBAAW,EAAE,KAA/B;AAAsCC,yBAAW,EAAE,KAAKnhB;AAAxD,aAAX,EAA8E8E,YAA9E,CAA2F,QAA3F,CAArB;AACA,iBAAKxG,KAAL,CAAWiL,IAAX,CAAgB62D,YAAY,CAAC1jE,UAAb,CAAwB,OAAxB,CAAhB;AACH;;AACD,cAAI5D,OAAO,CAACiS,IAAZ,EAAkB;AACd;AACA,iBAAK3P,IAAL,CAAUmO,IAAV,CAAe,KAAKwB,IAApB;AACH;AACJ;AAED;;;;;;;iCAIgBy4C,S,EAAiB;AAC7B;AACA,cAAM6c,OAAO,GAAG,CAAC7c,SAAS,CAAChlD,OAAV,CAAkB,GAAlB,IAAyB,CAAzB,GAA6BglD,SAA7B,GAAyC,OAA1C,EAAmDpmD,KAAnD,CAAyD,GAAzD,CAAhB,CAF6B,CAG7B;;AACA,cAAMb,CAAC,GAAG,IAAI,UAAA+P,MAAJ,CAAW;AAAElR,gBAAI,EAAE,KAAKA,IAAL,CAAUkD,KAAlB;AAAyB4iB,uBAAW,EAAE,KAAtC;AAA6CC,uBAAW,EAAE,KAAKnhB;AAA/D,WAAX,CAAV;AACA,cAAM5E,IAAI,GAAGmB,CAAC,CAACP,QAAF,CAAW;AAAE0B,gBAAI,EAAEa,QAAQ,CAAC8hE,OAAO,CAAC,CAAD,CAAR,CAAhB;AAA8B5kE,kBAAM,EAAE8C,QAAQ,CAAC8hE,OAAO,CAAC,CAAD,CAAR;AAA9C,WAAX,CAAb;;AACA,cAAIjlE,IAAJ,EAAU;AACN,gBAAI,KAAKwoD,SAAT,EAAoB;AAChB,mBAAKA,SAAL,CAAexoD,IAAI,CAAC2J,EAApB;AACH;AACJ;AACJ;AAED;;;;;;;mCAIkBzG,K,EAAsB;AACpC,cAAIA,KAAK,IAAI,IAAb,EAAmB;AACf;AACA,iBAAKlD,IAAL,CAAUmO,IAAV,CAAejL,KAAf,EAFe,CAGf;;AACA,gBAAMlD,IAAI,GAAG,OAAAD,iBAAA,CAAkB,QAAA4C,QAAA,CAASC,UAAT,CAAoBM,KAApB,EAA2B+3C,OAA3B,CAAmC,QAAnC,CAAlB,EAAgE,KAAKz4C,IAArE,CAAb,CAJe,CAKf;;AACA,gBAAMwiE,YAAY,GAAG,IAAI,UAAA9zD,MAAJ,CAAW;AAAClR,kBAAI,EAAEA,IAAI,CAAC6C,OAAL,EAAP;AAAuBijB,yBAAW,EAAE,KAApC;AAA2CC,yBAAW,EAAE,KAAKnhB;AAA7D,aAAX,EAAmF8E,YAAnF,CAAgG,QAAhG,CAArB;AACA,iBAAKyY,OAAL,CAAahU,IAAb,CAAkB,aAAAq8C,sBAAA,CAAuBwa,YAAY,CAACr7D,EAApC,EAAwC,CAAC,KAAKq0D,WAA9C,EAA2D,KAAKx7D,IAAhE,EAAsE,KAAKoC,QAA3E,CAAlB;AACH;AACJ;;;yCAEuB20B,Q,EAAmB;AACvC,eAAKA,QAAL,GAAgBA,QAAhB;AACH;AAED;;;;;;;yCAIwBv9B,E,EAAuB;AAC3C,eAAKwsD,SAAL,GAAiBxsD,EAAjB;AACH;AAED;;;;;;;0CAIyBA,E,EAAuB;AAC5C,eAAKysD,QAAL,GAAgBzsD,EAAhB;AACH;;;4BAtGmB;;;AAChB,iBAAO,CAAP,WAAO,KAAKyuD,YAAZ,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEsK,SAAnB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,EAA5B,GAAgC,KAAvC;AACH;;;;MAxDmC,OAAAt4D,a;;AA/CxC;;;kDA+Ca2tD,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;uCAThB,CACP;AACIxY,eAAO,EAAE,QAAA8W,iBADb;AAEIC,mBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,iBAAMwB,kBAAN;AAAA,SAAX,CAFjB;AAGIvB,aAAK,EAAE;AAHX,OADO,C,GAMV,6B,EAAA,uB;AAAA,e;AAAA,c;AAAA,4iB;AAAA;AAAA;AAzCG;AACI;AAAiC;AAAS;AAC1C;AAGI;AAMI;AAAA,mBAAe,IAAAjoD,QAAA,QAAf;AAA+B,WAA/B;;;AAEA;AACI;;AAIJ;AACA;;;;AAQJ;AACA;AACI;AACJ;AACJ;AACJ;;;;;;;;AA/Be;AAAA;AAAsB;AAAA;AAMzB;AAAA,kDAAoD,OAApD,EAAoD,gCAApD,EAAoD,UAApD,EAAoD,YAApD;AASQ;AAAA,uDAAsD,aAAtD,EAAsD,qBAAtD;AAIJ;AAAA;AASc;AAAA;;;;;;;;mEAezBwpD,kB;;;;2BAAAA,kB,EAAkB;cA/C9B,OAAAtK,SA+C8B;eA/CpB;AACPljD,kBAAQ,EAAE,gBADH;AAEPuvD,kBAAQ,2tDAFD;AAqCPnM,mBAAS,EAAE,CAAC,6BAAD,CArCJ;AAsCPnD,mBAAS,EAAE,CACP;AACIjL,mBAAO,EAAE,QAAA8W,iBADb;AAEIC,uBAAW,EAAE,OAAAC,UAAA,CAAW;AAAA,qBAAMwB,kBAAN;AAAA,aAAX,CAFjB;AAGIvB,iBAAK,EAAE;AAHX,WADO,CAtCJ;AA6CPoO,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AA7C1B,S;AA+CoB,Q;;gBAC1B,OAAA/kB;;;gBAEA,OAAAA;;;gBAGA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBASA,OAAA+jD,S;iBAAU,Q;;;;;;;;;;;;;;;;;;;;;;;;AC5Gf;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAYY;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+B;AAAkB;;;;;;AAHjD;AADA;AAI+B;AAAA;;;;QAKlC6hB,e;AAdb;AAAA;;AAuBI,aAAAC,cAAA,GAAiB,IAAI,OAAA5nB,YAAJ,EAAjB;AASH;;;;oCAPsB10B,M,EAA2B;AAC1C,eAAKs8C,cAAL,CAAoB1mB,IAApB,CAAyB51B,MAAzB;AACH;;;mCAEUA,M,EAA2B;AAClC,iBAAO,KAAKE,QAAL,KAAkBF,MAAzB;AACH;;;;;;AA/BL;;;uBAcaq8C,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,kK;AAAA;AAAA;AAXpB;AACI;AAMJ;;;;AADQ;AAAA;;;;;;;;;2BAKHA,e,EAAe;cAd3B,OAAAplB,SAc2B;eAdjB;AACPljD,kBAAQ,EAAE,YADH;AAEPuvD,kBAAQ,iZAFD;AAYPnM,mBAAS,EAAE,CAAC,yBAAD;AAZJ,S;AAciB,Q;;gBAEvB,OAAA1gD;;;gBAGA,OAAAA;;;gBAGA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AC9BL;AAAA;AAAA;;AAAS,YAAA6S,SAAA,4BAAAA,SAAA;AAAW,YAAAC,kBAAA,4BAAAA,kBAAA;;;;;;;;;;;;;;;;;;;;ACApsF;;;AACtF;AAAA;AAAA,0E,CAAsF;;;AACtF;AAAA;AAAA,0F,CAA6G;;;AAC7G;AAAA;AAAA,kF,CAAiG;;;AACjG;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEa,YAAA7F,gBAAA,GAA0B,CACnC,SAAAC,eADmC,EAEnC,YAAAC,iBAFmC,EAGnC,SAAAC,eAHmC,EAInC,aAAAC,kBAJmC,EAKnC,OAAA8X,aALmC,EAMnC,QAAA7X,cANmC,EAOnC,mBAAAC,wBAPmC,EAQnC,eAAAC,oBARmC,EASnC,eAAAC,qBATmC,EAUnC,SAAAC,eAVmC,EAWnC,QAAAC,cAXmC,EAYnC,OAAAC,eAZmC,EAanC,OAAAC,aAbmC,EAcnC,WAAAC,iBAdmC,EAenC,UAAAC,gBAfmC,EAgBnC,QAAAC,cAhBmC,EAiBnC,OAAAC,aAjBmC,EAkBnC,eAAAC,oBAlBmC,EAmBnC,YAAAkX,kBAnBmC,EAoBnC,UAAAC,aApBmC,CAA1B;;QA8GArhB,Q;;;;AAvFb;;YAuFaA;;;;yBAAAA,Q;AAAQ,O;AAAA,iBAtFP,SAAAhpD,YAsFO,4BArFV,QAAAiyD,gBAqFU,IApFb,QAAAlJ,mBAoFa,EAnFb,QAAAD,WAmFa,EAlFb,wBAAAwhB,wBAkFa,EAlFa,sBAAAC,uBAkFb,IArBb,QAAAxhB,mBAqBa,EApBb,QAAAD,WAoBa;;;;+EAARE,Q,EAAQ;AAAA,uBAhFb,2CAAA0P,mCAgFa,EA/Eb,wCAAA6D,iCA+Ea,EA9Eb,4BAAAhG,sBA8Ea,EA7Eb,4BAAA6N,sBA6Ea,EA5Eb,oCAAAnD,6BA4Ea,EA3Eb,gCAAAO,yBA2Ea,EA1Eb,uBAAArS,kBA0Ea,EAzEb,+BAAA2T,wBAyEa,EAxEb,2BAAAhU,sBAwEa,EAvEb,mCAAAsT,4BAuEa,EAtEb,mBAAAhG,eAsEa,EArEb,yBAAA6J,oBAqEa,EApEb,cAAAf,UAoEa,EAnEb,gBAAAO,YAmEa,EAlEb,mBAAAiE,eAkEa,EAjEb,0BAAA/F,qBAiEa,EAhEb,yBAAAC,oBAgEa,EA/Db,0BAAAqF,qBA+Da,EA9Db,uBAAApF,kBA8Da,EA7Db,gCAAA2F,0BA6Da,EA5Db,yBAAAzR,oBA4Da,EA3Db,0BAAA2L,qBA2Da,EA1Db,mBAAAuG,eA0Da,EAzDb,kBAAAlG,cAyDa,EAxDb,kBAAAgB,cAwDa,EAvDb,4BAAAtE,uBAuDa,EAtDb,yBAAAmJ,oBAsDa,EArDb,6BAAAlF,uBAqDa,EApDb,gCAAAZ,2BAoDa,EAnDb,mBAAAsF,eAmDa,EAlDb,4BAAApF,uBAkDa,EAjDb,oCAAA0C,qBAiDa,EAhDb,iCAAAE,kBAgDa,EA/Cb,oCAAAV,oBA+Ca,EA9Cb,4BAAApiB,uBA8Ca,EA7Cb,mCAAAmhB,6BA6Ca,EA5Cb,iCAAAtE,2BA4Ca,EA3Cb,uBAAA9C,kBA2Ca,EA1Cb,iCAAAI,2BA0Ca,EAzCb,+BAAAL,yBAyCa;AAzCY,kBA7CnB,SAAA59D,YA6CmB,EApE7B,SAAAkyD,eAoE6B,EAnE7B,YAAAC,iBAmE6B,EAlE7B,SAAAC,eAkE6B,EAjE7B,aAAAC,kBAiE6B,EAhE7B,OAAA8X,aAgE6B,EA/D7B,QAAA7X,cA+D6B,EA9D7B,mBAAAC,wBA8D6B,EA7D7B,eAAAC,oBA6D6B,EA5D7B,eAAAC,qBA4D6B,EA3D7B,SAAAC,eA2D6B,EA1D7B,QAAAC,cA0D6B,EAzD7B,OAAAC,eAyD6B,EAxD7B,OAAAC,aAwD6B,EAvD7B,WAAAC,iBAuD6B,EAtD7B,UAAAC,gBAsD6B,EArD7B,QAAAC,cAqD6B,EApD7B,OAAAC,aAoD6B,EAnD7B,eAAAC,oBAmD6B,EAlD7B,YAAAkX,kBAkD6B,EAjD7B,UAAAC,aAiD6B,EA3CzB,QAAAthB,mBA2CyB,EA1CzB,QAAAD,WA0CyB,EAzCzB,wBAAAwhB,wBAyCyB,EAzCC,sBAAAC,uBAyCD,CAyCZ;AAlFoC,kBA4CjD,2CAAA7R,mCA5CiD,EA6CjD,wCAAA6D,iCA7CiD,EA8CjD,4BAAAhG,sBA9CiD,EA+CjD,4BAAA6N,sBA/CiD,EAgDjD,oCAAAnD,6BAhDiD,EAiDjD,gCAAAO,yBAjDiD,EAkDjD,uBAAArS,kBAlDiD,EAmDjD,+BAAA2T,wBAnDiD,EAoDjD,2BAAAhU,sBApDiD,EAqDjD,mCAAAsT,4BArDiD,EAsDjD,yBAAA6D,oBAtDiD,EAuDjD,cAAAf,UAvDiD,EAwDjD,gBAAAO,YAxDiD,EAyDjD,mBAAAiE,eAzDiD,EA0DjD,0BAAA/F,qBA1DiD,EA2DjD,yBAAAC,oBA3DiD,EA4DjD,yBAAA7L,oBA5DiD,EA6DjD,QAAAhP,mBA7DiD,EA8DjD,QAAAD,WA9DiD,EA+DjD,mBAAAmhB,eA/DiD,EAgEjD,kBAAAlG,cAhEiD,EAiEjD,kBAAAgB,cAjEiD,EAkEjD,4BAAAtE,uBAlEiD,EAmEjD,yBAAAmJ,oBAnEiD,EAoEjD,6BAAAlF,uBApEiD,EAqEjD,gCAAAZ,2BArEiD,EAsEjD,mBAAAsF,eAtEiD,EAuEjD,4BAAApF,uBAvEiD,EAwEjD,oCAAA0C,qBAxEiD,EAyEjD,iCAAAE,kBAzEiD,EA0EjD,oCAAAV,oBA1EiD,EA2EjD,4BAAApiB,uBA3EiD,EA4EjD,mCAAAmhB,6BA5EiD,EA6EjD,iCAAAtE,2BA7EiD,EA8EjD,uBAAA9C,kBA9EiD,EA8E7B,iCAAAI,2BA9E6B,EA+EjD,+BAAAL,yBA/EiD;AAkFpC,O;AAHY,K;;;;;2BAGpB5U,Q,EAAQ;cAvFpB,OAAA/oD,QAuFoB;eAvFX;AACNC,iBAAO,GAAG,SAAAF,YAAH,4BACA,QAAAiyD,gBADA,IAEH,QAAAlJ,mBAFG,EAGH,QAAAD,WAHG,EAIH,wBAAAwhB,wBAJG,EAIuB,sBAAAC,uBAJvB,EADD;AAMNzoE,sBAAY,EAAE,CACV,2CAAA42D,mCADU,EAEV,wCAAA6D,iCAFU,EAGV,4BAAAhG,sBAHU,EAIV,4BAAA6N,sBAJU,EAKV,oCAAAnD,6BALU,EAMV,gCAAAO,yBANU,EAOV,uBAAArS,kBAPU,EAQV,+BAAA2T,wBARU,EASV,2BAAAhU,sBATU,EAUV,mCAAAsT,4BAVU,EAWV,mBAAAhG,eAXU,EAYV,yBAAA6J,oBAZU,EAaV,cAAAf,UAbU,EAcV,gBAAAO,YAdU,EAeV,mBAAAiE,eAfU,EAgBV,0BAAA/F,qBAhBU,EAiBV,yBAAAC,oBAjBU,EAkBV,0BAAAqF,qBAlBU,EAmBV,uBAAApF,kBAnBU,EAoBV,gCAAA2F,0BApBU,EAqBV,yBAAAzR,oBArBU,EAsBV,0BAAA2L,qBAtBU,EAuBV,mBAAAuG,eAvBU,EAwBV,kBAAAlG,cAxBU,EAyBV,kBAAAgB,cAzBU,EA0BV,4BAAAtE,uBA1BU,EA2BV,yBAAAmJ,oBA3BU,EA4BV,6BAAAlF,uBA5BU,EA6BV,gCAAAZ,2BA7BU,EA8BV,mBAAAsF,eA9BU,EA+BV,4BAAApF,uBA/BU,EAgCV,oCAAA0C,qBAhCU,EAiCV,iCAAAE,kBAjCU,EAkCV,oCAAAV,oBAlCU,EAmCV,4BAAApiB,uBAnCU,EAoCV,mCAAAmhB,6BApCU,EAqCV,iCAAAtE,2BArCU,EAsCV,uBAAA9C,kBAtCU,EAuCV,iCAAAI,2BAvCU,EAwCV,+BAAAL,yBAxCU,CANR;AAgDN77D,iBAAO,EAAE,CACL,2CAAA22D,mCADK,EAEL,wCAAA6D,iCAFK,EAGL,4BAAAhG,sBAHK,EAIL,4BAAA6N,sBAJK,EAKL,oCAAAnD,6BALK,EAML,gCAAAO,yBANK,EAOL,uBAAArS,kBAPK,EAQL,+BAAA2T,wBARK,EASL,2BAAAhU,sBATK,EAUL,mCAAAsT,4BAVK,EAWL,yBAAA6D,oBAXK,EAYL,cAAAf,UAZK,EAaL,gBAAAO,YAbK,EAcL,mBAAAiE,eAdK,EAeL,0BAAA/F,qBAfK,EAgBL,yBAAAC,oBAhBK,EAiBL,yBAAA7L,oBAjBK,EAkBL,QAAAhP,mBAlBK,EAmBL,QAAAD,WAnBK,EAoBL,mBAAAmhB,eApBK,EAqBL,kBAAAlG,cArBK,EAsBL,kBAAAgB,cAtBK,EAuBL,4BAAAtE,uBAvBK,EAwBL,yBAAAmJ,oBAxBK,EAyBL,6BAAAlF,uBAzBK,EA0BL,gCAAAZ,2BA1BK,EA2BL,mBAAAsF,eA3BK,EA4BL,4BAAApF,uBA5BK,EA6BL,oCAAA0C,qBA7BK,EA8BL,iCAAAE,kBA9BK,EA+BL,oCAAAV,oBA/BK,EAgCL,4BAAApiB,uBAhCK,EAiCL,mCAAAmhB,6BAjCK,EAkCL,iCAAAtE,2BAlCK,EAmCL,uBAAA9C,kBAnCK,EAmCe,iCAAAI,2BAnCf,EAoCL,+BAAAL,yBApCK;AAhDH,S;AAuFW,Q;;;;;;;;;;;;;;;;;ACnLrB;;;;;;;;;;AAMA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA,2D,CAEA;;;AACa,YAAA4M,qBAAA,GAAwB,KAAK,EAA7B;AAEA,YAAAlI,gBAAA,GAAmB,EAAnB,C,CAEb;;AACa,YAAA/S,sBAAA,GAAyB,UAClCI,SADkC,EAElC8a,QAFkC,EAKZ;AAAA,UAFtBljE,IAEsB,uEAFP,EAEO;AAAA,UADtBoC,QACsB,uEADH,IAAI,UAAAsM,MAAJ,CAAW;AAAElR,YAAI,EAAEJ,IAAI,CAAC6lB,GAAL;AAAR,OAAX,EAAiCk1B,QAC9B;AACtB;AACA;AACA,UAAMl1B,GAAG,GAAG,IAAI,UAAAvU,MAAJ,CAAW;AAAElR,YAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,mBAAW,EAAE,KAAjC;AAAwCC,mBAAW,EAAEnhB;AAArD,OAAX,CAAZ,CAHsB,CAItB;;AACA,UAAI5E,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAElR,YAAI,EAAE4qD,SAAR;AAAmB9kC,mBAAW,EAAE,KAAhC;AAAuCC,mBAAW,EAAEnhB;AAApD,OAAX,CAAX,CALsB,CAMtB;;AACA,UAAMulD,MAAM,GAAwB,EAApC;;AACA,UAAIub,QAAQ,IAAI1lE,IAAI,CAACm3B,WAAL,CAAiB1R,GAAjB,EAAsB,KAAtB,CAAhB,EAA8C;AAC1C;AACAzlB,YAAI,GAAGA,IAAI,CAAC0J,YAAL,CAAkB,KAAlB,CAAP;AACH,OAHD,MAGO;AACH;AACA1J,YAAI,GAAGylB,GAAP;AACH,OAdqB,CAetB;;;AACA,UAAMkgD,SAAS,GAAG,QAAAhjE,QAAA,CAASC,UAAT,CAAoB5C,IAAI,CAAC2J,EAAzB,CAAlB;AACA,UAAM7G,WAAW,GAAG,OAAA/C,iBAAA,CAAkB4lE,SAAlB,EAA6BnjE,IAA7B,CAApB,CAjBsB,CAkBtB;;AACAxC,UAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAElR,YAAI,EAAE8C,WAAW,CAACD,OAAZ,EAAR;AAA+BijB,mBAAW,EAAE,KAA5C;AAAmDC,mBAAW,EAAEnhB;AAAhE,OAAX,CAAP;AACA,UAAM4mB,GAAG,GAAGxrB,IAAI,CAACouB,UAAL,CAAgB,KAAhB,CAAZ,CApBsB,CAqBtB;;AACA,aAAOpuB,IAAI,CAACk3B,YAAL,CAAkB1L,GAAlB,CAAP,EAA+B;AAC3B2+B,cAAM,CAACtiD,IAAP,CAAY;AACRoE,iBAAO,EAAE,OAAAvB,6BAAA,CAA8B1K,IAA9B,CADD;AAERihB,sBAAY,EAAEjhB,IAAI,CAACsB,UAAL,CAAgB,QAAhB,CAFN;AAGR4B,eAAK,EAAElD,IAAI,CAACsB,UAAL,CAAgB,OAAhB;AAHC,SAAZ;AAKAtB,YAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAEJ,iBAAO,EAAE+B;AAAX,SAAd,CAAP;AACH;;AACD,aAAO2nD,MAAP;AACH,KApCY;;AAuCA,YAAAiU,wBAAA,GAA2B,UACpC/d,UADoC,EAEpCqlB,QAFoC,EAQX;AAAA,UALzBljE,IAKyB,uEALV,EAKU;AAAA,UAJzBoC,QAIyB,uEAJN,IAAI,UAAAsM,MAAJ,CAAW;AAAElR,YAAI,EAAEJ,IAAI,CAAC6lB,GAAL;AAAR,OAAX,EAAiCk1B,QAI3B;AAAA,UAHzB7mB,OAGyB,uEAHN,KAGM;AAAA,UAFzBmR,MAEyB,uEAFQ,EAER;AAAA,UADzBi5B,eACyB,uEADE,KACF;AACzB;AACA,UAAMz4C,GAAG,GAAG,IAAI,UAAAvU,MAAJ,CAAW;AAAElR,YAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,mBAAW,EAAE,KAAjC;AAAwCC,mBAAW,EAAEnhB;AAArD,OAAX,CAAZ,CAFyB,CAGzB;;AACA,UAAIjE,MAAM,GAAG0/C,UAAU,CAACtlB,KAAX,EAAb,CAJyB,CAKzB;;AACA,UAAMovB,MAAM,GAA2B,EAAvC;;AACA,UAAIub,QAAQ,IAAI/kE,MAAM,CAACw2B,WAAP,CAAmB1R,GAAnB,EAAwB,KAAxB,CAAhB,EAAgD;AAC5C;AACA9kB,cAAM,GAAGA,MAAM,CAAC+I,YAAP,CAAoB,KAApB,CAAT;AACH,OAHD,MAGO;AACH;AACA/I,cAAM,GAAGu9D,eAAe,GAAGv9D,MAAH,GAAY8kB,GAApC;AACH,OAbwB,CAczB;;;AACA9kB,YAAM,GAAG,OAAAD,mBAAA,CAAoBC,MAApB,EAA4B6B,IAA5B,CAAT,CAfyB,CAgBzB;;AACA,UAAMgpB,GAAG,GAAG7qB,MAAM,CAACytB,UAAP,CAAkB,KAAlB,CAAZ,CAjByB,CAkBzB;;AACA,UAAI0F,OAAO,IAAInzB,MAAM,CAACw7B,UAAP,CAAkB1W,GAAlB,EAAuB,KAAvB,CAAf,EAA8C;AAC1C,YAAMkG,UAAU,GAAGhrB,MAAM,CAAC+I,YAAP,CAAoB,KAApB,CAAnB;AACAygD,cAAM,CAACtiD,IAAP,CAAY;AACRoE,iBAAO,EAAE,OAAAvB,6BAAA,CAA8BihB,UAA9B,CADD;AAER1K,sBAAY,EAAE0K,UAAU,CAACrqB,UAAX,CAAsB,QAAtB,CAFN;AAGR4B,eAAK,EAAEyoB;AAHC,SAAZ;AAKH,OA1BwB,CA2BzB;;;AACA,aAAOhrB,MAAM,CAACu2B,YAAP,CAAoB1L,GAApB,CAAP,EAAiC;AAC7B2+B,cAAM,CAACtiD,IAAP,CAAY;AACRoE,iBAAO,EAAE,OAAAvB,6BAAA,CAA8B/J,MAA9B,CADD;AAERsgB,sBAAY,EAAEtgB,MAAM,CAACW,UAAP,CAAkB,QAAlB,CAFN;AAGR4B,eAAK,EAAEvC;AAHC,SAAZ;AAMAA,cAAM,GAAGA,MAAM,CAACE,QAAP,CAAgB;AAAEJ,iBAAO,EAAE+B;AAAX,SAAhB,CAAT;AACH;;AAED,aAAO,OAAAkE,MAAA,CAAOu+B,MAAM,CAACjV,MAAP,CAAcm6B,MAAd,CAAP,EAA8B,cAA9B,CAAP;AACH,KA/CY;AAiDb;;;;;;;;;AAOa,YAAAD,uBAAA,GAA0B,UACnClqD,IADmC,EAEnCyD,GAFmC,EAGnC84B,GAHmC,EAInC/5B,IAJmC,EAKnCq7D,QALmC,EAKQ;AAC3C,UAAM1T,MAAM,GAAwB,EAApC;AACA,UAAIjnD,KAAK,GAAGq5B,GAAZ;;AACA,aAAOr5B,KAAK,IAAIO,GAAhB,EAAqB;AACjB,YAAI1C,QAAgB,SAApB;;AACA,YAAI88D,QAAJ,EAAc;AACV,cAAM18D,CAAC,GAAG,OAAAL,iBAAA,CAAkBoC,KAAK,GAAGq5B,GAA1B,EAA+B,IAA/B,CAAV;AACAx7B,kBAAQ,GAAGI,CAAC,cAAOA,CAAP,IAAa,SAAzB;AACH,SAHD,MAGO;AACHJ,kBAAQ,GAAG,OAAAD,iBAAA,CAAkBoC,KAAlB,EAAyB,IAAzB,CAAX;AACH;;AAEDinD,cAAM,CAACtiD,IAAP,CAAY;AACR3E,eAAK,EAALA,KADQ;AAER+I,iBAAO,YAAKjM,IAAI,CAACa,QAAL,CAAc;AAAEJ,mBAAO,EAAEyC;AAAX,WAAd,EAAkC5B,UAAlC,CAA6C,OAAAwI,gBAAA,EAA7C,EAAiEW,iBAAjE,EAAL,eAA8F1J,QAA9F;AAFC,SAAZ;AAIAmC,aAAK,IAAIV,IAAT;AACH;;AACD,aAAO2nD,MAAP;AACH,KAxBY;;AA0BA,YAAAyb,YAAA,GAAmC;AAC5C1iE,WAAK,EAAE,QAAAuiE,qBADqC;AAE5Cx5D,aAAO,EAAE;AAFmC,KAAnC;AAKA,YAAA45D,aAAA,GAAoC;AAC7C3iE,WAAK,EAAE,KAAK,EAAL,GAAU,CAD4B;AAE7C+I,aAAO,EAAE;AAFoC,KAApC;AAKA,YAAAqxD,qBAAA,GAAyC,CAClD;AACIp9D,WAAK,EAAE,EADX;AAEIsC,UAAI,EAAE,EAFV;AAGIiB,SAAG,EAAE,KAAK;AAHd,KADkD,CAMlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdkD,KAAzC;AAiBb;;;;AAGa,YAAAm6D,iCAAA,GAAoC,UAAC59D,IAAD,EAAeiD,cAAf,EAAgD46D,QAAhD;AAAA,gCACzC56D,cAAc,CAAC4C,GAAf,CAAmB,UAAA9E,QAAQ;AAAA,eAAI,QAAAmpD,uBAAA,CAAwBlqD,IAAxB,EAA8Be,QAAQ,CAAC0C,GAAvC,EAA4C1C,QAAQ,CAACb,KAArD,EAA4Da,QAAQ,CAACyB,IAArE,EAA2Eq7D,QAA3E,CAAJ;AAAA,OAA3B,EAAqHl6D,MAArH,CAA6H,UAACC,aAAD,EAAgBC,YAAhB,EAAiC;AAC9JD,qBAAa,CAACiE,IAAd,OAAAjE,aAAa,qBAASC,YAAT,EAAb;AACA,eAAOD,aAAP;AACH,OAHG,EAGA,EAHA,CADyC;AAAA,KAApC;;;;;;;;;;;;;;;;;;;;;;;;;AChLb;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;;AAQA;AAAA;AAAA;;AAEa,YAAAkiE,QAAA,GAAW,kBAAA11D,mBAAA,CAAqC,aAArC,EAAoD,SAApD,CAAX;;AAEA,YAAA21D,eAAA,GAAkB;AAAA,UAAG5tD,IAAH,UAAGA,IAAH;AAAA,aAA8BA,IAA9B;AAAA,KAAlB;;AAEA,YAAA6tD,iBAAA,GAAoB,QAAAhxD,cAAA,CAAe,QAAAA,cAAA,CAAe,QAAA+wD,eAAf,EAAgC,QAAAD,QAAA,CAAS7wD,SAAT,CAAmBuR,KAAnD,CAAf,EAA0E,UAACzrB,KAAD;AAAA,aAAW,CAAC,CAACA,KAAK,CAACma,eAAnB;AAAA,KAA1E,CAApB;AAEA,YAAAgD,iBAAA,GAAoB,QAAAlD,cAAA,CAAe,QAAA+wD,eAAf,EAAgC,QAAAD,QAAA,CAAS7wD,SAAT,CAAmBC,eAAnD,CAApB;;;;;;;;;;;;;;;;;;;;;;;;AChBb;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QAIa+wD,W,GAET,qBAAoBt1D,OAApB,EACoBu1D,WADpB,EAC+C;AAAA;;AAAA;;AAD3B,WAAAv1D,OAAA,GAAAA,OAAA;AACA,WAAAu1D,WAAA,GAAAA,WAAA;AAIpB,WAAAJ,QAAA,GAAW,UAAAxzD,mBAAA,CAAoB,KAAK3B,OAAzB,EAAkC,eAAAm1D,QAAlC,EAA4C;AAAA,eAAM,QAAI,CAACI,WAAL,CAAiB91B,eAAjB,EAAN;AAAA,OAA5C,CAAX;AAHC,K;;;uBAJQ61B,W,EAAW,uB,EAAA,4B;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;AAOpB,wBADC,UAAArzD,MAAA,EACD,E,yCAAA,G,qBAAA,E,UAAA,E,MAAA;;AARJ;;;;2BACaqzD,W,EAAW;cADvB,OAAApzD;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;QASaszD,U;;;;AAPb;;YAOaA;;;;yBAAAA,U;AAAU,O;AAAA,gBANV,CACL,SAAAlrE,YADK,EAEL,QAAAgY,WAAA,CAAYD,UAAZ,CAAuB,MAAvB,EAA+B,eAAAozD,WAA/B,CAFK,EAGL,UAAArzD,aAAA,CAAcC,UAAd,CAAyB,CAAC,eAAAizD,WAAD,CAAzB,CAHK,CAMU;;;;+EAAVE,U,EAAU;AAAA,kBALf,SAAAlrE,YAKe,EALH,qBAKG,EALH,uBAKG;AAAA,O;AALH,K;;;;;2BAKPkrE,U,EAAU;cAPtB,OAAAjrE,QAOsB;eAPb;AACNC,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,QAAAgY,WAAA,CAAYD,UAAZ,CAAuB,MAAvB,EAA+B,eAAAozD,WAA/B,CAFK,EAGL,UAAArzD,aAAA,CAAcC,UAAd,CAAyB,CAAC,eAAAizD,WAAD,CAAzB,CAHK;AADH,S;AAOa,Q;;;;;;;;;;;;;;;;;;;;;;ACdvB;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGa,YAAAI,gBAAA,GAA8B;AACvChtC,aAAO,EAAE,UAAAhmB,YAAA,CAAaC,KAAb;AAD8B,KAA9B;AAIA,YAAA8yD,WAAA,GAAc,QAAAxyD,aAAA,iBAAc,QAAAyyD,gBAAd,4BACpB,eAAAP,QAAA,CAAShyD,GADW,GAAd;;;;;;;;;;;;;;ACVb,aAASwyD,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAO3qD,OAAO,CAACC,OAAR,GAAkBI,IAAlB,CAAuB,YAAW;AACxC,YAAI5R,CAAC,GAAG,IAAIjO,KAAJ,CAAU,yBAAyBmqE,GAAzB,GAA+B,GAAzC,CAAR;AACAl8D,SAAC,CAAC+d,IAAF,GAAS,kBAAT;AACA,cAAM/d,CAAN;AACA,OAJM,CAAP;AAKA;;AACDi8D,4BAAwB,CAAC1gE,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACA0gE,4BAAwB,CAACzqD,OAAzB,GAAmCyqD,wBAAnC;AACAE,UAAM,CAACxpE,OAAP,GAAiBspE,wBAAjB;AACAA,4BAAwB,CAACr0D,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;;;;;ACZA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMw0D,MAAM,GAAW,CACnB;AACIr8C,UAAI,EAAE,EADV;AAEIs8C,eAAS,EAAE,kBAAAC,qBAFf;AAGIC,cAAQ,EAAE,CACN;AACIx8C,YAAI,EAAE,UADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACV;AAAA;AAAO;AAAA,4DAAP;AAAA,aAA8C5qD,IAA9C,CAAmD,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC0lE,aAAN;AAAA,WAApD,CADU;AAAA;AAFlB,OADM,EAMN;AACI18C,YAAI,EAAE,WADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACV;AAAA;AAAO;AAAA,8DAAP;AAAA,aAAgD5qD,IAAhD,CAAqD,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC2lE,cAAN;AAAA,WAAtD,CADU;AAAA;AAFlB,OANM,EAWN;AACI38C,YAAI,EAAE,UADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACV;AAAA;AAAO;AAAA,mDAAP;AAAA,aAAqC5qD,IAArC,CAA0C,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC4lE,cAAN;AAAA,WAA3C,CADU;AAAA;AAFlB,OAXM,EAgBN;AACI58C,YAAI,EAAE,UADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACV;AAAA;AAAO;AAAA,mDAAP;AAAA,aAAqC5qD,IAArC,CAA0C,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC6lE,cAAN;AAAA,WAA3C,CADU;AAAA;AAFlB,OAhBM,EAqBN;AACI78C,YAAI,EAAE,SADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACV;AAAA;AAAO;AAAA,iDAAP;AAAA,aAAmC5qD,IAAnC,CAAwC,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC8lE,aAAN;AAAA,WAAzC,CADU;AAAA;AAFlB,OArBM,EA0BN;AACI98C,YAAI,EAAE,YADV;AAEIy8C,oBAAY,EAAE;AAAA,iBACd;AAAA;AAAO;AAAA,uDAAP;AAAA,aAAyC5qD,IAAzC,CAA8C,UAAA7a,CAAC;AAAA,mBAAIA,CAAC,CAAC+lE,eAAN;AAAA,WAA/C,CADc;AAAA;AAFlB,OA1BM,EA+BN;AAAE/8C,YAAI,EAAE,IAAR;AAAcg9C,kBAAU,EAAE;AAA1B,OA/BM;AAHd,KADmB,EAsCnB;AAAEh9C,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAtCmB,CAAvB;;QA6CaC,gB;;;;AAJb;;YAIaA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHhB,CAAC,SAAAC,YAAA,CAAaC,OAAb,CAAqBd,MAArB,EAA6B;AAAEe,eAAO,EAAE;AAAX,OAA7B,CAAD,CAGgB,EAFf,SAAAF,YAEe;;;;+EAAhBD,gB,EAAgB;AAAA;AAAA,kBAFf,SAAAC,YAEe;AAAA,O;AAFH,K;;;;;2BAEbD,gB,EAAgB;cAJ5B,OAAAnsE,QAI4B;eAJnB;AACNC,iBAAO,EAAE,CAAC,SAAAmsE,YAAA,CAAaC,OAAb,CAAqBd,MAArB,EAA6B;AAAEe,mBAAO,EAAE;AAAX,WAA7B,CAAD,CADH;AAENxqE,iBAAO,EAAE,CAAC,SAAAsqE,YAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;;;AClD7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;QAYaG,Y;;;;;AACT,4BACYjxD,SADZ,EAEYkxD,QAFZ,EAGYC,YAHZ,EAIYlsD,QAJZ,EAIwC;AAAA;;AAAA;;AAEpC;AALQ,iBAAAjF,SAAA,GAAAA,SAAA;AACA,iBAAAkxD,QAAA,GAAAA,QAAA;AACA,iBAAAC,YAAA,GAAAA,YAAA;AACA,iBAAAlsD,QAAA,GAAAA,QAAA;AAGR;;AACA,YAAI,OAAAvO,QAAA,MAAc,OAAAA,QAAA,KAAa,EAA/B,EAAmC;AAC/B0L,kBAAQ,CAACW,IAAT,aAAmBX,QAAQ,CAACO,MAA5B,SAAqCP,QAAQ,CAAC4R,QAA9C;AACA;AACH,SAPmC,CAQpC;;;AACA,YAAMo9C,cAAc,GAAGpuD,YAAY,CAACC,OAAb,CAAqB,oBAArB,KAA8C,IAArE;AACAD,oBAAY,CAACmF,UAAb,CAAwB,gBAAxB;;AACA,YAAI,CAACipD,cAAL,EAAqB;AACjBpuD,sBAAY,CAACmF,UAAb,CAAwB,oBAAxB;AACH;;AAED,iBAAKgpD,YAAL,CAAkB1tD,KAAlB,CAAwB,sBAAxB;;AACA,iBAAK4tD,WAAL;;AAhBoC;AAiBvC;;;;sCAEqB;AAAA;;AAClB,eAAK9pE,YAAL,CACI,UADJ,EAEI,KAAK0d,QAAL,CAAc3D,WAAd,CAA0B7Z,SAA1B,CAAoC,UAAClD,KAAD,EAAW;AAC3C;AACA,gBAAIA,KAAJ,EAAW;AACP,sBAAI,CAAC4D,OAAL,CAAa,cAAb,EAA6B,YAAM;AAC/B,oBAAMmgB,KAAK,GAAG,QAAI,CAACtI,SAAL,CAAesE,IAAf,CAAoBgE,KAAlC;;AACA,oBAAI,CAACA,KAAL,EAAY;AACR,yBAAO3iB,UAAU,CAAC;AAAA,2BAAM,QAAI,CAAC0rE,WAAL,EAAN;AAAA,mBAAD,EAA2B,GAA3B,CAAjB;AACH;;AACD,wBAAI,CAACH,QAAL,CAAc5oD,KAAd,GAAsBA,KAAtB;AACA,wBAAI,CAAC4oD,QAAL,CAAcI,SAAd,GAA0B,IAA1B;AACA,wBAAI,CAACJ,QAAL,CAAcnqD,QAAd,GAAyB,oBAAzB;AACA,8BAAAwqD,aAAA,CAAcC,WAAd,CAA0B,cAAAC,MAA1B;AACH,eATD;;AAUA,sBAAI,CAACnsE,KAAL,CAAW,UAAX;AACH;AACJ,WAfD,CAFJ;AAmBH;;;;MA5C6B,OAAAW,a;;AAVlC;;;uBAUagrE,Y,EAAY,wC,EAAA,sC,EAAA,mC,EAAA,2C;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,+C;AAAA,c;AAAA,a;AAAA,0B;AAAA;AAAA;AClBzB;AACI;AACJ;;;;;;;;;;2BDgBaA,Y,EAAY;cAVxB,OAAA3nB,SAUwB;eAVd;AACPljD,kBAAQ,EAAE,UADH;AAEPmjD,qBAAW,EAAE,sBAFN;AAGPC,mBAAS,EAAE,CACP,6BADO,EAEP,qCAFO,EAGP,qCAHO,CAHJ;AAQPiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC;AAR1B,S;AAUc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBzB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;AAQA;;;;;AAGC,aAAgB6jD,uBAAhB,CAAwCC,OAAxC,EAAmE;AAChE;AACA,UAAIviE,IAAI,GAAG,CACP,WADO,EAEP,aAFO,EAGP,OAHO,CAAX;;AAMA,UAAI,CAAC,cAAAo3C,WAAA,CAAYC,UAAjB,EAA6B;AACzBr3C,YAAI,GAAG,CACH,UADG,EAEH,WAFG,EAGH,cAHG,EAIH,aAJG,EAKH,OALG,EAMH,MANG,CAAP;AAQH;;AAED,aAAO,0BAAAwiE,gBAAA,CAAiB;AACpBxiE,YAAI,EAAJA,IADoB;AAEpByiE,iBAAS,EAAE;AAFS,OAAjB,EAGJF,OAHI,CAAP;AAIH;;AAvBA;AAyBD,QAAMG,YAAY,GAAiC,CAACJ,uBAAD,CAAnD;;QA6BaK,S,GACT,qBAAc;AAAA;;AACVhjE,YAAM,CAACijE,UAAP,GAAoB,IAApB;AACH,K;;AA9BL;;YA2BaD,S;AAAS,kBAFN,gBAAAd,YAEM;;;;yBAATc,S;AAAS,O;AAAA,iBAPP,CACP;AAAE32B,eAAO,EAAE,OAAA62B,wBAAX;AAAqCh8B,gBAAQ,EAAE;AAAE,mBAAO;AAAT;AAA/C,OADO,EAEP,cAAAkF,yBAAA,CAA0B,WAAA+2B,gBAA1B,CAFO,EAGP;AAAE92B,eAAO,EAAE,cAAAkL,iBAAX;AAA8BrQ,gBAAQ,EAAE,cAAAuQ;AAAxC,OAHO,C;AAIV,gBAnBQ,CACL,mBAAA2rB,aADK,EAEL,aAAAC,uBAFK,EAGL,qBAAAvB,gBAHK,EAIL,OAAAwB,gBAJK,EAKL,QAAA9kB,WALK,EAML,WAAA+kB,cANK,EAOL,kBAAAh2D,cAPK,EAQL,kBAAAi2D,cARK,EASL,kBAAAllB,oBATK,EAUL,gBAAAmlB,mBAVK,EAWL,QAAA/1D,WAAA,CAAYs0D,OAAZ,CAAoB,EAApB,EAAwB;AAAEe,oBAAY,EAAZA;AAAF,OAAxB,CAXK,EAYL,yBAZK,EAaL,UAAAv1D,aAAA,CAAcw0D,OAAd,EAbK,CAmBR;;;;+EAGQgB,S,EAAS;AAAA,uBAzBd,gBAAAd,YAyBc,EAxBd,kBAAAd,qBAwBc;AAxBO,kBAGrB,mBAAAgC,aAHqB,EAIrB,aAAAC,uBAJqB,EAKrB,qBAAAvB,gBALqB,EAMrB,OAAAwB,gBANqB,EAOrB,QAAA9kB,WAPqB,EAQrB,WAAA+kB,cARqB,EASrB,kBAAAh2D,cATqB,EAUrB,kBAAAi2D,cAVqB,EAWrB,kBAAAllB,oBAXqB,EAYrB,gBAAAmlB,mBAZqB,EAYF,kBAZE,EAcrB,yBAdqB,EAcH,oBAdG;AAwBP,O;AAVI,K;;;;;2BAUbT,S,EAAS;cA3BrB,OAAArtE,QA2BqB;eA3BZ;AACN6B,sBAAY,EAAE,CACV,gBAAA0qE,YADU,EAEV,kBAAAd,qBAFU,CADR;AAKNxrE,iBAAO,EAAE,CACL,mBAAAwtE,aADK,EAEL,aAAAC,uBAFK,EAGL,qBAAAvB,gBAHK,EAIL,OAAAwB,gBAJK,EAKL,QAAA9kB,WALK,EAML,WAAA+kB,cANK,EAOL,kBAAAh2D,cAPK,EAQL,kBAAAi2D,cARK,EASL,kBAAAllB,oBATK,EAUL,gBAAAmlB,mBAVK,EAWL,QAAA/1D,WAAA,CAAYs0D,OAAZ,CAAoB,EAApB,EAAwB;AAAEe,wBAAY,EAAZA;AAAF,WAAxB,CAXK,EAYL,yBAZK,EAaL,UAAAv1D,aAAA,CAAcw0D,OAAd,EAbK,CALH;AAoBN1qB,mBAAS,EAAE,CACP;AAAEjL,mBAAO,EAAE,OAAA62B,wBAAX;AAAqCh8B,oBAAQ,EAAE;AAAE,uBAAO;AAAT;AAA/C,WADO,EAEP,cAAAkF,yBAAA,CAA0B,WAAA+2B,gBAA1B,CAFO,EAGP;AAAE92B,mBAAO,EAAE,cAAAkL,iBAAX;AAA8BrQ,oBAAQ,EAAE,cAAAuQ;AAAxC,WAHO,CApBL;AAyBNisB,mBAAS,EAAE,CAAC,gBAAAxB,YAAD;AAzBL,S;AA2BY,Q;;;;;;;;;;;;;;;;;;;;;;;;AC5FtB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBQ;;;;AAAkC;;;;;;;;AAW1B;AAMI;AAAA;AAAA;AAAA;AAAA;AACH;;;;;AALG,iEAAmC,MAAnC,EAAmC,WAAnC,EAAmC,WAAnC,EAAmC,gBAAnC,EAAmC,SAAnC,EAAmC,cAAnC;;;;;;AAHR;AACI;AAQJ;;;;;AAPQ;AAAA;;;;;;;;AASJ;AAII;AAAA;AAAA;AAAA;AAAA;AACH;;;;;AAHG,2CAAa,MAAb,EAAa,oBAAb;;;;;;AAHR;AACI;AAMJ;;;;;AALQ;AAAA;;;;;;;;AAOJ;AAGI;AAAA;AAAA;AAAA;AAAA;AACH;;;;;AAFG;;;;;;AAHR;AACI;AAKJ;;;;;AAJQ;AAAA;;;;;;;;;;;QDiBPyB,qB;;;;;AAiCX,qCACUztD,QADV,EAEU0R,OAFV,EAGUD,IAHV,EAIUmwB,OAJV,EAKUC,WALV,EAMmCvW,KANnC,EAM0D;AAAA;;AAAA;;AAExD;AAPQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAD,IAAA,GAAAA,IAAA;AACA,iBAAAmwB,OAAA,GAAAA,OAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACyB,iBAAAvW,KAAA,GAAAA,KAAA;AAtB5B,iBAAAoiC,SAAA,GAAiD,IAAjD;AASU,iBAAAz7D,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAayC;AAGzD;AArBD;;;;;mCAuBe;AAAA;;AACb,eAAK6rB,aAAL;AACA,eAAK9rB,WAAL,CAAiBQ,YAAjB,GAAgC,IAAhC;;AACA,eAAK3wB,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAP,CAA9B,EAA6C9Y,SAA7C,CAAuD,YAAM;AAC3D,oBAAI,CAACorE,SAAL,GAAiB,QAAI,CAACtiC,KAAL,CAAWuiC,aAAX,GAA2B,UAA3B,GAAwC,MAAzD;;AACA,oBAAI,CAACC,YAAL;AACD,WAHD;AAID;;;wCAEsB;AACrB,kBAAQ,KAAKxiC,KAAL,CAAW91B,MAAnB;AACE,iBAAK,cAAAsqB,aAAA,CAAc+iB,IAAnB;AACE,mBAAKkrB,UAAL,GAAkB,cAAlB;AACA;;AACF,iBAAK,cAAAnuC,YAAA,CAAaC,KAAlB;AACE,mBAAKkuC,UAAL,GAAkB,wBAAlB;AACA;;AACF,iBAAK,cAAAjuC,aAAA,CAAcD,KAAnB;AACE,mBAAKkuC,UAAL,GAAkB,eAAlB;AACA;;AACF,iBAAK,cAAAnuC,YAAA,CAAaijB,IAAlB;AACE,mBAAKkrB,UAAL,GAAkB,aAAlB;AACA;;AACF;AACE,mBAAKA,UAAL,GAAkB,aAAlB;AACA;AAfJ;AAiBD;AAED;;;;;;;wCAIuB97D,K,EAAyB;AAC9C;AACA,cAAIA,KAAK,CAACzI,IAAN,KAAe,MAAnB,EAA2B;AACzB,iBAAKwkE,cAAL,CAAoB/7D,KAApB;AACD,WAFD,MAEO,IAAIA,KAAK,CAACzI,IAAN,KAAe,UAAnB,EAA+B;AACpC,iBAAKykE,kBAAL,CAAwBh8D,KAAxB;AACD,WAFM,MAEA,IAAIA,KAAK,CAACzI,IAAN,KAAe,OAAnB,EAA4B;AACjC,iBAAK0kE,SAAL;AACD;AACF;;;gCAEc;AACb,eAAKrsB,WAAL,CAAiBqB,KAAjB;AACD;;;uCAGsBjxC,K,EAAyB;AAAA;;AAC9C,cAAM2hB,UAAU,GAAG,KAAK3T,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAAjD;;AACA,kBAAQwK,KAAK,CAAClL,IAAd;AACE,iBAAK,YAAL;AACE,mBAAKonE,4BAAL;AACA;;AACF,iBAAK,QAAL;AACE,kBACEv6C,UAAU,IACVA,UAAU,CAACntB,MADX,KAEC,CAACwL,KAAK,CAACwO,QAAP,IAAmB,CAACxO,KAAK,CAACwO,QAAN,CAAe4iC,GAAnC,IAA0CpxC,KAAK,CAACwO,QAAN,CAAe4iC,GAAf,KAAuB,WAFlE,CADF,EAIE;AACA,qBAAK+qB,yBAAL;AACD,eAND,MAMO;AACL,oBAAI,KAAKnuD,IAAL,CAAUquB,QAAV,CAAmBjmB,YAAnB,IAAmC,KAAKpI,IAAL,CAAUquB,QAAV,CAAmBjmB,YAAnB,CAAgC5gB,KAAvE,EAA8E;AAC5E,uBAAKivC,QAAL,CAAc,UAAd;AACD,iBAFD,MAEO;AACL,uBAAKA,QAAL,CAAc,MAAd;AACA,uBAAK23B,cAAL;AACD;AACF;;AACD;;AACF,iBAAK,UAAL;AACE,kBAAMzyC,UAAU,GAAG,KAAK3b,IAAL,CAAUquB,QAAV,CAAmB7V,QAAnB,CAA4BhxB,KAA/C;;AACA,kBACEm0B,UAAU,CAAC7zB,IAAX,CAAgB,UAAA+zB,KAAK;AAAA,uBAAI,QAAI,CAAC7b,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAA9B,CAAoCM,IAApC,CAAyC,UAAAkf,KAAK;AAAA,yBAAIA,KAAK,CAACtR,KAAN,KAAgBmmB,KAAK,CAACC,WAA1B;AAAA,iBAA9C,CAAJ;AAAA,eAArB,KACAH,UADA,IAEAA,UAAU,CAACn1B,MAFX,KAGC,CAACwL,KAAK,CAACwO,QAAP,IAAmB,CAACxO,KAAK,CAACwO,QAAN,CAAe4iC,GAAnC,IAA0CpxC,KAAK,CAACwO,QAAN,CAAe4iC,GAAf,KAAuB,SAHlE,CADF,EAKE;AACA,qBAAKirB,wBAAL;AACD,eAPD,MAOO;AACL,qBAAK53B,QAAL,CAAc,MAAd;AACA,qBAAK23B,cAAL;AACD;;AACD;;AACF,iBAAK,SAAL;AACE,mBAAKE,eAAL;AACF;;AACA;AACE,mBAAKtuD,IAAL,CAAUuuD,WAAV,GADF,CAEE;;AACA,kBAAMC,qBAAqB,GAAG,KAAKv1D,OAAL,CAAa1C,EAAb,KAC5B,KAAK80B,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaC,KAAnC,IAA4C,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaijB,IAA/E,IAAuF,KAAKvX,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAD/F,CAA9B;;AAGA,kBAAI,CAACjM,UAAD,IAAe,CAACA,UAAU,CAACntB,MAA3B,IAAqC,CAAC,KAAKyS,OAAL,CAAa1C,EAAnD,IAAyDi4D,qBAA7D,EAAoF;AAClF,qBAAK/3B,QAAL,CAAc,QAAd;AACD,eAFD,MAEO,IAAI,KAAKx9B,OAAL,CAAa1C,EAAb,IAAmBod,UAAnB,IAAiCA,UAAU,CAACntB,MAAhD,EAAwD;AAC7D,qBAAK2nE,yBAAL;AACD,eAFM,MAEA;AACL,qBAAKC,cAAL;AACD;;AACD;AAlDJ;AAoDD;;;2CAE0Bp8D,K,EAAyB;AAClD,kBAAQA,KAAK,CAAClL,IAAd;AACE,iBAAK,QAAL;AACE,mBAAK2vC,QAAL,CAAc,MAAd;AACA;;AACF,iBAAK,UAAL;AACE;AACA,kBAAI,CAAC,KAAKpL,KAAL,CAAWuiC,aAAhB,EAA+B;AAC7B,qBAAKn3B,QAAL,CAAc,QAAd;AACD,eAFD,MAGK;AACH,qBAAKwM,KAAL;AACD;;AACD;AAZJ;AAcD;;;iCAEgBvlC,K,EAAe;AAC9B,eAAKiwD,SAAL,GAAiBjwD,KAAjB;AACD;AAED;;;;oCACoB;;;AAClB,iBAAO,KAAKsC,IAAZ,CADkB,CAElB;;AACA,eAAKA,IAAL,GAAY,cAAAqd,mBAAA,CACV,KAAKpkB,OADK,EAEV,KAAKw1D,gBAFK,EAGV,IAHU,EAGN,MACJ,KAAKpjC,KADD,MACM,IADN,IACM,aADN,GACM,MADN,GACM,GAAEniC,QAJF,EAKV,KAAKmiC,KAAL,CAAW91B,MALD,CAAZ;AAQA,eAAKyK,IAAL,CAAU0uD,UAAV,CAAqB,QAArB,EAA+B,IAAI,QAAA9wC,WAAJ,CAAgB,KAAKyN,KAAL,CAAW91B,MAA3B,CAA/B;AACD;AAED;;;;;;;;;uCAMoB;AAAA;;;;AAClB,cAAMkM,SAAS,GAAY,KAAK4pB,KAAL,CAAWpyB,OAAX,GAAqB,KAAKoyB,KAAL,CAAWpyB,OAAX,CAAmBgH,MAAnB,EAArB,GAAmD,EAA9E;AACAwB,mBAAS,CAACpc,QAAV,GAAqBoc,SAAS,CAACpc,QAAV,KAAkB,MAAIoc,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAEvS,WAAf,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,MAA1B,GAA0B,GAAEksB,QAAF,CAAW3Z,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAEtS,SAAtB,EAAiC,SAAjC,CAA5C,KAA2F,CAAhH,CAFkB,CAGlB;;AACA;;;;;;;;;AAQAsS,mBAAS,CAACvY,QAAV,GAAqB,YAAKmiC,KAAL,CAAWpyB,OAAX,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE/P,QAApB,MAA4B,MAAI,KAAKmiC,KAAT,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEniC,QAA5C,CAArB,CAZkB,CAalB;;AAEA,cAAMylE,kBAAkB,GAAG,KAAKtjC,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaC,KAAnC,IACzB,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KADX,IAEzB,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAc+iB,IAFX,IAGzB,KAAKvX,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaijB,IAHrC;;AAKA,cACM,QAAC,KAAKvX,KAAN,MAAW,IAAX,IAAW,aAAX,GAAW,MAAX,GAAW,GAAEujC,UAAb,MAA6B,CAACntD,SAAS,CAACvS,WAAX,IAA0BuS,SAAS,CAACvS,WAAV,CAAsBssB,YAAtB,CAAmC,UAAAztB,OAAA,EAAnC,CAAvD,CAAF,IACG,CAAC,KAAKs9B,KAAL,CAAWuiC,aADf,IACgC,CAACe,kBAFrC,EAGI;AACFltD,qBAAS,CAACvS,WAAV,GAAwB,OAAAlK,mBAAA,CAAoB,IAAI,UAAAwQ,MAAJ,CAAW;AAAElR,kBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,yBAAW,EAAE,KAAjC;AAAwCC,yBAAW,EAAE5I,SAAS,CAACvY;AAA/D,aAAX,CAApB,EAA2G,EAA3G,CAAxB;AACAuY,qBAAS,CAACrL,WAAV,GAAwBqL,SAAS,CAACvS,WAAV,CAAsB8G,OAA9C;AACAyL,qBAAS,CAACtS,SAAV,GAAsBsS,SAAS,CAACvS,WAAV,CAAsB/J,QAAtB,CAA+B;AAAEJ,qBAAO,EAAE0c,SAAS,CAACpc;AAArB,aAA/B,CAAtB;AACAoc,qBAAS,CAAC3L,SAAV,GAAsB2L,SAAS,CAACtS,SAAV,CAAoB6G,OAA1C;AACD;;AACD,eAAKiD,OAAL,GAAe,IAAI,cAAAsP,OAAJ,CAAY9G,SAAZ,CAAf;;AAEA,cAAG,KAAKxI,OAAL,CAAasgB,YAAb,KACC,KAAK8R,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaC,KAAnC,IAA4C,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaijB,IADhF,CAAH,EAEE;AAAE;AACF,iBAAK3pC,OAAL,CAAa+f,gBAAb,GAAgC,KAAK/f,OAAL,CAAa41D,yBAAb,CAAuC,KAAK51D,OAAL,CAAaqgB,kBAApD,CAAhC;AACD,WAnCiB,CAsClB;;;AACA,eAAKtZ,IAAL,GAAY,cAAAqd,mBAAA,CACV,KAAKpkB,OADK,EAEV,KAAKw1D,gBAFK,EAGV,IAHU,EAGN,MACJ,KAAKpjC,KADD,MACM,IADN,IACM,aADN,GACM,MADN,GACM,GAAEniC,QAJF,EAIY;AACtB,eAAKmiC,KAAL,CAAW91B,MALD,CAAZ;AAQA,eAAKyK,IAAL,CAAU0uD,UAAV,CAAqB,QAArB,EAA+B,IAAI,QAAA9wC,WAAJ,CAAgB,KAAKyN,KAAL,CAAW91B,MAA3B,CAA/B,EA/CkB,CAiDlB;;AACA;;AACA,cAAIkM,SAAS,IAAIA,SAAS,CAAC8O,QAAvB,IAAmC,KAAKvQ,IAAL,CAAUquB,QAAV,CAAmB1a,UAA1D,EAAsE;AACpE,iBAAK3T,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BzuB,QAA9B,CACEuc,SAAS,CAAC8O,QAAV,CAAmBpmB,GAAnB,CAAuB,UAAAoM,EAAE;AAAA,qBAAI,QAAI,CAACkb,OAAL,CAAa3pB,IAAb,CAAkByO,EAAlB,KAAyB;AAACA,kBAAE,EAAFA,EAAD;AAAKlW,oBAAI,EAAEkW;AAAX,eAA7B;AAAA,aAAzB,CADF;AAGD;;AAED,eAAKu4D,eAAL,GAAuB,YAAK71D,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE1C,EAAd,MACjB,YAAKyJ,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,cAAAm4B,YAAA,CAAaijB,IAAlD,IAA0D,YAAK5iC,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,cAAAm4B,YAAA,CAAaC,KAD3F,CAAvB;;AAGA,cAAI,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaC,KAAnC,IAA4C,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAApF,EAA2F;AAEzF,iBAAK6tC,SAAL,GAAiB,KAAKpiC,KAAL,CAAW91B,MAAX,KAAsB,cAAAoqB,YAAA,CAAaC,KAAnC,GAA2C,cAAAD,YAAA,CAAaC,KAAxD,GAAgE,cAAAC,aAAA,CAAcD,KAA/F;AAEA,iBAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAApC,GACI,KAAK5f,IAAL,CAAUhG,GAAV,CAAc,OAAd,EAAuB9U,QAAvB,iBAAyC,KAAK+T,OAAL,CAAasW,KAAtD,EADJ,GAEI,KAAKvP,IAAL,CAAUhG,GAAV,CAAc,OAAd,EAAuB9U,QAAvB,wBAAgD,KAAK+T,OAAL,CAAasW,KAA7D,EAFJ;AAIA,iBAAKvP,IAAL,CAAUhG,GAAV,CAAc,IAAd,EAAoB9U,QAApB,CAA6B,EAA7B;AACA,iBAAK8a,IAAL,CAAUhG,GAAV,CAAc,WAAd,EAA2BslB,MAA3B;;AAEA,gBAAI,KAAK+L,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAAxC,EAA+C;AAC7C,mBAAK5f,IAAL,CAAUhG,GAAV,CAAc,cAAd,EAA8B9U,QAA9B,CAAuC,KAAvC;AACA,mBAAK8a,IAAL,CAAUhG,GAAV,CAAc,cAAd,EAA8BukB,OAA9B;AACD;;AACD,gBAAM+P,EAAE,GAAG,KAAK9c,IAAL,CAAUrK,QAAV,CAAmBje,QAA9B;AACA,iBAAK8W,IAAL,CAAUwlC,UAAV,CAAqB;AAAEt8C,sBAAQ,EAAEolC;AAAZ,aAArB,EAhByF,CAkBzF;;AACA,gBAAI7sB,SAAS,CAAC4X,iBAAV,KAAgC,cAAAmG,gBAAA,CAAiBC,IAArD,EAA2D;AACzD,4BAAA2O,uBAAA,CAAwB,KAAKpuB,IAA7B;AACD,aArBwF,CAuBzF;;;AACA,gBAAM0Q,UAAU,GAAGjP,SAAS,CAAC4X,iBAAV,KAAgC,cAAAmG,gBAAA,CAAiBC,IAAjD,GAAwD,KAAKzf,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAAlF,GAA0F,IAAI,UAAAgO,MAAJ,CAAW;AAAElR,kBAAI,EAAE,KAAK2U,OAAL,CAAa7C,WAAb,GAA2B,IAAnC;AAAyCgU,yBAAW,EAAE,KAAtD;AAA6DC,yBAAW,EAAEikB;AAA1E,aAAX,CAA7G;AACA,gBAAMC,QAAQ,GAAG,UAAAxgC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B4/B,EAA3B,CAAjB,CAzByF,CA2BzF;;AACA,gBAAI5d,UAAU,CAAC8K,YAAX,CAAwB+S,QAAxB,EAAkC,KAAlC,CAAJ,EAA8C;AAC5C,kBAAI9sB,SAAS,CAAC4X,iBAAV,KAAgC,cAAAmG,gBAAA,CAAiBC,IAArD,EAA2D;AACzD,qBAAKzf,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0Bo5B,aAA1B,CAAwC,CACtC,QAAAP,UAAA,CAAWC,QAD2B,EAEtC,cAAAW,WAFsC,CAAxC;AAIA,qBAAK1e,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0B05B,sBAA1B;AACA,qBAAK3e,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0B8pE,aAA1B;AACA,qBAAK/uD,IAAL,CAAUquB,QAAV,CAAmBjQ,cAAnB,CAAkCl5B,QAAlC,CAA2C,IAA3C;;AAEA,oBAAG,KAAKmmC,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAApC,IAA6C,KAAK5f,IAAL,CAAUquB,QAAV,CAAmBjW,OAAnB,CAA2B5wB,KAA3B,KAAqC,IAArF,EAA2F;AACzF,uBAAKwY,IAAL,CAAUhG,GAAV,CAAc,QAAd,EAAwBslB,MAAxB;AACD;AACF;AACF,aA1CwF,CA4CzF;;;AACA,gBACE5O,UAAU,CAAC+P,UAAX,CAAsB8N,QAAtB,EAAgC,KAAhC,KAA0C7d,UAAU,CAACmiB,UAAX,KAA0BtE,QAAQ,CAACsE,UAAT,EADtE,EAEE;AACA,mBAAK7yB,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BC,QAA1B,CAAmC,OAAAF,mBAAA,CAAoBupC,QAApB,EAA8B,EAA9B,CAAnC;AACD,aAjDwF,CAmDzF;AACA;;AACD;;AAED,cACE,YAAKvuB,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,cAAAm4B,YAAA,CAAaijB,IAAlD,IAA0D,YAAK5iC,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,cAAAq4B,aAAA,CAAc+iB,IAD/G,EAEE;AACA,gBAAMtU,GAAE,GAAG,KAAK9c,IAAL,CAAUrK,QAAV,CAAmBje,QAA9B;;AACA,gBAAMwnB,WAAU,GAAGjP,SAAS,CAAC4X,iBAAV,KAAgC,cAAAmG,gBAAA,CAAiBC,IAAjD,GAAwD,KAAKzf,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAAlF,GAA0F,IAAI,UAAAgO,MAAJ,CAAW;AAAElR,kBAAI,EAAE,KAAK2U,OAAL,CAAa7C,WAAb,GAA2B,IAAnC;AAAyCgU,yBAAW,EAAE,KAAtD;AAA6DC,yBAAW,EAAEikB;AAA1E,aAAX,CAA7G;;AACA,gBAAMC,SAAQ,GAAG,UAAAxgC,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B4/B,GAA3B,CAAjB;;AAEA,gBACE5d,WAAU,CAAC+P,UAAX,CAAsB8N,SAAtB,EAAgC,KAAhC,KACE7d,WAAU,CAACmiB,UAAX,MAA2BtE,SAAQ,CAACsE,UAAT,EAA3B,IACAniB,WAAU,CAACvrB,QAAX,CAAoB;AAAEJ,qBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAxB,aAApB,EAAuDwtC,UAAvD,MAAuEtE,SAAQ,CAACsE,UAAT,EAH3E,EAIG;AACD,mBAAK7yB,IAAL,CAAUquB,QAAV,CAAmBjQ,cAAnB,CAAkCl5B,QAAlC,CAA2C,IAA3C;AACD;;AAED,gBAAIwrB,WAAU,CAAC+P,UAAX,CAAsB8N,SAAtB,EAAgC,KAAhC,KAA0C7d,WAAU,CAACvrB,QAAX,CAAoB;AAAEJ,qBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAxB,aAApB,EAAuDwtC,UAAvD,KAAsEtE,SAAQ,CAACsE,UAAT,EAApH,EAA2I;AACzI,mBAAK7yB,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BC,QAA1B,CAAmC,OAAAF,mBAAA,CAAoBupC,SAApB,EAA8B,EAA9B,CAAnC;AACD;AACF;;AAED,cAAI,CAAC,KAAKt1B,OAAL,CAAauf,QAAb,CAAsBhyB,MAA3B,EAAmC;AACjC,gBAAM4wB,KAAK,GAAG,KAAKne,OAAL,CAAame,KAAb,CAAmBlsB,MAAnB,CAA0B,UAAA0uB,IAAI;AAAA,qBAAIA,IAAI,CAACrwB,IAAL,KAAc,UAAlB;AAAA,aAA9B,CAAd;AAEA,iBAAKyW,IAAL,CAAUhG,GAAV,CAAc,OAAd,EAAuB9U,QAAvB,CAAgCkyB,KAAhC;AACD;AACF;AAED;;;;oDACoC;AAAA;;AAClC,cAAM43C,aAAa,GAAG,KAAKrtB,OAAL,CAAa9lC,IAAb,CACS,kBAAAosC,gCADT,EAC2C;AAC/D3E,oBAAQ,EAAE,MADqD;AAE/DC,iBAAK,EAAE,MAFwD;AAG/D95B,gBAAI,EAAE;AACJvD,oBAAM,EAAE,KAAKlG,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KADlC;AAEJk/C,yBAAW,EAAE,KAAK1mC,IAAL,CAAUquB,QAAV,CAAmBjX,KAF5B;AAGJwxB,yBAAW,EAAE,KAAK5oC,IAAL,CAAUquB,QAAV,CAAmBhX,eAH5B;AAIJwxB,+BAAiB,EAAE,KAAK7oC,IAAL,CAAUquB,QAAV,CAAmB/W;AAJlC;AAHyD,WAD3C,CAAtB;;AAWA,eAAKj1B,YAAL,CACE,yBADF,EAEE2sE,aAAa,CAACtrB,iBAAd,CAAgC1xC,KAAhC,CAAsCzP,SAAtC,CAAgD,UAACyP,KAAD,EAAwB;AACtE;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AAC3B,sBAAI,CAACumD,cAAL,CAAoB;AAClBxkE,oBAAI,EAAE,MADY;AAElBzC,oBAAI,EAAE,QAFY;AAGlB0Z,wBAAQ,EAAE;AAAC4iC,qBAAG,EAAE;AAAN;AAHQ,eAApB;;AAKA4rB,2BAAa,CAAC/rB,KAAd;AACD;AACF,WAVD,CAFF;AAcA+rB,uBAAa,CAAClrB,WAAd,GAA4BvhD,SAA5B,CAAsC;AAAA,mBAAM,QAAI,CAACnC,KAAL,CAAW,yBAAX,CAAN;AAAA,WAAtC;AACD;AAED;;;;mDACmC;AAAA;;AACjC,cAAM6uE,YAAY,GAAG,KAAKttB,OAAL,CAAa9lC,IAAb,CACnB,kBAAAuqC,6BADmB,EAEnB;AACE9C,oBAAQ,EAAE,MADZ;AAEEC,iBAAK,EAAE,MAFT;AAGE95B,gBAAI,EAAE;AACJvD,oBAAM,EAAE,KAAKlG,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KADlC;AAEJk/C,yBAAW,EAAE,KAAK1mC,IAAL,CAAUquB,QAAV,CAAmBjX,KAF5B;AAGJoB,sBAAQ,EAAE,KAAKxY,IAAL,CAAUquB,QAAV,CAAmB7V,QAHzB;AAIJvf,qBAAO,EAAE,KAAKA;AAJV;AAHR,WAFmB,CAArB;;AAaA,eAAK5W,YAAL,CACE,uBADF,EAEE4sE,YAAY,CAACvrB,iBAAb,CAA+B1xC,KAA/B,CAAqCzP,SAArC,CAA+C,UAACyP,KAAD,EAAwB;AACrE;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AAC3B,sBAAI,CAACumD,cAAL,CAAoB;AAClBxkE,oBAAI,EAAE,MADY;AAElBzC,oBAAI,EAAE,UAFY;AAGlB0Z,wBAAQ,EAAE;AAAE4iC,qBAAG,EAAE;AAAP;AAHQ,eAApB;;AAKA6rB,0BAAY,CAAChsB,KAAb;AACD;AACF,WAVD,CAFF;AAcAgsB,sBAAY,CAACnrB,WAAb,GAA2BvhD,SAA3B,CAAqC;AAAA,mBAAM,QAAI,CAACnC,KAAL,CAAW,uBAAX,CAAN;AAAA,WAArC;AACD;AAED;;;;;;0CAG0B;AAAA;;AACxB,cAAMgjD,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAiD,KAAA2oD,6BAAjD,EAAgF;AACxFjhB,iBAAK,EAAE,OADiF;AAExF95B,gBAAI,EAAE;AACJkP,mBAAK,EAAE,KAAK1f,OAAL,CAAa8f,gBADhB;AAEJ7vB,sBAAQ,EAAE,KAAK+P,OAAL,CAAa/P;AAFnB;AAFkF,WAAhF,CAAZ;;AAOAk6C,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAAyP,KAAK,EAAI;AAC7C,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AAC3B,sBAAI,CAACumD,cAAL,CAAoB;AAClBxkE,oBAAI,EAAE,MADY;AAElBzC,oBAAI,EAAE;AAFY,eAApB;;AAIAs8C,iBAAG,CAACH,KAAJ;AACD,aAND,MAMO,IAAIjxC,KAAK,CAACwV,MAAN,KAAiB,OAArB,EAA8B;AACnC47B,iBAAG,CAACH,KAAJ;AACD;AACF,WAVD;AAWD;AAED;;;;;;yCAGyB;AAAA;;AACvB;AACA,cAAG,KAAK2qB,aAAR,EAAsB;AACpB,iBAAKsB,yBAAL;AACD;AAED;;;AACA,cAAI,KAAKlvD,IAAL,CAAUyH,KAAV,IAAmB,KAAKmmD,aAA5B,EAA2C;AACzC,gBAAMuB,UAAU,GAAG,KAAKnvD,IAAL,CAAUxY,KAA7B,CADyC,CAEzC;AACA;;AACA,gBAAM0H,WAAW,GAAG,KAAK8Q,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAA9C;AACA,gBAAM2H,SAAS,GAAGD,WAAW,CAAC/J,QAAZ,CAAqB;AAAEJ,qBAAO,EAAEoqE,UAAU,CAAC9pE;AAAtB,aAArB,CAAlB;AACA,gBAAM4T,OAAO,GAAG,MAAH,OAAG,CAAH,gCAET,KAAKoyB,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAApC,IAA6C,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAc+iB,IAAjF,IAAyF,KAAKvX,KAAL,CAAWuiC,aAApG,GAAoH,KAAKwB,0BAAL,CAAgC,KAAKn2D,OAArC,CAApH,GAAoK,KAAKA,OAAL,CAAagH,MAAb,EAF3J,GAIT,KAAKorB,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAcD,KAApC,IAA6C,KAAKyL,KAAL,CAAW91B,MAAX,KAAsB,cAAAsqB,aAAA,CAAc+iB,IAAjF,IAA0F,KAAKvX,KAAL,CAAWuiC,aAArG,GAAqH,KAAKwB,0BAAL,CAAgCD,UAAhC,CAArH,GAAmKA,UAJ1J,CAAG,EAIkK;AAChLjgE,yBAAW,EAAXA,WADgL;AAEhLC,uBAAS,EAATA,SAFgL;AAGhLiH,yBAAW,EAAElH,WAAW,CAAC8G,OAHuJ;AAIhLF,uBAAS,EAAE3G,SAAS,CAAC6G,OAJ2J;AAKhLsf,kBAAI,EAAE65C,UAAU,CAACx7C,UAAX,CAAsB,CAAtB;AAL0K,aAJlK,CAAhB;;AAYA,gBAAM07C,UAAU,GAAG,KAAK1tB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAA2lC,uBAAlB,EAA2C;AAC5D+B,mBAAK,EAAE,MADqD;AAE5DD,sBAAQ,EAAE,MAFkD;AAG5DuE,uBAAS,EAAE,MAHiD;AAI5Dp+B,kBAAI,EAAE;AACJs4B,2BAAW,EAAE,KAAK9oC,OADd;AAEJA,uBAAO,EAAE,IAAI,cAAAsP,OAAJ,CAAYtP,OAAZ,CAFL;AAGJ1D,sBAAM,EAAE,KAAK81B,KAAL,CAAW91B;AAHf,eAJsD;AAS5D00C,uBAAS,EAAE,KATiD;AAU5DC,2BAAa,EAAE;AAV6C,aAA3C,CAAnB;;AAYAmlB,sBAAU,CAAC3rB,iBAAX,CAA6B1xC,KAA7B,CAAmCzP,SAAnC,CAA6C,UAAAyP,KAAK,EAAI;AACpD;AACA,kBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AAC3B,wBAAI,CAACy7B,KAAL;;AACA,wBAAI,CAACjxC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,wBAAM,EAAE,MAAV;AAAkBhH,0BAAQ,EAAE,QAAI,CAACR;AAAjC,iBAAhB;AACD,eAHD,MAGO,IAAIhO,KAAK,CAACwV,MAAN,KAAiB,QAArB,EAA+B;AACpC,wBAAI,CAACymD,SAAL;AACD,eAFM,MAGF,IAAGj8D,KAAK,CAACwV,MAAN,KAAiB,sBAApB,EAA4C;AAC/C,wBAAI,CAACxH,IAAL,CAAUwlC,UAAV,CAAqB;AAAC7xB,4BAAU,EAAE;AAAb,iBAArB,EAAuC;AAAC27C,2BAAS,EAAE;AAAZ,iBAAvC,EAD+C,CAE/C;;;AACAD,0BAAU,CAACpsB,KAAX;AACD;AACF,aAbD;AAcD;AACF;;;mDAEkChqC,O,EAAyB;AAC1D,cAAM2H,GAAG,GAAG3H,OAAO,YAAY,cAAAsP,OAAnB,GAA6BtP,OAAO,CAACgH,MAAR,EAA7B,GAAgDhH,OAA5D;AACA,iBAAO,MAAP,OAAO,CAAP,kBAAW3H,MAAM,CAACpH,IAAP,CAAY0W,GAAZ,EAAiB3Y,MAAjB,CAAwB,UAACsnE,GAAD,EAAMvvE,GAAN,EAAc;AAC3C,gBACEA,GAAG,CAACizB,MAAJ,CAAW,cAAX,MAA+B,CAAC,CAAhC,IACGjzB,GAAG,CAACizB,MAAJ,CAAW,cAAX,MAA+B,CAAC,CAFrC,EAGE;AACAs8C,iBAAG,CAACvvE,GAAD,CAAH,GAAW4gB,GAAG,CAAC5gB,GAAD,CAAd;AACD;;AAAA;AAED,mBAAOuvE,GAAP;AACH,WATQ,EASN,EATM,CAAX,CAAO,EASC;AACNh2C,wBAAY,EAAE;AADR,WATD,CAAP;AAYD;AAED;;;;uDACuC;AAAA;;AACrC,cAAMi2C,UAAU,GAAG,KAAK7tB,OAAL,CAAa9lC,IAAb,CACY,KAAAwnC,uBADZ,EACqC;AACtDC,oBAAQ,EAAE,MAD4C;AAEtDC,iBAAK,EAAE,MAF+C;AAGtD95B,gBAAI,EAAE;AACJ0oB,uBAAS,EAAE,KAAKnyB,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAA9B,CAAoC,CAApC,EAAuCnH,IAD9C;AAEJmjD,uBAAS,EAAE,KAAKxjC,IAAL,CAAUquB,QAAV,CAAmBnV,qBAAnB,CAAyC1xB,KAFhD;AAGJ0B,sBAAQ,EAAE,KAAK+P,OAAL,CAAa/P;AAHnB;AAHgD,WADrC,CAAnB;;AAUA,eAAK7G,YAAL,CACE,wBADF,EAEEmtE,UAAU,CAAC9rB,iBAAX,CAA6B1xC,KAA7B,CAAmCzP,SAAnC,CAA6C,UAACyP,KAAD,EAAwB;AACnE,gBAAG,QAAI,CAACiH,OAAL,CAAa8f,gBAAb,IAAiC,QAAI,CAAC9f,OAAL,CAAa8f,gBAAb,CAA8BvyB,MAA/D,IAAyEwL,KAAK,CAACwV,MAAN,KAAiB,MAA7F,EAAqG;AACnG,sBAAI,CAACumD,cAAL,CAAoB;AAClBxkE,oBAAI,EAAE,MADY;AAElBzC,oBAAI,EAAE;AAFY,eAApB;AAID,aALD,MAKO;AACL;AACA,kBAAIkL,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AAC3B,wBAAI,CAACumD,cAAL,CAAoB;AAClBxkE,sBAAI,EAAE,MADY;AAElBzC,sBAAI,EAAE;AAFY,iBAApB;AAID;AACF;;AACD0oE,sBAAU,CAACvsB,KAAX;AACD,WAhBD,CAFF;AAoBAusB,oBAAU,CAAC1rB,WAAX,GAAyBvhD,SAAzB,CAAmC;AAAA,mBAAM,QAAI,CAACnC,KAAL,CAAW,wBAAX,CAAN;AAAA,WAAnC;AACD;;;oDAOoC;AACjC,cAAM8kD,gBAAgB,GAAG,KAAKllC,IAAL,CAAUquB,QAAV,CAAmB7U,iBAA5C;AACA0rB,0BAAgB,CAACC,eAAjB;AACAD,0BAAgB,CAACvmB,sBAAjB;AACH;;;4BAlgBuB;AACtB,iBAAO,CAAC,CAAC,KAAK0M,KAAL,CAAWuiC,aAApB;AACD;AAID;;;;4BAC2B;AACzB,iBAAO,KAAK7tD,QAAL,CAAcd,OAAd,CAAsB,yBAAtB,KAAoD,EAA3D;AACD;;;4BAgfe;;;AACd,cAAM1V,IAAI,GAAG,YAAK0P,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE1C,EAAd,IAAmB,MAAnB,GAA4B,KAAzC;AACA,2BAAUhN,IAAV,cAAkB,KAAKulE,eAAL,GAAuB,WAAvB,GAAqC,EAAvD;AACD;;;;MAlhBwC,OAAA/tE,a;;AAL3C;;;uBAKaysE,qB,EAAqB,2C,EAAA,sC,EAAA,4C,EAAA,kC,EAAA,qC,EAAA,qBAuCtB,SAAArpB,eAvCsB,C;AAuCP,K;;;YAvCdqpB,qB;AAAqB,sC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,ub;AAAA;AAAA;ACjDlC;AACI;AACI;AACA;AACJ;AACA;AAAyC;AAAA,mBAAS,IAAAvqB,KAAA,EAAT;AAAgB,WAAhB;AACrC;AACJ;AACJ;AACA;AACI;AACI;AACI;AAUA;AAQA;AAOJ;AACJ;AACJ;;;;AArCkB;AAAA;AACV;AAAA;AAGU;AAAA;AAKI;AAAA;AACI;AAAA;AAUA;AAAA;;;;;;;;2BD2BbuqB,qB,EAAqB;cALjC,OAAAppB,SAKiC;eALvB;AACTljD,kBAAQ,EAAE,iBADD;AAETmjD,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;kBAuC7B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAbT,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE3EH;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACNI;AACI;AAMI;AAAA;AAAA;AAAA;AAAA,WAAuD,OAAvD,EAAuD;AAAA;AAAA;AAAA,iBAC9C,OAAAvyC,KAAA,aAD8C;AAC5B,SAD3B;AAEH;AACL;;;;;AARQ;AAAA,uDAAyB,UAAzB,EAAyB,qBAAzB,EAAyB,MAAzB,EAAyB,aAAzB,EAAyB,SAAzB,EAAyB,cAAzB,EAAyB,eAAzB,EAAyB,WAAzB;;;;;;;;AAWR;AAMI;AAAA;AAAA;AAAA;AAAA;AACH;;;;;AANG,uDAAyB,OAAzB,EAAyB,mBAAzB,EAAyB,QAAzB,EAAyB,aAAzB,EAAyB,UAAzB,EAAyB,eAAzB,EAAyB,SAAzB,EAAyB,cAAzB;;;;QDAKy9D,wB;AALb;AAAA;;AAUI;AACiB,aAAAz9D,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAyEpB;AArEG;;;;;;AA8BA;mCACe;AACX,cAAMhmB,KAAK,GAAG,IAAI,cAAApD,aAAJ,CAAkB;AAC5BsD,4BAAgB,EAAE,KAAK92B,MAAL,CAAYolB;AADF,WAAlB,CAAd;AAGA,eAAKqlD,YAAL,GAAoB7zC,KAApB;AACH;AAED;;;;yCACwBA,K,EAAsB;AAC1C;AACA,cAAI,CAACA,KAAL,EAAY;AACR,iBAAK6zC,YAAL,GAAoB,IAApB;AACH;AACD;;;AACA,cAAI7zC,KAAJ,EAAW;AACP,gBAAID,MAAM,GAAG,KAAK5b,IAAL,CAAUquB,QAAV,CAAmB7V,QAAnB,CAA4BhxB,KAAzC;AACA,gBAAM5E,KAAK,GAAGg5B,MAAM,CAACgV,SAAP,CAAiB,UAAC++B,QAAD;AAAA,qBAAc9zC,KAAK,CAACtlB,EAAN,KAAao5D,QAAQ,CAACp5D,EAApC;AAAA,aAAjB,CAAd,CAFO,CAGP;;AACA,gBAAI3T,KAAK,GAAG,CAAZ,EAAe;AACXg5B,oBAAM,CAACzvB,IAAP,CAAY0vB,KAAZ;AACH,aAFD,MAEO;AACHD,oBAAM,CAAC7qB,MAAP,CAAcnO,KAAd,EAAqB,CAArB,EAAwBi5B,KAAxB;AACH,aARM,CASP;;;AACAD,kBAAM,GAAGA,MAAM,CAACpvB,IAAP,CAAY,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC1B,kBAAKD,CAAC,CAACwuB,aAAF,GAAkBvuB,CAAC,CAACuuB,aAAzB,EAAwC;AACpC,uBAAO,CAAC,CAAR;AACH;;AACD,kBAAKxuB,CAAC,CAACwuB,aAAF,GAAkBvuB,CAAC,CAACuuB,aAAzB,EAAwC;AACpC,uBAAO,CAAP;AACH;;AACD,qBAAO,CAAP;AACH,aARQ,CAAT;AASA,iBAAKjb,IAAL,CAAUquB,QAAV,CAAmB7V,QAAnB,CAA4BtzB,QAA5B,CAAqC02B,MAArC;AACA,iBAAK5b,IAAL,CAAUuuD,WAAV;AACH;;AACD,eAAKmB,YAAL,GAAoB,IAApB;AACH;;;4BAnE2B;AACxB,iBAAO,KAAK1vD,IAAL,IAAa,KAAKA,IAAL,CAAUquB,QAAV,CAAmB7V,QAAhC,GAA2C,KAAKxY,IAAL,CAAUquB,QAAV,CAAmB7V,QAA9D,GAAyE,IAAhF;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKxY,IAAL,IAAa,KAAKA,IAAL,CAAUquB,QAAV,CAAmB1a,UAAhC,GACD,KAAK3T,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAD7B,GAED,EAFN;AAGH;AAED;;;;4BACiB;AACb,cAAMuiB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,iBAAO,KAAK8b,IAAL,IAAa,KAAKA,IAAL,CAAUquB,QAAV,CAAmBppC,MAAhC,GACD,KAAK+a,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KADzB,GAEDuiB,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,CAFN;AAGH;AAED;;;;4BACmB;AACf,iBAAO,KAAKgS,IAAL,IAAa,KAAKA,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAhC,GAA2C,KAAK2a,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAnB,CAA4BmC,KAAvE,GAA+E,EAAtF;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAKwY,IAAL,IAAa,KAAKA,IAAL,CAAUquB,QAAV,CAAmBjW,OAAhC,IAA2C,KAAKpY,IAAL,CAAUquB,QAAV,CAAmBjW,OAAnB,CAA2B5wB,KAA7E;AACH;;;;;;AA3CL;;;uBAKaioE,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0O;AAAA;AAAA;ACfrC;AACI;AAWJ;AACA;;;;;;AAZkB;AAAA,mDAAyC,UAAzC,EAAyC,GAAzC;;;;;;;;;2BDcLA,wB,EAAwB;cALpC,OAAArrB,SAKoC;eAL1B;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAK0B,Q;;gBAEhC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AErBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACMI;AACI;AAOJ;;;;;;AANQ;AAAA,iDAAmB,UAAnB,EAAmB,eAAnB,EAAmB,QAAnB,EAAmB,aAAnB,EAAmB,MAAnB,EAAmB,OAAnB,EAAmB,OAAnB,EAAmB,YAAnB;;;;;;AAHZ;AACI;AASJ;;;;;AATsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAWlB;AACI;AACI;AACJ;AACA;AAAA;AAEA;AACJ;;;;AALkB;AAAA;;;;;;;;;;;QDXTqrB,6B,GALb;AAAA;;AAgBI;AACiB,WAAA3sB,KAAA,GAAQ,IAAI,OAAApB,YAAJ,EAAR;AACpB,K;;AAlBD;;;uBAKa+tB,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,+T;AAAA;AAAA;ACX1C;AACI;AACI;AAAwB;AAAA,mBAAS,IAAA3sB,KAAA,OAAT;AAAqB,WAArB;AACpB;AACJ;AACA;AAAkB;AAAoB;AAC1C;AACJ;AACA;AAWA;;;;;;AAhBsB;AAAA;AAEI;AAAA;AAGZ;AAAA,mGAAmF,UAAnF,EAAmF,GAAnF;;;;;;;;;2BDGD2sB,6B,EAA6B;cALzC,OAAAxrB,SAKyC;eAL/B;AACPljD,kBAAQ,EAAE,oBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAK+B,Q;;gBAErC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEvBL;AAAA;AAAA;;AAUA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBwB;AACI;AACJ;;;;;AAF6C;AACzC;AAAA;;;;;;AALhB;AACI;AAAA;AAAuD;AACvD;AACI;AACI;AAGJ;AACJ;AACJ;;;;;AALwB;AAAA;;;;;;;;;;;;;;;;;;AAUZ;AACI;AACJ;;;;;AAFiD;AAC7C;AAAA;;;;;;AALhB;AACI;AAAA;AAAgE;AAChE;AACI;AACI;AAGJ;AACJ;AACJ;;;;;AALwB;AAAA;;;;;;;;;;;;;;;;;;;;;AAhBhC;AACI;AACI;AAUA;AAUA;AACI;AAGI;AAAA;AAAA;AAAA;AAAA,iCAGlB,qBAAa,EAAb,CAHkB,GAGC,EAHD;AAGG;AAAA,SAHH;AAMA;AAMJ;AACA;AACI;AACI;AACI;AAII;AAAA;AAAA;AAAA,iBAAiB,QAAA+K,OAAA,aAAjB;AAAqC,SAArC;;AAJJ;AAQJ;AACJ;AACJ;AACJ;AACJ;AACJ;;;;;AAtDU;AAAA;AACiB;AAAA;AAUA;AAAA;AAUC;AAAA;AAGZ;AAAA;AAQI;AAAA;AAMkB;AAAA;AAMV;AAAA,yEAA2B,gBAA3B,EAA2B,4BAA3B;;;;;;AAapB;AACI;AAOJ;;;;;;AANQ;AAAA,kDAAmB,UAAnB,EAAmB,6DAAnB,EAAmB,QAAnB,EAAmB,cAAnB,EAAmB,MAAnB,EAAmB,QAAnB,EAAmB,OAAnB,EAAmB,2BAAnB;;;;;;AAHZ;AACI;AASJ;;;;;AATsB;AAAA;;;;;;;;AAaV;AAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAkB;AAAe;AACrC;;;;;;AANI;AACA;AAIkB;AAAA;;;;;;AAV1B;AACI;AAWJ;;;;;AARQ;AAAA;;;;;;AALZ;AACI;AAaJ;;;;;;;;AAb0B;AAAA,iFAA2D,UAA3D,EAA2D,GAA3D;;;;;;AAD1B;;;;;;;;AAAc,wDAA+C,UAA/C,EAA+C,GAA/C;;;;;;AAbtB;;AACI;;AAWA;AAiBJ;;;;;;;AA7BkB;AACA;AAAA,oEAAkC,UAAlC,EAAkC,IAAlC;;;;;;;;;;;;;;;;;;;;;;;AAmDlB;AACI;AACI;AACJ;AACA;AAAA;AACgB;AAAyD;AAEzE;AAAA;AACJ;;;;;AADI;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AAIJ;AACI;AACI;AACI;AACJ;AACA;AAAA;AAEA;AACJ;AACJ;;;;;AAFQ;AAAA;AAAA;;;;;;;;AAKR;AAMI;AAAA;AAAA;AAAA,2CAA2B,IAA3B;AAA+B,SAA/B;AACH;;;;;AANG,iDAAmB,UAAnB,EAAmB,sBAAnB,EAAmB,QAAnB,EAAmB,aAAnB,EAAmB,OAAnB,EAAmB,0BAAnB,EAAmB,UAAnB,EAAmB,6BAAnB;;;;QD3FKugB,oC;;;;;AA0FT,oDACYC,KADZ,EAEYt+C,IAFZ,EAGYmwB,OAHZ,EAG8B;AAAA;;AAAA;;AAE1B;AAJQ,iBAAAmuB,KAAA,GAAAA,KAAA;AACA,iBAAAt+C,IAAA,GAAAA,IAAA;AACA,iBAAAmwB,OAAA,GAAAA,OAAA;AA9EZ;;AACiB,iBAAA3vC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAGjB;;AACO,iBAAAkuB,aAAA,GAAoC,EAApC;AAGP;;AACO,iBAAAC,eAAA,GAA8B,EAA9B;AAKP;;AACgB,iBAAA1gB,OAAA,GAAU,IAAI,OAAAvvD,eAAJ,CAAoB,EAApB,CAAV;AAChB;;AACO,iBAAAkwE,aAAA,GAAgC,EAAhC;AA6DuB;AAG7B;AA5DD;;;;;mCA8De;AAAA;;AACX,eAAKnhB,sBAAL;AACA,eAAKzsD,YAAL,CACI,QADJ,EAEI,KAAKitD,OAAL,CACKl6C,IADL,CAEQ,YAAAjL,GAAA,CAAI,UAACW,GAAD,EAAS;AACT,gBAAMmoB,MAAM,GAAGnoB,GAAG,CAACkB,WAAJ,EAAf;AACA,gBAAM1J,KAAK,GAAG,EAAd;;AAFS,yDAGc,QAAI,CAACytE,aAHnB;AAAA;;AAAA;AAGT,wEAA2C;AAAA,oBAAhCp0B,QAAgC;;AACvC,oBAAIA,QAAQ,CAACr5C,KAAb,EAAoB;AAAA,+DACIq5C,QAAQ,CAACr5C,KADb;AAAA;;AAAA;AAChB,8EAAoC;AAAA,0BAAzBwkB,KAAyB;;AAChC,0BAAKA,KAAa,CAACxkB,KAAd,CAAoBkE,MAAzB,EAAiC;AAC7B,4BACKsgB,KAAa,WAAb,KACAA,KAAK,CAACzmB,IAAN,CAAW2L,WAAX,GAAyB2R,QAAzB,CAAkCsV,MAAlC,KACInM,KAAa,CAACxkB,KAAd,CAAoBwF,IAApB,CAAyB,UAACkF,IAAD;AAAA,iCACtBA,IAAI,CAAC3M,IAAL,CAAU2L,WAAV,GAAwB2R,QAAxB,CAAiCsV,MAAjC,CADsB;AAAA,yBAAzB,CAFJ,CADL,EAME;AACE3wB,+BAAK,CAAC6J,IAAN,CAAW2a,KAAX;AACH,yBARD,MAQO;AAAA,uEACiBA,KAAa,CAACxkB,KAD/B;AAAA;;AAAA;AACH,sFAAyC;AAAA,kCAA9B0K,IAA8B;;AACrC,kCAAIA,IAAI,CAAC3M,IAAL,CAAU2L,WAAV,GAAwB2R,QAAxB,CAAiCsV,MAAjC,CAAJ,EAA8C;AAC1C3wB,qCAAK,CAAC6J,IAAN,CAAWa,IAAX;AACH;AACJ;AALE;AAAA;AAAA;AAAA;AAAA;AAMN;AACJ,uBAhBD,MAgBO;AACH,4BAAI8Z,KAAK,CAACzmB,IAAN,CAAW2L,WAAX,GAAyB2R,QAAzB,CAAkCsV,MAAlC,CAAJ,EAA+C;AAC3C3wB,+BAAK,CAAC6J,IAAN,CAAW2a,KAAX;AACH;AACJ;AACJ;AAvBe;AAAA;AAAA;AAAA;AAAA;AAwBnB;AACJ;AA7BQ;AAAA;AAAA;AAAA;AAAA;;AA8BT,mBAAOxkB,KAAP;AACH,WA/BD,CAFR,EAmCKC,SAnCL,CAmCe,UAACD,KAAD;AAAA,mBAAY,QAAI,CAAC2tE,aAAL,GAAqB3tE,KAAjC;AAAA,WAnCf,CAFJ;AAuCH;;;oCAEkBN,O,EAAwB;AAAA;;;AACvC;;;AACA,cAAIA,OAAO,CAACiD,MAAR,IAAkBjD,OAAO,CAACqD,QAA9B,EAAwC;AACpC,iBAAKypD,sBAAL;AACA;;AACA,gBACI,KAAK9uC,IAAL,IACA,CAAC,KAAKgwD,eAAL,CAAqBloE,IAArB,CACG,UAACgG,IAAD;AAAA,qBAAUA,IAAI,CAACyI,EAAL,KAAY,QAAI,CAACyJ,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiCzzB,KAAvD;AAAA,aADH,CAFL,EAKE;AACE,mBAAKwY,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiC/1B,QAAjC,CAA0C,CAAD,KAAC,KAAK8qE,eAAL,CAAqB,CAArB,OAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEz5D,EAAnE;AACH;AACJ;AACD;;;AACA,cAAIvU,OAAO,CAAC2xB,UAAZ,EAAwB;AACpB;AACA,gBAAI,KAAK3T,IAAL,IAAa,KAAK2T,UAAlB,IAAgC,CAAC,KAAK3T,IAAL,CAAUquB,QAAV,CAAmBvS,WAAnB,CAA+Bt0B,KAApE,EAA2E;AACvE,mBAAKwY,IAAL,CAAUquB,QAAV,CAAmBvS,WAAnB,CAA+B52B,QAA/B,CAAwC,KAAKyuB,UAAL,CAAgB,CAAhB,EAAmBje,KAA3D;AACH;AACJ;AACD;;;AACA,cAAI1T,OAAO,CAAC65B,KAAR,IAAiB,KAAKA,KAA1B,EAAiC;AAC7B,iBAAKq0C,QAAL;AACH;AACJ;;;sCAEoB;AACjB,cAAI,KAAKC,SAAL,IAAkB,KAAKC,WAA3B,EAAwC;AACpC,iBAAKD,SAAL,CAAehuE,aAAf,CAA6B6sD,KAA7B;AACH;AACJ;;;mCAEiB;AAAA;;;;AACd,eAAKhvC,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtB/pB,cAAE,EAAE,IAAI,QAAAqnB,WAAJ,CAAgB,KAAK/B,KAAL,CAAWtlB,EAA3B,CADkB;AAEtBgc,wBAAY,EAAE,IAAI,QAAAqL,WAAJ,CAAgB,KAAK34B,MAAL,CAAYgJ,EAA5B,CAFQ;AAGtB6tB,uBAAW,EAAE,IAAI,QAAA8B,WAAJ,CAAgB,KAAK/B,KAAL,CAAWC,WAAX,IAA0B,KAAKnI,UAAL,CAAgB,CAAhB,EAAmBje,KAA7D,CAHS;AAItBulB,yBAAa,EAAE,IAAI,QAAA2C,WAAJ,CAAgB,KAAK/B,KAAL,CAAWZ,aAAX,KAAwB,MAAI,KAAK+0C,eAAL,CAAqB,CAArB,CAAJ,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAEz5D,EAArD,CAAhB,CAJO;AAKtBjU,iBAAK,EAAE,IAAI,QAAAs7B,WAAJ,CAAgB,KAAK/B,KAAL,CAAWv5B,KAAX,CAAiB6H,GAAjB,CAAqB,UAAC6C,IAAD;AAAA,qBAAU,IAAI,cAAAw3B,YAAJ,CAAiBx3B,IAAjB,CAAV;AAAA,aAArB,CAAhB;AALe,WAAd,CAAZ;AAOA,eAAK3K,YAAL,CACI,cADJ,EAEI,KAAK2d,IAAL,CAAUquB,QAAV,CAAmBvS,WAAnB,CAA+B+C,YAA/B,CAA4Ct8B,SAA5C,CAAsD,UAACykB,KAAD,EAAW;;;AAC7D,oBAAI,CAAC8nC,sBAAL;;AACA,gBACI,CAAC,QAAI,CAACkhB,eAAL,CAAqBloE,IAArB,CACG,UAACgG,IAAD;AAAA,qBAAUA,IAAI,CAACyI,EAAL,KAAY,QAAI,CAACyJ,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiCzzB,KAAvD;AAAA,aADH,CADL,EAIE;AACE,sBAAI,CAACwY,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiC/1B,QAAjC,CAA0C,CAAD,KAAC,QAAI,CAAC8qE,eAAL,CAAqB,CAArB,OAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEz5D,EAAnE;AACH;;AACD,oBAAI,CAACyJ,IAAL,CAAUquB,QAAV,CAAmB/rC,KAAnB,CAAyB4C,QAAzB,CAAkC,EAAlC;;AACA,oBAAI,CAACmrE,QAAL;AACH,WAXD,CAFJ;AAeA,eAAKA,QAAL;AACA,eAAKvhB,sBAAL;;AACA,cACI,KAAK9uC,IAAL,IACA,CAAC,KAAKgwD,eAAL,CAAqBloE,IAArB,CAA0B,UAACgG,IAAD;AAAA,mBAAUA,IAAI,CAACyI,EAAL,KAAY,QAAI,CAACyJ,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiCzzB,KAAvD;AAAA,WAA1B,CAFL,EAGE;AACE,iBAAKwY,IAAL,CAAUquB,QAAV,CAAmBpT,aAAnB,CAAiC/1B,QAAjC,CAA0C,CAAD,KAAC,KAAK8qE,eAAL,CAAqB,CAArB,OAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAEz5D,EAAnE;AACH;AACJ;;;uCAEqB;AAAA;;AAClB,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAGV,kBAAAsqC,oCAHU,EAG4B;AACpC7C,oBAAQ,EAAE,MAD0B;AAEpC75B,gBAAI,EAAE;AACF2O,qBAAO,EAAE,KAAKA,OADZ;AAEFnzB,oBAAM,EAAE,KAAKA,MAFX;AAGF+a,kBAAI,EAAE,KAAKA;AAHT;AAF8B,WAH5B,CAAZ;;AAWA,eAAK3d,YAAL,CACI,eADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC1D;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB;AACA;AACA,kBAAMqU,KAAK,GAAG,IAAI,cAAApD,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAAM,QAAI,CAACoD,KAAX,CAAC,EAAoB,QAAI,CAAC7b,IAAL,CAAUxY,KAA9B,CAAlB,CAAd;;AACA,sBAAI,CAACwK,KAAL,CAAW+wC,IAAX,CAAgBlnB,KAAhB;;AACAunB,iBAAG,CAACH,KAAJ;AACH;AACJ,WATD,CAFJ;AAaAG,aAAG,CAACU,WAAJ,GAAkBvhD,SAAlB,CAA4B;AAAA,mBAAM,QAAI,CAACnC,KAAL,CAAW,eAAX,CAAN;AAAA,WAA5B;AACH;;;mCAEkB;AAAA;;;;AACf,cAAM4mB,KAAK,GAAG,KAAK2M,UAAL,CAAgB7rB,IAAhB,CACV,UAACkf,KAAD;AAAA,mBAAWA,KAAK,CAACtR,KAAN,KAAgB,QAAI,CAACsK,IAAL,CAAUquB,QAAV,CAAmBvS,WAAnB,CAA+Bt0B,KAA1D;AAAA,WADU,CAAd;AAGA,eAAKsV,OAAL,GAAe,IAAf;;AACA,eAAKgzD,KAAL,CACKp4D,KADL,CACW;AAAEoI,mBAAO,EAAE,CAAF,KAAE,KAAK0R,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,qBAASjiB,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqBsrB,GAAG,CAAC1yB,EAAzB,CAAT;AAAA,aAAzB,OAA+D,IAA/D,IAA+D,aAA/D,GAA+D,MAA/D,GAA+D,GAAEA;AAA5E,WADX,EAEKgK,IAFL,CAGQ,UAAC/d,IAAD,EAAU;AACN,oBAAI,CAACsa,OAAL,GAAe,KAAf;AACA,oBAAI,CAACizD,aAAL,GAAqBvtE,IAAI,CACpB2H,GADgB,CACZ,UAACxH,CAAD;AAAA,qBAAO,IAAI,cAAAyhC,gBAAJ,CAAqBzhC,CAArB,CAAP;AAAA,aADY,EAEhBuI,MAFgB,CAET,UAAAkI,CAAC;AAAA,qBAAI,CAACA,CAAC,CAAC2yB,YAAP;AAAA,aAFQ,CAArB;AAGH,WART,EASQ;AAAA,mBAAO,QAAI,CAACjpB,OAAL,GAAe,KAAtB;AAAA,WATR;AAWH;AAED;;;;iDACiC;AAAA,sCACE,KAAKwzD,wBAAL,EADF;AAAA,cACvBpnE,QADuB,yBACvBA,QADuB;AAAA,cACb1E,KADa,yBACbA,KADa;AAAA,cACNsrB,GADM,yBACNA,GADM;;AAE7BtrB,eAAK,GAAGA,KAAK,CAACU,QAAN,CAAe;AAAEP,kBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACO,OAAN,GAAgB,CAA1B,IAA+B;AAAzC,WAAf,CAAR,CAF6B,CAG7B;AACA;AACA;;AACA,cAAIuhE,UAAU,GAAG,KAAKrhE,MAAtB,CAN6B,CAMC;;AAC9BqhE,oBAAU,CAACiK,SAAX,CAAqB,YAArB;AACA,eAAKP,eAAL,GAAuB,EAAvB;;AACA,iBAAOxrE,KAAK,CAACg3B,YAAN,CAAmB1L,GAAnB,CAAP,EAAgC;AAC5B,iBAAKkgD,eAAL,CAAqB7jE,IAArB,CAA0B;AACtBoK,gBAAE,EAAE3R,IAAI,CAACu2B,GAAL,CAASmrC,UAAU,CAAClrC,QAAX,CAAoB52B,KAApB,EAA2B,SAA3B,CAAT,CADkB;AAEtBnE,kBAAI,EAAEmE,KAAK,CAACoB,UAAN,CAAiB,OAAjB,EAA0BmJ,iBAA1B;AAFgB,aAA1B;AAIAvK,iBAAK,GAAGA,KAAK,CAACW,QAAN,CAAe;AAAEJ,qBAAO,EAAG;AAAZ,aAAf,CAAR;AACH;AACD;;;AACA,cAAI,KAAKirE,eAAL,CAAqBxpE,MAArB,KAAgC,CAApC,EAAuC;AACnC,iBAAKwpE,eAAL,CAAqB7jE,IAArB,CAA0B;AAAEoK,gBAAE,EAAE,CAAC,CAAP;AAAUlW,kBAAI,EAAE;AAAhB,aAA1B;AACH;AACJ;;;mDAE+B;;;AAC5B,cAAM0pB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,cAAIgF,QAAQ,GAAG6gB,GAAG,CAACk1B,QAAnB;AACA,cAAMuxB,WAAW,GAAG,CAAH,KAAG,KAAK78C,UAAL,CAAgB,CAAhB,OAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,KAAxC;AACA,cAAI+Z,cAAc,GAAG;AAAEjrB,iBAAK,EAAE,CAAT;AAAYsrB,eAAG,EAAE;AAAjB,WAArB,CAJ4B,CAK5B;AACA;;AACA,cAAMqN,KAAK,GAAG,KAAKl4B,MAAnB,CAP4B,CAOD;;AAC3B,cAAIwrE,aAAa,GAAGtzC,KAAK,CAACnvB,YAAN,CAAmB,KAAnB,CAApB;AACA,cAAI0iE,cAAc,GAAGD,aAAa,CAACtrE,QAAd,CAAuB;AAAEwG,iBAAK,EAAE8jB,cAAc,CAACjrB;AAAxB,WAAvB,CAArB;AACA,cAAImsE,YAAY,GAAGF,aAAa,CAACtrE,QAAd,CAAuB;AAAEwG,iBAAK,EAAE8jB,cAAc,CAACK;AAAxB,WAAvB,CAAnB;;AAEA,cAAI0gD,WAAJ,EAAiB;AACb;AACA,gBAAMxpD,KAAK,GAAG,KAAK2M,UAAL,CAAgB7rB,IAAhB,CAAqB,UAACkf,KAAD;AAAA,qBAAWA,KAAK,CAACtR,KAAN,KAAgB86D,WAA3B;AAAA,aAArB,CAAd;;AACA,gBAAMrpD,QAAQ,GAAG,KAAKqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,qBAASjiB,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEI,KAAP,CAAazJ,QAAb,CAAsBsrB,GAAG,CAAC1yB,EAA1B,CAAT;AAAA,aAAzB,CAAjB;;AACA,gBAAI4Q,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEje,QAAd,EAAwB;AACpB;AACAA,sBAAQ,GAAGie,QAAQ,CAACje,QAApB;AACAunE,2BAAa,GAAGtzC,KAAK,CAACzuB,MAAN,CAAaxF,QAAb,EAAuB8E,YAAvB,CAAoC,KAApC,CAAhB;AACH;;AACD,gBAAImZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEsI,cAAd,EAA8B;AAC1B;AACAA,4BAAc,GAAGtI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEsI,cAA3B;AACH,aAZY,CAab;;;AACAihD,0BAAc,GAAGD,aAAa,CAACtrE,QAAd,CAAuB;AAAEwG,mBAAK,EAAE8jB,cAAc,CAACjrB;AAAxB,aAAvB,CAAjB;AACAmsE,wBAAY,GAAGF,aAAa,CAACtrE,QAAd,CAAuB;AAAEwG,mBAAK,EAAE8jB,cAAc,CAACK;AAAxB,aAAvB,CAAf;AACH,WA5B2B,CA8B5B;;;AACA,cAAItrB,KAAK,GAAG24B,KAAK,CAACzuB,MAAN,CAAaxF,QAAb,CAAZ;AACA,cAAI4mB,GAAG,GAAGqN,KAAK,CAACzuB,MAAN,CAAaxF,QAAb,EAAuB/D,QAAvB,CAAgC;AAAEJ,mBAAO,EAAE,KAAKM;AAAhB,WAAhC,CAAV,CAhC4B,CAkC5B;;AACA,cAAIb,KAAK,CAACg3B,YAAN,CAAmBk1C,cAAnB,CAAJ,EAAwC;AACpC;AACA,gBAAIC,YAAY,CAACl1C,WAAb,CAAyBj3B,KAAzB,CAAJ,EAAqC;AACjC;AACAA,mBAAK,GAAGksE,cAAc,CAACvrE,QAAf,CAAwB,EAAxB,CAAR;AACH,aAHD,MAGO;AACH;AACAX,mBAAK,GAAGmsE,YAAY,CAACxrE,QAAb,CAAsB,EAAtB,CAAR;AACA2qB,iBAAG,GAAG6gD,YAAY,CAACxrE,QAAb,CAAsB,EAAtB,CAAN;AACA,qBAAO;AAAE+D,wBAAQ,EAARA,QAAF;AAAY1E,qBAAK,EAALA,KAAZ;AAAmBsrB,mBAAG,EAAHA;AAAnB,eAAP;AACH;AACJ,WAXD,MAWO;AACH;AACA,gBAAI6gD,YAAY,CAACn1C,YAAb,CAA0Bh3B,KAA1B,CAAJ,EAAsC;AAClC;AACAA,mBAAK,GAAGmsE,YAAY,CAACxrE,QAAb,CAAsB,EAAtB,CAAR;AACA2qB,iBAAG,GAAG6gD,YAAY,CAACxrE,QAAb,CAAsB,EAAtB,CAAN;AACA,qBAAO;AAAE+D,wBAAQ,EAARA,QAAF;AAAY1E,qBAAK,EAALA,KAAZ;AAAmBsrB,mBAAG,EAAHA;AAAnB,eAAP;AACH;AACJ;;AAED,cAAIA,GAAG,CAAC0L,YAAJ,CAAiBm1C,YAAjB,CAAJ,EAAoC;AAChC;AAEA,gBAAID,cAAc,CAACj1C,WAAf,CAA2B3L,GAA3B,CAAJ,EAAqC;AACjC;AACAtrB,mBAAK,GAAGksE,cAAc,CAACvrE,QAAf,CAAwB,EAAxB,CAAR;AACA2qB,iBAAG,GAAG4gD,cAAc,CAACvrE,QAAf,CAAwB,EAAxB,CAAN;AACA,qBAAO;AAAE+D,wBAAQ,EAARA,QAAF;AAAY1E,qBAAK,EAALA,KAAZ;AAAmBsrB,mBAAG,EAAHA;AAAnB,eAAP;AACH;AACJ,WATD,MASO;AACH;AACA;AACAA,eAAG,GAAG6gD,YAAY,CAACxrE,QAAb,CAAsB,EAAtB,CAAN;AACH;;AAED,iBAAO;AAAE+D,oBAAQ,EAARA,QAAF;AAAY1E,iBAAK,EAALA,KAAZ;AAAmBsrB,eAAG,EAAHA;AAAnB,WAAP;AACH;;;4BAvTmB;AAChB,iBACI,CAAC,KAAK25B,eAAL,CAAqBrhC,YAArB,IAAqC,KAAK2nD,aAAL,CAAmBvpE,MAAzD,KACC,KAAKoqE,mBADN,IAEA,CAAC,KAAKC,YAHV;AAKH;AAED;AACA;;;;4BACiC;AAC7B,iBAAO,KAAP;AACH;AAED;;;;4BAC0B;AACtB,cAAM7wD,IAAI,GAAG,KAAKA,IAAL,IAAa;AAAEquB,oBAAQ,EAAE;AAAEvS,yBAAW,EAAE;AAAEt0B,qBAAK,EAAE;AAAT;AAAf;AAAZ,WAA1B;AACA,cAAMspE,aAAa,GAAI9wD,IAAD,CAAOquB,QAA7B;AACA,cAAMrnB,KAAK,GACP,KAAK2M,UAAL,CAAgB7rB,IAAhB,CAAqB,UAACkf,KAAD;AAAA,mBAAWA,KAAK,CAACtR,KAAN,IAAeo7D,aAAa,CAACh1C,WAAd,CAA0Bt0B,KAApD;AAAA,WAArB,KACC;AAAEsmB,iBAAK,EAAE;AAAT,WAFL;AAGA,iBACI,KAAK0D,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASjiB,KAAK,CAAC8G,KAAN,CAAYob,WAAZ,KAA4BD,GAAG,CAAC1yB,EAAzC;AAAA,WAAzB,KACC;AAAEs0B,oCAAwB,EAAE;AAA5B,WAFL;AAIH;AAED;;;;4BACiB;AACb,iBAAO,KAAK4e,eAAL,CAAqB3e,QAArB,IAAiC,KAAxC;AACH;AAED;;;;4BACqB;;;AACjB,iBAAO,KAAK9qB,IAAL,GACD,CAAD,iBAAC,KAAKA,IAAN,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAEquB,QAAZ,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE/rC,KAArB,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,MAA1B,GAA0B,GAAEkF,KAAF,CAAQS,MAAR,CAAe,UAAC6+B,KAAD,EAAQ95B,IAAR;AAAA,mBAAiB85B,KAAK,GAAG95B,IAAI,CAAC24B,MAA9B;AAAA,WAAf,EAAqD,CAArD,CADzB,GAED,CAFN;AAGH;AAED;;AACA;;;;4BACuB;;;AACnB,iBAAO,kBAAK3lB,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEquB,QAAX,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEpT,aAAF,CAAgBzzB,KAAnC,IAA2C,CAAlD;AACH;AAED;;;;4BAC8B;AAC1B,iBAAO,KAAKuoE,aAAL,CAAmB9nE,MAAnB,CACH,UAACqoB,SAAD,EAAYqrB,QAAZ;AAAA,mBAAyBrrB,SAAS,IAAIqrB,QAAQ,CAACxV,iBAA/C;AAAA,WADG,EAEH,IAFG,CAAP;AAIH;;;;MAxFqD,OAAAplC,a;;AAL1D;;;uBAKa8uE,oC,EAAoC,4C,EAAA,4C,EAAA,kC;AAAA,K;;;YAApCA,oC;AAAoC,+C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CjD;AACI;AAwDA;AA8BA;AACI;AAII;AAAA,mBAAS,IAAA79D,KAAA,OAAT;AAAqB,WAArB;AAJJ;AAQA;AACA;AAII;AAAA,mBAAS,IAAA++D,YAAA,EAAT;AAAuB,WAAvB;AAJJ;AAQA;AACJ;AACJ;AACA;AAWA;AAYA;;;;;;AAnIoC;AACZ;AAAA;AAwDkC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AA2C9C;AAAA;AAKJ;AAAA;AAAA;;;;;;;;;;2BD/DKlB,oC,EAAoC;cALhD,OAAAzrB,SAKgD;eALtC;AACPljD,kBAAQ,EAAE,0BADH;AAEPmjD,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,gCAAD;AAHJ,S;AAKsC,Q;;;;;;;;;;gBAE5C,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAkBA,OAAAoD,S;iBAAU,O;;;;;;;;;;;;;;;;;;;;;;;;AE5Ef;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOaqpB,8B;AA8DT,8CAAoBv/C,OAApB,EAAoDD,IAApD,EAA+E;AAAA;;AAA3D,aAAAC,OAAA,GAAAA,OAAA;AAAgC,aAAAD,IAAA,GAAAA,IAAA;AAvDpD;;AACiB,aAAAy/C,IAAA,GAAO,IAAI,OAAApvB,YAAJ,EAAP;AACjB;;AACiB,yBAAS,IAAI,OAAAA,YAAJ,EAAT;AAoDgE;;;;mCAhDlE;AAAA;;AACX,eAAKvsB,IAAL,GAAY,CAAC,KAAK3B,UAAL,IAAmB,EAApB,EAAwB7rB,IAAxB,CAA6B,UAAAkf,KAAK;AAAA,mBAAIA,KAAK,CAACtR,KAAN,KAAgB,QAAI,CAACmmB,KAAL,CAAWC,WAA/B;AAAA,WAAlC,CAAZ;AACH;;;4BAE0B;AACvB,iBAAO,CAAC,CAAC,KAAKxG,IAAd;AACH;AAED;;;;4BAC2B;;;AACvB,iBAAO,YAAKA,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAElE,UAAX,KAAyB,eAAhC;AACH;AAED;;;;4BACwB;AACpB;AACA,cAAI,CAAC,KAAKyK,KAAV,EAAiB;AACb,mBAAO,iBAAP;AACH;;AACD,iBAAO,KAAKA,KAAL,CAAW4K,aAAX,CAAyBthC,QAAzB,CAAkC;AAAEJ,mBAAO,EAAE,KAAK82B,KAAL,CAAWZ,aAAX,IAA4B;AAAvC,WAAlC,EAA6Er1B,UAA7E,CAAwF,OAAxF,EAAiGmJ,iBAAjG,EAAP;AACH;AAGD;;;;4BACqB;AACjB,cAAMzM,KAAK,GAAG,CAAC,KAAKu5B,KAAL,IAAc;AAAEv5B,iBAAK,EAAE;AAAT,WAAf,EAA8BA,KAA5C;AACA,iBAAOA,KAAK,CAAC2F,MAAN,CAAa,UAAC09B,MAAD,EAAS34B,IAAT;AAAA,mBAAkB24B,MAAM,GAAG34B,IAAI,CAAC24B,MAAL,GAAc34B,IAAI,CAACg4B,UAA9C;AAAA,WAAb,EAAuE,CAAvE,CAAP;AACH;AAED;;;;4BACqB;AACjB,cAAM1iC,KAAK,GAAG,CAAC,KAAKu5B,KAAL,IAAc;AAAEv5B,iBAAK,EAAE;AAAT,WAAf,EAA8BA,KAA5C;AACA,iBAAOA,KAAK,CAAC2F,MAAN,CAAa,UAAC09B,MAAD,EAAS34B,IAAT;AAAA,mBAAkB24B,MAAM,GAAG34B,IAAI,CAAC24B,MAAhC;AAAA,WAAb,EAAqD,CAArD,CAAP;AACH;AAED;;;;4BACiB;AACb,cAAM3e,KAAK,GAAG,KAAKyK,OAAL,CAAa3pB,IAAb,CAAkB,CAAC,KAAK+zB,KAAL,IAAc,EAAf,EAAmBC,WAArC,CAAd;AACA;;;AACA,cAAI,CAAC9U,KAAD,IAAU,CAACA,KAAK,CAAC8G,KAArB,EAA4B;AACxB,mBAAO,KAAP;AACH;;AACD,cAAM3G,QAAQ,GAAG,KAAKqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASA,GAAG,CAAC1yB,EAAJ,KAAWyQ,KAAK,CAAC8G,KAAN,CAAYob,WAAhC;AAAA,WAAzB,KAAyE;AACtF4B,oBAAQ,EAAE;AAD4E,WAA1F;AAGA,iBAAO3jB,QAAQ,CAAC2jB,QAAhB;AACH;;;;;;AAjEL;;;uBAKakmC,8B,EAA8B,sC,EAAA,4C;AAAA,K;;;YAA9BA,8B;AAA8B,+C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,gN;AAAA;AAAA;ACZ3C;AAAA;AACe;AAAuC;AACtD;AAAA;AACA;AACI;AACI;AACA;;AAAsE;AAC1E;AACA;AAAkB;;AAAyC;AAC/D;AACA;AACI;AAGI;AAAA,mBAAS,IAAAC,IAAA,OAAT;AAAoB,WAApB;AAEJ;AAGJ;AACI;AAAsD;AAAA,mBAAS,oBAAT;AAAsB,WAAtB;AAClD;AACJ;AACJ;;;;AArBA;AAAA,6CAAM,iBAAN;AAAA;AAGQ;AAAA;;;;AAGc;AAAA;AASd;AAAA;AAIU;AAAA;;;;;;;;;;2BDTLD,8B,EAA8B;cAL1C,OAAA5sB,SAK0C;eALhC;AACPljD,kBAAQ,EAAE,0BADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD;AAHJ,S;AAKgC,Q;;;;;;;;gBAEtC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEtBL;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMgB;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyB,QAAzB,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;AAEH;;;;;;AALG,uDAAyB,OAAzB,EAAyB,QAAzB,EAAyB,MAAzB,EAAyB,WAAzB;;;;;;;;AAJZ;AACI;AACI;AAQJ;AACA;AAA8B;AAAA;AAAA;AAAA;AAAA;AAA9B;AAEA;AACJ;;;;;AAXY;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BhB;AACI;AACI;AACJ;AACA;AAAA;AAA2E;AAC3E;AAA8B;AAAA;AAAA;AAAA;AAAA;AAA9B;AAEA;AACJ;;;;AANkB;AAAA;;;;QD3BT2sB,iC;AALb;AAAA;;AAgBI;AACiB,aAAAl/D,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AACjB;;AACiB,aAAAhmB,KAAA,GAAQ,IAAI,OAAAgmB,YAAJ,EAAR;AAqDpB;;;;mCAnDkB;AAAA;;AACX,cAAG,KAAKluB,UAAL,IAAmB,KAAKA,UAAL,CAAgBntB,MAAtC,EAA8C;AAC1C,iBAAKgyB,QAAL,CAAchxB,KAAd,CAAoB9E,OAApB,CAA4B,UAAA81B,QAAQ,EAAI;AACpCA,sBAAQ,CAACtb,QAAT,GAAoB,QAAI,CAACyW,UAAL,CAAgB,CAAhB,EAAmBtzB,IAAvC;AACAm4B,sBAAQ,CAACsD,WAAT,GAAuB,QAAI,CAACnI,UAAL,CAAgB,CAAhB,EAAmBje,KAA1C;AACA8iB,sBAAQ,CAACiO,aAAT,GAAyB,QAAI,CAACniC,IAA9B;AACH,aAJD;AAKH;AACJ;AAED;;;;;AASA;mCACkB;AACd,eAAKu3B,KAAL,CAAWknB,IAAX;AACH;AAED;;;;kCACiBlnB,K,EAAsB;AACnC,eAAKA,KAAL,CAAWknB,IAAX,CAAgBlnB,KAAhB;AACH;AAED;;;;oCACmBA,K,EAAsB;AACrC,cAAMD,MAAM,GAAG,KAAKA,MAApB;AACA,cAAMh5B,KAAK,GAAGg5B,MAAM,CAACgV,SAAP,CAAiB,UAAA++B,QAAQ;AAAA,mBAAI9zC,KAAK,CAACtlB,EAAN,KAAao5D,QAAQ,CAACp5D,EAA1B;AAAA,WAAzB,CAAd;AACA;;AACA,cAAI3T,KAAK,IAAI,CAAb,EAAgB;AACZg5B,kBAAM,CAAC7qB,MAAP,CAAcnO,KAAd,EAAqB,CAArB;AACA,iBAAK41B,QAAL,CAActzB,QAAd,CAAuB02B,MAAvB;AACH;AACJ;AAED;;;;;;+BAGW;AACP,eAAK5pB,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,gBAAI,EAAE,MAAR;AAAgBzC,gBAAI,EAAE;AAAtB,WAAhB;AACH;AAED;;;;mCACe;AACX,eAAKkL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,gBAAI,EAAE,UAAR;AAAoBzC,gBAAI,EAAE;AAA1B,WAAhB;AACH;;;4BAvCgB;AACb;AACA,cAAI,CAAC,KAAK0xB,QAAV,EAAoB;AAChB,mBAAO,EAAP;AACH;;AACD,iBAAO,KAAKA,QAAL,CAAchxB,KAArB;AACH;;;;;;AAtCL;;;uBAKa0pE,iC;AAAiC,K;;;YAAjCA,iC;AAAiC,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,2f;AAAA;AAAA;ACZ9C;AACI;AACI;AAAA;AAAqD;AACzD;AACA;AACI;AAeJ;AACA;AACI;AAII;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;AAJJ;AAQA;AACA;AAA+B;AAAA,mBAAS,IAAA1+D,IAAA,EAAT;AAAe,WAAf;AAA/B;AAEA;AACJ;AACJ;AACA;;;;;;AA/BsB;AAAA,iEAAiD,UAAjD,EAAiD,GAAjD;;;;;;;;;2BDOTy+D,iC,EAAiC;cAL7C,OAAA9sB,SAK6C;eALnC;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD;AAHJ,S;AAKmC,Q;;gBAEzC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBY;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAIJ;;;;;AAVI,4CAAkB,WAAlB,EAAkB,IAAlB;AAKA;AAAA;AAGI;AAAA;;;;;;AAZhB;AACI;AACI;AAaJ;AACJ;;;;;AAbY;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjChB;AACI;AACI;AACI;AAA8C;AAAA;AAAA;AAAA,mCAAoB,IAAC,CAArB;AAAsB,SAAtB;AAC1C;AAGJ;AACA;AAAkB;AAAkB;AACpC;AAAwB;AAAA;AAAA;AAAA,oCAAoB,CAApB;AAAqB,SAArB;AACpB;AAGJ;AACJ;AACA;AACI;AAAmB;AAAA;AAAA;AAAA;AAAA;AACf;AACA;AAAA;AAEA;AACA;AAMJ;AACJ;AACJ;AACA;AAiBJ;;;;;;;;AA5CoC;AAAA;AAEhB;AAAA;AAGU;AAAA;AAGV;AAAA;AAIe;AAAA;AAOf;AAAA;AAQK;AAAA;;;;;;;;AAmBrB;AAAsB;AAAA;AAAA,iBAAS4J,MAAM,CAACr6C,eAAP,EAAT;AAAiC,SAAjC;AAClB;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACI;AAAkB;AAAmB;AACrC;AAAkB;AAAmB;AACrC;AAAqB;AAAsB;AAC/C;AACJ;AACJ;;;;;;AATQ;AAAA;AAIsB;AAAA;AACA;AAAA;AACG;AAAA;;;;QDtCxBs9D,4B;;;;;AA4CT,4CAAoB5/C,IAApB,EAA+C;AAAA;;AAAA;;AAC3C;AADgB,iBAAAA,IAAA,GAAAA,IAAA;AAzCpB;;AACgB,iBAAA5H,SAAA,GAAsB,EAAtB;AAChB;;AACgB,iBAAAynD,aAAA,GAA0B,EAA1B;AAChB;;AACiB,iBAAAC,eAAA,GAAkB,IAAI,OAAAzvB,YAAJ,EAAlB;AACjB;;AACO,iBAAA0vB,aAAA,GAA4B,EAA5B;AAkCwC;AAE9C;;;;mCAEiB5rC,M,EAAgB;AAC9B,cAAIrhC,IAAI,GAAG,KAAK64B,KAAL,CAAWh4B,QAAX,CAAoB;AAAE,oBAAQwgC;AAAV,WAApB,CAAX;AACA,cAAM6rC,IAAI,GAAG,UAAAzjE,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAb;AACA,cAAM6lB,GAAG,GAAGynD,IAAI,CAACxjE,YAAL,CAAkB,QAAlB,CAAZ;;AACA,cAAI1J,IAAI,CAACk3B,YAAL,CAAkBzR,GAAlB,CAAJ,EAA4B;AACxBzlB,gBAAI,GAAGylB,GAAP;AACH;;AACD,eAAKzlB,IAAL,CAAUY,QAAV,CAAmBZ,IAAI,CAAC2J,EAAxB;AACH;;;mCAEc;AAAA;;AACX,eAAK5L,YAAL,CAAkB,WAAlB,EAA+B,KAAKmvB,IAAL,CAAU3uB,MAAV,CAAiB,WAAjB,EAA8BN,SAA9B,CAAwC,UAAC0pC,QAAD,EAAc;AACjF,oBAAI,CAACslC,aAAL,GAAqBtlC,QAArB;;AACA,gBAAI56B,KAAK,CAACsB,OAAN,CAAc,QAAI,CAAC0+D,aAAnB,CAAJ,EAAuC;AACnC,sBAAI,CAACznD,SAAL,GAAiB,OAAA5e,MAAA,CAAO,QAAI,CAACqmE,aAAZ,CAAjB;AACH;AACJ,WAL8B,CAA/B;AAMH;AAED;;;;;;;0CAIyBlqD,Q,EAAkB;AACvC,eAAKyC,SAAL,CAAezd,IAAf,CAAoBgb,QAAQ,CAAC5Q,EAA7B;AACA,eAAKqT,SAAL,GAAiB,OAAA5e,MAAA,CAAO,KAAK4e,SAAZ,CAAjB;AACA,eAAK0nD,eAAL,CAAqBvuB,IAArB,CAA0B,KAAKn5B,SAA/B;AACH;AAED;;;;;;;6CAI4BzC,Q,EAAoB;AAC5C,eAAKyC,SAAL,CAAe7Y,MAAf,CACI,KAAK6Y,SAAL,CAAegnB,SAAf,CAAyB,UAAAr6B,EAAE;AAAA,mBAAI4Q,QAAQ,CAAC5Q,EAAT,KAAgBA,EAApB;AAAA,WAA3B,CADJ,EAEI,CAFJ;AAIA,eAAK+6D,eAAL,CAAqBvuB,IAArB,oBAA8B,KAAKn5B,SAAnC;AACH;;;4BAzEkB;AACf;AACA,iBAAO,IAAI,UAAApU,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA,IAAL,CAAUkD;AAAjB,WAAX,CAAP;AACH;AAED;;;;4BACmB;AACf,cAAMuiB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,iBAAO6lB,GAAG,CAAC0W,UAAJ,CAAe,KAAKtD,KAApB,EAA2B,KAA3B,CAAP;AACH;AAED;;;;4BACuB;AACnB;AACA,iBAAO,KAAKs0C,QAAL,GAAgB,OAAhB,GAA0B,KAAKt0C,KAAL,CAAWv3B,UAAX,CAAsB,aAAtB,CAAjC;AACH;AAED;;;;4BACwB;AAAA;;AACpB,iBAAO,KAAKgkB,SAAL,CAAezf,GAAf,CAAmB,UAAAoM,EAAE;AAAA,mBAAI,QAAI,CAACg7D,aAAL,CAAmBzpE,IAAnB,CAAwB,UAAAmhC,GAAG;AAAA,qBAAIA,GAAG,CAAC1yB,EAAJ,KAAWA,EAAf;AAAA,aAA3B,CAAJ;AAAA,WAArB,CAAP;AACH;;;4BAE2B;AACxB,cAAMpM,GAAG,GAAG,EAAZ;;AADwB,uDAEP,KAAKyf,SAFE;AAAA;;AAAA;AAExB,sEAAiC;AAAA,kBAAtBrT,EAAsB;AAC7BpM,iBAAG,CAACoM,EAAD,CAAH,GAAU,IAAV;AACH;AAJuB;AAAA;AAAA;AAAA;AAAA;;AAKxB,iBAAOpM,GAAP;AACH;;;;MA1C6C,OAAApJ,a;;AANlD;;;uBAMaqwE,4B,EAA4B,4C;AAAA,K;;;YAA5BA,4B;AAA4B,4C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,i0B;AAAA;AAAA;ACnBzC;AAgDA;AACI;AAYJ;;;;AA7D2B;AAiDkC;AAAA;;;;;;mBDhC7C,CAAC,aAAAhyE,8BAAD;;;;;;2BAEHgyE,4B,EAA4B;cANxC,OAAAhtB,SAMwC;eAN9B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD,CAHJ;AAIPsH,oBAAU,EAAE,CAAC,aAAAxsD,8BAAD;AAJL,S;AAM8B,Q;;;;;;gBAEpC,OAAAwE;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BL;AAAA;AAAA;;AASA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAUA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGgB;AACI;AAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACL;;;;;;AANQ;AAAA,4CAAa,OAAb,EAAa,SAAb,EAAa,OAAb,EAAa,gBAAb,EAAa,WAAb,EAAa,iBAAb;;;;;;AALZ;AACI;AAAI;AAAkB;AAEtB;AASJ;;;;;AATS;AAAA;;;;;;AAYT;AAAsB;AAAmB;;;;;;;;AACzC;AACI;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACtC;;;;;;AAF0B;AAAA,2CAAa,OAAb,EAAa,SAAb,EAAa,OAAb,EAAa,eAAb,EAAa,WAAb,EAAa,gBAAb;;;;;;AAtB9B;AAKI;AAeA;AACA;AAIJ;;;;;AAvBI;AAGK;AAAA;AAeD;AAAA;AACU;AAAA;;;;;;AAtBtB;AACI;AA0BJ;;;;;;;;AAzBQ;AAAA,6EAAyD,UAAzD,EAAyD,GAAzD;;;;;;;;;;;;;;;;;;;;AAsCA;AAKI;AAAA;AAAA;AAAA;AAAA;AALJ;AASA;;;;;AALI;;;;;;;;;;;;;;;;;;AAUZ;AACI;AACI;AACI;AACJ;AACA;AAAA;AAEA;AACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACI;AACI;AACI;AACJ;AACA;AAAA;AAEA;AACJ;AACJ;;;;AANsB;AAAA;;;;;;;;;;ADhE0B;;QAUvCmtB,yB;;;;;AAoDT,yCACY3xD,QADZ,EAEY0R,OAFZ,EAGYD,IAHZ,EAIYmgD,cAJZ,EAI+C;AAAA;;AAAA;;AAE3C;AALQ,iBAAA5xD,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAD,IAAA,GAAAA,IAAA;AACA,iBAAAmgD,cAAA,GAAAA,cAAA;AA/CZ;;AACiB,iBAAA3/D,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAEjB;;AACO,iBAAAluB,UAAA,GAAsB,EAAtB;AAKP;;AACO,iBAAAL,QAAA,GAAqB,EAArB;AACP;;AACgB,iBAAA21B,OAAA,GAAU,IAAI,OAAAtpC,OAAJ,EAAV;AAET,iBAAAiyD,WAAA,GAAsB,EAAtB;AAEA,iBAAAxoB,SAAA,GAAY,IAAI,QAAA9oB,SAAJ,CAAc;AAC7BpjB,kBAAQ,EAAE,IAAI,QAAA0gB,WAAJ,CAAgB,EAAhB;AADmB,SAAd,CAAZ;AAIA,iBAAAnX,OAAA,GAAU,IAAI,OAAA1mB,eAAJ,CAAyC,EAAzC,CAAV;AAEA,iBAAAmtB,eAAA,GAAkB,IAAI,OAAAntB,eAAJ,CAAyC,EAAzC,CAAlB;AAEA,iBAAAupD,cAAA,GAAiB,EAAjB;AAEA,iBAAAuoB,aAAA,GAA0D,EAA1D;AAEA,iBAAAC,QAAA,GAAW,EAAX;;AA6RA,iBAAAzoB,aAAA,GAAgB,YAAK;AACxB,cAAG,SAAKC,cAAL,CAAoB9iD,MAAvB,EAA8B;AAC1B,qBAAKyiD,OAAL,CAAax2C,IAAb,CAAkB,SAAK62C,cAAvB;AACH,WAFD,MAEK;AACD,qBAAK31B,UAAL,GAAkB,EAAlB;AACH;AACJ,SANM;;AAQA,iBAAAo+C,mBAAA,GAAsB,UAACx7D,EAAD,EAAe;AACxC;AACA,cAAM2iB,qBAAqB,GAAG,SAAKlZ,IAAL,CAAUquB,QAAV,CAAmBnV,qBAAjD;AACA,cAAI84C,eAAJ;AACA,cAAIC,WAAJ;;AAEA,mBAAKN,cAAL,CAAoBt9D,QAApB,CAA6B9R,SAA7B,CAAuC,UAAA8R,QAAQ,EAAI;AAC/C49D,uBAAW,GAAG59D,QAAQ,CAACnJ,MAAT,CAAgB,UAAC+N,OAAD;AAAA,qBAAaA,OAAO,CAAC1C,EAAR,KAAeA,EAA5B;AAAA,aAAhB,EAAgD,CAAhD,CAAd;AACAy7D,2BAAe,GAAGC,WAAW,CAAC34C,kBAAZ,CAA+BnvB,GAA/B,CAAmC,UAAC+nE,KAAD;AAAA,qBACjDA,KAAK,CAAC97D,WAD2C;AAAA,aAAnC,CAAlB;AAGH,WALD;;AANwC,kCAab,IAAI,UAAAZ,MAAJ,CAAW;AAAElR,gBAAI,EAAE2tE,WAAW,CAAC77D,WAAZ,GAA0B,IAAlC;AAAwCgU,uBAAW,EAAE,KAArD;AAA4DC,uBAAW,EAAE4nD,WAAW,CAAC/oE;AAArF,WAAX,CAba;AAAA,cAahCyC,KAbgC,qBAahCA,KAbgC;AAAA,cAazB5G,OAbyB,qBAazBA,OAbyB;;AAAA,sCAcS,SAAKib,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAdnC;AAAA,cAczB2qE,QAdyB,yBAchCxmE,KAdgC;AAAA,cAcNymE,UAdM,yBAcfrtE,OAde;AAexC,cAAMstE,aAAa,GAAG1mE,KAAK,KAAKwmE,QAAV,IAAsBptE,OAAO,KAAKqtE,UAAlC,GAChBl5C,qBAAqB,CAAC1xB,KAAtB,CAA4B0D,MAA5B,CAAmC,UAAC5G,IAAD;AAAA,mBAAiB0tE,eAAe,CAACr0D,QAAhB,CAAyBrZ,IAAzB,CAAjB;AAAA,WAAnC,CADgB,GAEhB40B,qBAAqB,CAAC1xB,KAAtB,CAA4B0D,MAA5B,CAAmC,UAAC5G,IAAD;AAAA,mBAAiB,CAAC0tE,eAAe,CAACr0D,QAAhB,CAAyBrZ,IAAzB,CAAlB;AAAA,WAAnC,CAFN;;AAIA,cAAG+tE,aAAa,CAAC7rE,MAAjB,EAAwB;AACpB0yB,iCAAqB,CAACh0B,QAAtB,oBAAmCmtE,aAAnC;;AACA,qBAAKrgE,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,kBAAI,EAAE,MAAR;AAAgBzC,kBAAI,EAAE;AAAtB,aAAhB;AACH,WAHD,MAGK;AACD,qBAAKkL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,kBAAI,EAAE,MAAR;AAAgBzC,kBAAI,EAAE;AAAtB,aAAhB;AACH;AACJ,SAzBM;;AAlRwC;AAG9C;AApBD;;;;;mCAsBe;AAAA;;AACX,eAAK2qB,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,gBAAIgnD,UAAU,GAAG,CAAjB,CAD2D,CAE3D;;AACA,oBAAI,CAACC,eAAL,GAAuB,QAAI,CAACP,OAAL,CAAa7zC,IAAb,CACnB,YAAA8d,YAAA,CAAa,GAAb,CADmB,EAEnB,YAAA+xB,oBAAA,EAFmB,EAGnB,YAAA9xB,SAAA,CAAU,YAAc;AAAA,kBAAb8V,GAAa,uEAAP,EAAO;;;;AACpB,sBAAI,CAACnsB,OAAL,GAAe,IAAf;AACAysC,wBAAU,GAAG,OAAAr7C,SAAA,CAAU,QAAV,CAAb;AACA,kBAAMjJ,MAAM,GAAG,QAAI,CAAC+a,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0BuC,KAAzC;AAEA,kBAAM27C,MAAM,GAAG,eAAI,CAACnjC,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,cAAAm4B,YAAA,CAAaijB,IAAlD,GAAyD,QAAI,CAAC5iC,IAAL,CAAUquB,QAAV,CAAmB93B,EAAnB,CAAsB/O,KAA/E,GAAuF,IAAtG,CALoB,CAOpB;AACA;;AACA,kBAAIkQ,KAAK,GAA8B;AACnCzS,sBAAM,EAAE,QAAI,CAAC+a,IAAL,CAAUquB,QAAV,CAAmBjW,OAAnB,CAA2B5wB,KAA3B,GACNvC,MAAM,CAAC+I,YAAP,CAAoB,KAApB,EAA2BA,YAA3B,CAAwC,QAAxC,EAAkDA,YAAlD,CAA+D,QAA/D,CADM,GAEN/I,MAAM,CAAC+I,YAAP,CAAoB,QAApB,EAA8BA,YAA9B,CAA2C,QAA3C,CAHiC;AAInC3I,wBAAQ,EAAE,QAAI,CAAC2a,IAAL,CAAUquB,QAAV,CAAmBjW,OAAnB,CAA2B5wB,KAA3B,GACJ,KAAK,EADD,GAEJ,QAAI,CAACwY,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAnB,CAA4BmC,KANC;AAOnC8rB,wBAAQ,EAAE2V,GAAG,CAACziC,MAAJ,GAAayiC,GAAb,GAAmB,QAAI,CAACzX,IAAL,CAAUrK,QAAV,CAAmB5Q,EAPb;AAQnCwR,wBAAQ,EAAE,IARyB;AASnC8Q,gCAAgB,EAAE,QAAI,CAAC7Y,IAAL,CAAUquB,QAAV,CAAmBxV,gBAAnB,CAAoCrxB,KATnB;AAUnC6xB,iCAAiB,EAAE,QAAI,CAACrZ,IAAL,CAAUquB,QAAV,CAAmBhV,iBAAnB,CAAqC7xB,KAVrB;AAWnCwxB,gCAAgB,EAAE,QAAI,CAAChZ,IAAL,CAAUquB,QAAV,CAAmBrV,gBAAnB,CAAoCxxB,KAXnB;AAYnC4xB,mCAAmB,EAAE,QAAI,CAACpZ,IAAL,CAAUquB,QAAV,CAAmBjV,mBAAnB,CAAuC5xB,KAZzB;AAanCgyB,iCAAiB,EAAE,QAAI,CAACxZ,IAAL,CAAUquB,QAAV,CAAmB7U,iBAAnB,CAAqChyB,KAbrB;AAcnC+xB,4BAAY,EAAE,QAAI,CAACvZ,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgC/xB,KAdX;AAenCsxB,+BAAe,EAAE,QAAI,CAAC9Y,IAAL,CAAUquB,QAAV,CAAmBvV,eAAnB,CAAmCtxB,KAfjB;AAgBnC27C,sBAAM,EAANA;AAhBmC,eAAvC;AAmBA;;AACA,kBAAI,QAAI,CAAC7vB,QAAL,IAAiB,QAAI,CAACA,QAAL,CAAc9sB,MAAnC,EAA2C;AACvCkR,qBAAK,CAAC4b,QAAN,GAAiB,QAAI,CAACA,QAAL,CAAc3lB,IAAd,CAAmB,GAAnB,CAAjB;AACH;;AACD,kBAAM4I,EAAE,GAAGgzC,UAAX;AACA,qBAAO,QAAI,CAAC93B,OAAL,CAAanB,SAAb,CAAuB5Y,KAAvB,EAA8B6I,IAA9B,CAAmC,UAAO/d,IAAP;AAAA,uBAAgB,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAE;AAAE+T,8BAAE,EAAFA,EAAF;AAAM/T,gCAAI,EAAJA;AAAN,2BAAF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAC,EAAhB;AAAA,eAAnC,CAAP;AACH,aAlCD,CAHmB,EAsCnB,YAAA6f,UAAA,CAAW,UAAChH,CAAD;AAAA,qBAAO,OAAAkH,EAAA,CAAG;AAAEhM,kBAAE,EAAEgzC,UAAN;AAAkB/mD,oBAAI,EAAE,EAAxB;AAA4B8f,qBAAK,EAAEjH;AAAnC,eAAH,CAAP;AAAA,aAAX,CAtCmB,EAuCnB,YAAAlR,GAAA,CAAI,UAACu/C,IAAD,EAAwC;AACxC,sBAAI,CAAC5sC,OAAL,GAAe,KAAf;AACA,qBAAO4sC,IAAI,CAACnzC,EAAL,KAAYgzC,UAAZ,GAAyBG,IAAI,CAAClnD,IAA9B,GAAqC,QAAI,CAACmxB,UAAjD;AACH,aAHD,CAvCmB,CAAvB,CAH2D,CAgD3D;;AACA,oBAAI,CAACtxB,YAAL,CACI,gBADJ,EAEI,QAAI,CAACmnD,eAAL,CAAqBjnD,SAArB,CAA+B,UAACC,IAAD,EAAU;AACrC,sBAAI,CAACmxB,UAAL,GAAkBnxB,IAAI,CAAC0I,MAAL,CAAY,UAAC8b,KAAD,EAAW;;;AACrC,oBAAI,CAACA,KAAK,CAACsJ,SAAP,IAAoB,QAAC,QAAI,CAACtQ,IAAL,CAAUquB,QAAV,CAAmB94B,MAApB,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,MAA1B,GAA0B,GAAE/N,KAA5B,CAAxB,EAA2D;AACvD,yBAAO,KAAP;AACH;;AAHoC,6DAKlB,QAAI,CAAC8rB,QALa;AAAA;;AAAA;AAKrC,4EAAkC;AAAA,wBAAvB7kB,IAAuB;;AAC9B,wBAAIuY,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqBlP,IAArB,CAAJ,EAAgC;AAC5B,6BAAO,IAAP;AACH;AACJ;AAToC;AAAA;AAAA;AAAA;AAAA;;AAUrC,uBAAO,CAAC,QAAI,CAAC6kB,QAAL,CAAc9sB,MAAtB;AACH,eAXiB,EAWf0E,MAXe,CAWR,UAAA8b,KAAK;AAAA,uBAAIA,KAAK,CAACsJ,SAAV;AAAA,eAXG,CAAlB;;AAaA,sBAAI,CAACqD,UAAL,CAAgBnnB,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAU,QAAI,CAACF,IAAL,CAAUC,CAAV,EAAaC,CAAb,CAAV;AAAA,eAArB;;AACA,kBAAG,CAAC,QAAI,CAACwgB,eAAL,CAAqB1lB,KAArB,CAA2BhB,MAA/B,EAAsC;AAClC,wBAAI,CAACqjD,kBAAL;AACH;;AACD,sBAAI,CAACl2B,UAAL,CAAgBxpB,GAAhB,CAAoB,UAAC6c,KAAD,EAAS;;;AACzB,oBAAGA,KAAK,CAACzQ,EAAN,MAAQ,MAAK,QAAI,CAAC2P,MAAL,CAAY1e,KAAZ,CAAkB,CAAlB,CAAL,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE+O,EAAnC,CAAH,EAAyC;AACrC,0BAAI,CAAC2P,MAAL,CAAYhhB,QAAZ,CAAqB,CAAC8hB,KAAD,CAArB;;AACA,sBAAMsrD,cAAc,GAAGtrD,KAAK,CAACosB,uBAAN,CAA8BloC,MAA9B,CAAqC,UAAA+iC,MAAM;AAAA,2BAAI,CAACA,MAAM,CAAC3d,SAAZ;AAAA,mBAA3C,CAAvB;;AACA,0BAAI,CAACtQ,IAAL,CAAUquB,QAAV,CAAmBnV,qBAAnB,CAAyCh0B,QAAzC,CAAkDotE,cAAc,CAACnoE,GAAf,CAAmB,UAAC8jC,MAAD;AAAA,2BAAWA,MAAM,CAAC3pC,IAAlB;AAAA,mBAAnB,CAAlD;AACH;AACJ,eAND;;AAQA,kBACI,QAAI,CAACiuE,SAAL,KAAmB,cAAA1yC,aAAA,CAAcD,KAAjC,IACG,QAAI,CAAC2yC,SAAL,KAAmB,cAAA5yC,YAAA,CAAaC,KAFvC,EAGE;AAEE,oBAAM5Y,KAAK,GAAG,QAAI,CAAC2M,UAAL,CAAgB7rB,IAAhB,CAAqB,UAAAkf,KAAK;AAAA,yBAAIA,KAAK,CAACzQ,EAAN,KAAa,QAAI,CAAC0C,OAAL,CAAaqc,IAAb,CAAkB/e,EAAnC;AAAA,iBAA1B,CAAd;;AACA,oBAAMwR,QAAQ,GAAGf,KAAK,KAAKzgB,SAA3B;AACA,wBAAI,CAACotB,UAAL,GAAkB5L,QAAQ,IAAI,QAAI,CAAC4L,UAAL,CAAgBzoB,MAAhB,CAAuB,UAAA8b,KAAK;AAAA,yBAAIA,KAAK,CAACzQ,EAAN,KAAa,QAAI,CAAC0C,OAAL,CAAaqc,IAAb,CAAkB/e,EAAnC;AAAA,iBAA5B,CAAZ,IAAkF,QAAI,CAACod,UAAzG;AAEA,oBAAM6+C,cAAc,GAAG,IAAI,cAAAvrD,KAAJ,CAAU,MAAD,OAAC,CAAD,gCACzB,QAAI,CAAChO,OAAL,CAAaqc,IADY,GAExBtO,KAAK,IAAI;AACThK,0BAAQ,EAAE,MAAF,OAAE,CAAF,kBACD,QAAI,CAAC/D,OAAL,CAAaqc,IAAb,CAAkBtY,QADjB,CAAE,EACuB;AAC7Bo2B,2CAAuB,EAAE;AADI,mBADvB;AADD,iBAFe,CAAC,EAOpB;AACTrrB,0BAAQ,EAARA;AADS,iBAPoB,CAAV,CAAvB;AAWA,wBAAI,CAAC+pD,QAAL,GAAgB,CAACU,cAAD,CAAhB;AACA,wBAAI,CAACtsD,MAAL,CAAY1e,KAAZ,CAAkB6e,IAAlB,CAAuB,UAAAW,KAAK;AAAA,yBAAIA,KAAK,CAACzQ,EAAN,KAAai8D,cAAc,CAACj8D,EAAhC;AAAA,iBAA5B,KAAmE,QAAI,CAAC2P,MAAL,CAAYhhB,QAAZ,CAAqB,CAACstE,cAAD,CAArB,CAAnE;;AACA,wBAAI,CAACX,aAAL,CAAmB1lE,IAAnB,CAAwBqmE,cAAxB;AACH;;AAED,kBAAG,QAAI,CAACxyD,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgC/xB,KAAnC,EAAyC;AACrC,wBAAI,CAACirE,4BAAL;AACH;;AAED,kBAAMC,kBAAkB,GAAG,QAAI,CAAC1yD,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAAzD;;AACA,kBAAGkrE,kBAAkB,CAAClsE,MAAnB,KAA8B,CAAjC,EAAmC;AAC/B,wBAAI,CAAC0f,MAAL,CAAYhhB,QAAZ,CAAqBwtE,kBAArB;AACH;AACJ,aA3DD,CAFJ;;AAgEA,oBAAI,CAACzpB,OAAL,CAAax2C,IAAb,CAAkB,EAAlB;AACH,WAlHD;;AAoHA,eAAKpQ,YAAL,CAAkB,WAAlB,EAA+B,KAAKmvB,IAAL,CAAU3uB,MAAV,CAAiB,WAAjB,EAA8BN,SAA9B,CAAwC,UAAC0pC,QAAD,EAAc;AACjF,gBAAMlyB,IAAI,GAAG,QAAI,CAACyX,IAAL,CAAUrK,QAAV,CAAmBpN,IAAhC;AACA,gBAAM7Q,QAAQ,GAAG,QAAI,CAACsoB,IAAL,CAAUrK,QAAV,CAAmBje,QAApC;AACA,gBAAM4gD,eAAe,GAAG;AACpB9pD,iBAAG,EAAE;AAACK,oBAAI,EAAE0Z,IAAP;AAAa7Q,wBAAQ,EAARA;AAAb,eADe;AAEpB1B,mBAAK,EAAE,CAAAykC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE/gC,MAAV,CAAiB,UAAC+9B,GAAD;AAAA,uBAAQA,GAAG,CAAClvB,IAAJ,KAAaA,IAArB;AAAA,eAAjB,MAA+C;AAFlC,aAAxB;AAIA,gBAAMgwC,cAAc,GAAGD,eAAe,CAACtiD,KAAhB,CAAsB2C,GAAtB,CACnB,UAAC8+B,GAAD;AAAA,qBAAO,cAAAzc,yBAAA,CAA0Bs9B,eAAe,CAAC9pD,GAAhB,CAAoBK,IAA9C,EAAoD4oC,GAApD,CAAP;AAAA,aADmB,CAAvB;AAGA,gBAAM7vB,SAAS,IACX,cAAA0T,wBAAA,CAAyBg9B,eAAe,CAAC9pD,GAAzC,CADW,4BAER+pD,cAFQ,EAAf;;AAIA,oBAAI,CAACtjC,OAAL,CAAahU,IAAb,CAAkB2G,SAAlB;AACH,WAf8B,CAA/B;AAiBH;;;oCAEkBpX,O,EAAsB;AAAA;;AACrC;AACA,cAAIA,OAAO,CAACge,IAAZ,EAAkB;AACd,gBAAMutC,QAAQ,GAAG,SAAXA,QAAW,CAAClyC,CAAD;AAAA,qBAAO,QAAI,CAAC4tC,OAAL,CAAax2C,IAAb,CAAkB4I,CAAlB,CAAP;AAAA,aAAjB;AACA;;;AACA,gBAAI,KAAK2E,IAAL,CAAUquB,QAAV,CAAmBppC,MAAvB,EAA+B;AAC3B,mBAAK5C,YAAL,CACI,YADJ,EAEI,KAAK2d,IAAL,CAAUquB,QAAV,CAAmBppC,MAAnB,CAA0B45B,YAA1B,CAAuCt8B,SAAvC,CAAiDgrD,QAAjD,CAFJ;AAIH;AACD;;;AACA,gBAAI,KAAKvtC,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAvB,EAAiC;AAC7B,mBAAKhD,YAAL,CACI,gBADJ,EAEI,KAAK2d,IAAL,CAAUquB,QAAV,CAAmBhpC,QAAnB,CAA4Bw5B,YAA5B,CAAyCt8B,SAAzC,CAAmDgrD,QAAnD,CAFJ;AAIH;AACJ;AACJ;AAED;;;;;;;oCAImBvmC,K,EAAc;AAC7B,cAAMxkB,IAAI,GAAG,KAAK0jB,MAAL,CAAY1e,KAAzB;;AACA,cAAIhF,IAAI,CAACsF,IAAL,CAAU,UAACkF,IAAD;AAAA,mBAAUA,IAAI,CAACuJ,EAAL,KAAYyQ,KAAK,CAACzQ,EAA5B;AAAA,WAAV,CAAJ,EAA+C;AAC3C,iBAAK2P,MAAL,CAAYhhB,QAAZ,CAAqB1C,IAAI,CAAC0I,MAAL,CAAY,UAAC8B,IAAD;AAAA,qBAAUA,IAAI,CAACuJ,EAAL,KAAYyQ,KAAK,CAACzQ,EAA5B;AAAA,aAAZ,CAArB;AACH,WAFD,MAEO;AACH,iBAAK2P,MAAL,CAAYhhB,QAAZ,CAAqB,CAAC8hB,KAAD,CAArB;AACH;AACJ;AAED;;;;;;+BAGW;;;AACP,cAAG,KAAKhH,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgC/xB,KAAhC,IACC,KAAKwY,IAAL,CAAUquB,QAAV,CAAmBnV,qBAAnB,CAAyC1xB,KAAzC,CAA+ChB,MADnD,EAC0D;AACtD,gBAAM+P,EAAE,GAAG,KAAKyJ,IAAL,CAAUquB,QAAV,CAAmB93B,EAAnB,CAAsB/O,KAAjC;;AACA,gBAAG+O,EAAE,IAAI,YAAKyJ,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE/N,KAA3B,MAAqC,MAA9C,EAAqD;AACjD,mBAAKuqE,mBAAL,CAAyBx7D,EAAzB;AACH,aAFD,MAEK;AACD,mBAAKvE,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,oBAAI,EAAE,MAAR;AAAgBzC,oBAAI,EAAE;AAAtB,eAAhB;AACH;AACJ,WARD,MAQK;AACD,gBAAG,KAAKmS,OAAL,IAAgB,KAAKA,OAAL,CAAa8f,gBAA7B,IAAiD,KAAK9f,OAAL,CAAa8f,gBAAb,CAA8BvyB,MAAlF,EAA0F;AACtF,mBAAKwL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,oBAAI,EAAE,MAAR;AAAgBzC,oBAAI,EAAE;AAAtB,eAAhB;AACH,aAFD,MAGK;AACD,mBAAKkL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,oBAAI,EAAE,MAAR;AAAgBzC,oBAAI,EAAE;AAAtB,eAAhB;AACH;AACJ;AAEJ;AAED;;;;mCACe;AACX,eAAKkL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,gBAAI,EAAE,UAAR;AAAoBzC,gBAAI,EAAE;AAA1B,WAAhB;AACH;AAED;;;;;;;;6BAKYujD,O,EAAgBC,O,EAAgB;AACxC,cAAMrhB,GAAG,GAAG,KAAKzX,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASohB,OAAO,CAACjjC,KAAR,CAAczJ,QAAd,CAAuBsrB,GAAG,CAAC1yB,EAA3B,CAAT;AAAA,WAAzB,CAAZ;;AACA,cAAMi9B,KAAK,GAAG,KAAKhiB,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASqhB,OAAO,CAACljC,KAAR,CAAczJ,QAAd,CAAuBsrB,GAAG,CAAC1yB,EAA3B,CAAT;AAAA,WAAzB,CAAd;;AACA,cAAI0yB,GAAG,IAAIA,GAAG,KAAKuK,KAAnB,EAA0B;AACtB,mBAAOvK,GAAG,CAAC5oC,IAAJ,CAASsM,aAAT,CAAuB6mC,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEnzC,IAA9B,CAAP;AACH;;AACD,cAAM+qC,UAAU,GAAG,mBAAInC,GAAG,CAACmC,UAAR,EAAoBx4B,OAApB,EAAnB;;AANwC,uDAOlBw4B,UAPkB;AAAA;;AAAA;AAOxC,sEAAkC;AAAA,kBAAvBtrB,OAAuB;;AAC9B,kBAAIA,OAAO,KAAK,GAAhB,EAAqB;AACjB;AACH;;AACD,kBAAM2zB,UAAU,GAAG4W,OAAO,CAACjjC,KAAR,CAAc1f,OAAd,CAAsBoY,OAAtB,KAAkC,CAArD;AACA,kBAAM4zB,UAAU,GAAG4W,OAAO,CAACljC,KAAR,CAAc1f,OAAd,CAAsBoY,OAAtB,KAAkC,CAArD;;AACA,kBAAI2zB,UAAU,IAAI,CAACC,UAAnB,EAA+B;AAC3B,uBAAO,CAAP;AACH,eAFD,MAEO,IAAIA,UAAU,IAAI,CAACD,UAAnB,EAA+B;AAClC,uBAAO,CAAC,CAAR;AACH;AACJ;AAlBuC;AAAA;AAAA;AAAA;AAAA;;AAmBxC,iBAAO4W,OAAO,CAAChqD,IAAR,CAAasM,aAAb,CAA2B29C,OAAO,CAACjqD,IAAnC,CAAP;AACH;;;uDAEqC;AAClC,eAAKszB,UAAL,CAAgBnnB,IAAhB,CAAqB,UAACC,CAAD,EAAIC,CAAJ,EAAQ;;;AACzB,gBAAMimE,cAAc,GAAI,aAAAlmE,CAAC,CAAC2mC,uBAAF,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEloC,MAAF,CAAS,UAAA+iC,MAAM;AAAA,qBAAIA,MAAM,CAAC3d,SAAX;AAAA,aAAf,CAAzB,MAA4D,IAA5D,IAA4D,aAA5D,GAA4D,MAA5D,GAA4D,GAAG9pB,MAA/D,IAAsE,GAAvE,GAA4EiG,CAAC,CAAC2mC,uBAAF,CAA0B5sC,MAA7H;AACA,gBAAMosE,cAAc,GAAI,aAAAlmE,CAAC,CAAC0mC,uBAAF,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEloC,MAAF,CAAS,UAAA+iC,MAAM;AAAA,qBAAIA,MAAM,CAAC3d,SAAX;AAAA,aAAf,CAAzB,MAA4D,IAA5D,IAA4D,aAA5D,GAA4D,MAA5D,GAA4D,GAAG9pB,MAA/D,IAAsE,GAAvE,GAA4EkG,CAAC,CAAC0mC,uBAAF,CAA0B5sC,MAA7H;AACA,mBAAOosE,cAAc,GAAGD,cAAxB;AACH,WAJD;AAKH;;;+BACaxlD,M,EAA2B;AAAA;;AACrC;AACA,eAAKD,eAAL,CAAqB9X,IAArB,CACI,YAAAsH,IAAA,CAAK,CAAL,CADJ,EAEI,YAAA6tC,cAAA,CAAe,KAAK9jC,OAApB,CAFJ,EAGI,YAAAtc,GAAA,CAAI,kBAAgC;AAAA;AAAA,gBAA9B+iB,eAA8B;AAAA,gBAAbzG,OAAa;;AAChC,mBAAO,cAAAwG,qBAAA,CAAsBxG,OAAtB,EAA+ByG,eAA/B,EAAgDC,MAAhD,CAAP;AACH,WAFD,CAHJ,EAME5qB,SANF,CAMY,UAAAkQ,IAAI,EAAI;AAChB,gBAAM+3C,QAAQ,GAAG,QAAI,CAACpB,SAAL,CAAe5hD,KAAhC;;AACA,oBAAI,CAAC4hD,SAAL,CAAelkD,QAAf,CAAwB;AACpBgY,sBAAQ,EAAEstC,QAAQ,CAACttC;AADC,aAAxB;;AAGA,oBAAI,CAACgQ,eAAL,CAAqBza,IAArB,CAA0BA,IAA1B;;AACA,oBAAI,CAAC62C,cAAL,GAAsB72C,IAAI,CAACtI,GAAL,CAAS,UAAC8+B,GAAD;AAAA,qBAAOA,GAAG,CAACzhC,KAAX;AAAA,aAAT,CAAtB;AAEH,WAdD;AAeH;;;6CAEwB;AAAA;;AACrB,cAAM2iD,UAAU,GAAG,KAAK1jC,OAAL,CAAajf,KAAb,CAAmB0D,MAAnB,CAA0B,UAAAk/C,GAAG;AAAA,mBAAIA,GAAG,CAAC5iD,KAAJ,KAAc,QAAI,CAACgqB,IAAL,CAAUrK,QAAV,CAAmB5Q,EAArC;AAAA,WAA7B,CAAnB;AACA,eAAK2W,eAAL,CAAqBza,IAArB,CAA0B03C,UAA1B;AACH;;;oCAEe;AACZ,eAAKx2B,UAAL,GAAkB,EAAlB;AACA,eAAK21B,cAAL,GAAsB,EAAtB;AACH,S,CAqCD;;;;4BA7TmB;AACf,iBAAO,KAAKvpC,QAAL,CAAcd,OAAd,CAAsB,6BAAtB,CAAP;AACH;;;4BAE4B;;;AACzB,iBAAO,CAAP,WAAO,KAAKiH,MAAZ,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE1e,KAAb,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE6e,IAAF,CAAO,UAAAhL,CAAC;AAAA,mBAAIA,CAAC,CAAC9E,EAAF,IAAQ8E,CAAC,CAAC0M,QAAd;AAAA,WAAR,CAAzB;AACH;;;4BAE4B;AACzB,iBAAO,KAAKyJ,IAAL,CAAUrK,QAAV,GAAqB,CAAC,KAAKqK,IAAL,CAAUrK,QAAV,CAAmB5Q,EAApB,CAArB,GAA+C,EAAtD;AACH;;;4BAoToB;AAAA;;AACjB,cAAI,CAAC,KAAKod,UAAV,EAAsB;AAClB,mBAAO,EAAP;AACH,WAHgB,CAKjB;;;AACA,iBAAO,KAAKA,UAAL,CAAgBzoB,MAAhB,CAAuB,UAAC8b,KAAD,EAAW;;;AACrC,gBAAI6rD,SAAS,GAAG7rD,KAAK,CAACwrB,WAAN,KAAiB,MAAIxrB,KAAK,CAAChK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEm1B,SAArC,KAAkDnrB,KAAK,CAACoK,UAAxE;AACA,mBAAOyhD,SAAS,CAAC7mE,WAAV,GAAwB2R,QAAxB,CAAiC,QAAI,CAACi0D,WAAL,CAAiB5lE,WAAjB,EAAjC,CAAP;AACH,WAHM,CAAP;AAIH;;;;MAhX0C,OAAAjL,a;;AAL/C;;;uBAKa2wE,yB,EAAyB,2C,EAAA,sC,EAAA,4C,EAAA,4C;AAAA,K;;;YAAzBA,yB;AAAyB,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,e;AAAA,c;AAAA,ovC;AAAA;AAAA;ACtCtC;AACI;AACA;AACI;AASA;AAAA,mBAAkB,IAAAoB,MAAA,QAAlB;AAAgC,WAAhC,EAAiC,cAAjC,EAAiC;AAAA,mBAEjB,IAAA/6B,SAAA,EAFiB;AAEN,WAF3B,EAAiC,gBAAjC,EAAiC;AAAA,mBAIf,IAAAsR,aAAA,EAJe;AAIA,WAJjC;AAKH;AACD;AACI;AAAsD;AAAA;AAAA;AAAtD;AAEJ;AACA;AACA;AA4BA;AACI;AACI;AAKI;AAAA,mBAAS,IAAA8nB,QAAA,EAAT;AAAmB,WAAnB;AALJ;AASA;AACA;AAUJ;AACJ;AACJ;AACA;AAYA;;;;;;AAxFwB;AAMhB;AAAA,0CAAiB,oBAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,WAAjB,EAAiB,iBAAjB,EAAiB,mBAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,IAAjB;AAasD;AAAA,oDAAyB,gBAAzB,EAAyB,2BAAzB;AAI5C;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAkCF;AAAA;AAQA;AAAA;;;;;;;;;2BD3BHO,yB,EAAyB;cALrC,OAAAttB,SAKqC;eAL3B;AACPljD,kBAAQ,EAAE,oBADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD;AAHJ,S;AAK2B,Q;;;;;;;;;;;;gBAEjC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEhDL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACJQ;;;;;AAGI;;;;;;;;;;;;;;;;;;;;;AAaJ;AAAA;AAOA;;;;;AALI;AAKJ;AAAA,kDAAM,uBAAN;AAAA;;;;;;;;;;;;;;;;AAzBR;AACI;AACI;AAKA;AACA;AAAkB;AAAsB;AACxC;AACI;AAAsB;AAAc;AACpC;AACI;AAGA;AACJ;AACJ;AACA;AAQJ;AACA;AACI;AAKI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;AACJ;AACJ;;;;;AAtCuD;AAI3C;AAAA;AAIc;AAAA;AAEQ;AAAA;AAGd;AAAA;AAEJ;AAAA;AAMJ;AAAA;AAWA;AAAA;AADA;AAIA;AAAA;;;;QDtBCwuB,yB;;;;;AAyDT,yCACYhzD,QADZ,EAEYyR,IAFZ,EAEqC;AAAA;;AAAA;;AAEjC;AAHQ,iBAAAzR,QAAA,GAAAA,QAAA;AACA,iBAAAyR,IAAA,GAAAA,IAAA;AAlDZ;;AACiB,iBAAAjV,MAAA,GAAS,IAAI,OAAAslC,YAAJ,EAAT;AAiDoB;AAGpC;AAlDD;;;;;sCAoDqB;AACjB,cAAG,KAAK7hC,IAAL,CAAUquB,QAAV,CAAmB9U,YAAnB,CAAgC/xB,KAAnC,EAAyC;AACrC,gBAAM8qE,cAAc,GAAG,KAAKtrD,KAAL,CAAWosB,uBAAX,CAAmCloC,MAAnC,CAA0C,UAAA+iC,MAAM;AAAA,qBAAI,CAACA,MAAM,CAAC3d,SAAZ;AAAA,aAAhD,CAAvB;AACA,iBAAKtQ,IAAL,CAAUquB,QAAV,CAAmBnV,qBAAnB,CAAyCh0B,QAAzC,CAAkDotE,cAAc,CAACnoE,GAAf,CAAmB,UAAC8jC,MAAD;AAAA,qBAAWA,MAAM,CAAC3pC,IAAlB;AAAA,aAAnB,CAAlD;AACH;;AACD,eAAKiY,MAAL,CAAYwmC,IAAZ;AACH;;;wCAEmB;AAChB,cACI,KAAK/iC,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,cAAAm4B,YAAA,CAAaC,KAAjD,IACG,KAAKozC,oBAAL,KAA8B,CAFrC,EAGE;AACE,mBAAO,IAAP;AACH;;AAED,cACI,KAAKhzD,IAAL,CAAUquB,QAAV,CAAmB94B,MAAnB,CAA0B/N,KAA1B,KAAoC,cAAAq4B,aAAA,CAAcD,KAAlD,IACI,KAAK5Y,KAAL,CAAmBe,QAAnB,KAAgC,KAFxC,EAGE;AACE,mBAAO,IAAP;AACH;;AAED,iBAAO,KAAP;AACH;;;4BA3EuB;AACpB,iBAAO,KAAKhI,QAAL,CAAcd,OAAd,CAAsB,+BAAtB,CAAP;AACH;AAED;;;;4BACmB;AAAA;;AACf;AACA,cAAI,CAAC,KAAKe,IAAN,IAAc,KAAKgH,KAAvB,EAA8B;AAC1B,mBAAO,KAAP;AACH;;AAED,iBAAQ,KAAKhH,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,IAAiC,CAAC,CAAC,CAAC,KAAK3T,IAAL,CAAUquB,QAAV,CAAmB1a,UAAnB,CAA8BnsB,KAA9B,IAAuC,EAAxC,EAA4CM,IAA5C,CAAiD,UAACkf,KAAD;AAAA,mBAAWA,KAAK,CAACzQ,EAAN,KAAa,QAAI,CAACyQ,KAAL,CAAWzQ,EAAnC;AAAA,WAAjD,CAA3C;AACH;;;4BAEmB;AAChB,iBAAO,KAAP;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAP;AACH;;;4BAE8B;AAC3B,cAAG,KAAKyQ,KAAL,IAAc,KAAKA,KAAL,CAAWosB,uBAA5B,EAAqD;AACjD,mBAAO,KAAKpsB,KAAL,CAAWosB,uBAAX,CAAmCloC,MAAnC,CAA0C,UAAA+iC,MAAM;AAAA,qBAAIA,MAAM,CAAC3d,SAAX;AAAA,aAAhD,EAAsE9pB,MAA7E;AACH;AACJ;;;4BAE0B;AACvB,iBAAO,KAAKwgB,KAAL,CAAWosB,uBAAX,CAAmC5sC,MAA1C;AACH;AAED;;;;4BACmB;AACf;AACA,cAAI,CAAC,KAAKwgB,KAAV,EAAiB;AACb,mBAAO,8BAAP;AACH;;AACD,cAAM8G,KAAK,GAAG,KAAK9G,KAAL,CAAW8G,KAAzB;;AACA,cAAMmb,GAAG,GAAG,KAAKzX,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACqf,QAAD;AAAA,mBAAcA,QAAQ,CAAC5Q,EAAT,KAAgBuX,KAAK,CAACob,WAApC;AAAA,WAAzB,CAAZ;;AACA,2BAAUD,GAAG,GAAGA,GAAG,CAAC5oC,IAAJ,GAAW,IAAd,GAAqB,EAAlC,SAAuCytB,KAAK,CAACztB,IAA7C;AACH;;;;MAvD0C,OAAAU,a;;AAL/C;;;uBAKagyE,yB,EAAyB,2C,EAAA,4C;AAAA,K;;;YAAzBA,yB;AAAyB,2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,mc;AAAA;AAAA;ACbtC;;;;AAA2B;;;;;;;;;2BDadA,yB,EAAyB;cALrC,OAAA3uB,SAKqC;eAL3B;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD;AAHJ,S;AAK2B,Q;;;;;;;;gBAEjC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEvBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIY;AAMI;AAAA;AAAA;AAAA;AAAA;AANJ;AAUA;;;;QDNC0uB,6B;AALb;AAAA;;AAQI;AACgB,aAAAC,UAAA,GAAsB,KAAtB;AAChB;;AACiB,aAAAlhE,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAiCpB;AA7BG;;;;;+BACW;;;AACP,0BAAG,KAAK7hC,IAAL,CAAUquB,QAAb,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAE9U,YAAvB,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAE/xB,KAArC,EAA2C;AACvC,0BAAAknC,uBAAA,CAAwB,KAAK1uB,IAA7B;AACH;;AAED,eAAKA,IAAL,CAAU4mC,gBAAV;AACA,eAAK5mC,IAAL,CAAU2e,sBAAV;AACA;;AACA,cAAI,KAAK3e,IAAL,CAAUyH,KAAd,EAAqB;AACjB,iBAAKzV,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,kBAAI,EAAE,MAAR;AAAgBzC,kBAAI,EAAE;AAAtB,aAAhB;AACH,WAFD,MAEO,IAAI,KAAKqsE,SAAT,EAAoB;AACvB,iBAAKA,SAAL,CAAehxE,aAAf,CAA6BixE,cAA7B,CAA4C;AACxC9rB,sBAAQ,EAAE,QAD8B;AAExClqB,mBAAK,EAAE,OAFiC;AAGxCi2C,oBAAM,EAAE;AAHgC,aAA5C;AAKH;AACJ;AAED;;;;mCACe;AACX,eAAKrhE,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,gBAAI,EAAE,UAAR;AAAoBzC,gBAAI,EAAE;AAA1B,WAAhB;AACH;AAED;;;;oCACgB;AACZ,eAAKkL,KAAL,CAAW+wC,IAAX,CAAgB;AAAEx5C,gBAAI,EAAE,OAAR;AAAiBzC,gBAAI,EAAE;AAAvB,WAAhB;AACH;;;;;;AA3CL;;;uBAKamsE,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACV1C;AACI;AAAyB;AAAA,mBAAY,IAAAxgE,IAAA,EAAZ;AAAkB,WAAlB;AACrB;AACI;AACJ;AACA;AACI;AAWA;AAAA;AAEA;AACJ;AACJ;AACJ;;;;AArBU;AAAA;AAEkB;AAAA;AAOZ;AAAA;;;;;;;;;2BDAHwgE,6B,EAA6B;cALzC,OAAA7uB,SAKyC;eAL/B;AACPljD,kBAAQ,EAAE,qBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD;AAHJ,S;AAK+B,Q;;gBAErC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAoD,S;iBAAU,W,EAAa;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AElB5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8BavwC,c;;;;AA3Bb;;YA2BaA;;;;yBAAAA,c;AAAc,O;AAAA,gBAZd,CACL,SAAA7X,YADK,EAEL,gBAAA+tE,mBAFK,EAGL,QAAAjlB,WAHK,EAIL,QAAAC,mBAJK,EAKL,kBAAAH,oBALK,EAML,KAAAI,QANK,CAYc;;;;+EAAdnxC,c,EAAc;AAAA,uBAzBnB,iBAAA67D,6BAyBmB,EAxBnB,qBAAAxD,wBAwBmB,EAvBnB,uBAAAiC,yBAuBmB,EAtBnB,oBAAAN,4BAsBmB,EArBnB,iBAAA2B,yBAqBmB,EApBnB,qBAAAtD,wBAoBmB,EAnBnB,uBAAAyB,iCAmBmB,EAlBnB,0BAAA1D,qBAkBmB,EAjBnB,0BAAAqC,oCAiBmB,EAhBnB,iBAAAmB,8BAgBmB,EAfnB,qBAAApB,6BAemB,EAdnB,iCAAA0D,2BAcmB;AAdQ,kBAG3B,SAAA/zE,YAH2B,EAI3B,gBAAA+tE,mBAJ2B,EAK3B,QAAAjlB,WAL2B,EAM3B,QAAAC,mBAN2B,EAO3B,kBAAAH,oBAP2B,EAQ3B,KAAAI,QAR2B,CAcR;AANX,kBAGR,0BAAAsnB,oCAHQ;AAMW,O;AAHiB,K;;;;;2BAG/Bz4D,c,EAAc;cA3B1B,OAAA5X,QA2B0B;eA3BjB;AACN6B,sBAAY,EAAE,CACV,iBAAA4xE,6BADU,EAEV,qBAAAxD,wBAFU,EAGV,uBAAAiC,yBAHU,EAIV,oBAAAN,4BAJU,EAKV,iBAAA2B,yBALU,EAMV,qBAAAtD,wBANU,EAOV,uBAAAyB,iCAPU,EAQV,0BAAA1D,qBARU,EASV,0BAAAqC,oCATU,EAUV,iBAAAmB,8BAVU,EAWV,qBAAApB,6BAXU,EAYV,iCAAA0D,2BAZU,CADR;AAeN7zE,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,gBAAA+tE,mBAFK,EAGL,QAAAjlB,WAHK,EAIL,QAAAC,mBAJK,EAKL,kBAAAH,oBALK,EAML,KAAAI,QANK,CAfH;AAuBNjnD,iBAAO,EAAE,CACL,0BAAAuuE,oCADK;AAvBH,S;AA2BiB,Q;;;2BAlBnB,0BAAArC,qB,EAAqB,inIAPrB,iBAAAyF,6BAOqB,EAFrB,qBAAAxD,wBAEqB,EALrB,uBAAAiC,yBAKqB,EAJrB,oBAAAN,4BAIqB,EAHrB,iBAAA2B,yBAGqB,EADrB,uBAAA7B,iCACqB,EAArB,0BAAA1D,qBAAqB,EACrB,0BAAAqC,oCADqB,EAErB,iBAAAmB,8BAFqB,EAGrB,qBAAApB,6BAHqB,EAIrB,iCAAA0D,2BAJqB,C,EAIM,uS;;;;;;;;;;;;;;;;;;;;ACnCnC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACKQ;AACI;AAAG;AAA6C;AAChD;AACI;AAEJ;AACJ;;;;;;AAVJ;AACI;AACI;AACJ;AACA;AAOJ;;;;;;;;AATa;AAAA;AAEa;AAAA,+CAAoC,UAApC,EAAoC,GAApC;;;;;;;;AAS9B;AACI;AACI;AAAoD;AAAM;AAC1D;AAAkC;AAAA;AAAA;AAAA,iBAAS,OAAAthE,KAAA;AAAA,oBAAqB;AAArB,YAAT;AAAyC,SAAzC;AAC9B;AACJ;AACJ;AACJ;;;;;;AAEI;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAmB;AACzC;AACJ;;;;;;AAGA;AACI;AAAG;AAAQ;AAAoB;AAAmB;AAAO;AAC7D;;;;QD3BSshE,2B,GALb;AAAA;;AAMI;AACiB,WAAAthE,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAKpB,K;;AAZD;;;uBAKayxB,2B;AAA2B,K;;;YAA3BA,2B;AAA2B,+C;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gW;AAAA;AAAA;ACRxC;AACI;AAYJ;AACA;AAQA;AAUA;;;;;;AA/BU;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAaU;AAAA;;;;;;;;;2BDNPA,2B,EAA2B;cALvC,OAAAlvB,SAKuC;eAL7B;AACTljD,kBAAQ,EAAE,0BADD;AAETmjD,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK6B,Q;;gBAEnC,OAAAC;;;;;;;;;;;;;;;;;;;;;;;;AEVL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAuBa8oB,c;;;;AApBb;;YAoBaA;;;;yBAAAA,c;AAAc,O;AAAA,gBAVd,CACL,SAAA9tE,YADK,EAEL,gBAAA+tE,mBAFK,EAGL,QAAAjlB,WAHK,EAIL,QAAAC,mBAJK,EAKL,kBAAAH,oBALK,EAML,YAAAorB,eANK,CAUc;;;;+EAAdlG,c,EAAc;AAAA,uBAlBnB,kCAAAmG,4BAkBmB,EAjBnB,kCAAAC,4BAiBmB,EAhBnB,oBAAAC,8BAgBmB,EAfnB,8BAAAC,uCAemB,EAdnB,yBAAAC,mCAcmB,EAbnB,qBAAAC,+BAamB,EAZnB,4BAAAC,8BAYmB;AAZW,kBAG9B,SAAAv0E,YAH8B,EAI9B,gBAAA+tE,mBAJ8B,EAK9B,QAAAjlB,WAL8B,EAM9B,QAAAC,mBAN8B,EAO9B,kBAAAH,oBAP8B,EAQ9B,YAAAorB,eAR8B;AAYX,O;AAJJ,K;;;;;2BAIVlG,c,EAAc;cApB1B,OAAA7tE,QAoB0B;eApBjB;AACN6B,sBAAY,EAAE,CACV,kCAAAmyE,4BADU,EAEV,kCAAAC,4BAFU,EAGV,oBAAAC,8BAHU,EAIV,8BAAAC,uCAJU,EAKV,yBAAAC,mCALU,EAMV,qBAAAC,+BANU,EAOV,4BAAAC,8BAPU,CADR;AAUNr0E,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,gBAAA+tE,mBAFK,EAGL,QAAAjlB,WAHK,EAIL,QAAAC,mBAJK,EAKL,kBAAAH,oBALK,EAML,YAAAorB,eANK,CAVH;AAkBNjyE,iBAAO,EAAE;AAlBH,S;AAoBiB,Q;;;;;;;;;;;;;;;;;;;;;;ACtC3B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaY;AAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAAmB;;;;;AAAnB;AAAA;;;;;;;;AAU9H;AACI;AAAgF;AAAA;AAAA;AAAA;AAAA;AAAqC;AACzH;;;;;;AADqB;AAAA,yCAAc,oBAAd,EAAc,mCAAd;;;;;;AARzB;AAOI;AAGJ;;;;;AARI;AAKc;AAAA,mEAAkE,sBAAlE,EAAkE,gBAAlE;;;;;;AAIlB;AACI;AACI;AACI;AACJ;AACJ;AACJ;;;;;;AAGA;AACI;AACI;AAA0B;AAAK;AACnC;AACA;AAAkB;AAA4B;AAClD;;;;;;AALA;;;;;AAA+B;;;;QD5BtByyE,yB;;;;;AAyBZ,yCACSviD,IADT,EAESwiD,iBAFT,EAGSz5D,KAHT,EAISuX,SAJT,EAKSpX,KALT,EAMS+pC,KANT,EAMmC;AAAA;;AAAA;;AAClC;AANQ,iBAAAjzB,IAAA,GAAAA,IAAA;AACA,iBAAAwiD,iBAAA,GAAAA,iBAAA;AACA,iBAAAz5D,KAAA,GAAAA,KAAA;AACA,iBAAAuX,SAAA,GAAAA,SAAA;AACA,iBAAApX,KAAA,GAAAA,KAAA;AACA,iBAAA+pC,KAAA,GAAAA,KAAA;AA9BT;AACA;;AACA;;AACO,iBAAA3nC,OAAA,GAAmB,IAAnB;AACP;AACA;;AACA;;AAEO,iBAAAm3D,SAAA,GAAoB,EAApB;AAEA,iBAAAC,iBAAA,GAA+B,EAA/B;AAEA,iBAAAC,YAAA,GAA8D;AAAE5jE,iBAAO,EAAE,iBAAX;AAA8B/I,eAAK,EAAE,iBAArC;AAAwDqlB,cAAI,EAAE;AAA9D,SAA9D;AAEA,iBAAAwwC,QAAA,GAAoB,KAApB;AACA,iBAAA+W,cAAA,GAA4B,EAA5B;AAe4B;AAElC;;;;mCAEc;AAAA;;AACd,eAAK/xE,YAAL,CAAkB,aAAlB,EAAiC,KAAKkY,KAAL,CAAWgC,MAAX,CAAkB,OAAAC,iBAAlB,EAC/BpH,IAD+B,CAC1B,YAAAsH,IAAA,CAAK,CAAL,CAD0B,EAE/Bna,SAF+B,CAErB,UAACka,IAAD,EAAgB;AAC1B;AACA,oBAAI,CAAC0J,WAAL,GAAmB,IAAI,cAAAwQ,IAAJ,CAASla,IAAT,CAAnB;;AACA,oBAAI,CAAC2mB,aAAL;AACA,WAN+B,CAAjC;AASA,eAAK/gC,YAAL,CACC,UADD,EAEC,KAAKmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,UAAC8Y,CAAD;AAAA,mBAAO,QAAI,CAAC8K,WAAL,IAAoB,QAAI,CAACid,aAAL,EAA3B;AAAA,WAA9C,CAFD;;AAKA,eAAK1oB,KAAL,CAAWyZ,iBAAX,CAA6B,YAAM;AAClC,oBAAI,CAACC,QAAL,CAAc,YAAd,EAA4B,YAAM;AACjC;AACA,sBAAI,CAACgP,aAAL;AACA,aAHD,EAGG,KAAK,IAHR;AAIA,WALD;;AAOA,eAAKixC,kBAAL,GAA0B,CACzB;AAAE9jE,mBAAO,EAAE,iBAAX;AAA8B/I,iBAAK,EAAE,SAArC;AAAgDqlB,gBAAI,EAAE;AAAtD,WADyB,EAEzB;AAAEtc,mBAAO,EAAE,gBAAX;AAA6B/I,iBAAK,EAAE,QAApC;AAA8CqlB,gBAAI,EAAE;AAApD,WAFyB,EAGzB;AAAEtc,mBAAO,EAAE,8BAAX;AAA2C/I,iBAAK,EAAE,aAAlD;AAAiEqlB,gBAAI,EAAE;AAAvE,WAHyB,EAIzB;AAAEtc,mBAAO,EAAE,8BAAX;AAA2C/I,iBAAK,EAAE,aAAlD;AAAiEqlB,gBAAI,EAAE;AAAvE,WAJyB,CAA1B;AAOA,eAAKsnD,YAAL,GAAoB;AAAE5jE,mBAAO,EAAE,iBAAX;AAA8B/I,iBAAK,EAAE,iBAArC;AAAwDqlB,gBAAI,EAAE;AAA9D,WAApB;AACA;;;wCAEsB;AAAA;;AACtB,cAAI,CAAC,KAAK2E,IAAL,CAAUrK,QAAX,IAAuB,CAAC,KAAKhB,WAAjC,EAA8C;AAC7C;AACA;;AAID,eAAK9jB,YAAL,CAAkB,YAAlB,EAAgC,KAAK2xE,iBAAL,CAAuB5wC,aAAvB,CAC/B;AACC,qBAAS,KAAKjd,WAAL,CAAiBzQ,KAD3B;AAEC,6BAAiB,KAAK8b,IAAL,CAAUrK,QAAV,CAAmB5Q;AAFrC,WAD+B,EAK7BhU,SAL6B,CAKnB,UAACiQ,GAAD,EAAS;mBAAA,CACrB;;;AACA,gBAAI8hE,YAAY,GAAG,EAAnB;AACA,gBAAMC,YAAY,GAAG,OAAA/hE,GAAG,CAAC1G,OAAJ,MAAW,IAAX,IAAW,aAAX,GAAW,MAAX,GAAW,GAAEZ,MAAF,CAAS,UAAAspE,IAAI;AAAA,qBAAKA,IAAI,CAACC,oBAAL,KAA8B,mBAA/B,GAAsD,IAAtD,GAA6D,CAACH,YAAY,CAACnoE,IAAb,CAAkBqoE,IAAlB,CAAlE;AAAA,aAAb,CAAX,KAAuH,EAA5I;AACAF,wBAAY,CAAC9tE,MAAb,IAAuB,QAAI,CAACkuE,sBAAL,CAA4BJ,YAA5B,CAAvB;AAEC,oBAAI,CAACF,cAAL,GAAsBO,SAAS,CAACJ,YAAD,CAA/B,CANoB,CAOrB;;AACC,oBAAI,CAACK,aAAL,GARoB,CASrB;;;AACA,oBAAI,CAAC93D,OAAL,GAAe,KAAf;;AACA,oBAAI,CAAC2nC,KAAL,CAAWoB,aAAX;AACC,WAjB8B,EAkB/B,UAACvjC,KAAD,EAAW;AACVtY,mBAAO,CAACV,GAAR,CAAYgZ,KAAZ;AACA,oBAAI,CAAC4xD,iBAAL,GAAyB,EAAzB;AACA,oBAAI,CAACp3D,OAAL,GAAe,KAAf;;AACA,oBAAI,CAAC2nC,KAAL,CAAWoB,aAAX;AACA,WAvB8B,CAAhC;AAyBA;AAED;;AACA;;;;;;;;kCAKiBjjD,K,EAAeoK,I,EAAe;AAC9C,iBAAOA,IAAI,CAACuJ,EAAL,IAAW3T,KAAlB;AACA;AAED;;;;;;;sCAIqBiyE,Y,EAA6D;AACjF,eAAKV,YAAL,GAAoBU,YAApB,CADiF,CAEjF;;AACA,eAAKD,aAAL;AACA;AAED;;;;;;;qCAIoB5xC,Q,EAAmB;AACtC,cAAM1gC,KAAK,GAAGqyE,SAAS,CAAC3xC,QAAD,CAAvB;;AACA,kBAAQ,KAAKmxC,YAAL,CAAkB3sE,KAA1B;AACC,iBAAK,SAAL;AACClF,mBAAK,CAACkK,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,CAAC,CAAC2J,WAAF,GAAgB1J,CAAC,CAAC0J,WAA5B;AAAA,eAAX;AACA;;AACD,iBAAK,QAAL;AACC9T,mBAAK,CAACkK,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,CAAC,CAAC0J,WAAF,GAAgB3J,CAAC,CAAC2J,WAA5B;AAAA,eAAX;AACA;;AACD,iBAAK,aAAL;AACC9T,mBAAK,CAACkK,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,CAAC,CAACyrB,aAAF,GAAkB1rB,CAAC,CAAC0rB,aAA9B;AAAA,eAAX;AACA;;AACD,iBAAK,aAAL;AACC71B,mBAAK,CAACkK,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,CAAC,CAAC0rB,aAAF,GAAkBzrB,CAAC,CAACyrB,aAA9B;AAAA,eAAX;AACA;;AACD;AACC71B,mBAAK,CAACkK,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,CAAC,CAAC2J,WAAF,GAAgB1J,CAAC,CAAC0J,WAA5B;AAAA,eAAX;AACA;AAfF;;AAkBA,eAAK89D,iBAAL,GAAyB5xE,KAAzB;AACA,eAAKmiD,KAAL,CAAWoB,aAAX;AACA;;;2CAEyB5sC,O,EAAkB;AAC3C,cAAIiV,GAAG,GAAG,CAAV;AACAjV,iBAAO,CAACuf,QAAR,CAAiB91B,OAAjB,CAAyB,UAAAyI,EAAE;AAAA,mBAAKA,EAAE,SAAF,IAAAA,EAAE,WAAF,GAAE,MAAF,GAAAA,EAAE,CAAE7I,KAAJ,CAAUI,OAAV,CAAkB,UAAAsK,IAAI;AAAA,qBAAIkhB,GAAG,IAAIlhB,IAAI,CAAC24B,MAAhB;AAAA,aAAtB,CAAL;AAAA,WAA3B;AACA,iBAAOzX,GAAP;AACA;;;sCAEoB1mB,K,EAAgB;AACpC;AACA,cAAMk9D,UAAU,GAAG,KAAKuP,SAAL,CAAejoE,WAAf,EAAnB;AAEC,cAAMqmB,QAAQ,GAAI,KAAK+hD,cAAL,CAAoBlpE,MAApB,CAA4B,UAACC,EAAD,EAAQ;;;AAAA,gBAC9CmqB,IAD8C,GACkFnqB,EADlF,CAC9CmqB,IAD8C;AAAA,gBACxC2B,SADwC,GACkF9rB,EADlF,CACxC8rB,SADwC;AAAA,gBAC7BE,SAD6B,GACkFhsB,EADlF,CAC7BgsB,SAD6B;AAAA,gBAClBO,MADkB,GACkFvsB,EADlF,CAClBusB,MADkB;AAAA,gBACVX,YADU,GACkF5rB,EADlF,CACV4rB,YADU;AAAA,gBACIC,SADJ,GACkF7rB,EADlF,CACI6rB,SADJ;AAAA,gBACe89C,WADf,GACkF3pE,EADlF,CACe2pE,WADf;AAAA,gBAC4B5lE,WAD5B,GACkF/D,EADlF,CAC4B+D,WAD5B;AAAA,gBACyCwhB,UADzC,GACkFvlB,EADlF,CACyCulB,UADzC;AAAA,gBACqDC,QADrD,GACkFxlB,EADlF,CACqDwlB,QADrD;AAAA,gBAC+D0J,cAD/D,GACkFlvB,EADlF,CAC+DkvB,cAD/D;AAGtD,mBAAO,OAAA/E,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEj1B,IAAN,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAE2L,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAAV,OAA6D;kBACnEpvC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAElE,U,MAAU,I,IAAA,a,GAAA,M,GAAA,GAAEplB,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CADV,OAC6D;kBACnEpvC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEy/C,e,MAAe,I,IAAA,a,GAAA,M,GAAA,GAAE/oE,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAFf,OAE6D;wBACnEpvC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEnO,Q,MAAQ,I,IAAA,a,GAAA,M,GAAA,GAAEwF,O,MAAO,I,IAAA,a,GAAA,M,GAAA,GAAE3gB,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAHjB,OAG6D;kBACnEpvC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAExH,KAAN,CAAYztB,I,MAAI,I,IAAA,a,GAAA,M,GAAA,GAAE2L,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAJV,OAI+D;kBAErEztC,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAE52B,I,MAAI,I,IAAA,a,GAAA,M,GAAA,GAAE2L,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CANT,KAM+D;AACpEvtC,qBAAS,WAAIA,SAAS,CAAC,MAAD,CAAb,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEnrB,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAArB,CAPJ,IAO8E;AACnFhtC,kBAAM,WAAIA,MAAM,CAAC,MAAD,CAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE1rB,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAAlB,CARD,MAQ2E;AACjF3tC,wBAAY,SAAZ,IAAAA,YAAY,WAAZ,GAAY,MAAZ,GAAAA,YAAY,CAAE/qB,WAAd,GAA4B2R,QAA5B,CAAqC+mD,UAArC,CATM,MAUN1tC,SAAS,SAAT,IAAAA,SAAS,WAAT,GAAS,MAAT,GAAAA,SAAS,CAAE3Q,IAAX,CAAgB,UAAA2uD,GAAG,EAAI;AAAD;;AAAA,2BAACA,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAE30E,IAAN,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAE2L,WAAF,GAAgB2R,QAAhB,CAAyB+mD,UAAzB,CAAV;AAA8C,aAApE,CAVM,OAUoE;AAE1EoQ,uBAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAE9oE,WAAb,GAA2B2R,QAA3B,CAAoC+mD,UAApC,CAZM,KAYqE;AAC3E,mBAAAn8D,oBAAA,CAAqBusE,WAArB,EAAkC9oE,WAAlC,GAAgD2R,QAAhD,CAAyD+mD,UAAzD,CAbM,IAauE;AAC7E,mBAAAn8D,oBAAA,CAAqB8xB,cAAc,CAACz0B,UAAf,CAA0B,aAA1B,CAArB,EAA+DoG,WAA/D,GAA6E2R,QAA7E,CAAsF+mD,UAAtF,CAdM,IAcoG;AAC1G;AACA;AACA;AACAA,sBAAU,CAAC/mD,QAAX,CAAoB,CAAD,KAACzO,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAE5K,IAAb,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE2wE,WAAF,CAAcjpE,WAAd,EAArC,CAlBM,IAkBqE;AAC3E04D,sBAAU,CAAC/mD,QAAX,CAAoB,CAAD,KAACzO,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAE5K,IAAb,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE4wE,YAAF,CAAelpE,WAAf,EAArC,CAnBM,IAmBuE;AAG7E,mBAAAjD,mBAAA,GAAsBsd,IAAtB,CAA2B,UAAA3a,MAAM;AAAA,qBAAIwD,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAEtJ,UAAb,CAAwB8F,MAAxB,EAAgCM,WAAhC,GAA8C2R,QAA9C,CAAuD+mD,UAAvD,CAAJ;AAAA,aAAjC,CAtBM,IAuBN,OAAA37D,mBAAA,GAAsBsd,IAAtB,CAA2B,UAAA3a,MAAM;AAAA,qBAAI2uB,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAEz0B,UAAhB,CAA2B8F,MAA3B,EAAmCM,WAAnC,GAAiD2R,QAAjD,CAA0D+mD,UAA1D,CAAJ;AAAA,aAAjC,CAvBM,KAyBNh0C,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAE1kB,WAAZ,GAA0B2R,QAA1B,CAAmC+mD,UAAnC,CAzBM,MA0BN/zC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAE3kB,WAAV,GAAwB2R,QAAxB,CAAiC+mD,UAAjC,CA1BM,CAAP;AA6BC,WAhCiB,CAAlB;AAkCA,eAAKyQ,YAAL,CAAkB9iD,QAAlB;AACD;;;+CAE6BiiD,Y,EAAuB;AAAA;;AACpD;AACA,eAAKxiD,SAAL,CAAesjD,eAAf,CAA+Bd,YAA/B,EAA6C/xE,SAA7C,CAAuD,UAAA8yE,QAAQ;AAAA,mBAAI,QAAI,CAAC5wB,KAAL,CAAWoB,aAAX,EAAJ;AAAA,WAA/D,EACA,UAACvjC,KAAD,EAAW;AACVtY,mBAAO,CAACV,GAAR,CAAYgZ,KAAZ;;AACA,oBAAI,CAACmiC,KAAL,CAAWoB,aAAX;AACA,WAJD;AAMA;;;;MA5M6C,OAAA9kD,a;;AAN/C;;;uBAMagzE,yB,EAAyB,4C,EAAA,iD,EAAA,8B,EAAA,wC,EAAA,+B,EAAA,0C;AAAA,K;;;YAAzBA,yB;AAAyB,8C;AAAA,+C;AAAA,e;AAAA,a;AAAA,47C;AAAA;AAAA;AChBtC;AACI;AACI;AACI;AAA4B;AAAA;AAAA,aAAuB,OAAvB,EAAuB;AAAA,mBAAU,IAAAa,aAAA,eAAV;AAAkC,WAAzD;AAA5B;AAEP;AACC;AAAyC;AAASzmB,kBAAM,CAACr6C,eAAP;AAA0B,eAAF,UAAE,GAAU,EAAV;AAAc,uBAAA8gE,aAAA;AAAwB,WAAzE;AAA2E;AACrH;AACA;AACC;AACD;AACG;AAEA;AAAmF;AAAA;AAAA;AAC/E;AAAoD;AAAkC;AACtF;AACI;AACJ;AACJ;AAEA;AACI;AACJ;AACJ;AACA;AAWA;AAOJ;AACA;;;;;;;;AAxCwC;AAAA;AAEqC;AAAA;AAQhE;AAAA;AACmD;AAAA;AAE9B;AAAA;AAKP;AAAA;AAInB;AAAA,qGAAmD,UAAnD,EAAmD,GAAnD;AAUoB;AAAA;;;;;;;;;;2BDnBfb,yB,EAAyB;cANrC,OAAA3vB,SAMqC;eAN3B;AACVljD,kBAAQ,EAAE,yBADA;AAEVmjD,qBAAW,EAAE,iCAFH;AAGVC,mBAAS,EAAE,CAAC,iCAAD,CAHD;AAIV0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJ/B,S;AAM2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBtC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJK;AACC;AACA;AACE;AAAM;AAAiB;AACzB;AACF;;;;;AAFU;AAAA;;;;;;;;;;;;;;;;AANV;AAEC;AAAwG;AAAA;AAAA;AAASiI,gBAAM,CAACr6C,eAAP;AAA0B,gBAAF,iBAAE,GAAmB,KAAnB;AAA0B,iBAAF,oDAAE;AAAF,SAA3D;AAAwG;AAChN;AAMD;;;;;AAPW;AAAA;AACQ;AAAA;;;;;;;;;;;;AAWlB;AACC;AACA;AAEG;AAEC;AAMF;AACF;AACF;;;;;AAbyB;AAAA;AAKnB;AAAA;;;;;;;;;;;;;;;;AAVN;AAEC;AAA6F;AAAA;AAAA;AAASq6C,gBAAM,CAACr6C,eAAP;AAA0B,gBAAF,kBAAE,GAAoB,KAApB;AAA2B,iBAAF,kDAAE;AAAF,SAA5D;AAAqG;AAElM;AAeF;;;;;AAjBY;AAAA;AAEQ;AAAA;;;;;;;;;;;;AAuDnB;AACC;AAA6E;AAAe;AAC7F;;;;;AADoC;AAAA;AAA0C;AAAA;;;;;;;;;;;;;;AAKhF;AAKC;AACC;AACD;AACA;AACC;AAAoB;AAAU;AAC9B;AAAqB;AAAyB;AAC/C;AACD;;;;;AANY;AAAA;AAIW;AAAA;;;;;;;;;;;;;;;;;;;;AD5EzB,QAAMwhE,MAAM,GAA6B,EAAzC;;QAqBaC,8B;;;;;AA8DT,8CACYx1D,QADZ,EAEY+R,SAFZ,EAGY0jD,qBAHZ,EAIY7zB,OAJZ,EAKYlwB,OALZ,EAMY/W,KANZ,EAOY+pC,KAPZ,EAOoC;AAAA;;AAAA;;AAEhC;AARQ,iBAAA1kC,QAAA,GAAAA,QAAA;AACA,iBAAA+R,SAAA,GAAAA,SAAA;AACA,iBAAA0jD,qBAAA,GAAAA,qBAAA;AACA,iBAAA7zB,OAAA,GAAAA,OAAA;AACA,iBAAAlwB,OAAA,GAAAA,OAAA;AACA,iBAAA/W,KAAA,GAAAA,KAAA;AACA,iBAAA+pC,KAAA,GAAAA,KAAA;AAjEZ;;AACU,iBAAAgxB,MAAA,GAAS,IAAI,OAAA5zB,YAAJ,EAAT;AAeH,iBAAA6zB,gBAAA,GAA4B,KAA5B;AAEA,iBAAAC,iBAAA,GAA6B,KAA7B;AAIA,iBAAAC,YAAA,GAAuB,EAAvB;AACA,iBAAAC,aAAA,GAAwB,EAAxB;AACA,iBAAAC,kBAAA,GAA6B,CAA7B;AAyC6B;AAGnC;AAzCD;;;;;;AAUA;+BACc;AAAA;;AACV,cAAMj+C,OAAO,GAAGvmB,MAAM,CAACpH,IAAP,CAAY,KAAK8H,KAAL,CAAWumB,eAAvB,EAAwC,CAAxC,KAA8C,EAA9D;AACA,cAAMvR,KAAK,GAAG,KAAKyK,OAAL,CAAa3pB,IAAb,CAAkB+vB,OAAlB,KAA8B,KAAK7lB,KAAL,CAAWsjB,IAAvD;AACA,eAAKryB,OAAL,CACI,MADJ,EAEI,YAAM;AACF,oBAAI,CAAC0+C,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC5C/pD,kBAAI,EAAE;AACFzC,qBAAK,EAALA,KADE;AAEF/N,uBAAO,EAAE,IAAI,cAAAsP,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,QAAI,CAACvW,KAAL,CAAW8wB,SAAX,EAAN,CAAC,EAA2B;AAAEjL,yBAAO,EAAPA,OAAF;AAAWvC,sBAAI,EAAEtO;AAAjB,iBAA3B,CAAZ;AAFP,eADsC;AAK5CijC,uBAAS,EAAE,KALiC;AAM5CC,2BAAa,EAAE;AAN6B,aAAhD;;AAQA,oBAAI,CAACnqC,QAAL,CAAc9b,GAAd,CAAkB,4BAAlB,EAAgD,QAAI,CAAC+N,KAArD;AACH,WAZL,EAaI,EAbJ;AAeH;;;mCAaO;AACJ,eAAK8jE,kBAAL,GAA0B,CAA1B;AACD,eAAKC,UAAL;AACF;;;qCAEmB;AAAA;;;;AAChB,cAAMxsE,IAAI,GAAG,KAAKyI,KAAL,CAAW+kB,YAAxB;AACA,eAAK9O,WAAL,aAAsB1e,IAAI,CAACwlC,MAAL,CAAY,CAAZ,EAAer7B,WAAf,EAAtB,SAAqDnK,IAAI,CAACa,KAAL,CAAW,CAAX,CAArD;AACA,cAAMouB,QAAQ,GAA6B,KAAKxmB,KAAL,CAAWwmB,QAAtD;AACA,eAAKpQ,YAAL,GAAoB,CAAC,CAACoQ,QAAQ,CAAC1wB,IAAT,CAAc,UAAC+zB,KAAD;AAAA,mBAAW,QAAI,CAAC7pB,KAAL,CAAWgV,KAAX,CAAiBtR,KAAjB,KAA2BmmB,KAAK,CAACC,WAA5C;AAAA,WAAd,CAAtB;AACA,eAAK85C,YAAL,GAAoB,YAAK5jE,KAAL,CAAWolB,KAAX,CAAiBlsB,MAAjB,CAAwB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAAC5B,IAAH,KAAY,UAAhB;AAAA,WAA1B,EAAsD,CAAtD,OAAwD,IAAxD,IAAwD,aAAxD,GAAwD,MAAxD,GAAwD,GAAEiS,OAA1D,KAAqE,EAAzF;AACA,eAAKq6D,aAAL,GAAqB,YAAK7jE,KAAL,CAAWolB,KAAX,CAAiBlsB,MAAjB,CAAwB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,CAAC5B,IAAH,KAAY,WAAhB;AAAA,WAA1B,EAAuD,CAAvD,OAAyD,IAAzD,IAAyD,aAAzD,GAAyD,MAAzD,GAAyD,GAAEiS,OAA3D,KAAsE,EAA3F;AAEA,cAAMw6D,WAAW,GAAG,KAAKhkE,KAAL,CAAWqoB,cAAX,CAA0Bz0B,UAA1B,CAAqC,aAArC,CAApB;AACA,cAAMqwE,WAAW,GAAG,KAAKjkE,KAAL,CAAWqoB,cAAX,CAA0Bz0B,UAA1B,CAAqC,QAArC,EAA+CmJ,iBAA/C,EAApB;AACA,eAAKmnE,YAAL,aAAwB,OAAA3tE,oBAAA,CAAqBytE,WAArB,CAAxB,gBAAiEC,WAAjE;AACA,eAAK3xE,IAAL,GAAa,OAAAiE,oBAAA,CAAqB,KAAKyJ,KAAL,CAAW8iE,WAAhC,CAAb;AACA,eAAKqB,aAAL,aAAwB,WAAKnkE,KAAL,CAAWsjB,IAAX,CAAgBnO,QAAhB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAE9mB,IAAlD,cAA0D,KAAK2R,KAAL,CAAWsjB,IAAX,CAAgBxH,KAAhB,CAAsBztB,IAAhF,cAAwF,WAAK2R,KAAL,CAAWgV,KAAX,CAAiBG,QAAjB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEpN,IAAnH;AACA,eAAK0qC,KAAL,CAAWoB,aAAX;AACH;AAGD;;;;;;+BAGc7zC,K,EAAc;AAAA;;AAC5BA,eAAK,CAAC8B,eAAN;AACI,eAAK2hE,MAAL,CAAY1yB,IAAZ,CAAiB,IAAjB;;AACA,cAAMK,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC;AACjDr+B,gBAAI,EAAE;AACF8F,mBAAK,EAAE,iBADL;AAEF5T,qBAAO,oBAAa,KAAK3J,KAAL,CAAWilB,SAAX,CAAqB52B,IAAlC,6BAAwD,KAAK2R,KAAL,CAAWgV,KAAX,CAAiB3mB,IAAzE,mBAAqF,KAAK2R,KAAL,CAAW0e,UAAhG,kBAAkH,KAAK1e,KAAL,CAAWokE,aAA7H,iBAAiJ,KAAKpkE,KAAL,CAAW8iE,WAA5J,CAFL;AAGFp5D,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eAHJ;AAIFpG,oBAAM,EAAE;AAJN,aAD2C;AAOjD00C,qBAAS,EAAE,KAPsC;AAQvDC,yBAAa,EAAE;AARwC,WAAzC,CAAZ;;AAUA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;;AAC1D;;;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,sBAAI,CAAC1K,OAAL,GAAe,IAAf;;AACA,kBAAM9K,MAAK,GAAG,QAAI,CAACA,KAAL,CAAWiO,MAAX,EAAd;;AACA,sBAAI,CAAC6R,SAAL,CACKmmB,MADL,CACY,QAAI,CAACjmC,KAAL,CAAWuE,EADvB,EAC2B;AACnBmL,yBAAS,EAAE,IADQ;AAEnBvE,oBAAI,EAAE,QAAI,CAACnL,KAAL,CAAWilB,SAAX,CAAqBvhB,KAFR;AAGnBsf,0BAAU,EAAE,CAAF,KAAE,QAAI,CAAChjB,KAAL,CAAWgV,KAAX,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEtR,KAHX;AAInB6e,uBAAO,EAAE,QAAI,CAACviB,KAAL,CAAWuiB,OAJD;AAKnB/vB,qBAAK,EAAEwN,MAAK,CAACxN,KALM;AAMnBsrB,mBAAG,EAAE9d,MAAK,CAAC8d;AANQ,eAD3B,EASKvP,IATL,CAUQ,UAAC81D,eAAD,EAAqB;AACjB,wBAAI,CAACt2D,QAAL,CAAcw2B,aAAd,CAA4B,mBAA5B;;AACA,wBAAI,CAACvkC,KAAL,CAAWqW,MAAX,GAAoB,cAAA2T,cAAA,CAAeimB,QAAnC;AACAqzB,sBAAM,CAAC,QAAI,CAACtjE,KAAL,CAAWuE,EAAZ,CAAN,GAAwB,cAAAylB,cAAA,CAAeimB,QAAvC;;AACA,wBAAI,CAACuzB,qBAAL,CAA2BjoE,OAA3B,CAAmC,QAAI,CAACyE,KAAxC;;AACA,wBAAI,CAAC+N,QAAL,CAAc9b,GAAd,CAAkB,gBAAlB,EAAoCqxE,MAApC;;AACA,wBAAI,CAACx4D,OAAL,GAAe,KAAf;;AACA,wBAAI,CAAC24D,MAAL,CAAY1yB,IAAZ,CAAiB,KAAjB;;AACA,wBAAI,CAAC0B,KAAL,CAAWoB,aAAX;AACH,eAnBT,EAoBQ,YAAM;AACF,wBAAI,CAAC4vB,MAAL,CAAY1yB,IAAZ,CAAiB,KAAjB;;AACA,wBAAI,CAAChjC,QAAL,CAAcy2B,WAAd,CAA0B,0BAA1B;;AACA,wBAAI,CAAC15B,OAAL,GAAe,KAAf;;AACA,wBAAI,CAAC2nC,KAAL,CAAWoB,aAAX;AACH,eAzBT;AA2BH;;AACDzC,eAAG,CAACH,KAAJ;AACH,WAlCD;AAmCH;AAED;;;;;;gCAGejxC,K,EAAc;AAAA;;AAC9BA,eAAK,CAAC8B,eAAN;AACK,eAAK2hE,MAAL,CAAY1yB,IAAZ,CAAiB,IAAjB;;AACA,cAAMK,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC;AACjDr+B,gBAAI,EAAE;AACF8F,mBAAK,EAAE,iBADL;AAEF5T,qBAAO,oBACH,KAAK3J,KAAL,CAAWilB,SAAX,CAAqB52B,IAArB,IAA6B,KAAK2R,KAAL,CAAWilB,SADrC,6BAEW,KAAKjlB,KAAL,CAAWgV,KAAX,CAAiB3mB,IAF5B,mBAEwC,KAAK2R,KAAL,CAAW0e,UAFnD,kBAGH,KAAK1e,KAAL,CAAWokE,aAHR,iBAIA,KAAKpkE,KAAL,CAAW8iE,WAJX,CAFL;AAOFp5D,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eAPJ;AAQFpG,oBAAM,EAAE;AARN,aAD2C;AAWjD00C,qBAAS,EAAE,KAXsC;AAYjDC,yBAAa,EAAE;AAZkC,WAAzC,CAAZ;;AAcA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;;AAC1D;;;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,sBAAI,CAAC1K,OAAL,GAAe,IAAf;;AACA,kBAAM7D,OAAO,GAAG,QAAI,CAACjH,KAAL,CAAWiO,MAAX,EAAhB;;AACA,sBAAI,CAACnD,OAAL,GAAe,IAAf;;AACA,sBAAI,CAACgV,SAAL,CACKomB,OADL,CACaj/B,OAAO,CAAC1C,EADrB,EACyB;AACjB0sB,0BAAU,EAAEhqB,OAAO,CAAC1C,EADH;AAEjB0gB,yBAAS,EAAEhe,OAAO,CAACge,SAAR,CAAkBvhB,KAFZ;AAGjBsf,0BAAU,EAAE,CAAF,KAAE,QAAI,CAAChjB,KAAL,CAAWgV,KAAX,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEtR,KAHb;AAIjB6e,uBAAO,EAAEtb,OAAO,CAACsb,OAJA;AAKjB/vB,qBAAK,EAAEyU,OAAO,CAACzU,KALE;AAMjBsrB,mBAAG,EAAE7W,OAAO,CAAC6W;AANI,eADzB,EAUKvP,IAVL,CAWQ,YAAM;AACF,wBAAI,CAACR,QAAL,CAAcw2B,aAAd,CAA4B,mBAA5B;;AACA,wBAAI,CAACvkC,KAAL,CAAWqW,MAAX,GAAoB,cAAA2T,cAAA,CAAetG,QAAnC;AACA4/C,sBAAM,CAAC,QAAI,CAACtjE,KAAL,CAAWuE,EAAZ,CAAN,GAAwB,cAAAylB,cAAA,CAAetG,QAAvC;;AACA,wBAAI,CAAC8/C,qBAAL,CAA2BjoE,OAA3B,CAAmC,QAAI,CAACyE,KAAxC;;AACA,wBAAI,CAAC+N,QAAL,CAAc9b,GAAd,CAAkB,gBAAlB,EAAoCqxE,MAApC;;AACA,wBAAI,CAACx4D,OAAL,GAAe,KAAf;;AACA,wBAAI,CAAC24D,MAAL,CAAY1yB,IAAZ,CAAiB,KAAjB;;AACA,wBAAI,CAAC0B,KAAL,CAAWoB,aAAX;AACH,eApBT,EAqBQ,YAAM;AACF,wBAAI,CAAC4vB,MAAL,CAAY1yB,IAAZ,CAAiB,KAAjB;;AACA,wBAAI,CAAChjC,QAAL,CAAcy2B,WAAd,CAA0B,0BAA1B;;AACA,wBAAI,CAAC15B,OAAL,GAAe,KAAf;;AACA,wBAAI,CAAC2nC,KAAL,CAAWoB,aAAX;AACH,eA1BT;AA4BH;;AACDzC,eAAG,CAACH,KAAJ;AACH,WApCD;AAqCH;;;oCAGSjhD,O,EAAwB;AACnC;AACA,eAAK+zE,UAAL;AACA,eAAKtxB,KAAL,CAAWoB,aAAX;AACA;;;4BApLiB;AACZ,iBAAO,KAAK7zC,KAAL,CAAW9C,WAAX,CAAuBtJ,UAAvB,CAAkC,QAAlC,EAA4CmJ,iBAA5C,EAAP;AACH;AAED;;;;4BACc;AACV,iBAAO,KAAKiD,KAAL,CAAW7C,SAAX,CAAqBvJ,UAArB,CAAgC,QAAhC,EAA0CmJ,iBAA1C,EAAP;AACH;;;;MAvC+C,OAAAhO,a;;AAnBpD;;;uBAmBaw0E,8B,EAA8B,2C,EAAA,wC,EAAA,4C,EAAA,kC,EAAA,sC,EAAA,+B,EAAA,0C;AAAA,K;;;YAA9BA,8B;AAA8B,sC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,e;AAAA,c;AAAA,oqC;AAAA;AAAA;ACpC3C;AACC;AAAkC;AAAA,mBAAS,IAAAe,IAAA,EAAT;AAAe,WAAf;AAEjC;AACC;AAAqB;AAA4D;AACjF;AACC;AAUA;AAoBA;AAA2F;AAAiB;AAC7G;AACD;AACA;AAEC;AACC;AAAO;AAAW;AAClB;AAAO;AAAsD;AAC7D;AACD;AAED;AACD;AACA;AAAsC;AAAA,mBAAS,IAAAA,IAAA,EAAT;AAAe,WAAf;AACrC;AACC;AACC;AACD;AACA;AAAmB;AAAmB;AACvC;AAEA;AACC;AACC;AACD;AACA;AACC;AAAkB;AAAK;AACtB;AAAmB;AAA2B;AAC/C;AACF;AAEA;AACC;AAAsB;AAAkH;AACxI;AAAoB;AAA4B;AAAwB;AAAS;AAAS;AAC3F;AAEA;AACC;AAAmB;AAAgH;AACnI;AACC;AAGD;AACD;AAEA;AAcA;AACC;AAAiC;AAA+B;AACjE;AACD;AACA;AACC;AAAkD;AAAA,mBAAS,IAAAr+B,MAAA,QAAT;AAAuB,WAAvB;AAA0B;AAAO;AACnF;AAAsD;AAAA,mBAAS,IAAAC,OAAA,QAAT;AAAwB,WAAxB;AAA4B;AAAQ;AAC3F;AACD;;;;AAnGwB;AAAA;AAEf;AAAA;AAUC;AAAA;AAoBgC;AAAA;AAAqD;AAAA;AAMpF;AAAA;AACA;AAAA;AASG;AAAA;AAEQ;AAAA;AAKR;AAAA;AAIU;AAAA;AAKW;AAAA;AACZ;AAAA;AAIS;AAAA;AAEE;AAAA;AAMG;AAAA;AAeD;AAAA;;;;;;mBD1EpB,CACR,aAAAp5C,OAAA,CAAQ,MAAR,EAAgB,CACZ,aAAAC,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,iBAAO,EAAE,CAAX;AAAcC,gBAAM,EAAE;AAAtB,SAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,iBAAO,EAAE,CAAX;AAAcC,gBAAM,EAAE;AAAtB,SAAN,CAAb,CAFiB,CAArB,CADY,EAKZ,aAAAH,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,iBAAO,EAAE,CAAX;AAAcC,gBAAM,EAAE;AAAtB,SAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,iBAAO,EAAE,CAAX;AAAcC,gBAAM,EAAE;AAAtB,SAAN,CAAb,CAFiB,CAArB,CALY,CAAhB,CADQ;;AAWX;;;;;2BAGQq2E,8B,EAA8B;cAnB1C,OAAAnxB,SAmB0C;eAnBhC;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD,CAHJ;AAIT;AACEsH,oBAAU,EAAE,CACR,aAAA9sD,OAAA,CAAQ,MAAR,EAAgB,CACZ,aAAAC,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,mBAAO,EAAE,CAAX;AAAcC,kBAAM,EAAE;AAAtB,WAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,mBAAO,EAAE,CAAX;AAAcC,kBAAM,EAAE;AAAtB,WAAN,CAAb,CAFiB,CAArB,CADY,EAKZ,aAAAH,UAAA,CAAW,QAAX,EAAqB,CACjB,aAAAC,KAAA,CAAM;AAAEC,mBAAO,EAAE,CAAX;AAAcC,kBAAM,EAAE;AAAtB,WAAN,CADiB,EAEjB,aAAAC,OAAA,CAAQ,GAAR,EAAa,aAAAH,KAAA,CAAM;AAAEC,mBAAO,EAAE,CAAX;AAAcC,kBAAM,EAAE;AAAtB,WAAN,CAAb,CAFiB,CAArB,CALY,CAAhB,CADQ,CALL;AAiBP8mD,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAjBlC,S;AAmBgC,Q;;;;;;;;;;;;;;;;;;gBAEtC,OAAAtiD;;;gBACA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzCL;AAAA;AAAA;;AAKA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAWA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCI;AACI;AACJ;;;;;;;;AAEI;AACI;AAEA;AAAA;AAAA;AAAA;AAAA;AAEC;AACL;;;;;AAJI;AAAA;;;;;;;;AAKJ;AACI;AAEI;AAAA;AAAA;AAAA;AAAA,WAAwB,OAAxB,EAAwB;AAAA;AAAA;AAAA;AAAA,SAAxB;AAIJ;AACJ;;;;;AAFQ;AAAA;AAJA;;;;;;AA8BQ;AACI;AACJ;;;;;AAFyC;AACrC;AAAA;;;;;;;;AAXZ;AAKI;AAEI;AAAA;AAAA;AAAA;AAAA,WAA0B,eAA1B,EAA0B;AAAA;AAAA;AAAA;AAAA,SAA1B;AAGA;AAGJ;AACJ;;;;;AAbI;AAMI;AAAA;AAGY;AAAA;;;;;;;;;;;;;;;AAmD1B;AAAqD;AAAA;AAAA;;AAAA;;AAAA;AAAA,+BAAsB,EAAtB;AAA0B,iBAAF,aAAc,EAAZ;AAAc,SAAxC;AACnD;AACF;;;;AADY;AAAA;;;;;;;;;;;;;;;;;;;;;;AA5FlB;AACI;AAOA;AASA;AACI;AAAA;AAAA;AAAA;AAAA,WAAmB,OAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB,EAAmB,cAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB;AAQA;AACI;AACI;AACJ;AACA;AAyDR;AACC;AACC;AACA;AAAuB;AAAA;AAAA;AAAA;AAAA,WAAwB,aAAxB,EAAwB;AAAA;;AAAA;;AAAA;AAAA,gCAA8B,EAA9B,IAAoC,OAAJ,cAAI,CAAJ,UAAI,CAApC;AAAgC,SAAxD;AAAvB;AACA;AAGD;AACD;AAGI;AACJ;AACA;AACI;AAOJ;AACJ;;;;;;;;AA5GwB;AAAA;AAOA;AAAA;AAUhB;AAAA,+CAAmB,UAAnB,EAAmB,eAAnB,EAAmB,MAAnB,EAAmB,mBAAnB,EAAmB,aAAnB,EAAmB,IAAnB,EAAmB,eAAnB,EAAmB,IAAnB;AAS6B;AAAA;AACX;AAAA;AAIV;AAAA;AAwDK;AAAA;AACL;AAAA;AACa;AAAA;AACW;AAAA;AAS9B;AAAA;AAEE;AAAA,+CAAiB,OAAjB,EAAiB,mBAAjB,EAAiB,eAAjB,EAAiB,oBAAjB,EAAiB,YAAjB,EAAiB,kBAAjB,EAAiB,aAAjB,EAAiB,kBAAjB;;;;;;;;AAwBZ;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;;AAJI;AAGA;AAAA;;;;;;;;AAIJ;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;;;AAJI;AAGA;AAAA;;;;;;;;AAIJ;AACI;AACI;AAAA;AAAA;AAAA;AAAA,WAAwB,eAAxB,EAAwB;AAAA;AAAA;AAAA,sCACM,IADN;AACU,SADlC,EAAwB,OAAxB,EAAwB;AAAA;AAAA,iBAEf4J,MAAM,CAACr6C,eAAP,EAFe;AAES,SAFjC;AAIA;AACI;AAAkB;AAAe;AACjC;AACI;AACJ;AACJ;AACJ;AACJ;;;;;AAXQ;AAAA;AAKsB;AAAA;AAEI;AAAA;;;;QDhHzByiE,gB;;;;;AA0CT,gCACYx2D,QADZ,EAEYyR,IAFZ,EAGYmwB,OAHZ,EAIYD,OAJZ,EAKY80B,MALZ,EAMY/0B,sBANZ,EAOYlnC,KAPZ,EAO+C;AAAA;;AAAA;;AAE3C;AARQ,iBAAAwF,QAAA,GAAAA,QAAA;AACA,iBAAAyR,IAAA,GAAAA,IAAA;AACA,iBAAAmwB,OAAA,GAAAA,OAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AACA,iBAAA80B,MAAA,GAAAA,MAAA;AACA,iBAAA/0B,sBAAA,GAAAA,sBAAA;AACA,iBAAAlnC,KAAA,GAAAA,KAAA;AAhDZ;;AACO,iBAAAtV,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AACP;;AACO,iBAAAuyE,YAAA,GAAuB,EAAvB;AACP;;AACO,iBAAA9sB,WAAA,GAAsB,EAAtB;AACP;;AACO,iBAAAxvC,MAAA,GAA0B,EAA1B;AACP;;AACO,iBAAAmyB,WAAA,GAA0B,EAA1B;AAGP;;AACO,iBAAAoqC,MAAA,GAA2B,EAA3B;AACP;;AACO,iBAAAC,WAAA,GAAwB,EAAxB;AACP;;AACO,iBAAAC,WAAA,GAA0B,CAC7B;AAAEv2E,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAD6B,EAE7B;AAAEttC,cAAI,EAAE,QAAR;AAAkBkW,YAAE,EAAE,QAAtB;AAAgCojD,eAAK,EAAE,SAAvC;AAAkDhsB,gBAAM,EAAE;AAA1D,SAF6B,EAG7B;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAH6B,EAI7B;AAAEttC,cAAI,EAAE,OAAR;AAAiBkW,YAAE,EAAE,OAArB;AAA8BojD,eAAK,EAAE,SAArC;AAAgDhsB,gBAAM,EAAE;AAAxD,SAJ6B,EAK7B;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAL6B,EAM7B;AAAEttC,cAAI,EAAE,WAAR;AAAqBkW,YAAE,EAAE,WAAzB;AAAsCojD,eAAK,EAAE,SAA7C;AAAwDhsB,gBAAM,EAAE;AAAhE,SAN6B,EAO7B;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAP6B,CAA1B;AAUA,iBAAAkpC,WAAA,GAAc,KAAAzf,SAAA,CAAUI,OAAxB;AACA,iBAAAsf,UAAA,GAAa,IAAb;AACA,iBAAAC,gBAAA,GAAmB,KAAA3f,SAAA,CAAU12D,KAA7B;AAOP,iBAAAs2E,UAAA,GAAwB,EAAxB;AAEH,iBAAAC,iBAAA,GAA4B,CAA5B;AACA,iBAAAC,eAAA,GAAuB,CAAvB;AASkD;AAG9C;;;;mCAEc;AAAA;;AACX,eAAKn3D,QAAL,CAAcwP,KAAd,GAAsB,UAAtB;;AAEJ,cAAI,KAAKxP,QAAL,CAAc/F,GAAd,CAAkB,gBAAlB,MAAwC,IAAxC,IAAiD,KAAK+F,QAAL,CAAc/F,GAAd,CAAkB,gBAAlB,EAAoC/Z,cAApC,CAAmD,QAAnD,CAArD,EAAmH;AAClH,iBAAK22E,WAAL,GAAmB,KAAK72D,QAAL,CAAc/F,GAAd,CAAkB,gBAAlB,CAAnB;AACA;;AAED,eAAKwX,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACpD;AACA,oBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,kBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,yBAAW,EAAE,KAArC;AAA4CC,yBAAW,EAAE,QAAI,CAACnhB;AAA9D,aAAX,CAAd;AACA,oBAAI,CAACytE,WAAL,GAAmB,QAAI,CAACC,WAAL,CAAiBzsE,GAAjB,CAAqB,UAAC6C,IAAD;AAAA,+BAAaA,IAAI,CAACuJ,EAAlB;AAAA,aAArB,CAAnB;;AACA,oBAAI,CAAClU,YAAL,CACI,cADJ,EAEI,QAAI,CAACm0E,MAAL,CAAYW,QAAZ,CAAqB50E,SAArB,CAA+B,UAACgrC,MAAD,EAAY;AACvC;AACA,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,OAAX,KAAuB,QAAI,CAACX,YAAL,KAAsBlpC,MAAM,CAACvzB,GAAP,CAAW,OAAX,CAAjD,EAAsE;AAClE,oBAAM8T,KAAK,GAAG,QAAI,CAAC0D,IAAL,CAAUqX,WAAV,CAAsB0E,MAAM,CAACvzB,GAAP,CAAW,OAAX,CAAtB,CAAd;AACA;;;AACA,oBAAI8T,KAAJ,EAAW;AACP,sBAAM3G,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CACb,UAACmhC,GAAD;AAAA,2BAASA,GAAG,CAAC1yB,EAAJ,KAAWuX,KAAK,CAACob,WAA1B;AAAA,mBADa,CAAjB;AAGA;;;AACA,sBAAI/hB,QAAJ,EAAc;AACV,4BAAI,CAACsvD,YAAL,GAAoB3oD,KAAK,CAACvX,EAA1B;AACA,4BAAI,CAACib,IAAL,CAAUrK,QAAV,GAAqBA,QAArB;;AACA,4BAAI,CAACs6B,sBAAL,CAA4B7M,OAA5B,CAAoC,QAAI,CAAC6hC,YAAL,IAAqB,QAAI,CAACjlD,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA5E;AACH;AACJ;AACJ;AACJ,aAjBD,CAFJ;;AAqBA,oBAAI,CAAClU,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,YAAM;qBAAA,CAChD;;;AACV,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACxBlR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EADM;AAExBmc,2BAAW,EAAE,KAFW;AAGxBC,2BAAW,EAAE,QAAI,CAACnhB;AAHM,eAAX,CAAd;AAKU,kBAAMie,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUrK,QAA3B;AACA,sBAAI,CAACkwD,UAAL,GAAkBlwD,QAAQ,GAAG,IAAH,GAAU,KAApC;;AACA,kBAAI,CAAC,QAAI,CAACkwD,UAAV,EAAsB;AAClB;AACH;AAED;;;AACA,kBAAI,CAAClwD,QAAQ,CAAChN,MAAT,CAAgBrS,IAAhB,CAAqB,UAAC2iC,GAAD;AAAA,uBAASA,GAAG,CAACl0B,EAAJ,KAAW,QAAI,CAACkgE,YAAzB;AAAA,eAArB,CAAL,EAAkE;AAC9D,wBAAI,CAACA,YAAL,GAAoB,CAAH,KAAGtvD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEhN,MAAV,CAAiB,CAAjB,OAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAG5D,EAAzC;;AACA,wBAAI,CAAC+gE,WAAL;AACH;;AACD,sBAAI,CAACn9D,MAAL,GAAc,CAAC;AAAE5D,kBAAE,EAAE,EAAN;AAAUlW,oBAAI,EAAE;AAAhB,eAAD,EAAwCi0B,MAAxC,CAA+CnN,QAAQ,CAAChN,MAAxD,CAAd;;AACV,sBAAI,CAACA,MAAL,CAAY3N,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBACjBA,CAAC,CAACrM,IAAF,CAAOsM,aAAP,CAAqBF,CAAC,CAACpM,IAAvB,EAA6BkG,SAA7B,EAAwC;AACtCgxE,yBAAO,EAAE,IAD6B;AAEtCC,mCAAiB,EAAE;AAFmB,iBAAxC,CADiB;AAAA,eAAjB;;AAMU,sBAAI,CAAClrC,WAAL,GAAmB,CAAC;AAAE/1B,kBAAE,EAAE,EAAN;AAAUlW,oBAAI,EAAE;AAAhB,eAAD,EAA6Ci0B,MAA7C,CACf,QAAI,CAAC9C,IAAL,CAAU8a,WADK,CAAnB;;AAGV,kBAAI,QAAI,CAAC9a,IAAL,CAAUimD,oBAAd,EAAoC;AACnC,wBAAI,CAACC,sBAAL,GAA8B,QAAI,CAAClmD,IAAL,CAAUimD,oBAAV,CAA+Bl1E,SAA/B,CAC5B,UAACo1E,UAAD,EAAgB;AACd,0BAAI,CAACrrC,WAAL,GAAmB,CACjB;AAAE/1B,sBAAE,EAAE,EAAN;AAAUlW,wBAAI,EAAE;AAAhB,mBADiB,EAEjBi0B,MAFiB,CAEVqjD,UAFU,CAAnB;AAGD,iBAL2B,CAA9B;AAOD;AACO,aArCD,CAFJ;;AAyCA,oBAAI,CAACt1E,YAAL,CACI,eADJ,EAEI,QAAI,CAAC0d,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BzX,SAA1B,CAAoC,UAAAiyB,IAAI,EAAI;AACxC,kBAAI,CAACA,IAAL,EACI;;AAEJ,kBAAI,QAAI,CAACojD,WAAT,EAAsB;AAClB,wBAAI,CAACA,WAAL,GAAmB,IAAnB;AACA13E,4BAAY,CAAC,QAAI,CAAC23E,WAAN,CAAZ;AACH;;AAED,sBAAI,CAACp2B,sBAAL,CAA4Bq2B,cAA5B,CAA2CtjD,IAAI,CAACvb,OAAhD,EAAyDub,IAAI,CAACjf,MAA9D;;AACA,sBAAI,CAACqiE,WAAL,GAAmBpjD,IAAI,CAACjf,MAAxB;AACA,sBAAI,CAACsiE,WAAL,GAAmBp3E,UAAU,CAAC,YAAM;AAChC,wBAAI,CAACsf,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;;AACA,wBAAI,CAACmlE,WAAL,GAAmB,IAAnB;AACH,eAH4B,EAG1B,KAH0B,CAA7B;AAIH,aAfD,CAFJ;AAmBH,WArFL;;AAuFI,eAAKG,yBAAL;AAEA,eAAK11E,YAAL,CACI,UADJ,EAEI,KAAKo/C,sBAAL,CAA4BpvB,QAA5B,CAAqC9vB,SAArC,CAA+C,UAACC,IAAD,EAAU;AACrD,oBAAI,CAACw0E,UAAL,sBAAsBx0E,IAAtB;AAEH,WAHD,CAFJ;AAOH;;;sCAEagF,K,EAAO;AACtB,cAAMwwE,WAAW,GAAGxwE,KAAK,CAACwE,WAAN,EAApB;;AACA,cAAG,KAAKisE,SAAL,KAAmBzwE,KAAtB,EAA6B;AAC5B,gBAAMyR,OAAO,GAAG,KAAK+9D,UAAL,CAAgB9rE,MAAhB,CAAuB,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAACokB,KAAH,CAASvjB,WAAT,GAAuB2R,QAAvB,CAAgCq6D,WAAhC,KAAgD7sE,EAAE,CAAC8rB,SAAH,CAAa52B,IAAb,CAAkB2L,WAAlB,GAAgC2R,QAAhC,CAAyCq6D,WAAzC,CAAhD,IAAyG7sE,EAAE,CAAC8rB,SAAH,CAAavhB,KAAb,CAAmB1J,WAAnB,GAAiC2R,QAAjC,CAA0Cq6D,WAA1C,CAA7G;AAAA,aAAzB,CAAhB;;AACA,iBAAKj4D,QAAL,CAAc9b,GAAd,CAAkB,4BAAlB,EAAgDgV,OAAO,CAAC,CAAD,CAAvD;;AACA,iBAAKg+D,iBAAL,GAAyBh+D,OAAO,CAACzS,MAAR,GAAe,CAAxC;AACA,iBAAKyxE,SAAL,GAAiBzwE,KAAjB;AACA,iBAAK0vE,eAAL,GAAuB,CAAvB;AACA,WAND,MAOK;AACJ,iBAAKA,eAAL,GAAuB,KAAKA,eAAL,GAAuB,KAAKD,iBAA5B,GAAgD,KAAKC,eAAL,GAAqB,CAArE,GAAyE,CAAhG;;AACA,gBAAMj+D,SAAO,GAAG,KAAK+9D,UAAL,CAAgB9rE,MAAhB,CAAuB,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAACokB,KAAH,CAASvjB,WAAT,GAAuB2R,QAAvB,CAAgCnW,KAAhC,KAA0C2D,EAAE,CAAC8rB,SAAH,CAAa52B,IAAb,CAAkB2L,WAAlB,GAAgC2R,QAAhC,CAAyCnW,KAAzC,CAA1C,IAA6F2D,EAAE,CAAC8rB,SAAH,CAAavhB,KAAb,CAAmB1J,WAAnB,GAAiC2R,QAAjC,CAA0CnW,KAA1C,CAAjG;AAAA,aAAzB,CAAhB;;AACA,iBAAKuY,QAAL,CAAc9b,GAAd,CAAkB,4BAAlB,EAAgDgV,SAAO,CAAC,KAAKi+D,eAAN,CAAvD;AACA;AAEC;;;oDAIkC;AAAA;;AAC/B;;;;;;;AAOC,cAAMgB,SAAS,GAAG,KAAK1B,MAAL,CAAY2B,QAAZ,CAAqBj1B,WAArB,CAAiC,MAAjC,CAAlB;;AACA,cAAGg1B,SAAH,EAAc;AACV,iBAAK71E,YAAL,CAAkB,aAAlB,EAAiC,KAAKkY,KAAL,CAAWgC,MAAX,CAAkB,OAAAC,iBAAlB,EAAqCpH,IAArC,CAA0C,YAAAsH,IAAA,CAAK,CAAL,CAA1C,EAChCna,SADgC,CACtB,UAACka,IAAD,EAA4B;AACnC;AACD,sBAAI,CAAClC,KAAL,CAAW69D,QAAX,CAAoB,WAAA9jE,qBAAA,CAAsB;AAAE,sBAAM4jE,SAAR;AAAoB,0BAAU,aAA9B;AAA6C,0BAAU;AAAvD,eAAtB,CAApB;AACF,aAJgC,CAAjC;AAMA,iBAAK39D,KAAL,CAAW69D,QAAX,CAAoB,WAAArjE,uBAAA,EAApB;AAEA,iBAAK1S,YAAL,CAAkB,gBAAlB,EAAoC,KAAKkY,KAAL,CAAWnF,IAAX,CAAiB,QAAAmH,MAAA,CAAO,cAAAsP,iCAAP,CAAjB,EAA6DzW,IAA7D,CAAkE,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,qBAAI,CAAC,CAACA,CAAF,IAAO,CAAC,CAACA,CAAC,CAAC3B,OAAf;AAAA,aAAP,CAAlE,EACnCnX,SADmC,CACzB,UAAAkQ,IAAI,EAAI;;;AACf,kBAAMwG,OAAO,GAAGxG,IAAI,CAACiH,OAAL,GAAe,CAAD,KAACjH,IAAI,CAACiH,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAG,CAAH,CAA3B,GAAmC,IAAnD;;AACA,kBAAIT,OAAO,IAAIA,OAAO,CAACqc,IAAvB,EAA6B;AACzB,oBAAM+iD,OAAO,GAAG,QAAI,CAAC7B,MAAL,CAAY2B,QAAZ,CAAqB5qC,MAArB,CAA4BttC,cAA5B,CAA2C,OAA3C,CAAhB;;AAEA6d,4BAAY,CAACkvB,OAAb,CAAqB,wBAArB,EAA+CngC,IAAI,CAACE,SAAL,CAAekM,OAAO,CAACgH,MAAR,EAAf,CAA/C;AACAnC,4BAAY,CAACkvB,OAAb,CAAqB,8BAArB,EAAqDngC,IAAI,CAACE,SAAL,CAAekM,OAAO,CAAC+N,KAAR,CAAc/G,MAAd,EAAf,CAArD;AACAnC,4BAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C/zB,OAAO,CAAC/J,WAAR,CAAoBjB,EAA9D;AACA6P,4BAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C/zB,OAAO,CAAC/J,WAAR,CAAoBmb,WAAlE;;AAEA,wBAAI,CAACiuD,YAAL,CAAkBr/D,OAAO,CAAC/J,WAA1B;;AACA,wBAAI,CAACuyC,sBAAL,CAA4B5M,OAA5B,CAAoC57B,OAAO,CAAC/J,WAA5C;;AACA,wBAAI,CAACuyC,sBAAL,CAA4B7M,OAA5B,CAAoC37B,OAAO,CAAC2e,UAA5C;;AACA,oBAAG,CAACygD,OAAJ,EAAc;AACV,0BAAI,CAAC32B,OAAL,CAAajL,QAAb,CAAsB,CAAC,WAAD,EAAcx9B,OAAO,CAAC2e,UAAtB,CAAtB,EAAyD;AAAEsrB,+BAAW,EAAE;AAAEozB,0BAAI,EAAE4B;AAAR,qBAAf;AAAoCK,8BAAU,EAAE;AAAhD,mBAAzD;AACH;AACJ;AACJ,aAlBmC,CAApC;AAmBH;AACL;;;sCAEiB;AACd,cAAI,KAAKx4D,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BlZ,QAA1B,EAAJ,EAA0C;AACtC,iBAAKif,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;AACH;;AACL,cAAI,KAAKilE,sBAAT,EAAiC;AAChC,iBAAKA,sBAAL,CAA4B72E,WAA5B;AACA;AACA,S,CAGD;;;;qCACoB;AAChB,eAAK8gD,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACrC/jD,gBAAI,EAAE;AAAEvgB,sBAAQ,EAAE,KAAKA;AAAjB,aAD+B;AAErC+gD,qBAAS,EAAE,KAF0B;AAGrCC,yBAAa,EAAE;AAHsB,WAAzC;AAKH,S,CAED;AACA;;;;qCAKoBjlD,M,EAAgB;AAChC,eAAKA,MAAL,GAAcA,MAAd;AACH;;;sCAEoB;;;AACjB,eAAKw8C,sBAAL,CAA4B7M,OAA5B,CAAoC,KAAK6hC,YAAL,IAAqB,KAAKjlD,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA5E;;AACA,4BAAKmrC,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEnkC,GAAd,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEI,QAAF,CAAW,WAAX,CAAjB,KAA4C,KAAK+jC,OAAL,CAAajL,QAAb,CAAsB,CAAC,WAAD,EAAc,KAAKggC,YAAnB,CAAtB,CAA5C;AACH;;;uCAE4C;AAAA;;AAAA,cAAzBl6B,MAAyB,uEAAP,KAAO;;AACzC,cAAIA,MAAJ,EAAY;AACR,iBAAKo6B,WAAL,GAAmB,KAAKC,WAAL,CAAiB3uE,MAAjB,CAAwB,UAACzF,IAAD,EAAOxC,GAAP,EAAe;AACtD,kBAAIA,GAAG,CAAC2tC,MAAR,EAAgBnrC,IAAI,CAAC2J,IAAL,CAAUnM,GAAG,CAACuW,EAAd;AAChB,qBAAO/T,IAAP;AACH,aAHkB,EAGhB,EAHgB,CAAnB;;AAIN,iBAAKud,QAAL,CAAc9b,GAAd,CAAkB,gBAAlB,EAAoC,KAAK2yE,WAAzC;AACG;;AACD,eAAKF,MAAL,GAAc,KAAKE,WAAL,CAAiB3uE,MAAjB,CAAwB,UAACkC,GAAD,EAAMnK,GAAN,EAAc;AAChDmK,eAAG,CAACnK,GAAG,CAACuW,EAAL,CAAH,GAAc,QAAI,CAACogE,WAAL,CAAiBh5D,QAAjB,WAA6B3d,GAAG,CAACuW,EAAjC,EAAd;AACA,mBAAOpM,GAAP;AACH,WAHa,EAGX,EAHW,CAAd;;AAKA,eAAKs3C,sBAAL,CAA4B3M,UAA5B,CAAuC,MAAD,OAAC,CAAD,kBAC/B,KAAK2M,sBAAL,CAA4B11C,OADG,CAAC,EACG;AACtC8pB,qBAAS,EAAEvkB,MAAM,CAACpH,IAAP,CAAY,KAAKwsE,MAAjB,EAAyBxrE,MAAzB,CAAgC,UAACvI,CAAD;AAAA,qBAAO,QAAI,CAAC+zE,MAAL,CAAY/zE,CAAZ,MAAmB,KAA1B;AAAA,aAAhC;AAD2B,WADH,CAAvC;AAIH;;;oDAEkCmwE,M,EAA4B;AAC3D,eAAK/yD,QAAL,CAAc9b,GAAd,CAAkB,eAAlB,EAAmC6uE,MAAM,CAAC0F,OAA1C;AACH;;;sCAEuB;;;;;;;;4CACQ,KAAKz4D,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BlZ,QAA1B,E,EAApByU,M,yBAAAA,M,EAAQ0D,O,yBAAAA,O;;wBACXA,O;;;;;;;;;AAGL,2BAAMA,OAAO,CAACub,IAAR,CAAa,QAAb,EAAuBjf,MAAM,KAAK,QAAX,GAAsB;AAAEstB,4BAAM,EAAE;AAAV,qBAAtB,GAAyC,EAAhE,CAAN;;;AACA,yBAAK9iB,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;;AACA,yBAAKgvC,sBAAL,CAA4Bq2B,cAA5B,CAA2C7+D,OAA3C,EAAoD1D,MAApD,EAA4D,IAA5D;;AACA,yBAAKqiE,WAAL,GAAmB,IAAnB;AACA13E,gCAAY,CAAC,KAAK23E,WAAN,CAAZ;AACA,yBAAKA,WAAL,GAAmB,IAAnB;;AAEA,yBAAKl2B,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC5ClwB,8BAAQ,EAAE,mBADkC;AAE5C75B,0BAAI,EAAE;AACFzC,6BAAK,EAAE/N,OAAO,CAAC+N,KADb;AAEF/N,+BAAO,EAAEA;AAFP,uBAFsC;AAM5CgxC,+BAAS,EAAE,KANiC;AAO5CC,mCAAa,EAAE;AAP6B,qBAAhD;;;;;;;;;AASH;;;qCAEmB;AAChB,eAAK4sB,UAAL,GAAkB,KAAlB;AACH;;;mCAEiB;AACd,eAAKc,WAAL,GAAmB,IAAnB;AACA13E,sBAAY,CAAC,KAAK23E,WAAN,CAAZ;AACH;;;4BAlEqB;;;AAClB,iBAAO,YAAKrmD,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAvC;AACH;;;;MAjPiC,OAAAhd,a;;AALtC;;;uBAKaw1E,gB,EAAgB,2C,EAAA,4C,EAAA,kC,EAAA,+B,EAAA,uC,EAAA,4C,EAAA,8B;AAAA,K;;;YAAhBA,gB;AAAgB,iC;AAAA,+C;AAAA,e;AAAA,a;AAAA,osD;AAAA;AAAA;AChD7B;AACI;AACA;AAGA;AA8GJ;AACA;AACI;AAAuD;AAAK;AAC5D;AAA4D;AAAU;AACtE;AAA2D;AAAM;AACjE;AAAmB;AAAA,mBAASpoB,MAAM,CAACr6C,eAAP,EAAT;AAAiC,WAAjC;AACf;AACI;AAAA;AAAA;AAIA;AACJ;AACJ;AACJ;AACA;AACI;AAQJ;AACA;AACI;AAQJ;AACA;AACI;AAcJ;;;;;;;;;;AAnKuB;AAAA;AAGA;AAAA;AAgHG;AAAA;AACA;AAAA;AACA;AAAA;AAGd;AAAA;AAWJ;AAAA;AAUA;AAAA;AAQe;AAAA;;;;;;;;;2BDvGVyiE,gB,EAAgB;cAL5B,OAAAnyB,SAK4B;eALlB;AACPljD,kBAAQ,EAAE,YADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhD7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMm0B,MAAM,GAAY,CACpB;AAAE/pD,UAAI,EAAE,EAAR;AAAYs8C,eAAS,EAAE,qBAAAuL;AAAvB,KADoB,EAEpB;AAAE7nD,UAAI,EAAE,QAAR;AAAkBs8C,eAAS,EAAE,qBAAAuL;AAA7B,KAFoB,EAGpB;AAAE7nD,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAHoB,CAAxB;;QAiBaN,a;;;;AAXb;;YAWaA;;;;yBAAAA,a;AAAa,O;AAAA,gBAFb,CAAC,SAAA7rE,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,SAAAujB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAA5B,EAA2D,gBAAAnL,mBAA3D,EAAgF,KAAA/kB,QAAhF,CAEa;;;;+EAAb6iB,a,EAAa;AAAA,uBATlB,qBAAAmL,gBASkB,EARlB,qBAAAoC,wBAQkB,EAPlB,2BAAA5E,yBAOkB,EANlB,kBAAAwB,8BAMkB,EALlB,kBAAAqD,qBAKkB,EAJlB,kBAAAC,0BAIkB;AAJQ,kBAEpB,SAAAt5E,YAFoB,EAEN,QAAA8oD,WAFM,EAEO,EAAF,aAFL,EAEsC,gBAAAilB,mBAFtC,EAE2D,KAAA/kB,QAF3D;AAIR,O;AAF2E,K;;;;;2BAExF6iB,a,EAAa;cAXzB,OAAA5rE,QAWyB;eAXhB;AACN6B,sBAAY,EAAE,CACV,qBAAAk1E,gBADU,EAEV,qBAAAoC,wBAFU,EAGV,2BAAA5E,yBAHU,EAIV,kBAAAwB,8BAJU,EAKV,kBAAAqD,qBALU,EAMV,kBAAAC,0BANU,CADR;AASNp5E,iBAAO,EAAE,CAAC,SAAAF,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,SAAAujB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAA5B,EAA2D,gBAAAnL,mBAA3D,EAAgF,KAAA/kB,QAAhF;AATH,S;AAWgB,Q;;;;;;;;;;;;;;;;;;;;;;AChC1B;AAAA;AAAA;;AAWA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGgB;;;;;AAEI;;;;;;AAOJ;;;;;;AAUJ;AAEI;AAAmB;AAAgB;AACnC;AACI;AACJ;AACJ;;;;;AAHuB;AAAA;AACf;AAAA;;;;;;AAcR;AACI;AACI;AACJ;AACJ;;;;;AAFQ;AAAA;;;;;;AAGR;AAKI;AAAmB;AAA+D;AACtF;;;;;AAHI;AAEmB;AAAA;;;;;;AAEvB;AACI;AAAmB;AAAO;AAC9B;;;;;;;;;;;;;;;AAGR;AAKI;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;;;;AADc;AAAA;;;;;;;;AArFlB;AAWI;AAKA;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AACI;AAAkB;AAA0C;AAC5D;AACI;AASA;AACJ;AACJ;AACA;AACI;AACI;AAAmB;AAAW;AAC9B;AACI;AACJ;AACJ;AACA;AAOA;AAEI;AAAuD;AAAmB;AAC9E;AACA;AACI;AACI;AAGJ;AACJ;AACA;AAKA;AAOA;AAGJ;AACJ;AACA;AASJ;;;;;AAjFI,gDAAuB,MAAvB,EAAuB,iBAAvB,EAAuB,OAAvB,EAAuB,2CAAvB,EAAuB,QAAvB,EAAuB,8DAAvB;AAFA,8CAAqB,UAArB,EAAqB,cAArB;AAFA;AAUI;AAAA;AACA,6DAAiC,QAAjC,EAAiC,gCAAjC;AAIA;AAAA;AACA;AAIsB;AAAA;AAGV;AAAA;AAQS;AAAA;AAMM;AAAA;AACf;AAAA;AAIoB;AAAA;AAQL;AAAA;AAAoC;AAAA;AAInD;AAAA;AAKW;AAAA;AAOf;AAAA;AAKe;AAAA;AASvB;AAAA;;;;QDxCKswB,0B;;;;;AAgCT,0CACY94D,QADZ,EAEY4hC,OAFZ,EAGYD,OAHZ,EAIY+C,KAJZ,EAIoC;AAAA;;AAAA;;AAEhC;AALQ,iBAAA1kC,QAAA,GAAAA,QAAA;AACA,iBAAA4hC,OAAA,GAAAA,OAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AACA,iBAAA+C,KAAA,GAAAA,KAAA;AAjCZ;;AACgB,iBAAAx/C,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAShB;;AACiB,iBAAAopD,QAAA,GAAW,IAAI,OAAAzL,YAAJ,EAAX;AAsBmB;AAGnC;;;;mCAEO;AACJ,eAAKI,QAAL,GAAgB,KAAKhpC,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAeimB,QAAvD;AACA,eAAKvsB,QAAL,GAAgB,KAAKzc,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAetG,QAAvD,CAFI,CAGJ;;AAHI,+BAI2C,KAAKzc,OAJhD;AAAA,cAIGie,OAJH,kBAIGA,OAJH;AAAA,cAIYD,SAJZ,kBAIYA,SAJZ;AAAA,cAIuBU,gBAJvB,kBAIuBA,gBAJvB;AAKJ,eAAKuqB,cAAL,GAAsB;AAClBC,oBAAQ,EAAE;AACN5xC,qBAAO,EAAE2mB,OAAO,KAAMA,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAsCwhB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAqCiiB,gBAAgB,KAAK,IAA1D,IAAkEV,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAAjJ,CADV;AAENnwB,mBAAK,EAAG0vB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAqCiiB,gBAAgB,KAAK,IAA1D,IAAkEV,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAAtG,GAAoHA,gBAAgB,CAAC,MAAD,CAAhB,IAA4BA,gBAAgB,CAAC,OAAD,CAAhK,GAA8K,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE72B,IAAT,KAAiB62B,OAAO,CAACxhB;AAFxM;AADQ,WAAtB;AAMH;;;;AAgCD;6BACY1D,K,EAAc;AAAA;;AACtBA,eAAK,CAAC8B,eAAN;;AACD,cAAMqsD,SAAS,GAAI,KAAKxe,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC9D3rB,qBAAS,EAAE,MADmD;AAE9DvE,oBAAQ,EAAE,MAFoD;AAG9D75B,gBAAI,EAAE;AACFzC,mBAAK,EAAE,KAAKA,KADV;AAEF/N,qBAAO,EAAE,KAAKA;AAFZ,aAHwD;AAO9DgxC,qBAAS,EAAE,KAPmD;AAQ9DC,yBAAa,EAAE;AAR+C,WAAhD,CAAnB;;AAUCiW,mBAAS,CAACrc,WAAV,GAAwBvhD,SAAxB,CAAkC,UAAA8Y,CAAC,EAAI;AACnC,oBAAI,CAACy9D,iBAAL;;AACA,oBAAI,CAACr0B,KAAL,CAAWoB,aAAX;AACH,WAHD;AAIH;AAED;;;;oCAMmB7jD,O,EAAwB;AACvC;AACA,cAAIA,OAAO,CAACiX,OAAR,IAAmBjX,OAAO,CAAC+2E,OAA3B,IAAsC/2E,OAAO,CAACiD,MAAlD,EAA0D;AACtD,iBAAK6zE,iBAAL;AACA,iBAAK72B,QAAL,GAAgB,KAAKhpC,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAeimB,QAAvD;AACA,iBAAKvsB,QAAL,GAAgB,KAAKzc,OAAL,CAAaoP,MAAb,KAAwB,cAAA2T,cAAA,CAAetG,QAAvD;AACH;AACJ;AAED;;;;mCACkBmG,K,EAAsB;AACpC,cAAM+O,eAAe,GAAG,KAAK3xB,OAAL,CAAa6pB,SAAb,EAAxB;AACAhlB,sBAAY,CAACkvB,OAAb,CAAqB,sBAArB,EAA6CngC,IAAI,CAACE,SAAL,CAAe8uB,KAAK,CAAC5b,MAAN,EAAf,CAA7C;AACAnC,sBAAY,CAACkvB,OAAb,CAAqB,wBAArB,EAA+CngC,IAAI,CAACE,SAAL,CAAe69B,eAAf,CAA/C;AACA9sB,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C,KAAK/zB,OAAL,CAAa/J,WAAb,CAAyBjB,EAAnE;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C,KAAK/zB,OAAL,CAAa/J,WAAb,CAAyBmb,WAAvE;AACH;AAED;;;;;;kCAGiBwR,K,EAAsB;AACnC;AACA,cAAI,KAAK5iB,OAAL,IAAgB,KAAKA,OAAL,CAAauf,QAAjC,EAA2C;AACvC;AACA,gBAAI1a,YAAJ,EAAkB;AACd,mBAAKk7D,UAAL,CAAgBn9C,KAAhB;AACH;;AACD,iBAAK6lB,OAAL,CAAajL,QAAb,CAAsB,CAAC,WAAD,EAAc,QAAd,CAAtB,EAA+C;AAC3CyM,yBAAW,EAAE;AAAEjqC,uBAAO,EAAE,KAAKA,OAAL,CAAa1C,EAAxB;AAA4B+/D,oBAAI,EAAEz6C,KAAK,CAACtlB;AAAxC;AAD8B,aAA/C;AAGH;AACJ;AAED;;;;4CAC4B;AACxB;AACA,cAAI,KAAK0C,OAAT,EAAkB;AACd,gBAAM8/D,OAAO,GAAG,KAAKA,OAAL,IAAgB;AAAEn2E,mBAAK,EAAE,CAAT;AAAYkkC,mBAAK,EAAE;AAAnB,aAAhC;AACA,gBAAMmyC,UAAU,GAAG,KAAKh0E,MAAL,CAAY+I,YAAZ,CAAyB,KAAzB,CAAnB;AACA,gBAAM1J,IAAI,GAAG,KAAK2U,OAAL,CAAa/J,WAAb,CAAyBlB,YAAzB,CAAsC,QAAtC,CAAb;AACA,gBAAM8hB,GAAG,GAAG,KAAK7W,OAAL,CAAa9J,SAAb,CAAuBnB,YAAvB,CAAoC,QAApC,CAAZ;AACA,gBAAMkrE,iBAAiB,GAAG,CAAC50E,IAAI,CAACm8B,UAAL,CAAgBw4C,UAAhB,EAA4B,KAA5B,CAA3B;;AACA,gBAAInpD,GAAG,CAAC0L,YAAJ,CAAiBy9C,UAAjB,EAA6B,KAA7B,CAAJ,EAAyC;AAAE;AACvC,mBAAK9xB,GAAL,GAAW,CAAC,GAAZ;AACA,mBAAKjoD,MAAL,GAAc,CAAd;AACA;AACH,aAVa,CAYd;AACA;AACA;;;AAEA,gBAAMsF,KAAK,GAAG00E,iBAAiB,GAAG,CAAH,GAAOt0E,IAAI,CAACu2B,GAAL,CAAS,CAAC72B,IAAI,CAAC82B,QAAL,CAAc69C,UAAd,EAA0B,OAA1B,EAAmC,OAAnC,EAA4CE,OAA5C,CAAoD,CAApD,CAAV,CAAtC;AACA,gBAAM9zE,QAAQ,GAAGT,IAAI,CAACi8B,GAAL,CACb,KAAK5nB,OAAL,CAAa5T,QADA,EAEbT,IAAI,CAACu2B,GAAL,CAAS89C,UAAU,CAAC79C,QAAX,CAAoB92B,IAAI,CAACa,QAAL,CAAc;AAAEJ,qBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAxB,aAAd,CAApB,EAAuE,SAAvE,CAAT,CAFa,CAAjB;AAIA,iBAAK8hD,GAAL,GAAWviD,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAavD,KAAK,GAAG,EAAT,GAAe,GAA3B,CAAX;AACA,iBAAKtF,MAAL,GAAc0F,IAAI,CAACi8B,GAAL,CACV,MAAM,KAAKsmB,GADD,EAEV,KAAKre,KAAL,GAAazjC,QAAQ,GAAG,EAAxB,GAA8BA,QAAQ,GAAG,EAAX,GAAgB,EAAjB,GAAuB,GAF1C,CAAd;AAIA,iBAAKioD,QAAL,CAAcvK,IAAd,CAAmB;AAAEoE,iBAAG,EAAE,KAAKA,GAAZ;AAAiBjoD,oBAAM,EAAGmG,QAAQ,GAAG,EAAX,GAAgB,EAAjB,GAAuB;AAAhD,aAAnB;AACA,iBAAKk+C,KAAL,GAAa3+C,IAAI,CAACi8B,GAAL,CAAS,GAAT,EAAc,MAAMk4C,OAAO,CAACjyC,KAAd,GAAsB,CAApC,CAAb;AACA,iBAAKugB,IAAL,GAAYziD,IAAI,CAACi8B,GAAL,CAAS,MAAM,KAAK0iB,KAApB,EAA2B,KAAKA,KAAL,GAAaw1B,OAAO,CAACn2E,KAArB,GAA6B,IAAIm2E,OAAO,CAACn2E,KAApE,CAAZ;AACA,iBAAKw2E,YAAL,GACI,CAAC,KAAKngE,OAAL,CAAasF,KAAb,CAAmB,KAAKyI,KAAL,CAAWtR,KAA9B,IACM,KAAKuD,OAAL,CAAasF,KAAb,CAAmB,KAAKyI,KAAL,CAAWtR,KAA9B,IAAuC,EAAxC,GAA8CrQ,QADnD,GAEK,CAAC,GAFP,IAEc,GAHlB;AAIA,iBAAKg0E,eAAL,GACI,CAAC,KAAKpgE,OAAL,CAAauX,SAAb,CAAuB,KAAKxJ,KAAL,CAAWtR,KAAlC,IACM,KAAKuD,OAAL,CAAauX,SAAb,CAAuB,KAAKxJ,KAAL,CAAWtR,KAAlC,IAA2C,EAA5C,GAAkDrQ,QADvD,GAEK,CAAC,GAFP,IAEc,GAHlB;;AAIA,gBAAI,KAAK4T,OAAL,CAAamf,OAAjB,EAA0B;AACtB,mBAAK+uB,GAAL,GAAW,CAAX;AACA,mBAAKjoD,MAAL,GAAc,GAAd;AACH;AACJ;AACJ;;;4BAtIkB;AACf,iBAAO,KAAK+Z,OAAL,CAAasb,OAAb,CAAqB0R,MAArB,CAA4B,CAA5B,EAA+B,CAA/B,CAAP;AACH;AAED;;;;4BACe;AACX,iBAAO,KAAKhtB,OAAL,CAAa0c,OAAb,EAAP;AACH;AAED;;;;4BACiB;AACb;AACA,iBAAO,KAAK1c,OAAL,CAAaqgE,WAApB;AACH;AAED;;;;4BACmB;AACf,cAAMx6C,QAAQ,GAAG,KAAK7lB,OAAL,CAAaqe,kBAA9B;AACA,iBAAO,KAAKtQ,KAAL,GAAa8X,QAAQ,CAAC,KAAK9X,KAAL,CAAWtR,KAAZ,CAAR,IAA8B,CAA3C,GAA+C,CAAtD;AACH;AAED;;;;4BACuB;AACnB,iBAAO,CAAC,CAAC,KAAKmmB,KAAd;AACH;;;4BAEe;AAAA;;AACZ,iBAAO,KAAK5iB,OAAL,CAAauf,QAAb,CAAsB1wB,IAAtB,CAA2B,UAAC+zB,KAAD;AAAA,mBAAWA,KAAK,CAACC,WAAN,KAAsB,QAAI,CAAC9U,KAAL,CAAWtR,KAA5C;AAAA,WAA3B,CAAP;AACH;;;4BAsBgB;AACb,cAAMuD,OAAO,GAAG,KAAK8G,QAAL,CAAc/F,GAAd,CAAkB,4BAAlB,CAAhB;;AACA,iBAAO,CAACf,OAAD,IAAYA,OAAO,CAAC1C,EAAR,KAAe,KAAK0C,OAAL,CAAa1C,EAA/C;AACH;;;;MA3G2C,OAAAxV,a;;AANhD;;;uBAMa83E,0B,EAA0B,2C,EAAA,kC,EAAA,+B,EAAA,0C;AAAA,K;;;YAA1BA,0B;AAA0B,2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,6uB;AAAA;AAAA;AC1CvC;;;;AAGI;;;;;;;;;;2BDuCSA,0B,EAA0B;cANtC,OAAAz0B,SAMsC;eAN5B;AACPljD,kBAAQ,EAAE,sBADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAM4B,Q;;;;;;;;;;;;gBAElC,OAAAtiD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AExDL;AAAA;AAAA;;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACE;AACF;;;;;;AAsBK;AACI;AACI;AAKJ;AACJ;;;;;;AALY;AAAA,qCAAc,OAAd,EAAc,YAAd,EAAc,SAAd,EAAc,OAAd;;;;;;AAMZ;;;;;;AAGI,mIAAsF,QAAtF,EAAsF,wFAAtF;;;;;;;;AA9BR;AAII;AAAA;AAAA;AAAA;AAAA,WAA6B,cAA7B,EAA6B;AAAA;AAAA;AAAA;AAAA,SAA7B,EAA6B,iBAA7B,EAA6B;AAAA;AAAA;AAAA;AAAA,SAA7B;AAMA;AAMI;AAAA;AAAA;AAAA;AAAA,sFAA8D,EAA9D;AAAgE,SAAhE;AACH;AACD;AASA;AAMJ;;;;;;AAhCI;AAMA,iEAAe,iBAAf,EAAe,wEAAf;AAII;AAAA,6CAAe,QAAf,EAAe,aAAf,EAAe,SAAf,EAAe,OAAf,EAAe,SAAf,EAAe,sEAAf,EAAe,SAAf,EAAe,kEAAf;;;;;;;;;;;;;;;QDMCq0B,qB;;;;;AA8DT,qCACY74D,QADZ,EAEY0R,OAFZ,EAGYgwB,sBAHZ,EAIY3vB,SAJZ,EAKY6vB,OALZ,EAMY43B,GANZ,EAOQ/nD,IAPR,EAOiC;AAAA;;AAAA;;AAE7B;AARQ,iBAAAzR,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAgwB,sBAAA,GAAAA,sBAAA;AACA,iBAAA3vB,SAAA,GAAAA,SAAA;AACA,iBAAA6vB,OAAA,GAAAA,OAAA;AACA,iBAAA43B,GAAA,GAAAA,GAAA;AACJ,iBAAA/nD,IAAA,GAAAA,IAAA;AA1DR;;AACgB,iBAAAklD,MAAA,GAA2B,EAA3B;AAMF,iBAAA8C,iBAAA,GAAwC,EAAxC;AACd;;AACiB,iBAAAC,MAAA,GAAS,IAAI,OAAA53B,YAAJ,EAAT;AACjB;;AACiB,iBAAA63B,QAAA,GAAW,IAAI,OAAA73B,YAAJ,EAAX;AAClB;;AACiB,iBAAA83B,MAAA,GAAS,IAAI,OAAA93B,YAAJ,EAAT;AAChB;;AACO,iBAAAm1B,UAAA,GAAwB,EAAxB;AACP;;AACO,iBAAA4C,eAAA,GAA0C,EAA1C;AACP;;AACO,iBAAAC,aAAA,GAA0D,EAA1D;AASP;;AACO,iBAAA/8D,OAAA,GAA4B,EAA5B;AACP;;AACO,iBAAAE,QAAA,GAA4B,EAA5B;AAKP;;AACK,iBAAA88D,WAAA,GAA0B,SAAKC,kBAAL,EAA1B;AA0BL;;AACQ,iBAAAn6D,MAAA,GAAqB,EAArB;AANyB;AAGhC;AAtBH;;;;;6CAC0B;AACzB,cAAM6uC,MAAM,GAAe,EAA3B;AACA,cAAMnqD,IAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,MAAjC,CAAb;;AACA,eAAK,IAAIrL,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,EAApB,EAAwBA,IAAC,EAAzB,EAA6B;AAC5B8rD,kBAAM,CAACtiD,IAAP,CAAY;AACXoK,gBAAE,EAAEjS,IAAI,CAACY,QAAL,CAAc;AAAE0B,oBAAI,EAAEjE;AAAR,eAAd,EAA2BiD,UAA3B,CAAsC,OAAtC,CADO;AAEXvF,kBAAI,EAAEiE,IAAI,CAACY,QAAL,CAAc;AAAE0B,oBAAI,EAAEjE;AAAR,eAAd,EAA2BiD,UAA3B,CAAsC,OAAtC,EAA+CmJ,iBAA/C;AAFK,aAAZ;AAIA;;AACD,iBAAO0/C,MAAP;AACE;;;mCAgBc;AAAA;;AACX,eAAK7uC,MAAL,GAAc,KAAKo6D,YAAL,EAAd;;AACA,eAAKj6D,QAAL,CAAc3D,WAAd,CAA0BhH,IAA1B,CAA+B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA/B,EAAgD9Y,SAAhD,CAA0D,YAAM;AAC5D,oBAAI,CAACya,QAAL,GAAgB,QAAI,CAAC+C,QAAL,CAAcd,OAAd,CAAsB,cAAtB,KAAyC,EAAzD;;AACA,oBAAI,CAAC5c,YAAL,CACI,WADJ,EAEI,QAAI,CAAC0d,QAAL,CACKld,MADL,CACY,eADZ,EAEKN,SAFL,CAEe,UAAClD,KAAD,EAAW;AAClB,sBAAI,CAAC46E,aAAL,GAAqB56E,KAArB;AACA,sBAAI,CAACugB,MAAL,sBAAkB,QAAI,CAACo6D,YAAL,EAAlB;AACH,aALL,CAFJ;;AASA,oBAAI,CAAC33E,YAAL,CACI,QADJ,EAEI,QAAI,CAAC0d,QAAL,CACKld,MADL,CACY,kBADZ,EAEKN,SAFL,CAEe,UAAClD,KAAD;AAAA,qBAAY,QAAI,CAACq3E,MAAL,GAAcr3E,KAAK,IAAI,EAAnC;AAAA,aAFf,CAFJ;;AAMA,oBAAI,CAACgD,YAAL,CACI,UADJ,EAEI,QAAI,CAACo/C,sBAAL,CAA4BpvB,QAA5B,CAAqC9vB,SAArC,CAA+C,UAACC,IAAD,EAAU;AACrD,sBAAI,CAACw0E,UAAL,sBAAsBx0E,IAAtB;AACA,sBAAI,CAACod,MAAL,sBAAkB,QAAI,CAACo6D,YAAL,EAAlB;;AACA,sBAAI,CAACT,GAAL,CAAS1zB,aAAT;AACH,aAJD,CAFJ;;AAQA,oBAAI,CAACq0B,WAAL;AACH,WA1BD;AA2BH;;;oCAEkBl4E,O,EAAsB;AAAA;;AACrC;AACA,cAAIA,OAAO,CAACkB,MAAZ,EAAoB;AAChB,iBAAKg3E,WAAL;AACH;;AACD,cAAIl4E,OAAO,CAACglB,KAAZ,EAAmB;AACf,iBAAKgwD,UAAL,sBAAsB,KAAKA,UAA3B;AACA,iBAAK/zE,OAAL,CAAa,SAAb,EAAwB;AAAA,qBAAM,QAAI,CAACi3E,WAAL,EAAN;AAAA,aAAxB,EAAkD,GAAlD;AACH;AACD;;;AACA,cAAIl4E,OAAO,CAACm4E,WAAZ,EAAyB;AACrB,iBAAKl3E,OAAL,CAAa,iBAAb,EAAgC;AAAA,qBAAM,QAAI,CAACm3E,iBAAL,EAAN;AAAA,aAAhC,EAAgE,IAAhE;AACH;AACJ;;;uCAEmB;AAAA;;AAChB,cAAI,KAAKpzD,KAAT,EAAgB;AACZ,gBAAM3S,QAAQ,GAAG,KAAK2iE,UAAtB;AACA,gBAAMx0E,IAAI,GAAG6R,QAAQ,CAACnJ,MAAT,CAAgB,UAAC8G,KAAD,EAAW;AACpC,kBAAI,QAAI,CAACqoE,cAAL,IAAuB,QAAI,CAACA,cAAL,KAAwBroE,KAAK,CAACuiB,OAAzD,EAAkE;AAC9D,wBAAI,CAACzX,OAAL,CAAa9K,KAAK,CAACuE,EAAnB,IAAyB,IAAzB;AACH;;AAED,kBAAM4sC,MAAM,GAAGnxC,KAAK,CAACunB,YAAN,IAAsBvnB,KAAK,CAAC4iB,eAAN,KAA0B,QAA/D;AAEA,qBACI,CAACuuB,MAAD,IACAnxC,KAAK,CAACsjB,IAAN,CAAW5f,KAAX,KAAqB,QAAI,CAACsR,KAAL,CAAWtR,KADhC,KAEC,CAAC,QAAI,CAACukE,aAAN,IACGjoE,KAAK,CAACuM,KAAN,CAAYvM,KAAK,CAACsjB,IAAN,CAAW5f,KAAvB,CADH,IAEG1D,KAAK,CAACwe,SAAN,CAAgBxe,KAAK,CAACsjB,IAAN,CAAW5f,KAA3B,CAJJ,CADJ;AAOH,aAdY,EAcVvL,GAdU,CAcN,UAAAwE,CAAC;AAAA,qBAAI,IAAI,cAAA4Z,OAAJ,CAAY,MAAD,OAAC,CAAD,EAAC,EAAI5Z,CAAC,CAACsR,MAAF,EAAJ,CAAZ,CAAJ;AAAA,aAdK,CAAb;AAgBA,mBAAOzd,IAAP;AACH;;AACD,iBAAO,EAAP;AACH;AAED;;AACA;;;;;;;;kCAKiBI,K,EAAeoK,I,EAAe;AAC3C,iBAAOA,IAAI,CAACuJ,EAAL,IAAW3T,KAAlB;AACH;AAED;;;;;;4CAG4B;AAAA;;AACxB,cAAMgd,MAAM,GAAG,KAAKA,MAAL,CAAYpT,IAAZ,CACX,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBACID,CAAC,CAACyC,WAAF,CAAcjB,EAAd,GAAmBvB,CAAC,CAACwC,WAAF,CAAcjB,EAAjC,IACAxB,CAAC,CAACpH,QAAF,GAAaqH,CAAC,CAACrH,QADf,IAEA,CAACoH,CAAC,CAAC8iB,KAAF,IAAW,EAAZ,EAAgB5iB,aAAhB,CAA8BD,CAAC,CAAC6iB,KAAF,IAAW,EAAzC,CAHJ;AAAA,WADW,CAAf;AAMA3P,gBAAM,CAACld,OAAP,CAAe,UAACC,CAAD;AAAA,mBAAQ,QAAI,CAACi3E,eAAL,CAAqBj3E,CAAC,CAAC4T,EAAvB,IAA6B;AAAE3T,mBAAK,EAAE,CAAT;AAAYkkC,mBAAK,EAAE;AAAnB,aAArC;AAAA,WAAf;;AAPwB,uDAQNlnB,MARM;AAAA;;AAAA;AAAA;AAAA,kBAQbiR,GARa;AASpB,kBAAMmM,SAAS,GAAGnM,GAAG,CAAC3hB,WAAJ,CAAgBlB,YAAhB,CAA6B,QAA7B,CAAlB;AACA,kBAAMivB,OAAO,GAAGpM,GAAG,CAAC1hB,SAAJ,CAAcnB,YAAd,CAA2B,QAA3B,CAAhB;AACA,kBAAI3B,KAAK,GAAG,CAAZ;AACA,kBAAIzJ,KAAK,GAAG,CAAZ;AACA,kBAAM03E,UAAU,GAAc,EAA9B;;AAboB,2DAcF16D,MAdE;AAAA;;AAAA;AAAA;AAAA,sBAcT26D,GAdS;;AAehB;AACA,sBAAI1pD,GAAG,CAACta,EAAJ,KAAWgkE,GAAG,CAAChkE,EAAnB,EAAuB;AACnB,wBAAMikE,SAAS,GAAGD,GAAG,CAACrrE,WAAJ,CAAgBlB,YAAhB,CAA6B,QAA7B,CAAlB;AACA,wBAAMysE,OAAO,GAAGF,GAAG,CAACprE,SAAJ,CAAcnB,YAAd,CAA2B,QAA3B,CAAhB;AACA;;AACA,wBACIgvB,SAAS,CAACyD,UAAV,CAAqB+5C,SAArB,EAAgC,QAAhC,KACCx9C,SAAS,CAACvB,WAAV,CAAsB++C,SAAtB,KAAqCx9C,SAAS,CAACxB,YAAV,CAAuBi/C,OAAvB,CADtC,IAEAx9C,OAAO,CAACwD,UAAR,CAAmBg6C,OAAnB,EAA4B,QAA5B,CAFA,IAGCx9C,OAAO,CAACxB,WAAR,CAAoB++C,SAApB,KAAkCv9C,OAAO,CAACzB,YAAR,CAAqBi/C,OAArB,CAJvC,EAKE;AACEpuE,2BAAK;AACLiuE,gCAAU,CAACnuE,IAAX,CAAgB0kB,GAAhB;AACA;;AACA,0BACIjR,MAAM,CAACgxB,SAAP,CAAiB,UAACjuC,CAAD;AAAA,+BAAOA,CAAC,CAAC4T,EAAF,KAASsa,GAAG,CAACta,EAApB;AAAA,uBAAjB,IACAqJ,MAAM,CAACgxB,SAAP,CAAiB,UAACjuC,CAAD;AAAA,+BAAOA,CAAC,CAAC4T,EAAF,KAASgkE,GAAG,CAAChkE,EAApB;AAAA,uBAAjB,CAFJ,EAGE;AACE3T,6BAAK;AACR;AACJ;AACJ;AApCe;;AAcpB,0EAA0B;AAAA;AAuBzB;AArCmB;AAAA;AAAA;AAAA;AAAA;;AAsCpB,sBAAI,CAACg3E,eAAL,CAAqB/oD,GAAG,CAACta,EAAzB,IAA+B;AAAE3T,qBAAK,EAAEgC,IAAI,CAACmD,GAAL,CAAS,CAAT,EAAYnF,KAAZ,CAAT;AAA6BkkC,qBAAK,EAAEz6B;AAApC,eAA/B;AAtCoB;;AAQxB,sEAA0B;AAAA;AA+BzB;AAvCuB;AAAA;AAAA;AAAA;AAAA;AAwC3B;AAED;;;;;;sCAGsB;AAClB;AACA,cAAI,KAAKiqE,IAAL,IAAa,KAAKA,IAAL,CAAUn0E,aAA3B,EAA0C;AACtC,gBAAMgJ,EAAE,GAAG,KAAKmrE,IAAL,CAAUn0E,aAArB;AACA,iBAAKu4E,OAAL,GACIvvE,EAAE,CAACwvE,UAAH,GAAgB,KAAKz3E,MAArB,IAA+B,CAAC,GAAhC,IACAiI,EAAE,CAACwvE,UAAH,GAAgB,KAAKz3E,MAArB,IAA+B2G,MAAM,CAAC2J,UAF1C;AAGA,iBAAKimE,MAAL,CAAY12B,IAAZ,CAAiB,KAAK23B,OAAtB;AACH;AACJ;AAED;;;;;;mCAGkB;AACd,eAAKE,GAAL,GAAW,KAAKtE,IAAL,CAAUn0E,aAAV,CAAwB04E,qBAAxB,EAAX;AACA,eAAKnB,QAAL,CAAc32B,IAAd,CAAmB,IAAnB;AACH;AAED;;;;;;kCAGiB;AAAA;;AACb,eAAK9/C,OAAL,CAAa,UAAb,EAAyB;AAAA,mBAAO,QAAI,CAACkkD,GAAL,GAAW,CAAlB;AAAA,WAAzB,EAA+C,EAA/C;AACA,eAAKuyB,QAAL,CAAc32B,IAAd,CAAmB,KAAnB;AACH;AAED;;;;;;;;sCAKqB/wC,K,EAA6B;AAC9C;AACA,cAAIA,KAAK,CAAC8oE,KAAN,CAAY/4E,CAAhB,EAAmB;AACf,gBAAMA,CAAC,GAAGiQ,KAAK,CAAC+oE,eAAN,CAAsBh5E,CAAhC;AACA,gBAAMolD,GAAG,GAAG,CAACplD,CAAC,GAAG,KAAK64E,GAAL,CAASzzB,GAAb,GAAmB,KAAK6zB,UAAzB,IAAuC,KAAKJ,GAAL,CAAS17E,MAA5D;AACA,gBAAM+7E,WAAW,GAAIr2E,IAAI,CAACszB,KAAL,CAAYivB,GAAG,GAAG,EAAN,GAAW,EAAZ,GAAkB,EAA7B,IAAmC,EAApC,GAA0C,EAA9D;AACA,iBAAKA,GAAL,GAAY8zB,WAAW,GAAG,EAAf,GAAqB,GAAhC;AACH;AACJ;AAED;;;;;;;6BAIYjpE,K,EAAoD;AAAA;;AAC5D,cAAMuE,EAAE,GAAGvE,KAAK,CAAChF,IAAN,CAAW9K,OAAX,CAAmBC,aAAnB,CAAiCoU,EAA5C;AACA,cAAM0C,OAAO,GAAGjH,KAAK,CAACkpE,iBAAN,CAAwBzxD,IAAxB,CAA6BjnB,IAA7B,CAAkCsF,IAAlC,CAAuC,UAACnF,CAAD;AAAA,mBAAOA,CAAC,CAAC4T,EAAF,KAASA,EAAhB;AAAA,WAAvC,CAAhB;AACA;;AACA,cAAI,CAAC0C,OAAL,EAAc;AACV;AACH;;AACD,cAAMkuC,GAAG,GAAGn1C,KAAK,CAACkpE,iBAAN,CAAwBzxD,IAAxB,CAA6B09B,GAAzC;AACA,cAAMg0B,SAAS,GAAGv2E,IAAI,CAACszB,KAAL,CAAY,CAACivB,GAAG,IAAI,CAAR,IAAa,GAAd,GAAqB,EAArB,GAA0B,EAArC,CAAlB;AACA,cAAMqG,QAAQ,GAAGv0C,OAAO,CAAC/J,WAAzB;AACA,cAAMw+C,QAAQ,GAAGF,QAAQ,CAACx/C,YAAT,CAAsB,KAAtB,EAA6B9I,QAA7B,CAAsC;AAAEP,kBAAM,EAAEw2E;AAAV,WAAtC,CAAjB;AACJ,cAAM/kE,WAAW,GAAGs3C,QAAQ,CAAC13C,OAA7B;AACA,cAAMF,SAAS,GAAG43C,QAAQ,CAACvoD,QAAT,CAAkB;AAAEJ,mBAAO,EAAEkU,OAAO,CAAC5T;AAAnB,WAAlB,EAAiD2Q,OAAnE;AACI,cAAM+T,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA;AACA;;AACJ,cAAI6lB,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,EAA2BC,EAA3B,GAAgCy/C,QAAQ,CAACz/C,EAA7C,EAAiD;AACzC,iBAAKmtE,eAAL,CAAqBniE,OAAO,CAAC1C,EAA7B,EAAiC,wCAAjC;AACA;AACH;;AACL,cAAIwT,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,EAA2BC,EAA3B,GAAgCgL,OAAO,CAAC9J,SAAR,CAAkBlB,EAAtD,EAA0D;AACzD,iBAAKmtE,eAAL,CAAqBniE,OAAO,CAAC1C,EAA7B,EAAiC,mCAAjC;AACA;AACA,WAvB+D,CAwB5D;;;AACA,eAAKuG,OAAL,CAAa7D,OAAO,CAAC1C,EAArB,IAA2B,IAA3B;AACA,eAAK8jE,cAAL,GAAsBphE,OAAO,CAACsb,OAA9B;AACJ,eAAKolD,MAAL,CAAY52B,IAAZ,CAAiB;AAAEs4B,oBAAQ,EAAC,IAAX;AAAiBC,oBAAQ,EAACriE,OAAO,CAAC1C;AAAlC,WAAjB;AACI,cAAI+e,IAAI,GAAGrc,OAAO,CAAC+N,KAAnB;AACJ,cAAIxL,OAAO,oBAAavC,OAAO,CAACge,SAAR,CAAkB52B,IAA/B,6BAAsD4Y,OAAO,CAAC+N,KAAR,CAAc3mB,IAApE,qBAAoFmtD,QAAQ,CAAC5nD,UAAT,CAAoB,OAApB,CAApF,iBAAwH8nD,QAAQ,CAAC9nD,UAAT,CAAoB,OAApB,CAAxH,CAAX;AACI,cAAI8T,OAAO,oDAA6C8zC,QAAQ,CAAC5nD,UAAT,CAAqB,OAArB,CAA7C,iBAAkF8nD,QAAQ,CAAC9nD,UAAT,CAAoB,OAApB,CAAlF,CAAX;AACA;;AACA,cAAIoM,KAAK,CAACmhE,SAAN,KAAoBnhE,KAAK,CAACkpE,iBAA9B,EAAiD;AAC7C;AACA5lD,gBAAI,GAAG,KAAK7D,OAAL,CAAa3pB,IAAb,CAAkBkK,KAAK,CAACmhE,SAAN,CAAgB58D,EAAhB,CAAmBhJ,OAAnB,CAA2B,YAA3B,EAAyC,EAAzC,CAAlB,KAAmE+nB,IAA1E;AACA9Z,mBAAO,kBAAWvC,OAAO,CAACge,SAAR,CAAkB52B,IAA7B,6BAAmD4Y,OAAO,CAAC+N,KAAR,CAAc3mB,IAAjE,qBAA+Ei1B,IAAI,CAACj1B,IAApF,mBAAiGqtD,QAAQ,CAAC9nD,UAAT,CAAoB,OAApB,CAAjG,CAAP;AACA8T,mBAAO,6CAAqC4b,IAAI,CAACj1B,IAA1C,mBAAsDqtD,QAAQ,CAAC9nD,UAAT,CAAoB,OAApB,CAAtD,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAM21E,SAAS,GAAG,CAACjmD,IAAD,CAAlB,CA5C4D,CA6C5D;;AACA,cAAMkmD,UAAU,GAAGD,SAAS,CAACtzE,MAAV,CAAiB,UAACwE,CAAD,EAAIuE,CAAJ;AAAA,mBAAUvE,CAAC,CAAC9E,GAAF,CAAMqJ,CAAC,CAACuF,EAAR,CAAV;AAAA,WAAjB,EAAwC,IAAI48B,GAAJ,EAAxC,EAAmD3nC,IAAtE;AACA;AACA;AACA;AACA;AACA;;AACA,cAAMiwE,WAAW,GAAG,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACxBtP,OAAO,CAACgH,MAAR,EADwB,CAAC,EACT;AACzB7J,uBAAW,EAAXA,WADyB;AAEzBN,qBAAS,EAATA,SAFyB;AAGnBwf,gBAAI,EAAEimD,SAAS,CAAC,CAAD;AAHI,WADS,CAAZ,CAApB;AAOA,eAAKnrD,eAAL,CACImrD,SADJ,EAEI7tB,QAFJ,EAGI+tB,WAAW,CAACp2E,QAHhB,EAIIo2E,WAAW,CAAClnD,OAJhB,EAKEhU,IALF,CAMI,YAAM;AACF,oBAAI,CAACm7D,WAAL,CAAiBlgE,OAAjB,EAA0BigE,WAA1B,EAAuCl7D,IAAvC,CACI,UAAClF,CAAD,EAAO;AACH,sBAAI,CAACg/D,cAAL,GAAsB,IAAtB;;AACZ,sBAAI,CAACV,MAAL,CAAY52B,IAAZ,CAAiB;AAAEs4B,wBAAQ,EAAC,KAAX;AAAkBC,wBAAQ,EAACriE,OAAO,CAAC1C;AAAnC,eAAjB;;AACY,sBAAI,CAACwJ,QAAL,CAAcw2B,aAAd,CAA4B78B,OAA5B;AACH,aALL,EAMI,UAACiI,GAAD;AAAA,qBAAS,QAAI,CAACy5D,eAAL,CAAqBK,WAAW,CAACllE,EAAjC,mBAA+CoL,GAA/C,EAAT;AAAA,aANJ;AAQH,WAfL,EAgBI;AAAA,mBAAM,QAAI,CAACy5D,eAAL,CAAqBK,WAAW,CAACllE,EAAjC,EAAqC,2CAArC,CAAN;AAAA,WAhBJ;AAkBH;AAED;;;;;;;;;wCAOI2P,M,EACAjhB,M,EACAI,Q,EACA89C,M,EAAe;AAAA;;AAEf,iBAAO,IAAIjjC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAI,CAACqR,OAAL,CACKnB,SADL,CACe;AACPC,sBAAQ,EAAErK,MAAM,CAAC/b,GAAP,CAAW,UAACxH,CAAD;AAAA,uBAAOA,CAAC,CAAC4T,EAAT;AAAA,eAAX,EAAwB5I,IAAxB,CAA6B,GAA7B,CADH;AAEP1I,oBAAM,EAANA,MAFO;AAGPI,sBAAQ,EAARA,QAHO;AAIP89C,oBAAM,EAANA,MAJO;AAKP1yB,2BAAa,EAAE;AALR,aADf,EAQKlQ,IARL,CASQ,UAAC/d,IAAD,EAAU;AACNA,kBAAI,CAACgE,MAAL,KAAgB0f,MAAM,CAAC1f,MAAvB,GAAgC2Z,OAAO,EAAvC,GAA4CC,MAAM,EAAlD;AACH,aAXT,EAYQ;AAAA,qBAAMA,MAAM,EAAZ;AAAA,aAZR;AAcH,WAfM,CAAP;AAgBH;AAED;;;;;;;;wCAKwB7J,E,EAAYiF,O,EAAiB;AACjD,eAAKsB,OAAL,CAAavG,EAAb,IAAmB,KAAnB;AACA,eAAK8jE,cAAL,GAAsB,IAAtB;AACJ,eAAKV,MAAL,CAAY52B,IAAZ,CAAiB;AAAEs4B,oBAAQ,EAAC,KAAX;AAAkBC,oBAAQ,EAAC/kE;AAA3B,WAAjB;;AACI,eAAKwJ,QAAL,CAAcy2B,WAAd,CAA0Bh7B,OAA1B;AACH;AAED;;;;;;;;oCAKoBmgE,W,EAAqBF,W,EAAoB;AAAA;;AACzD,iBAAO,IAAIv7D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gBAAMgjC,GAAG,GAAG,QAAI,CAACzB,OAAL,CAAa9lC,IAAb,CAAyC,kBAAAisC,qBAAzC,EAAgE;AACxEr+B,kBAAI,EAAE;AACF8F,qBAAK,EAAE,gBADL;AAEF5T,uBAAO,EAAEggE,WAFP;AAGFjgE,oBAAI,EAAE;AAAEnS,sBAAI,EAAE,MAAR;AAAgB,2BAAO,gBAAvB;AAAyCoS,yBAAO,EAAE;AAAlD,iBAHJ;AAIFpG,sBAAM,EAAE;AAJN;AADkE,aAAhE,CAAZ;;AAQA,oBAAI,CAAClT,YAAL,CACI,SADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC1D;AACA,kBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,wBAAI,CAACsK,SAAL,CAAe8lB,IAAf,CAAoB6jC,WAApB,EAAiCl7D,IAAjC,CACI,UAACsQ,GAAD,EAAkB;AACd,0BAAI,CAAC4wB,sBAAL,CAA4Bl0C,OAA5B,CAAoCsjB,GAApC;;AACA1Q,yBAAO,CAAC0Q,GAAD,CAAP;AACH,iBAJL,EAKI,UAAClP,GAAD,EAAS;AACtB,0BAAI,CAACg4D,MAAL,CAAY52B,IAAZ,CAAiB;AAAEs4B,4BAAQ,EAAC,KAAX;AAAkBC,4BAAQ,EAACG,WAAW,CAACllE;AAAvC,mBAAjB;;AACA,0BAAI,CAAC8jE,cAAL,GAAsB,IAAtB;AACAj6D,wBAAM,CAACuB,GAAD,CAAN;AACA,iBATS;AAWH;;AACDyhC,iBAAG,CAACH,KAAJ,CAAUjxC,KAAK,CAACwV,MAAhB;AACH,aAhBD,CAFJ;;AAoBN47B,eAAG,CAACU,WAAJ,GAAkBvhD,SAAlB,CAA4B,UAACilB,MAAD,EAAoB;AAC/CA,oBAAM,KAAK,MAAX,GAAoB,QAAI,CAACmyD,MAAL,CAAY52B,IAAZ,CAAiB;AAAEs4B,wBAAQ,EAAC,KAAX;AAAkBC,wBAAQ,EAACG,WAAW,CAACllE;AAAvC,eAAjB,CAApB,GAAoF,IAApF;;AACA,sBAAI,CAACnW,KAAL,CAAW,SAAX;AACA,aAHD;AAIG,WAjCM,CAAP;AAkCH;;;qDAMiCw7E,kB,EAAoBC,gB,EAAkB;;;AACzE,cAAMlpC,eAAe,GAAG,YAAK/yB,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,MAAX,GAAW,GAAE1U,MAAF,CAAU,UAAA0nC,GAAG,EAAI;AACnD,gBAAMC,UAAU,GAAG,IAAI,UAAAr9B,MAAJ,CAAW;AAAElR,kBAAI,EAAEsuC,GAAG,CAACx8B,WAAJ,GAAkB,IAA1B;AAAgCgU,yBAAW,EAAE,KAA7C;AAAoDC,yBAAW,EAAEuoB,GAAG,CAAC1pC;AAArE,aAAX,EAA2F+E,EAA9G;AACA,gBAAM6kC,QAAQ,GAAG,IAAI,UAAAt9B,MAAJ,CAAW;AAAElR,kBAAI,EAAEsuC,GAAG,CAAC98B,SAAJ,GAAgB,IAAxB;AAA8BsU,yBAAW,EAAE,KAA3C;AAAkDC,yBAAW,EAAEuoB,GAAG,CAAC1pC;AAAnE,aAAX,EAAyF+E,EAA1G;AACA,mBAAO2tE,kBAAkB,CAAC3tE,EAAnB,IAAyB4kC,UAAzB,IAAwC+oC,kBAAkB,CAAC3tE,EAAnB,IAAyB6kC,QAAjE,IAA6E+oC,gBAAgB,CAAC5tE,EAAjB,GAAsB4kC,UAAtB,IAAoCgpC,gBAAgB,CAAC5tE,EAAjB,GAAsB6kC,QAA9I;AACA,WAJkC,CAAX,KAIlB,EAJN;AAKA,iBAAO,CAAC,CAACH,eAAe,CAACnsC,MAAzB;AACA;AAED;;;;gCACiByS,O,EAAO;AACvB,iBAAOA,OAAO,CAACw7D,oBAAR,KAAiC,MAAxC;AACA;;;2CAEkBziE,K,EAAYgV,K,EAAc;;;AAE5C,cAAM4zD,GAAG,GAAG,KAAKtE,IAAL,CAAUn0E,aAAV,CAAwB04E,qBAAxB,EAAZ;AACA,cAAM94E,CAAC,GAAGiQ,KAAK,CAACjQ,CAAhB;AAEA,cAAMolD,GAAG,GAAG,CAACplD,CAAC,GAAG64E,GAAG,CAACzzB,GAAR,GAAc,EAAf,IAAqByzB,GAAG,CAAC17E,MAArC;AACA,cAAM+7E,WAAW,GAAGr2E,IAAI,CAACszB,KAAL,CAAWivB,GAAG,GAAG,EAAjB,CAApB;AACA,cAAM20B,UAAU,GAAIb,WAAW,GAAG,EAAf,GAAqB,GAAxC;AACA,cAAME,SAAS,GAAGv2E,IAAI,CAACszB,KAAL,CAAY,CAAC4jD,UAAU,IAAI,CAAf,IAAoB,GAArB,GAA4B,EAA5B,GAAiC,EAA5C,CAAlB;AACA,cAAMtuB,QAAQ,GAAG,KAAK/L,sBAAL,CAA4BlvB,YAA7C;AAEA,cAAMm7B,QAAQ,GAAGF,QAAQ,CAACx/C,YAAT,CAAsB,KAAtB,EAA6B9I,QAA7B,CAAsC;AAAEP,kBAAM,EAAEw2E;AAAV,WAAtC,CAAjB;AACA,cAAMjyE,QAAQ,GAAG,YAAKsoB,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAjD;AACA,cAAMg+D,aAAa,GAAG,OAAA/2E,mBAAA,CAAoB,IAAI,UAAAwQ,MAAJ,CAAW;AAAElR,gBAAI,EAAEopD,QAAQ,CAACz/C,EAAjB;AAAqBmc,uBAAW,EAAE,IAAlC;AAAwCC,uBAAW,EAAEnhB;AAArD,WAAX,CAApB,EAAiG,CAAC,EAAlG,CAAtB;AAEA,cAAM8yE,UAAU,GAAG,KAAKC,4BAAL,CAAkCF,aAAlC,EAAiDA,aAAa,CAAC52E,QAAd,CAAuB;AAAEJ,mBAAO,EAAE;AAAX,WAAvB,CAAjD,CAAnB;;AACA,cAAGi3E,UAAH,EAAe;AACd;AACA;AACA;;AAED,cAAMjyD,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ,CArB4C,CAsB5C;;AACA,cAAI6lB,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,EAA2BC,EAA3B,GAAgC8tE,aAAa,CAAC9tE,EAAlD,EAAsD;AACpD,iBAAK8R,QAAL,CAAcy2B,WAAd,CAA0B,yCAA1B;;AACA;AACD;;AAED,cAAM/0B,SAAS,GAAG;AACjBxc,kBAAM,EAAG82E,aADQ;AAEjB7sE,uBAAW,EAAG6sE,aAFG;AAGjB3lE,uBAAW,EAAG2lE,aAAa,CAAC/lE,OAHX;AAIjB7G,qBAAS,EAAG4sE,aAAa,CAAC52E,QAAd,CAAuB;AAAEJ,qBAAO,EAAE;AAAX,aAAvB,CAJK;AAKjB+Q,qBAAS,EAAGimE,aAAa,CAAC52E,QAAd,CAAuB;AAAEJ,qBAAO,EAAE;AAAX,aAAvB,EAAwCiR,OALnC;AAMjB9M,oBAAQ,EAAGA,QANM;AAOjBosB,gBAAI,EAAEtO;AAPW,WAAlB;AASA,cAAM/N,OAAO,GAAG,IAAI,cAAAsP,OAAJ,CAAY9G,SAAZ,CAAhB;;AACA,eAAKkgC,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACxC/jD,gBAAI,EAAE;AACLvgB,sBAAQ,EAAEA,QADL;AAEL+P,qBAAO,EAAEA,OAFJ;AAGL21D,wBAAU,EAAE;AAHP,aADkC;AAMxC3kB,qBAAS,EAAE,KAN6B;AAOxCC,yBAAa,EAAE;AAPyB,WAAzC;AASA;;;;MA/dwC,OAAAnpD,a;;AAL3C;;;uBAKa63E,qB,EAAqB,2C,EAAA,sC,EAAA,4C,EAAA,wC,EAAA,kC,EAAA,0C,EAAA,4C;AAAA,K;;;YAArBA,qB;AAAqB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpClC;AAOI;AAAA,mBAAsB,IAAAsD,IAAA,QAAtB;AAAkC,WAAlC,EAAmC,OAAnC,EAAmC;AAAA,mBAG5B,IAAAC,kBAAA,mBAH4B;AAGK,WAHxC;AAKF;AACC;AAGD;AAEE;AACA;AAkCJ;;;;AAhDI,gGAA2C,iBAA3C,EAA2C,+CAA3C,EAA2C,IAA3C,EAA2C,wDAA3C;AAOsB;AAAA;AACH;AAAA;AAQf;AAAA,+CAA+C,cAA/C,EAA+C,aAA/C;;;;;;;;;2BDeKvD,qB,EAAqB;cALjC,OAAAx0B,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD;AAHJ,S;AAKuB,Q;;;;;;;;;;;;;;;;;;gBAE7B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA,K;iBAAM,W;;;gBAEN,OAAAA,K;iBAAM,Y;;;gBAER,OAAAA;;;gBAEE,OAAA2gD;;;gBAEA,OAAAA;;;gBAED,OAAAA;;;gBAqBC,OAAAoD,S;iBAAU,M,EAAQ;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AEjFvB;AAAA;AAAA;;AAYA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BC;AACE;AACF;;;;;;AAyDU;AACE;AAAgF;AAAoB;AACtG;;;;;;AADwB;AAAA;AAA0D;AAAA;;;;;;AAOpF;AACE;AACE;AAAkB;AAAqB;AACvC;AACF;AACA;AACE;AAEF;AACF;;;;;AAT+D;AAEzC;AAAA;AAIlB;AAAA;;;;;;;;AAiBE;AAME;AAUE;AAAA;AAAA;AAAA;AAAA,WAA+B,QAA/B,EAA+B;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/B,EAA+B,QAA/B,EAA+B;AAAA;AAAA;AAAA;AAAA,SAA/B;AAGD;AACH;;;;;;AApBmB;AAOf;AAAA,wDAA0B,QAA1B,EAA0B,aAA1B,EAA0B,OAA1B,EAA0B,QAA1B,EAA0B,QAA1B,EAA0B,aAA1B,EAA0B,eAA1B,EAA0B,oBAA1B,EAA0B,QAA1B,EAA0B,sBAA1B,EAA0B,WAA1B,EAA0B,wCAA1B,EAA0B,YAA1B,EAA0B,kBAA1B,EAA0B,mBAA1B,EAA0B,oBAA1B;;;;;;AAsBhB;;AACE;AACF;;;;;AAFwC;;;;;;;;;;;;;;;AAIxC;AACE;AACE;AAAkB;AAAyB;AAE7C;AACA;AAAiB;AAAA;AAAA;AAAA;AAAA;AACf;AACF;AACA;AACE;AACF;AACF;;;;;AAXyC;AACb;AAAA;AAKd;AAAA;;;;;;AAQjB;AACC;AACE;AAAkB;AAAc;AAChC;AACE;AACF;AACF;AACD;;;;ADlHA,QAAMy0B,eAAe,GAAG,EAAxB;;QAQazD,wB;;;;;AAwFT,wCACY54D,QADZ,EAEY0R,OAFZ,EAGYgwB,sBAHZ,EAIYjwB,IAJZ,EAKYglD,MALZ,EAMY90E,SANZ,EAOYigD,OAPZ,EAQYjnC,KARZ,EASY6+D,GATZ,EASkC;AAAA;;AAAA;;AAE9B;AAVQ,iBAAAx5D,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAgwB,sBAAA,GAAAA,sBAAA;AACA,iBAAAjwB,IAAA,GAAAA,IAAA;AACA,iBAAAglD,MAAA,GAAAA,MAAA;AACA,iBAAA90E,SAAA,GAAAA,SAAA;AACA,iBAAAigD,OAAA,GAAAA,OAAA;AACA,iBAAAjnC,KAAA,GAAAA,KAAA;AACA,iBAAA6+D,GAAA,GAAAA,GAAA;AA7FZ;;AACgB,iBAAAt0E,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAKhB;;AACgB,iBAAAwyE,MAAA,GAA2B,EAA3B;AAQhB;;AACO,iBAAAoD,WAAA,GAA0B,SAAKC,kBAAL,EAA1B;AACP;;AACO,iBAAAiB,UAAA,GAAqB,CAArB;AACP;;AACO,iBAAAqB,WAAA,GAAsB,CAAtB;AACP;;AACO,iBAAAC,aAAA,GAAwB,CAAxB;AACP;;AACO,iBAAAp2D,MAAA,GAAkB,EAAlB;AACP;;AACO,iBAAAq2D,eAAA,GAA2B,EAA3B;AACP;;AACO,iBAAA7B,OAAA,GAAqC,EAArC;AAKP;;AACO,iBAAA8B,aAAA,GAA2C,EAA3C;AAGP;;AACO,iBAAArC,WAAA,GAAsB,CAAtB;AAKP;;AACO,iBAAAsC,gBAAA,GAA4B,IAA5B;AAEA,iBAAAC,WAAA,GAAwB,EAAxB;AAEA,iBAAAjL,QAAA,GAAoB,SAAKtoE,OAAL,EAApB;AACA,iBAAAwzE,gBAAA,GAAmB,KAAnB;AAMP,iBAAAC,aAAA,GAAyB,KAAzB;AAsCkC;AAGjC;AAvCD;;;;;mCAEkB;AACd,cAAI,KAAKC,WAAL,CAAiB,YAAjB,EAA+B16E,aAAnC,EAAkD;AAC9C,iBAAKy4E,GAAL,GAAW,KAAKiC,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6C04E,qBAA7C,EAAX;AACH;AACJ;;;kCAMgB;;;AACb,iBAAO,IAAI,UAAArlE,MAAJ,CAAW;AACdlR,gBAAI,EAAE,UAAA08C,WAAA,CAAY,KAAK/7C,MAAjB,EAAyBgJ,EADjB;AAEdmc,uBAAW,EAAE,KAFC;AAGdC,uBAAW,EAAE,YAAKmH,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB;AAH/B,WAAX,EAIJ0iB,UAJI,CAKH,IAAI,UAAAjrB,MAAJ,CAAW;AACPlR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EADC;AAEPK,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,YAAKmH,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB;AAHtC,WAAX,CALG,EAUH,KAVG,CAAP;AAYH;;;mCAyBc;AAAA;;AACX,eAAK0T,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,oBAAI,CAACivB,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,qBAAOA,CAAP;AAAA,aAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACxD,sBAAI,CAACk/C,sBAAL,CAA4BtM,wBAA5B;;AACA,kBAAMr1B,OAAO,GAAG,CAAC,QAAI,CAACgO,KAAN,GAAc,QAAI,CAAC0D,IAAL,CAAUrK,QAAV,CAAmB5Q,EAAjC,GAAsC,QAAI,CAACuX,KAA3D;AACA,sBAAI,CAAC5H,MAAL,GAAc,QAAI,CAACuL,OAAL,CAAavmB,MAAb,CAAoB,UAACmQ,CAAD;AAAA,uBAAOA,CAAC,CAAC+L,KAAF,CAAQ1f,OAAR,CAAgBoY,OAAhB,KAA4B,CAAnC;AAAA,eAApB,CAAd;;AACA,sBAAI,CAACzD,IAAL;;AACA,sBAAI,CAACygE,UAAL,GALwD,CAMxD;;;AACA,sBAAI,CAACC,UAAL;;AACA,sBAAI,CAACriE,KAAL,CAAWyZ,iBAAX,CAA6B,YAAM;AAC/B,wBAAI,CAACC,QAAL,CAAc,MAAd,EAAsB;AAAA,yBAAM,QAAI,CAAC2oD,UAAL,EAAN;AAAA,iBAAtB,EAA+C,KAAK,IAApD;AACH,eAFD,EARwD,CAWxD;;;AACA,sBAAI,CAAC16E,YAAL,CACI,QADJ,EAEI,QAAI,CAACo/C,sBAAL,CAA4Bx8C,MAA5B,CAAmC1C,SAAnC,CAA6C,UAAC0C,MAAD,EAAY;AACrD;AACA,wBAAI,CAACA,MAAL,GAAcA,MAAd;AACH,eAHD,CAFJ;AAOH,aAnBD;AAoBH,WArBD;;AAsBA,eAAKwsE,QAAL,GAAgB,KAAKtoE,OAAL,EAAhB,CAvBW,CAyBX;AACA;AACA;AACA;AAGH;;;0CAEiB;AACd,cAAM62B,EAAE,GAAG,KAAKt+B,SAAL,CAAe0O,aAAf,CAA6B,KAA7B,CAAX;;AACA,eAAK1O,SAAL,CAAes7E,QAAf,CAAwBh9C,EAAxB,EAA4B,yBAA5B;;AACA,eAAKi9C,aAAL,CAAmBvf,UAAnB,IAAiC,KAAKh8D,SAAL,CAAe+O,WAAf,CAA2B,KAAKwsE,aAAL,CAAmBvf,UAAnB,CAA8Bv7D,aAAzD,EAAwE69B,EAAxE,CAAjC;AACD;;;oCAGgBh+B,O,EAAsB;AACrC;AACA,cAAIA,OAAO,CAAC8rB,KAAR,IAAiB,KAAK0D,IAAL,CAAUrK,QAA/B,EAAyC;AACrC,gBAAMrH,OAAO,GAAG,CAAC,KAAKgO,KAAN,GAAc,KAAK0D,IAAL,CAAUrK,QAAV,CAAmB5Q,EAAjC,GAAsC,KAAKuX,KAA3D;AACA,iBAAK5H,MAAL,GAAc,KAAKuL,OAAL,CAAavmB,MAAb,CAAoB,UAACmQ,CAAD;AAAA,qBAAOA,CAAC,CAAC+L,KAAF,CAAQ1f,OAAR,CAAgBoY,OAAhB,KAA4B,CAAnC;AAAA,aAApB,CAAd;AACA,iBAAKi9D,UAAL,GAHqC,CAIrC;AACA;AACA;;AACA,iBAAKD,UAAL;AACH;;AACD,cAAI96E,OAAO,CAACk7E,UAAZ,EAAwB;AACpB,iBAAKJ,UAAL;AACH;AACJ;;;sCAEoB;;;AACjB,cAAI,CAAJ,KAAI,KAAKr7B,sBAAL,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAE07B,WAAjC,EAA8C,WAAK17B,sBAAL,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAE07B,WAAF,EAA3B;AACjD;;;+BAEa;AAAA;;AACV,eAAKp9D,QAAL,CAAcwP,KAAd,GAAsB,UAAtB;AACA,eAAKltB,YAAL,CACI,SADJ,EAEI,KAAK0d,QAAL,CACKld,MADL,CACY,4BADZ,EAEKN,SAFL,CAEe,UAACyP,KAAD;AAAA,mBAAW,QAAI,CAACohE,cAAL,CAAoBphE,KAApB,CAAX;AAAA,WAFf,CAFJ,EAFU,CAQV;;AACA,eAAK3P,YAAL,CACI,aADJ,EAEI,KAAKm0E,MAAL,CAAY4G,aAAZ,CAA0B76E,SAA1B,CAAoC,UAACgrC,MAAD,EAAY;AAC5C;AACA,gBAAIA,MAAM,CAAC6pC,GAAP,CAAW,MAAX,KAAsBt5D,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAA1B,EAA0E;AACtE,sBAAI,CAACs/D,OAAL,GAAe9vC,MAAM,CAACvzB,GAAP,CAAW,MAAX,CAAf;AACA,kBAAMka,OAAO,GAAGpW,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAhB;AACA,kBAAMu/D,SAAS,GAAGx/D,YAAY,CAACC,OAAb,CAAqB,8BAArB,CAAlB;AACA;;AACA,kBAAImW,OAAJ,EAAa;AACT,oBAAMlN,KAAK,GAAsBs2D,SAAS,GACpC,IAAI,cAAAr2D,KAAJ,CAAUpa,IAAI,CAACC,KAAL,CAAWwwE,SAAX,CAAV,CADoC,GAEpC/2E,SAFN;AAGA,oBAAM0S,OAAO,GAAG,IAAI,cAAAsP,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM1b,IAAI,CAACC,KAAL,CAAWonB,OAAX,CAAN,CAAC,EAAwB;AAAEoB,sBAAI,EAAEtO;AAAR,iBAAxB,CAAZ,CAAhB;;AACA,oBAAG,CAAC,QAAI,CAAC21D,gBAAT,EAA2B;AACvB,0BAAI,CAACA,gBAAL,GAAwB,IAAxB;;AACA,0BAAI,CAACrG,IAAL,CAAUr9D,OAAV,EAAmB+N,KAAnB;;AACAlJ,8BAAY,CAACmF,UAAb,CAAwB,wBAAxB;AACAnF,8BAAY,CAACmF,UAAb,CAAwB,8BAAxB;AACH;AACJ;AACJ;AACJ,WApBD,CAFJ,EATU,CAiCV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,cAAI,KAAK45D,WAAL,CAAiB,YAAjB,EAA+B16E,aAAnC,EAAkD;AAC9C,iBAAKy4E,GAAL,GAAW,KAAKiC,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6C04E,qBAA7C,EAAX;AACH;AACJ;AAED;;;;;;;qCAIoB7oE,K,EAAO;AACvB,eAAKgpE,UAAL,GAAkBhpE,KAAK,CAACyE,MAAN,CAAarT,SAA/B;AACA,eAAKi5E,WAAL,GAAmBrqE,KAAK,CAACyE,MAAN,CAAatT,UAAhC,CAFuB,CAGvB;;AACA,eAAKo2E,GAAL,CAAS1zB,aAAT;AACH;AAID;;;;6CAC0B;AACtB,cAAM4I,MAAM,GAAe,EAA3B;AACA,cAAMnqD,IAAI,GAAG,UAAAyJ,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoB8J,YAApB,CAAiC,MAAjC,CAAb;;AACA,eAAK,IAAIrL,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,EAApB,EAAwBA,IAAC,EAAzB,EAA6B;AACzB8rD,kBAAM,CAACtiD,IAAP,CAAY;AACRoK,gBAAE,EAAEjS,IAAI,CAACY,QAAL,CAAc;AAAE0B,oBAAI,EAAEjE;AAAR,eAAd,EAA2BiD,UAA3B,CAAsC,OAAtC,CADI;AAERvF,kBAAI,EAAEiE,IAAI,CAACY,QAAL,CAAc;AAAE0B,oBAAI,EAAEjE;AAAR,eAAd,EAA2BiD,UAA3B,CAAsC,OAAtC,EAA+CmJ,iBAA/C;AAFE,aAAZ;AAIH;;AACD,iBAAO0/C,MAAP;AACH;AAED;;;;qCACqB;;;AACjB,cAAM1kC,GAAG,GAAG,IAAI,UAAAvU,MAAJ,CAAW;AACnBlR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EADa;AAEnBK,uBAAW,EAAE,KAFM;AAGnBC,uBAAW,EAAE,YAAKmH,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB;AAH1B,WAAX,CAAZ;AAKA,eAAKgM,GAAL,GAAW,CAACA,GAAG,CAAC4kB,QAAJ,GAAe5kB,GAAG,CAAChlB,OAAJ,GAAc,EAA9B,IAAoC,EAA/C;AACA,eAAKw4E,WAAL,GAAmBxzD,GAAG,CAAC/b,YAAJ,CAAiB,MAAjB,EAAyBpI,UAAzB,CAAoC,OAApC,CAAnB;AACA,eAAK6rE,QAAL,GAAgB,KAAKtoE,OAAL,EAAhB;AACA,eAAKowE,GAAL,CAAS1zB,aAAT;AACH;AAED;;;;;;;;6BAKa5sC,O,EAAkB+N,K,EAAe;AAC1C,eAAK26B,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC5C/pD,gBAAI,EAAE;AACFzC,mBAAK,EAAEA,KAAK,IAAI/N,OAAO,CAAC+N,KADtB;AAEF/N,qBAAO,EAAPA;AAFE,aADsC;AAK5CgxC,qBAAS,EAAE,KALiC;AAM5CC,yBAAa,EAAE;AAN6B,WAAhD;;AAQA,eAAKmzB,OAAL,GAAe,IAAf;AACH;AAGD;;;;;;;uCAIuBpkE,O,EAAkB;AAAA;;AACrC,cAAIA,OAAO,IAAIA,OAAO,CAAC+N,KAAnB,IAA4B,KAAK61D,WAAjC,IAAgD,KAAKA,WAAL,CAAiB,YAAjB,EAA+B16E,aAAnF,EAAkG;AAC9F,gBAAMD,OAAO,GAAmB,KAAK26E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6C2N,aAA7C,sBACdmJ,OAAO,CAAC+N,KAAR,CAAczQ,EADA,EAAhC;AAGA;;AACA,gBAAIrU,OAAJ,EAAa;AACT,mBAAKR,SAAL,CAAes7E,QAAf,CAAwB96E,OAAxB,EAAiC,MAAjC;;AACA,kBAAMs7E,UAAU,GAAG,KAAKX,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6C04E,qBAA7C,EAAnB;AACA,kBAAM4C,YAAY,GACd74E,IAAI,CAACu2B,GAAL,CACIliB,OAAO,CAAC/J,WAAR,CAAoBksB,QAApB,CACIniB,OAAO,CAAC/J,WAAR,CAAoBlB,YAApB,CAAiC,KAAjC,CADJ,EAEI,SAFJ,CADJ,KAMC,KAAK,EANN,CADJ;AAQA,kBAAM4sE,GAAG,GAAG14E,OAAO,CAAC24E,qBAAR,EAAZ;AACA,mBAAKgC,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6C+kD,QAA7C,CAAsD;AAClDG,oBAAI,EACJuzB,GAAG,CAACvzB,IAAJ,GAAWm2B,UAAU,CAACn2B,IAAtB,GAA6B,KAAKw1B,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CgB,UAA1E,GAAuF,GAFrC;AAGlDgkD,mBAAG,EAAE,KAAK01B,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CilD,YAA7C,GAA4Dq2B,YAA5D,GAA2E,EAH9B;AAIlDn2B,wBAAQ,EAAE;AAJwC,eAAtD;AAMA7mD,wBAAU,CAAC,YAAK;AACZ,wBAAI,CAACiB,SAAL,CAAeg8E,WAAf,CAA2Bx7E,OAA3B,EAAoC,MAApC;AACH,eAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AACJ;AAED;;;;;;;;mCAKkBJ,C,EAAWC,C,EAAW;AACpC;AACA,cAAID,CAAC,IAAIC,CAAT,EAAY;AACR,iBAAK86E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CiB,SAA7C,IAA0DrB,CAAC,IAAI,CAA/D;AACA,iBAAK86E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CgB,UAA7C,IAA2DrB,CAAC,IAAI,CAAhE;AACA;;AACA,gBACKC,CAAC,IACE,KAAK86E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CiB,SAA7C,IACI,KAAKy5E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CilD,YAFrD,IAGCtlD,CAAC,IACE,KAAK+6E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CgB,UAA7C,IACI,KAAK05E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6Cw7E,WALrD,IAMC57E,CAAC,IAAI,KAAK86E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CiB,SAA7C,IAA0D,CANhE,IAOCtB,CAAC,IAAI,KAAK+6E,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CgB,UAA7C,IAA2D,CARrE,EASE;AACE,mBAAKhD,aAAL,CAAmB,aAAnB;AACH;;AACD,iBAAKy9E,YAAL,CAAkB;AAAEnnE,oBAAM,EAAE,KAAKomE,WAAL,CAAiB,YAAjB,EAA+B16E;AAAzC,aAAlB;AACH;AACJ;;;wCAEsB;AACnB,eAAK4d,QAAL,CAAc9b,GAAd,CAAkB,4BAAlB,EAAgD,IAAhD;AACH;;;uCAEqB;AAClB,eAAK9D,aAAL,CAAmB,aAAnB;AACH;;;mCAEiB09E,W,EAAsB;AAAA;;AACpC,cAAIA,WAAJ,EAAiB;AACb,iBAAKvB,aAAL,GAAqB,KAAKO,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CiB,SAAlE,CADa,CACgE;;AAC7E,iBAAKf,YAAL,CACI,aADJ,EAEI,KAAKX,SAAL,CAAemB,MAAf,CAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAACmP,KAAD,EAAuB;AAChE,kBAAMs7C,QAAQ,GAAG;AAAExrD,iBAAC,EAAEkQ,KAAK,CAACE,OAAX;AAAoBnQ,iBAAC,EAAEiQ,KAAK,CAACG;AAA7B,eAAjB;AACA,kBAAMpQ,CAAC,GACHurD,QAAQ,CAACvrD,CAAT,GAAa,QAAI,CAAC64E,GAAL,CAASkD,MAAT,GAAkB,QAAI,CAAClD,GAAL,CAAS17E,MAAT,GAAkB,IAAjD,GACM,CADN,GAEMouD,QAAQ,CAACvrD,CAAT,GAAa,QAAI,CAAC64E,GAAL,CAASzzB,GAAT,GAAe,QAAI,CAACyzB,GAAL,CAAS17E,MAAT,GAAkB,IAA9C,GACA,CAAC,CADD,GAEA,CALV;AAMA,kBAAM4C,CAAC,GACHwrD,QAAQ,CAACxrD,CAAT,GAAa,QAAI,CAAC84E,GAAL,CAASmD,KAAT,GAAiB,QAAI,CAACnD,GAAL,CAASr3B,KAAT,GAAiB,IAA/C,GACM,CADN,GAEM+J,QAAQ,CAACxrD,CAAT,GAAa,QAAI,CAAC84E,GAAL,CAASvzB,IAAT,GAAgB,QAAI,CAACuzB,GAAL,CAAS17E,MAAT,GAAkB,IAA/C,GACA,CAAC,CADD,GAEA,CALV;;AAMA,sBAAI,CAAC8+E,UAAL,CAAgBl8E,CAAC,GAAG,CAApB,EAAuBC,CAAC,GAAG,CAA3B;;AACA,sBAAI,CAAC2Y,KAAL,CAAWyZ,iBAAX,CAA6B,YAAM;AAC/B,wBAAI,CAACC,QAAL,CAAc,aAAd,EAA6B;AAAA,yBAAM,QAAI,CAAC4pD,UAAL,CAAgBl8E,CAAC,GAAG,EAApB,EAAwBC,CAAC,GAAG,EAA5B,CAAN;AAAA,iBAA7B,EAAoE,EAApE;AACH,eAFD;;AAGA,sBAAI,CAACw3E,GAAL,CAAS1zB,aAAT;AACH,aAnBD,CAFJ;AAuBA,iBAAK1lD,aAAL,CAAmB,UAAnB;AACH,WA1BD,MA0BO;AACH,iBAAK89E,YAAL;AACA,iBAAK79E,KAAL,CAAW,aAAX;AACH;AACJ;;;qCAEoB;AAAA;;AACjB,cAAM8qC,WAAW,GAAG,KAAKA,WAAzB;AACA,eAAKqxC,eAAL,GAAuB,KAAKr2D,MAAL,CAAYhb,MAAZ,CACnB,UAACvI,CAAD;AAAA,mBACI,CAAC,CAAC,QAAI,CAACu6E,UAAN,IAAoBv6E,CAAC,CAACykB,KAAF,CAAQ1f,OAAR,CAAgB,QAAI,CAACw1E,UAArB,KAAoC,CAAzD,MACC,CAAChyC,WAAD,IAAgBvoC,CAAC,CAAC4T,EAAF,KAAS20B,WAAW,CAAC30B,EADtC,KAEA5T,CAAC,CAAColB,QAHN;AAAA,WADmB,CAAvB;AAMA,eAAKw0D,eAAL,CAAqB/vE,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAAC2kB,UAAF,CAAazkB,aAAb,CAA2BD,CAAC,CAAC0kB,UAA7B,CAAV;AAAA,WAA1B;AACA,eAAKsrD,WAAL,GAAmB,KAAKx2D,MAAL,CAAY/b,GAAZ,CAAgB,UAACxH,CAAD;AAAA,uCAAoBA,CAAC,CAAC4T,EAAtB;AAAA,WAAhB,CAAnB;AACH;;;wCAIoB2nE,U,EAAmB;AACzC;AACA,cAAIA,UAAJ,EAAgB;AACf;AACA,iBAAK5B,aAAL,GAAqB,KAAKO,WAAL,CAAiB,YAAjB,EAA+B16E,aAA/B,CAA6CiB,SAAlE,CAFe,CAGf;;AACA,iBAAK+6E,oBAAL,GAJe,CAKf;;AACA,iBAAKh+E,aAAL,CAAmB,UAAnB;AACA,WAPD,MAOO;AACN;AACA,iBAAK89E,YAAL,GAFM,CAGN;;AACA,iBAAKG,wBAAL;AACA;AACF,S,CAED;;;;+CAC4B;AAAA;;AAC3B,eAAK/7E,YAAL,CACC,aADD,EAEC,KAAKX,SAAL,CAAemB,MAAf,CAAsB,QAAtB,EAAgC,WAAhC,EAA6C,UAACmP,KAAD,EAAuB;AACnE;AACA,gBAAMs7C,QAAQ,GAAG;AAAExrD,eAAC,EAAEkQ,KAAK,CAACE,OAAX;AAAoBnQ,eAAC,EAAEiQ,KAAK,CAACG;AAA7B,aAAjB,CAFmE,CAGnE;;AAHmE,wCAIpD,QAAI,CAACksE,wBAAL,CAA8B/wB,QAA9B,CAJoD;AAAA;AAAA,gBAI5DxrD,CAJ4D;AAAA,gBAIzDC,CAJyD,8BAKnE;;;AACA,oBAAI,CAACi8E,UAAL,CAAgBl8E,CAAC,GAAG,CAApB,EAAuBC,CAAC,GAAG,CAA3B,EANmE,CAOnE;;;AACA,oBAAI,CAACu8E,aAAL,CAAmBx8E,CAAnB,EAAsBC,CAAtB,EARmE,CASnE;;;AACA,oBAAI,CAACw3E,GAAL,CAAS1zB,aAAT;AACA,WAXD,CAFD;AAeA,S,CAED;;;;iDACiCyH,Q,EAAkC;AAClE,cAAMixB,SAAS,GAAG,IAAlB;AACA,cAAMz8E,CAAC,GAAG,KAAK08E,kBAAL,CAAwBlxB,QAAQ,CAACxrD,CAAjC,EAAoC,KAAK84E,GAAL,CAASvzB,IAA7C,EAAmD,KAAKuzB,GAAL,CAASmD,KAA5D,EAAmEQ,SAAnE,CAAV;AACA,cAAMx8E,CAAC,GAAG,KAAKy8E,kBAAL,CAAwBlxB,QAAQ,CAACvrD,CAAjC,EAAoC,KAAK64E,GAAL,CAASzzB,GAA7C,EAAkD,KAAKyzB,GAAL,CAASkD,MAA3D,EAAmES,SAAnE,CAAV;AACA,iBAAO,CAACz8E,CAAD,EAAIC,CAAJ,CAAP;AACA,S,CAED;;;;2CAC2BqJ,G,EAAay1B,G,EAAa94B,G,EAAaw2E,S,EAAiB;AAClF,cAAInzE,GAAG,GAAGrD,GAAG,GAAG,KAAK6yE,GAAL,CAASr3B,KAAT,GAAiBg7B,SAAjC,EAA4C;AAC1C,mBAAO,CAAP,CAD0C,CAChC;AACX,WAFD,MAEO,IAAInzE,GAAG,GAAGy1B,GAAG,GAAG,KAAK+5C,GAAL,CAASr3B,KAAT,GAAiBg7B,SAAjC,EAA4C;AACjD,mBAAO,CAAC,CAAR,CADiD,CACtC;AACZ,WAFM,MAEA;AACL,mBAAO,CAAP,CADK,CACK;AACX;AACD,S,CAED;;;;sCACsBz8E,C,EAAWC,C,EAAS;AAAA;;AACzC,eAAK2Y,KAAL,CAAWyZ,iBAAX,CAA6B,YAAM;AACjC,oBAAI,CAACC,QAAL,CAAc,aAAd,EAA6B;AAAA,qBAAM,QAAI,CAAC4pD,UAAL,CAAgBl8E,CAAC,GAAG,EAApB,EAAwBC,CAAC,GAAG,EAA5B,CAAN;AAAA,aAA7B,EAAoE,EAApE;AACD,WAFD;AAGA,S,CAED;;;;mDACgC;AAC/B,eAAK3B,KAAL,CAAW,aAAX;AACA;;;oCAEqB6Y,O,EAAS;AACxB,eAAK2jE,aAAL,GAAqB3jE,OAAO,CAACoiE,QAA7B;AACA,eAAKmB,aAAL,CAAmBvjE,OAAO,CAACqiE,QAA3B,IAAuCriE,OAAO,CAACoiE,QAA/C;AACH;;;4BA7YuB;AACpB,iBAAO,KAAK55B,sBAAL,CAA4B3kC,OAAnC;AACH;;;4BA+BqB;AAClB,cAAMmsB,GAAG,GAAG,KAAKzX,IAAL,CAAUrK,QAAtB;AACA;;AACA,cAAI8hB,GAAG,IAAIA,GAAG,CAACiC,WAAf,EAA4B;AACxB,mBAAO,KAAKzZ,OAAL,CAAa3pB,IAAb,CAAkBmhC,GAAG,CAACiC,WAAtB,CAAP;AACH;;AACD,iBAAO,IAAP;AACH;;;;MA5GO,OAAAnqC,a;;AAPZ;;;uBAMa43E,wB,EAAwB,2C,EAAA,sC,EAAA,4C,EAAA,4C,EAAA,uC,EAAA,kC,EAAA,kC,EAAA,+B,EAAA,0C;AAAA,K;;;YAAxBA,wB;AAAwB,wC;AAAA;AAAA;;yBA0DtB,YAAA8F,wB,EAAwB,I;;;;;;;;;;;;;mBA1D1B,c;AAAU,W,EAAA,K,EAAA,kB;;;;;;;;;;;;;;;;;;ACvCvB;AACC;;AAkCA;AAAkB;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;AAahB;AACE;AAME;AAAA,mBAAU,IAAAd,YAAA,QAAV;AAA8B,WAA9B;AAEA;AACE;AACE;AAAkB;AAAI;AACtB;AAGF;AACF;AAGA;AACE;AAUF;AACA;AAEA;AACE;AAME;AAGI;AAsBJ;AACF;AACF;AACF;AAEF;AAEA;AAIA;AAYF;AACD;AACA;;;;AAzIqB;AAAA;AA+CQ;AAAA;AAYC;AAAA;AAQK;AAAA;AAwBlB;AAAA;AA4BQ;AAAA;AAID;AAAA;AAcI;AAAA;;;;;;;;;;;2BDnGfjF,wB,EAAwB;cANpC,OAAAv0B,SAMoC;eAN1B;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAM0B,Q;;;;;;;;;;;;;;;;;;;;;;gBAKhC,OAAAtiD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAuCA,OAAA+jD,S;iBAAU,a,EAAe;AAAE,sBAAQ;AAAV,W;;;gBAEzB,OAAAA,S;iBAAU,YAAA82B,wB;;;gBAIV,OAAA1qE,Y;iBAAa,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErGlB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHY;AAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C;AACI;AAAkB;AAA8B;AAChD;AACI;AACJ;AACA;AAAmB;;AAA0C;AACjE;AACJ;;;;;;AAPyB;AAAA;AACC;AAAA;AAEd;AAAA;AAEe;AAAA;;;;;;AAP/B;AACI;AASJ;;;;;AATsB;AAAA;;;;;;AAJ9B;AACI;AACI;AAAoB;AAAO;AAC3B;AAWJ;AACA;AACI;AAAmB;AAAM;AACzB;AACI;;AACJ;AACJ;AACA;AACI;AAAyB;AAAY;AACrC;AACI;AACJ;AACJ;AACA;AACI;AAAmB;AAAM;AACzB;AACI;AACJ;AACJ;AACJ;;;;;;;;AAhCuB;AAAA;AAEkB;AAAA,oDAAqC,UAArC,EAAqC,GAArC;AAYlB;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;;;;;;AAMR;AAAiC;AAA0B;;;;QDtBlD8/D,+B;;;;;AAuDT,+CACYriD,IADZ,EAEYmwB,OAFZ,EAGYD,OAHZ,EAG2B;AAAA;;AAAA;;AAEvB;AAJQ,iBAAAlwB,IAAA,GAAAA,IAAA;AACA,iBAAAmwB,OAAA,GAAAA,OAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AApDF,iBAAAi9B,aAAA,GAAgB,IAAI,OAAA98B,YAAJ,EAAhB;AAEH,iBAAAjmB,MAAA,GAAS,EAAT;AAkDoB;AAG1B;AAnDD;;;;;mCAqDkB;AACd,eAAKgjD,aAAL;AACH;;;oCAEkB58E,O,EAAwB;AACvC,cAAIA,OAAO,CAACiX,OAAZ,EAAqB;AACjB,iBAAK2lE,aAAL;AACH;AACJ;AAED;;;;mCACkB/iD,K,EAAsB;AACpC,cAAM5iB,OAAO,GAAG,KAAKA,OAAL,IAAgB4iB,KAAK,CAAC5iB,OAAtC;AACA6E,sBAAY,CAACkvB,OAAb,CAAqB,sBAArB,EAA6CngC,IAAI,CAACE,SAAL,CAAe8uB,KAAK,CAAC5b,MAAN,EAAf,CAA7C;AACAnC,sBAAY,CAACkvB,OAAb,CAAqB,wBAArB,EAA+CngC,IAAI,CAACE,SAAL,CAAekM,OAAO,CAAC6pB,SAAR,EAAf,CAA/C;AACAhlB,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C/zB,OAAO,CAAC/J,WAAR,CAAoBjB,EAA9D;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C/zB,OAAO,CAAC/J,WAAR,CAAoBmb,WAAlE;AACH;AAED;;;;8CAC6B;AAAA;;AACzB,cAAM81C,SAAS,GAAG,KAAKxe,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACvD/jD,gBAAI,EAAE;AACFvgB,sBAAQ,EAAE,KAAK+P,OAAL,CAAa/P,QADrB;AAEF+P,qBAAO,EAAE,KAAKA,OAFZ;AAGF20D,2BAAa,EAAE;AAHb,aADiD;AAMvD3jB,qBAAS,EAAE,KAN4C;AAOvDC,yBAAa,EAAE;AAPwC,WAAzC,CAAlB;;AASA,eAAK7nD,YAAL,CACI,cADJ,EAEI89D,SAAS,CAACzc,iBAAV,CAA4B1xC,KAA5B,CAAkCzP,SAAlC,CAA4C,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AACrE,0BAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB24C,iCAAS,CAACld,KAAV;AACA,6BAAK07B,aAAL,CAAmB57B,IAAnB,CAAwB/wC,KAAK,CAACwO,QAA9B;AACH;;AAJoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAA5C,CAFJ;AASH;AAED;;;;;;kCAGiBqb,K,EAAsB;AACnC,cAAM5iB,OAAO,GAAG,KAAKA,OAAL,IAAgB4iB,KAAK,CAAC5iB,OAAtC;AACA,cAAI,CAACA,OAAD,IAAY,CAAC4iB,KAAjB,EAAwB;AACxB;;AACA,cAAI/d,YAAJ,EAAkB,KAAKk7D,UAAL,CAAgBn9C,KAAhB;;AAClB,eAAK6lB,OAAL,CAAajL,QAAb,CAAsB,CAAC,WAAD,EAAc,QAAd,CAAtB,EAA+C;AAC3CyM,uBAAW,EAAE;AAAEjqC,qBAAO,EAAEA,OAAO,CAAC1C,EAAnB;AAAuB+/D,kBAAI,EAAEz6C,KAAK,CAACtlB;AAAnC;AAD8B,WAA/C;;AAGA,eAAKorC,OAAL,CAAak9B,QAAb;AACH;AAED;;;;wCACwB;AAAA;;AACpB,cAAIjjD,MAAM,GAAG,KAAK3iB,OAAL,CAAauf,QAAb,CAAsBttB,MAAtB,CACT,UAAC2wB,KAAD;AAAA,mBAAWA,KAAK,CAACC,WAAN,KAAsB,QAAI,CAAC9U,KAAL,CAAWtR,KAA5C;AAAA,WADS,CAAb;AAGAkmB,gBAAM,GAAGA,MAAM,CAACzxB,GAAP,CAAW,UAAC0xB,KAAD,EAAW;AAC3B,gBAAIijD,GAAG,GAAGjjD,KAAK,CAAC5b,MAAN,EAAV;AACA6+D,eAAG,CAAC7lE,OAAJ,GAAc,QAAI,CAACA,OAAnB,CAF2B,CAEC;;AAC5B,mBAAO,IAAI,cAAAwf,aAAJ,CAAkBqmD,GAAlB,CAAP;AACH,WAJQ,CAAT;AAKA,eAAKljD,MAAL,GAAcA,MAAd;AACH;;;4BAtHe;AACZ,cAAIkL,KAAK,GAAG,CAAZ;AACA,eAAKlL,MAAL,CAAYl5B,OAAZ,CAAoB,UAACm5B,KAAD;AAAA,mBAAYiL,KAAK,IAAIjL,KAAK,CAACiL,KAA3B;AAAA,WAApB;AACA,iBAAOA,KAAP;AACH;;;4BAEsB;AAAA;;AACnB,iBAAO,KAAK7tB,OAAL,CAAa0f,KAAb,CAAmBtS,IAAnB,CAAwB,UAAChL,CAAD;AAAA,mBAAO,QAAI,CAACugB,MAAL,CAAYvV,IAAZ,CAAiB,UAACmH,CAAD;AAAA,qBAAOA,CAAC,CAACjX,EAAF,KAAS8E,CAAhB;AAAA,aAAjB,CAAP;AAAA,WAAxB,CAAP;AACH;AAED;;;;4BACsB;AAClB,iBAAO,CAAC,KAAKugB,MAAL,CAAYp1B,MAAZ,GAAqB,KAAKo1B,MAAL,CAAY,CAAZ,EAAe8K,WAApC,GAAkD,EAAnD,KAA0D,kBAAjE;AACH;AAED;;;;4BACiB;AACb,cAAM1f,KAAK,GAAG,KAAKA,KAAL,IAAc;AAAE8G,iBAAK,EAAE;AAAEob,yBAAW,EAAE;AAAf;AAAT,WAA5B;AACA,cAAM/hB,QAAQ,GAAG,KAAKqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACmhC,GAAD;AAAA,mBAASA,GAAG,CAAC1yB,EAAJ,KAAWyQ,KAAK,CAAC8G,KAAN,CAAYob,WAAhC;AAAA,WAAzB,KAAyE;AACtF4B,oBAAQ,EAAE;AAD4E,WAA1F;AAGA,iBAAO3jB,QAAQ,CAAC2jB,QAAhB;AACH;AAED;;;;4BACgB;AAAA;;AACZ,cAAI,KAAKlP,MAAL,CAAYp1B,MAAhB,EAAwB;AACpB,gBAAMozB,IAAI,GAAG,KAAK3gB,OAAL,CAAame,KAAb,CAAmBtvB,IAAnB,CACT,UAAC8xB,IAAD;AAAA,qBACIA,IAAI,CAACrwB,IAAL,KAAc,UAAd,IACAqwB,IAAI,CAAC5S,KAAL,KAAe,QAAI,CAACA,KAAL,CAAWtR,KAD1B,IAEAkkB,IAAI,CAACH,MAAL,KAAgB,QAAI,CAACxgB,OAAL,CAAaie,OAAb,CAAqB72B,IAHzC;AAAA,aADS,CAAb;AAMA,mBAAOu5B,IAAI,GAAGA,IAAI,CAACpe,OAAR,GAAkB,YAA7B;AACH,WARD,MAQO;AACH,mBAAO,YAAP;AACH;AACJ;AAED;;;;4BACkB;AACd,iBAAO,KAAKvC,OAAL,CAAaw7D,oBAAb,KAAsC,MAAtC,IAAgD,KAAKx7D,OAAL,CAAayc,QAApE;AACH;;;;MArDgD,OAAA30B,a;;AALrD;;;uBAKa8yE,+B,EAA+B,4C,EAAA,kC,EAAA,+B;AAAA,K;;;YAA/BA,+B;AAA+B,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,klB;AAAA;AAAA;ACf5C;AAAqB;AAAQ;AAC7B;AAkCA;AAA8C;AAAA,mBAAS,IAAAkL,mBAAA,EAAT;AAA8B,WAA9B;AAAgC;AAAa;AAC3F;;;;AAnCqB;AAAA;;;;;;;;;;2BDcRlL,+B,EAA+B;cAL3C,OAAAzvB,SAK2C;eALjC;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKiC,Q;;;;;;;;;;gBAEvC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBI;AACI;AAAkB;AAAU;AAC5B;AACI;AACJ;AACA;AACI;AAKI;AACJ;AACA;AAMI;AACJ;AACJ;AACJ;;;;;AAtB6D;AAGrD;AAAA;AAMI;AAAA;AAEU;AAAA;AAMV;AAAA;AAFA;AAIU;AAAA;;;;;;AA4BtB;AACI;AAAqB;AAAQ;AAC7B;AACI;AACJ;AACJ;;;;;AALmB;AAGX;AAAA;;;;;;AA1EZ;AACI;AACI;AAAkB;AAAK;AACvB;AACI;AACJ;AACA;AACI;AAKI;AACJ;AACA;AAMI;AACJ;AACJ;AACJ;AACA;AAuBA;AACI;AAAsB;AAAY;AAClC;AACI;AACJ;AACJ;AACA;AACI;AAAwB;AAAK;AAC7B;AACI;AACJ;AACJ;AACA;AACI;AAAsB;AAAS;AAC/B;AACI;AACJ;AACJ;AACA;AACI;AAAuB;AAAU;AACjC;AACI;AACJ;AACJ;AACA;AAMA;AACI;AAA0B;AAAa;AACvC;AACI;AACJ;AACJ;AACA;AACI;AAAmB;AAAM;AACzB;;AACJ;AACJ;;;;;AAtFuB;AAAA;AAGX;AAAA;AAMI;AAAA;AAEU;AAAA;AAIV;AAAA,+GAAsC,MAAtC,EAAsC,mFAAtC,EAAsC,gBAAtC;AAIU;AAAA;AAIH;AAAA;AAuBA;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAG2C;AAAA;AAMhC;AAAA;AAMA;AAAA;AAEsB;AAAA;;;;;;;;AAG7C;AAAmD;AAAA;AAAA;AAAA;AAAA;AAC/C;AACJ;;;;ADxF2D;;QAiB9CmvB,8B;;;;;AAgDT,8CAAoB/xB,OAApB,EAAwC;AAAA;;AAAA;;AACpC;AADgB,iBAAAA,OAAA,GAAAA,OAAA;AA3CpB;;AAEU,iBAAAg9B,aAAA,GAAgB,IAAI,OAAA98B,YAAJ,EAAhB;AAEO,iBAAA7vC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAEV,iBAAAm9B,MAAA,GAA2B,EAA3B;AAqCiC;AAEvC;AArCD;;;;;mCAuCe;AAAA;;AACX1tE,gBAAM,CAACsnB,MAAP,CAAc,KAAK3f,OAAL,CAAa0f,KAAb,IAAsB,EAApC,EAAwCj2B,OAAxC,CAAgD,UAAAC,CAAC,EAAI;AACjD,oBAAI,CAACq8E,MAAL,CAAYr8E,CAAZ,IAAiB,IAAjB;AACH,WAFD;AAGA,eAAKs8E,UAAL;AACH;AAED;;;;;;qCAGa;AAAA,+BACsC,KAAKhmE,OAD3C;AAAA,cACFie,OADE,kBACFA,OADE;AAAA,cACOD,SADP,kBACOA,SADP;AAAA,cACkBU,gBADlB,kBACkBA,gBADlB;AAET,eAAKuqB,cAAL,GAAsB;AAClBC,oBAAQ,EAAE;AACN5xC,qBAAO,EAAE2mB,OAAO,KAAMA,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAsCwhB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAqCiiB,gBAAgB,KAAK,IAA1D,IAAkEV,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAAjJ,CADV;AAENnwB,mBAAK,EAAG0vB,OAAO,CAACxhB,KAAR,KAAkBuhB,SAAS,CAACvhB,KAA5B,IAAqCiiB,gBAAgB,KAAK,IAA1D,IAAkEV,SAAS,CAACvhB,KAAV,KAAmBiiB,gBAAgB,CAAC,OAAD,CAAtG,GAAoHA,gBAAgB,CAAC,MAAD,CAAhB,IAA4BA,gBAAgB,CAAC,OAAD,CAAhK,GAA8K,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE72B,IAAT,KAAiB62B,OAAO,CAACxhB;AAFxM;AADQ,WAAtB;AAMH;;;sCAEoB;AAAA;;AACjB,cAAMyqD,SAAS,GAAG,KAAKxe,OAAL,CAAa9lC,IAAb,CAAyC,0BAAA2xD,qBAAzC,EAAgE;AAC9E/jD,gBAAI,EAAE;AACFvgB,sBAAQ,EAAE,KAAK+P,OAAL,CAAa/P,QADrB;AAEF+P,qBAAO,EAAE,KAAKA,OAFZ;AAGF1D,oBAAM,EAAE,cAAAsqB,aAAA,CAAc+iB;AAHpB,aADwE;AAM9EqH,qBAAS,EAAE,KANmE;AAO9EC,yBAAa,EAAE;AAP+D,WAAhE,CAAlB;;AASA,eAAK7nD,YAAL,CACI,cADJ,EAEI89D,SAAS,CAACzc,iBAAV,CAA4B1xC,KAA5B,CAAkCzP,SAAlC,CAA4C,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/DgO,0BAD+D,GACxD,cAAAqd,mBAAA,CAAoB,KAAKpkB,OAAzB,EAAkC,CAAC,YAAD,CAAlC,EAAkD,IAAlD,CADwD;;AAErE,0BAAIjH,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB24C,iCAAS,CAACld,KAAV;AACA,6BAAK07B,aAAL,CAAmB57B,IAAnB,CAAwB/wC,KAAK,CAACwO,QAA9B;AACH;;AALoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAA5C,CAFJ;AAUH;;;4BA9EqB;AAClB,iBAAO,CAAC,KAAKvH,OAAL,CAAaqc,IAAb,IAAqB,KAAKtO,KAA3B,EAAkCoK,UAAzC;AACH;AACD;;;;4BACsB;AAClB,iBAAO,KAAKnY,OAAL,GAAe,OAAA3N,gBAAA,CAAiB,KAAK2N,OAAL,CAAa5T,QAA9B,CAAf,GAAyD,QAAhE;AACH;AAED;;;;4BACqC;AACjC,cAAMyxD,IAAI,GAAG,KAAK79C,OAAL,CAAa/J,WAAb,CAAyB/J,QAAzB,CAAkC;AAACJ,mBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAvB,WAAlC,CAAb;AACA,2BAAU,KAAKqrB,UAAf,gBAA+BomC,IAAI,CAAClxD,UAAL,CAAgB,OAAhB,EAAyBmJ,iBAAzB,EAA/B;AACH;AAED;;;;4BACwB;AACpB,2BAAU,KAAKkK,OAAL,CAAa/J,WAAb,CAAyBtJ,UAAzB,CAAoC,aAApC,CAAV,cAAgE,KAAKqT,OAAL,CAAa/J,WAAb,CAAyBtJ,UAAzB,CAAoC,OAApC,EAA6CmJ,iBAA7C,EAAhE;AACH;AACD;;;;4BACsB;AAClB,cAAM+nD,IAAI,GAAG,KAAK79C,OAAL,CAAa/J,WAAb,CAAyB/J,QAAzB,CAAkC;AAACJ,mBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAvB,WAAlC,CAAb;AACA,2BAAUyxD,IAAI,CAAClxD,UAAL,CAAgB,cAAhB,CAAV,cAA6CkxD,IAAI,CAAClxD,UAAL,CAAgB,OAAhB,EAAyBmJ,iBAAzB,EAA7C;AACH;AACD;;;;4BACuB;AACnB,iBAAO,KAAKkK,OAAL,CAAa+d,SAAb,CAAuB7sB,GAAvB,CAA2B,UAAC4lC,MAAD;AAAA,mBAAYA,MAAM,CAAC1vC,IAAnB;AAAA,WAA3B,EAAoDsN,IAApD,CAAyD,IAAzD,CAAP;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAKsL,OAAL,CAAaw7D,oBAAb,KAAsC,MAA7C;AACH;;;;MA7C+C,OAAA1zE,a;;AALpD;;;uBAKa2yE,8B,EAA8B,kC;AAAA,K;;;YAA9BA,8B;AAA8B,sC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,21B;AAAA;AAAA;ACtB3C;AACI;AACJ;AACA;AAwFA;;;;AAxFqB;AAAA;AAwFE;AAAA;;;;;;;;;;2BDrEVA,8B,EAA8B;cAL1C,OAAAtvB,SAK0C;eALhC;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAKgC,Q;;;;;;gBAEtC,OAAA1gD;;;gBAEA,OAAAA;;;gBAGA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRQ;AACI;AAGJ;;;;AAFQ;AAAA;;;;;;;;;;;;;;AAKhB;AACI;AAEI;AAAA;AAAA;AAAA;AAAA;AACH;AACL;;;;;AAJ+B;AAAA,0FAA+C,SAA/C,EAA+C,cAA/C;;;;;;;;AAM3B;AACI;AACI;AACI;AAAqD;AAAA;AAAA;AAAA;AAAA;AAAwC;AACjG;AACA;AACI;AAGI;AAAA;AAAA;AAAA;AAAA;AACH;AACL;AACA;AACI;AAAsD;AAAA;AAAA;AAAA;AAAA;AAAwC;AAClG;AACA;AACI;AAA6D;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC3G;AACJ;AACA;AACI;AAAsB;AAAA;AAAA;AAAA;AAAA;AAClB;AACI;AACA;AACJ;AACJ;AACA;AAAuB;AAAA;AAAA;AAAA;AAAA;AACnB;AACI;AACA;AACJ;AACJ;AACA;AAA0C;AAAA;AAAA;AAAA;AAAA;AACtC;AACI;AACA;AACJ;AACJ;AACA;AAA2C;AAAA;AAAA;AAAA;AAAA;AACvC;AACI;AACA;AACJ;AACJ;AACJ;AACJ;;;;;AA1C6B;AAAA,iDAAmB,OAAnB,EAAmB,YAAnB;AAIb;AAAA,iDAAmB,OAAnB,EAAmB,YAAnB;AAMc;AAAA,iDAAmB,OAAnB,EAAmB,YAAnB;AAGO;AAAA,iDAAmB,OAAnB,EAAmB,YAAnB;AAImB;AAAA;AAME;AAAA;AAM1C;AAAA;AAMA;AAAA;AAA6D;;;;;;AAU7E;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;QD/CjBivB,4B;;;;;AAkCT,4CACYzzD,QADZ,EAEY+R,SAFZ,EAGY2vB,sBAHZ,EAIYG,WAJZ,EAKYD,OALZ,EAMqCtW,KANrC,EAMmE;AAAA;;AAAA;;AAE/D;AAPQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA+R,SAAA,GAAAA,SAAA;AACA,iBAAA2vB,sBAAA,GAAAA,sBAAA;AACA,iBAAAG,WAAA,GAAAA,WAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AACyB,iBAAAtW,KAAA,GAAAA,KAAA;AAvCrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAGjB;;AACQ,iBAAAq9B,SAAA,GAAY,UAAC1jE,OAAD;AAAA,iBAAa,UAACmG,GAAD,EAAS;AACtC,qBAAK5B,QAAL,CAAcy2B,WAAd,WAA6Bh7B,OAA7B,sBAAgDmG,GAAG,CAACnG,OAAJ,IAAemG,GAA/D;;AACA,qBAAKw9D,UAAL,CAAgB,IAAhB;AACH,WAHmB;AAAA,SAAZ;;AAkC2D;AAGlE;AAhCD;;;;;mCAkCe;AACX,cAAI,CAAC,KAAKlmE,OAAV,EAAmB;AACf,iBAAK2oC,WAAL,CAAiBqB,KAAjB;;AACA;AACH;;AAAA;AACJ;;;mCAEiB5jD,K,EAAe;AAC7B,eAAKyd,OAAL,GAAezd,KAAf;AACA,eAAKuiD,WAAL,CAAiBQ,YAAjB,GAAgC,CAAC,CAAC,KAAKtlC,OAAvC;AACH;;;wCAEsB;AAAA;;AACnB,eAAKqiE,UAAL,CAAgB,sBAAhB;AACA,cAAMntE,KAAK,GAAG,KAAKiH,OAAL,CAAagH,MAAb,EAAd;;AACA,eAAK6R,SAAL,CACKmmB,MADL,CACY,KAAKh/B,OAAL,CAAa1C,EADzB,EAC6B;AACrBmL,qBAAS,EAAE,IADU;AAErBvE,gBAAI,EAAE,KAAKlE,OAAL,CAAage,SAAb,CAAuBvhB,KAFR;AAGrBsf,sBAAU,EAAE,KAAKhO,KAAL,CAAWtR,KAHF;AAIrB6e,mBAAO,EAAE,KAAKtb,OAAL,CAAasb,OAJD;AAKrB/vB,iBAAK,EAAEwN,KAAK,CAACxN,KALQ;AAMrBsrB,eAAG,EAAE9d,KAAK,CAAC8d;AANU,WAD7B,EASKvP,IATL,CASU,YAAM;AACR,oBAAI,CAACR,QAAL,CAAcw2B,aAAd,CAA4B,mBAA5B;;AACA,oBAAI,CAACt9B,OAAL,CAAaoP,MAAb,GAAsB,cAAA2T,cAAA,CAAeimB,QAArC;;AACA,oBAAI,CAACR,sBAAL,CAA4Bl0C,OAA5B,CAAoC,QAAI,CAAC0L,OAAzC;;AACA,oBAAI,CAACkmE,UAAL,CAAgB,IAAhB;;AACA,oBAAI,CAACntE,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE,QAAV;AAAoBhH,sBAAQ,EAAE,cAAAwb,cAAA,CAAeimB;AAA7C,aAAhB;AACH,WAfL,EAeO,KAAKi9B,SAAL,CAAe,wHAAf,CAfP;AAgBH;;;yCAEuB;AAAA;;AACpB,eAAKC,UAAL,CAAgB,sBAAhB;;AACA,eAAKrtD,SAAL,CACKomB,OADL,CACa,KAAKj/B,OAAL,CAAa1C,EAD1B,EAC8B;AACtB0sB,sBAAU,EAAE,KAAKhqB,OAAL,CAAa1C,EADH;AAEtB0gB,qBAAS,EAAE,KAAKhe,OAAL,CAAage,SAAb,CAAuBvhB,KAFZ;AAGtB6e,mBAAO,EAAE,KAAKtb,OAAL,CAAasb,OAHA;AAItB/vB,iBAAK,EAAE,KAAKyU,OAAL,CAAa/J,WAAb,CAAyB8G,OAJV;AAKtB8Z,eAAG,EAAE,KAAK7W,OAAL,CAAa9J,SAAb,CAAuB6G,OALN;AAMtBgf,sBAAU,EAAE,KAAKhO,KAAL,CAAWtR;AAND,WAD9B,EASK6K,IATL,CASU,YAAM;AACR,oBAAI,CAACR,QAAL,CAAcw2B,aAAd,CAA4B,mBAA5B;;AACA,oBAAI,CAACt9B,OAAL,CAAaoP,MAAb,GAAsB,cAAA2T,cAAA,CAAetG,QAArC;;AACA,oBAAI,CAAC+rB,sBAAL,CAA4Bl0C,OAA5B,CAAoC,QAAI,CAAC0L,OAAzC;;AACA,oBAAI,CAACkmE,UAAL,CAAgB,IAAhB;;AACA,oBAAI,CAACntE,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,oBAAM,EAAE,QAAV;AAAoBhH,sBAAQ,EAAE,cAAAwb,cAAA,CAAetG;AAA7C,aAAhB;AACH,WAfL,EAeO,KAAKwpD,SAAL,CAAe,sDAAf,CAfP;AAgBH;AAED;;;;+CAC8B;AAAA;;AAC1B,cAAM97B,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAA+C,iCAAAy3D,2BAA/C,CAAZ;;AACA,eAAKjxE,YAAL,CACI,SADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE3DA,KAAK,CAACwV,MAAN,KAAiB,QAF0C;AAAA;AAAA;AAAA;;AAG3D47B,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB,GAAgC,IAAhC;AAH2D;AAI3C,6BAAM,KAAKsiE,aAAL,YAClB,KAAKF,SAAL,CAAe,wBAAf,CADkB,CAAN;;AAJ2C;AAIrDxlE,6BAJqD;AAO3D0pC,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB,GAAgC,KAAhC;AACAsmC,yBAAG,CAACM,iBAAJ,CAAsBhqC,OAAtB,GAAgC,CAAC,CAACA,OAAlC;AACAjZ,gCAAU,CAAC,YAAM;AACb2iD,2BAAG,CAACH,KAAJ;AACH,uBAFS,EAEP,IAFO,CAAV;;AAT2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC,CAFJ;AAiBH;AAED;;;;yCACqB;AACjB,eAAKtB,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACrC/jD,gBAAI,EAAE;AACFxQ,qBAAO,EAAE,KAAKA,OADZ;AAEF1D,oBAAM,EAAE,cAAAsqB,aAAA,CAAcD;AAFpB,aAD+B;AAKrCqqB,qBAAS,EAAE,KAL0B;AAMrCC,yBAAa,EAAE;AANsB,WAAzC;AAQH;AAED;;;;wCAC6D;AAAA,cAAjCvwB,IAAiC,uEAAJ,EAAI;;;;;;;;AACzD,yBAAKwlD,UAAL,CAAgB,qBAAhB;;AACA,2BAAM,KAAKlmE,OAAL,WAAoB0gB,IAApB,CAAN;;;AACA,yBAAK5Z,QAAL,CAAcw2B,aAAd,CAA4B,8BAA5B;;AACA,yBAAKvkC,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,4BAAM,EAAE,QAAV;AAAoBhH,8BAAQ,EAAE;AAA9B,qBAAhB;;AACA,yBAAKohC,WAAL,CAAiBkC,WAAjB,GAA+BvhD,SAA/B,CAAyC,UAAA8Y,CAAC;AAAA,6BAAI,QAAI,CAAC8jE,UAAL,CAAgB,IAAhB,CAAJ;AAAA,qBAA1C;;AACA,yBAAKv9B,WAAL,CAAiBqB,KAAjB;;AACA,yBAAKljC,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B;AAAE8C,4BAAM,EAAEokB,IAAI,IAAIA,IAAI,CAACkJ,MAAb,GAAsB,QAAtB,GAAiC,SAA3C;AAAsD5pB,6BAAO,EAAE,KAAKA;AAApE,qBAA/B;;uDACO,I;;;;;;;;;AACV;AAED;;;;2CACgC+G,I,EAAiB;;;;;;;;;AAC7C,yBAAKm/D,UAAL,CAAgB,0BAAhB;AACM33E,yB,GAAQwY,IAAI,CAACxY,K;AACb63E,gC,GAAe,KAAKpmE,OAAL,CAAagH,MAAb,E;AACfhH,2B,GAAU,IAAI,cAAAsP,OAAJ,CAAY,MAAD,OAAC,CAAD,gCACpB82D,YADoB,GAEpB73E,KAFoB,CAAC,EAEhB;AACR8tB,0BAAI,EAAE9tB,KAAK,CAACmsB,UAAN,CAAiB,CAAjB;AADE,qBAFgB,CAAZ,C,EAKf;;AACMgvB,mC,GAAmB1pC,OAAO,CAACme,KAAR,KAAa,MAAIne,OAAO,CAACme,KAAZ,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE5wB,MAAhC,CAAD,IAA6CyS,OAAO,CAACuf,QAAR,KAAgB,MAAIvf,OAAO,CAACuf,QAAZ,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEhyB,MAAtC,CAA7C,uBAA+F,CAAD,KAACyS,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE+N,KAAT,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEtR,KAA/G,EAAuH,GAAvH,IAA+H,I,EAAM;;AAC7J,wBAAIitC,eAAJ,EAAqB;AAClB1pC,6BAAO,CAACsF,KAAR,GAAgBokC,eAAhB;AACA1pC,6BAAO,CAACuX,SAAR,GAAoBmyB,eAApB;AACF;;;AAC4B,2BAAM,KAAK7wB,SAAL,CAC/B8lB,IAD+B,CAC1B3+B,OAD0B,WAEzB,KAAKimE,SAAL,+BAFyB,CAAN;;;AAAxBzD,+B;;AAGN,wBAAIA,WAAJ,EAAiB;AACP5qD,yBADO,GACD,IAAI,cAAAtI,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM82D,YAAN,CAAC,EAAsB5D,WAAW,CAAC34C,SAAZ,EAAtB,CAAZ,CADC;AAEb,2BAAKuI,KAAL,CAAWpyB,OAAX,GAAqB4X,GAArB;;AACA,2BAAK4wB,sBAAL,CAA4Bl0C,OAA5B,CAAoCsjB,GAApC;;AACA,2BAAK9Q,QAAL,CAAcw2B,aAAd,CAA4B,mCAA5B;AACH;;AACD,yBAAK4oC,UAAL,CAAgB,IAAhB;;;;;;;;;AACH;;;sCAE0Bn/D,I,EAAM;;;;;;;;;;;AAC7B,yBAAKm/D,UAAL,CAAgB,qBAAhB;AACM33E,yB,GAAQwY,IAAI,CAACxY,K;AACb63E,gC,GAAe,KAAKpmE,OAAL,CAAagH,MAAb,E;AACf/Q,+B,GAAc8Q,IAAI,CAACquB,QAAL,CAAcppC,MAAd,CAAqBuC,K;AACnC2H,6B,GAAYD,WAAW,CAAC/J,QAAZ,CAAqB;AAAEJ,6BAAO,EAAEyC,KAAK,CAACnC;AAAjB,qBAArB,C;AACZ4T,2B,GAAU,IAAI,cAAAsP,OAAJ,CAAY,MAAD,OAAC,CAAD,gCACpB82D,YADoB,GAEpB73E,KAFoB,CAAC,EAEhB;AACR0H,iCAAW,EAAXA,WADQ;AAERC,+BAAS,EAATA,SAFQ;AAGRiH,iCAAW,EAAElH,WAAW,CAAC8G,OAHjB;AAIRF,+BAAS,EAAE3G,SAAS,CAAC6G,OAJb;AAKRsf,0BAAI,EAAE9tB,KAAK,CAACmsB,UAAN,CAAiB,CAAjB;AALE,qBAFgB,CAAZ,C,EASf;;AACMgvB,mC,GAAmB1pC,OAAO,CAACme,KAAR,KAAa,MAAIne,OAAO,CAACme,KAAZ,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE5wB,MAAhC,CAAD,IAA6CyS,OAAO,CAACuf,QAAR,KAAgB,MAAIvf,OAAO,CAACuf,QAAZ,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEhyB,MAAtC,CAA7C,uBAA+F,CAAD,KAACyS,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE+N,KAAT,MAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEtR,KAA/G,EAAuH,GAAvH,IAA+H,I,EAAM;;AAC7J,wBAAIitC,eAAJ,EAAqB;AAClB1pC,6BAAO,CAACsF,KAAR,GAAgBokC,eAAhB;AACA1pC,6BAAO,CAACuX,SAAR,GAAoBmyB,eAApB;AACF;;;AAC4B,2BAAM,KAAK7wB,SAAL,CAC/B8lB,IAD+B,CAC1B3+B,OAD0B,WAEzB,KAAKimE,SAAL,0BAFyB,CAAN;;;AAAxBzD,+B;;AAGN,wBAAIA,WAAJ,EAAiB;AACb,2BAAKh6B,sBAAL,CAA4BptC,QAA5B,CAAqC9R,SAArC,CAA+C,UAAAiQ,GAAG,EAAG;AACjD,4BAAMyG,OAAO,GAAGzG,GAAG,CAAC1K,IAAJ,CAAS,UAAAw3E,IAAI;AAAA,iCAAI,QAAI,CAACrmE,OAAL,CAAa1C,EAAb,KAAoB+oE,IAAI,CAAC/oE,EAA7B;AAAA,yBAAb,CAAhB;AACA,gCAAI,CAAC0C,OAAL,GAAeA,OAAf,CAFiD,CAEzB;AAC3B,uBAHD;;AAIA,2BAAK8G,QAAL,CAAcw2B,aAAd,CAA4B,8BAA5B;AACH;;AACD,yBAAK4oC,UAAL,CAAgB,IAAhB;;;;;;;;;AACH;;;wCAE4BntE,K,EAAO;;;;;;;;AAChC,yBAAKmtE,UAAL,CAAgB,0BAAhB;AACME,gC,GAAe,KAAKpmE,OAAL,CAAagH,MAAb,E;AACfs/D,4B,GAAW,IAAI,cAAAh3D,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACrB82D,YADqB,CAAC,EACV;AACf9gE,2BAAK,EAAEvM,KAAK,CAACuM,KADE;AAEfiS,+BAAS,EAAExe,KAAK,CAACwe,SAFF;AAGf4G,2BAAK,EAAEplB,KAAK,CAAColB;AAHE,qBADU,CAAZ,C;;AAMa,2BAAM,KAAKtF,SAAL,CAC/B8lB,IAD+B,CAC1B2nC,QAD0B,WAEzB,KAAKL,SAAL,+BAFyB,CAAN;;;AAAxBzD,+B;;AAGN,wBAAIA,WAAJ,EAAiB;AACP5qD,yBADO,GACD,IAAI,cAAAtI,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM82D,YAAN,CAAC,EAAsB5D,WAAW,CAAC34C,SAAZ,EAAtB,CAAZ,CADC;AAEb,2BAAKuI,KAAL,CAAWpyB,OAAX,GAAqB4X,GAArB;;AACA,2BAAK4wB,sBAAL,CAA4Bl0C,OAA5B,CAAoCsjB,GAApC;;AACA,2BAAK9Q,QAAL,CAAcw2B,aAAd,CAA4B,mCAA5B;AACH;;AACD,yBAAK4oC,UAAL,CAAgB,IAAhB;;;;;;;;;AACH;;;4BArNiB;AACd,iBAAO,KAAK9zC,KAAL,CAAWpyB,OAAlB;AACH,S;0BAEkBA,O,EAAkB;;;AACjC,eAAKoyB,KAAL,CAAWpyB,OAAX,GAAqBA,OAArB,CADiC,CAEjC;;AACA,cAAI,YAAKoyB,KAAL,CAAWpyB,OAAX,CAAmBqc,IAAnB,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,MAAvB,GAAuB,GAAE/e,EAAzB,KAA+B,KAAK80B,KAAL,CAAWpyB,OAAX,CAAmBqc,IAAnB,CAAwB/e,EAAxB,MAA0B,MAAK,KAAK80B,KAAL,CAAWrkB,KAAhB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEzQ,EAAjD,CAAnC,EAAwF;AACpF,iBAAK80B,KAAL,CAAWrkB,KAAX,GAAmB,KAAKqkB,KAAL,CAAWpyB,OAAX,CAAmBqc,IAAtC;AACH;AACJ;AAED;;;;4BACgB;AACZ,iBAAO,KAAK+V,KAAL,CAAWrkB,KAAlB;AACH;AAED;;;;4BACe;AACX,iBAAO,KAAK/N,OAAL,CAAa0c,OAAb,EAAP;AACH;;;;MAhC6C,OAAA50B,a;;AALlD;;;uBAKayyE,4B,EAA4B,2C,EAAA,wC,EAAA,4C,EAAA,qC,EAAA,kC,EAAA,qBAwCzB,SAAArvB,eAxCyB,C;AAwCV,K;;;YAxClBqvB,4B;AAA4B,8C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,guB;AAAA;AAAA;ACxBzC;AACI;AAAkB;AAAyB;AAC3C;AAAsE;AAAoB;AAC1F;AACI;AAKJ;AACJ;AACA;AAMA;AACI;AA8CJ;AACA;;;;;;AAjEQ;AACc;AAAA;AACG;AAAA;AAAiD;AAAA;AAEzB;AAAA;AAOnC;AAAA;AAMM;AAAA;AACV;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;;;;;;;;;2BDMGA,4B,EAA4B;cALxC,OAAApvB,SAKwC;eAL9B;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,wCAFN;AAGPC,mBAAS,EAAE,CAAC,wCAAD;AAHJ,S;AAK8B,Q;;;;;;;;;;;;;;kBAwChC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAtCX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZI;AACI;AACJ;;;;AADc;AAAA;;;;;;AAUM;AACI;AACJ;;;;;AAFyD;AACrD;AAAA;;;;;;AASJ;AACI;AACJ;;;;;AAFyD;AACrD;AAAA;;;;;;AAhBpB;AACI;AACI;AAAmB;AAAM;AACzB;AACI;AACI;AAGJ;AACJ;AACJ;AACA;AACI;AAAuB;AAAU;AACjC;AACI;AACI;AAGJ;AACJ;AACJ;AACA;AACI;AAAmB;AAAM;AACzB;AACI;AAMJ;AACJ;AACJ;;;;;AAhCmB;AAKS;AAAA;AAUA;AAAA;;;;;;AAhBhC;AACI;AAiCJ;;;;;AAjCU;AAAA;;;;;;;;AAmCd;AACI;AACI;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAwB;AAAI;AACnD;AACJ;;;;;;AAEI;AACI;AACI;AACI;AACJ;AACA;AAAmB;AAA2B;AAClD;AACJ;;;;QD9BSkvB,4B;;;;;AAgBT,4CACY1zD,QADZ,EAEY8rB,MAFZ,EAGY/Z,SAHZ,EAIY6/C,cAJZ,EAKY/vB,WALZ,EAMqCvW,KANrC,EAMmE;AAAA;;AAAA;;AAE/D;AAPQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA8rB,MAAA,GAAAA,MAAA;AACA,iBAAA/Z,SAAA,GAAAA,SAAA;AACA,iBAAA6/C,cAAA,GAAAA,cAAA;AACA,iBAAA/vB,WAAA,GAAAA,WAAA;AACyB,iBAAAvW,KAAA,GAAAA,KAAA;AArBrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAKjB;;AACO,iBAAA29B,mBAAA,GAAkC,IAAInuE,KAAJ,CAAU,CAAV,EACpComC,IADoC,CAC/B,CAD+B,EAEpCttC,GAFoC,CAEhC,UAACkR,CAAD,EAAI1Y,CAAJ;AAAA,iBAAW;AAAE4T,cAAE,EAAE5T,CAAC,GAAG,EAAJ,GAAS,EAAf;AAAmBtC,gBAAI,EAAE,OAAAiL,gBAAA,CAAiB3I,CAAC,GAAG,EAArB,KAA4B;AAArD,WAAX;AAAA,SAFgC,CAAlC;AAc4D;AAGlE;;;;mCAEc;AAAA;;AACX,cAAMi3B,IAAI,GAAG,KAAK3gB,OAAL,CAAame,KAAb,CAAmBtvB,IAAnB,CACT,UAAC8xB,IAAD;AAAA,mBAAUA,IAAI,CAACrwB,IAAL,KAAc,SAAd,IAA2BqwB,IAAI,CAAC5S,KAAL,KAAe,QAAI,CAACqkB,KAAL,CAAWrkB,KAAX,CAAiBtR,KAArE;AAAA,WADS,KAER;AAAE8F,mBAAO,EAAE;AAAX,WAFL;AAGA,eAAKwE,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtB/hB,iBAAK,EAAE,IAAI,QAAAqf,WAAJ,CAAgB,KAAK3kB,OAAL,CAAasF,KAAb,CAAmB,KAAK8sB,KAAL,CAAWrkB,KAAX,CAAiBtR,KAApC,KAA8C,CAA9D,CADe;AAEtB8a,qBAAS,EAAE,IAAI,QAAAoN,WAAJ,CAAgB,KAAK3kB,OAAL,CAAauX,SAAb,CAAuB,KAAK6a,KAAL,CAAWrkB,KAAX,CAAiBtR,KAAxC,KAAkD,CAAlE,CAFW;AAGtB0hB,iBAAK,EAAE,IAAI,QAAAwG,WAAJ,CAAgBhE,IAAI,CAACpe,OAArB;AAHe,WAAd,CAAZ;AAKH;;;sCAEoB;AAAA;;AACjB,cAAMuO,GAAG,GAAG,IAAI,UAAAvU,MAAJ,EAAZ;;AACA,cAAI,KAAKwK,IAAL,CAAUk7C,KAAd,EAAqB;AACjB,gBAAMukB,SAAS,GAAG,KAAKxmE,OAAL,CAAame,KAAb,CAAmBlsB,MAAnB,CACd,UAAC0uB,IAAD;AAAA,qBAAU,EAAEA,IAAI,CAACrwB,IAAL,KAAc,SAAd,IAA2BqwB,IAAI,CAAC5S,KAAL,KAAe,QAAI,CAACqkB,KAAL,CAAWrkB,KAAX,CAAiBtR,KAA7D,CAAV;AAAA,aADc,CAAlB;AAGA,gBAAM0hB,KAAK,gCACJqoD,SADI,IAEP;AACIl2E,kBAAI,EAAE,SADV;AAEIjF,kBAAI,EAAEylB,GAAG,CAAC9b,EAFd;AAGIuN,qBAAO,EAAE,KAAKwE,IAAL,CAAUxY,KAAV,CAAgB4vB,KAH7B;AAIIqC,oBAAM,EAAE,KAAKoS,MAAL,CAAYlO,OAAZ,CAAoBt9B,IAJhC;AAKI2mB,mBAAK,EAAE,KAAKqkB,KAAL,CAAWrkB,KAAX,CAAiBtR;AAL5B,aAFO,EAAX;AAUA,gBAAMlO,KAAK,GAAG,KAAKwY,IAAL,CAAUxY,KAAxB;AACA,gBAAM+W,KAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKtF,OAAL,CAAasF,KAAlB,CAAd;AACAA,iBAAK,CAAC,KAAK8sB,KAAL,CAAWrkB,KAAX,CAAiBtR,KAAlB,CAAL,GAAgClO,KAAK,CAAC+W,KAAtC;AACA,gBAAMiS,SAAS,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKvX,OAAL,CAAauX,SAAlB,CAAlB;AACAA,qBAAS,CAAC,KAAK6a,KAAL,CAAWrkB,KAAX,CAAiBtR,KAAlB,CAAT,GAAoClO,KAAK,CAACgpB,SAA1C;AACA,gBAAMirD,WAAW,GAAG,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACxB,KAAKtP,OAAL,CAAagH,MAAb,EADwB,CAAC,EACJ;AACxB1B,mBAAK,EAALA,KADwB;AAExBiS,uBAAS,EAATA,SAFwB;AAGxB4G,mBAAK,EAALA;AAHwB,aADI,CAAZ,CAApB;AAMA,iBAAKta,OAAL,GAAe,IAAf;AACA,iBAAK8kC,WAAL,CAAiBQ,YAAjB,GAAgC,IAAhC;;AACA,iBAAKtwB,SAAL,CAAe8lB,IAAf,CAAoB6jC,WAApB,EAAiCl7D,IAAjC,CACI,UAACtH,OAAD,EAAa;AACT,sBAAI,CAACjH,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE,MAAV;AAAkBhH,wBAAQ,EAAE;AAACjC,uBAAK,EAALA,KAAD;AAAQiS,2BAAS,EAATA,SAAR;AAAmB4G,uBAAK,EAALA;AAAnB;AAA5B,eAAhB;;AACA,sBAAI,CAACwqB,WAAL,CAAiBqB,KAAjB;AACH,aAJL,EAKI,UAACthC,GAAD,EAAS;AACL,sBAAI,CAACigC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACA,sBAAI,CAACtlC,OAAL,GAAe,KAAf;AACH,aARL;AAUH,WArCD,MAqCO;AACH,iBAAK8kC,WAAL,CAAiBqB,KAAjB;AACH;AACJ;;;4BApEiB;AACd,iBAAO,KAAK5X,KAAL,CAAWpyB,OAAlB;AACH;;;;MAd6C,OAAAlY,a;;AALlD;;;uBAKa0yE,4B,EAA4B,2C,EAAA,qC,EAAA,wC,EAAA,4C,EAAA,qC,EAAA,qBAsBzB,SAAAtvB,eAtByB,C;AAsBV,K;;;YAtBlBsvB,4B;AAA4B,8C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,8xB;AAAA;AAAA;AC1BzC;AACI;AAAqB;AAAoB;AACzC;AAGJ;AACA;AACI;AAmCJ;AACA;AAKA;;;;;;AA9C6C;AAAA;AAKnC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAoCU;AAAA;;;;;;;;;2BDjBPA,4B,EAA4B;cALxC,OAAArvB,SAKwC;eAL9B;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,wCAFN;AAGPC,mBAAS,EAAE,CAAC,wCAAD;AAHJ,S;AAK8B,Q;;;;;;;;;;;;;;kBAsBhC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBApBX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;AAFuF;;QAS1EuvB,8B;;;;;AAsBT,8CAAoBnyB,OAApB,EAAwC;AAAA;;AAAA;;AACpC;AADgB,iBAAAA,OAAA,GAAAA,OAAA;AAhBV,iBAAAg9B,aAAA,GAAgB,IAAI,OAAA98B,YAAJ,EAAhB;AAgB8B;AAEvC;;;;mCAEO,CAAW;;;kDAEc;AAAA;;AAC7B,cAAMse,SAAS,GAAG,KAAKxe,OAAL,CAAa9lC,IAAb,CAAgD,kCAAA43D,4BAAhD,EAA8E;AAC5FhqD,gBAAI,EAAE;AACFzC,mBAAK,EAAE,KAAKA,KADV;AAEF/N,qBAAO,EAAE,KAAKA;AAFZ,aADsF;AAK5FgxC,qBAAS,EAAE,KALiF;AAM5FC,yBAAa,EAAE;AAN6E,WAA9E,CAAlB;;AASA,eAAK7nD,YAAL,CACI,cADJ,EAEI89D,SAAS,CAACzc,iBAAV,CAA4B1xC,KAA5B,CAAkCzP,SAAlC,CAA4C,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/DgO,0BAD+D,GACxD,cAAAqd,mBAAA,CAAoB,KAAKpkB,OAAzB,EAAkC,CAAC,YAAD,CAAlC,EAAkD,IAAlD,CADwD;;AAErE,0BAAIjH,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB24C,iCAAS,CAACld,KAAV;AACA,6BAAK07B,aAAL,CAAmB57B,IAAnB,CAAwB/wC,KAAK,CAACwO,QAA9B;AACH;;AALoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAA5C,CAFJ;AAUH;;;4BAxCe;AACZ,cAAIjC,KAAK,GAAG,KAAKtF,OAAL,CAAasF,KAAb,CAAmB,KAAKyI,KAAL,CAAWtR,KAA9B,CAAZ;AACA,iBAAO6I,KAAK,GAAG,OAAAjT,gBAAA,CAAiBiT,KAAK,GAAG,EAAzB,CAAH,GAAkC,iBAA9C;AACH;;;4BAEmB;AAChB,cAAIiS,SAAS,GAAG,KAAKvX,OAAL,CAAauX,SAAb,CAAuB,KAAKxJ,KAAL,CAAWtR,KAAlC,CAAhB;AACA,iBAAO8a,SAAS,GAAG,OAAAllB,gBAAA,CAAiBklB,SAAS,GAAG,EAA7B,CAAH,GAAsC,qBAAtD;AACH;;;4BAEkB;AAAA;;AACf,iBAAO,CAAC,KAAKvX,OAAL,CAAame,KAAb,CAAmBtvB,IAAnB,CAAwB,UAAA8xB,IAAI;AAAA,mBAAIA,IAAI,CAACrwB,IAAL,KAAc,SAAd,IAA2BqwB,IAAI,CAAC5S,KAAL,KAAe,QAAI,CAACA,KAAL,CAAWtR,KAAzD;AAAA,WAA5B,KAA+F,EAAhG,EAAoG8F,OAA3G;AACH;;;;MApB+C,OAAAza,a;;AALpD;;;uBAKa+yE,8B,EAA8B,kC;AAAA,K;;;YAA9BA,8B;AAA8B,8C;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,oQ;AAAA;AAAA;ACb3C;AACI;AACJ;AACA;AACI;AACI;AAAmB;AAAM;AACzB;AACI;AACJ;AACJ;AACA;AACI;AAAuB;AAAU;AACjC;AACI;AACJ;AACJ;AACA;AACI;AAAmB;AAAc;AACjC;AACI;AACJ;AACJ;AACJ;AACA;AAAkC;AAAA,mBAAS,IAAA4L,uBAAA,EAAT;AAAkC,WAAlC;AAC9B;AACJ;;;;AArBuB;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;;;;;;;;;2BDNC5L,8B,EAA8B;cAL1C,OAAA1vB,SAK0C;eALhC;AACPljD,kBAAQ,EAAE,yBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD;AAHJ,S;AAKgC,Q;;;;;;gBAEtC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDgB;;;;;AAAA;;;;;;AAGA;;;;;AAAA;;;;;;AAGA;;;;;AAAA;;;;;;AAOQ;AAAmD;AAAiD;;;;;AAAjD;AAAA;;;;;;AAH3D;AACI;AACA;AACI;AACJ;AACJ;;;;;AAFa;AAAA;;;;;;;;AAJb;AAA4D;AAA2C;AAAA;AAAA;AAAA;AAAA;AAAgC;AAAe;AACtJ;;;;;AAAkB;AAAA;;;;;;;;;;;;QDFrBovB,uC;;;;;AAeT,uDACYhC,cADZ,EAEYhwB,OAFZ,EAGY7vB,SAHZ,EAGsC;AAAA;;AAAA;;AAElC;AAJQ,iBAAA6/C,cAAA,GAAAA,cAAA;AACA,iBAAAhwB,OAAA,GAAAA,OAAA;AACA,iBAAA7vB,SAAA,GAAAA,SAAA;AAfZ;;AACiB,iBAAA6tD,aAAA,GAAmD,IAAI,OAAA99B,YAAJ,EAAnD;AAOT,iBAAA+9B,eAAA,GAA2B,KAA3B;AAED,iBAAAC,kBAAA,GAAqC,EAArC;AAK+B;AAGrC;;;;mCAEc;AAAA;;AACX,eAAKx9E,YAAL,CACI,iBADJ,EAEI,KAAKsvE,cAAL,CAAoBt9D,QAApB,CAA6B9R,SAA7B,CAAuC,UAAO8R,QAAP;AAAA,mBAAoB,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEhD4E,6BAFgD,GAEtC5E,QAAQ,CAACvM,IAAT,CAAc,UAAA+oB,GAAG;AAAA,+BAAIA,GAAG,CAAC0D,OAAJ,KAAgB,QAAI,CAACtb,OAAL,CAAasb,OAAjC;AAAA,uBAAjB,CAFsC;;AAAA,0BAGjDtb,OAHiD;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOtD,2BAAK6pC,cAAL,GAAsB,CAAC,KAAK7pC,OAAL,CAAa2b,eAAb,KAAiC,YAAjC,GACjBvgB,QAAQ,CAACnJ,MAAT,CAAgB,UAAAwpB,GAAG;AAAA,+BAAIA,GAAG,CAACne,EAAJ,KAAW0C,OAAO,CAAC4b,oBAAvB;AAAA,uBAAnB,CADiB,GAEjB,CAAC5b,OAAD,CAFgB,EAGpB4hB,KAHoB,EAAtB;;AAPsD,0BAYjD,KAAKioB,cAZ4C;AAAA;AAAA;AAAA;;AAAA;AAa5B,6BAAM,KAAKhxB,SAAL,CAAe8D,IAAf,CAAoB3c,OAAO,CAAC4b,oBAA5B,CAAN;;AAb4B;AAalD,2BAAKiuB,cAb6C;;AAclD,2BAAK6uB,cAAL,CAAoBhqE,GAApB,CAAwB,KAAKm7C,cAA7B;;AAdkD;AAiBtD,2BAAK9pB,gBAAL,GAAwB,KAAK8pB,cAAL,CAAoB+rB,yBAApB,CAA8C,KAAK/rB,cAAL,CAAoBxpB,kBAAlE,CAAxB;AACA,2BAAKwmD,kBAAL,GAA0B,IAAI,UAAAtqE,MAAJ,CAAW;AAAClR,4BAAI,EAAE,KAAKw+C,cAAL,CAAoB1sC,WAApB,GAAkC,IAAzC;AAA+CgU,mCAAW,EAAE,KAA5D;AAAmEC,mCAAW,EAAE,KAAKy4B,cAAL,CAAoB55C;AAApG,uBAAX,CAA1B;AACA,2BAAKmwB,iBAAL,GAAyB,KAAKypB,cAAL,CAAoBzpB,iBAA7C;AACA,2BAAKD,mBAAL,GAA2B,KAAK0pB,cAAL,CAAoB1pB,mBAA/C;AACA,2BAAKE,kBAAL,GAA0B,KAAKwpB,cAAL,CAAoBxpB,kBAApB,IAA0C,KAAKwpB,cAAL,CAAoBxpB,kBAApB,CAC/DpuB,MAD+D,CACxD,UAAA60E,SAAS;AAAA,+BAAIA,SAAS,CAACxpE,EAAV,KAAiB,QAAI,CAACusC,cAAL,CAAoBvsC,EAAzC;AAAA,uBAD+C,EAE/DpM,GAF+D,CAE3D,UAAA41E,SAAS;AAAA,+BAAK,MAAD,OAAC,CAAD,kBAAMA,SAAN,CAAC,EAAc;AAAE3pE,qCAAW,EAAG2pE,SAAS,CAAC3pE,WAAV,GAAwB,IAAxC;AAA8CnR,gCAAM,EAAE,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,gCAAI,EAAEy7E,SAAS,CAAC3pE,WAAV,GAAwB,IAAhC;AAAsCgU,uCAAW,EAAE,KAAnD;AAA0DC,uCAAW,EAAE,QAAI,CAACy4B,cAAL,CAAoB55C;AAA3F,2BAAX;AAAtD,yBAAd,CAAL;AAAA,uBAFkD,CAApE;AAGMiwB,oCAxBgD,GAwB/B,YAAK2pB,cAAL,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAExpB,kBAAF,CAAqBnvB,GAArB,CAAyB,UAAA+nE,KAAK;AAAA,+BAAIA,KAAK,CAAC37D,EAAV;AAAA,uBAA9B,CAAnB,KAAkE,EAxBnC;AAyBtD,2BAAKspE,kBAAL,GAA0BxrE,QAAQ,CAACnJ,MAAT,CAAgB,UAAA+N,OAAO,EAAI;AACjD,4BAAGkgB,cAAc,CAACxb,QAAf,CAAwB1E,OAAO,CAAC1C,EAAhC,CAAH,EAAuC;AACnC,8BAAM8T,WAAW,GAAG,QAAI,CAACy4B,cAAL,CAAoB55C,QAAxC;AACA,8BAAM5E,IAAI,GAAI2U,OAAO,CAAC7C,WAAR,GAAsB,IAAvB,GAAgC6C,OAAO,CAAC5T,QAAR,GAAmB,KAAhE;AACA,8BAAMb,KAAK,GAAG,IAAI,UAAAgR,MAAJ,CAAW;AAAClR,gCAAI,EAAJA,IAAD;AAAO8lB,uCAAW,EAAE,KAApB;AAA2BC,uCAAW,EAAXA;AAA3B,2BAAX,CAAd;AACA,8BAAMN,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,EAAoBwK,MAApB,CAA2B2b,WAA3B,CAAZ;AACA,iCAAON,GAAG,CAAC0R,WAAJ,CAAgBj3B,KAAhB,EAAuB,QAAvB,CAAP;AACH;;AACD,+BAAO,KAAP;AACH,uBATyB,CAA1B;;AAzBsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAApB;AAAA,WAAvC,CAFJ;AAuCH;;;8CA0D4B;AACzB,eAAKw7E,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACH;;;qCAEyB;;;;;;AACtB,yBAAKr+B,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACrC/jD,0BAAI,EAAE;AACFxQ,+BAAO,EAAE,KAAK6pC,cAAL,CAAoBm9B,SAApB,CAA8B,IAA9B,CADP;AAEF1qE,8BAAM,EAAE,cAAAoqB,YAAA,CAAaijB,IAFnB;AAGF15C,gCAAQ,EAAE4U,YAAY,CAACC,OAAb,CAAqB,oBAArB;AAHR,uBAD+B;AAMrCksC,+BAAS,EAAE,KAN0B;AAOrCC,mCAAa,EAAE;AAPsB,qBAAzC;;;;;;;;;AASH;;;sCAE0B;;;;;;AACvB,yBAAKvI,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACrC/jD,0BAAI,EAAE;AACFxQ,+BAAO,EAAE,KAAK6pC,cAAL,CAAoBm9B,SAApB,EADP;AAEF1qE,8BAAM,EAAE,cAAAoqB,YAAA,CAAaC;AAFnB,uBAD+B;AAKrCqqB,+BAAS,EAAE,KAL0B;AAMrCC,mCAAa,EAAE;AANsB,qBAAzC;;;;;;;;;AAQH;;;uCAE2B;;;;;;AACxB,yBAAKy1B,aAAL,CAAmB58B,IAAnB,CAAwB;AAAElgB,4BAAM,EAAE;AAAV,qBAAxB;;;;;;;;;AACH;;;0BArF6Bv+B,I,EAAc;AACxC,eAAK47E,mBAAL,GAA2B57E,IAA3B;AACH,S;4BAE4B;AACzB,iBAAO,KAAK47E,mBAAZ;AACH;;;0BAE2B57E,I,EAAc;AACtC,eAAKw2B,iBAAL,GAAyBx2B,IAAzB;AACH,S;4BAE0B;AACvB,iBAAO,KAAKw2B,iBAAZ;AACH;;;0BAE4BhG,M,EAA0B;AACnD,eAAKqrD,kBAAL,GAA0BrrD,MAA1B;AACH,S;4BAE2B;AACxB,iBAAO,KAAKqrD,kBAAZ;AACH;;;0BAE8B/rD,Q,EAAkB;AAC7C,eAAKgsD,oBAAL,GAA4BhsD,QAA5B;AACH,S;4BAE6B;AAC1B,iBAAO,KAAKgsD,oBAAZ;AACH;;;0BAE6B7gD,W,EAAoD;AAC9E,eAAK8gD,mBAAL,GAA2B9gD,WAA3B;AACH,S;4BAE4B;AACzB,iBAAO,KAAK8gD,mBAAZ;AACH;;;0BAEyBC,G,EAAc;AACpC,eAAKV,eAAL,GAAuBU,GAAvB;AACH,S;4BAEwB;AACrB,iBAAO,KAAKV,eAAZ;AACH;;;0BAEyBpL,I,EAAe;AACrC,eAAK+L,eAAL,GAAuB/L,IAAvB;AACH,S;4BAEwB;AACrB,iBAAO,KAAK+L,eAAZ;AACH;;;;MAvHwD,OAAAx/E,a;;AAL7D;;;uBAKa4yE,uC,EAAuC,4C,EAAA,kC,EAAA,wC;AAAA,K;;;YAAvCA,uC;AAAuC,gD;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,stB;AAAA;AAAA;ACbpD;AACI;AACI;AACA;AACI;AAGA;AAGA;AAGA;AASJ;AACJ;AACA;AACI;AACI;AACI;AACA;AAGJ;AACJ;AACJ;AACJ;AACA;AACI;AAAkC;AAAA,mBAAS,IAAA6M,UAAA,EAAT;AAAqB,WAArB;AAC9B;AACI;AACA;AACJ;AACJ;AACA;AAAmC;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;AAC/B;AACI;AACA;AACJ;AACJ;AACA;AAAoC;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;AAChC;AACI;AACA;AACJ;AACJ;AACJ;;;;;;AAnDqC;AAAA;AACZ;AAAA;AAGA;AAAA;AAGA;AAAA;AAec;AAAA;AAInB;AAAA;AAOyC;AAAA;AAYI;AAAA;;;;;;;;;2BDnCpD/M,uC,EAAuC;cALnD,OAAAvvB,SAKmD;eALzC;AACPljD,kBAAQ,EAAE,2BADH;AAEPmjD,qBAAW,EAAE,oCAFN;AAGPC,mBAAS,EAAE,CAAC,oCAAD;AAHJ,S;AAKyC,Q;;;;;;;;;;gBAE/C,OAAA1gD;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACI;AACI;AAAsB;AAAS;AAC/B;AACI;AACJ;AACJ;AACA;AACI;AAAsB;AAAmB;AACzC;AACI;AAKJ;AACJ;AACA;AACI;AAAyB;AAAY;AACrC;AACI;AAKJ;AACJ;AACA;AACI;AAAmB;AAAc;AACjC;AACI;AACJ;AACJ;AACJ;;;;;AAhCuB;AAAA;AAGX;AAAA;AAGW;AAAA;AAGX;AAAA;AAOW;AAAA;AAGX;AAAA;AAOW;AAAA;AAGX;AAAA;;;;QDfCqvB,mC;;;;;AAuBT,mDAAoBjyB,OAApB,EAAgD5hC,QAAhD,EAA8E;AAAA;;AAAA;;AAC1E;AADgB,iBAAA4hC,OAAA,GAAAA,OAAA;AAA4B,iBAAA5hC,QAAA,GAAAA,QAAA;AAlBhD;;AACiB,iBAAA4gE,aAAA,GAAgB,IAAI,OAAA9+B,YAAJ,EAAhB;AACjB;;AACiB,iBAAA7vC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAe6D;AAE7E;AAfD;;;;;;AAkBA;oDACmC;AAAA;;AAC/B,cAAM7hC,IAAI,GAAG,cAAAqd,mBAAA,CAAoB,KAAKpkB,OAAzB,EAAkC,CAAC,YAAD,CAAlC,EAAkD,IAAlD,CAAb;;AACA,cAAMmqC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAGV,kBAAAosC,gCAHU,EAGwB;AAChC3E,oBAAQ,EAAE,MADsB;AAEhCC,iBAAK,EAAE,MAFyB;AAGhC95B,gBAAI,EAAE;AACFvD,oBAAM,EAAElG,IAAI,CAACquB,QAAL,CAAc1a,UAAd,CAAyBnsB,KAD/B;AAEFk/C,yBAAW,EAAE1mC,IAAI,CAACquB,QAAL,CAAcjX,KAFzB;AAGFwxB,yBAAW,EAAE5oC,IAAI,CAACquB,QAAL,CAAchX,eAHzB;AAIFwxB,+BAAiB,EAAE7oC,IAAI,CAACquB,QAAL,CAAc/W,kBAJ/B;AAKFspD,wBAAU,EAAE;AALV;AAH0B,WAHxB,CAAZ;;AAcA,eAAKv+E,YAAL,CACI,cADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAC/D;AACA,0BAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB47B,2BAAG,CAACH,KAAJ;AACA,6BAAKjxC,KAAL,CAAW+wC,IAAX,CAAgB/iC,IAAhB;AACH;;AAL8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC,CAFJ;AAUH;;;4BA5Ce;AAAA;;AACZ,cAAM4Z,IAAI,GAAG,KAAK3gB,OAAL,CAAame,KAAb,CAAmBtvB,IAAnB,CACT,UAAC8xB,IAAD;AAAA,mBAAUA,IAAI,CAACrwB,IAAL,KAAc,WAAd,IAA6B,QAAI,CAACyd,KAAL,CAAWtR,KAAX,KAAqBkkB,IAAI,CAAC5S,KAAjE;AAAA,WADS,CAAb;AAGA,iBAAO,CAAC4S,IAAI,GAAGA,IAAI,CAACpe,OAAR,GAAkB,EAAvB,KAA8B,YAArC;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAKvC,OAAL,CAAaw7D,oBAAb,KAAsC,MAAtC,IAAgD,KAAKx7D,OAAL,CAAayc,QAApE;AACH;;;;MArBoD,OAAA30B,a;;AALzD;;;uBAKa6yE,mC,EAAmC,kC,EAAA,2C;AAAA,K;;;YAAnCA,mC;AAAmC,mD;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,sW;AAAA;AAAA;AClBhD;AACI;AACJ;AACA;AAkCA;AAAkC;AAAA,mBAAS,IAAAzF,yBAAA,EAAT;AAAoC,WAApC;AAC9B;AACJ;;;;AApCqB;AAAA;;;;;;;;;2BDeRyF,mC,EAAmC;cAL/C,OAAAxvB,SAK+C;eALrC;AACPljD,kBAAQ,EAAE,8BADH;AAEPmjD,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD;AAHJ,S;AAKqC,Q;;;;;;;;gBAE3C,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNI;AAAkC;AAAK;;;;;;AAKnC;AACI;AACH;;;;;AADmB;AAAA;;;;;;AAHxB;AAEI;;AAGJ;;;;;AALgG;AAE9E;AAAA,oFAAsE,sBAAtE,EAAsE,gBAAtE;;;;;;;;;;;;;AAMlB;AACI;AACI;AACJ;AACA;AAAkB;AAAgC;AACtD;;;;;AAHkB;AAAA;AAEI;AAAA;;;;QDDbs8B,2B;;;;;AAoCT,2CAAoBp/B,sBAApB,EAAiE;AAAA;;AAAA;;AAC7D;AADgB,iBAAAA,sBAAA,GAAAA,sBAAA;AAnCpB;;AACgB,iBAAAx8C,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAGhB;;AACO,iBAAAiF,OAAA,GAAmB,KAAnB;AACP;;AACgB,iBAAAquC,YAAA,GAAe,SAAKiK,sBAAL,CAA4B5uB,aAA5B,CAA0Czd,IAA1C,CAC3B,YAAAjL,GAAA,CAAI,UAACkK,QAAD,EAAc;AACd,cAAM/P,IAAI,GAAG,SAAKW,MAAL,CAAY+I,YAAZ,CAAyB,KAAzB,CAAb;AACA;;;;;;AAIA,iBAAOqG,QAAQ,CAACnJ,MAAT,CAAgB,UAAC+N,OAAD,EAAa;AAChC,gBAAMkqC,MAAM,GAAGlqC,OAAO,CAACsgB,YAAR,IAAwBtgB,OAAO,CAAC2b,eAAR,KAA4B,QAAnE;AACA,mBACI,CAACuuB,MAAD,IACA,SAAKj9B,MAAL,CAAYpe,IAAZ,CAAiB,UAACkf,KAAD;AAAA,qBAAkBA,KAAK,CAACtR,KAAN,KAAgBuD,OAAO,CAACqc,IAAR,CAAa5f,KAA/C;AAAA,aAAjB,CADA,IAEA,cAAA0f,oBAAA,CACI9wB,IAAI,CAAC2J,EADT,EAEI3J,IAAI,CAACouB,UAAL,CAAgB,KAAhB,EAAuBzkB,EAF3B,EAGIgL,OAAO,CAAC/J,WAAR,CAAoBjB,EAHxB,EAIIgL,OAAO,CAAC9J,SAAR,CAAkBlB,EAJtB,CAHJ;AAUH,WAZM,CAAP;AAaH,SAnBD,CAD2B,CAAf;AA4BiD;AAEhE;AAPD;;;;;oCASmBjM,O,EAAwB;AAAA;;AACvC,cAAIA,OAAO,CAACiD,MAAZ,EAAoB;AAChB,gBAAM8kB,GAAG,GAAG,IAAI,UAAAvU,MAAJ,CAAW;AAAElR,kBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,yBAAW,EAAE,KAAjC;AAAwCC,yBAAW,EAAE,KAAKplB,MAAL,CAAYolB;AAAjE,aAAX,CAAZ;AACA,iBAAKlhB,OAAL,GAAe,KAAKlE,MAAL,CAAYw7B,UAAZ,CAAuB1W,GAAvB,EAA4B,KAA5B,CAAf;AACH;;AACD,cAAI/nB,OAAO,CAACkkB,MAAZ,EAAoB;AAChB,iBAAKjjB,OAAL,CAAa,SAAb,EAAwB;AAAA,qBAAM,QAAI,CAACw+C,sBAAL,CAA4B3M,UAA5B,CAAuC,QAAI,CAAC2M,sBAAL,CAA4B11C,OAAnE,CAAN;AAAA,aAAxB,EAA2G,GAA3G;AACH;AACJ;AAEA;;;;;;;;kCAKkBnJ,K,EAAeoK,I,EAAe;AAC7C,iBAAOA,IAAI,CAACuJ,EAAL,IAAW3T,KAAlB;AACH;;;4BAzBsB;AACnB,iBAAO,KAAKqC,MAAL,CAAYW,UAAZ,CAAuB,kBAAvB,CAAP;AACH;;;;MAlC4C,OAAA7E,a;;AANjD;;;uBAMa8/E,2B,EAA2B,4C;AAAA,K;;;YAA3BA,2B;AAA2B,4C;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,2a;AAAA;AAAA;AChBxC;AACI;AAAkB;AAAkB;AACpC;AACJ;AACA;AACI;;AAMJ;AACA;;;;;;AAXsB;AAAA;AACA;AAAA;AAGW;AAAA,+EAAuD,UAAvD,EAAuD,GAAvD;;;;;;;;;;;2BDWpBA,2B,EAA2B;cANvC,OAAAz8B,SAMuC;eAN7B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAM6B,Q;;;;;;gBAEnC,OAAAtiD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEpBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUY;;;;;AAEI;;;;;;AAuBR;AACI;AAAqB;AAAQ;AAC7B;AAAkC;AAA0B;AAChE;;;;;AADsC;AAAA;;;;;;;;AAzC9C;AASI;AAAA;AAAA;AAAA;AAAA;AAEA;AACI;AAAkB;AAAmD;AACrE;AACI;AAQJ;AACJ;AACA;AACI;AACI;AAAkB;AAAK;AACvB;AAA+B;AAA2B;AAC9D;AACA;AACI;AAAsB;AAAS;AAC/B;AACI;AACJ;AACJ;AACA;AACI;AAAuB;AAAU;AACjC;AAAoC;AAAoC;AAC5E;AACA;AAIJ;AACJ;;;;;AA3CI;AAOA;AAIsB;AAAA;AAGV;AAAA;AAUW;AAAA;AAEgB;AAAA;AAEhB;AAAA;AAGX;AAAA;AAKgC;AAAA;AAErB;AAAA;;;;QD3Bdk9E,qB;AAKT,qCAAoBn/B,OAApB,EAAwC;AAAA;;AAApB,aAAAA,OAAA,GAAAA,OAAA;AAFb,aAAAp4C,IAAA,GAAe,EAAf;AAEmC;;;;mCAExB;AACd,eAAKA,IAAL,GAAY,KAAKyI,KAAL,CAAW2jB,OAAX,EAAZ;AACH;AAED;;;;;;6CAG4B;AACxB,eAAKgsB,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC5ClwB,oBAAQ,EAAE,mBADkC;AAE5C75B,gBAAI,EAAE;AACFzC,mBAAK,EAAE,KAAKhV,KAAL,CAAWgV,KADhB;AAEF/N,qBAAO,EAAE,KAAKjH;AAFZ,aAFsC;AAM5Ci4C,qBAAS,EAAE,KANiC;AAO5CC,yBAAa,EAAE;AAP6B,WAAhD;AASH;;;;;;AA9BL;;;uBAMa42B,qB,EAAqB,kC;AAAA,K;;;YAArBA,qB;AAAqB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0b;AAAA;AAAA;ACZlC;;;;AAOI;;;;;;;;;;2BDKSA,qB,EAAqB;cANjC,OAAA18B,SAMiC;eANvB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAMuB,Q;;;;;;gBAC7B,OAAAtiD;;;;;;;;;;;;;;;;;;;;;;;;AEbL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACNI;AACI;AACJ;;;;;;AACA;;;;;;AAEI,+CAAqB,QAArB,EAAqB,iBAArB;;;;QDQKm9E,yB;;;;;AAgBT,yCAAoBtvD,OAApB,EAAoDgwB,sBAApD,EAAiG;AAAA;;AAAA;;AAC7F;AADgB,iBAAAhwB,OAAA,GAAAA,OAAA;AAAgC,iBAAAgwB,sBAAA,GAAAA,sBAAA;AAfpD;;AACgB,iBAAAx8C,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAShB;;AACO,iBAAA88E,UAAA,GAAuB,EAAvB;AACP;;AACO,iBAAArtD,UAAA,GAAsB,EAAtB;AAE0F;AAEhG;;;;mCAEc;AAAA;;AACX,eAAKlC,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,oBAAI,CAACk/C,sBAAL,CAA4BvM,gBAA5B;;AACA,oBAAI,CAAC8rC,UAAL,GAAkB,QAAI,CAACC,eAAL,CAAqB,QAAI,CAACh8E,MAA1B,EAAkC,QAAI,CAACi8E,QAAvC,CAAlB;AACA,oBAAI,CAACvtD,UAAL,GAAkB,QAAI,CAAClC,OAAL,CAAavmB,MAAb,CACd,UAAC8b,KAAD;AAAA,qBACIA,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqB,QAAI,CAACmQ,KAA1B,MACC,CAAC,QAAI,CAACovD,UAAN,IAAoBl2D,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqB,QAAI,CAACu/D,UAA1B,CADrB,CADJ;AAAA,aADc,CAAlB;AAKH,WARD;AASH;;;oCAEkBl7E,O,EAAsB;AAAA;;AACrC;AACA,cAAIA,OAAO,CAACiD,MAAR,IAAkBjD,OAAO,CAACk/E,QAA1B,IAAsCl/E,OAAO,CAAC8rB,KAA9C,IAAuD9rB,OAAO,CAACk7E,UAAnE,EAA+E;AAC3E,iBAAK8D,UAAL,GAAkB,KAAKC,eAAL,CAAqB,KAAKh8E,MAA1B,EAAkC,KAAKi8E,QAAvC,CAAlB;AACA,iBAAKvtD,UAAL,GAAkB,KAAKlC,OAAL,CAAavmB,MAAb,CACd,UAAC8b,KAAD;AAAA,qBACIA,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqB,QAAI,CAACmQ,KAA1B,MACC,CAAC,QAAI,CAACovD,UAAN,IAAoBl2D,KAAK,CAACI,KAAN,CAAYzJ,QAAZ,CAAqB,QAAI,CAACu/D,UAA1B,CADrB,CADJ;AAAA,aADc,CAAlB;AAKH;AACJ;;;sCAEoB;;;AACjB,cAAI,CAAJ,KAAI,KAAKz7B,sBAAL,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAE07B,WAAjC,EAA8C,WAAK17B,sBAAL,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAE07B,WAAF,EAA3B;AACjD;AAED;;;;;;;;wCAKwBl4E,M,EAAyC;AAAA,cAAzBi8E,QAAyB,uEAAL,KAAK;AAC7D,cAAM1+E,IAAI,GAAa,EAAvB,CAD6D,CAE7D;;AACA,cAAIiG,GAAG,GAAGxD,MAAM,CAACE,QAAP,CAAgB;AAAEJ,mBAAO,EAAE;AAAX,WAAhB,EAAgCiJ,YAAhC,CAA6C,KAA7C,CAAV;AACA,cAAIxJ,KAAK,GAAGiE,GAAG,CAACuF,YAAJ,CAAiB,MAAjB,CAAZ;AACA,cAAI8hB,GAAG,GAAGtrB,KAAK,CAACkuB,UAAN,CAAiB,MAAjB,EAAyBvtB,QAAzB,CAAkC;AAAEJ,mBAAO,EAAE;AAAX,WAAlC,CAAV;;AACA,iBAAOP,KAAK,CAACg3B,YAAN,CAAmB1L,GAAnB,CAAP,EAAgC;AAC5B,gBAAKtrB,KAAK,CAACsxB,WAAN,KAAsB,CAAtB,IAA2BtxB,KAAK,CAACsxB,WAAN,KAAsB,CAAlD,IAAwDorD,QAA5D,EAAsE;AAClE1+E,kBAAI,CAAC2J,IAAL,CAAU3H,KAAV;AACH;;AACDA,iBAAK,GAAGA,KAAK,CAACW,QAAN,CAAe;AAAE2uB,kBAAI,EAAE;AAAR,aAAf,CAAR;AACH;;AAED,iBAAOtxB,IAAP;AACH;;;;MAnE0C,OAAAzB,a;;AAL/C;;;uBAKaggF,yB,EAAyB,sC,EAAA,4C;AAAA,K;;;YAAzBA,yB;AAAyB,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,uL;AAAA;AAAA;ACdtC;AACI;AAGA;AAKJ;;;;AARwB;AAAA;AAIhB;AAAA;;;;;;;;;2BDSKA,yB,EAAyB;cALrC,OAAA38B,SAKqC;eAL3B;AACPljD,kBAAQ,EAAE,oBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAK2B,Q;;;;;;;;gBAEjC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVI;AACI;AACJ;;;;;;;;AAEI;AACI;AAEI;AAAA;AAAA;AAAA;AAAA,WAAwB,OAAxB,EAAwB;AAAA;AAAA;AAAA;AAAA,SAAxB;AAIJ;AACJ;;;;;AAFQ;AAAA;AAJA;;;;;;AAmBQ;AACI;AACJ;;;;;AAFyC;AACrC;AAAA;;;;;;;;AAHZ;AACI;AAAY;AAAA;AAAA;AAAA;AAAA,WAA0B,eAA1B,EAA0B;AAAA;AAAA;AAAA;AAAA,SAA1B;AACR;AAGJ;AACJ;;;;;AALgB;AAAA;AACI;AAAA;;;;;;AAOZ;AACI;AACJ;;;;;AAF6C;AACzC;AAAA;;;;;;;;AAHZ;AACI;AAAY;AAAA;AAAA;AAAA;AAAA;AACR;AAGJ;AACJ;;;;;AALgB;AAAA;AACI;AAAA;;;;;;;;AA7BhC;AACI;AASA;AACI;AAAA;AAAA;AAAA;AAAA,WAAmB,OAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB,EAAmB,cAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB;AAQA;AACI;AAOA;AAOA;AAEI;AAAA;AAAA;AAAA;AAAA;AAIA;AACJ;AACJ;AACJ;AACA;AACI;AAMJ;AACJ;;;;;AAnDwB;AAAA;AAUhB;AAAA,+CAAmB,UAAnB,EAAmB,eAAnB,EAAmB,eAAnB,EAAmB,IAAnB,EAAmB,MAAnB,EAAmB,mBAAnB,EAAmB,aAAnB,EAAmB,IAAnB;AASoB;AAAA;AAOA;AAAA;AASZ;AAAA;AAUJ;AAAA,+CAAiB,OAAjB,EAAiB,4EAAjB,EAAiB,YAAjB,EAAiB,kBAAjB,EAAiB,UAAjB,EAAiB,cAAjB;;;;QDhCHu9E,iB;;;;;AAwBT,iCACYphE,QADZ,EAEYyR,IAFZ,EAGYiwB,sBAHZ,EAIYE,OAJZ,EAKYD,OALZ,EAMY80B,MANZ,EAMkC;AAAA;;AAAA;;AAE9B;AAPQ,iBAAAz2D,QAAA,GAAAA,QAAA;AACA,iBAAAyR,IAAA,GAAAA,IAAA;AACA,iBAAAiwB,sBAAA,GAAAA,sBAAA;AACA,iBAAAE,OAAA,GAAAA,OAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AACA,iBAAA80B,MAAA,GAAAA,MAAA;AA7BZ;;AACO,iBAAAvxE,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAGP;;AACO,iBAAAuyE,YAAA,GAAuB,EAAvB;AACP;;AACO,iBAAA9sB,WAAA,GAAsB,EAAtB;AACP;;AACO,iBAAAxvC,MAAA,GAA0B,EAA1B;AACP;;AACO,iBAAAmyB,WAAA,GAA0B,EAA1B;AAEA,iBAAAuqC,WAAA,GAAc,KAAAzf,SAAA,CAAU12D,KAAxB;AAgB2B;AAGjC;;;;mCAEc;AAAA;;AACX,eAAKqf,QAAL,CAAcwP,KAAd,GAAsB,WAAtB;;AACA,eAAKiC,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACxD;AACA,oBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,kBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,yBAAW,EAAE,KAArC;AAA4CC,yBAAW,EAAE,QAAI,CAACnhB;AAA9D,aAAX,CAAd;;AACA,oBAAI,CAAC7G,YAAL,CACI,cADJ,EAEI,QAAI,CAACm0E,MAAL,CAAYW,QAAZ,CAAqB50E,SAArB,CAA+B,UAACgrC,MAAD,EAAY;AACvC;AACA,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,OAAX,KAAuB,QAAI,CAACX,YAAL,KAAsBlpC,MAAM,CAACvzB,GAAP,CAAW,OAAX,CAAjD,EAAsE;AAClE,oBAAM8T,KAAK,GAAG,QAAI,CAAC0D,IAAL,CAAUqX,WAAV,CAAsB0E,MAAM,CAACvzB,GAAP,CAAW,OAAX,CAAtB,CAAd;AACA;;;AACA,oBAAI8T,KAAJ,EAAW;AACP,sBAAM3G,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CACb,UAACmhC,GAAD;AAAA,2BAASA,GAAG,CAAC1yB,EAAJ,KAAWuX,KAAK,CAACob,WAA1B;AAAA,mBADa,CAAjB;AAGA;;;AACA,sBAAI/hB,QAAJ,EAAc;AACV,4BAAI,CAACsvD,YAAL,GAAoB3oD,KAAK,CAACvX,EAA1B;AACA,4BAAI,CAACib,IAAL,CAAUrK,QAAV,GAAqBA,QAArB;;AACA,4BAAI,CAACs6B,sBAAL,CAA4B7M,OAA5B,CAAoC,QAAI,CAAC6hC,YAAL,IAAqB,QAAI,CAACjlD,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA5E;AACH;AACJ;AACJ;AACJ,aAjBD,CAFJ;;AAqBA,oBAAI,CAAClU,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,YAAM;AAChD;AACA,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,2BAAW,EAAE,KAArC;AAA4CC,2BAAW,EAAE,QAAI,CAACnhB;AAA9D,eAAX,CAAd;AACA,kBAAMie,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUrK,QAA3B;AACA,sBAAI,CAACkwD,UAAL,GAAkBlwD,QAAQ,GAAG,IAAH,GAAU,KAApC;AACA,kBAAG,CAAC,QAAI,CAACkwD,UAAT,EAAqB;AACrB;;AACA,kBAAI,CAAClwD,QAAQ,CAAChN,MAAT,CAAgBrS,IAAhB,CAAqB,UAAC2iC,GAAD;AAAA,uBAASA,GAAG,CAACl0B,EAAJ,KAAW,QAAI,CAACkgE,YAAzB;AAAA,eAArB,CAAL,EAAkE;AAC9D,wBAAI,CAACA,YAAL,GAAoB,CAACtvD,QAAQ,CAAChN,MAAT,CAAgB,CAAhB,KAAsB;AAAE5D,oBAAE,EAAE;AAAN,iBAAvB,EAAmCA,EAAvD;;AACA,wBAAI,CAAC+gE,WAAL;AACH;;AACD,sBAAI,CAACn9D,MAAL,GAAc,CAAC;AAAE5D,kBAAE,EAAE,EAAN;AAAUlW,oBAAI,EAAE;AAAhB,eAAD,EAAwCi0B,MAAxC,CAA+CnN,QAAQ,CAAChN,MAAxD,CAAd;;AACA,sBAAI,CAACA,MAAL,CAAY3N,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,CAAC,CAACrM,IAAF,CAAOsM,aAAP,CAAqBF,CAAC,CAACpM,IAAvB,EAA6BkG,SAA7B,EAAwC;AAC/DgxE,yBAAO,EAAE,IADsD;AAE/DC,mCAAiB,EAAE;AAF4C,iBAAxC,CAAV;AAAA,eAAjB;;AAIA,sBAAI,CAAClrC,WAAL,GAAmB,CAAC;AAAE/1B,kBAAE,EAAE,EAAN;AAAUlW,oBAAI,EAAE;AAAhB,eAAD,EAA6Ci0B,MAA7C,CACf,QAAI,CAAC9C,IAAL,CAAU8a,WADK,CAAnB;AAGH,aAnBD,CAFJ;;AAuBA,oBAAI,CAACjqC,YAAL,CACI,gBADJ,EAEI,QAAI,CAAC0d,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BzX,SAA1B,CAAoC,UAAAiyB,IAAI,EAAI;AACxC,kBAAI,CAACA,IAAL,EACI;;AAEJ,kBAAI,QAAI,CAACojD,WAAT,EAAsB;AAClB,wBAAI,CAACA,WAAL,GAAmB,IAAnB;AACA13E,4BAAY,CAAC,QAAI,CAAC23E,WAAN,CAAZ;AACH;;AAED,sBAAI,CAACp2B,sBAAL,CAA4Bq2B,cAA5B,CAA2CtjD,IAAI,CAACvb,OAAhD,EAAyDub,IAAI,CAACjf,MAA9D;;AACA,sBAAI,CAACqiE,WAAL,GAAmBpjD,IAAI,CAACjf,MAAxB;AAEA,sBAAI,CAACsiE,WAAL,GAAmBp3E,UAAU,CAAC,YAAM;AAChC,wBAAI,CAACsf,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;;AACA,wBAAI,CAACmlE,WAAL,GAAmB,IAAnB;AACH,eAH4B,EAG1B,KAH0B,CAA7B;AAIH,aAhBD,CAFJ;AAoBH,WAnED;AAoEH;;;sCAEiB;AACd,cAAI,KAAK73D,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BlZ,QAA1B,EAAJ,EAA0C;AACtC,iBAAKif,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;AACH;AACJ;;;qCAEmB;AAChB,eAAKkvC,OAAL,CAAa9lC,IAAb,CAAkB,0BAAA2xD,qBAAlB,EAAyC;AACrC/jD,gBAAI,EAAE;AAAEvgB,sBAAQ,EAAE,KAAKA;AAAjB,aAD+B;AAErC+gD,qBAAS,EAAE,KAF0B;AAGrCC,yBAAa,EAAE;AAHsB,WAAzC;AAKH;;;sCAEoB;;;AACjB,eAAKzI,sBAAL,CAA4B7M,OAA5B,CAAoC,KAAK6hC,YAAL,IAAqB,KAAKjlD,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA5E;;AACA,4BAAKmrC,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAEnkC,GAAd,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAEI,QAAF,CAAW,YAAX,CAAjB,KAA6C,KAAK+jC,OAAL,CAAajL,QAAb,CAAsB,CAAC,YAAD,EAAe,KAAKggC,YAApB,CAAtB,CAA7C;AACH,S,CAED;AACA;;;;qCAKoBxxE,M,EAAgB;AAChC,eAAKA,MAAL,GAAcA,MAAd;AACH;;;qCAEmB;AAChB,eAAK2yE,WAAL,GAAmB,IAAnB;AACH;;;sCAEuB;;;;;;;;6CACQ,KAAK73D,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BlZ,QAA1B,E,EAApByU,M,0BAAAA,M,EAAQ0D,O,0BAAAA,O;;wBACXA,O;;;;;;;;;AAGL,2BAAMA,OAAO,CAACub,IAAR,CAAa,QAAb,EAAuBjf,MAAM,KAAK,QAAX,GAAsB;AAAEstB,4BAAM,EAAE;AAAV,qBAAtB,GAAyC,EAAhE,CAAN;;;AACA,yBAAK4e,sBAAL,CAA4Bq2B,cAA5B,CAA2C7+D,OAA3C,EAAoD1D,MAApD,EAA4D,IAA5D;;AACA,yBAAKwK,QAAL,CAAc/F,GAAd,CAAkB,MAAlB,EAA0BvH,IAA1B,CAA+B,IAA/B;;AACA,yBAAKmlE,WAAL,GAAmB,IAAnB;AACA,yBAAKC,WAAL,GAAmB,IAAnB;;AAEA,yBAAKl2B,OAAL,CAAa9lC,IAAb,CAAkB,kCAAA23D,4BAAlB,EAAgD;AAC5ClwB,8BAAQ,EAAE,mBADkC;AAE5C75B,0BAAI,EAAE;AACFzC,6BAAK,EAAE/N,OAAO,CAAC+N,KADb;AAEF/N,+BAAO,EAAEA;AAFP,uBAFsC;AAM5CgxC,+BAAS,EAAE,KANiC;AAO5CC,mCAAa,EAAE;AAP6B,qBAAhD;;;;;;;;;AASH;;;4BA9IqB;AAClB,iBAAO,KAAK14B,IAAL,CAAUrK,QAAjB;AACH;;;4BA4GqB;AAClB,iBAAO,KAAKqK,IAAL,CAAUrK,QAAV,CAAmBje,QAA1B;AACH;;;;MAlIkC,OAAAnI,a;;AALvC;;;uBAKaogF,iB,EAAiB,2C,EAAA,4C,EAAA,4C,EAAA,kC,EAAA,+B,EAAA,uC;AAAA,K;;;YAAjBA,iB;AAAiB,kC;AAAA,+C;AAAA,c;AAAA,a;AAAA,6oB;AAAA;AAAA;ACnB9B;AACI;AACA;AAGA;AAqDJ;;;;AAxDuB;AAAA;AAGA;AAAA;;;;;;;;;2BDcVA,iB,EAAiB;cAL7B,OAAA/8B,SAK6B;eALnB;AACPljD,kBAAQ,EAAE,aADH;AAEPmjD,qBAAW,EAAE,4BAFN;AAGPC,mBAAS,EAAE,CAAC,4BAAD;AAHJ,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnB9B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMm0B,MAAM,GAAY,CACpB;AAAE/pD,UAAI,EAAE,EAAR;AAAYs8C,eAAS,EAAE,sBAAAmW;AAAvB,KADoB,EAEpB;AAAEzyD,UAAI,EAAE,QAAR;AAAkBs8C,eAAS,EAAE,sBAAAmW;AAA7B,KAFoB,EAGpB;AAAEzyD,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAHoB,CAAxB;;QAUaL,c;;;;AAJb;;YAIaA;;;;yBAAAA,c;AAAc,O;AAAA,gBAFd,CAAC,SAAA9rE,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,QAAAC,mBAA5B,EAAiD,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAAjD,EAAgF,gBAAAnL,mBAAhF,EAAqG,KAAA/kB,QAArG,CAEc;;;;+EAAd8iB,c,EAAc;AAAA,uBAHR,sBAAA8V,iBAGQ,EAHW,qBAAAJ,yBAGX,EAHsC,wBAAAF,2BAGtC,EAHmE,iBAAAC,qBAGnE;AAHwF,kBACrG,SAAAvhF,YADqG,EACvF,QAAA8oD,WADuF,EAC1E,QAAAC,mBAD0E,EACrD,EAAF,aADuD,EACtB,gBAAAglB,mBADsB,EACD,KAAA/kB,QADC;AAGxF,O;AAF+F,K;;;;;2BAE7G8iB,c,EAAc;cAJ1B,OAAA7rE,QAI0B;eAJjB;AACN6B,sBAAY,EAAE,CAAC,sBAAA8/E,iBAAD,EAAoB,qBAAAJ,yBAApB,EAA+C,wBAAAF,2BAA/C,EAA4E,iBAAAC,qBAA5E,CADR;AAENrhF,iBAAO,EAAE,CAAC,SAAAF,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,QAAAC,mBAA5B,EAAiD,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAAjD,EAAgF,gBAAAnL,mBAAhF,EAAqG,KAAA/kB,QAArG;AAFH,S;AAIiB,Q;;;;;;;;;;;;;;;;;;;;;;ACtB3B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPI;AACI;AACJ;;;;;;;;;;;;;;;AAOgB;AAAqD;AAAA;AAAA;AAAA,sCAAsB,EAAtB;AAAwB,SAAxB;AACjD;AACJ;;;;AADc;AAAA;;;;;;;;AAGlB;AACI;AAAY;AAAA;AAAA;AAAA;AAAA;AACR;AAAyB;AAAU;AACnC;AAA+B;AAAW;AAC1C;AAAgC;AAAY;AAChD;AACJ;;;;;AAN0C;AAC1B;AAAA;AACI;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;AAGpB;AAGI;AAAA;AAAA;AAAA,iBAAU,QAAA64B,oBAAA,qBAAV;AAAmD,SAAnD;;AACA;AACJ;;;;;AAHI;;;;;;;;;;;;;;;AAjBR;AACI;AACI;AACA;AAAgB;AAAA;AAAA;AAAA;AAAA;AAAhB;AACA;AAGJ;AACA;AAOA;AAMJ;;;;;AApBoB;AAAA;AACF;AAAA;AACM;AAAA;AACkB;AAAA;AAItB;AAAA;AAQZ;AAAA;;;;;;;;AAMR;AAA+D;AAAA;AAAA;AAAA,uDAA+B,CAA/B;AAAgC,SAAhC;AAAkC;AAEjG;;;;;;;;AACA;AAAwE;AAAA;AAAA;AAAA,2DAA6B,CAA7B;AAA8B,SAA9B;AAAgC;AAExG;;;;;;;;AAII;AACI;AACiB;AAAA;AAAA;AAAA;AAAA;AAAyB;AAC9C;;;;;AAFqB;AAAA,mDAAqB,UAArB,EAAqB,eAArB,EAAqB,SAArB,EAAqB,iBAArB;;;;;;AAGrB;AACI;;AACJ;;;;;AADuB;AAAA,iGAAqD,MAArD,EAAqD,WAArD,EAAqD,QAArD,EAAqD,iBAArD,EAAqD,MAArD,EAAqD,iBAArD;;;;;;;;;;;;;;AAEvB;AACI;AACI;AAEI;AACI;;AAOI;AAAI;AAAiB;AACzB;AACA;AAAkB;AAA+B;AACrD;AACJ;AACA;AAEI;AACI;;AAOI;AAAI;AAAe;AACvB;AACA;AACI;AACJ;AACJ;AACJ;AACJ;AACJ;;;;AAjC+C;AAAA;AAK3B;AAAA;AAU6B;AAAA;AAK7B;AAAA;;;;;;;;AA9DhC;AACI;AAAiB;AAAA;AAAA;AAAA;AAAA;AACb;AAsBA;AAGA;AAGJ;AACA;AACI;AACI;AAIA;AAGA;AAoCJ;AACJ;AACJ;;;;;AA7EqB;AAAA;AACc;AAAA;AAsBR;AAAA;AAGA;AAAA;AAKL;AAAA;AACI;AAAA;AAIA;AAAA;;;;QD1BjBC,iB;;;;;AAoBT,iCACY7K,MADZ,EAEY90B,OAFZ,EAGY3hC,QAHZ,EAIYyR,IAJZ,EAKY8vD,eALZ,EAK4C;AAAA;;AAAA;;AAExC;AANQ,iBAAA9K,MAAA,GAAAA,MAAA;AACA,iBAAA90B,OAAA,GAAAA,OAAA;AACA,iBAAA3hC,QAAA,GAAAA,QAAA;AACA,iBAAAyR,IAAA,GAAAA,IAAA;AACA,iBAAA8vD,eAAA,GAAAA,eAAA;AAxBZ;;AACO,iBAAAr8E,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAKP;;AACO,iBAAAy3C,QAAA,GAAmB,CAAnB;AACP;;AACO,8BAAkB,CAAlB;AAGP;;AACO,iBAAA4lC,UAAA,GAAqB,EAArB;AAEA,iBAAAH,oBAAA,GAAuB,IAAI,OAAArhF,eAAJ,CAA6B,KAA7B,CAAvB;;AAYH,iBAAKqhF,oBAAL,CAA0B3uE,IAA1B,CAA+B6uE,eAAe,CAACE,YAA/C;;AAHwC;AAI3C;;;;mCAEc;AAAA;;AACX,eAAKn/E,YAAL,CAAkB,oBAAlB,EAAwC,KAAK++E,oBAAL,CAA0B7+E,SAA1B,CAAoC,UAAAiF,KAAK,EAAI;AACjF,oBAAI,CAAC85E,eAAL,CAAqBE,YAArB,GAAoCh6E,KAApC;AACH,WAFuC,CAAxC;;AAGA,eAAKgqB,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAP,CAA3B,EAA0C9Y,SAA1C,CAAoD,YAAM;AACtD;AACA,oBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,kBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,yBAAW,EAAE,KAArC;AAA4CC,yBAAW,EAAE,QAAI,CAACnhB;AAA9D,aAAX,CAAd;AACA,oBAAI,CAACyyC,QAAL,GAAgB,CAAhB;AACA,oBAAI,CAAC57B,QAAL,CAAcwP,KAAd,GAAsB,UAAtB;;AACA,oBAAI,CAACltB,YAAL,CACI,cADJ,EAEI,QAAI,CAACm0E,MAAL,CAAYW,QAAZ,CAAqB50E,SAArB,CAA+B,UAACgrC,MAAD,EAAY;AACvC,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACpB,wBAAI,CAACqK,IAAL,GAAYl0C,MAAM,CAACvzB,GAAP,CAAW,MAAX,CAAZ;AACH;AACJ,aAJD,CAFJ;;AAQA,oBAAI,CAAC3X,YAAL,CACI,oBADJ,EAEI,QAAI,CAACm0E,MAAL,CAAY4G,aAAZ,CAA0B76E,SAA1B,CAAoC,UAACgrC,MAAD,EAAY;AAC5C,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,MAAX,KAAsB7pC,MAAM,CAACvzB,GAAP,CAAW,MAAX,MAAuB,QAAI,CAACwX,IAAL,CAAUrK,QAAV,CAAmB5Q,EAApE,EAAwE;AACpE,oBAAMA,EAAE,GAAGg3B,MAAM,CAACvzB,GAAP,CAAW,MAAX,CAAX;;AACA,oBAAMivB,GAAG,GAAG,QAAI,CAACzX,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACqf,QAAD;AAAA,yBAAcA,QAAQ,CAAC5Q,EAAT,KAAgBA,EAA9B;AAAA,iBAAzB,CAAZ;;AACA,oBAAI0yB,GAAJ,EAAS;AACL,0BAAI,CAACzX,IAAL,CAAUrK,QAAV,GAAqB8hB,GAArB;AACH;AACJ;AACJ,aARD,CAFJ;;AAYA,oBAAI,CAAC5mC,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,YAAM;AAChD;AACA,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,2BAAW,EAAE,KAArC;AAA4CC,2BAAW,EAAE,QAAI,CAACnhB;AAA9D,eAAX,CAAd;AACA,sBAAI,CAACmuE,UAAL,GAAkB,QAAI,CAAC7lD,IAAL,CAAUrK,QAAV,GAAqB,IAArB,GAA4B,KAA9C;AACA,kBAAG,CAAC,QAAI,CAACkwD,UAAT,EAAqB;;AAErB,sBAAI,CAAC31B,OAAL,CAAajL,QAAb,CAAsB,EAAtB,EAA0B;AACtBirC,0BAAU,EAAE,QAAI,CAAClL,MADK;AAEtBtzB,2BAAW,EAAE;AAAEz0C,sBAAI,EAAE,QAAI,CAAC+iB,IAAL,CAAUrK,QAAV,CAAmB5Q;AAA3B;AAFS,eAA1B;AAIH,aAVD,CAFJ;AAcH,WAvCD;AAwCH;;;4BAEqB;AAClB,iBAAO,KAAKib,IAAL,CAAUrK,QAAV,CAAmBje,QAA1B;AACH;;;;MA/EkC,OAAAnI,a;;AALvC;;;uBAKasgF,iB,EAAiB,uC,EAAA,+B,EAAA,2C,EAAA,4C,EAAA,wC;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,+C;AAAA,c;AAAA,a;AAAA,s4C;AAAA;AAAA;AChB9B;AACI;AACA;AAGA;AA+EJ;;;;AAlFuB;AAAA;AAGA;AAAA;;;;;;;;;;2BDWVA,iB,EAAiB;cAL7B,OAAAj9B,SAK6B;eALnB;AACPljD,kBAAQ,EAAE,cADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB9B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAMm0B,MAAM,GAAY,CACpB;AAAE/pD,UAAI,EAAE,EAAR;AAAYs8C,eAAS,EAAE,qBAAAqW;AAAvB,KADoB,EAEpB;AAAE3yD,UAAI,EAAE,OAAR;AAAiBs8C,eAAS,EAAE,qBAAAqW;AAA5B,KAFoB,EAGpB;AAAE3yD,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAHoB,CAAxB;;QAmCaJ,c;;;;AA7Bb;;YA6BaA;;;;yBAAAA,c;AAAc,O;AAAA,iBAHZ,CAAC,mBAAAqW,eAAD,C;AAAiB,gBAVnB,CACL,SAAApiF,YADK,EAEL,QAAA8oD,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAJK,EAKL,gBAAAnL,mBALK,EAML,kBAAAnlB,oBANK,EAOL,OAAAhnD,UAPK,EAQL,kBAAAiW,cARK,CAUmB,EAClB,OAAAjW,UADkB;;;;+EAGnBmqE,c,EAAc;AAAA,uBA3BnB,qBAAA+V,iBA2BmB,EA1BnB,mBAAAO,uBA0BmB,EAzBnB,iBAAAC,qBAyBmB,EAxBnB,sBAAAC,6BAwBmB,EAvBnB,2BAAAC,8BAuBmB,EAtBnB,wBAAAC,2BAsBmB,EArBnB,uBAAAC,0BAqBmB,EApBnB,iBAAAC,2BAoBmB,EAnBnB,gCAAAC,0BAmBmB,EAlBnB,kBAAAC,0BAkBmB,EAjBnB,4BAAAC,4BAiBmB,EAhBnB,qBAAAC,0BAgBmB,EAfnB,iBAAAC,0BAemB;AAfO,kBAG1B,SAAAhjF,YAH0B,EAI1B,QAAA8oD,WAJ0B,EAK1B,QAAAC,mBAL0B,EAKP,eALO,EAO1B,gBAAAglB,mBAP0B,EAQ1B,kBAAAnlB,oBAR0B,EAS1B,OAAAhnD,UAT0B,EAU1B,kBAAAiW,cAV0B,CAeP;AALL,kBAGR,OAAAjW,UAHQ;AAKK,O;AAFH,K;;;;;2BAEXmqE,c,EAAc;cA7B1B,OAAA9rE,QA6B0B;eA7BjB;AACN6B,sBAAY,EAAE,CACV,qBAAAggF,iBADU,EAEV,mBAAAO,uBAFU,EAGV,iBAAAC,qBAHU,EAIV,sBAAAC,6BAJU,EAKV,2BAAAC,8BALU,EAMV,wBAAAC,2BANU,EAOV,uBAAAC,0BAPU,EAQV,iBAAAC,2BARU,EASV,gCAAAC,0BATU,EAUV,kBAAAC,0BAVU,EAWV,4BAAAC,4BAXU,EAYV,qBAAAC,0BAZU,EAaV,iBAAAC,0BAbU,CADR;AAgBN9iF,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,QAAA8oD,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAJK,EAKL,gBAAAnL,mBALK,EAML,kBAAAnlB,oBANK,EAOL,OAAAhnD,UAPK,EAQL,kBAAAiW,cARK,CAhBH;AA0BN+pC,mBAAS,EAAE,CAAC,mBAAAwgC,eAAD,CA1BL;AA2BNrgF,iBAAO,EAAE,CAAC,OAAAH,UAAD;AA3BH,S;AA6BiB,Q;;;2BAxBnB,sBAAA2gF,6B,EAA6B,+0GAH7B,qBAAAT,iBAG6B,EAF7B,mBAAAO,uBAE6B,EAD7B,iBAAAC,qBAC6B,EAA7B,sBAAAC,6BAA6B,EAC7B,2BAAAC,8BAD6B,EAE7B,wBAAAC,2BAF6B,EAG7B,uBAAAC,0BAH6B,EAI7B,iBAAAC,2BAJ6B,EAK7B,gCAAAC,0BAL6B,EAM7B,kBAAAC,0BAN6B,EAO7B,4BAAAC,4BAP6B,EAQ7B,qBAAAC,0BAR6B,EAS7B,iBAAAC,0BAT6B,C,EASH,qQ;;;;;;;;;;;;;;;;;;;;AClDlC;AAAA;AAAA;;QAEaZ,e;;;;;AAIT,iCAAc;AAAA;;AAAA,mCACJ,UADI;AAEb;;;;6CAW2B;AACxB,eAAKa,WAAL,CAAiBb,eAAe,CAACc,eAAjC;AACH;;;0BAXuBj7E,K,EAAgB;AACpC,eAAKtC,QAAL,CAAcy8E,eAAe,CAACc,eAA9B,EAA+Cj7E,KAAK,GAAG,EAAvD;AACH,S;4BAEsB;AACnB,cAAMA,KAAK,GAAG,KAAK1G,QAAL,CAAc6gF,eAAe,CAACc,eAA9B,CAAd;AACA,iBAAOj7E,KAAK,KAAK,MAAjB;AACH;;;;MAfgC,UAAAmuD,mB;;AAArC;AAEmB,oBAAA8sB,eAAA,GAAkB,eAAlB;;;;;;;;;;;;;;;;;;;;ACJnB;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;ACPQ;AACI;AACJ;;;;;;AAD2B;AAAA,iDAAmB,MAAnB,EAAmB,OAAnB;;;;;;AAF/B;AACI;AAGJ;;;;;AAHsB;AAAA;;;;;;;;;;;;;AAMtB;AACI;AACI;AACJ;AACA;AAAkB;AAAqD;AAC3E;;;;;AAHkB;AAAA;AAEI;AAAA;;;;QDIbX,6B;;;;;AAWT,6CAAoBngC,OAApB,EAAgDnwB,IAAhD,EAA2E;AAAA;;AAAA;;AACvE;AADgB,iBAAAmwB,OAAA,GAAAA,OAAA;AAA4B,iBAAAnwB,IAAA,GAAAA,IAAA;AAA2B;AAE1E;AAPD;;;;;oCASmBxvB,O,EAAwB;AACvC;AACA,cAAIA,OAAO,WAAP,IAAmB,eAAvB,EAAqC;AACjC,iBAAK0gF,cAAL;AACH;AACJ;;;uCAEqB57D,K,EAA0B;AAAA;;AAC5C;AACA,cAAI,CAACA,KAAL,EAAY;AACRA,iBAAK,GAAG,IAAI,cAAAsd,gBAAJ,CAAqB;AACzBu+C,uBAAS,EAAE,KAAKhnC,QAAL,CAAcplC,EADA;AAEzB6Q,mBAAK,EAAE,CAAC,KAAKD,QAAL,CAAc5Q,EAAf;AAFkB,aAArB,CAAR;AAIH;;AACD,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,wBAAAmmE,2BAAlB,EAA+C;AACvDv4D,gBAAI,EAAE;AAAE3C,mBAAK,EAALA,KAAF;AAAS87D,oBAAM,EAAE,KAAKjnC;AAAtB,aADiD;AAEvDsO,qBAAS,EAAE,KAF4C;AAGvDC,yBAAa,EAAE;AAHwC,WAA/C,CAAZ;;AAKA,eAAK7nD,YAAL,CACI,gBADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC1D;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,kBAAM5kB,KAAK,GAAG,QAAI,CAAC+4C,QAAL,CAAcr5C,KAAd,CAAoBsuC,SAApB,CACV,UAAC5jC,IAAD;AAAA,uBAAUgF,KAAK,CAACwO,QAAN,CAAejK,EAAf,KAAsBvJ,IAAI,CAACuJ,EAArC;AAAA,eADU,CAAd;;AAGA,kBAAI3T,KAAK,IAAI,CAAb,EAAgB;AACX,wBAAI,CAAC+4C,QAAL,CAAcr5C,KAAd,CAA8ByO,MAA9B,CAAqCnO,KAArC,EAA4C,CAA5C,EAA+CoP,KAAK,CAACwO,QAArD;AACJ,eAFD,MAEO;AACF,wBAAI,CAACm7B,QAAL,CAAcr5C,KAAd,CAA8B6J,IAA9B,CAAmC6F,KAAK,CAACwO,QAAzC;AACJ;AACJ;AACJ,WAZD,CAFJ;AAgBH;;;4BA5CkB;AACf,iBAAO,KAAKgR,IAAL,CAAUrK,QAAjB;AACH;;;;MAT8C,OAAApmB,a;;AALnD;;;uBAKa+gF,6B,EAA6B,kC,EAAA,4C;AAAA,K;;;YAA7BA,6B;AAA6B,gD;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,2N;AAAA;AAAA;AChB1C;AACI;AAKJ;AACA;;;;;;AANkB;AAAA,iGAA6E,UAA7E,EAA6E,GAA7E;;;;;;;;2BDeLA,6B,EAA6B;cALzC,OAAA19B,SAKyC;eAL/B;AACPljD,kBAAQ,EAAE,2BADH;AAEPmjD,qBAAW,EAAE,4BAFN;AAGPC,mBAAS,EAAE,CAAC,4BAAD;AAHJ,S;AAK+B,Q;;;;;;;;gBAErC,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBL;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfI;;;;;AAGI;;;;;;AAMI;AACI;;AACJ;;;;;AADI;AAAA;;;;;;AAIZ;AACI;;AACJ;;;;;AADI;AAAA;;;;;;;;;;;;;;;;;;;;;;AAhBR;AACI;AAKA;AACI;AAAkB;AAAe;AACjC;AAAyB;AAA4D;AACrF;AACI;AAGJ;AACJ;AACA;AAGA;AACI;AACJ;AACA;AAII;AAAA;AAAA;AAAA;AAAA;AAEA;AAMJ;AACJ;;;;;;;;AAlCwC;AAGhC;AAAA;AAIkB;AAAA;AACO;AAAA;AAEiB;AAAA;AAKT;AAAA;AAGD;AAAA;AACtB;AAAA;AAKV;AAAA;AAII;AAAA;;;;;;AAQR;;;;;;AAEI,uCAAgB,QAAhB,EAAgB,WAAhB,EAAgB,MAAhB,EAAgB,WAAhB;;;;;;;;;;;;;;;AAOA;AAAwD;AAAA;AAAA;AAAA;AAAA;AACpD;AACI;AACA;AAAkB;AAAS;AAC/B;AACJ;;;;AAHkB;AAAA;;;;;;;;AAHtB;AACI;AAMA;AAAsC;AAAA;AAAA;AAAA;AAAA;AAClC;AACI;AACA;AAAkB;AAAQ;AAC9B;AACJ;AACJ;;;;;AAZ2C;AAAA;AAQrB;AAAA;;;;;;;;;;;;;;;;;;QD7Bb2+E,0B;;;;;AAqBT,0CACYxiE,QADZ,EAEY4hC,OAFZ,EAGYnwB,IAHZ,EAIYqxD,WAJZ,EAKYC,gBALZ,EAKuD;AAAA;;AAAA;;AAEnD;AANQ,iBAAA/iE,QAAA,GAAAA,QAAA;AACA,iBAAA4hC,OAAA,GAAAA,OAAA;AACA,iBAAAnwB,IAAA,GAAAA,IAAA;AACA,iBAAAqxD,WAAA,GAAAA,WAAA;AACA,iBAAAC,gBAAA,GAAAA,gBAAA;AAA2C;AAGtD;AAjBD;;;;;uCAmBsBh8D,K,EAA0B;AAAA;;AAC5C;AACA,cAAI,CAACA,KAAL,EAAY;AACRA,iBAAK,GAAG,IAAI,cAAAsd,gBAAJ,CAAqB;AAAEu+C,uBAAS,EAAE,KAAK31E,IAAL,CAAUuJ,EAAvB;AAA2B6Q,mBAAK,EAAE,CAAC,KAAKD,QAAL,CAAc5Q,EAAf;AAAlC,aAArB,CAAR;AACH;;AACD,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,wBAAAmmE,2BAAlB,EAA+C;AACvDv4D,gBAAI,EAAE;AAAE3C,mBAAK,EAALA,KAAF;AAAS87D,oBAAM,EAAE97D,KAAK,CAACvQ,EAAN,GAAW,KAAKqsE,MAAhB,GAAyB,KAAK51E;AAA/C,aADiD;AAEvDi9C,qBAAS,EAAE,KAF4C;AAGvDC,yBAAa,EAAE;AAHwC,WAA/C,CAAZ;;AAKA,eAAK7nD,YAAL,CACI,YADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAW;AAC7C,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAAjB,IAA2BxV,KAAK,CAACwO,QAArC,EAA+C;AAC3C,sBAAI,CAACuiE,cAAL,CAAoBj8D,KAApB,EAA2B9U,KAAK,CAACwO,QAAjC;AACH;AACJ,WAJD,CAFJ;AAQH;;;sCAEoBxT,I,EAAqB;AAAA;;AACtC;AACA,cAAI,CAACA,IAAL,EAAW;AACPA,gBAAI,GAAG,IAAI,cAAAw3B,YAAJ,CAAiB;AAAEm+C,uBAAS,EAAE,KAAK31E,IAAL,CAAUuJ;AAAvB,aAAjB,CAAP;AACH;;AACD,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,uBAAAomE,0BAAlB,EAA8C;AACtDx4D,gBAAI,EAAE;AAAEzc,kBAAI,EAAJA,IAAF;AAAQ41E,oBAAM,EAAE51E,IAAI,CAACuJ,EAAL,GAAU,KAAKqsE,MAAf,GAAwB,KAAK51E;AAA7C,aADgD;AAEtDi9C,qBAAS,EAAE,KAF2C;AAG5DC,yBAAa,EAAE;AAH6C,WAA9C,CAAZ;;AAKA,eAAK7nD,YAAL,CACI,YADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAW;AAC7C,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAAjB,IAA2BxV,KAAK,CAACwO,QAArC,EAA+C;AAC3C,sBAAI,CAACuiE,cAAL,CAAoB/1E,IAApB,EAA0BgF,KAAK,CAACwO,QAAhC;AACH;AACJ,WAJD,CAFJ;AAQH;;;uCAEsBwiE,Q,EAA2CxgE,Q,EAAmB;AACjF,cAAMxV,IAAI,GACNg2E,QAAQ,YAAY,cAAA5+C,gBAApB,GACM,IAAI,cAAAA,gBAAJ,CAAqB5hB,QAArB,CADN,GAEM,IAAI,cAAAgiB,YAAJ,CAAiBhiB,QAAjB,CAHV;;AAIA,cAAIwgE,QAAQ,CAACzsE,EAAb,EAAiB;AACb,gBAAM3T,KAAK,GAAG,KAAKggF,MAAL,CAAYtgF,KAAZ,CAAkBsuC,SAAlB,CAA4B,UAACqyC,GAAD;AAAA,qBAASA,GAAG,CAAC1sE,EAAJ,KAAWysE,QAAQ,CAACzsE,EAA7B;AAAA,aAA5B,CAAd;AACC,iBAAKqsE,MAAL,CAAYtgF,KAAZ,CAA4ByO,MAA5B,CAAmCnO,KAAnC,EAA0C,CAA1C,EAA6CoK,IAA7C;AACA,iBAAK41E,MAAL,CAAoBtgF,KAApB,sBAAgC,KAAKsgF,MAAL,CAAYtgF,KAA5C;AACJ,WAJD,MAIO;AACF,iBAAK0K,IAAL,CAAU1K,KAAV,CAA0B6J,IAA1B,CAA+Ba,IAA/B;AACJ;AACJ;;;qCAEmB;AAAA;;AAChB,cAAMzD,IAAI,GACN,KAAKyD,IAAL,CAAUq3B,WAAV,GACM,KAAKr3B,IAAL,cACI,SADJ,GAEI,cAHV,GAIM,MALV;;AAMA,cAAMo2C,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC;AACjDr+B,gBAAI,EAAE;AACF8F,mBAAK,4BAAqBhmB,IAArB,CADH;AAEFoS,qBAAO,yDAAkDpS,IAAlD,gBACH,KAAKyD,IAAL,CAAU3M,IADP,sBAGH,KAAK2M,IAAL,YAAqB,cAAAo3B,gBAArB,GACM,2EADN,GAEM,EALH,CAFL;AASF1oB,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eATJ;AAUFpG,oBAAM,EAAE;AAVN,aAD2C;AAajD00C,qBAAS,EAAE,KAbsC;AAcjDC,yBAAa,EAAE;AAdkC,WAAzC,CAAZ;;AAgBA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE3DA,KAAK,CAACwV,MAAN,KAAiB,MAF0C;AAAA;AAAA;AAAA;;AAG3D47B,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB,sBAA4CvT,IAA5C;AACIoF,uBAJuD,GAInD,IAJmD;AAKvD0hB,6BALuD,GAMvD,KAAKrjB,IAAL,CAAUq3B,WAAV,GACM,KAAKy+C,gBADX,GAEM,KAAKD,WAR4C;AAAA;AAS3D,6BAAMxyD,OAAO,UAAP,CAAe,KAAKrjB,IAAL,CAAUuJ,EAAzB,WAAmC,UAACoL,GAAD;AAAA,+BAAShT,CAAC,GAAGgT,GAAG,IAAI,OAApB;AAAA,uBAAnC,CAAN;;AAT2D;AAU3DyhC,yBAAG,CAACH,KAAJ;;AACA,0BAAI,CAACt0C,CAAL,EAAQ;AACJ,6BAAKoR,QAAL,CAAc9b,GAAd,CAAkB,cAAlB,EAAkC,KAAK+I,IAAL,CAAUuJ,EAA5C;AACH,uBAFD,MAEO;AACH,6BAAKwJ,QAAL,CAAcy2B,WAAd,0BAA4CjtC,IAA5C;AACH;;AAf0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC;AAkBH;;;4BAjHkB;AACf,iBAAO,KAAKioB,IAAL,CAAUrK,QAAjB;AACH;;;4BAEgB;AACb,iBAAO,KAAKA,QAAL,CAAc2jB,QAArB;AACH;;;;MAnB2C,OAAA/pC,a;;AANhD;;;uBAMawhF,0B,EAA0B,2C,EAAA,kC,EAAA,4C,EAAA,6C,EAAA,kD;AAAA,K;;;YAA1BA,0B;AAA0B,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,6+B;AAAA;AAAA;ACxBvC;AAmCA;AACI;AAMJ;AACA;AACI;AAcA;AAGI;AAAA,mEAAiD,IAAAG,cAAA,UAAjD,GAAwE,IAAAQ,aAAA,UAAxE;AAA2F,WAA3F;AAEA;AACI;AACA;AACI;AAUJ;AACJ;AACJ;AACA;AAAmD;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;AAC/C;AACI;AACA;AACI;AAUJ;AACJ;AACJ;AACJ;;;;AAhG2B;AAmCL;AAAA;AAEd;AAAA;AAOU;AAAA;AAoBI;AAAA;AAEN;AAAA;AAeM;AAAA;AAEN;AAAA;;;wHD3DHZ,0B;AAA0B,8B;AAAA,sxT;AAAA;AAAA,mBAFvB,CAAC,aAAAnjF,8BAAD;AAEuB;;;;;2BAA1BmjF,0B,EAA0B;cANtC,OAAAn+B,SAMsC;eAN5B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPsH,oBAAU,EAAE,CAAC,aAAAxsD,8BAAD;AAJL,S;AAM4B,Q;;;;;;;;;;;;;;gBAElC,OAAAwE;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEhCL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJoB;AACI;AAAmB;AAAkB;AACrC;AAAoC;AAAA;AAAA,iBAASuqD,MAAM,CAACr6C,eAAP,EAAT;AAAiC,SAAjC,EAAkC,OAAlC,EAAkC;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlC;AAChC;AACJ;AACJ;;;;;AAJuB;AAAA;AAEL;AAAA;;;;;;AAL1B;AACI;AAQA;AACJ;;;;;;;AAD+B;AAAA,qDAAoB,UAApB,EAAoB,WAApB;;;;;;;;AAVnC;AAA+E;AAAA;AAAA;AAAA;AAAA;AAC3E;AAWJ;;;;;AAZ+E;AAClE;AAAA;;;;;;AAFjB;AACI;AAaJ;;;;;;;;AAbmB;AAAA,mFAA+D,UAA/D,EAA+D,GAA/D;;;;;;AAgBnB;AACI;AACI;AACJ;AACA;AAAkB;AAAqC;AAC3D;;;;;AADsB;AAAA;;;;;;;;;;;;;AAItB;AACI;AACI;AACJ;AACA;AAAkB;AAA2C;AACjE;;;;;AAHkB;AAAA;AAEI;AAAA;;;;QDdb+tE,qB;;;;;AAyBT,qCAAoB9hE,QAApB,EAA0DyR,IAA1D,EAA6Fs+C,KAA7F,EAAiInuB,OAAjI,EAAqJ;AAAA;;AAAA;;AACjJ;AADgB,iBAAA5hC,QAAA,GAAAA,QAAA;AAAsC,iBAAAyR,IAAA,GAAAA,IAAA;AAAmC,iBAAAs+C,KAAA,GAAAA,KAAA;AAAoC,iBAAAnuB,OAAA,GAAAA,OAAA;AAlBjI;;AACiB,iBAAAn7C,MAAA,GAAS,IAAI,OAAAq7C,YAAJ,EAAT;AACjB;;AACO,iBAAAuhC,aAAA,GAAoC,EAApC;AACP;;AACO,iBAAAC,aAAA,GAAoC,EAApC;AAGP;;AACO,iBAAAzgF,KAAA,GAAgB,CAAhB;AACP;;AACO,iBAAAvD,KAAA,GAAyB,EAAzB;AAO8I;AAEpJ;AAPD;;;;;mCASe;AAAA;;AACX,eAAK0gB,QAAL,CAAc9b,GAAd,CAAkB,cAAlB,EAAkC,EAAlC;;AACA,eAAK5B,YAAL,CAAkB,SAAlB,EAA6B,KAAK0d,QAAL,CAAcld,MAAd,CAAqB,cAArB,EAAqCN,SAArC,CAA+C,UAAAgU,EAAE;AAAA,mBAAI,QAAI,CAAC+sE,cAAL,CAAoB/sE,EAApB,CAAJ;AAAA,WAAjD,CAA7B;AACA,eAAKlU,YAAL,CACI,UADJ,EAEI,KAAKmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,UAAC8Y,CAAD,EAAO;AACjD,oBAAI,CAACzY,KAAL,GAAa,CAAb;AACA,oBAAI,CAACwgF,aAAL,GAAqB,EAArB;AACA,oBAAI,CAACC,aAAL,GAAqB,EAArB;;AACA,oBAAI,CAACE,gBAAL;AACH,WALD,CAFJ;AASH;;;oCAEkBvhF,O,EAAwB;AACvC,cAAIA,OAAO,CAACixB,MAAZ,EAAoB;AAChB,iBAAKowD,aAAL,GAAqB,KAAKn4E,MAAL,CAAY,KAAKk4E,aAAjB,CAArB;AACH;;AACD,cAAIphF,OAAO,CAAC25C,QAAR,IAAoB,KAAKA,QAA7B,EAAuC;AACnC,iBAAK6nC,iBAAL;AACH;;AACD,cAAIxhF,OAAO,WAAX,EAAqB;AACjB,iBAAK3C,KAAL,CAAW,KAAKuD,KAAhB,IAAyB,eAAzB;AACH;AACJ;;;0CAEwB+4C,Q,EAA6B;AAAA;;AAClD;AACA,cAAI,CAACA,QAAL,EAAe;AACXA,oBAAQ,GAAG,IAAI,cAAAvX,gBAAJ,CAAqB;AAAEhd,mBAAK,EAAE,CAAC,KAAKD,QAAL,CAAc5Q,EAAf;AAAT,aAArB,CAAX;AACH;;AACD,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,2BAAAkmE,8BAAlB,EAAkD;AAC1Dt4D,gBAAI,EAAE;AAAEkyB,sBAAQ,EAARA;AAAF,aADoD;AAE1DsO,qBAAS,EAAE,KAF+C;AAG1DC,yBAAa,EAAE;AAH2C,WAAlD,CAAZ;;AAKA,eAAK7nD,YAAL,CAAkB,gBAAlB,EAAoC+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC9F;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB,kBAAM5kB,KAAK,GAAG,QAAI,CAACwgF,aAAL,CAAmBxyC,SAAnB,CAA6B,UAAA5jC,IAAI;AAAA,uBAAIgF,KAAK,CAACwO,QAAN,CAAejK,EAAf,KAAsBvJ,IAAI,CAACuJ,EAA/B;AAAA,eAAjC,CAAd;;AACA,kBAAI3T,KAAK,IAAI,CAAb,EAAgB;AACZ,wBAAI,CAACwgF,aAAL,CAAmBryE,MAAnB,CAA0BnO,KAA1B,EAAiC,CAAjC,EAAoCoP,KAAK,CAACwO,QAA1C;;AACA,wBAAI,CAAC5d,KAAL,GAAaA,KAAb;AACH,eAHD,MAGO;AACH,wBAAI,CAACA,KAAL,GAAa,QAAI,CAACwgF,aAAL,CAAmB58E,MAAhC;;AACA,wBAAI,CAAC48E,aAAL,CAAmBj3E,IAAnB,CAAwB6F,KAAK,CAACwO,QAA9B;AACH;AACJ;AACJ,WAZmC,CAApC;AAaH;AAED;;;;;;;;uCAKuBjK,E,EAA8E;AAAA,cAAlE/T,IAAkE,uEAAvC,KAAK4gF,aAAkC;AAAA,cAAnBK,KAAmB,uEAAH,CAAG;;AACjG,cAAIjhF,IAAI,CAACgE,MAAL,KAAgB,CAAhB,IAAqBi9E,KAAK,GAAG,CAAjC,EAAoC;AAAE,mBAAO,KAAP;AAAe;;AACrD,cAAM3pE,KAAK,GAAGtX,IAAI,CAACouC,SAAL,CAAe,UAAA5jC,IAAI;AAAA,mBAAIA,IAAI,CAACuJ,EAAL,KAAYA,EAAhB;AAAA,WAAnB,CAAd;;AACA,cAAIuD,KAAK,IAAI,CAAb,EAAgB;AACZtX,gBAAI,CAACuO,MAAL,CAAY+I,KAAZ,EAAmB,CAAnB;AACA,mBAAO,IAAP;AACH,WAHD,MAGO;AAAA,yDACgBtX,IADhB;AAAA;;AAAA;AACH,wEAAyB;AAAA,oBAAdwK,IAAc;;AACrB,oBAAI,KAAKs2E,cAAL,CAAoB/sE,EAApB,EAAwBvJ,IAAI,CAAC1K,KAA7B,EAA2CmhF,KAAK,GAAG,CAAnD,CAAJ,EAA2D;AAAE,yBAAO,IAAP;AAAc;AAC9E;AAHE;AAAA;AAAA;AAAA;AAAA;AAIN;;AACD,iBAAO,KAAP;AACH;;;2CAEuB;AAAA;;AACpB;AACA,cAAI,KAAKt8D,QAAT,EAAmB;AACf,iBAAKrK,OAAL,GAAe,IAAf;;AACA,iBAAKgzD,KAAL,CAAWp4D,KAAX,CAAiB;AAAEoI,qBAAO,EAAE,KAAKqH,QAAL,CAAc5Q;AAAzB,aAAjB,EAAgDgK,IAAhD,CACI,UAACw5B,IAAD,EAAiB;AACb,sBAAI,CAACqpC,aAAL,GAAqB,CAACrpC,IAAI,IAAI,EAAT,EAAa5vC,GAAb,CAAiB,UAAC6C,IAAD;AAAA,uBAAU,IAAI,cAAAo3B,gBAAJ,CAAqBp3B,IAArB,CAAV;AAAA,eAAjB,CAArB;;AACA,sBAAI,CAACxG,MAAL,CAAYu8C,IAAZ,CAAiB,QAAI,CAACqgC,aAAL,CAAmB58E,MAApC;;AACA,sBAAI,CAAC68E,aAAL,GAAqB,QAAI,CAACn4E,MAAL,CAAY,QAAI,CAACk4E,aAAjB,CAArB;AACA,sBAAI,CAACtmE,OAAL,GAAe,KAAf;AACH,aANL,EAOI,UAAC6E,GAAD,EAAS;AACL,sBAAI,CAAC5B,QAAL,CAAcy2B,WAAd,kCAC8B,QAAI,CAACrvB,QAAL,CAAc9mB,IAD5C,sBAC4DshB,GAAG,CAACnG,OAAJ,GAAcmG,GAD1E,GAEI,OAFJ,EAGI;AAAA,uBAAM,QAAI,CAAC4hE,gBAAL,EAAN;AAAA,eAHJ;;AAKA,sBAAI,CAACzmE,OAAL,GAAe,KAAf;AACH,aAdL;AAgBH;AACJ;AAED;;;;+BACeta,I,EAA0B;AACrC,iBAAOA,IAAP;AACH;;;4BAxGkB;AACf,iBAAO,KAAKgvB,IAAL,CAAUrK,QAAjB;AACH;;;;MAvBsC,OAAApmB,a;;AAL3C;;;uBAKa8gF,qB,EAAqB,2C,EAAA,4C,EAAA,4C,EAAA,kC;AAAA,K;;;YAArBA,qB;AAAqB,sC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,4d;AAAA;AAAA;AChBlC;AACI;AAeJ;AACA;AAQA;;;;;;AAxBkB;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;;;;;;;;;2BDeLA,qB,EAAqB;cALjC,OAAAz9B,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD;AAHJ,S;AAKuB,Q;;;;;;;;;;;;gBAE7B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBL;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AAAoC;AAAM;AAAG;AAAQ;AAAO;AAAM;;;;;;AAClE;AAAmC;AAAM;AAAG;AAAQ;AAAM;;;;;;AAwBlC;;;;;AAEI;;;;;;AAEJ;;;;;;AAMhB;AACI;AACI;AAAkB;AAAiB;AACnC;AACJ;AACJ;;;;;AAL4C;AAElB;AAAA;AACE;AAAA;;;;;;;;AAlCpC;AAKI;AAEI;AAAA;AAAA;AAAA;AAAA,WAAyB,aAAzB,EAAyB;AAAA;AAAA;AAAA;AAAA,SAAzB;AAKA;AACI;AACI;AACI;AAMI;AAIA;AACJ;AACJ;AACA;AAAkB;AAA0B;AAChD;AACJ;AACA;AAMJ;AACJ;;;;;AA/BQ;AAAA,qDAAyB,UAAzB,EAAyB,cAAzB;AAUgB;AAAA;AAKI;AAAA;AAGS;AAAA;AAGH;AAAA;AAGd;AAAA;;;;;;;;;;;;;;;;;;;AAyChB;AAKI;;AAEJ;AAAA;;;;;;AAJI;AAEA;AAAA;;;;;;;;;;;;;;;;AAfZ;AAKI;AACI;AACJ;AACA;AACI;AAAkB;AAAe;AACjC;AAQA;AAAqB;AAAmB;AAC5C;AACA;AACJ;;;;;;AAlBI;AAGc;AAAA;AAGQ;AAAA;AAGd;AAAA;AAMiB;AAAA;;;;;;AArBjC;AAEI;AACA;AAsBJ;;;;;AAzBwD;AAKhD;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;QDrDC29B,2B;AA8DT,2CACYniE,QADZ,EAEY0R,OAFZ,EAGYK,SAHZ,EAIY2vB,sBAJZ,EAKYE,OALZ,EAK8B;AAAA;;AAJlB,aAAA5hC,QAAA,GAAAA,QAAA;AACA,aAAA0R,OAAA,GAAAA,OAAA;AACA,aAAAK,SAAA,GAAAA,SAAA;AACA,aAAA2vB,sBAAA,GAAAA,sBAAA;AACA,aAAAE,OAAA,GAAAA,OAAA;AAvDZ;;AACgB,aAAA+hC,YAAA,GAA6D,EAA7D;AAET,aAAAC,kBAAA,GAA+B,KAA/B;AAWA,aAAAC,QAAA,GAAuB,CAC1B;AAAErtE,YAAE,EAAE,UAAN;AAAkBlW,cAAI,EAAE,UAAxB;AAAoCqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAA1C;AAAwEmoE,gBAAM,EAAE;AAAhF,SAD0B,EAE1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAF0B,EAQ1B;AAAEttE,YAAE,EAAE,OAAN;AAAelW,cAAI,EAAE,OAArB;AAA8Bqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAApC;AAA+DmoE,gBAAM,EAAE;AAAvE,SAR0B,EAS1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAT0B,EAe1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAf0B,CAAvB;AA0CH;;;;oCAEe7hF,O,EAAwB;AACvC;AACA,cAAIA,OAAO,CAAC65B,KAAR,IAAiB,KAAKA,KAA1B,EAAiC;AAC7B,iBAAKioD,aAAL,GAAqB,KAAKjoD,KAAL,CAAWxT,MAAhC;AACA,iBAAK07D,iBAAL;AACH;;AACD,eAAKJ,kBAAL,GAA0B,KAAKK,UAA/B;AACH;AAED;;;;uCACyB;;;;;;;;;AACf/qE,2B,GAAU,KAAK4iB,KAAL,CAAW5iB,O;AAC3B;;yBACIA,O;;;;;AACA,yBAAK6D,OAAL,GAAe,IAAf;AACM0b,4B,sBAAevf,OAAO,CAACuf,Q;AAC7BA,4BAAQ,CAACznB,MAAT,CACIynB,QAAQ,CAACoY,SAAT,CAAmB,UAAC/U,KAAD;AAAA,6BAAWA,KAAK,CAACtlB,EAAN,KAAa,QAAI,CAACslB,KAAL,CAAWtlB,EAAnC;AAAA,qBAAnB,CADJ,EAEI,CAFJ,EAGI,IAAI,cAAAkiB,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAAM,KAAKoD,KAAX,CAAC,EAAe;AAAExT,4BAAM,EAAE,KAAKy7D;AAAf,qBAAf,CAAlB,CAHJ;AAKMrI,+B,GAAc,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAMtP,OAAO,CAACgH,MAAR,EAAN,CAAC,EAAqB;AAAEuY,8BAAQ,EAARA;AAAF,qBAArB,CAAZ,C;;AACI,2BAAM,KAAK1G,SAAL,CAAe8lB,IAAf,CAAoB6jC,WAApB,WAAuC,UAAC95D,GAAD,EAAS;AAC1E,8BAAI,CAAC5B,QAAL,CAAcy2B,WAAd,+CAC2C70B,GAAG,CAACnG,OAAJ,IAAemG,GAD1D;;AAGA,8BAAI,CAACmiE,aAAL,GAAqB,QAAI,CAACjoD,KAAL,CAAWxT,MAAhC;AACH,qBAL6B,CAAN;;;AAAlB47D,mC;;AAMN,wBAAIA,eAAJ,EAAqB;AACjB,2BAAKxiC,sBAAL,CAA4Bl0C,OAA5B,CAAoC02E,eAApC;AACH;;AACD,yBAAKnnE,OAAL,GAAe,KAAf;;;;;;;;;AAEP;AAED;;;;2CACuB;AACnB,cAAMqjD,SAAS,GAAG,KAAKxe,OAAL,CAAa9lC,IAAb,CAAkB,gCAAAsmE,0BAAlB,EAA8C;AAC5Dt6B,qBAAS,EAAE,MADiD;AAE5DvE,oBAAQ,EAAE,MAFkD;AAG5D75B,gBAAI,EAAE;AACFoS,mBAAK,EAAE,KAAKA,KADV;AAEF5iB,qBAAO,EAAE,KAAK4iB,KAAL,CAAW5iB;AAFlB,aAHsD;AAO5DgxC,qBAAS,EAAE,KAPiD;AAQ5DC,yBAAa,EAAE;AAR6C,WAA9C,CAAlB;AAUH;;;4CAE2B;AAAA,uDACL,KAAKruB,KAAL,CAAWv5B,KADN;AAAA;;AAAA;AACxB,sEAAqC;AAAA,kBAA1B0K,IAA0B;;AACjC,kBAAKA,IAAY,CAAC1K,KAAlB,EAAyB;AACrB,oBAAMA,KAAK,GAAG,EAAd;;AADqB,6DAEG0K,IAAY,CAAC1K,KAFhB;AAAA;;AAAA;AAErB,4EAA4C;AAAA,wBAAjC4hF,QAAiC;;AACxC,wBAAI,CAACA,QAAQ,CAAC5hF,KAAT,CAAekE,MAAhB,IAA0B09E,QAAQ,CAACv+C,MAAvC,EAA+C;AAC3CrjC,2BAAK,CAAC6J,IAAN,CAAW+3E,QAAX;AACH,qBAFD,MAEO;AAAA,mEACwBA,QAAQ,CAAC5hF,KADjC;AAAA;;AAAA;AACH,kFAA2C;AAAA,8BAAhC6hF,YAAgC;;AACvC,8BAAIA,YAAY,CAACx+C,MAAjB,EAAyB;AACrBrjC,iCAAK,CAAC6J,IAAN,CAAWg4E,YAAX;AACH;AACJ;AALE;AAAA;AAAA;AAAA;AAAA;AAMN;AACJ;AAZoB;AAAA;AAAA;AAAA;AAAA;;AAarB,qBAAKT,YAAL,CAAkB12E,IAAI,CAACuJ,EAAvB,IAA6B;AACzBovB,wBAAM,EAAErjC,KAAK,CAACkE,MADW;AAEzB0tB,yBAAO,aAAM5xB,KAAK,CAAC6H,GAAN,CAAU,UAAAxH,CAAC;AAAA,2BAAIA,CAAC,CAACtC,IAAN;AAAA,mBAAX,EAAuBsN,IAAvB,CAA4B,MAA5B,CAAN;AAFkB,iBAA7B;AAIH;AACJ;AApBuB;AAAA;AAAA;AAAA;AAAA;AAqB3B;;;qCAEmB;AAChB,eAAKg2E,kBAAL,GAA0B,CAAC,KAAKA,kBAAhC;AACH;;;4BA/HwB;AACrB,cAAMx5E,GAAG,GAAG,EAAZ;AACA,cAAMe,MAAM,GAAG,KAAK+nB,MAAL,CAAYjnB,WAAZ,EAAf;AACA,eAAK6vB,KAAL,CAAWv5B,KAAX,CAAiBI,OAAjB,CAAyB,UAACsK,IAAD,EAAU;AAC/B7C,eAAG,CAAC6C,IAAI,CAACuJ,EAAN,CAAH,GAAevJ,IAAI,CAAC3M,IAAL,CAAU2L,WAAV,GAAwBtE,OAAxB,CAAgCwD,MAAhC,KAA2C,CAA1D;AACH,WAFD;AAGA,iBAAOf,GAAP;AACH;;;4BAyBqB;AAClB,iBAAO,UAAA+wB,uBAAA,CAAwBpd,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAxB,CAAP;AACH;AAED;;;;4BACyB;AAAA;;AACrB,iBAAO,KAAK6lE,QAAL,CAAc97E,IAAd,CAAmB,UAACugB,MAAD;AAAA,mBAAYA,MAAM,CAAC9R,EAAP,KAAc,QAAI,CAACutE,aAA/B;AAAA,WAAnB,KAAqE,EAA5E;AACH;;;4BAEe;AACZ,iBAAO,KAAKryD,OAAL,CAAa3pB,IAAb,CAAkB,KAAK+zB,KAAL,CAAWC,WAA7B,CAAP;AACH;;;;;;AAlEL;;;uBAMaomD,2B,EAA2B,2C,EAAA,sC,EAAA,wC,EAAA,4C,EAAA,kC;AAAA,K;;;YAA3BA,2B;AAA2B,6C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,yC;AAAA,e;AAAA,c;AAAA,27B;AAAA;AAAA;ACxBxC;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAsB;AACxC;AAAsB;AAAyE;AAC/F;AAAkB;AAAmC;AACrD;AACI;AACA;AACJ;AACA;AACI;AAuCJ;AACA;AAAoC;AAAA,mBAAS,IAAAkC,gBAAA,EAAT;AAA2B,WAA3B;AAChC;AAMJ;AACA;AACI;AAAoC;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;AAChC;AAMJ;AACJ;AACJ;AACA;AA0BJ;;;;AAlGmB;AACM;AAAA,oDAA4B,WAA5B,EAA4B,UAA5B;AAEH;AAAA;AAEI;AAAA;AACI;AAAA;AACJ;AAAA;AAEA;AAAA;AACA;AAAA;AAMV;AAAA;AAuCA;AAAA;AASI;AAAA;AAQE;AAAA;;;;;;mBDlDN,CAAC,aAAAjlF,8BAAD;;;;;;2BAEH8iF,2B,EAA2B;cANvC,OAAA99B,SAMuC;eAN7B;AACPljD,kBAAQ,EAAE,wBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPsH,oBAAU,EAAE,CAAC,aAAAxsD,8BAAD;AAJL,S;AAM6B,Q;;;;;;;;;;;;;;gBAEnC,OAAAwE;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AE9BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACI;AACJ;;;;;;AAaY;AACI;AAEJ;;;;;;AAF4B;AAAA,yCAAe,QAAf,EAAe,aAAf,EAAe,YAAf,EAAe,2BAAf;;;;;;AAJpC;AACI;AACA;AACI;AAIJ;AACJ;;;;;AANiC;AAAA;AACX;AAAA,gEAAgE,sBAAhE,EAAgE,gBAAhE;;;;;;;;;;;;;AAQtB;AACI;AACI;AACJ;AACA;AAAkB;AAAyC;AAC/D;;;;;AAHkB;AAAA;AAEI;AAAA;;;;QDHbg+E,uB;;;;;AAiDT,uCACYnwD,OADZ,EAEYgwB,sBAFZ,EAGYjwB,IAHZ,EAIYglD,MAJZ,EAKY70B,OALZ,EAK8B;AAAA;;AAAA;;AAE1B;AANQ,iBAAAlwB,OAAA,GAAAA,OAAA;AACA,iBAAAgwB,sBAAA,GAAAA,sBAAA;AACA,iBAAAjwB,IAAA,GAAAA,IAAA;AACA,iBAAAglD,MAAA,GAAAA,MAAA;AACA,iBAAA70B,OAAA,GAAAA,OAAA;AArDZ;;AACgB,iBAAA1uB,MAAA,GAAiB,EAAjB;AAMhB;;AACgB,iBAAAq8B,OAAA,GAAU,IAAI,OAAA3vC,OAAJ,EAAV;AAChB;;AACO,iBAAAic,MAAA,GAAS,SAAK6lB,sBAAL,CAA4BpvB,QAA5B,CAAqCjd,IAArC,CACZ,YAAAjL,GAAA,CAAI,UAACkK,QAAD,EAAc;AACd,cAAI7R,IAAI,GAAoB,EAA5B;AACA6R,kBAAQ,CAAC3R,OAAT,CAAiB,UAACuW,OAAD,EAAUtW,CAAV,EAAgB;AAC7B,gBAAM61B,QAAQ,GAAG,mBAAIvf,OAAO,CAACuf,QAAZ,EACZruB,GADY,CACR,UAAC0xB,KAAD;AAAA,qBAAW,IAAI,cAAApD,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAC1BoD,KAD0B,CAAC,EACtB;AACRtJ,4BAAY,EAAEtZ,OAAO,CAAC3U,IADd;AAER2U,uBAAO,EAAPA;AAFQ,eADsB,CAAlB,CAAX;AAAA,aADQ,CAAjB;;AAMAzW,gBAAI,GAAGA,IAAI,CAAC8xB,MAAL,CAAYkE,QAAZ,CAAP;AACH,WARD;AASAh2B,cAAI,CAACgK,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAAC8lB,YAAF,GAAiB7lB,CAAC,CAAC6lB,YAA7B;AAAA,WAAV;AACA,iBAAO/vB,IAAP;AACH,SAbD,CADY,CAAT;AAgBP;;AACO,iBAAA8hF,eAAA,GAAkB,OAAAlyD,aAAA,CAAc,CAAC,SAAKk9B,OAAN,EAAe,SAAK1zB,MAApB,CAAd,EAA2CxmB,IAA3C,CACrB,YAAAjL,GAAA,CAAI;AAAA;AAAA,cAAE8oB,MAAF;AAAA,cAAU2I,MAAV;;AAAA,iBAAsB,SAAK1wB,MAAL,CAAY0wB,MAAM,IAAI,EAAtB,EAA0B3I,MAAM,IAAI,EAApC,CAAtB;AAAA,SAAJ,CADqB,CAAlB;AAIA,iBAAAsxD,cAAA,GAAkC,EAAlC;AACP;;AACgB,iBAAAznE,OAAA,GAAU,SAAK2kC,sBAAL,CAA4B3kC,OAAtC;AAoBc;AAG7B;AArBD;;;;;mCAuBe;AAAA;;AACX,eAAK2U,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,oBAAI,CAACk/C,sBAAL,CAA4BtM,wBAA5B;;AACA,oBAAI,CAAC9yC,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CACK3uB,MADL,CACY,iBADZ,EAEKuS,IAFL,CAEU,YAAAlK,MAAA,CAAO,UAAC+9B,GAAD;AAAA,qBAAS,CAAC,CAACA,GAAX;AAAA,aAAP,CAFV,EAGK1mC,SAHL,CAGe,YAAM;AACb,sBAAI,CAACk/C,sBAAL,CAA4B7M,OAA5B,CAAoC,QAAI,CAACpjB,IAAL,CAAUrK,QAAV,CAAmB5Q,EAAvD;AACH,aALL,CAFJ;;AASA,oBAAI,CAAClU,YAAL,CACI,QADJ,EAEI,QAAI,CAACiiF,eAAL,CAAqB/hF,SAArB,CAA+B,UAACq5B,MAAD,EAAY;AACvC,sBAAI,CAAC2oD,cAAL,GAAsB3oD,MAAM,CAACpvB,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxC,oBAAMpI,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,sBAAI,EAAEmI,CAAC,CAACwM,OAAF,CAAU3U;AAAjB,iBAAX,EAAmCsB,UAAnC,CAA8C,YAA9C,CAAb;AAEA,uBAAO1B,IAAI,CAAC4I,KAAL,WAAcxI,IAAd,cAAsBmI,CAAC,CAAC+3E,eAAF,CAAkBp6E,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CAAtB,cAAwDqC,CAAC,CAAC+3E,eAAF,CAAkBp6E,KAAlB,CAAwB,CAAC,CAAzB,CAAxD,KAAyFlG,IAAI,CAAC4I,KAAL,WAAcxI,IAAd,cAAsBoI,CAAC,CAAC83E,eAAF,CAAkBp6E,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CAAtB,cAAwDsC,CAAC,CAAC83E,eAAF,CAAkBp6E,KAAlB,CAAwB,CAAC,CAAzB,CAAxD,EAAhG;AACH,eAJqB,CAAtB;AAKF,aANF,CAFJ;;AAUA,oBAAI,CAAC/H,YAAL,CACI,aADJ,EAEI,QAAI,CAACm0E,MAAL,CAAY4G,aAAZ,CAA0B76E,SAA1B,CAAoC,UAACgrC,MAAD,EAAY;AAC5C;AACA,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,MAAX,CAAJ,EAAwB;AACpB,oBAAMiG,OAAO,GAAG9vC,MAAM,CAACvzB,GAAP,CAAW,MAAX,CAAhB;AACA,oBAAMka,OAAO,GAAGpW,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAhB;AACA,oBAAM6sB,eAAe,GAAG9sB,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAxB;AACA;;AACA,oBAAImW,OAAJ,EAAa;AACT,sBAAMjb,OAAO,GAAG,IAAI,cAAAsP,OAAJ,CAAY1b,IAAI,CAACC,KAAL,CAAW89B,eAAX,CAAZ,CAAhB;AACA,sBAAM/O,KAAK,GAAG,IAAI,cAAApD,aAAJ,CAAkB5rB,IAAI,CAACC,KAAL,CAAWonB,OAAX,CAAlB,CAAd;AACA2H,uBAAK,CAAC5iB,OAAN,GAAgBA,OAAhB;;AACA,0BAAI,CAACmrE,gBAAL,CAAsBvoD,KAAtB;;AACA/d,8BAAY,CAACmF,UAAb,CAAwB,sBAAxB;AACAnF,8BAAY,CAACmF,UAAb,CAAwB,wBAAxB;AACH;AACJ;AACJ,aAhBD,CAFJ;;AAoBA,oBAAI,CAACqsC,OAAL,CAAa78C,IAAb,CAAkB,QAAI,CAACwgB,MAAvB;AACH,WA1CD;AA2CH;;;oCAEkBjxB,O,EAAwB;AACvC;AACA,cAAIA,OAAO,CAACixB,MAAR,IAAkBjxB,OAAO,CAACuH,IAA9B,EAAoC;AAChC,iBAAK+lD,OAAL,CAAa78C,IAAb,CAAkB,KAAKwgB,MAAvB;AACH;AACJ;AAED;;;;kCACiBrwB,K,EAAei5B,K,EAAsB;AAClD,iBAAOA,KAAK,GAAGA,KAAK,CAACtlB,EAAT,GAAc3T,KAA1B;AACH;AAED;;;;yCACwBi5B,K,EAAoB;AACxC,eAAK8lB,OAAL,CAAa9lC,IAAb,CAAkB,gCAAAsmE,0BAAlB,EAA8C;AAC1Ct6B,qBAAS,EAAE,MAD+B;AAE1CvE,oBAAQ,EAAE,MAFgC;AAG1C75B,gBAAI,EAAE;AACFoS,mBAAK,EAAEA,KADL;AAEF5iB,qBAAO,EAAE4iB,KAAK,CAAC5iB;AAFb,aAHoC;AAO1CgxC,qBAAS,EAAE,KAP+B;AAQ1CC,yBAAa,EAAE;AAR2B,WAA9C;AAUH;AAED;;;;;;;;+BAKe1nD,I,EAA4C;AAAA;;AAAA,cAArBywB,MAAqB,uEAAJ,EAAI;AACvD,cAAM/nB,MAAM,GAAG+nB,MAAM,CAACjnB,WAAP,EAAf;AACA,iBAAOxJ,IAAI,CAAC0I,MAAL,CAAY,UAAC2wB,KAAD,EAAW;AAC1B,mBACI,CAAC,CAAC,QAAI,CAACtyB,IAAN,IACI,QAAI,CAACA,IAAL,KAAc,QAAd,IAA0BsyB,KAAK,CAAC+K,MADpC,IAEI,QAAI,CAACr9B,IAAL,KAAc,SAAd,IAA2BsyB,KAAK,CAAC8K,OAFtC,KAGA9K,KAAK,CAACv5B,KAAN,CAAYwF,IAAZ,CACI,UAACkF,IAAD;AAAA,qBACIA,IAAI,CAAC3M,IAAL,CAAU2L,WAAV,GAAwBtE,OAAxB,CAAgCwD,MAAhC,KAA2C,CAA3C,IACC8B,IAAI,CAAC1K,KAAL,IACG0K,IAAI,CAAC1K,KAAL,CAAWwF,IAAX,CAAgB,UAACo8E,QAAD,EAAgC;AAC5C,uBACIA,QAAQ,CAAC7jF,IAAT,CAAc2L,WAAd,GAA4BtE,OAA5B,CAAoCwD,MAApC,KAA+C,CAA/C,IACCg5E,QAAQ,CAAC5hF,KAAT,IACG4hF,QAAQ,CAAC5hF,KAAT,CAAewF,IAAf,CAAoB,UAACq8E,YAAD,EAAkB;AAClC,yBACIA,YAAY,CAAC9jF,IAAb,CAAkB2L,WAAlB,GAAgCtE,OAAhC,CAAwCwD,MAAxC,KAAmD,CADvD;AAGH,iBAJD,CAHR;AASH,eAVD,CAHR;AAAA,aADJ,CAJJ;AAqBH,WAtBM,CAAP;AAuBH;;;4BA5HsB;AACnB;AACA,cAAM5G,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,gBAAI,EAAE,KAAKA;AAAZ,WAAX,CAAb;AACA,cAAMylB,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,iBAAO6lB,GAAG,CAAC0W,UAAJ,CAAen8B,IAAf,EAAqB,KAArB,IAA8B,OAA9B,GAAwCA,IAAI,CAACsB,UAAL,CAAgB,aAAhB,CAA/C;AACH;AAED;;;;4BACmB;AACf,iBAAO,KAAK4rB,IAAL,CAAUrK,QAAjB;AACH;;;;MA/CwC,OAAApmB,a;;AAL7C;;;uBAKa6gF,uB,EAAuB,sC,EAAA,4C,EAAA,4C,EAAA,uC,EAAA,kC;AAAA,K;;;YAAvBA,uB;AAAuB,wC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,e;AAAA,a;AAAA,qc;AAAA;AAAA;ACxBpC;;AAGA;AACI;AACA;AAAkB;AAAI;AACtB;AAAsB;AAAQ;AAC9B;AAAkB;AAAI;AACtB;AAAmB;AAAa;AAChC;AAAmB;AAAM;AAC7B;AACA;AACI;AASJ;AACA;;;;;;AAtBoB;AAYF;AAAA,2DAA+C,UAA/C,EAA+C,GAA/C;;;;;;;;;;2BDYLA,uB,EAAuB;cALnC,OAAAx9B,SAKmC;eALzB;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,yBAFN;AAGPC,mBAAS,EAAE,CAAC,yBAAD;AAHJ,S;AAKyB,Q;;;;;;;;;;;;;;gBAE/B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBACA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVI;AACI;AACJ;;;;AADc;AAAA;;;;;;;;;;;;;AAcE;;;;AAEI;;;;;;AAEJ;;;;;;;;AAbZ;AACI;AACI;;AAOI;AAIA;AACA;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAnB;AACJ;AACJ;AACA;AACI;AAGK;AAAI;AAAM;AAAC;AAAO;AAEvB;AACI;AAMA;AAAW;AAAwB;AACvC;AACJ;AACA;AACI;AAAyB;AAAW;AACpC;AACI;AAMJ;AACJ;AACA;AACI;AAAwB;AAAqB;AACzC;AAA6D;AAAO;AAC5E;AACJ;;;;;AAhDM;AAIM;AAAA;AAMI;AAAA;AAGS;AAAA;AAOb;AAAA;;;;;;AArBhB;AACI;AAiDJ;;;;;AAjD6B;AAAA;;;;;;;;AAqDzB;AAA0E;AAAA;AAAA;AAAA;AAAA;AAAmB;AAAM;;;;AAA9C;;;;;;AAKzD;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;QD/CjBm+E,8B;;;;;AAoBT,8CACYhiE,QADZ,EAEY+iE,gBAFZ,EAGY2B,eAHZ,EAIY9iC,OAJZ,EAKYC,WALZ,EAMqCvW,KANrC,EAMqE;AAAA;;AAAA;;AAEjE;AAPQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA+iE,gBAAA,GAAAA,gBAAA;AACA,iBAAA2B,eAAA,GAAAA,eAAA;AACA,iBAAA9iC,OAAA,GAAAA,OAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACyB,iBAAAvW,KAAA,GAAAA,KAAA;AAzBrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAgBV,iBAAAhkB,QAAA,GAAoB,IAApB;AAQ8D;AAGpE;;;;mCAEc;AAAA;;;;AACX,eAAK7d,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtBjgC,gBAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgB,KAAK+d,QAAL,CAAct7C,IAA9B,EAAoC,CAAC,QAAAy9B,UAAA,CAAWC,QAAZ,CAApC,CADgB;AAEtB8G,uBAAW,EAAE,IAAI,QAAAjH,WAAJ,CAAgB,KAAK+d,QAAL,CAAc9W,WAA9B,CAFS;AAGtBW,sBAAU,EAAE,IAAI,QAAA5H,WAAJ,CAAgB,KAAK+d,QAAL,CAAcnW,UAA9B,CAHU;AAItBC,sBAAU,EAAE,IAAI,QAAA7H,WAAJ,CAAgB,KAAK+d,QAAL,CAAclW,UAA9B;AAJU,WAAd,CAAZ;AAOA,eAAKzlB,IAAL,CAAUhG,GAAV,CAAc,YAAd,EAA4B9U,QAA5B,CAAqC,CAAD,KAAC,KAAK8a,IAAL,CAAUhG,GAAV,CAAc,YAAd,EAA4BxS,KAA5B,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,EAAjC,GAAqC,KAA1E;;AAEA,cAAI,CAAC,KAAKm0C,QAAL,CAAcplC,EAAnB,EAAuB;AACnB,iBAAKsnB,QAAL,GAAgB,KAAhB;AACH,WAFD,MAEO;AACH,iBAAK7d,IAAL,CAAU6e,YAAV,CAAuBt8B,SAAvB,CAAiC,UAAA+9E,GAAG,EAAI;AACpC,gDAAehvE,MAAM,CAACpH,IAAP,CAAYo2E,GAAZ,CAAf,sCAAgC;AAA5B,oBAAItgF,GAAG,qBAAP;;AACA,oBAAG,QAAI,CAAC27C,QAAL,CAAc37C,GAAd,MAAuBsgF,GAAG,CAACtgF,GAAD,CAA7B,EAAmC;AAC/B,0BAAI,CAAC69B,QAAL,GAAgB,KAAhB;AACA;AACH;;AACD,wBAAI,CAACA,QAAL,GAAgB,IAAhB;AACH;AACJ,aARD;AASH;AAEJ;;;kCAEe;AAAA;;AACZ,cAAMulB,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC,MAAF,OAAE,CAAF,kBAC5C,kBAAAF,gBAD4C,CAAE,EAC9B;AACnBn+B,gBAAI,EAAE;AACF8F,mBAAK,mBADH;AAEF5T,qBAAO,iGAFL;AAGFD,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eAHJ;AAIFpG,oBAAM,EAAE;AAJN,aADa;AAOnB00C,qBAAS,EAAE,KAPQ;AAQzBC,yBAAa,EAAE;AARU,WAD8B,CAAzC,CAAZ;;AAWA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE3DA,KAAK,CAACwV,MAAN,KAAiB,MAF0C;AAAA;AAAA;AAAA;;AAG3D47B,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB;AACInO,uBAJuD,GAInD,IAJmD;AAAA;AAK3D,6BAAM,KAAKm0E,gBAAL,WAA6B,KAAKnnC,QAAL,CAAcplC,EAA3C,WAAqD,UAACoL,GAAD;AAAA,+BAAShT,CAAC,KAAKgT,GAAf;AAAA,uBAArD,CAAN;;AAL2D;AAM3DyhC,yBAAG,CAACH,KAAJ;;AACA,0BAAI,CAACt0C,CAAL,EAAQ;AACJ,6BAAKoR,QAAL,CAAc9b,GAAd,CAAkB,cAAlB,EAAkC,KAAK03C,QAAL,CAAcplC,EAAhD;;AACA,6BAAKqrC,WAAL,CAAiBqB,KAAjB;AACH;;AAV0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC;AAaH;;;iCAEe;AAAA;;AACZ,eAAKjjC,IAAL,CAAU4mC,gBAAV;AACA;;AACA,cAAI,KAAK5mC,IAAL,CAAUyH,KAAd,EAAqB;AACjB,gBAAMk0B,QAAQ,GAAG,IAAI,cAAAvX,gBAAJ,CAAqB,KAAKuX,QAA1B,CAAjB;AACA,gBAAMlyB,IAAI,GAAG,MAAH,OAAG,CAAH,kBAAQkyB,QAAQ,CAAC17B,MAAT,EAAR,CAAG,EAA2B,KAAKD,IAAL,CAAUxY,KAArC,CAAb;AACA,gBAAMkP,OAAO,GAAGilC,QAAQ,CAACplC,EAAT,GACV,KAAKusE,gBAAL,CAAsBxiE,MAAtB,CAA6Bq7B,QAAQ,CAACplC,EAAtC,EAA0CkT,IAA1C,CADU,GAEV,KAAKq5D,gBAAL,CAAsBn7E,GAAtB,CAA0B8hB,IAA1B,CAFN;AAGA/S,mBAAO,CAAC6J,IAAR,CACI,UAACvT,IAAD,EAAU;AACLA,kBAAY,CAAC1K,KAAb,GAAqBq5C,QAAQ,CAACr5C,KAA9B;;AACD,sBAAI,CAAC0P,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE,MAAV;AAAkBhH,wBAAQ,EAAExT;AAA5B,eAAhB;;AACA,sBAAI,CAAC40C,WAAL,CAAiBqB,KAAjB;AACH,aALL,EAMI,UAACthC,GAAD;AAAA,qBACI,QAAI,CAAC5B,QAAL,CAAcy2B,WAAd,iBACa,QAAI,CAACmF,QAAL,CAAcplC,EAAd,GAAmB,UAAnB,GAAgC,UAD7C,+BAEQoL,GAAG,CAACnG,OAAJ,IAAemG,GAFvB,EADJ;AAAA,aANJ;AAaH;AACJ;AAED;;;;oCACmB3P,K,EAAO;AAAA;;AACtB;AACA,cAAIA,KAAK,IAAIA,KAAK,CAACyE,MAAf,IAAyBzE,KAAK,CAACyE,MAAN,CAAau5C,KAA1C,EAAiD;AAC7C,gBAAMA,KAAK,GAAah+C,KAAK,CAACyE,MAAN,CAAau5C,KAArC;AACA;;AACA,gBAAIA,KAAK,CAACxpD,MAAV,EAAkB;AACd,kBAAMk+E,UAAU,GAAG,IAAIx0B,UAAJ,EAAnB;AACAw0B,wBAAU,CAACh9C,gBAAX,CAA4B,SAA5B,EAAuC,UAAC/4B,CAAD,EAAY;AAC/C,wBAAI,CAACg2E,SAAL,GAAiB,IAAjB;AACA,oBAAMC,WAAW,GAAGj2E,CAAC,CAAC8H,MAAF,CAASwL,MAA7B;AACA,oBAAM4iE,IAAI,GAAGC,QAAQ,CAACC,iBAAT,CAA2BH,WAA3B,EAAwC,WAAxC,CAAb;;AACA,wBAAI,CAACH,eAAL,CAAqBO,MAArB,CAA4B,CAACH,IAAD,CAA5B,EAAoC;AAAEI,2BAAS,EAAEj1B,KAAK,CAAC,CAAD,CAAL,CAAS3vD;AAAtB,iBAApC;;AACA,oBAAM2kF,MAAM,GAAG,QAAI,CAACP,eAAL,CAAqBS,OAArB,CACX,QAAI,CAACT,eAAL,CAAqBS,OAArB,CAA6B1+E,MAA7B,GAAsC,CAD3B,CAAf;;AAGA,wBAAI,CAAC4tB,QAAL,CAAc,QAAd,EAAwB,YAAM;AAC1B;AACA,sBAAI4wD,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAAC1iE,KAA9B,EAAqC;AACjC;AACA,wBAAI0iE,MAAM,CAACI,UAAP,IAAqBJ,MAAM,CAACG,QAAhC,EAA0C;AACtC,8BAAI,CAACnlE,IAAL,CAAUquB,QAAV,CAAmB7I,UAAnB,CAA8BtgC,QAA9B,CAAuC8/E,MAAM,CAACI,UAA9C;AACH;;AACD,4BAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,4BAAI,CAACxkF,aAAL,CAAmB,QAAnB;AACH;AACJ,iBAVD;AAWH,eAnBD;AAoBAukF,wBAAU,CAACW,iBAAX,CAA6Br1B,KAAK,CAAC,CAAD,CAAlC;AACH;AACJ;AACJ;;;4BAlIkB;AACf,iBAAO,KAAK3kB,KAAL,CAAWsQ,QAAlB;AACH;;;4BAEe;AACZ,iBAAO,KAAK37B,IAAL,CAAUquB,QAAV,CAAmB7I,UAAnB,CAA8Bh+B,KAArC;AACH;;;;MAhB+C,OAAAzG,a;;AALpD;;;uBAKaghF,8B,EAA8B,2C,EAAA,kD,EAAA,sC,EAAA,kC,EAAA,qC,EAAA,qBA0B3B,SAAA59B,eA1B2B,C;AA0BZ,K;;;YA1BlB49B,8B;AAA8B,gD;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,k9B;AAAA;AAAA;ACxB3C;AACI;AAAqB;AAA2C;AAChE;AAGJ;AACA;AACI;AAmDJ;AACA;AACI;AACI;AACA;AAAkE;AAAA,mBAAS,IAAAr6B,MAAA,EAAT;AAAiB,WAAjB;AAAmB;AAAI;AAC7F;AACJ;AACA;;;;;;AAhEyB;AAAA;AACoB;AAAA;AAKnC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAsDiB;AAAA;AACY;AAAA;;;;;;;;;;2BDtC1Bq6B,8B,EAA8B;cAL1C,OAAA39B,SAK0C;eALhC;AACPljD,kBAAQ,EAAE,2BADH;AAEPmjD,qBAAW,EAAE,iCAFN;AAGPC,mBAAS,EAAE,CAAC,iCAAD;AAHJ,S;AAKgC,Q;;;;;;;;;;;;;;kBA0BlC,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAxBX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRI;AACI;AACJ;;;;AADc;AAAA;;;;;;;;;;;;;AAcE;;;;AAEI;;;;;;AAEJ;;;;;;AAyCI;AACI;AACJ;;;;;AAFuC;AACnC;AAAA;;;;;;AAiBhB;AACI;AACI;AAA6C;AAAY;AAC7D;AACA;AACI;AAA8C;AAAiB;AACnE;AACA;AACI;AAAwB;AAAU;AAClC;AACI;AAQJ;AACJ;AACJ;;;;;;;;AA7FR;AACI;AACI;AACI;;AAOI;AAIA;AACA;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAnB;AACJ;AACJ;AACA;AACI;AAAkB;AAAe;AACjC;AAAmB;AAAiB;AACxC;AACA;AACI;AAAuD;AAAO;AAClE;AACA;AACI;AAGK;AAAI;AAAM;AAAC;AAAO;AAEvB;AACI;AAMA;AAAW;AAAwB;AACvC;AACJ;AACA;AACI;AAKK;AAAI;AAAM;AAAC;AAAO;AAEvB;AACI;AAKI;AAGJ;AACA;AAAW;AAAgB;AAC/B;AACJ;AACA;AACI;AAAyB;AAAW;AACpC;AACI;AAMJ;AACJ;AACA;AAqBA;AACI;AACK;AAA+D;AAEpE;AACI;AAQJ;AACJ;AACA;AACI;AAAyB;AAAgB;AACzC;AACI;AAQJ;AACJ;AACA;AACI;AAAyB;AAAgB;AACzC;AACI;AAQJ;AACJ;AACJ;AACJ;;;;;AAvIU;AAAA;AAIM;AAAA;AAMI;AAAA;AAGS;AAAA;AAME;AAAA;AAQf;AAAA;AAOI;AAAA;AASJ;AAAA;AAWgB;AAAA;AAaZ;AAAA;AAKE;AAAA;AAuBL;AAAA;;;;;;;;AA4Cb;AAA0E;AAAA;AAAA;AAAA;AAAA;AAAmB;AAAM;;;;AAA9C;;;;;;AAKzD;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;QDpIjBy9B,2B;;;;;AAoCT,2CACYjiE,QADZ,EAEY+iE,gBAFZ,EAGY2B,eAHZ,EAIY9iC,OAJZ,EAKYC,WALZ,EAMqCvW,KANrC,EAMkE;AAAA;;AAAA;;AAE9D;AAPQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA+iE,gBAAA,GAAAA,gBAAA;AACA,iBAAA2B,eAAA,GAAAA,eAAA;AACA,iBAAA9iC,OAAA,GAAAA,OAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACyB,iBAAAvW,KAAA,GAAAA,KAAA;AAzCrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAOjB;;AACgB,iBAAA/U,KAAA,GAAoB,CAChC;AAAEv2B,YAAE,EAAE,SAAN;AAAiBlW,cAAI,EAAE;AAAvB,SADgC,EAEhC;AAAEkW,YAAE,EAAE,QAAN;AAAgBlW,cAAI,EAAE;AAAtB,SAFgC,EAGhC;AAAEkW,YAAE,EAAE,MAAN;AAAclW,cAAI,EAAE;AAApB,SAHgC,CAApB;AAgCkD;AAGjE;AA7BD;;;;;mCA+Be;AACX,cAAM4kC,KAAK,GAAG,KAAK0W,QAAL,CAAc1W,KAA5B;AACA,eAAKjlB,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtBjgC,gBAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgB,KAAK+d,QAAL,CAAct7C,IAA9B,EAAoC,CAAC,QAAAy9B,UAAA,CAAWC,QAAZ,CAApC,CADgB;AAEtB8G,uBAAW,EAAE,IAAI,QAAAjH,WAAJ,CAAgB,KAAK+d,QAAL,CAAc9W,WAA9B,CAFS;AAGtBW,sBAAU,EAAE,IAAI,QAAA5H,WAAJ,CAAgB,KAAK+d,QAAL,CAAcnW,UAA9B,CAHU;AAItBE,yBAAa,EAAE,IAAI,QAAA9H,WAAJ,CAAgB,KAAK+d,QAAL,CAAcjW,aAA9B,EAA6C,CAAC,QAAA5H,UAAA,CAAWC,QAAZ,CAA7C,CAJO;AAKtB,uBAAS,IAAI,QAAAH,WAAJ,CAAgB,KAAK+d,QAAL,eAAyB,KAAzC,CALa;AAMtBrX,uBAAW,EAAE,IAAI,QAAA1G,WAAJ,CAAgB,KAAK+d,QAAL,CAAcrX,WAA9B,CANS;AAOtBU,sBAAU,EAAE,IAAI,QAAApH,WAAJ,CAAgBqH,KAAhB,CAPU;AAQtBE,4BAAgB,EAAE,IAAI,QAAAvH,WAAJ,CAAgB,KAAK+d,QAAL,CAAcxW,gBAA9B,CARI;AAStBC,4BAAgB,EAAE,IAAI,QAAAxH,WAAJ,CAAgB,KAAK+d,QAAL,CAAcvW,gBAA9B,CATI;AAUtBb,yBAAa,EAAE,IAAI,QAAA3G,WAAJ,CAAgB,KAAK+d,QAAL,CAAcpX,aAA9B,CAVO;AAWtBwB,wBAAY,EAAE,IAAI,QAAAnI,WAAJ,CAAgB,KAAK+d,QAAL,CAAc5V,YAA9B;AAXQ,WAAd,CAAZ;AAaH;;;kCAEe;AAAA;;AACZ,cAAMqd,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC,MAAF,OAAE,CAAF,kBAC5C,kBAAAF,gBAD4C,CAAE,EAC9B;AACnBn+B,gBAAI,EAAE;AACF8F,mBAAK,mBAAY,KAAKosB,QAAL,cAAwB,SAAxB,GAAoC,cAAhD,CADH;AAEFhgC,qBAAO,iDACH,KAAKggC,QAAL,cAAwB,SAAxB,GAAoC,cADjC,qDAFL;AAKFjgC,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eALJ;AAMFpG,oBAAM,EAAE;AANN,aADa;AASnB00C,qBAAS,EAAE,KATQ;AAUnBC,yBAAa,EAAE;AAVI,WAD8B,CAAzC,CAAZ;;AAaA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE3DA,KAAK,CAACwV,MAAN,KAAiB,MAF0C;AAAA;AAAA;AAAA;;AAG3D47B,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB,sBACI,KAAK6+B,QAAL,cAAwB,SAAxB,GAAoC,cADxC;AAGIhtC,uBANuD,GAMnD,IANmD;AAAA;AAO3D,6BAAM,KAAKm0E,gBAAL,WAA6B,KAAKnnC,QAAL,CAAcplC,EAA3C,WAAqD,UAACoL,GAAD;AAAA,+BAAShT,CAAC,KAAKgT,GAAf;AAAA,uBAArD,CAAN;;AAP2D;AAQ3DyhC,yBAAG,CAACH,KAAJ;;AACA,0BAAI,CAACt0C,CAAL,EAAQ;AACJ,6BAAKoR,QAAL,CAAc9b,GAAd,CAAkB,cAAlB,EAAkC,KAAK03C,QAAL,CAAcplC,EAAhD;;AACA,6BAAKqrC,WAAL,CAAiBqB,KAAjB;AACH;;AAZ0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC;AAeH;;;iCAEe;AAAA;;AACZ,eAAKjjC,IAAL,CAAU4mC,gBAAV;AACA;;AACA,cAAI,KAAK5mC,IAAL,CAAUyH,KAAd,EAAqB;AACjB,gBAAMgC,IAAI,GAAG,MAAH,OAAG,CAAH,gCACF,KAAKkyB,QAAL,YAAyB,cAAAvX,gBAAzB,GACE,KAAKuX,QAAL,CAAc17B,MAAd,EADF,GAEE,KAAK07B,QAHL,GAIH,KAAK37B,IAAL,CAAUxY,KAJP,CAAG,EAIS;AAClB69B,+BAAiB,EAAE,CAAC,KAAKu9C,MAAL,CAAYrsE,EAAb;AADD,aAJT,CAAb;AAOAkT,gBAAI,CAACwb,KAAL,GAAaxb,IAAI,CAACub,UAAlB;AACA,gBAAMtuB,OAAO,GAAG,KAAKilC,QAAL,CAAcplC,EAAd,GACV,KAAKusE,gBAAL,CAAsBxiE,MAAtB,CAA6B,KAAKq7B,QAAL,CAAcplC,EAA3C,EAA+CkT,IAA/C,CADU,GAEV,KAAKq5D,gBAAL,CAAsBn7E,GAAtB,CAA0B8hB,IAA1B,CAFN;AAGA/S,mBAAO,CAAC6J,IAAR,CACI,UAACvT,IAAD,EAAU;AACLA,kBAAY,CAAC1K,KAAb,GAAqB,QAAI,CAACq5C,QAAL,CAAcr5C,KAAnC;;AACD,sBAAI,CAAC0P,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE,MAAV;AAAkBhH,wBAAQ,EAAE,IAAI,cAAA4jB,gBAAJ,CAAqBp3B,IAArB;AAA5B,eAAhB;;AACA,sBAAI,CAAC40C,WAAL,CAAiBqB,KAAjB;AACH,aALL,EAMI,UAACthC,GAAD;AAAA,qBACI,QAAI,CAAC5B,QAAL,CAAcy2B,WAAd,iBACa,QAAI,CAACmF,QAAL,CAAcplC,EAAd,GAAmB,UAAnB,GAAgC,UAD7C,+BAEQoL,GAAG,CAACnG,OAAJ,IAAemG,GAFvB,EADJ;AAAA,aANJ;AAaH;AACJ;AAED;;;;oCACmB3P,K,EAAO;AAAA;;AACtB;AACA,cAAIA,KAAK,IAAIA,KAAK,CAACyE,MAAf,IAAyBzE,KAAK,CAACyE,MAAN,CAAau5C,KAA1C,EAAiD;AAC7C,gBAAMA,KAAK,GAAah+C,KAAK,CAACyE,MAAN,CAAau5C,KAArC;AACA;;AACA,gBAAIA,KAAK,CAACxpD,MAAV,EAAkB;AACd,kBAAMk+E,UAAU,GAAG,IAAIx0B,UAAJ,EAAnB;AACAw0B,wBAAU,CAACh9C,gBAAX,CAA4B,SAA5B,EAAuC,UAAC/4B,CAAD,EAAY;AAC/C,wBAAI,CAACg2E,SAAL,GAAiB,IAAjB;AACA,oBAAMC,WAAW,GAAGj2E,CAAC,CAAC8H,MAAF,CAASwL,MAA7B;AACA,oBAAM4iE,IAAI,GAAGC,QAAQ,CAACC,iBAAT,CAA2BH,WAA3B,EAAwC,WAAxC,CAAb;;AACA,wBAAI,CAACH,eAAL,CAAqBO,MAArB,CAA4B,CAACH,IAAD,CAA5B,EAAoC;AAAEI,2BAAS,EAAEj1B,KAAK,CAAC,CAAD,CAAL,CAAS3vD;AAAtB,iBAApC;;AACA,oBAAM2kF,MAAM,GAAG,QAAI,CAACP,eAAL,CAAqBS,OAArB,CACX,QAAI,CAACT,eAAL,CAAqBS,OAArB,CAA6B1+E,MAA7B,GAAsC,CAD3B,CAAf;;AAGA,wBAAI,CAAC4tB,QAAL,CAAc,QAAd,EAAwB,YAAM;AAC1B;AACA,sBAAI4wD,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAAC1iE,KAA9B,EAAqC;AACjC;AACA,wBAAI0iE,MAAM,CAACI,UAAP,IAAqBJ,MAAM,CAACG,QAAhC,EAA0C;AACtC,8BAAI,CAACnlE,IAAL,CAAUquB,QAAV,CAAmB7I,UAAnB,CAA8BtgC,QAA9B,CAAuC8/E,MAAM,CAACI,UAA9C;AACH;;AACD,4BAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,4BAAI,CAACxkF,aAAL,CAAmB,QAAnB;AACH;AACJ,iBAVD;AAWH,eAnBD;AAoBAukF,wBAAU,CAACW,iBAAX,CAA6Br1B,KAAK,CAAC,CAAD,CAAlC;AACH;AACJ;AACJ;;;4BA5IkB;AACf,iBAAO,KAAK3kB,KAAL,CAAWvkB,KAAlB;AACH;AAED;;;;4BACiB;AACb,iBAAO,KAAKukB,KAAL,CAAWu3C,MAAlB;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAK5iE,IAAL,CAAUquB,QAAV,CAAmB7I,UAAnB,CAA8Bh+B,KAArC;AACH;AAED;;;;4BACkB;AACd,iBAAO,KAAKwY,IAAL,CAAUquB,QAAV,YAA2B7mC,KAAlC;AACH;;;;MAlC4C,OAAAzG,a;;AALjD;;;uBAKaihF,2B,EAA2B,2C,EAAA,kD,EAAA,sC,EAAA,kC,EAAA,qC,EAAA,qBA0CxB,SAAA79B,eA1CwB,C;AA0CT,K;;;YA1ClB69B,2B;AAA2B,6C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,o3D;AAAA;AAAA;AC3BxC;AACI;AACI;AACJ;AACA;AAGJ;AACA;AACI;AAyIJ;AACA;AACI;AACI;AACA;AAAsD;AAAA,mBAAS,IAAAt6B,MAAA,EAAT;AAAiB,WAAjB;AAAmB;AAAI;AACjF;AACJ;AACA;;;;;;AAvJQ;AAAA;AAEqC;AAAA;AAKnC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AA4I+B;AAAA;AACF;AAAA;;;;;;;;;;2BD3H1Bs6B,2B,EAA2B;cALvC,OAAA59B,SAKuC;eAL7B;AACPljD,kBAAQ,EAAE,wBADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAK6B,Q;;;;;;;;;;;;;;kBA0C/B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAxCX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXI;AACI;AACJ;;;;AADc;AAAA;;;;;;AAwCM;AACI;AACJ;;;;;AAFuC;AACnC;AAAA;;;;;;AArCxB;AACI;AACI;AACI;AAAkB;AAAe;AACjC;AAAmB;AAAiB;AACxC;AACA;AACI;AAGK;AAAI;AAAM;AAAC;AAAO;AAEvB;AACI;AAMA;AAAW;AAAwB;AACvC;AACJ;AACA;AACI;AAKK;AAAI;AAAM;AAAC;AAAO;AAEvB;AACI;AAKI;AAGJ;AACA;AAAW;AAAgB;AAC/B;AACJ;AACA;AACI;AAAyB;AAAW;AACpC;AACI;AAMJ;AACJ;AACA;AACI;AAAqB;AAAmB;AACxC;AACI;AAMJ;AACJ;AACA;AACI;AAA6C;AAAY;AAC7D;AACA;AACI;AAA8C;AAAiB;AACnE;AACA;AACI;AAA4B;AAAc;AAC1C;AACI;AAQJ;AACJ;AACA;AACI;AAAwB;AAAU;AAClC;AACI;AAQJ;AACJ;AACA;AACI;AAAyB;AAAgB;AACzC;AACI;AAQJ;AACJ;AACA;AACI;AAAyB;AAAgB;AACzC;AACI;AAQJ;AACJ;AACJ;AACJ;;;;;AA3HU;AAAA;AAGqB;AAAA;AAKf;AAAA;AAgBA;AAAA;AAWgB;AAAA;;;;;;;;AA4F5B;AAAsE;AAAA;AAAA;AAAA;AAAA;AAAmB;AAAM;;;;AAA9C;;;;;;AAKrD;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;QDxHjB09B,0B;;;;;AAyBT,0CACYliE,QADZ,EAEY8iE,WAFZ,EAGYlhC,OAHZ,EAIYC,WAJZ,EAKqCvW,KALrC,EAKiE;AAAA;;AAAA;;AAE7D;AANQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA8iE,WAAA,GAAAA,WAAA;AACA,iBAAAlhC,OAAA,GAAAA,OAAA;AACA,iBAAAC,WAAA,GAAAA,WAAA;AACyB,iBAAAvW,KAAA,GAAAA,KAAA;AA7BrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAOjB;;AACgB,iBAAA/U,KAAA,GAAoB,CAChC;AAAEv2B,YAAE,EAAE,SAAN;AAAiBlW,cAAI,EAAE;AAAvB,SADgC,EAEhC;AAAEkW,YAAE,EAAE,QAAN;AAAgBlW,cAAI,EAAE;AAAtB,SAFgC,CAApB;AAoBiD;AAGhE;AAlBD;;;;;mCAoBe;AACX,cAAM4kC,KAAK,GAAG,KAAKj4B,IAAL,CAAUi4B,KAAxB;AACA,eAAKjlB,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtBjgC,gBAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgB,KAAK5wB,IAAL,CAAU3M,IAA1B,EAAgC,CAAC,QAAAy9B,UAAA,CAAWC,QAAZ,CAAhC,CADgB;AAEtB8G,uBAAW,EAAE,IAAI,QAAAjH,WAAJ,CAAgB,KAAK5wB,IAAL,CAAU63B,WAA1B,CAFS;AAGtBa,yBAAa,EAAE,IAAI,QAAA9H,WAAJ,CAAgB,KAAK5wB,IAAL,CAAU04B,aAA1B,EAAyC,CAAC,QAAA5H,UAAA,CAAWC,QAAZ,CAAzC,CAHO;AAItBmH,yBAAa,EAAE,IAAI,QAAAtH,WAAJ,CAAgB,KAAK5wB,IAAL,CAAUk4B,aAA1B,CAJO;AAKtBF,sBAAU,EAAE,IAAI,QAAApH,WAAJ,CAAgBqH,KAAhB,CALU;AAMtBE,4BAAgB,EAAE,IAAI,QAAAvH,WAAJ,CAAgB,KAAK5wB,IAAL,CAAUm4B,gBAA1B,CANI;AAOtBC,4BAAgB,EAAE,IAAI,QAAAxH,WAAJ,CAAgB,KAAK5wB,IAAL,CAAUo4B,gBAA1B,CAPI;AAQtBb,yBAAa,EAAE,IAAI,QAAA3G,WAAJ,CAAgB,KAAK5wB,IAAL,CAAUu3B,aAA1B,CARO;AAStBwB,wBAAY,EAAE,IAAI,QAAAnI,WAAJ,CAAgB,KAAK5wB,IAAL,CAAU+4B,YAA1B,CATQ;AAUtBH,mBAAO,EAAE,IAAI,QAAAhI,WAAJ,CAAgB,KAAK5wB,IAAL,CAAU44B,OAA1B,CAVa;AAWtBP,6BAAiB,EAAE,IAAI,QAAAzH,WAAJ,CAAgB,CAAC,KAAKyN,KAAL,CAAWu3C,MAAX,CAAkBrsE,EAAnB,CAAhB;AAXG,WAAd,CAAZ;AAaH;;;kCAEe;AAAA;;AACZ,cAAM6sC,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC,MAAF,OAAE,CAAF,kBAC5C,kBAAAF,gBAD4C,CAAE,EAC9B;AACnBn+B,gBAAI,EAAE;AACF8F,mBAAK,eADH;AAEF5T,qBAAO,8CAFL;AAGFD,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eAHJ;AAIFpG,oBAAM,EAAE;AAJN,aADa;AAOnB00C,qBAAS,EAAE,KAPQ;AAQnBC,yBAAa,EAAE;AARI,WAD8B,CAAzC,CAAZ;;AAWA9G,aAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAAOyP,KAAP;AAAA,mBAA8B,OAAD,UAAC,CAAD,QAAC,EAAD,MAAC,EAAD,MAAC,uCAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE3DA,KAAK,CAACwV,MAAN,KAAiB,MAF0C;AAAA;AAAA;AAAA;;AAG3D47B,yBAAG,CAACM,iBAAJ,CAAsB5mC,OAAtB;AACInO,uBAJuD,GAInD,IAJmD;AAAA;AAK3D,6BAAM,KAAKk0E,WAAL,WAAwB,KAAK71E,IAAL,CAAUuJ,EAAlC,WAA4C,UAACoL,GAAD;AAAA,+BAAShT,CAAC,KAAKgT,GAAf;AAAA,uBAA5C,CAAN;;AAL2D;AAM3DyhC,yBAAG,CAACH,KAAJ;;AACA,0BAAI,CAACt0C,CAAL,EAAQ;AACJ,6BAAKoR,QAAL,CAAc9b,GAAd,CAAkB,cAAlB,EAAkC,KAAK+I,IAAL,CAAUuJ,EAA5C;;AACA,6BAAKqrC,WAAL,CAAiBqB,KAAjB;AACH;;AAV0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAC,EAA9B;AAAA,WAAtC;AAaH;;;iCAEe;AAAA;;AACZ,eAAKjjC,IAAL,CAAU4mC,gBAAV;AACA;;AACA,cAAI,KAAK5mC,IAAL,CAAUyH,KAAd,EAAqB;AACjB,gBAAMgC,IAAI,GAAG,cAAAud,6BAAA,CAA8B,KAAKh6B,IAAnC,EAAyC,KAAKgT,IAAL,CAAUxY,KAAnD,EAA0DyY,MAA1D,EAAb;AACA,gBAAMvJ,OAAO,GAAG,KAAK1J,IAAL,CAAUuJ,EAAV,GACV,KAAKssE,WAAL,CAAiBviE,MAAjB,CAAwB,KAAKtT,IAAL,CAAUuJ,EAAlC,EAAsCkT,IAAtC,CADU,GAEV,KAAKo5D,WAAL,CAAiBl7E,GAAjB,CAAqB8hB,IAArB,CAFN;AAGA/S,mBAAO,CAAC6J,IAAR,CACI,UAACvT,IAAD,EAAU;AACN,sBAAI,CAACgF,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,sBAAM,EAAE,MAAV;AAAkBhH,wBAAQ,EAAExT;AAA5B,eAAhB;;AACA,sBAAI,CAAC40C,WAAL,CAAiBqB,KAAjB;AACH,aAJL,EAKI,UAACthC,GAAD;AAAA,qBACI,QAAI,CAAC5B,QAAL,CAAcy2B,WAAd,iBACa,QAAI,CAACxpC,IAAL,CAAUuJ,EAAV,GAAe,UAAf,GAA4B,UADzC,2BAEQoL,GAAG,CAACnG,OAAJ,IAAemG,GAFvB,EADJ;AAAA,aALJ;AAYH;AACJ;;;4BApFc;AACX,iBAAO,KAAK0pB,KAAL,CAAWr+B,IAAlB;AACH;AAED;;;;4BACiB;AACb,iBAAO,KAAKq+B,KAAL,CAAWu3C,MAAlB;AACH;;;;MAvB2C,OAAA7hF,a;;AALhD;;;uBAKakhF,0B,EAA0B,2C,EAAA,6C,EAAA,kC,EAAA,qC,EAAA,qBA8BvB,SAAA99B,eA9BuB,C;AA8BR,K;;;YA9BlB89B,0B;AAA0B,4C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,s3D;AAAA;AAAA;ACzBvC;AACI;AAAqB;AAA4C;AACjE;AAGJ;AACA;AACI;AA6HJ;AACA;AACI;AACI;AACA;AAAsD;AAAA,mBAAS,IAAAv6B,MAAA,EAAT;AAAiB,WAAjB;AAAmB;AAAI;AACjF;AACJ;AACA;;;;;;AA1IyB;AAAA;AACoB;AAAA;AAKnC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAgI+B;AAAA;AACF;AAAA;;;;;;;;;2BD/G1Bu6B,0B,EAA0B;cALtC,OAAA79B,SAKsC;eAL5B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD;AAHJ,S;AAK4B,Q;;;;;;;;;;;;kBA8B9B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBA5BX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE3BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOa89B,4B;;;;;;;;AAqBT;uCACsB;AAClBvkE,sBAAY,CAACkvB,OAAb,CAAqB,wBAArB,EAA+CngC,IAAI,CAACE,SAAL,CAAe,KAAKkM,OAAL,CAAagH,MAAb,EAAf,CAA/C;AACAnC,sBAAY,CAACkvB,OAAb,CAAqB,8BAArB,EAAqDngC,IAAI,CAACE,SAAL,CAAe,KAAKia,KAAL,CAAW/G,MAAX,EAAf,CAArD;AACAnC,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C,KAAK/zB,OAAL,CAAa/J,WAAb,CAAyBjB,EAAnE;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C,KAAK/zB,OAAL,CAAa/J,WAAb,CAAyBmb,WAAvE;AACH;;;4BArBqB;AAClB,iBAAO,UAAA6Q,uBAAA,CAAwBpd,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAxB,CAAP;AACH;AAED;;;;4BACqC;AACjC,cAAM+4C,IAAI,GAAG,KAAK79C,OAAL,CAAa/J,WAAb,CAAyB/J,QAAzB,CAAkC;AAACJ,mBAAO,EAAE,KAAKkU,OAAL,CAAa5T;AAAvB,WAAlC,CAAb;AACA,2BAAU,KAAKqrB,UAAf,gBAA+BomC,IAAI,CAAClxD,UAAL,CAAgB,QAAhB,CAA/B;AACH;AAED;;;;4BACwB;AACpB,2BAAU,KAAKqT,OAAL,CAAa/J,WAAb,CAAyBtJ,UAAzB,CAAoC,QAApC,CAAV;AACH;;;;;;AAxBL;;;uBAKay8E,4B;AAA4B,K;;;YAA5BA,4B;AAA4B,4C;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,gZ;AAAA;AAAA;ACVzC;AACI;AACJ;AACA;AACI;AACI;AAAkB;AAAK;AACvB;AACI;AACJ;AACJ;AACA;AACI;AAAmB;AAAK;AACxB;AACI;AACJ;AACJ;AACA;AACI;AAAoB;AAAO;AAC3B;AACI;AACJ;AACJ;AACA;AACI;AAAuB;AAAU;AACjC;AACI;AACJ;AACJ;AACJ;AACA;AAOI;AAAA,mBAAS,IAAAiD,YAAA,EAAT;AAAuB,WAAvB;AAGA;AACJ;;;;AAjCY;AAAA;AAMA;AAAA;AAMA;AAAA;AAMA;AAAA;AASR;AAAA,iHAA6C,aAA7C,EAA6C,uDAA7C;;;;;;;;;2BDxBSjD,4B,EAA4B;cALxC,OAAAj+B,SAKwC;eAL9B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD;AAHJ,S;AAK8B,Q;;gBAEpC,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdL;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQgC;AACI;AAAkB;AAAuB;AAC7C;;;;;AADsB;AAAA;;;;;;AAF1B;AACI;AAGJ;;;;;AAH0B;AAAA;;;;;;AAF9B;AACI;AAKJ;;;;;AALkB;AAAA;;;;;;AAHtB;AACI;AAAkB;AAAmB;AACrC;AAOJ;;;;;AARsB;AAAA;AACJ;AAAA;;;;;;AAHtB;AACI;AAUJ;;;;;AAV0B;AAAA;;;;;;AAF9B;AACI;AAYJ;;;;;AAZkB;AAAA;;;;;;AANtB;AACI;AACI;AAAkB;AAAe;AACjC;AAAoB;AAAkB;AAC1C;AACA;AAcJ;;;;;AAjB0B;AAAA;AACE;AAAA;AAEV;AAAA;;;;;;AANtB;AACI;AAoBJ;;;;;AApBsB;AAAA;;;;;;AAF1B;AACI;AAsBJ;;;;;;;;AAtBkB;AAAA,mFAAwD,UAAxD,EAAwD,GAAxD;;;;;;;;;;;;AAyBV;AASI;AAAA;AAAA;AAAA,+EAAwD,KAAxD;AAA6D,SAA7D;AACH;;;;;AARG,uFAA8B,OAA9B,EAA8B,aAA9B,EAA8B,QAA9B,EAA8B,2BAA9B,EAA8B,UAA9B,EAA8B,wBAA9B,EAA8B,SAA9B,EAA8B,uBAA9B,EAA8B,cAA9B,EAA8B,IAA9B,EAA8B,SAA9B,EAA8B,IAA9B;;;;;;AAHR;AACI;AAWJ;;;;;;;;AAVQ;AAAA,+CAAiC,UAAjC,EAAiC,GAAjC;;;;;;;;AAYZ;AAA+D;AAAA;AAAA;AAAA;AAAA;AAC3D;AACJ;;;;;;;;;;;;;AAEI;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;;;;AALkB;AAAA;;;;;;AAQlB;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;;;;QDhDSw+E,0B;;;;;AAeT,0CACYriE,QADZ,EAEY+R,SAFZ,EAGY2vB,sBAHZ,EAGuD;AAAA;;AAAA;;AACnD;AAHQ,iBAAA1hC,QAAA,GAAAA,QAAA;AACA,iBAAA+R,SAAA,GAAAA,SAAA;AACA,iBAAA2vB,sBAAA,GAAAA,sBAAA;AAA2C;AAEtD;AAVD;;;;;oCAYmB;AACf,eAAK8jC,OAAL,GAAe,IAAf;AACH;AAED;;;;yCAC8B1pD,K,EAAsB;;;;;;;;;yBAE5CA,K;;;;;AACMD,0B,sBAAa,KAAK3iB,OAAL,CAAauf,Q;AAC1B51B,yB,GAAQg5B,MAAM,CAACgV,SAAP,CAAiB,UAAC++B,QAAD;AAAA,6BAAc9zC,KAAK,CAACtlB,EAAN,KAAao5D,QAAQ,CAACp5D,EAApC;AAAA,qBAAjB,C;;AACd,wBAAI3T,KAAK,GAAG,CAAZ,EAAe;AACXg5B,4BAAM,CAACzvB,IAAP,CAAY0vB,KAAZ;AACH,qBAFD,MAEO;AACHD,4BAAM,CAAC7qB,MAAP,CAAcnO,KAAd,EAAqB,CAArB,EAAwBi5B,KAAxB;AACH;;AACD,yBAAK/e,OAAL,GAAe,IAAf;AACM2+D,+B,GAAc,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,KAAKtP,OAAL,CAAagH,MAAb,EAAN,CAAC,EAA0B;AAAEuY,8BAAQ,EAAEoD;AAAZ,qBAA1B,CAAZ,C;;AACJ,2BAAM,KAAK9J,SAAL,CACjB8lB,IADiB,CACZ6jC,WADY,WAEX,UAAC95D,GAAD;AAAA,6BACH,QAAI,CAAC5B,QAAL,CAAcy2B,WAAd,gDAC4C70B,GAAG,CAACnG,OAAJ,IAAemG,GAD3D,EADG;AAAA,qBAFW,CAAN;;;AAAV1I,2B;;AAON,wBAAIA,OAAJ,EAAa;AACT,2BAAKwoC,sBAAL,CAA4Bl0C,OAA5B,CAAoC0L,OAApC;;AACA,2BAAKA,OAAL,GAAeA,OAAf;AACA,2BAAK4iB,KAAL,GAAaA,KAAb;AACA,2BAAK0pD,OAAL,GAAe,KAAf;AACH;;AACD,yBAAKzoE,OAAL,GAAe,KAAf;;;;;;;;;AAEP;;;4BA3Ce;AACZ,iBAAO,KAAK+e,KAAL,CAAWv5B,KAAlB;AACH;;;;MAb2C,OAAAvB,a;;AALhD;;;uBAKaqhF,0B,EAA0B,2C,EAAA,wC,EAAA,4C;AAAA,K;;;YAA1BA,0B;AAA0B,0C;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,00B;AAAA;AAAA;ACfvC;AACI;AACJ;AACA;AAwBA;AAeA;AAGA;AAUA;;;;;;AAtDI;AAAA;AAEwB;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAuCO;AAAA;;;;;;;;;2BD3BtBA,0B,EAA0B;cALtC,OAAAh+B,SAKsC;eAL5B;AACPljD,kBAAQ,EAAE,qBADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD;AAHJ,S;AAK4B,Q;;;;;;;;;;gBAElC,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBL;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJQ;AACI;AAAkB;AAAkB;AACpC;AACI;AAAoB;AAAiB;AACrC;AACA;AAAkB;AAAe;AACrC;AACJ;;;;;AANsB;AAAA;AAEM;AAAA;AAEF;AAAA;;;;;;AAN9B;AACI;AAQJ;;;;;AARsB;AAAA;;;;;;AAiBtB;AACI;AACJ;;;;;;;;;;;;;AAGA;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;;;;AALkB;AAAA;;;;;;;;;;;QDbT0+E,0B;AA6BT,0CACYviE,QADZ,EAEY+R,SAFZ,EAGY6/C,cAHZ,EAIY9lC,MAJZ,EAIgC;AAAA;;AAHpB,aAAA9rB,QAAA,GAAAA,QAAA;AACA,aAAA+R,SAAA,GAAAA,SAAA;AACA,aAAA6/C,cAAA,GAAAA,cAAA;AACA,aAAA9lC,MAAA,GAAAA,MAAA;AA5BZ;;AACiB,aAAA80C,aAAA,GAAgB,IAAI,OAAA9+B,YAAJ,EAAhB;AA4Bb;AAtBJ;;;;;mCAwBQ,CAAW;AAEnB;;;;;;kCAGuB;;;;;;;;;0BAEf,KAAK5oC,OAAL,IAAgB,KAAKusE,Q;;;;;AACf/oE,wB,GAAO,KAAKovB,MAAL,CAAYlO,O;AACnBvG,yB,GAAQ,KAAKne,OAAL,CAAame,K;AACrBrN,uB,GAAM,IAAI,UAAAvU,MAAJ,CAAW;AAAElR,0BAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EAAR;AAAoBK,iCAAW,EAAE,KAAjC;AAAwCC,iCAAW,EAAE,KAAKpR,OAAL,CAAa/P;AAAlE,qBAAX,C;AACN5E,wB,GAAOylB,GAAG,CAAC/b,YAAJ,CAAiB,QAAjB,C;AACP84C,6B,gCACC1vB,K,IACH;AACI7tB,0BAAI,EAAE,kBADV;AAEIjF,0BAAI,EAAEA,IAAI,CAAC2J,EAFf;AAGIwrB,4BAAM,EAAEhd,IAAI,CAACpc,IAHjB;AAIIolF,8BAAQ,EAAE,KAAK5pD,KAAL,CAAWtlB,EAJzB;AAKIyQ,2BAAK,EAAE,KAAK6U,KAAL,CAAWC,WALtB;AAMItgB,6BAAO,EAAE,KAAKgqE,QANlB;AAOI13E,0BAAI,EAAExJ,IAAI,CAACsB,UAAL,CAAgB,OAAhB;AAPV,qB;AAUE8/E,mC,GAAkB,IAAI,cAAAn9D,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,KAAKtP,OAAL,CAAagH,MAAb,EAAN,CAAC,EAA0B;AAAEmX,2BAAK,EAAE0vB;AAAT,qBAA1B,CAAZ,C;AACxB,yBAAKhqC,OAAL,GAAe,IAAf;;AAC8B,2BAAM,KAAKgV,SAAL,CAC/B8lB,IAD+B,CAC1B8tC,eAD0B,WAEzB,UAAC/jE,GAAD,EAAS;AACZ,8BAAI,CAAC5B,QAAL,CAAcy2B,WAAd,uDACmD70B,GAAG,CAACnG,OAAJ,IAAemG,GADlE;;AAGA,8BAAI,CAAC7E,OAAL,GAAe,KAAf;AACA,4BAAM6E,GAAN;AACH,qBAR+B,CAAN;;;AAAxB85D,+B;AASN,yBAAKxiE,OAAL,GAAewiE,WAAf;;AACA,wBAAIA,WAAJ,EAAiB;AACb,2BAAK9J,cAAL,CAAoBpkE,OAApB,CAA4BkuE,WAA5B;AACH;;AACD,yBAAK5/C,KAAL,CAAW5iB,OAAX,GAAqBwiE,WAArB;AACA,yBAAKkF,aAAL,CAAmB59B,IAAnB,CAAwB04B,WAAxB;AACA,yBAAK3+D,OAAL,GAAe,KAAf;AACA,yBAAK0oE,QAAL,GAAgB,EAAhB;;;;;;;;;AAEP;;;4BAnEe;AAAA;;AACZ,cAAMpuD,KAAK,GAAG,KAAKne,OAAL,CAAame,KAAb,CAAmBlsB,MAAnB,CAA0B,UAAC0uB,IAAD,EAAU;AAC9C,mBACI,CAACA,IAAI,CAACrwB,IAAL,KAAc,UAAd,IAA4BqwB,IAAI,CAACrwB,IAAL,KAAc,kBAA3C,KACAqwB,IAAI,CAAC5S,KAAL,KAAe,QAAI,CAAC6U,KAAL,CAAWC,WAD1B,KAEC,CAAClC,IAAI,CAAC6rD,QAAN,IAAkB7rD,IAAI,CAAC6rD,QAAL,KAAkB,QAAI,CAAC5pD,KAAL,CAAWtlB,EAFhD,CADJ;AAKH,WANa,CAAd;AAOA6gB,eAAK,CAAC10B,OAAN,CAAc,UAACk3B,IAAD,EAAU;AACpB;AACA,gBAAMt1B,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAClR,kBAAI,EAAEs1B,IAAI,CAACt1B,IAAZ;AAAkB8lB,yBAAW,EAAE,KAA/B;AAAsCC,yBAAW,EAAE,QAAI,CAACpR,OAAL,CAAa/P;AAAhE,aAAX,CAAb;AACA0wB,gBAAI,CAAC9rB,IAAL,GAAYxJ,IAAI,CAACsB,UAAL,CAAgB,eAAhB,CAAZ;AACH,WAJD;AAKA,iBAAOwxB,KAAP;AACH;;;;;;AAhCL;;;uBAKakrD,0B,EAA0B,2C,EAAA,wC,EAAA,4C,EAAA,qC;AAAA,K;;;YAA1BA,0B;AAA0B,0C;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,ilB;AAAA;AAAA;AChBvC;AACI;AACJ;AACA;AACI;AAUJ;AACA;AACI;AACI;AAAgB;AAAA;AAAA,aAAsB,aAAtB,EAAsB;AAAA,mBAAqE,IAAAqD,OAAA,EAArE;AAA8E,WAApG;AAAhB;AACA;AAAoF;AAAA,mBAAS,IAAAA,OAAA,EAAT;AAAkB,WAAlB;AAChF;AACJ;AACJ;AACA;AAGJ;AACA;;;;;;AAtBkB;AAAA,+DAA+C,UAA/C,EAA+C,GAA/C;AAaM;AAAA,iDAAsB,UAAtB,EAAsB,WAAtB;AACkC;AAAA;AACpC;AAAA;AAGS;AAAA;;;;;;;;;2BDNlBrD,0B,EAA0B;cALtC,OAAAl+B,SAKsC;eAL5B;AACPljD,kBAAQ,EAAE,qBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAK4B,Q;;;;;;;;;;;;gBAElC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcwC;;;;;AAA2B;;;;;;AAC3B;;;;;;AAMhB;AACI;AACI;AAAkB;AAAiB;AACnC;AACJ;AACJ;;;;;AAL4C;AAElB;AAAA;AACE;AAAA;;;;;;;;AA7BpC;AAKI;AAEI;AAAA;AAAA;AAAA;AAAA,WAAyB,aAAzB,EAAyB;AAAA;AAAA;AAAA;AAAA,SAAzB;AAKA;AACI;AACI;AACI;AAII;AACA;AACJ;AACJ;AACA;AAAkB;AAA0B;AAChD;AACJ;AACA;AAMJ;AACJ;;;;;AA1BQ;AAAA,qDAAyB,UAAzB,EAAyB,cAAzB;AAUgB;AAAA;AAEU;AAAA;AACG;AAAA;AAGH;AAAA;AAGd;AAAA;;;;;;;;;;;;QDPvB49B,0B;;;;;AA6DT,0CACYpiE,QADZ,EAEY0R,OAFZ,EAGYK,SAHZ,EAIY2vB,sBAJZ,EAKqCpW,KALrC,EAKiE;AAAA;;AAAA;;AAE7D;AANQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAK,SAAA,GAAAA,SAAA;AACA,iBAAA2vB,sBAAA,GAAAA,sBAAA;AACyB,iBAAApW,KAAA,GAAAA,KAAA;AAjErC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAKjB;;AACO,iBAAA+hC,QAAA,GAAuB,CAC1B;AAAErtE,YAAE,EAAE,UAAN;AAAkBlW,cAAI,EAAE,UAAxB;AAAoCqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAA1C;AAAwEmoE,gBAAM,EAAE;AAAhF,SAD0B,EAE1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAF0B,EAQ1B;AAAEttE,YAAE,EAAE,OAAN;AAAelW,cAAI,EAAE,OAArB;AAA8Bqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAApC;AAA+DmoE,gBAAM,EAAE;AAAvE,SAR0B,EAS1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAT0B,EAe1B;AACIttE,YAAE,EAAE,WADR;AAEIlW,cAAI,EAAE,WAFV;AAGIqb,cAAI,EAAE;AAAE,qBAAO;AAAT,WAHV;AAIImoE,gBAAM,EAAE;AAJZ,SAf0B,CAAvB;AA0D0D;AAGhE;AArCD;;;;;mCAuCe;AACX,eAAKC,aAAL,GAAqB,KAAKz4C,KAAL,CAAWxP,KAAX,CAAiBxT,MAAtC;AACA,eAAKpP,OAAL,GAAe,IAAI,cAAAsP,OAAJ,CAAY,KAAK8iB,KAAL,CAAWpyB,OAAvB,CAAf;AACH;AAED;;;;uCACyB;;;;;;;;;AACfA,2B,GAAU,KAAKoyB,KAAL,CAAWpyB,O;AAC3B;;yBACIA,O;;;;;AACA,yBAAK6D,OAAL,GAAe,IAAf;AACM0b,4B,sBAAevf,OAAO,CAACuf,Q;AAC7BA,4BAAQ,CAACznB,MAAT,CACIynB,QAAQ,CAACoY,SAAT,CAAmB,UAAC/U,KAAD;AAAA,6BAAWA,KAAK,CAACtlB,EAAN,KAAa,QAAI,CAAC80B,KAAL,CAAWxP,KAAX,CAAiBtlB,EAAzC;AAAA,qBAAnB,CADJ,EAEI,CAFJ,EAGI,IAAI,cAAAkiB,aAAJ,CAAkB,MAAD,OAAC,CAAD,kBAAM,KAAK4S,KAAL,CAAWxP,KAAjB,CAAC,EAAqB;AAAExT,4BAAM,EAAE,KAAKy7D;AAAf,qBAArB,CAAlB,CAHJ;AAKMrI,+B,GAAc,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAMtP,OAAO,CAACgH,MAAR,EAAN,CAAC,EAAqB;AAAEuY,8BAAQ,EAARA;AAAF,qBAArB,CAAZ,C;;AACS,2BAAM,KAAK1G,SAAL,CAAe8lB,IAAf,CAAoB6jC,WAApB,WAAuC,UAAC95D,GAAD,EAAS;AAC/E,8BAAI,CAAC5B,QAAL,CAAcy2B,WAAd,+CAC2C70B,GAAG,CAACnG,OAAJ,IAAemG,GAD1D;;AAGA,8BAAI,CAACmiE,aAAL,GAAqB,QAAI,CAACz4C,KAAL,CAAWxP,KAAX,CAAiBxT,MAAtC;AACH,qBALkC,CAAN;;;AAAvB47D,mC;;AAMN,wBAAIA,eAAJ,EAAqB;AACjB,2BAAKxiC,sBAAL,CAA4Bl0C,OAA5B,CAAoC02E,eAApC;;AACA,2BAAKhrE,OAAL,GAAegrE,eAAf;AACH;;AACD,yBAAKnnE,OAAL,GAAe,KAAf;;;;;;;;;AAGP;;;4BArEe;AACZ,iBAAO,KAAKuuB,KAAL,CAAWxP,KAAlB;AACH;AAED;;;;4BACyB;AAAA;;AACrB,iBAAO,KAAK+nD,QAAL,CAAc97E,IAAd,CAAmB,UAACugB,MAAD;AAAA,mBAAYA,MAAM,CAAC9R,EAAP,KAAc,QAAI,CAACutE,aAA/B;AAAA,WAAnB,CAAP;AACH;AAED;;;;4BACgB;AACZ,iBAAO,KAAKryD,OAAL,CAAa3pB,IAAb,CAAkB,KAAKujC,KAAL,CAAWxP,KAAX,CAAiBC,WAAnC,CAAP;AACH;AAED;;;;4BACwB;AACpB,iBAAO,KAAK7iB,OAAL,CAAa/J,WAAb,CAAyB/J,QAAzB,CAAkC;AAAEJ,mBAAO,EAAE,KAAKsmC,KAAL,CAAWxP,KAAX,CAAiBZ;AAA5B,WAAlC,CAAP;AACH;AAED;;;;4BACsB;AAClB,iBAAO,KAAKhiB,OAAL,CAAa/J,WAAb,CAAyB/J,QAAzB,CAAkC;AAAEJ,mBAAO,EAAE,KAAKsmC,KAAL,CAAWxP,KAAX,CAAiBZ;AAA5B,WAAlC,EAA+Er1B,UAA/E,CAA0F,QAA1F,CAAP;AACH;;;4BAEqB;AAClB,iBAAO,UAAAs1B,uBAAA,CAAwBpd,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAxB,CAAP;AACH;;;;MA3D2C,OAAAhd,a;;AALhD;;;uBAKaohF,0B,EAA0B,2C,EAAA,sC,EAAA,wC,EAAA,4C,EAAA,qBAkEvB,SAAAh+B,eAlEuB,C;AAkER,K;;;YAlElBg+B,0B;AAA0B,4C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,mrB;AAAA;AAAA;AC1BvC;AACI;AACI;AACI;AACA;AAAsB;AAA+C;AACrE;AAAkB;;AAA0F;AAC5G;AACI;AAkCJ;AACJ;AACA;AACI;AACI;AACJ;AACA;AACI;AACJ;AACA;AACI;AAAqB;AAAA;AAAA;AAAsC;AAC/D;AACJ;AACA;AACI;AACJ;AACJ;AACJ;;;;AAtDkC;AAAA;AACJ;AAAA;AAKV;AAAA;AAmCmB;AAAA,4CAAe,SAAf,EAAe,WAAf;AAGF;AAAA,gDAAmB,OAAnB,EAAmB,SAAnB;AAGA;AAAA,gDAAqB,OAArB,EAAqB,SAArB;AAIf;AAAA;;;;;;;;;;2BD7BTA,0B,EAA0B;cALtC,OAAA/9B,SAKsC;eAL5B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,sCAFN;AAGPC,mBAAS,EAAE,CAAC,sCAAD;AAHJ,S;AAK4B,Q;;;;;;;;;;;;kBAkE9B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBAhEX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AE7BL;AAAA;AAAA;;;;;;QAOaqhC,Y,GAET,wBAAc;AAAA;AAAE,K;;AAPpB;;;uBAKaA,Y;AAAY,K;;;YAAZA,Y;AAAY,oC;AAAA,e;AAAA,a;AAAA,6J;AAAA;AAAA;ACPzB;AACI;AACA;AAAI;AAAmD;AACvD;AAAG;AAAO;AAA8C;AAAiB;AAAK;AAAe;AAAkB;AAAQ;AAAK;AAAiB;AACjJ;;;;;;;;2BDGaA,Y,EAAY;cALxB,OAAAxhC,SAKwB;eALd;AACPljD,kBAAQ,EAAE,eADH;AAEPmjD,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,gCAAD;AAHJ,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEPzB;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJI;AAAsD;AAAkB;;;;;AAAvC;AAAqB;AAAA;;;;;;AACtD;;;;;;AAAkC;;;;;;;;;;AAGlC;AAQI;AACI;AACA;AACI;AACJ;AACA;AAAkB;AAAe;AACrC;AACJ;;;;;;AAbI,4DAA+B,YAA/B,EAA+B,yCAA/B;AASkB;AAAA;AAEI;AAAA;;;;;;AAOlB;AACI;AACJ;;;;;AAF+C;AAC3C;AAAA;;;;;;;;AAJhB;AACI;AACI;AAAY;AAAA;AAAA;AAAA;AAAA;AACR;AAGJ;AACJ;AACJ;;;;;AANoB;AAAA;AACI;AAAA;;;;QDbXuhC,gB;AAyBT,gCAAoB9lE,QAApB,EAA0DyR,IAA1D,EAAqF;AAAA;;AAAjE,aAAAzR,QAAA,GAAAA,QAAA;AAAsC,aAAAyR,IAAA,GAAAA,IAAA;AAA6B;AAvBvF;;;;;mCAyBQ,CAAW;;;4BAxBO;AACtB,iBAAO,KAAKA,IAAL,CAAUrK,QAAjB;AACH,S;0BAC0BA,Q,EAAoB;AAC3C,eAAKqK,IAAL,CAAUrK,QAAV,GAAqBA,QAArB;AACH;AAED;;;;4BACqB;AACjB,iBAAO,KAAKpH,QAAL,CAAcd,OAAd,CAAsB,wBAAtB,KAAmD,EAA1D;AACH;AAED;;;;4BACe;AACX,iBAAO,KAAKc,QAAL,CAAcd,OAAd,CAAsB,gBAAtB,CAAP;AACH;AAED;;;;4BACoB;AAChB,iBAAO,KAAKuS,IAAL,CAAUpY,SAAV,IAAuB,EAA9B;AACH;;;;;;AA5BL;;;uBAKaysE,gB,EAAgB,2C,EAAA,4C;AAAA,K;;;YAAhBA,gB;AAAgB,gC;AAAA,c;AAAA,a;AAAA,qiB;AAAA;AAAA;ACZ7B;AACI;AACA;AACJ;AACA;AACI;AAgBJ;AACA;;;;AArBO;AAAA;AACE;AAAA;AAOD;AAAA;AAawB;AAAA;;;;;;;;;;2BDVnBA,gB,EAAgB;cAL5B,OAAAzhC,SAK4B;eALlB;AACPljD,kBAAQ,EAAE,WADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDI;AACI;AAAiD;AAAA;AAAA;AAAA;AAAA;AAC7C;AAA0B;AAAG;AACjC;AACJ;;;;;;AASY;AAA0B;AAAK;;;;;;;;;;;;;;;;;;;;;;;;QDLlCwhC,qB;;;;;AAgDT,qCAAoBh0D,SAApB,EAA4DN,IAA5D,EAAuF;AAAA;;AAAA;;AACnF;AADgB,iBAAAM,SAAA,GAAAA,SAAA;AAAwC,iBAAAN,IAAA,GAAAA,IAAA;AA/C5D;;AACgB,iBAAAvsB,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAKhB;;AACgB,iBAAA6hF,aAAA,GAAgB,KAAhB;AAChB;;AACgB,iBAAAC,WAAA,GAAuB,KAAvB;AAChB;;AACiB,iBAAAC,YAAA,GAAe,IAAI,OAAApkC,YAAJ,EAAf;AACjB;;AACiB,iBAAA7vC,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAIV,iBAAA8C,UAAA,GAAa,UAAA52C,OAAA,GAAUgI,aAAV,CAAwB;AAAEwmB,gBAAM,EAAE;AAAV,SAAxB,CAAb;AA8BgF;AAEtF;;;;mCAEc;AAAA;;AACX;AACA,cAAMj4B,IAAI,GAAG,CAACwZ,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAD,IAA2C,KAAKgM,GAAL,CAAS9b,EAAjE;AAEA;;AACA,cAAI3J,IAAI,KAAKA,IAAI,KAAK,KAAKW,MAAL,CAAYgJ,EAArB,IAA2B,KAAKi4E,cAAL,KAAwB,KAAKjhF,MAAL,CAAYolB,WAApE,CAAR,EAA0F;AACtF;AACA,iBAAKpnB,OAAL,CACI,MADJ,EAEI,YAAM;AACF,sBAAI,CAACgC,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,oBAAI,EAAJA,IADqB;AAErB8lB,2BAAW,EAAE,KAFQ;AAGrBC,2BAAW,EAAE,QAAI,CAAC67D;AAHG,eAAX,CAAd;;AAKA,sBAAI,CAACD,YAAL,CAAkBljC,IAAlB,CAAuB,QAAI,CAAC99C,MAA5B;;AACA,sBAAI,CAACiyD,UAAL;AACH,aAVL,EAWI,EAXJ;AAaH;;AACD,eAAK70D,YAAL,CACI,QADJ,EAEI,KAAKyvB,SAAL,CAAeC,aAAf,CAA6BxvB,SAA7B,CAAuC,UAACC,IAAD,EAAU;AAC7C,oBAAI,CAAC2jF,SAAL,GAAiB,EAAjB;AACA,oBAAI,CAACA,SAAL,GAAiB3jF,IAAI,CAAC,CAAD,CAArB;AACH,WAHD,CAFJ;AAOH;;;kCAEgBwP,K,EAAO,CACrB;AACC;AACA;AACH;AAED;;;;;;;mCAIkBxK,K,EAAe;AAC7B,cAAIlD,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAClBlR,gBAAI,EAAE,UAAA08C,WAAA,CAAY,KAAK/7C,MAAjB,EAAyBgJ,EADb;AAElBmc,uBAAW,EAAE,KAFK;AAGlBC,uBAAW,EAAE,KAAK67D;AAHA,WAAX,CAAX;AAKA5hF,cAAI,GAAGA,IAAI,CAACa,QAAL,CAAc;AAAE2uB,gBAAI,EAAEtsB;AAAR,WAAd,CAAP;AACA,eAAKvC,MAAL,GAAcX,IAAd;AACA,eAAK2hF,YAAL,CAAkBljC,IAAlB,CAAuB,KAAK99C,MAA5B;AACA6Y,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C,KAAK/nC,MAAL,CAAYgJ,EAAtD;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C,KAAKk5C,cAAnD;AACA,eAAKhvB,UAAL;AACH;AAED;;;;;;;6CAI4BkvB,W,EAAqB;AAC7C,eAAKnhF,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,gBAAI,EAAE,UAAA08C,WAAA,CAAYolC,WAAZ,EAAyBn4E,EADV;AAErBmc,uBAAW,EAAE,KAFQ;AAGrBC,uBAAW,EAAE,KAAK67D;AAHG,WAAX,CAAd;AAKA,eAAKD,YAAL,CAAkBljC,IAAlB,CAAuB,KAAK99C,MAA5B;AACA6Y,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C,KAAK/nC,MAAL,CAAYgJ,EAAtD;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C,KAAKk5C,cAAnD;AACA,eAAKhvB,UAAL;AACA,eAAK9I,eAAL;AACH;;;qCAEmB;AAAA;;AAChB,eAAKnrD,OAAL,CAAa,aAAb,EAA4B;AAAA,mBAAM,QAAI,CAAC6uB,SAAL,CAAe+iB,OAAf,CAAuB,QAAI,CAAC5vC,MAA5B,CAAN;AAAA,WAA5B;AACH;AAED;;;;oCACmB;AACf,eAAKA,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,gBAAI,EAAE,UAAA08C,WAAA,CAAY,KAAKj3B,GAAjB,EAAsB9b,EADP;AAErBmc,uBAAW,EAAE,KAFQ;AAGrBC,uBAAW,EAAE,KAAK67D;AAHG,WAAX,CAAd;AAKA,eAAKD,YAAL,CAAkBljC,IAAlB,CAAuB,KAAK99C,MAA5B;AACA6Y,sBAAY,CAACkvB,OAAb,CAAqB,gBAArB,YAA0C,KAAK/nC,MAAL,CAAYgJ,EAAtD;AACA6P,sBAAY,CAACkvB,OAAb,CAAqB,oBAArB,YAA8C,KAAKk5C,cAAnD;AACA,eAAKhvB,UAAL;AACH;;;0CAEwB;AACrB,eAAKA,UAAL;AACH;AAED;;;;kCACc;AACV,eAAKllD,KAAL,CAAW+wC,IAAX,CAAgB,UAAhB;AACH;;;4BA/HgB;AACb,iBAAO,UAAAh1C,OAAA,EAAP;AACH;AAED;;;;4BACa;AACT,iBAAO,UAAAmtB,uBAAA,CAAwB,KAAKgrD,cAA7B,CAAP;AACH;;;4BAE2B;AACxB,iBAAOpoE,YAAY,CAACC,OAAb,CAAqB,oBAArB,KAA8C,KAAK7U,QAAnD,IAA+D,KAAK6gB,GAAL,CAASM,WAA/E;AACH;;;4BAEqB;AAClB,iBAAO,IAAI,UAAA7U,MAAJ,CAAW;AACdlR,gBAAI,EAAE,UAAA08C,WAAA,CAAY,KAAK/7C,MAAjB,EAAyBgJ,EADjB;AAEdmc,uBAAW,EAAE,KAFC;AAGdC,uBAAW,EAAE,KAAK67D;AAHJ,WAAX,EAIJzlD,UAJI,CAKH,IAAI,UAAAjrB,MAAJ,CAAW;AACPlR,gBAAI,EAAEJ,IAAI,CAAC6lB,GAAL,EADC;AAEPK,uBAAW,EAAE,KAFN;AAGPC,uBAAW,EAAE,KAAK67D;AAHX,WAAX,CALG,EAUH,KAVG,CAAP;AAYH;;;;MA9CsC,OAAAnlF,a;;AAL3C;;;uBAKa+kF,qB,EAAqB,4C,EAAA,4C;AAAA,K;;;YAArBA,qB;AAAqB,sC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,6B;AAAA,e;AAAA,c;AAAA,kkB;AAAA;AAAA;;ACZlC;AACI;AACI;AACJ;AACA;AAKA;AACI;AACI;AAAwC;AAAA,mBAAS,IAAAO,UAAA,CAAW,IAAC,CAAZ,CAAT;AAAuB,WAAvB;AACpC;AAGJ;AACA;AAAkB;AAAA,mBAAY,IAAAliF,SAAA,EAAZ;AAAuB,WAAvB;AACd;AACA;AAA6B;;AAAuC;AACxE;AACA;AAAoC;AAAA,mBAAS,IAAAkiF,UAAA,CAAW,CAAX,CAAT;AAAsB,WAAtB;AAChC;AAGJ;AACJ;AACA;AAAoB;AAAA,mBAAS,IAAAC,SAAA,QAAT;AAA0B,WAA1B;AAChB;AAII;AAAA;AAAA,aAAoB,UAApB,EAAoB;AAAA,mBAIR,IAAAC,oBAAA,QAJQ;AAIoB,WAJxC;AAMJ;AACJ;AACJ;AACJ;;;;AApCS;AAAA;AASW;AAAA;AAIK;AAAA;AACN;AAAA;AAA0B;AAAA;AAIzB;AAAA;AAOJ;AAAA,2CAAkB,UAAlB,EAAkB,6DAAlB,EAAkB,SAAlB,EAAkB,UAAlB,EAAkB,YAAlB,EAAkB,cAAlB,EAAkB,gBAAlB,EAAkB,KAAlB,EAAkB,UAAlB,EAAkB,kBAAlB;;;;;;;;;;2BDjBHT,qB,EAAqB;cALjC,OAAA1hC,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,gCAAD;AAHJ,S;AAKuB,Q;;;;;;;;gBAE7B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AE1BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFoB;AAAsD;AAAkB;;;;;AAAvC;AAAqB;AAAA;;;;;;AACtD;;;;;;AAAkC;;;;;;;;AANtD;AACI;AACI;AACI;AACI;AACI;AACA;AACJ;AACJ;AACA;AACI;AACI;AACI;AAAA;AAQA;AACA;AACI;AAAA;AAAA;AAOA;AAAA;AACyB;AAE7B;AACJ;AACA;AACI;AAAA;AAQA;AACA;AACI;AAAA;AAMI;AAAA;AAAA;AAAA;AAAA;AANJ;AAQA;AAAA;AACiC;AAErC;AACJ;AACJ;AACJ;AACA;AACI;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAnB;AAA8D;AAClE;AACJ;AACJ;AACJ;;;;;AA/Dc;AAAA;AACkB;AAAA;AAET;AAAA;AACE;AAAA;AAQG;AAAA;AAuBA;AAAA;;;;;;;;;;;;;;;;;;AA8BxB;AACI;AACI;AACJ;AACA;AAAA;AAAkE;AACtE;;;;QD1DSiiC,c;;;;;AAWT,8BAAoBzmE,QAApB,EAA0D8rB,MAA1D,EAAgF;AAAA;;AAAA;;AAC5E;AADgB,iBAAA9rB,QAAA,GAAAA,QAAA;AAAsC,iBAAA8rB,MAAA,GAAAA,MAAA;AAAsB;AAE/E;;;;mCAEc;AAAA;;AACX,eAAK/uB,OAAL,GAAe,IAAf;AACA,eAAKkD,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtBmmD,oBAAQ,EAAE,IAAI,QAAA7oD,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,QAAAE,UAAA,CAAWC,QAAZ,CAApB,CADY;AAEtB2oD,oBAAQ,EAAE,IAAI,QAAA9oD,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,QAAAE,UAAA,CAAWC,QAAZ,CAApB;AAFY,WAAd,CAAZ;;AAIA,eAAKhe,QAAL,CAAc3D,WAAd,CAA0BhH,IAA1B,CAA+B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA/B,EAAgD9Y,SAAhD,CAA0D,YAAM;AAC5D,oBAAI,CAACua,OAAL,GAAe,KAAf;AACA,oBAAI,CAAC6pE,IAAL,GAAY,QAAI,CAAC5mE,QAAL,CAAcd,OAAd,CAAsB,gBAAtB,KAA2C;AAAE1V,kBAAI,EAAE;AAAR,aAAvD;AACH,WAHD;AAIH;AAED;;;;gCACe;AAAA;;AACX,eAAKuT,OAAL,GAAe,IAAf;AACA,cAAMkD,IAAI,GAAG,KAAKA,IAAL,CAAUxY,KAAvB;;AACA,eAAKqkC,MAAL,CACK+6C,KADL,CAEQ;AACIH,oBAAQ,EAAEzmE,IAAI,CAACymE,QADnB;AAEIC,oBAAQ,EAAE1mE,IAAI,CAAC0mE;AAFnB,WAFR,EAMQ;AAAE1mE,gBAAI,EAAE;AAAR,WANR,EAQKO,IARL,CASQ;AAAA,mBAAM,QAAI,CAACzD,OAAL,GAAe,KAArB;AAAA,WATR,EAUQ,YAAM;AACF,oBAAI,CAACA,OAAL,GAAe,KAAf;;AACA,oBAAI,CAACkD,IAAL,CAAUquB,QAAV,CAAmBq4C,QAAnB,CAA4BG,SAA5B,CAAsC;AAAE3iD,mBAAK,EAAE;AAAT,aAAtC;AACH,WAbT;AAeH;;;;MA9C+B,OAAAnjC,a;;AALpC;;;uBAKaylF,c,EAAc,2C,EAAA,qC;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;;;;;;;;;;;;;;;;ACd3B;AAkEA;;;;;;AAlEmB,8CAAoC,UAApC,EAAoC,GAApC;;;;;;;;;;2BDcNA,c,EAAc;cAL1B,OAAApiC,SAK0B;eALhB;AACPljD,kBAAQ,EAAE,WADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD;AAHJ,S;AAKgB,Q;;;;;;;;gBAStB,OAAAqD,S;iBAAU,Y,EAAc;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;AEvB7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBoB;AACI;AAEJ;;;;;AAFI;AAAA;;;;;;AAIR;AACI;AACI;AAAkB;AAAmB;AACrC;AAAkB;AAAmB;AACzC;AACJ;;;;;AAL+C;AAErB;AAAA;AACA;AAAA;;;;;;;;AAX9B;AAAwD;AAAA;AAAA;AAAA,mCAAuB,CAAvB,IAAwB,MAAxB;AAAwB,SAAxB,EAA0B,eAA1B,EAA0B;AAAA;AAAA;AAAA;AAAA,SAA1B;AACpD;AACI;AACA;AAIJ;AACA;AAMJ;;;;;AAdwD;AAEhD;AAAA;AACM;AAAA;AAKE;AAAA;;;;;;AAWR;AACI;AAEJ;;;;;AAFI;AAAA;;;;;;AAIR;AACI;AACI;AAAkB;AAAmB;AACrC;AAAkB;AAAmB;AACzC;AACJ;;;;;AAL+C;AAErB;AAAA;AACA;AAAA;;;;;;;;AAX9B;AAAuD;AAAA;AAAA;AAAA;AAAA;AACnD;AACI;AACA;AAIJ;AACA;AAMJ;;;;;AAduD;AAE/C;AAAA;AACM;AAAA;AAKE;AAAA;;;;;;AA1BpB;AAEI;AAgBA;AAgBJ;;;;;AAhCgB;AAAA;AAgBA;AAAA;;;;;;AAoBZ;AAAwC;AAAQ;;;;;;AACvB;;;;;;;;;;AAO7B;AACI;AACJ;;;;;AADoB;AAAA,sFAA+B,SAA/B,EAA+B,cAA/B;;;;;;AAFxB;AACI;AAGJ;;;;;;;;AAHkB;AAAA,oFAAgE,UAAhE,EAAgE,GAAhE;;;;;;;;;;;;;AAMlB;AACI;AACI;AACJ;AACA;AACI;AAGJ;AACJ;;;;;AAPkB;AAAA;AAGV;AAAA;;;;;;AAOR;AACI;AACI;AACJ;AACA;AAAkB;AAAiB;AACvC;;;;QD7ESm/B,sB;AAwBT,sCACY/mE,QADZ,EAEYyR,IAFZ,EAGYu1D,QAHZ,EAIYrlC,OAJZ,EAI2B;AAAA;;AAHf,aAAA3hC,QAAA,GAAAA,QAAA;AACA,aAAAyR,IAAA,GAAAA,IAAA;AACA,aAAAu1D,QAAA,GAAAA,QAAA;AACA,aAAArlC,OAAA,GAAAA,OAAA;AAjBZ;;AACO,aAAA93B,SAAA,GAAwB,CAAC,EAAD,CAAxB;AACP;;AACO,aAAAo9D,iBAAA,GAA6B,KAA7B;AAOG,aAAAC,eAAA,GAAkB,IAAI,OAAAplC,YAAJ,EAAlB;AAQN;AAbJ;;;;;mCAee;AAAA;;AACX;AACA,cAAM93B,GAAG,GAAG,UAAAhc,OAAA,EAAZ;AACA,eAAKu4D,UAAL,GAAkBv8C,GAAG,CAAC/b,YAAJ,CAAiB,KAAjB,EAAwBC,EAA1C;AACA,eAAK05D,QAAL,GAAgB59C,GAAG,CAAC2I,UAAJ,CAAe,KAAf,EAAsBzkB,EAAtC;;AACA,eAAKujB,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACxD,oBAAI,CAACqnB,SAAL,GAAiB,CAAC,QAAI,CAAC4H,IAAL,CAAUrK,QAAX,CAAjB;AACH,WAFD;AAGH;;;oCAEkBnlB,O,EAAwB;AACvC;AACA,cAAIA,OAAO,CAACklF,MAAZ,EAAoB;AAChB,iBAAKC,WAAL,GAAmB,IAAnB;AACH;;AACD,cAAI,KAAKv9D,SAAL,CAAepjB,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,iBAAKojB,SAAL,GAAiB,CAAC,KAAKA,SAAL,CAAe,CAAf,CAAD,CAAjB;AACH;AACJ;AAED;;;;yCACwBH,I,EAAW;AAC/B,eAAKw9D,eAAL,CAAqBlkC,IAArB,CAA0B,KAAKn5B,SAAL,CAAe,CAAf,CAA1B;AACH;AAED;;;;;;mCAGkB8jC,Q,EAAkB;AAChC,cAAI,KAAK4Y,UAAL,GAAkB,KAAKqB,QAA3B,EAAqC;AACjC;AACA,gBAAMrjE,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAElR,kBAAI,EAAEopD;AAAR,aAAX,CAAb;AACA,iBAAK4Y,UAAL,GAAkBhiE,IAAI,CAAC0J,YAAL,CAAkB,KAAlB,EAAyBC,EAA3C;AACA,iBAAK05D,QAAL,GAAgBrjE,IAAI,CAACouB,UAAL,CAAgB,KAAhB,EAAuBzkB,EAAvC;AACH;AACJ;AAED;;;;;;yCAGwB;AAAA;;;AACpB;;;AACA,cAAI,KAAKi5E,MAAT,EAAiB;AACb,iBAAKpqE,OAAL,GAAe,IAAf;AACA,iBAAKqqE,WAAL,GAAmB,IAAnB;AACA,gBAAM7iF,IAAI,GAAG,UAAA08C,WAAA,CAAY,IAAI,UAAAxrC,MAAJ,CAAW;AAAElR,kBAAI,EAAE,KAAKgiE;AAAb,aAAX,CAAZ,EAAmD53D,MAAnD,CAA0D,CAAD,KAClE,KAAKkb,SAAL,CAAe,CAAf,CADmE,MAClD,IADkD,IAClD,aADkD,GAClD,MADkD,GAClD,GAAE1gB,QADV,CAAb;AAGA,gBAAMy+D,QAAQ,GAAG,UAAA3mB,WAAA,CAAY,IAAI,UAAAxrC,MAAJ,CAAW;AAAElR,kBAAI,EAAE,KAAKqjE;AAAb,aAAX,CAAZ,EAAiDj5D,MAAjD,CAAwD,CAAD,KACpE,KAAKkb,SAAL,CAAe,CAAf,CADqE,MACpD,IADoD,IACpD,aADoD,GACpD,MADoD,GACpD,GAAE1gB,QADN,CAAjB;;AAGA,iBAAK69E,QAAL,CACKnxD,IADL,CACU,KAAKsxD,MAAL,CAAY3wE,EADtB,EAC0B;AAClBjS,kBAAI,EAAEA,IAAI,CAACsB,UAAL,CAAgB,YAAhB,CADY;AAElB0gE,wBAAU,EAAEhiE,IAAI,CAAC0J,YAAL,CAAkB,KAAlB,EAAyBgI,OAFnB;AAGlB2xD,sBAAQ,EAAEA,QAAQ,CAACj1C,UAAT,CAAoB,KAApB,EAA2B1c,OAHnB;AAIlBsd,sBAAQ,EAAE,KAAK1J,SAAL,CAAezf,GAAf,CAAmB,UAACxH,CAAD;AAAA,uBAAOA,CAAC,CAAC4T,EAAT;AAAA,eAAnB,EAAgC5I,IAAhC,CAAqC,GAArC;AAJQ,aAD1B,EAOK4S,IAPL,CAQQ,UAAC2mE,MAAD,EAAY;;;AACR,kBAAM5zD,QAAQ,GAAG,QAAI,CAAC1J,SAAL,CAAezf,GAAf,CAAmB,UAACxH,CAAD;AAAA,uBAAOA,CAAC,CAAC4T,EAAT;AAAA,eAAnB,EAAgC5I,IAAhC,CAAqC,GAArC,CAAjB;;AACA,kBAAI,QAAI,CAACu5E,MAAL,CAAY3wE,EAAZ,KAAmB,KAAnB,IAA4B,eAAI,CAACqT,SAAL,CAAe,CAAf,OAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE7P,IAAnB,MAA4B,QAA5D,EAAsE;AAClE,wBAAI,CAAC+C,OAAL,GAAe,KAAf;;AACA,wBAAI,CAACiD,QAAL,CAAcy2B,WAAd;AAGH,eALD,MAKO;AACH,wBAAI,CAAC15B,OAAL,GAAe,KAAf;AACA,wBAAI,CAACqqE,WAAL,GAAmB,IAAI,cAAAv4C,MAAJ,CAAW,MAAD,OAAC,CAAD,kBAAMs4C,MAAN,CAAC,EAAW;AAAE39E,sBAAI,EAAE,QAAI,CAAC29E,MAAL,CAAY3wE;AAApB,iBAAX,CAAX,CAAnB;AACH;AACJ,aAnBT,EAoBQ,UAACoL,GAAD,EAAS;AACL,sBAAI,CAAC7E,OAAL,GAAe,KAAf;;AACA,sBAAI,CAACiD,QAAL,CAAcy2B,WAAd,2CACuC70B,GAAG,CAACnG,OAAJ,IAAemG,GADtD;AAGH,aAzBT;AA2BH;AACJ;;;yCAEuB;AACpB;AACA,cAAI,KAAKwlE,WAAT,EAAsB;AAClB,gBAAM7iF,IAAI,GAAG,IAAI,UAAAkR,MAAJ,CAAW;AAAElR,kBAAI,EAAE,KAAKgiE;AAAb,aAAX,CAAb;AACA,iBAAK6gB,WAAL,CAAiBC,WAAjB,WACO,KAAKF,MAAL,CAAY7mF,IAAZ,CAAiBiG,KAAjB,CAAuB,GAAvB,EAA4BqH,IAA5B,CAAiC,GAAjC,EAAsC3B,WAAtC,EADP,cAC8D1H,IAAI,CAACsB,UAAL,CACtD,YADsD,CAD9D;AAKH;AACJ;;;4BAzGmB;AAChB,iBAAO,KAAK4rB,IAAL,CAAUpY,SAAjB;AACH;;;;;;AAxBL;;;uBAKa0tE,sB,EAAsB,2C,EAAA,4C,EAAA,uC,EAAA,+B;AAAA,K;;;YAAtBA,sB;AAAsB,uC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,yC;AAAA,e;AAAA,c;AAAA,2qC;AAAA;AAAA;AClBnC;AACI;AACI;AACI;AAA6D;AAAU;AACvE;AAA6D;AAAI;AACjE;AAEI;AAAA;AAAA,aAAwB,UAAxB,EAAwB;AAAA,mBAGZ,IAAAO,UAAA,QAHY;AAGM,WAH9B;AAIH;AACL;AACA;AAAsD;AAAE;AACxD;AACI;AAAsB;AAAQ;AAC9B;AAEI;AAAA;AAAA,aAAsB,UAAtB,EAAsB;AAAA,mBAGV,IAAAA,UAAA,QAHU;AAGQ,WAH9B;AAIH;AACL;AACJ;AACA;AACI;AAmCJ;AACA;AACI;AAAwD;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;AACpD;AACA;AACJ;AACA;AAA6D;AAAA,mBAAS,IAAAC,cAAA,EAAT;AAAyB,WAAzB;AAA2B;AAAQ;AACpG;AACJ;AACA;AACI;AAKJ;AACA;AAYA;;;;;;;;AAtFoC;AAAA;AACA;AAAA;AAGpB;AAAA,mDAAwB,MAAxB,EAAwB,iBAAxB,EAAwB,IAAxB,EAAwB,iBAAxB;AAMS;AAAA;AACE;AAAA;AAIX;AAAA,iDAAsB,MAAtB,EAAsB,mBAAtB,EAAsB,IAAtB,EAAsB,mBAAtB;AAQ6B;AAAA;AAqCF;AAAA;AACzB;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAGyB;AAAA;AAIzB;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;;;;;;;;;2BDrDLT,sB,EAAsB;cALlC,OAAA1iC,SAKkC;eALxB;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,iCAFN;AAGPC,mBAAS,EAAE,CAAC,iCAAD;AAHJ,S;AAKwB,Q;;;;;;;;;;;;gBAE9B,OAAA1gD;;;gBAmBA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEvCL;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACGQ;AAAwD;;AAAmB;;;;;AAAvD;AAAoC;AAAA;;;;;;AACxD;AAAyD;AAAkB;;;;;;AAA9D;AAA4C;AAAA;;;;;;AAF7D;AACI;AACA;AACJ;;;;;AAHyC;;;;;;AAKzC;;;;;;AACA;;;;QDCSijC,oB;AALb;AAAA;;AAMI;AACgB,aAAAhlF,IAAA,GAAkB,EAAlB;AAIT,aAAAqJ,MAAA,GAAmB,EAAnB;AAQV;;;;oCANsB7J,O,EAAwB;AAAA;;AACvC;AACA,cAAIA,OAAO,CAACQ,IAAR,IAAgB,KAAKA,IAArB,IAA6B,KAAKA,IAAL,CAAUgE,MAA3C,EAAmD;AAC/C,iBAAKqF,MAAL,GAAcyF,MAAM,CAACpH,IAAP,CAAY,KAAK1H,IAAL,CAAU,CAAV,CAAZ,EAA0B0I,MAA1B,CAAiC,UAAAvI,CAAC;AAAA,qBAAI,QAAI,CAACuxB,OAAL,CAAauzD,WAAb,CAAyB//E,OAAzB,CAAiC/E,CAAjC,IAAsC,CAA1C;AAAA,aAAlC,CAAd;AACH;AACJ;;;;;;AAlBL;;;uBAKa6kF,oB;AAAoB,K;;;YAApBA,oB;AAAoB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA,yC;AAAA,c;AAAA,a;AAAA,sZ;AAAA;AAAA;ACTjC;AAEI;AAKA;AACA;AACJ;;;;AATiB;AAEC;AAAA;AAKK;AAAA,uDAAuC,uBAAvC,EAAuC,IAAvC;AACP;AAAA;;;;;;;;;;2BDCHA,oB,EAAoB;cALhC,OAAApjC,SAKgC;eALtB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD;AAHJ,S;AAKsB,Q;;gBAE5B,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEbL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACJI;AACI;AACJ;;;;;;AASgB;AACI;AACJ;;;;;AAF2C;AACvC;AAAA;;;;;;;;AAPZ;AACI;AAEI;AAAA;AAAA;AAAA;AAAA,WAA2B,eAA3B,EAA2B;AAAA;AAAA;AAAA;AAAA,SAA3B;AAGA;AAGJ;AACJ;;;;;AAPQ;AAAA;AAGY;AAAA;;;;;;AAPxB;AACI;AAWJ;;;;;AAXoB;AAAA;;;;;;;;;;;;;;;;;AAcZ;AAOI;AACI;AACI;AACJ;AACA;AAAI;AAAuB;AAC3B;AACI;AAAkB;AAAwB;AAC1C;AAMJ;AACJ;AACJ;;;;;AApBI,yDAA8B,YAA9B,EAA8B,yCAA9B;AAOkB;AAAA;AAEV;AAAA;AAEkB;AAAA;AAEd;AAAA;;;;;;AAhBpB;AACI;AAuBJ;;;;;AAnBQ;AAAA;;;;;;AApBhB;AACI;AAaA;AACI;AAyBJ;AACJ;;;;;;;;AAxCwB;AAAA;AAcK;AAAA,qDAA2C,UAA3C,EAA2C,GAA3C;;;;;;;;AA6B7B;AAAkB;AAAA;AAAA;AAAA;AAAA;AAClB;;;;;AADgE;;;;QDnBvD8jF,gB;;;;;AAsDT,gCACYlR,MADZ,EAEY90B,OAFZ,EAGY3hC,QAHZ,EAIYyR,IAJZ,EAIqC;AAAA;;AAAA;;AAEjC;AALQ,iBAAAglD,MAAA,GAAAA,MAAA;AACA,iBAAA90B,OAAA,GAAAA,OAAA;AACA,iBAAA3hC,QAAA,GAAAA,QAAA;AACA,iBAAAyR,IAAA,GAAAA,IAAA;AAzDZ;;AACO,iBAAAvsB,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAQP;;AACO,iBAAAyjF,OAAA,GAA2B,CAC9B;AACIpxE,YAAE,EAAE,UADR;AAEIlW,cAAI,EAAE,2BAFV;AAGI8wB,oBAAU,EAAE,UAHhB;AAII0T,qBAAW,EAAE,+DAJjB;AAKI4iD,qBAAW,EAAE,CAAC,YAAD,CALjB;AAMI/rE,cAAI,EAAE;AAAEnS,gBAAI,EAAE,KAAR;AAAe4lB,eAAG,EAAE;AAApB,WANV;AAOIy4D,yBAAe,EAAE;AAPrB,SAD8B,EAU9B;AACIrxE,YAAE,EAAE,UADR;AAEIlW,cAAI,EAAE,8BAFV;AAGI8wB,oBAAU,EAAE,UAHhB;AAII0T,qBAAW,EAAE,gEAJjB;AAKI4iD,qBAAW,EAAE,CAAC,YAAD,CALjB;AAMI/rE,cAAI,EAAE;AAAEnS,gBAAI,EAAE,MAAR;AAAgB,qBAAO,gBAAvB;AAAyCoS,mBAAO,EAAE;AAAlD,WANV;AAOIisE,yBAAe,EAAE;AAPrB,SAV8B,EAmB9B;AACIrxE,YAAE,EAAE,KADR;AAEIlW,cAAI,EAAE,iBAFV;AAGI8wB,oBAAU,EAAE,UAHhB;AAII0T,qBAAW,EAAE,GAJjB;AAKI4iD,qBAAW,EAAE,CAAC,GAAD,CALjB;AAMI/rE,cAAI,EAAE;AAAEnS,gBAAI,EAAE,MAAR;AAAgB,qBAAO,gBAAvB;AAAyCoS,mBAAO,EAAE;AAAlD,WANV;AAOIisE,yBAAe,EAAE;AAPrB,SAnB8B,EA4B9B;AACIrxE,YAAE,EAAE,OADR;AAEIlW,cAAI,EAAE,OAFV;AAGI8wB,oBAAU,EAAE,OAHhB;AAII0T,qBAAW,EAAE,EAJjB;AAKI4iD,qBAAW,EAAE,EALjB;AAMI/rE,cAAI,EAAE;AAAEnS,gBAAI,EAAE,KAAR;AAAe4lB,eAAG,EAAE;AAApB,WANV;AAOIy4D,yBAAe,EAAE;AAPrB,SA5B8B,CAA3B;AA+C8B;AAGpC;;;;mCAEc;AAAA;;AACX,eAAK7nE,QAAL,CAAcwP,KAAd,GAAsB,SAAtB;AACA,eAAKltB,YAAL,CACI,cADJ,EAEI,KAAKm0E,MAAL,CAAYW,QAAZ,CAAqB50E,SAArB,CAA+B,UAACgrC,MAAD,EAAY;AACvC,gBAAIA,MAAM,CAAC6pC,GAAP,CAAW,QAAX,CAAJ,EAA0B;AACtB,sBAAI,CAACyQ,aAAL,GAAqBt6C,MAAM,CAACvzB,GAAP,CAAW,QAAX,CAArB;AACH;AACJ,WAJD,CAFJ;;AASA,eAAKwX,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACxD;AACA,oBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,kBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EADG;AAErBmc,yBAAW,EAAE,KAFQ;AAGrBC,yBAAW,EAAE,QAAI,CAACnhB;AAHG,aAAX,CAAd;;AAKA,oBAAI,CAAC7G,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,YAAM;AAChD;AACA,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EADG;AAErBmc,2BAAW,EAAE,KAFQ;AAGrBC,2BAAW,EAAE,QAAI,CAACnhB;AAHG,eAAX,CAAd;AAKA,kBAAMie,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUrK,QAA3B;AACA,sBAAI,CAACjK,QAAL,GAAgB,QAAI,CAACsU,IAAL,CAAUrK,QAA1B;AACA,sBAAI,CAACkwD,UAAL,GAAkBlwD,QAAQ,GAAG,IAAH,GAAU,KAApC,CATgD,CAWhD;;AACA,kBAAI,QAAI,CAACjK,QAAL,CAAcnD,IAAd,IAAsB,QAA1B,EAAoC;AAChC;AACA,wBAAI,CAAC4tE,OAAL,GAAe,QAAI,CAACA,OAAL,CAAaz8E,MAAb,CAAoB,UAAUy8E,OAAV,EAAmB;AAClD,yBAAOA,OAAO,CAACpxE,EAAR,KAAe,KAAtB;AACH,iBAFc,CAAf;AAGH;AACJ,aAlBD,CAFJ;AAsBH,WA7BD;AA8BH;;;uCAEqB;AAClB,eAAKmrC,OAAL,CAAajL,QAAb,CAAsB,CAAC,UAAD,EAAa,KAAKoxC,aAAlB,CAAtB;AACH,S,CAED;AACA;;;;qCAKoB5iF,M,EAAgB;AAChC,eAAKA,MAAL,GAAcA,MAAd;AACH;;;0CAEwBiY,Q,EAAe;AACpC,eAAKA,QAAL,GAAgBA,QAAhB,CADoC,CAEpC;;AACA,cAAI,KAAKA,QAAL,CAAcnD,IAAd,IAAsB,QAA1B,EAAoC;AAChC;AACA,iBAAK4tE,OAAL,GAAe,KAAKA,OAAL,CAAaz8E,MAAb,CAAoB,UAAUy8E,OAAV,EAAmB;AAClD,qBAAOA,OAAO,CAACpxE,EAAR,KAAe,KAAtB;AACH,aAFc,CAAf;;AAGA,iBAAKmrC,OAAL,CAAajL,QAAb,CAAsB,CAAC,mBAAD,CAAtB;AACH,WAND,MAMO;AACH;AACA,iBAAKkxC,OAAL,gCACO,KAAKA,OADZ,IAEI;AACIpxE,gBAAE,EAAE,KADR;AAEIlW,kBAAI,EAAE,iBAFV;AAGI8wB,wBAAU,EAAE,UAHhB;AAII0T,yBAAW,EAAE,GAJjB;AAKI4iD,yBAAW,EAAE,CAAC,GAAD,CALjB;AAMI/rE,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eANV;AAOIisE,6BAAe,EAAE;AAPrB,aAFJ;AAYH;AACJ;;;4BA9FoB;AAAA;;AACjB,iBAAO,KAAKD,OAAL,CAAa7/E,IAAb,CAAkB,UAACo/E,MAAD;AAAA,mBAAYA,MAAM,CAAC3wE,EAAP,KAAc,QAAI,CAACsxE,aAA/B;AAAA,WAAlB,CAAP;AACH;;;4BA4DqB;AAClB,iBAAO,KAAKr2D,IAAL,CAAUrK,QAAV,CAAmBje,QAA1B;AACH;;;;MAlHiC,OAAAnI,a;;AALtC;;;uBAKa2mF,gB,EAAgB,uC,EAAA,+B,EAAA,2C,EAAA,4C;AAAA,K;;;YAAhBA,gB;AAAgB,gC;AAAA,+C;AAAA,c;AAAA,a;AAAA,inB;AAAA;AAAA;AC9B7B;AACI;AACA;AAGA;AA0CJ;AACA;;;;AA9CuB;AAAA;AAGA;AAAA;;;;;;;;2BDyBVA,gB,EAAgB;cAL5B,OAAAtjC,SAK4B;eALlB;AACPljD,kBAAQ,EAAE,WADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9B7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAMm0B,MAAM,GAAY,CACpB;AAAE/pD,UAAI,EAAE,EAAR;AAAYs8C,eAAS,EAAE,oBAAA0c;AAAvB,KADoB,EAEpB;AAAEh5D,UAAI,EAAE,SAAR;AAAmBs8C,eAAS,EAAE,oBAAA0c;AAA9B,KAFoB,EAGpB;AAAEh5D,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAHoB,CAAxB;;QAUaF,a;;;;AAJb;;YAIaA;;;;yBAAAA,a;AAAa,O;AAAA,gBAFf,CAAC,SAAAjsE,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,SAAAujB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAA5B,EAA2D,gBAAAnL,mBAA3D,CAEe;;;;+EAAb9B,a,EAAa;AAAA,uBAHT,oBAAAkc,gBAGS,EAHS,2BAAAZ,sBAGT,EAHiC,yBAAAU,oBAGjC;AAHqD,kBACnE,SAAAjoF,YADmE,EACrD,QAAA8oD,WADqD,EACxC,EAAF,aAD0C,EACT,gBAAAilB,mBADS;AAGrD,O;AAF+D,K;;;;;2BAE5E9B,a,EAAa;cAJzB,OAAAhsE,QAIyB;eAJhB;AACR6B,sBAAY,EAAE,CAAC,oBAAAqmF,gBAAD,EAAmB,2BAAAZ,sBAAnB,EAA2C,yBAAAU,oBAA3C,CADN;AAER/nF,iBAAO,EAAE,CAAC,SAAAF,YAAD,EAAe,QAAA8oD,WAAf,EAA4B,SAAAujB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAA5B,EAA2D,gBAAAnL,mBAA3D;AAFD,S;AAIgB,Q;;;2BAHT,oBAAAoa,gB,EAAkB,CAAF,UAAE,EAAF,oBAAE,EAAF,UAAE,EAAF,OAAE,EAAF,mBAAE,EAAF,UAAE,EAAF,WAAE,EAAF,eAAE,EAAF,kBAAE,EAAF,WAAE,EAAF,eAAE,EAAF,kCAAE,EAAF,iBAAE,EAAF,kCAAE,EAAF,uBAAE,EAAF,sBAAE,EAAF,qBAAE,EAAF,+BAAE,EAAF,6BAAE,EAAF,qCAAE,EAAF,4BAAE,EAAF,kBAAE,EAAF,uBAAE,EAAF,oBAAE,EAAF,qBAAE,EAAF,qBAAE,EAAF,mBAAE,EAAF,4BAAE,EAAF,iBAAE,EAAF,UAAE,EAAF,eAAE,EAAF,SAAE,EAAF,eAAE,EAAF,aAAE,EAAF,qBAAE,EAAF,mBAAE,EAAF,oCAAE,EAAF,KAAE,EAAF,KAAE,EAAF,uBAAE,EAAF,gBAAE,EAAF,mBAAE,EAAF,qBAAE,EAAF,yBAAE,EAAF,sBAAE,EAAF,4BAAE,EAAF,0BAAE,EAAF,qBAAE,EAAF,uBAAE,EAAF,uBAAE,EAAF,sBAAE,EAAF,uBAAE,EAAF,6BAAE,EAAF,gCAAE,EAAF,aAAE,EAAF,aAAE,EAAF,OAAE,EAAF,wBAAE,EAAF,sBAAE,EAAF,kBAAE,EAAF,kBAAE,EAAF,oBAAE,EAAF,oBAAE,EAAF,YAAE,EAAF,gBAAE,EAAF,WAAE,EAAF,YAAE,EAAF,kBAAE,EAAF,aAAE,EAAF,aAAE,EAAF,eAAE,EAAF,uBAAE,EAAF,YAAE,EAAF,uBAAE,EAAF,sBAAE,EAAF,cAAE,EAAF,kBAAE,EAAF,mBAAE,EAAF,aAAE,EAAF,eAAE,EAAF,0BAAE,EAAF,yBAAE,EAAF,aAAE,EAAF,oBAAE,EAAF,eAAE,EAAF,WAAE,EAAF,gBAAE,EAAF,iBAAE,EAAF,iBAAE,EAAF,uBAAE,EAAF,aAAE,EAAF,YAAE,EAAF,eAAE,EAAF,kBAAE,EAAF,kBAAE,EAAF,eAAE,EAAF,gCAAE,EAAF,cAAE,EAAF,oBAAE,EAAF,iBAAE,EAAF,kBAAE,EAAF,eAAE,EAAF,eAAE,EAAF,UAAE,EAAF,aAAE,EAAF,cAAE,EAAF,iBAAE,EAAF,mCAAE,EAAF,kBAAE,EAAF,wBAAE,EAAF,6BAAE,EAAF,yBAAE,EAAF,yBAAE,EAAF,4BAAE,EAAF,wCAAE,EAAF,iCAAE,EAAF,oCAAE,EAAF,2BAAE,EAAF,qBAAE,EAAF,wBAAE,EAAF,kBAAE,EAAF,yBAAE,EAAF,oBAAE,EAAF,gBAAE,EAAF,8BAAE,EAAF,6BAAE,EAAF,iBAAE,EAAF,mBAAE,EAAF,4BAAE,EAAF,eAAE,EAAF,oBAAE,EAAF,WAAE,EAAF,iBAAE,EAAF,kBAAE,EAAF,sBAAE,EAAF,YAAE,EAAF,aAAE,EAAF,cAAE,EAAF,iBAAE,EAAF,oBAAE,EAAF,oBAAE,EAAF,gBAAE,EAAF,WAAE,EAAF,UAAE,EAAF,iBAAE,EAAF,iBAAE,EAAF,gBAAE,EAAF,mBAAE,EAAF,gBAAE,EAAF,mBAAE,EAAF,iBAAE,EAAF,mBAAE,EAAF,mBAAE,EAAF,iBAAE,EAAlB,oBAAAA,gBAAkB,6BAAAZ,sBAAA,EAAwB,yBAAAU,oBAAxB,C,EAA4C,qQ;;;;;;;;;;;;;;;;;;;;ACjB/E;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBwB;AACI;AACI;AACI;AAAA;AAAA;AAAA;AAAA,WAA8B,QAA9B,EAA8B;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9B;AAMH;AACD;AACJ;AACJ;;;;;AAPY;AAAA;AAFA,sDAA8B,gBAA9B,EAA8B,0BAA9B;AAOJ;AAAA;;;;;;;;AA+BZ;AACI;AACI;AACI;AAAA;AAAA;AAAA;AAAA,WAA8B,QAA9B,EAA8B;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9B;AAMH;AACD;AACJ;AACJ;;;;;AARY;AAAA,qDAAAnnF,IAAA;AADA,sDAA8B,gBAA9B,EAA8B,0BAA9B;AAOJ;AAAA;;;;QDnEfynF,sB;AAaT,wCAAc;AAAA;;AAVJ,aAAAC,gBAAA,GAAsC,IAAI,OAAAlmC,YAAJ,EAAtC;AACA,aAAAmmC,eAAA,GAAyC,IAAI,OAAAnmC,YAAJ,EAAzC;AAGA,aAAAomC,uBAAA,GAA8C,IAAI,OAAApmC,YAAJ,EAA9C;AACA,aAAAqmC,WAAA,GAAkC,IAAI,OAAArmC,YAAJ,EAAlC;AAGA,aAAAsmC,gBAAA,GAAwC,IAAI,OAAAtmC,YAAJ,EAAxC;AAEM;;;;mCAER,CAAW;;;iCAEH/2C,G,EAAa;AACzB,eAAKq9E,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC,EADyB,CACoB;;AAC7C,eAAKH,uBAAL,CAA6BllC,IAA7B;;AACA,cAAIj4C,GAAG,KAAK,MAAZ,EAAoB;AAChB,iBAAKu9E,UAAL,CAAgB;AAAEzlF,mBAAK,EAAE;AAAT,aAAhB;AACH,WAFD,MAEO,IAAIkI,GAAG,KAAK,OAAZ,EAAqB;AACxB,iBAAKu9E,UAAL,CAAgB;AAAEzlF,mBAAK,EAAE;AAAT,aAAhB;AACH;AACJ;;;iCAEekI,G,EAAa;AACzB;AACA,cAAIA,GAAG,KAAK,OAAZ,EAAqB;AACjB,iBAAKw9E,eAAL,GAAuB,KAAKC,MAAL,CAAYp+E,GAAZ,CAAgB,UAAC6C,IAAD,EAAU;AAC7C,qBAAO,MAAP,OAAO,CAAP,gCAAYA,IAAZ,GAAqB;AAAEwrE,uBAAO,EAAE;AAAX,eAArB,CAAO,EAAqC;AAAEgQ,uBAAO,EAAE;AAAX,eAArC,CAAP;AACH,aAFsB,CAAvB;AAGH;;AACD,eAAKF,eAAL,CAAqB5lF,OAArB,CAA6B,UAAC+lF,QAAD;AAAA,mBAAeA,QAAQ,CAACjQ,OAAT,GAAmB,KAAlC;AAAA,WAA7B;AACA,eAAKkQ,SAAL,GAAiB,KAAjB;AACA,eAAKN,UAAL,GAAkB,EAAlB;AACA,eAAKD,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACA,eAAKF,WAAL,CAAiBnlC,IAAjB;AACH;;;0CAEwBj4C,G,EAAa;AAAA,uDACX,KAAKw9E,eADM;AAAA;;AAAA;AAClC,sEAA6C;AAAA,kBAAlCG,QAAkC;AACzCA,sBAAQ,CAACjQ,OAAT,GAAmB,KAAKkQ,SAAxB;AACH;AAHiC;AAAA;AAAA;AAAA;AAAA;;AAIlC,cAAI59E,GAAG,KAAK,MAAZ,EAAoB;AAChB,iBAAKs9E,UAAL,GAAkB,KAAKE,eAAL,CACbp9E,MADa,CACN,UAACu9E,QAAD;AAAA,qBAAcA,QAAQ,CAACjQ,OAAvB;AAAA,aADM,EAEbruE,GAFa,CAET;AAAA,kBAAGoM,EAAH,UAAGA,EAAH;AAAA,kBAAOoyE,QAAP,UAAOA,QAAP;AAAA,kBAAiB76D,KAAjB,UAAiBA,KAAjB;AAAA,qBAA8B;AAC/BvQ,mBAAG,EAAE1T,MAAM,CAACqT,QAAP,CAAgBO,MAAhB,GAAyB,mBAAzB,GAA+ClH,EADrB;AAE/BoyE,wBAAQ,EAAEA,QAFqB;AAG/B76D,qBAAK,EAAEA;AAHwB,eAA9B;AAAA,aAFS,CAAlB;AAOH,WARD,MAQO,IAAIhjB,GAAG,KAAK,OAAZ,EAAqB;AACxB,iBAAKs9E,UAAL,GAAkB,KAAKE,eAAL,CACbp9E,MADa,CACN,UAACu9E,QAAD;AAAA,qBAAcA,QAAQ,CAACjQ,OAAvB;AAAA,aADM,EAEbruE,GAFa,CAET;AAAA,kBAAGoM,EAAH,UAAGA,EAAH;AAAA,kBAAO2yB,WAAP,UAAOA,WAAP;AAAA,kBAAoB7oC,IAApB,UAAoBA,IAApB;AAAA,qBAAgC;AACjCkd,mBAAG,EAAE1T,MAAM,CAACqT,QAAP,CAAgBO,MAAhB,GAAyB,wBAAzB,GAAoDyrB,WAApD,GAAkE,SAAlE,GAA8E3yB,EADlD;AAEjClW,oBAAI,EAAEA;AAF2B,eAAhC;AAAA,aAFS,CAAlB;AAMH;;AACD,eAAK8nF,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACH;;;2CAEyBz5E,C,EAAQ3B,I,EAAW;AACzC,cAAI2B,CAAC,CAAC6pE,OAAF,IAAa,CAACxrE,IAAI,CAACw7E,OAAvB,EAAgC;AAC5B;AACA,gBAAII,cAAc,GAAG;AACjBrrE,iBAAG,EAAE1T,MAAM,CAACqT,QAAP,CAAgBO,MAAhB,GAAyB,mBAAzB,GAA+CzQ,IAAI,CAACuJ,EADxC;AAEjBoyE,sBAAQ,EAAE37E,IAAI,CAAC27E,QAFE;AAGjB76D,mBAAK,EAAE9gB,IAAI,CAAC8gB;AAHK,aAArB;AAKA,iBAAKs6D,UAAL,CAAgBj8E,IAAhB,CAAqBy8E,cAArB;AACA,iBAAKT,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACH,WATD,MASO,IAAIz5E,CAAC,CAAC6pE,OAAF,IAAaxrE,IAAI,CAACw7E,OAAtB,EAA+B;AAClC;AACA,gBAAIK,eAAe,GAAG;AAClBtrE,iBAAG,EACC1T,MAAM,CAACqT,QAAP,CAAgBO,MAAhB,GACA,wBADA,GAEAzQ,IAAI,CAACk8B,WAFL,GAGA,SAHA,GAIAl8B,IAAI,CAACuJ,EANS;AAOlBlW,kBAAI,EAAE2M,IAAI,CAAC3M;AAPO,aAAtB;AASA,iBAAK+nF,UAAL,CAAgBj8E,IAAhB,CAAqB08E,eAArB;AACA,iBAAKV,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACH,WAbM,MAaA;AACH;AACA,gBAAMxlF,KAAK,GAAGoK,IAAI,CAACw7E,OAAL,GACR,KAAKJ,UAAL,CAAgBx3C,SAAhB,CAA0B,UAAChwB,GAAD;AAAA,qBAASA,GAAG,CAACvgB,IAAJ,KAAa2M,IAAI,CAAC3M,IAA3B;AAAA,aAA1B,CADQ,GAER,KAAK+nF,UAAL,CAAgBx3C,SAAhB,CAA0B,UAAChwB,GAAD;AAAA,qBAASA,GAAG,CAAC+nE,QAAJ,KAAiB37E,IAAI,CAAC27E,QAA/B;AAAA,aAA1B,CAFN,CAFG,CAKH;;AACA,gBAAI/lF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,mBAAKwlF,UAAL,CAAgBr3E,MAAhB,CAAuBnO,KAAvB,EAA8B,CAA9B;AACA,mBAAKulF,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACH;AACJ;AACJ;;;4CAEgB;AACb,iBAAO,KAAKE,eAAL,CAAqBjiE,IAArB,CAA0B,UAACoiE,QAAD;AAAA,mBAAcA,QAAQ,CAACjQ,OAAvB;AAAA,WAA1B,CAAP;AACH;;;mCAEiB7pE,C,EAAQ;AACtB,cAAIm6E,WAAW,GAAG;AAAEtQ,mBAAO,EAAE;AAAX,WAAlB;AACA,eAAK4P,UAAL,GAAkB,EAAlB;AACA,eAAKD,gBAAL,CAAsBplC,IAAtB,CAA2B,KAAKqlC,UAAhC;AACA,eAAKE,eAAL,GAAuB,EAAvB;AACA,eAAKI,SAAL,GAAiB,KAAjB;;AAEA,cAAI/5E,CAAC,CAAC/L,KAAF,KAAY,CAAhB,EAAmB;AACf;AACA,iBAAK0lF,eAAL,GAAuB,KAAKC,MAAL,CAAYp+E,GAAZ,CAAgB,UAAC6C,IAAD,EAAU;AAC7C,qBAAO,MAAP,OAAO,CAAP,gCAAYA,IAAZ,GAAqB87E,WAArB,CAAO,EAA8B;AAAEN,uBAAO,EAAE;AAAX,eAA9B,CAAP;AACH,aAFsB,CAAvB;AAGH,WALD,MAKO,IAAI75E,CAAC,CAAC/L,KAAF,KAAY,CAAhB,EAAmB;AACtB;AACA0O,kBAAM,CAACy3E,MAAP,CAAc,KAAKT,eAAnB,EAAoC,KAAKU,SAAzC;AACA,iBAAKV,eAAL,GAAuB,KAAKA,eAAL,CAAqBn+E,GAArB,CAAyB,UAAC6C,IAAD,EAAU;AACtD,qBAAO,MAAP,OAAO,CAAP,gCAAYA,IAAZ,GAAqB87E,WAArB,CAAO,EAA8B;AAAEN,uBAAO,EAAE;AAAX,eAA9B,CAAP;AACH,aAFsB,CAAvB;AAGH;AACJ;;;;;;AAhIL;;;uBAKaV,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,yiB;AAAA;AAAA;ACNnC;AAAwB;AAAc;AAEtC;AAGI;AAAA,mBAAqB,IAAAO,UAAA,QAArB;AAAuC,WAAvC;AAEA;AACI;AACI;AAAM;AAAA,mBAAY,IAAAY,QAAA,CAAS,MAAT,CAAZ;AAA4B,WAA5B;AACF;AACI;AACI;AACI;AACI;AAAA;AAAA,aAAuB,QAAvB,EAAuB;AAAA,mBACb,IAAAC,iBAAA,CAAkB,MAAlB,CADa;AACY,WADnC;AAGH;AACD;AACJ;AACJ;AACA;AACI;AAaJ;AACJ;AACA;AACI;AAAsB;AAAA,mBAAS,IAAAC,QAAA,CAAS,MAAT,CAAT;AAAyB,WAAzB;AAClB;AACJ;AACA;AACI;AACJ;AACJ;AACJ;AACJ;AACJ;AAEA;AACI;AACI;AAAM;AAAA,mBAAY,IAAAF,QAAA,CAAS,OAAT,CAAZ;AAA6B,WAA7B;AACF;AACI;AACI;AACI;AACI;AAAA;AAAA,aAAuB,QAAvB,EAAuB;AAAA,mBACb,IAAAC,iBAAA,CAAkB,OAAlB,CADa;AACa,WADpC;AAGH;AACD;AACJ;AACJ;AACA;AAaJ;AACA;AACI;AAAsB;AAAA,mBAAS,IAAAC,QAAA,CAAS,OAAT,CAAT;AAA0B,WAA1B;AAClB;AACJ;AACA;AACI;AACJ;AACJ;AACJ;AACJ;AACJ;AACJ;;;;AA1EgC;AAAA,kDAAuB,gBAAvB,EAAuB,0BAAvB;AAQH;AAAA;AAmBa;AAAA;AAeV;AAAA,kDAAuB,gBAAvB,EAAuB,0BAAvB;AAOP;AAAA;AAkBiB;AAAA;;;;;;;;;2BD3E7BrB,sB,EAAsB;cALlC,OAAA1jC,SAKkC;eALxB;AACPljD,kBAAQ,EAAE,qBADH;AAEPmjD,qBAAW,EAAE,kCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD;AAHJ,S;AAKwB,Q;;;;gBAC9B,OAAA1gD;;;gBACA,OAAAA;;;gBACA,OAAA2gD;;;gBACA,OAAAA;;;gBACA,OAAA3gD;;;gBACA,OAAAA;;;gBACA,OAAA2gD;;;gBACA,OAAAA;;;gBACA,OAAA3gD;;;gBACA,OAAAA;;;gBACA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBL;AAAA;AAAA;;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA,8C,CACA;;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLI;AACC;AACC;AACD;AACA;AACC;AAAsB;AAAmB;AACzC;AAAO;AAAgD;AACvD;AAAO;AAAc;AACtB;AAEA;AACC;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AACA;AAAwB;AAAA;;AAAA;;AAAA,iBAAS,WAAT;AAA2B,SAA3B;AACvB;AACD;AACA;AAA2C;AAAA;AAAA;AAAA;AAAS,kBAAA6kC,UAAA,cAAqB,CAArB;AAAyB,yBAAAC,gBAAA,cAA2B,CAA3B;AAA6B,SAA/D;AAC1C;AACD;AACD;AACD;;;;;;;AAjBgB;AAAA;AAGQ;AAAA;AACf;AAAA;AAKuG;AAAA;;;;;;;;AAUhH;AAAsG;AAAA;AAAA;AAAA;AAAA;AAErG;AACC;AACD;AACA;AACC;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAtC;AACA;AAAsE;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAA2B,SAA3B;AAA6B;AAAY;AAChH;AAED;;;;;AAJsH;AAAA;;;;;;AAanH;;;;;AAA0D;;;;;;AAH5D;AACC;AAAM;AAAmB;AACzB;AACC;AACD;AACD;;;;;AAJO;AAAA;AAE8E;AAAA;;;;;;AAKrF;AACC;AACA;AACC;AACD;AACD;;;;;AAFE;AAAA;;;;;;;;;;;;;;;;;;QDlCMC,qB;;;;;AAqBX;AAGE,qCACOxuE,SADP,EAEgCuwB,KAFhC,EAGMk+C,aAHN,EAIOC,mBAJP,EAKO/3D,OALP,EAMOgzB,KANP,EAOOglC,UAPP,EAO8B;AAAA;;AAAA;;AAE/B;AARQ,iBAAA3uE,SAAA,GAAAA,SAAA;AACyB,iBAAAuwB,KAAA,GAAAA,KAAA;AAC1B,iBAAAk+C,aAAA,GAAAA,aAAA;AACC,iBAAAC,mBAAA,GAAAA,mBAAA;AACA,iBAAA/3D,OAAA,GAAAA,OAAA;AACA,iBAAAgzB,KAAA,GAAAA,KAAA;AACA,iBAAAglC,UAAA,GAAAA,UAAA;AA9BN;;AACiB,iBAAAz3E,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAIZ,iBAAA6nC,YAAA,GAAe,IAAf;AACA,iBAAAC,aAAA,GAAgB,IAAhB;AAEA,iBAAAP,UAAA,GAAyB,EAAzB,CAsBwB,CAtBK;;AAC7B,iBAAAC,gBAAA,GAA+B,EAA/B,CAqBwB,CArBW;;AAGnC,iBAAAO,WAAA,GAAuB,KAAvB;AACA,iBAAAC,eAAA,GAA0B,cAA1B;AAEA,iBAAAC,YAAA,GAAe,EAAf;AACA,iBAAAC,gBAAA,GAAmB,qBAAAC,gBAAnB;AACA,iBAAA39E,KAAA,GAAa,CAAb;AACA,iBAAAy6B,KAAA,GAAgB,CAAhB;AAYwB;AAG7B;;;;mCAGiB;;;AACf,eAAKsiD,UAAL,GAAmBzU,SAAS,CAAC,CAAD,KAAC,KAAKtpC,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAE4+C,MAAb,CAA5B;AACH,eAAK30D,IAAL,GAAY,CAAH,KAAG,KAAK+V,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAE/V,IAAxB;AACC;;;uCAIoBtjB,K,EAAQk4E,c,EAAiB;AAAA;;AAC/C,eAAKN,WAAL,GAAmB,KAAnB;AACA,eAAKO,MAAL,GAAct6E,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAd;AACA,eAAKg6E,OAAL,GAAe,KAAKD,MAAL,CAAYE,UAAZ,CAAuB,IAAvB,CAAf;AACA,cAAMC,GAAG,GAAG,qBAAAN,gBAAA,CAAiB1jF,KAAjB,CAAuB,GAAvB,CAAZ;AACA,cAAM0pD,KAAK,GAAGh+C,KAAK,YAAYX,KAAjB,GAAyBW,KAAzB,GAAiC,mBAAI,IAAImhC,GAAJ,CAAQnhC,KAAK,CAACyE,MAAN,CAAau5C,KAArB,CAAJ,EAAiC9kD,MAAjC,CAAwC,UAACe,CAAD;AAAA,mBAAYq+E,GAAG,CAAC3sE,QAAJ,CAAa1R,CAAC,CAAC1C,IAAf,CAAZ;AAAA,WAAxC,CAA/C;AACA,cAAMghF,SAAS,GAAGL,cAAc,KAAG3jF,SAAjB,GAA6B,CAA7B,GAAkC,IAAI,KAAK6iF,UAAL,CAAgB5iF,MAAxE;AACAwpD,eAAK,CAACj/C,MAAN,CAAa,CAAb,EAAew5E,SAAf,EAA0B7nF,OAA1B,CAAmC,UAAAqtD,IAAI,EAAI;AAE1C,oBAAI,CAACy5B,mBAAL,CAAyBgB,aAAzB,CAAuCz6B,IAAvC,EAA6CxvC,IAA7C,CAAkD,UAACkqE,SAAD,EAAe;AAEhEhqF,wBAAU,CACT,UAAgBiqF,IAAhB,EAAsB;;;;;;;AAErB,iCAAMA,IAAI,CAACnB,aAAL,CAAmBoB,WAAnB,CAA+BF,SAA/B,EAA0C;AAAClnC,iCAAK,EAAE,qBAAAqnC,mBAAA,CAAoBrnC,KAA5B;AAAmCrkD,kCAAM,EAAE,qBAAA0rF,mBAAA,CAAoB1rF,MAA/D;AAAwE2rF,wCAAY,EAAE;AAAtF,2BAA1C,EACFtqE,IADE,CACG,UAAUuqE,UAAV,EAAsB;AAE3BJ,gCAAI,CAACnB,aAAL,CAAmBwB,WAAnB,CAA+BD,UAA/B,EAA2CvqE,IAA3C,CAAgD,UAAU8O,KAAV,EAAiB;AAEhEq7D,kCAAI,CAACN,OAAL,CAAaY,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B37D,KAAK,CAACk0B,KAAnC,EAA0Cl0B,KAAK,CAACnwB,MAAhD;AACAwrF,kCAAI,CAACP,MAAL,CAAY5mC,KAAZ,GAAoBl0B,KAAK,CAACk0B,KAA1B;AACAmnC,kCAAI,CAACP,MAAL,CAAYjrF,MAAZ,GAAqBmwB,KAAK,CAACnwB,MAA3B;AACAwrF,kCAAI,CAACN,OAAL,CAAaa,SAAb,CAAyB57D,KAAzB,EAAiC,CAAjC,EAAqC,CAArC,EAAyCA,KAAK,CAACk0B,KAA/C,EAAuDl0B,KAAK,CAACnwB,MAA7D;AAGA,kCAAMgsF,OAAO,GAAkDR,IAAI,CAACP,MAAL,CAAYgB,SAAZ,CAAsB,WAAtB,CAA/D;;AACA,kCAAGjB,cAAc,KAAG3jF,SAApB,EAA+B;AAC9BmkF,oCAAI,CAACtB,UAAL,CAAgBr4E,MAAhB,CAAuBm5E,cAAvB,EAAuC,CAAvC,EAA0C;AAAEx7D,sCAAI,EAAGw8D,OAAT;AAAkBtoF,uCAAK,EAAEsnF,cAAc,GAAC;AAAxC,iCAA1C;AACAQ,oCAAI,CAACrB,gBAAL,CAAsBt4E,MAAtB,CAA6Bm5E,cAA7B,EAA6C,CAA7C,EAAgD;AAAEx7D,sCAAI,EAAGw8D,OAAT;AAAkBtoF,uCAAK,EAAEsnF,cAAc,GAAC;AAAxC,iCAAhD;AACA,+BAHD,MAIK;AACJ,oCAAMtnF,KAAK,GAAG8nF,IAAI,CAACtB,UAAL,CAAgB5iF,MAAhB,GAAuB,CAArC;AACAkkF,oCAAI,CAACtB,UAAL,CAAgBj9E,IAAhB,CAAqB;AAAEuiB,sCAAI,EAAEw8D,OAAR;AAAiBtoF,uCAAK,EAAEA;AAAxB,iCAArB;AACA8nF,oCAAI,CAACrB,gBAAL,CAAsBl9E,IAAtB,CAA2B;AAAEuiB,sCAAI,EAAEw8D,OAAR;AAAiBtoF,uCAAK,EAAEA;AAAxB,iCAA3B;AACA;;AACD8nF,kCAAI,CAACjmC,KAAL,CAAWoB,aAAX,GAlBgE,CAoBhE;AAEA,6BAtBD,WAuBO,UAACvjC,KAAD,EAAW;AACjBtY,qCAAO,CAACV,GAAR,CAAY,+BAAZ,EAA6CgZ,KAA7C;AACA,6BAzBD;AA0BA,2BA7BE,WA8BI,UAACA,KAAD,EAAW;AACjBtY,mCAAO,CAACV,GAAR,CAAY,+BAAZ,EAA6CgZ,KAA7C;AACA,2BAhCE,CAAN;;;;;;;;;AAkCA,eArCQ,EAqCN,CArCM,EAqCH,QArCG,CAAV;AAsCA,aAxCD,WAyCO,UAACA,KAAD,EAAW;AACjBtY,qBAAO,CAACV,GAAR,CAAY,8BAAZ,EAA4CgZ,KAA5C;AACA,aA3CD;AA6CA,WA/CD;AAiDA;;;iCAGQ;AAAA;;AACR,eAAKsnE,WAAL,GAAmB,KAAnB;AACA,eAAKwB,cAAL,GAAsB,CAAtB;AACA,cAAIC,GAAG,GAAsB,EAA7B;AACA,eAAKh/E,KAAL,GAAa,CAAb;AACA,eAAKy6B,KAAL,GAAa,KAAKuiD,gBAAL,CAAsB7iF,MAAnC,CALQ,CAOR;;AACA,eAAK6iF,gBAAL,CAAsB3mF,OAAtB,CAA8B,UAAE4oF,GAAF,EAAO3oF,CAAP,EAAY;AACzC,gBAAM6nD,QAAQ,GAAG,IAAI+gC,QAAJ,EAAjB;;AACA,gBAAMx7B,IAAI,GAAG,QAAI,CAACy5B,mBAAL,CAAyBgC,SAAzB,CAAmCF,GAAG,CAAC58D,IAAvC,CAAb;;AAEA87B,oBAAQ,CAACjN,MAAT,CAAiB,MAAjB,EAAyBwS,IAAzB,YAAkC,QAAI,CAACz6B,IAAL,CAAU5f,KAAV,CAAgBpP,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlC,mBAAwEglF,GAAG,CAAC1oF,KAA5E;AAEAyoF,eAAG,CAACl/E,IAAJ,CAAS,QAAI,CAAC4nC,iBAAL,CAAuB,QAAvB,EAAiCyW,QAAjC,EAA2Cp1C,IAA3C,CAAiD,YAAAiN,UAAA,CAAW,UAAAV,GAAG;AAAA,qBAAI,OAAAY,EAAA,CAAGZ,GAAG,CAAC0G,MAAP,CAAJ;AAAA,aAAd,CAAjD,CAAT;AAEA,WARD;AAYA,eAAKhmB,YAAL,qBAAsC,OAAA6gC,QAAA,CAASmoD,GAAG,CAAClhF,GAAJ,CAAQ,UAAAqjB,CAAC;AAAA,mBAAIA,CAAC,CAACpY,IAAF,CAC1D,YAAAq2E,GAAA,CAAI,UAAAz+E,IAAI;AAAA,qBAAI,QAAI,CAAC0+E,mBAAL,CAAyB1+E,IAAzB,CAAJ;AAAA,aAAR,CAD0D,CAAJ;AAAA,WAAT,CAAT,EAIpCzK,SAJoC,CAI1B,UAAAyP,KAAK,EAAI;AAEjB,oBAAI,CAACq5B,KAAL,CAAW4+C,MAAX,GAAoB,EAApB;AACAj4E,iBAAK,CAACtP,OAAN,CAAc,UAAC8P,GAAD,EAAM7P,CAAN,EAAa;AAC1B,kBAAG,CAAA6P,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEgJ,OAAL,MAAiB,6BAApB,EAAoD;AAEnD,wBAAI,CAACouE,WAAL,GAAmB,KAAnB;AAEA,eAJD,MAKM;AACL,oBAAM+B,QAAQ,GAAG,CAAC,EAAD,EAAK,IAAL,EAAU,IAAV,EAAe,IAAf,CAAjB;AACA,wBAAI,CAACC,QAAL,aAAmBjpF,CAAC,GAAC,CAArB,SAAyBgpF,QAAQ,CAAChpF,CAAC,GAAC,CAAH,CAAjC;;AACA,wBAAI,CAACyB,KAAL;;AACA,wBAAI,CAACwlF,WAAL,GAAmB,IAAnB;AACA;;AACD,kBAAGjnF,CAAC,KAAM,QAAI,CAAC0mF,gBAAL,CAAsB7iF,MAAtB,GAA6B,CAAvC,EAA2C;AAC1C,wBAAI,CAAC6iF,gBAAL,GAAwB,EAAxB;AACA,wBAAI,CAACQ,eAAL,GAAwB,UAAxB;;AACA,wBAAI,CAAC73E,KAAL,CAAW+wC,IAAX,CAAgB,QAAI,CAAC1X,KAAL,CAAW4+C,MAA3B;AACA;AACD,aAjBD;;AAkBA,oBAAI,CAACxlC,KAAL,CAAWoB,aAAX;AAEA,WA3BkC,EA4BnC,UAAAvjC,KAAK,EAAI;AACR,oBAAI,CAAC+oB,KAAL,CAAW4+C,MAAX,GAAoB,EAApB;;AACA,oBAAI,CAAC7lF,KAAL;;AACA,oBAAI,CAACwlF,WAAL,GAAmB,IAAnB;AACA5/E,mBAAO,CAACV,GAAR,CAAY,oCAAZ,EAAkDgZ,KAAlD;;AACA,oBAAI,CAACmiC,KAAL,CAAWoB,aAAX;AACA,WAlCkC,CAAtC;AAqCA;;;4CAE2B74C,I,EAAM;AACjC,cAAG,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEwO,OAAN,MAAkB,6BAArB,EAAqD;AACpD,iBAAKnP,KAAL;AACA,iBAAK++E,cAAL,GAAsB,KAAKtkD,KAAL,GAAa,CAAb,GAAiBliC,IAAI,CAACszB,KAAL,CAAY,KAAK7rB,KAAL,GAAa,KAAKy6B,KAAnB,GAA4B,GAAvC,CAAjB,GAA+D,CAArF;AACA,iBAAK2d,KAAL,CAAWoB,aAAX;AACA;AACD;;;gCAGO;AACP,eAAKulC,cAAL,GAAsB,IAAtB;AACA,eAAK3mC,KAAL,CAAWoB,aAAX;AACA;;;kCAEiBgmC,K,EAAO;AACxB,iBAAO,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,GAAK,MAAL,GAAAA,KAAK,CAAEjpF,KAAP,IAAe,EAAf,cAAyB,IAAIsB,IAAJ,EAAD,CAAa02B,OAAb,EAAxB,CAAP;AACA;AAGD;;;;;;;;;0CAM0BzX,W,EAAqB1B,S,EAAwF;AAAA,cAApEyB,uBAAoE,uEAAjC,KAAiC;AAAA,cAA1BnB,YAA0B,uEAAF,EAAE;AACtI,cAAMxE,GAAG,8BAAuB4F,WAAvB,CAAT;AACA,cAAM3S,IAAI,GAAGiR,SAAb;AAEA,cAAM2B,KAAK,GAAG,KAAKtI,SAAL,CAAesE,IAAf,CAAoBgE,KAAlC,CAJsI,CAI7F;;AAEzC,cAAMG,OAAO,GAAG,IAAI,OAAAC,WAAJ,CAAgB;AAC/B,8CAA2BJ,KAA3B;AAD+B,WAAhB,CAAhB;AAID,cAAMK,cAAc,GAAG;AAAEF,mBAAO,EAAEA;AAAX,WAAvB;AAEC,iBAAO,KAAKkmE,UAAL,CAAgBhnE,IAAhB,CAAqBlF,GAArB,EAA0B/M,IAA1B,EAAgC,MAAF,OAAE,CAAF,EAAE,EACjCiT,cADiC,CAAhC,CAAP,CAZsI,CAgBtI;AAEA;;;;MA7MwC,OAAA1iB,a;;AAN3C;;;uBAMauoF,qB,EAAqB,wC,EAAA,qBA0BvB,SAAAnlC,eA1BuB,C,EA0BR,sC,EAAA,4C,EAAA,sC,EAAA,0C,EAAA,mC;AAAA,K;;;YA1BbmlC,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,4xD;AAAA;AAAA;ACjClC;AACI;AACE;AAA0C;AAAqB;AAClE;AACC;AACC;AACF;AACA;AACC;AAEF;AACC;AACC;AACC;AAAuB;AAA2C;AAClE;AAAgC;AAAyF;AAC1H;AACD;AAEA;AACC;AAqBA;AAYD;AAEA;AACC;AACC;AAQA;AAOD;AAGA;AACC;AAA4F;AAAA,mBAAS,IAAAtE,MAAA,EAAT;AAAiB,WAAjB;AAAoB;AAAO;AACxH;AACD;AACD;AAGF;;;;AA/EgD;AAAA;AAGjC;AAAA;AAQa;AAAA;AAMC;AAAA;AAqBpB;AAAA;AAeuC;AAAA;AACV;AAAA;AAQX;AAAA;AAW4B;AAAA;;;;;;;;;;2BD1C1CsE,qB,EAAqB;cANjC,OAAAllC,SAMiC;eANvB;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,gCAAD,CAHJ;AAIT0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJhC,S;AAMuB,Q;;;;;;kBA0B9B,OAAAxU,M;mBAAO,SAAAyS,e;;;;;;;;;;;;;;;gBAxBL,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;AEnCN;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMwmB,MAAM,GAAW,CACrB;AAAEr8C,UAAI,EAAE,EAAR;AACEw8C,cAAQ,EAAE,CACR;AAAEx8C,YAAI,EAAE,EAAR;AAAYs8C,iBAAS,EAAE,uBAAA8gB;AAAvB,OADQ,EAER;AACEp9D,YAAI,EAAE,cADR;AAEEs8C,iBAAS,EAAE,iCAAA+gB;AAFb,OAFQ;AADZ,KADqB,CAAvB;;QAgBaC,sB;;;;AAJb;;YAIaA;;;;yBAAAA,sB;AAAsB,O;AAAA,gBAHxB,CAAC,SAAApgB,YAAA,CAAa8M,QAAb,CAAsB3N,MAAtB,CAAD,CAGwB,EAFvB,SAAAa,YAEuB;;;;+EAAtBogB,sB,EAAsB;AAAA;AAAA,kBAFvB,SAAApgB,YAEuB;AAAA,O;AAFX,K;;;;;2BAEXogB,sB,EAAsB;cAJlC,OAAAxsF,QAIkC;eAJzB;AACRC,iBAAO,EAAE,CAAC,SAAAmsE,YAAA,CAAa8M,QAAb,CAAsB3N,MAAtB,CAAD,CADD;AAERzpE,iBAAO,EAAE,CAAC,SAAAsqE,YAAD;AAFD,S;AAIyB,Q;;;;;;;;;;;;;;;;;;;;;;ACtBnC;AAAA;AAAA;;AAQA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAMA;AAAA;AAAA;;AAKA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BI;AACI;AACJ;;;;;;AAwBgB;AACI;AACJ;;;;;;AAEI;;;;;;;;AAYJ;AACI;AAKI;AAAA;AAAA;AAAA;AAAA,WAA+C,iBAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C,EAA+C,yBAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C,EAA+C,aAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C,EAA+C,kBAA/C,EAA+C;AAAA;AAAA;AAAA;AAAA,SAA/C;AAOC;AACT;;;;;AAZQ;AAAA,+CAAiB,iBAAjB,EAAiB,sBAAjB,EAAiB,YAAjB,EAAiB,iBAAjB,EAAiB,WAAjB,EAAiB,gBAAjB,EAAiB,QAAjB,EAAiB,aAAjB,EAAiB,WAAjB,EAAiB,gBAAjB;;;;;;;;AAehB;AAGI;AAAA;AAAA;AAAA;AAAA,WAAyC,YAAzC,EAAyC;AAAA;AAAA;AAAA;AAAA,SAAzC;AAEH;;;;;AAHG;;;;;;;;AA1DZ;AACI;AACI;AACI;AACI;AACI;AACJ;AACA;AAAmB;AAAmB;AACtC;AACI;AACJ;AACJ;AACJ;AACA;AACI;AAAuB;AAAwD;AAE/E;AACI;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AAGJ;AAEA;AAMI;AAAA;AAAA;AAAA;AAAA;AAkBR;AACA;AAMJ;AACJ;;;;;;;;;AAjDmC;AAAA;AASL;AAAA,6CAAgC,UAAhC,EAAgC,GAAhC;AAUd;AAAA,wDAAqC,yBAArC,EAAqC,aAArC,EAAqC,gCAArC,EAAqC,aAArC,EAAqC,kCAArC,EAAqC,qCAArC;AAwBJ;AAAA;;;;;;;;;;;;AAYhB;AACI;AAgBJ;;;;;;AAfQ;AAAA,8CAAmB,kBAAnB,EAAmB,IAAnB,EAAmB,KAAnB,EAAmB,wBAAnB,EAAmB,WAAnB,EAAmB,6CAAnB,EAAmB,UAAnB,EAAmB,mCAAnB,EAAmB,WAAnB,EAAmB,SAAnB,EAAmB,YAAnB,EAAmB,SAAnB,EAAmB,aAAnB,EAAmB,KAAnB,EAAmB,sBAAnB,EAAmB,GAAnB,EAAmB,QAAnB,EAAmB,CAAnB,EAAmB,OAAnB,EAAmB,CAAnB,EAAmB,OAAnB,EAAmB,0BAAnB,EAAmB,OAAnB,EAAmB,GAAnB,EAAmB,SAAnB,EAAmB,2BAAnB;;;;;;;;;;QDtCKkgB,kB;;;;;AA6DT,kCACY/rE,QADZ,EAEY0R,OAFZ,EAGYD,IAHZ,EAIYkwB,OAJZ,EAKYD,sBALZ,EAMYlnC,KANZ,EAOY0xE,KAPZ,EAQYC,gBARZ,EAQ8C;AAAA;;AAAA;;AAE1C;AATQ,iBAAAnsE,QAAA,GAAAA,QAAA;AACA,iBAAA0R,OAAA,GAAAA,OAAA;AACA,iBAAAD,IAAA,GAAAA,IAAA;AACA,iBAAAkwB,OAAA,GAAAA,OAAA;AACA,iBAAAD,sBAAA,GAAAA,sBAAA;AACA,iBAAAlnC,KAAA,GAAAA,KAAA;AACA,iBAAA0xE,KAAA,GAAAA,KAAA;AACA,iBAAAC,gBAAA,GAAAA,gBAAA;AApEL,iBAAAhmE,MAAA,GAAkB,EAAlB;AAGA,iBAAAs9C,MAAA,GAAS,KAAT;AAEA,iBAAA8kB,eAAA,GAAkB,CACrB;AACI3kE,eAAK,EAAE,EADX;AAEI60D,iBAAO,EAAE,KAFb;AAGIjiE,YAAE,EAAE,EAHR;AAII2yB,qBAAW,EAAE,EAJjB;AAKI7oC,cAAI,EAAE,EALV;AAMIqV,eAAK,EAAE,EANX;AAOIizE,kBAAQ,EAAE,EAPd;AAQIH,iBAAO,EAAE;AARb,SADqB,CAAlB;AAaA,iBAAAJ,UAAA,GAAa,EAAb;AAEA,iBAAAM,SAAA,GAAqB,KAArB;AAIP;;AACgB,iBAAAzjF,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAKhB;;AACO,iBAAAiW,MAAA,GAA0B,EAA1B;AAEP;;AACO,iBAAAmyB,WAAA,GAA0B,EAA1B;AAEP;;AACO,iBAAAmqC,YAAA,GAAe,EAAf;AAEP;;AACO,iBAAAE,WAAA,GAAwB,EAAxB;AAEP;;AACgB,iBAAAC,WAAA,GAAmC,CAC/C;AAAEv2E,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAD+C,EAE/C;AAAEttC,cAAI,EAAE,QAAR;AAAkBkW,YAAE,EAAE,QAAtB;AAAgCojD,eAAK,EAAE,SAAvC;AAAkDhsB,gBAAM,EAAE;AAA1D,SAF+C,EAG/C;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAH+C,EAI/C;AAAEttC,cAAI,EAAE,OAAR;AAAiBkW,YAAE,EAAE,OAArB;AAA8BojD,eAAK,EAAE,SAArC;AAAgDhsB,gBAAM,EAAE;AAAxD,SAJ+C,EAK/C;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAL+C,EAM/C;AAAEttC,cAAI,EAAE,WAAR;AAAqBkW,YAAE,EAAE,WAAzB;AAAsCojD,eAAK,EAAE,SAA7C;AAAwDhsB,gBAAM,EAAE;AAAhE,SAN+C,EAO/C;AAAEttC,cAAI,EAAE,UAAR;AAAoBkW,YAAE,EAAE,UAAxB;AAAoCojD,eAAK,EAAE,SAA3C;AAAsDhsB,gBAAM,EAAE;AAA9D,SAP+C,CAAnC;AAUT,iBAAAw+C,gBAAA,GAAmB,CAAnB;AAEA,iBAAAC,OAAA,GAAU,EAAV;AAIA,iBAAAC,aAAA,GAAgB,KAAhB;AASuC;AAG7C;;;;uCAEqB5iE,I,EAAc;AAChC,eAAK0iE,gBAAL,GAAwB1iE,IAAxB;AACH;;;6CAE2BA,I,EAAU;AAClC,eAAK2iE,OAAL,GAAe3iE,IAAf;AACH;;;0CAEwBA,I,EAAc;AACnC,eAAK0iE,gBAAL,GAAwB1iE,IAAxB;AACA,eAAK6iE,aAAL;AACA,eAAKL,KAAL,CAAWpmC,aAAX;AACH;;;mCAEc;AAAA;;AACX,eAAK9lC,QAAL,CAAcwP,KAAd,GAAsB,qBAAtB;;AAEA,eAAKkC,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,oBAAI,CAACivB,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,qBAAOA,CAAP;AAAA,aAAN,CAA3B,EAA4C9Y,SAA5C,CAAsD,YAAM;AACxD;AACA,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EADG;AAErBmc,2BAAW,EAAE,KAFQ;AAGrBC,2BAAW,EAAE,QAAI,CAACnhB;AAHG,eAAX,CAAd;AAKA,sBAAI,CAACytE,WAAL,GAAmB,QAAI,CAACC,WAAL,CAAiBzsE,GAAjB,CAAqB,UAAC6C,IAAD;AAAA,iCAAaA,IAAI,CAACuJ,EAAlB;AAAA,eAArB,CAAnB;;AACA,sBAAI,CAAClU,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,EAAoCN,SAApC,CAA8C,YAAM;uBAAA,CAChD;;;AACA,wBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AACrBlR,sBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EADG;AAErBmc,6BAAW,EAAE,KAFQ;AAGrBC,6BAAW,EAAE,QAAI,CAACnhB;AAHG,iBAAX,CAAd;AAKA,oBAAMie,QAAQ,GAAG,QAAI,CAACqK,IAAL,CAAUrK,QAA3B;AACA,wBAAI,CAACkwD,UAAL,GAAkBlwD,QAAQ,GAAG,IAAH,GAAU,KAApC;;AACA,oBAAI,CAAC,QAAI,CAACkwD,UAAV,EAAsB;AAClB;AACH;AAED;;;AACA,oBAAI,CAAClwD,QAAQ,CAAChN,MAAT,CAAgBrS,IAAhB,CAAqB,UAAC2iC,GAAD;AAAA,yBAASA,GAAG,CAACl0B,EAAJ,KAAW,QAAI,CAACkgE,YAAzB;AAAA,iBAArB,CAAL,EAAkE;AAC9D,0BAAI,CAACA,YAAL,GAAoB,CAAH,KAAGtvD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,GAAQ,MAAR,GAAAA,QAAQ,CAAEhN,MAAV,CAAiB,CAAjB,OAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAG5D,EAAzC;;AACA,0BAAI,CAAC+gE,WAAL;AACH;;AACD,wBAAI,CAACA,WAAL;;AACA,wBAAI,CAACn9D,MAAL,GAAc,CAAC;AAAE5D,oBAAE,EAAE,EAAN;AAAUlW,sBAAI,EAAE;AAAhB,iBAAD,EAAwCi0B,MAAxC,CACVnN,QAAQ,CAAChN,MADC,CAAd;;AAGA,wBAAI,CAACA,MAAL,CAAY3N,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,yBACbA,CAAC,CAACrM,IAAF,CAAOsM,aAAP,CAAqBF,CAAC,CAACpM,IAAvB,EAA6BkG,SAA7B,EAAwC;AACpCgxE,2BAAO,EAAE,IAD2B;AAEpCC,qCAAiB,EAAE;AAFiB,mBAAxC,CADa;AAAA,iBAAjB;;AAMA,wBAAI,CAAClrC,WAAL,GAAmB,CAAC;AAAE/1B,oBAAE,EAAE,EAAN;AAAUlW,sBAAI,EAAE;AAAhB,iBAAD,EAA6Ci0B,MAA7C,CACf,QAAI,CAAC9C,IAAL,CAAU8a,WADK,CAAnB;AAGH,eA/BD,CAFJ;AAmCH,aA3CD;AA4CH,WA7CD;AA8CH;;;sCAEoB;AAAA;;AACjB,eAAKmV,sBAAL,CAA4B7M,OAA5B,CAAoC,KAAK6hC,YAAL,IAAqB,KAAKjlD,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA5E;;AACA,eAAK81E,aAAL,GAAqB,IAArB;;AACA,eAAK56D,OAAL,CAAaoiB,UAAb,CAAwB;AAACvgB,oBAAQ,EAAE,KAAK9B,IAAL,CAAUrK,QAAV,CAAmB5Q;AAA9B,WAAxB,EAA4DhU,SAA5D,CACI,UAACiQ,GAAD,EAAS;AACL,gBAAMhQ,IAAI,GAAGgQ,GAAG,CAACrI,GAAJ,CAAQ,UAACxH,CAAD;AAAA,qBAAO,QAAI,CAAC8uB,OAAL,CAAatP,OAAb,CAAqBxf,CAArB,CAAP;AAAA,aAAR,CAAb;;AACA,oBAAI,CAAC++C,OAAL,CAAajL,QAAb,CAAsB,CAAC,aAAD,CAAtB;;AACA,oBAAI,CAAC01C,gBAAL,GAAwB,CAAxB;;AACA,oBAAI,CAACG,aAAL,oBAAuB9pF,IAAvB;AACH,WANL;AAOH;;;sCAEoB0jB,M,EAAS;;;AAC1B,cAAMpG,OAAO,GAAG,CAAC,KAAKgO,KAAN,GAAc,KAAK0D,IAAL,CAAUrK,QAAV,CAAmB5Q,EAAjC,GAAsC,KAAKuX,KAA3D;AACA;;AACA,eAAK5H,MAAL,GAAeA,MAAM,sBAAOA,MAAP,IAAiB,KAAKuL,OAAL,CAAavmB,MAAb,CAAoB,UAACmQ,CAAD;AAAA,mBAAOA,CAAC,CAAC+L,KAAF,CAAQ1f,OAAR,CAAgBoY,OAAhB,KAA4B,CAAnC;AAAA,WAApB,CAAtC;AACA,eAAK5C,QAAL,GAAgB,KAAKsU,IAAL,CAAUrK,QAAV,CAAmB9mB,IAAnC;AACA,cAAMksF,cAAc,GAAG,EAAvB;;AACA,eAAK,IAAI5pF,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG,KAAKujB,MAAL,CAAY1f,MAAhC,EAAwC7D,IAAC,EAAzC,EAA6C;AACzC,gBAAI,KAAKujB,MAAL,CAAYvjB,IAAZ,EAAe4lC,MAAnB,EAA2B;AAEvBgkD,4BAAc,CAACpgF,IAAf,CAAoB;AAChBw8E,wBAAQ,EAAE,KAAKziE,MAAL,CAAYvjB,IAAZ,EAAeyuB,UADT;AAEhBo7D,uBAAO,EAAE,KAAKtmE,MAAL,CAAYvjB,IAAZ,EAAe4lC,MAFR;AAGhBza,qBAAK,EAAE,KAAK5H,MAAL,CAAYvjB,IAAZ,EAAemrB,KAAf,CAAqBqD,UAHZ;AAIhBtH,wBAAQ,EAAE,KAAK3D,MAAL,CAAYvjB,IAAZ,EAAeknB,QAJT;AAKhB4iE,wBAAQ,EAAE,KAAKvmE,MAAL,CAAYvjB,IAAZ,EAAeulB,oBALT;AAMhBH,wBAAQ,EAAE,KAAK7B,MAAL,CAAYvjB,IAAZ,EAAeolB,QANT;AAOhB/K,wBAAQ,EAAE,KAAKkJ,MAAL,CAAYvjB,IAAZ,EAAeqa,QAPT;AAQhBg1B,yBAAS,EAAE,CAAF,KAAE,KAAK9rB,MAAL,CAAYvjB,IAAZ,OAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEqvC,SARX;AAShBD,0BAAU,EAAE,CAAF,KAAE,KAAK7rB,MAAL,CAAYvjB,IAAZ,OAAc,IAAd,IAAc,aAAd,GAAc,MAAd,GAAc,GAAEovC,UATZ;AAUhBr8B,qBAAK,EAAE,KAAKwQ,MAAL,CAAYvjB,IAAZ,EAAe+S,KAVN;AAWhBg3E,0BAAU,EAAE,KAAKxmE,MAAL,CAAYvjB,IAAZ,CAXI;AAYhB4T,kBAAE,EAAE,KAAK2P,MAAL,CAAYvjB,IAAZ,EAAe4T,EAZH;AAahB4Q,wBAAQ,EAAE,KAAKjB,MAAL,CAAYvjB,IAAZ,EAAewkB;AAbT,eAApB;AAeH;AACJ;;AAED,eAAKohE,MAAL,aAAkBgE,cAAlB,EA3B0B,CA2BS;;AAEnC,cAAIzD,WAAW,GAAG;AAAEtQ,mBAAO,EAAE;AAAX,WAAlB;AACA,eAAK8P,eAAL,GAAuB,KAAKC,MAAL,CAAYp+E,GAAZ,CAAgB,UAAC6C,IAAD,EAAU;AAC7C,mBAAO,MAAP,OAAO,CAAP,kBAAYA,IAAZ,CAAO,EAAc87E,WAAd,CAAP;AACH,WAFsB,CAAvB;AAGA,eAAKE,SAAL,GAAiB,KAAKx3D,IAAL,CAAUrK,QAAV,CAAmBhN,MAApC;AACA,eAAKkyE,aAAL,GAAqB,KAArB;AACA,eAAKJ,KAAL,CAAWpmC,aAAX;AACH;;;yCAMuB;AACpB,eAAK2d,MAAL,GAAc,KAAd;AACA,eAAK4kB,UAAL,GAAkB,EAAlB;AACA,eAAKE,eAAL,CAAqB5lF,OAArB,CAA6B,UAAC+lF,QAAD;AAAA,mBAAeA,QAAQ,CAACjQ,OAAT,GAAmB,KAAlC;AAAA,WAA7B;AACA,eAAKyT,KAAL,CAAWpmC,aAAX;AACH;;;2CAEyB8mC,O,EAAgB;AACtC,eAAKvE,UAAL,GAAkBuE,OAAlB;AACH;;;yCAEuB;AAAA;;AACpB;;;AAGA,eAAKT,gBAAL,CAAsBU,GAAtB,GAA4B,IAAI,kBAAJ,EAA5B;AACA,cAAIC,MAAJ;AACA,eAAKzE,UAAL,CAAgB1lF,OAAhB,CAAwB,UAACsK,IAAD,EAAOrK,CAAP,EAAa;AACjC;AACA,gBAAMmqF,MAAM,GAAGj9E,QAAQ,CAACC,aAAT,mBAAkCnN,CAAlC,UAAf;AACA,gBAAIoqF,SAAS,GAAQ,IAArB;;AACA,gBAAI//E,IAAI,CAAC27E,QAAT,EAAmB;AACfkE,oBAAM,GAAG,IAAT;AACAE,uBAAS,GAAG,QAAI,CAACb,gBAAL,CAAsBc,UAAtB,CAAiCF,MAAjC,EAAyC9/E,IAAI,CAAC27E,QAA9C,EAAwD,KAAxD,EAA+D37E,IAAI,CAAC8gB,KAApE,CAAZ,CAFe,CAEyE;AAC3F,aAHD,MAGO,IAAI9gB,IAAI,CAAC3M,IAAT,EAAe;AAClBwsF,oBAAM,GAAG,KAAT;AACAE,uBAAS,GAAG,QAAI,CAACb,gBAAL,CAAsBc,UAAtB,CAAiCF,MAAjC,EAAyC9/E,IAAI,CAAC3M,IAA9C,EAAoD,IAApD,EAA0D,EAA1D,CAAZ,CAFkB,CAEyD;AAC9E,aAVgC,CAWjC;;;AACA,oBAAQ,CAACsC,CAAC,GAAG,CAAL,IAAU,CAAlB;AACI,mBAAK,CAAL;AACI,wBAAI,CAACupF,gBAAL,CAAsBU,GAAtB,CAA0BK,QAA1B,CAAmCF,SAAnC,EAA8C,MAA9C,EAAsD,CAAtD,EAAyD,CAAzD,EAA4D,GAA5D,EAAiE,GAAjE;;AACA;;AACJ,mBAAK,CAAL;AACI,wBAAI,CAACb,gBAAL,CAAsBU,GAAtB,CAA0BK,QAA1B,CAAmCF,SAAnC,EAA8C,MAA9C,EAAsD,GAAtD,EAA2D,CAA3D,EAA8D,GAA9D,EAAmE,GAAnE;;AACA;;AACJ,mBAAK,CAAL;AACI,wBAAI,CAACb,gBAAL,CAAsBU,GAAtB,CAA0BK,QAA1B,CAAmCF,SAAnC,EAA8C,MAA9C,EAAsD,CAAtD,EAAyD,GAAzD,EAA8D,GAA9D,EAAmE,GAAnE;;AACA;;AACJ,mBAAK,CAAL;AACI,wBAAI,CAACb,gBAAL,CAAsBU,GAAtB,CAA0BK,QAA1B,CAAmCF,SAAnC,EAA8C,MAA9C,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE,EAAqE,GAArE;;AACA,wBAAI,CAACb,gBAAL,CAAsBU,GAAtB,CAA0BM,OAA1B;;AACA;AAbR;AAeH,WA3BD;AA4BA,eAAKhB,gBAAL,CAAsBU,GAAtB,CAA0Bh1C,IAA1B,WAAkC,KAAK16B,QAAvC,gBAAqD2vE,MAAM,6BAA3D;AACH;;;4BAlDqB;;;AAClB,iBAAO,YAAKr7D,IAAL,CAAUrK,QAAV,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAEje,QAApB,KAAgC4U,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAvC;AACH;;;;MA/LmC,OAAAhd,a;;AAPxC;;;uBAOa+qF,kB,EAAkB,2C,EAAA,sC,EAAA,4C,EAAA,+B,EAAA,4C,EAAA,8B,EAAA,0C,EAAA,yC;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,g2C;AAAA;AAAA;ACtC/B;AACI;AACA;AAGA;AAiEA;AACH;AACD;AAEA;;;;AAxEuB;AAAA;AAGA;AAAA;AAiEU;AAAA;AACG;AAAA;AAGF;AAAA;;;;;;;;;;;2BDpCrBA,kB,EAAkB;cAP9B,OAAA1nC,SAO8B;eAPpB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD,CAHJ;AAIPiX,uBAAa,EAAE,OAAAC,iBAAA,CAAkB7yC,IAJ1B;AAKPq9B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AALlC,S;AAOoB,Q;;;;;;;;;;;;;;;;;;;;gBA0B1B,OAAAtiD;;;gBAGA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEnEL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAgCa6nE,e;;;;AA5Bb;;YA4BaA;;;;yBAAAA,e;AAAe,O;AAAA,iBANf,CACT,WAAA0hB,aADS,EAET,WAAAC,mBAFS,EAGT,qBAAAC,gBAHS,C;AAIV,gBAxBQ,CACP,SAAA9tF,YADO,EAEP,4BAAAysF,sBAFO,EAGP,gBAAA1e,mBAHO,EAIP,QAAAggB,cAJO,EAKP,YAAAC,kBALO,EAMP,OAAAC,aANO,EAOP,YAAA7jB,kBAPO,EAQP,QAAAthB,WARO,EASP,QAAAC,mBATO,EAUP,YAAAoJ,iBAVO,EAWP,kBAAA+7B,YAXO,EAYP,YAAArlC,cAZO,EAaP,UAAAwhB,aAbO,EAcP,OAAApX,aAdO,EAeP,KAAAjK,QAfO,EAgBP,kBAAAJ,oBAhBO,EAiBP,eAAA4J,oBAjBO,EAkBP,WAAAqb,cAlBO,CAwBR;;;;+EAEU3B,e,EAAe;AAAA,uBA3BX,uBAAAqgB,kBA2BW,EA3BS,wBAAA4B,mBA2BT,EA3B8B,yBAAAC,oBA2B9B,EA3BoD,iCAAA5B,2BA2BpD,EA3BiF,4BAAAjE,sBA2BjF,EA3ByG,0BAAAwB,qBA2BzG,EA3BgI,6BAAAsE,sBA2BhI;AA3BsJ,kBAE9K,SAAAruF,YAF8K,EAG9K,4BAAAysF,sBAH8K,EAI9K,gBAAA1e,mBAJ8K,EAK9K,QAAAggB,cAL8K,EAM9K,YAAAC,kBAN8K,EAO9K,OAAAC,aAP8K,EAQ9K,YAAA7jB,kBAR8K,EAS9K,QAAAthB,WAT8K,EAU9K,QAAAC,mBAV8K,EAW9K,YAAAoJ,iBAX8K,EAY9K,kBAAA+7B,YAZ8K,EAa9K,YAAArlC,cAb8K,EAc9K,UAAAwhB,aAd8K,EAe9K,OAAApX,aAf8K,EAgB9K,KAAAjK,QAhB8K,EAiB9K,kBAAAJ,oBAjB8K,EAkB9K,eAAA4J,oBAlB8K,EAmB9K,WAAAqb,cAnB8K;AA2BtJ,O;AARV,K;;;;;2BAQL3B,e,EAAe;cA5B3B,OAAAjsE,QA4B2B;eA5BlB;AACR6B,sBAAY,EAAE,CAAC,uBAAAyqF,kBAAD,EAAqB,wBAAA4B,mBAArB,EAA0C,yBAAAC,oBAA1C,EAAgE,iCAAA5B,2BAAhE,EAA6F,4BAAAjE,sBAA7F,EAAqH,0BAAAwB,qBAArH,EAA4I,6BAAAsE,sBAA5I,CADN;AAERnuF,iBAAO,EAAE,CACP,SAAAF,YADO,EAEP,4BAAAysF,sBAFO,EAGP,gBAAA1e,mBAHO,EAIP,QAAAggB,cAJO,EAKP,YAAAC,kBALO,EAMP,OAAAC,aANO,EAOP,YAAA7jB,kBAPO,EAQP,QAAAthB,WARO,EASP,QAAAC,mBATO,EAUP,YAAAoJ,iBAVO,EAWP,kBAAA+7B,YAXO,EAYP,YAAArlC,cAZO,EAaP,UAAAwhB,aAbO,EAcP,OAAApX,aAdO,EAeP,KAAAjK,QAfO,EAgBP,kBAAAJ,oBAhBO,EAiBP,eAAA4J,oBAjBO,EAkBP,WAAAqb,cAlBO,CAFD;AAsBRjsB,mBAAS,EAAE,CACT,WAAAgsC,aADS,EAET,WAAAC,mBAFS,EAGT,qBAAAC,gBAHS;AAtBH,S;AA4BkB,Q;;;;;;;;;;;;;;;;;;;;;;AC3D5B;AAAA;AAAA;;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QA4BatB,2B;AAKT,2CACY8B,EADZ,EAEYnsC,OAFZ,EAE2B;AAAA;;;;AADf,aAAAmsC,EAAA,GAAAA,EAAA;AACA,aAAAnsC,OAAA,GAAAA,OAAA;;AAER,YAAG,KAAKA,OAAL,CAAaosC,oBAAb,OAAwC,IAAxC,KAA4C,MAAI,KAAKpsC,OAAL,CAAaosC,oBAAb,GAAoCvkD,MAApC,CAA2C,OAA3C,CAAJ,MAAuD,IAAvD,IAAuD,aAAvD,GAAuD,MAAvD,GAAuD,GAAErV,OAArG,CAAH,EAAiH;AAC9G,eAAKk4D,OAAL,GAAe,CAAH,KAAG,KAAK1qC,OAAL,CAAaosC,oBAAb,GAAoCvkD,MAApC,CAA2C,OAA3C,OAAmD,IAAnD,IAAmD,aAAnD,GAAmD,MAAnD,GAAmD,GAAErV,OAApE;AACF,SAFD,MAGK;AACD,eAAKwtB,OAAL,CAAajL,QAAb,CAAsB,CAAC,YAAD,CAAtB;AACH;AACJ;;;;mCAEc;AACZ,eAAKo3C,EAAL,CAAQhoC,aAAR;AACF;;;wCAEsB;AACnB,eAAKnE,OAAL,CAAajL,QAAb,CAAsB,CAAC,YAAD,CAAtB;AACH;;;;;;AAjDL;;;uBA0Bas1C,2B,EAA2B,0C,EAAA,+B;AAAA,K;;;YAA3BA,2B;AAA2B,2C;AAAA,e;AAAA,a;AAAA,6Q;AAAA;AAAA;AAvBxB;AACI;AAEA;AACI;AACI;AACI;AACI;AACR;AACA;AAAsB;AAAG;AAAA,mBAAS,IAAAgC,aAAA,EAAT;AAAwB,WAAxB;AAA0B;AAAmB;AAAK;AAAa;AACxF;AAAmB;AAAW;AAC9B;AACI;AACJ;AACJ;AACI;AACJ;AACJ;AACJ;;;;AAH8B;AAAA;;;;;;;;;;2BAQjChC,2B,EAA2B;cA1BvC,OAAA3nC,SA0BuC;eA1B7B;AACPljD,kBAAQ,EAAE,sBADH;AAEPuvD,kBAAQ,0/BAFD;AAuBPnM,mBAAS,EAAE,CAAC,uCAAD,CAvBJ;AAwBP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAxBlC,S;AA0B6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCxC;AAAA;AAAA;;AASA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmCM;AACC;AAAQ;AASR;AACD;;;;;AAVS;AAAA;;;;;;;;;;;;;;AAvDf;AAAqE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAEpE;AACC;AACC;AACC;AAAsB;AAAS;AAC/B;AAGC;AACC;AACC;AASD;AACD;AACF;AACA;AACC;AACC;AACC;AAA4E;AAAI;AAChF;AACD;AACA;AACC;AAA8E;AAAK;AACnF;AACD;AACA;AACC;AAAwF;AAAQ;AAChG;AACD;AACD;AAEA;AACC;AACC;AAAmB;AAAS;AAC5B;AAED;AACA;AACC;AAAmB;AAAW;AAC9B;AAED;AACA;AACC;AAAsB;AAAQ;AAC9B;AAEA;AAYD;AACD;AACD;AAGA;AACC;AACC;AACC;AAAmB;AAAe;AAClC;AAED;AACA;AACC;AAAmB;AAAqB;AACxC;AAED;AACD;AAEA;AACC;AACC;AACA;AAA0C;AAAmC;AAE9E;AACA;AACC;AACA;AAA8C;AAAoC;AACnF;AACD;AAED;AAEA;AACC;AACC;AACC;AACC;AAAkB;AAA0B;AAC7C;AACA;AAA6B;AAAc;AAC3C;AACC;AAAG;AAAqB;AACxB;AACD;AACA;AACC;AAAG;AAAgB;AACnB;AACD;AACA;AACC;AAAG;AAAwB;AAC3B;AACD;AACA;AACC;AAAG;AAAS;AACZ;AACD;AACA;AACC;AAAG;AAAU;AACb;AACD;AACA;AACC;AAAG;AAAU;AACb;AACD;AACA;AAA6B;AAAW;AACxC;AACC;AAAG;AAAqC;AACxC;AACD;AACA;AACC;AAAG;AAAoB;AACvB;AACD;AACA;AACC;AAAG;AAAmB;AACtB;AACD;AACA;AACC;AAAG;AAAkB;AACrB;AACD;AACA;AACC;AAAG;AAAmB;AACtB;AACD;AACA;AACC;AAAG;AAAkB;AACrB;AACD;AACA;AACC;AAAG;AAAa;AAChB;AACD;AACD;AACD;AACD;AAGD;AACD;AAEA;AAA6I;AAAa;AAC1J;AAA2I;AAAA;AAAA;AAAA;AAAA;AAAsB;AAAgB;AAEjL;AACA;AACD;;;;;AA5K2B;AAOtB;AAAA;AAGQ;AAAA;AACN;AAAA;AAeiB;AAAA;AAIC;AAAA;AAIK;AAAA;AAQZ;AAAA;AAKA;AAAA;AAMX;AAAA;AACI;AAAA;AAqBO;AAAA;AAKA;AAAA;AAuFgD;AAAA;AACD;AAAA;AAE3C;AAAA;AACQ;AAAA;;;;;;AAuCxB;AACC;AACD;;;;;;AADe;AAAA;;;;;;;;;;;;AAFjB;AACE;AAGF;;;;;AAJiD;AACnB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;QDrLrBynC,oB;;;;;AA0CT,oCACYl8D,OADZ,EAEYo8D,EAFZ,EAGYG,SAHZ,EAIYtsC,OAJZ,EAKQC,OALR,EAMQ8C,KANR,EAOQjzB,IAPR,EAOgC;AAAA;;AAAA;;AAEhC;AARY,iBAAAC,OAAA,GAAAA,OAAA;AACA,iBAAAo8D,EAAA,GAAAA,EAAA;AACA,iBAAAG,SAAA,GAAAA,SAAA;AACA,iBAAAtsC,OAAA,GAAAA,OAAA;AACJ,iBAAAC,OAAA,GAAAA,OAAA;AACA,iBAAA8C,KAAA,GAAAA,KAAA;AACA,iBAAAjzB,IAAA,GAAAA,IAAA;AAtCH,iBAAAy8D,aAAA,GAAqB,UAArB;AACA,iBAAAC,gBAAA,GAAwB,YAAxB;AAEA,iBAAAC,cAAA,GAA8B,EAA9B;AAUgB,iBAAAC,SAAA,GAA+B,IAAI,OAAAvsC,YAAJ,EAA/B;AAChB,iBAAA3yB,UAAA,GAAa,IAAI,OAAAnvB,eAAJ,CAAwC,EAAxC,CAAb;AAEE,iBAAAsuF,cAAA,GAAiB,KAAjB;AACA,iBAAAhC,aAAA,GAAgB,KAAhB;AACA,iBAAAiC,cAAA,GAAiBpxE,QAAjB,CAoByB,CAjBlC;;AACS,iBAAAoR,aAAA,GAAgB,mBAAhB;AACF,iBAAAG,WAAA,GAAkC,EAAlC;AACA,iBAAA8/D,UAAA,GAAiC,EAAjC;AAiBD,iBAAKj5D,IAAL,GAAY,EAAZ;AAH4B;AAI/B;;;;mCAEc;AAAA;;;;AACX,eAAKs3D,GAAL,GAAW,IAAI,kBAAJ,EAAX;AACA4B,iBAAO,CAACC,SAAR,CAAkB,EAAlB,EAAsB,EAAtB;AAEA,eAAKC,QAAL,GAAgB,CAAH,WAAG,SAAI,IAAJ,aAAI,MAAJ,GAAI,MAAJ,QAAMC,WAAT,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAExnE,QAAnB,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAEpN,IAA7C;;AAEJ,cAAM60E,cAAc,GAAoB,KAAKp9D,IAAL,CAAU8iB,0BAAV,CAAqC,qBAArC,CAAxC;;AACA,cAAMu6C,cAAc,GAAoB,KAAKr9D,IAAL,CAAU8iB,0BAAV,CAAqC,qBAArC,CAAxC;;AACA,eAAKw6C,iBAAL,GAAyB;AAACC,oBAAQ,EAAEH,cAAX;AAA2BtzD,oBAAQ,EAAEuzD;AAArC,WAAzB;AAEA,cAAM3mE,oBAAoB,GAAG,CAAH,WAAG,KAAKymE,WAAR,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAExkE,oBAA3D,CAVe,CAUkE;;AAEjF,cAAGA,oBAAH,EAAyB;AACxB,iBAAK+lE,aAAL,GAAwB,OAAO/lE,oBAAP,KAAiC,QAAjC,GACVA,oBADU,GAEV,OAAOA,oBAAoB,CAAC1gB,KAA5B,KAAuC,QAAvC,GACA0gB,oBAAoB,CAAC1gB,KADrB,GAEA0gB,oBAAoB,CAAC1gB,KAArB,CAA2BA,KAJzC,CADwB,CAKyB;AACjD;;AACD,cAAMwnF,WAAW,GAAG,CAAH,WAAG,KAAKL,WAAR,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAEn6C,SAAlD;AACA,eAAK27C,gBAAL,GAAwB78E,KAAK,CAACsB,OAAN,CAAcq8E,WAAd,KAA8BA,WAAW,CAACxoF,MAA1C,GACfwoF,WAAW,CAAC,CAAD,CADI,GAEhB39E,KAAK,CAACsB,OAAN,CAAcq8E,WAAd,KAA8B,CAACA,WAAW,CAACxoF,MAA3C,GACA,YADA,GAEAwoF,WAAW,IAAK,YAJxB;AAKA,eAAKC,yBAAL,GAAiC,wBAAKN,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAE3gF,OAA9B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAEysB,QAAvC,IAAkD,YAAlD,GAAiE,IAAlG;AAGA,eAAKm2D,WAAL,IAAoB,KAAKO,eAAL,CAAqB,KAAKP,WAA1B,CAApB;AAGI,eAAKQ,YAAL,GAAoB,IAAI,QAAA7uD,SAAJ,CAAc;AAE9BqoD,oBAAQ,EAAE,IAAI,QAAA/qD,WAAJ,CAAgB,KAAK+wD,WAAL,CAAiBhG,QAAjC,EAA2C,CACjD,QAAA7qD,UAAA,CAAWC,QADsC,EAEjD,QAAAD,UAAA,CAAWsxD,SAAX,CAAqB,GAArB,CAFiD,EAGjD,QAAAtxD,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAHiD,EAIjD,QAAAH,UAAA,CAAWgf,OAAX,CAAmB,oBAAnB,CAJiD,EAKjD,cAAA8B,qBALiD,CAA3C,CAFoB;AAU9B7kC,gBAAI,EAAE,IAAI,QAAA6jB,WAAJ,CAAgB;AAAEp2B,mBAAK,EAAE,KAAKknF,QAAd;AAAwB7wD,sBAAQ,EAAE;AAAlC,aAAhB,EAA0D,EAA1D,CAVwB;AAW9B/P,iBAAK,EAAE,IAAI,QAAA8P,WAAJ,CAAgB;AAAEp2B,mBAAK,EAAE,KAAKmnF,WAAL,CAAiB7gE,KAA1B;AAAiC+P,sBAAQ,EAAE;AAA3C,aAAhB,EAAmE,EAAnE,CAXuB;AAY9BwxD,sBAAU,EAAE,IAAI,QAAAzxD,WAAJ,CAAgB;AAAEp2B,mBAAK,EAAE,KAAKmnF,WAAL,CAAiBnC,OAA1B;AAAmC3uD,sBAAQ,EAAE;AAA7C,aAAhB,EAAqE,EAArE,CAZkB;AAiB9B3V,gCAAoB,EAAE,IAAI,QAAA0V,WAAJ,CAAiB,KAAKqwD,aAAtB,EAAsC,EAAtC,CAjBQ;AAkBpC17C,qBAAS,EAAE,IAAI,QAAA3U,WAAJ,CAAiB,KAAKswD,gBAAtB,EAAwC,EAAxC,CAlByB;AAoB9BrkE,oBAAQ,EAAE,IAAI,QAAA+T,WAAJ,CAAgB,KAAK+wD,WAAL,CAAiB9kE,QAAjB,CAA0B9e,QAA1B,EAAhB,EAAsD,CAC5D,QAAA+yB,UAAA,CAAWC,QADiD,EAE5D,QAAAD,UAAA,CAAWsxD,SAAX,CAAqB,GAArB,CAF4D,EAG5D,QAAAtxD,UAAA,CAAWgf,OAAX,CAAmB,sBAAnB,CAH4D,CAAtD,CApBoB;AA2B9BwyC,0BAAc,EAAE,IAAI,QAAA1xD,WAAJ,CAAgB,KAAK+wD,WAAL,CAAiB5mE,QAAjC,CA3Bc;AA4BpCyQ,oBAAQ,EAAE,IAAI,QAAAoF,WAAJ,CAAgB,wBAAK+wD,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAE3gF,OAA9B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAEysB,QAAvC,KAAmD,KAAnE,CA5B0B;AA8BpC;AACAwS,0BAAc,EAAE,IAAI,QAAApN,WAAJ,CAAiB,wBAAK+wD,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAE3gF,OAA9B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAEi/B,cAAvC,MAAqD,MAAI,KAAK2jD,WAAT,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE3xE,QAAF,CAAW,gBAAX,CAAzE,KAAyG,KAA1H,CA/BoB;AAgCpC0pB,uBAAW,EAAE,IAAI,QAAA9I,WAAJ,CAAgB,wBAAK+wD,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEjC,UAAlB,MAA4B,IAA5B,IAA4B,aAA5B,GAA4B,MAA5B,GAA4B,GAAE3gF,OAA9B,MAAqC,IAArC,IAAqC,aAArC,GAAqC,MAArC,GAAqC,GAAE26B,WAAvC,KAAsD,KAAKioD,WAAL,CAAiB3xE,QAAjB,CAA0B0pB,WAAhF,IAA+F,KAA/G,CAhCuB;AAkC9BwM,cAAE,EAAE,IAAI,QAAAtV,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,IAAtB,CAAhB,CAlC0B;AAmC9BC,4BAAgB,EAAE,IAAI,QAAA5xD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,kBAAtB,CAAhB,CAnCY;AAoC9BE,oCAAwB,EAAE,IAAI,QAAA7xD,WAAJ,CAAiB,KAAK2xD,gBAAL,CAAsB,0BAAtB,CAAjB,CApCI;AAqC9BG,qBAAS,EAAE,IAAI,QAAA9xD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,WAAtB,CAAhB,CArCmB;AAsC9BI,sBAAU,EAAE,IAAI,QAAA/xD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,YAAtB,CAAhB,CAtCkB;AAuC9BK,sBAAU,EAAE,IAAI,QAAAhyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,YAAtB,CAAhB,CAvCkB;AAwC9Bt8C,yBAAa,EAAE,IAAI,QAAArV,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,eAAtB,CAAhB,CAxCe;AAyC9BM,qBAAS,EAAE,IAAI,QAAAjyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,WAAtB,CAAhB,CAzCmB;AA0C9BO,oBAAQ,EAAE,IAAI,QAAAlyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,UAAtB,CAAhB,CA1CoB;AA2C9BQ,mBAAO,EAAE,IAAI,QAAAnyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,SAAtB,CAAhB,CA3CqB;AA4C9BS,oBAAQ,EAAE,IAAI,QAAApyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,UAAtB,CAAhB,CA5CoB;AA6C9BU,mBAAO,EAAE,IAAI,QAAAryD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,SAAtB,CAAhB,CA7CqB;AA8C9BW,yBAAa,EAAE,IAAI,QAAAtyD,WAAJ,CAAgB,KAAK2xD,gBAAL,CAAsB,eAAtB,CAAhB;AA9Ce,WAAd,CAApB;AAkDH,wBAAAphE,eAAA,CAAgB,IAAhB,EAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB,EAA+B,KAAKG,aAApC,EAAmD,KAAK6hE,kBAAxD;AAEA,eAAK9tF,YAAL,CACC,cADD,EAEC,KAAK6sB,UAAL,CAAgB3sB,SAAhB,CAA0B,UAAC6tF,MAAD,EAAgC;AACzD,oBAAI,CAAC7B,UAAL,GAAkB6B,MAAlB;;AACA,oBAAI,CAAC3rC,KAAL,CAAWoB,aAAX;AACA,WAHD,CAFD;AAOA;;;yCAIuB3rC,K,EAAe;;;AACnC,kBAAQA,KAAR;AACI,iBAAK,IAAL;AAAW;AACP,uBAAO,YAAKy0E,WAAL,CAAiB,WAAjB,OAA6B,IAA7B,IAA6B,aAA7B,GAA6B,MAA7B,GAA6B,GAAEhxE,QAAF,CAAWzD,KAAX,CAA7B,MAA6C,MAAK,KAAKy0E,WAAL,CAAiBjC,UAAjB,CAA4B,SAA5B,CAAL,MAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEx5C,EAA1F,CAAP;AACH;;AACD,iBAAK,eAAL;AAAsB;AAClB,uBAAO,YAAKy7C,WAAL,CAAiBjC,UAAjB,CAA4B,SAA5B,OAAsC,IAAtC,IAAsC,aAAtC,GAAsC,MAAtC,GAAsC,GAAEz5C,aAAxC,MAAqD,MAAI,KAAK07C,WAAL,CAAiB,UAAjB,CAAJ,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAE17C,aAAvF,CAAP;AACH;;AACD;AAAS;AAAA,oBACGX,cADH,GACsB,KAAKq8C,WAAL,CAAiB,UAAjB,CADtB,CACGr8C,cADH;AAEL,uBAAOA,cAAc,KAAIA,cAAc,SAAd,IAAAA,cAAc,WAAd,GAAc,MAAd,GAAAA,cAAc,CAAE30B,QAAhB,CAAyBzD,KAAzB,CAAJ,CAAd,KAAiD,MAAI,KAAKy0E,WAAL,CAAiB,WAAjB,CAAJ,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEhxE,QAAF,CAAWzD,KAAX,CAAlF,MAAmG,MAAI,KAAKy0E,WAAL,CAAiB,YAAjB,CAAJ,MAAkC,IAAlC,IAAkC,aAAlC,GAAkC,MAAlC,GAAkC,GAAEhxE,QAAF,CAAWzD,KAAX,CAArI,CAAP;AACH;AAVL;AAYH;;;iCAUem2E,S,EAAgB;AAAA;;AACjC,cAAIC,UAAU,GAAGh/E,MAAM,CAACy3E,MAAP,CAAc,EAAd,EAAkB,KAAK4F,WAAL,CAAiBjC,UAAnC,CAAjB;AAEA,cAAM6D,YAAY,GAAG,CACnB,SADmB,EAEnB,MAFmB,EAGnB,aAHmB,EAInB,OAJmB,EAKnB,WALmB,EAMnB,UANmB,EAOnB,SAPmB,EAQnB,UARmB,EASnB,UATmB,EAUnB,sBAVmB,EAWnB,OAXmB,EAYnB,SAZmB,EAanB,WAbmB,EAcnB,YAdmB,EAenB,UAfmB,EAgBnB,YAhBmB,EAiBnB,aAjBmB,EAkBnB,SAlBmB,EAmBnB,IAnBmB,CAArB,CAHiC,CAyBjC;;AACAD,oBAAU,GAAGh/E,MAAM,CAACpH,IAAP,CAAYomF,UAAZ,EACVplF,MADU,CACH,UAAClL,GAAD;AAAA,mBAASuwF,YAAY,CAAC5yE,QAAb,CAAsB3d,GAAtB,CAAT;AAAA,WADG,EAEViI,MAFU,CAEH,UAAC2Y,GAAD,EAAM5gB,GAAN,EAAc;AACpB4gB,eAAG,CAAC5gB,GAAD,CAAH,GAAWswF,UAAU,CAACtwF,GAAD,CAArB;AACA,mBAAO4gB,GAAP;AACD,WALU,EAKR,EALQ,CAAb;AAQA0vE,oBAAU,CAACtzE,QAAX,CAAoBm1B,SAApB,GAAgCk+C,SAAS,CAAC1H,QAA1C;AACA2H,oBAAU,CAAC99C,WAAX,GAAyB69C,SAAS,CAAC1H,QAAnC;;AAEA,cAAG0H,SAAS,CAACnoE,oBAAb,EAAmC;AAClCooE,sBAAU,CAACtzE,QAAX,CAAoBkL,oBAApB,GAA2CmoE,SAAS,CAACnoE,oBAArD;AACAooE,sBAAU,CAACvkF,OAAX,CAAmB,UAAnB,IAAiCskF,SAAS,CAACnoE,oBAAV,KAAmC,UAApE;AACA;;AACDooE,oBAAU,CAAC/9C,SAAX,GAAuB89C,SAAS,CAAC99C,SAAjC;AACA+9C,oBAAU,CAACzmE,QAAX,GAAsBpiB,QAAQ,CAAC4oF,SAAS,CAACxmE,QAAX,CAA9B;AAEAymE,oBAAU,CAACvoE,QAAX,GAAsBsoE,SAAS,CAACf,cAAhC;AACAgB,oBAAU,CAACtzE,QAAX,CAAoB,gBAApB,IAAwCqzE,SAAS,CAACrlD,cAAlD;AACAslD,oBAAU,CAACvkF,OAAX,CAAmB,gBAAnB,IAAuCskF,SAAS,CAACrlD,cAAjD;AAEAslD,oBAAU,CAACtzE,QAAX,CAAoB,UAApB,IAAkCqzE,SAAS,CAAC73D,QAA5C;AACA83D,oBAAU,CAACvkF,OAAX,CAAmB,UAAnB,IAAiCskF,SAAS,CAAC73D,QAA3C;AACA83D,oBAAU,CAACtzE,QAAX,CAAoB,aAApB,IAAqCqzE,SAAS,CAAC3pD,WAA/C;AACA4pD,oBAAU,CAACvkF,OAAX,CAAmB,aAAnB,IAAoCskF,SAAS,CAAC3pD,WAA9C,CAnDiC,CAuDjC;;AACA4pD,oBAAU,CAACtzE,QAAX,CAAoBs1B,cAApB,GAAqCk+C,gBAAgB,EAArD;AACAF,oBAAU,CAACvkF,OAAX,CAAmBmnC,EAAnB,GAAwBm9C,SAAS,CAACn9C,EAAlC;AACAo9C,oBAAU,CAACtzE,QAAX,CAAoBk2B,EAApB,GAAyBm9C,SAAS,CAACn9C,EAAnC;AACAo9C,oBAAU,CAACtzE,QAAX,CAAoBi2B,aAApB,GAAoCo9C,SAAS,CAACp9C,aAA9C;AACAq9C,oBAAU,CAACvkF,OAAX,CAAmB,eAAnB,IAAsCskF,SAAS,CAACp9C,aAAhD;;AAEA,mBAASu9C,gBAAT,GAA4B;AAC1B,gBAAMC,wBAAwB,GAAG,CAAC,UAAD,EAAY,aAAZ,EAA0B,sBAA1B,EAAkD,gBAAlD,EAAoE,UAApE,EAAgF,gBAAhF,EAAkG,UAAlG,EAA8G,WAA9G,CAAjC;AACA,gBAAIp+C,QAAQ,GAAG,EAAf;AAEA/gC,kBAAM,CAACpH,IAAP,CAAYmmF,SAAZ,EAAuB3tF,OAAvB,CAA+B,UAACR,OAAD,EAAa;AAC1C,kBAAMwuF,aAAa,GAAGL,SAAS,CAACnuF,OAAD,CAA/B,CAD0C,CAE1C;;AACA,kBAAI,CAACuuF,wBAAwB,CAAC9yE,QAAzB,CAAkCzb,OAAlC,CAAD,IAA+CwuF,aAAnD,EAAkE;AAChEr+C,wBAAQ,eAAQnwC,OAAR,CAAR;;AAEA,oBAAG,cAAA0vC,eAAA,CAAgB1vC,OAAhB,MAA2BqE,SAA3B,IAAwC,EAAC+pF,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAEt+C,SAAZ,CAAsBr0B,QAAtB,CAA+Bzb,OAA/B,CAAD,CAA3C,EAAsF;AACrFouF,4BAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAEt+C,SAAZ,CAAsB7lC,IAAtB,CAA2BjK,OAA3B;AACA,iBAFD,MAGM,IAAI,cAAA2vC,WAAA,CAAY3vC,OAAZ,MAAuBqE,SAAvB,IAAoC,EAAC+pF,UAAU,SAAV,IAAAA,UAAU,WAAV,GAAU,MAAV,GAAAA,UAAU,CAAEv+C,UAAZ,CAAuBp0B,QAAvB,CAAgCzb,OAAhC,CAAD,CAAxC,EAAmF;AACtFouF,4BAAU,CAACv+C,UAAX,CAAsB5lC,IAAtB,CAA2BjK,OAA3B;AACD;AACH,eATD,MASO,IAAG,CAACwuF,aAAJ,EAAmB;AACzBJ,0BAAU,CAACj+C,QAAX,GAAsBi+C,UAAU,CAACj+C,QAAX,CAAoB9kC,OAApB,CAA4BrL,OAA5B,EAAqC,EAArC,CAAtB;AACAouF,0BAAU,CAACt+C,SAAX,GAAuB,cAAAJ,eAAA,CAAgB1vC,OAAhB,MAA2BqE,SAA3B,GAAuC+pF,UAAU,CAACt+C,SAAX,CAAqB9mC,MAArB,CAA4B,UAAC1D,KAAD;AAAA,yBAASA,KAAK,IAAEtF,OAAhB;AAAA,iBAA5B,CAAvC,GAA8FouF,UAAU,CAACt+C,SAAhI;AACAs+C,0BAAU,CAACv+C,UAAX,GAAwB,cAAAF,WAAA,CAAY3vC,OAAZ,MAAuBqE,SAAvB,GAAmC+pF,UAAU,CAACv+C,UAAX,CAAsB7mC,MAAtB,CAA6B,UAAC1D,KAAD;AAAA,yBAASA,KAAK,IAAEtF,OAAhB;AAAA,iBAA7B,CAAnC,GAA2FouF,UAAU,CAACv+C,UAA9H;AACA;AACF,aAjBD;AAkBA,mBAAOM,QAAP;AACD;;AAED,cAAM7hC,IAAI,GAAG8/E,UAAb;;AAEA,cAAI,KAAKnB,YAAL,CAAkBzwC,OAAtB,EAA+B;AAC7B,+CAAsBptC,MAAM,CAACpH,IAAP,CAAY,KAAKilF,YAAL,CAAkB9gD,QAA9B,CAAtB,uCAA+D;AAA1D,kBAAM9N,OAAO,sBAAb;AACH,mBAAK4uD,YAAL,CAAkB9gD,QAAlB,CAA2B9N,OAA3B,EAAoCwuC,aAApC;AACD;AACF,WAJD,MAIO;AACL,iBAAKsf,cAAL,GAAsB,IAAtB;AACA,iBAAKhC,aAAL,GAAqB,IAArB;;AAEA,iBAAK56D,OAAL,CAAaqiB,WAAb,CAAyB,KAAK66C,WAAL,CAAiBp4E,EAA1C,EAA8C/F,IAA9C,EAAoDjO,SAApD,CACE,UAACknB,IAAD,EAAe;AACb,sBAAI,CAACknE,cAAL,GADa,CACU;;;AACvB,sBAAI,CAACtC,cAAL,GAAsB,KAAtB;AACA,sBAAI,CAAChC,aAAL,GAAqB,KAArB;;AACA,sBAAI,CAAC8C,YAAL,CAAkByB,cAAlB;;AACA,sBAAI,CAAC/C,EAAL,CAAQgD,YAAR;;AACA,sBAAI,CAAC7C,SAAL,CAAenyE,IAAf,CAAoB,uBAApB,EAA6C,OAA7C,EAAsD;AACrDxW,wBAAQ,EAAE,IAD2C;AAErDyW,0BAAU,EAAE,CAAC,kBAAD;AAFyC,eAAtD;AAIA,aAXJ,EAYE,UAAC6F,GAAD,EAAc;AACZ3X,qBAAO,CAACV,GAAR,CAAYqY,GAAZ;;AACA,sBAAI,CAACqsE,SAAL,CAAenyE,IAAf,CAAoB,oBAApB,EAA0C,OAA1C,EAAmD;AAAExW,wBAAQ,EAAE;AAAZ,eAAnD;;AACA,sBAAI,CAACgpF,cAAL,GAAsB,KAAtB;AACA,sBAAI,CAAChC,aAAL,GAAqB,KAArB;;AACA,sBAAI,CAACwB,EAAL,CAAQgD,YAAR;AACD,aAlBH;AAoBD;;AACD,eAAKv7D,IAAL,GAAY,KAAK65D,YAAL,CAAkB3nF,KAA9B;AACE;;;yCAEoB;AACjB,eAAKiqB,OAAL,CAAa/Z,KAAb,GAAqB6I,IAArB,CAA0B,YAAM,CAAG,CAAnC,WAA2C,YAAM,CAAE,CAAnD;AACH;;;mCAEiB;AACnB,eAAKmhC,OAAL,CAAajL,QAAb,CAAsB,CAAC,YAAD,CAAtB;AACE;;;wCAKoBk4C,W,EAAa;AAAA;;AACnC;AACA;;;AAEA,eAAKmC,UAAL,GAAkB;AACjBC,sBAAU,EAAE,WADK;AAEjBtqE,mBAAO,EAAE,qBAAAuqE,eAFQ;AAGjB1zB,2BAAe,EAAE,qBAAA0zB,eAAA,CAAgB9lF,MAAhB,CAAuB,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAC3D,KAAH,KAAc,QAAI,CAACymF,aAAvB;AAAA,aAAzB,EAAgE,CAAhE,CAHA;AAIjB1wB,4BAAgB,EAAE,KAAK0zB,eAAL,CAAqBC,IAArB,CAA0B,IAA1B;AAJD,WAAlB;AAOA,eAAKC,YAAL,GAAoB;AAClBtzD,oBAAQ,EAAE,KADQ;AAElBkzD,sBAAU,EAAE,aAFM;AAGlBtqE,mBAAO,EAAE,KAAKqoE,iBAAL,CAAuB,CAAD,WAAC,KAAKgC,UAAN,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAExzB,eAAjB,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAE91D,KAAF,CAAQuD,QAAR,EAAvD,CAHS;AAIlBuyD,2BAAe,EAAE,KAAKwxB,iBAAL,CAAuB,CAAD,WAAC,KAAKgC,UAAN,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAExzB,eAAjB,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAE91D,KAAF,CAAQuD,QAAR,EAAvD,EAA2EG,MAA3E,CAAkF,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAC3D,KAAH,KAAa,QAAI,CAAC0mF,gBAAtB;AAAA,aAApF,EAA6H,CAA7H,CAJC;AAKlB3wB,4BAAgB,EAAE,KAAK6zB,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC;AALA,WAApB;AAQA,eAAKG,gBAAL,GAAwB;AACtBN,sBAAU,EAAE,iBADU;AAEtBtqE,mBAAO,EAAE,qBAAA6qE,qBAFa;AAGtBh0B,2BAAe,EAAE,qBAAAg0B,qBAAA,CAAsBpmF,MAAtB,CAA6B,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAC3D,KAAH,MAAamnF,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAE5mE,QAAb,CAAsBhd,QAAtB,EAAb,CAAJ;AAAA,aAA/B,EAAkF,CAAlF,CAHK;AAItBwyD,4BAAgB,EAAE,KAAKg0B,qBAAL,CAA2BL,IAA3B,CAAgC,IAAhC;AAJI,WAAxB;AAOA,eAAKM,uBAAL,GAA+B;AAC7B3zD,oBAAQ,EAAE,KADmB;AAE7BkzD,sBAAU,EAAE,uBAFiB;AAG7BtqE,mBAAO,EAAE,qBAAAgrE,4BAHoB;AAI7Bn0B,2BAAe,EAAE,qBAAAm0B,4BAAA,CAA6BvmF,MAA7B,CAAoC,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAC3D,KAAH,KAAa,QAAI,CAACynF,yBAAtB;AAAA,aAAtC,EAAwF,CAAxF,CAJY;AAK7B1xB,4BAAgB,EAAE,KAAKm0B,mBAAL,CAAyBR,IAAzB,CAA8B,IAA9B;AALW,WAA/B;AAOA;AAEC;;;;;;;wCAIoB3nF,I,EAAqB;AAAA;;AAC1C,eAAK4lF,YAAL,CAAkB9gD,QAAlB,CAA2BnmB,oBAA3B,CAAgDhjB,QAAhD,CAAyDqE,IAAI,CAAC/B,KAA9D;AACA,eAAK2nF,YAAL,CAAkB5gB,WAAlB;;AAEA,cAAG,CAAC,KAAK4iB,YAAL,CAAkBtzD,QAAtB,EAAgC;AAC/B,iBAAKszD,YAAL,CAAkB1qE,OAAlB,GAA4B,KAAKqoE,iBAAL,CAAuBvlF,IAAI,CAAC/B,KAAL,CAAWuD,QAAX,EAAvB,CAA5B;AACI,iBAAKomF,YAAL,CAAkB7zB,eAAlB,GAAoC/zD,IAAI,CAAC/B,KAAL,KAAe,KAAKymF,aAApB,GAAoC,KAAKkD,YAAL,CAAkB1qE,OAAlB,CAA0Bvb,MAA1B,CAAiC,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAAC3D,KAAH,KAAc,QAAI,CAAC0mF,gBAAvB;AAAA,aAAnC,EAA6E,CAA7E,CAApC,GAAsH,KAAKY,iBAAL,CAAuBvlF,IAAI,CAAC/B,KAAL,CAAWuD,QAAX,EAAvB,EAA8C,CAA9C,CAA1J;AACJ,iBAAKokF,YAAL,CAAkB9gD,QAAlB,CAA2BkE,SAA3B,CAAqCrtC,QAArC,CAA8C,KAAKisF,YAAL,CAAkB7zB,eAAlB,CAAkC91D,KAAhF;AACA;;AACD,eAAK2nF,YAAL,CAAkB5gB,WAAlB;AACA,eAAK9pB,KAAL,CAAWoB,aAAX;AACD;;;8CAC4B8rC,M,EAAqB;AAChD;AACA,eAAKxC,YAAL,CAAkB9gD,QAAlB,CAA2BkE,SAA3B,CAAqCrtC,QAArC,CAA8CysF,MAAM,CAACnqF,KAArD;AACA,eAAK2nF,YAAL,CAAkB5gB,WAAlB;AACD;;;8CAE4BqjB,U,EAA2B;AACvD,eAAKzC,YAAL,CAAkB9gD,QAAlB,CAA2BihD,cAA3B,CAA0CpqF,QAA1C,CAAmD0sF,UAAU,CAACpqF,KAAX,KAAmB,MAAtE;AACA,eAAK2nF,YAAL,CAAkB5gB,WAAlB;AACA;;;4CAE0BsjB,U,EAA2B;AACrD,eAAK1C,YAAL,CAAkB9gD,QAAlB,CAA2B7V,QAA3B,CAAoCtzB,QAApC,CAA6C,EAAE2sF,UAAU,CAACrqF,KAAX,KAAmB,IAArB,CAA7C;AACA,eAAK2nF,YAAL,CAAkB5gB,WAAlB;AACA;AAEE;;;;;;;;;mCAMW+c,G,EAAG;iBAAA,CACf;;;AACA,cAAM/nC,KAAK,GAAG,GAAd;AACA,cAAMrkD,MAAM,GAAG,GAAf;AACA,cAAM4yF,IAAI,GAAG,GAAb;AACA,cAAMC,YAAY,GAAGxuC,KAAK,GAAC,CAA3B;AACA,cAAMyuC,SAAS,GAAGD,YAAY,GAAG,CAAjC;AACA,cAAME,SAAS,GAAGD,SAAS,GAAG,EAA9B;AACA,cAAME,UAAU,GAAGF,SAAS,GAAG,EAA/B;AAEA,cAAM7H,MAAM,GAAsBt6E,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAlC;AACA+5E,gBAAM,CAAC95E,YAAP,CAAoB,OAApB,EAA6BkzC,KAAK,CAACx4C,QAAN,EAA7B;AACAo/E,gBAAM,CAAC95E,YAAP,CAAoB,QAApB,EAA8BnR,MAAM,CAAC6L,QAAP,EAA9B;AACA,cAAMonF,GAAG,GAAGhI,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AAEA8H,aAAG,CAACC,WAAJ,GAAkB,aAAlB;AACAD,aAAG,CAACE,MAAJ,CAAWN,YAAX,EAAyB,CAAzB;AACAI,aAAG,CAACG,MAAJ,CAAWP,YAAX,EAAyB7yF,MAAzB;AACAizF,aAAG,CAACI,MAAJ;AAEAJ,aAAG,CAACK,IAAJ,GAAW,uDAAX;AACAL,aAAG,CAACM,SAAJ,GAAgB,QAAhB;AACAN,aAAG,CAACO,QAAJ,CAAa,CAAD,KAAC,KAAK/D,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAEhG,QAA/B,EAA0CoJ,YAA1C,EAAwD,EAAxD,EAtBe,CAwBf;;AACAI,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BE,SAA5B,EAAuC,CAAvC,EAA0C,IAAIptF,IAAI,CAACiuF,EAAnD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GA7Be,CA+Bf;;AACAJ,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BG,SAA5B,EAAuC,CAAvC,EAA0C,IAAIrtF,IAAI,CAACiuF,EAAnD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GApCe,CAsCf;;AACAJ,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BI,UAA5B,EAAwC,CAAxC,EAA2C,IAAIttF,IAAI,CAACiuF,EAApD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GA3Ce,CA6Cf;;AACAJ,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAACK,IAAJ,GAAW,YAAX;AACAL,aAAG,CAACO,QAAJ,CAAa,SAAb,EAAwBX,YAAxB,EAAsC,GAAtC,EAhDe,CAkDf;;AACAI,aAAG,CAACY,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAnDe,CAoDf;;AACAZ,aAAG,CAACW,SAAJ,GAAgB,SAAhB,CArDe,CAuDf;;AACAX,aAAG,CAACK,IAAJ,GAAW,uDAAX;AACAL,aAAG,CAACO,QAAJ,CAAa,aAAb,EAA4BX,YAA5B,EAA0C,GAA1C,EAzDe,CA2Df;;AACAzG,aAAG,KAAK,IAAR,IAAgB6G,GAAG,CAAClH,SAAJ,CAAcK,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAAhB,CA5De,CA8Df;;AACA,cAAMJ,OAAO,GACbf,MAAM,CAACgB,SAAP,CAAiB,WAAjB,CADA;AAEA,iBAAOD,OAAP;AACE;AAED;;;;;;;sCAIqB8H,M,EAAe;AAChC;AACA,cAAMlG,MAAM,GAAGj9E,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf;AACA,cAAIi9E,SAAS,GAAG,KAAKC,UAAL,CAAgBF,MAAhB,CAAhB,CAHgC,CAIhC;;AACA,eAAKF,GAAL,CAASK,QAAT,CAAkBF,SAAlB,EAA6B,MAA7B,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,GAA3C,EAAgD,GAAhD,EALgC,CAOpC;AACA;AACA;AACI;AACA;AACJ;;AACI,eAAKH,GAAL,CAASh1C,IAAT,WAAiB,KAAK+2C,WAAL,CAAiBp4E,EAAlC;AACH;AAED;;;;;;;;2CAKuB;AACnB,cAAMu2E,MAAM,GAAGj9E,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf;AACA,cAAMo7E,OAAO,GAAG,KAAK8B,UAAL,CAAgBF,MAAhB,CAAhB;AACA,cAAMmG,GAAG,GAAGppF,MAAM,CAACgS,IAAP,EAAZ;AACAo3E,aAAG,IACCA,GAAG,CAACpjF,QAAJ,CAAaqjF,KAAb,CACI;qBAAA,GAEIhI,OAFJ,GAGI;aAJR,CADJ;AAQH;AAEH;;;;gDAC+B;AAAA;;AAC9B,cAAMlc,aAAa,GAAG,KAAKrtB,OAAL,CAAa9lC,IAAb,CAAyC,0BAAAytE,qBAAzC,EAAgE;AACrFhmC,oBAAQ,EAAE,MAD2E;AAErFC,iBAAK,EAAE,MAF8E;AAGrF95B,gBAAI,EAAE;AACLwgE,oBAAM,EAAE,KAAKsE,UADR;AAELj5D,kBAAI,EAAE,KAAKq5D;AAFN;AAH+E,WAAhE,CAAtB;;AAQA,eAAKtsF,YAAL,CACC,yBADD,EAEC2sE,aAAa,CAACtrB,iBAAd,CAAgC1xC,KAAhC,CAAsCzP,SAAtC,CAAgD,UAACyP,KAAD,EAAgB;AAC/D;AAEC;AACA,0BAAAmc,eAAA,CAAgB,QAAhB,EAAsB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtB,EAA+B,QAAI,CAACG,aAApC,EAAmD,QAAI,CAAC6hE,kBAAxD,EAJ8D,CAK9D;AAED,WAPD,CAFD;AAWAnhB,uBAAa,CAAClrB,WAAd,GAA4BvhD,SAA5B,CAAsC,YAAM;AAC3C,oBAAI,CAACkiD,KAAL,CAAWoB,aAAX;;AACA,oBAAI,CAACzlD,KAAL,CAAW,yBAAX;AACA,WAHD;AAIA;;;0BA5esBoH,K,EAAY;AAC7B,eAAKmnF,WAAL,GAAmBnnF,KAAnB;AACH;;;0BACqBA,K,EAAe;AACjC,eAAKknF,QAAL,GAAgBlnF,KAAhB;AACH;;;4BAgB0B;AAC5B,iBAAO,KAAKmnF,WAAL,CAAiBj5E,KAAjB,CAAuBpP,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAP;AACA;;;4BA4HgB;AAChB,iBAAO,KAAK6oF,YAAL,CAAkBn1E,GAAlB,CAAsB,UAAtB,CAAP;AACE;;;4BAEc;AAChB,iBAAO,KAAKm1E,YAAL,CAAkBn1E,GAAlB,CAAsB,UAAtB,CAAP;AACE;;;4BAsViB;AACnB,iBAAQ,IAAI9V,IAAJ,EAAD,CAAa02B,OAAb,EAAP;AACA;;;;MAlgBuC,OAAA75B,a;;AAN1C;;;uBAMa4sF,oB,EAAoB,sC,EAAA,0C,EAAA,oC,EAAA,+B,EAAA,kC,EAAA,0C,EAAA,4C;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,c;AAAA,szG;AAAA;AAAA;AC7BjC;AA8KA;AACC;AACC;AAAkC;AAAQ;AAC1C;AACC;AAAmB;AAAgE;AACnF;AAEC;AACD;AACD;AACA;AAAiD;AAAyD;AAC3G;AACA;AACC;AAAiD;AAAA,mBAAS,IAAAwF,aAAA,EAAT;AAAwB,WAAxB;AAChD;AACD;AAKD;AACA;AACC;AAKD;AACD;AAEA;AACC;AACC;AACC;AACC;AAAmB;AAAW;AAC9B;AAKD;AAA6H;AAAA,mBAAS,IAAAC,qBAAA,EAAT;AAAgC,WAAhC;AAAmC;AAAa;AAC7K;AACD;AACD;AACD;;;;AA1NM;AAkLgB;AAAA;AACC;AAAA;AAET;AAAA;AAeJ;AAAA,wGAAuE,kBAAvE,EAAuE,IAAvE,EAAuE,KAAvE,EAAuE,wBAAvE,EAAuE,WAAvE,EAAuE,6CAAvE,EAAuE,UAAvE,EAAuE,SAAvE,EAAuE,WAAvE,EAAuE,SAAvE,EAAuE,YAAvE,EAAuE,SAAvE,EAAuE,aAAvE,EAAuE,KAAvE,EAAuE,sBAAvE,EAAuE,GAAvE,EAAuE,QAAvE,EAAuE,CAAvE,EAAuE,OAAvE,EAAuE,CAAvE,EAAuE,OAAvE,EAAuE,0BAAvE,EAAuE,OAAvE,EAAuE,GAAvE,EAAuE,SAAvE,EAAuE,2BAAvE;AAaiB;AAAA;AAK2B;AAAA;;;;;;;;;;2BDzLzCzF,oB,EAAoB;cANhC,OAAAvpC,SAMgC;eANtB;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD,CAHJ;AAIP0B,yBAAe,EAAE,OAAAC,uBAAA,CAAwBC;AAJlC,S;AAMsB,Q;;;;;;;;;;;;;;;;;;gBAiB5B,OAAAtiD;;;gBAGA,OAAAA;;;gBAIA,OAAA2gD,M;iBAAO,W;;;;;;;;;;;;;;;;;;;;;;;;AErDZ;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;uEAaA;;;AACA,QAAM8uC,YAAY,GAAqB,CACrC;AACE1K,cAAQ,EAAE,MADZ;AAEE6D,aAAO,EAAE,IAFX;AAGE1+D,WAAK,EAAE,IAHT;AAIEjE,cAAQ,EAAE,CAJZ;AAKE4iE,cAAQ,EAAE,UALZ;AAME1kE,cAAQ,EAAE;AANZ,KADqC,CAAvC;AAWA;;;;;AAMA;;QAIaurE,oB;;;;;AAMX,oCAAmBC,OAAnB,EAA4C;AAAA;;AAAA;;AAE1C;AAFiB,iBAAAA,OAAA,GAAAA,OAAA;AALnB,iBAAA9pE,IAAA,GAAyB4pE,YAAzB;AAQE,iBAAK5pE,IAAL,GAAY8pE,OAAZ;AAH0C;AAI3C;AAED;;;;;;;;;kCAOO;AAAA;;AACL;AACA;AAEA,cAAMC,aAAa,GAAG,CACpB,UAAa,KAAK/pE,IAAlB,CADoB,EAEpB,KAAKgqE,SAAL,CAAehS,IAFK,EAGpB,KAAKj1E,IAAL,CAAUknF,UAHU,CAAtB;AAMA,iBAAO,OAAA7zB,KAAA,eAAS2zB,aAAT,EAAwBp+E,IAAxB,CAA6B,YAAAjL,GAAA,CAAI,YAAM;AAC5C,mBAAO,QAAI,CAACwpF,YAAL,CAAkB,QAAI,CAACC,aAAL,oBAAuB,QAAI,CAACnqE,IAA5B,EAAlB,CAAP;AACD,WAFmC,CAA7B,CAAP;AAGD;AAED;;;;;;;qCAIa,CAAE;AAEf;;;;;;;qCAIqBA,I,EAAwB;AAC3C,cAAMoqE,UAAU,GAAG,KAAKJ,SAAL,CAAeK,SAAf,GAA2B,KAAKL,SAAL,CAAeM,QAA7D;AACA,iBAAOtqE,IAAI,CAAC1Y,MAAL,CAAY8iF,UAAZ,EAAwB,KAAKJ,SAAL,CAAeM,QAAvC,CAAP;AACD;AAED;;;;;;;sCAIsBtqE,I,EAAwB;AAAA;;AAC5C,cAAI,CAAC,KAAKjd,IAAL,CAAUmhC,MAAX,IAAqB,KAAKnhC,IAAL,CAAU7K,SAAV,KAAwB,EAAjD,EAAqD;AACnD,mBAAO8nB,IAAP;AACD;;AAED,iBAAOA,IAAI,CAACjd,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,gBAAMsnF,KAAK,GAAG,QAAI,CAACxnF,IAAL,CAAU7K,SAAV,KAAwB,KAAtC;;AACA,oBAAQ,QAAI,CAAC6K,IAAL,CAAUmhC,MAAlB;AACE,mBAAK,UAAL;AAAiB,uBAAOsmD,OAAO,CAACxnF,CAAC,CAACk8E,QAAH,EAAaj8E,CAAC,CAACi8E,QAAf,EAAyBqL,KAAzB,CAAd;;AACjB,mBAAK,SAAL;AAAgB,uBAAOC,OAAO,CAAC,CAACxnF,CAAC,CAAC+/E,OAAJ,EAAa,CAAC9/E,CAAC,CAAC8/E,OAAhB,EAAyBwH,KAAzB,CAAd;;AAChB,mBAAK,OAAL;AAAc,uBAAOC,OAAO,CAAC,CAACxnF,CAAC,CAACqhB,KAAJ,EAAW,CAACphB,CAAC,CAACohB,KAAd,EAAqBkmE,KAArB,CAAd;;AACd,mBAAK,UAAL;AAAiB,uBAAOC,OAAO,CAAC,CAACxnF,CAAC,CAACod,QAAJ,EAAc,CAACnd,CAAC,CAACmd,QAAjB,EAA2BmqE,KAA3B,CAAd;;AACjB,mBAAK,UAAL;AAAiB,uBAAOC,OAAO,CAACxnF,CAAC,CAACggF,QAAH,EAAa//E,CAAC,CAAC+/E,QAAf,EAAyBuH,KAAzB,CAAd;;AACjB,mBAAK,UAAL;AAAiB,uBAAOC,OAAO,CAAC,CAACxnF,CAAC,CAACsb,QAAJ,EAAc,CAACrb,CAAC,CAACqb,QAAjB,EAA2BisE,KAA3B,CAAd;;AACjB;AAAS,uBAAO,CAAP;AAPX;AASD,WAXM,CAAP;AAYD;;;;MAtEuC,cAAAE,U;;AAH1C;;;;;;;aAGaZ,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;2BAEDA,oB,EAAoB;cAHhC,OAAAn8E,UAGgC;eAHrB;AACVoI,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;AA0EjC;;;AACA,aAAS00E,OAAT,CAAiBxnF,CAAjB,EAAqCC,CAArC,EAAyDsnF,KAAzD,EAAyE;AACvE,aAAO,CAACvnF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,KAAoBsnF,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjC,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACrHD;AAAA;AAAA;;AAaA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBY;AAAsD;AAAS;;;;;;AAC/D;AAAmC;AAAkB;;;;;AAAlB;AAAA;;;;;;AAKnC;AAAsD;AAAW;;;;;;AACjE;AAAmC;AAAiB;;;;;AAAjB;AAAA;;;;;;AAKnC;AAAsD;AAAK;;;;;;AAC3D;AAAmC;AAAe;;;;;AAAf;AAAA;;;;;;AAKnC;AAAsD;AAAQ;;;;;;AAC9D;AAAmC;AAAkB;;;;;AAAlB;AAAA;;;;;;AAKnC;AAAsD;AAAS;;;;;;AAE3D;AAAyD;AAAQ;;;;;;AACzC;;;;;;AAF5B;AACI;AACA;AACJ;;;;;;;;AAFU;AAAA,8DAAkD,UAAlD,EAAkD,IAAlD;;;;;;AAOV;AAAsD;AAAe;;;;;;AAEjE;AAA2C;AAAQ;;;;;;AAC3B;;;;;;AAF5B;AACI;AACA;AACJ;;;;;;;;AAFU;AAAA,gDAAoC,UAApC,EAAoC,IAApC;;;;;;AAOV;;;;;;;;AACA;AACI;AAA2B;AAAA;AAAA;AAAA,yCAAyB,CAAzB;AAA0B,SAA1B,EAA4B,OAA5B,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5B;AACvB;AACJ;AACJ;;;;;;AAGJ;;;;;;AACA;;;;;;;;QD5BKtG,mB;;;;;AAMT,mCAAoBl8D,IAApB,EACYkwB,OADZ,EAEYhkC,KAFZ,EAGYuuE,KAHZ,EAGoC;AAAA;;AAAA;;AAChC;AAJgB,iBAAAz6D,IAAA,GAAAA,IAAA;AACR,iBAAAkwB,OAAA,GAAAA,OAAA;AACA,iBAAAhkC,KAAA,GAAAA,KAAA;AACA,iBAAAuuE,KAAA,GAAAA,KAAA;AAUM,iBAAAkI,cAAA,GAAiB,IAAI,OAAAtyC,YAAJ,EAAjB;AAED,iBAAAuyC,UAAA,GAAa,IAAI,OAAAvyC,YAAJ,EAAb;AAEjB;AACA;;AACO,iBAAAwyC,gBAAA,GAAmB,CACtB,UADsB,EAEtB,SAFsB,EAGtB,OAHsB,EAItB,UAJsB,EAKtB,UALsB,EAMtB,UANsB,EAOtB,SAPsB,CAAnB;AAUA,iBAAAlI,gBAAA,GAAmB,CAAnB;AA1B6B;AAEnC;;;;wCA0BsBvpF,K,EAAe;AAClC,eAAKuxF,cAAL,CAAoBpxC,IAApB,CAAyBngD,KAAzB;AACH;;;mCAEiB;AACd,eAAK0xF,UAAL,GAAkB,IAAI,yBAAAhB,oBAAJ,CAAyB,KAAKiB,mBAA9B,CAAlB;AACH;;;oCACkBvyF,O,EAAsB;AACzC;AACG,eAAKsyF,UAAL,GAAkB,IAAI,yBAAAhB,oBAAJ,CAAyB,KAAKiB,mBAA9B,CAAlB;;AACC,cAAG,CAACvyF,OAAO,CAACwyF,UAAR,CAAmBC,WAAvB,EAAuC;AACnC,iBAAKH,UAAL,CAAgB9nF,IAAhB,GAAuB,KAAKA,IAA5B;AACA,iBAAK8nF,UAAL,CAAgBb,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKiB,KAAL,CAAWJ,UAAX,GAAwB,KAAKA,UAA7B;AACA,iBAAKb,SAAL,CAAekB,SAAf;AACA,iBAAK1I,KAAL,CAAWpmC,aAAX;AACH;AAEJ,S,CAED;AACA;AACA;;;;0CAEyB,CACzB;AACA;AACA;AACA;AACC;;;kCAEgBpW,G,EAAS;AACtB,cAAMmlD,gBAAgB,GAAG;AACrBlT,sBAAU,EAAC,KAAKhkE,KADK;AAErBm3E,8BAAkB,EAAE,IAFC;AAGrBx1F,iBAAK,EAAE;AACH60B,qBAAO,EAAE,MAAF,OAAE,CAAF,EAAE,EAAKub,GAAL;AADN;AAHc,WAAzB;;AAOA,eAAKiS,OAAL,CAAajL,QAAb,CAAsB,CAAC,cAAD,CAAtB,EAAwCm+C,gBAAxC;AACH;;;0BA9DuBptF,K,EAAW;AAC/B,eAAK+sF,mBAAL,GAA2B/sF,KAA3B;AACH;;;;MAjBoC,OAAAzG,a;;AALzC;;;uBAKa2sF,mB,EAAmB,4C,EAAA,+B,EAAA,uC,EAAA,0C;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;yBACjB,YAAAoH,Y,EAAY,I;yBACZ,OAAAC,O,EAAO,I;yBACP,QAAAC,Q,EAAQ,I;;;;;;;;;;;;;;;;;;;;;;;;AC9BvB;AACI;AAEI;AACI;AACA;AACJ;AAGA;AACI;AACA;AACJ;AAGA;AACI;AACA;AACJ;AAGA;AACI;AACA;AACJ;AAGA;AACI;AACA;AAIJ;AAGA;AACI;AACA;AAIJ;AAGA;AACI;AACA;AAKJ;AAEA;AACA;AACJ;AAEA;AAQJ;;;;AAZ2B;AAAA,iEAAiD,uBAAjD,EAAiD,IAAjD;AACP;AAAA;AAKZ;AAAA,mIAAmC,WAAnC,EAAmC,CAAnC,EAAmC,UAAnC,EAAmC,EAAnC,EAAmC,iBAAnC,EAAmC,0BAAnC;;;;;;;;;2BDjCKtH,mB,EAAmB;cAL/B,OAAAtpC,SAK+B;eALrB;AACPljD,kBAAQ,EAAE,iBADH;AAEPmjD,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKqB,Q;;;;;;;;;;;;gBAC3B,OAAAqD,S;iBAAU,YAAAmtC,Y;;;gBACV,OAAAntC,S;iBAAU,OAAAotC,O;;;gBACV,OAAAptC,S;iBAAU,QAAAqtC,Q;;;gBAYV,OAAApxF;;;gBAIA,OAAA2gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDL;AAAA;AAAA;;AACA;AAAA;AAAA,yE,CACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;;;;;;QAMa6oC,mB;;;;;;;;AACX;;;;;0CAK0Bp7E,K,EAAU;AAClC,cAAIijF,YAAY,GAAG,IAAnB;;AAEA,kBAAQjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBoK,IAA3B;AACE,iBAAK1a,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmB4yE,aAAxB;AACED,0BAAY,GAAG,eAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmB6yE,YAAxB;AACEF,0BAAY,GAAG,cAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmB8yE,SAAxB;AACEH,0BAAY,GAAG,WAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmB+yE,gBAAxB;AACEJ,0BAAY,GAAG,kBAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBgzE,YAAxB;AACEL,0BAAY,GAAG,cAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBizE,2BAAxB;AACEN,0BAAY,GAAG,6BAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBkzE,iBAAxB;AACEP,0BAAY,GAAG,mBAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBmzE,UAAxB;AACER,0BAAY,GAAG,YAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBozE,wBAAxB;AACET,0BAAY,GAAG,0BAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBqzE,kBAAxB;AACEV,0BAAY,GAAG,oBAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBszE,iBAAxB;AACEX,0BAAY,GAAG,mBAAf;AACA;;AACF,iBAAKjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBuzE,eAAxB;AACEZ,0BAAY,GAAG,iBAAf;AACA;;AACF;AACEA,0BAAY,GAAG,oBAAoBjjF,KAAK,CAACyE,MAAN,CAAa6L,KAAb,CAAmBoK,IAAtD;AACA;AAvCJ;;AAyCA,iBAAOuoE,YAAP;AACD;AAED;;;;;;;;sCAKoBa,S,EAAc;;;;;;;;uDACzB,IAAI51E,OAAJ,CAAoB,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC9C,0BAAI,CAAC01E,SAAL,EAAiB;AACf11E,8BAAM,CAAC,kBAAD,CAAN;AACD,uBAFD,MAEO;AACL,4BACE,EAAEvW,MAAM,CAACksF,IAAP,IAAelsF,MAAM,CAACqmD,UAAtB,IAAoCrmD,MAAM,CAACmsF,QAA3C,IAAuDnsF,MAAM,CAACosF,IAAhE,CADF,EAEE;AACA71E,gCAAM,CAAC,6CAAD,CAAN;AACD;;AAED,4BAAM6vC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,8BAAM,CAAChhC,MAAP,GAAgB,UAACtgB,CAAD,EAAY;AAC1BwR,iCAAO,CAACxR,CAAC,CAAC8H,MAAF,CAASwL,MAAV,CAAP;AACD,yBAFD;;AAGAguC,8BAAM,CAACimC,OAAP,GAAiB,UAACvnF,CAAD,EAAY;AAC3ByR,gCAAM,CACJ,mDACE,QAAI,CAAC+1E,iBAAL,CAAuBxnF,CAAvB,CAFE,CAAN;AAID,yBALD;;AAMAshD,8BAAM,CAACmmC,OAAP,GAAiB,UAACznF,CAAD,EAAY;AAC3ByR,gCAAM,CACJ,iDACE,QAAI,CAAC+1E,iBAAL,CAAuBxnF,CAAvB,CAFE,CAAN;AAID,yBALD;;AAOAshD,8BAAM,CAAComC,aAAP,CAAqBP,SAArB;AACD;AACF,qBA7BM,C;;;;;;;;;AA8BR;;;kCAGSQ,O,EAAO;AACf;AACA,cAAMC,UAAU,GAAGC,IAAI,CAACF,OAAO,CAAChwF,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAvB,CAFe,CAIf;;AACA,cAAMmwF,UAAU,GAAGH,OAAO,CAAChwF,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAnB,CALe,CAOf;;AACA,cAAMowF,EAAE,GAAG,IAAIC,WAAJ,CAAgBJ,UAAU,CAAC/vF,MAA3B,CAAX;AACA,cAAMowF,EAAE,GAAG,IAAIC,UAAJ,CAAeH,EAAf,CAAX;;AACA,eAAK,IAAI/zF,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG4zF,UAAU,CAAC/vF,MAA/B,EAAuC7D,IAAC,EAAxC,EAA4C;AACxCi0F,cAAE,CAACj0F,IAAD,CAAF,GAAQ4zF,UAAU,CAACpjF,UAAX,CAAsBxQ,IAAtB,CAAR;AACH,WAZc,CAcf;AACA;;;AACA,cAAMkiF,IAAI,GAAG,IAAIkR,IAAJ,CAAS,CAACW,EAAD,CAAT,EAAc,gBAAd,EAAgC;AAAE,oBAAQD;AAAV,WAAhC,CAAb,CAhBe,CAiBf;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAa5R,IAAb;AACD;;;;;;AA/HH;;;uBAIauI,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAHlB;;;;;2BAGDA,mB,EAAmB;cAJ/B,OAAAj2E,UAI+B;eAJpB;AACVoI,oBAAU,EAAE;AADF,S;AAIoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhC;AAAA;AAAA;;;;;;QAKa4tE,a;;;;;;;4CAGc;AACvB,cAAMhD,MAAM,GAAGt6E,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAf;AACA,iBAAO,CAAC,EAAE+5E,MAAM,CAACE,UAAP,IAAqBF,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAvB,CAAR;AACD;AAED;;;;;;;;;oCAOEl7D,G,EACA2nE,W,EAAoB;;;;;;uDAEb,IAAI52E,OAAJ,CAA8B,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxD,0BAAMkrE,GAAG,GAAG,IAAIt8D,KAAJ,EAAZ;;AACA,0BAAI8nE,WAAJ,EAAiB;AACfxL,2BAAG,CAACwL,WAAJ,GAAkBA,WAAlB;AACD;;AAEDxL,yBAAG,CAACr8D,MAAJ,GAAa,YAAM;AACjB9O,+BAAO,CAACmrE,GAAD,CAAP;AACD,uBAFD;;AAIAA,yBAAG,CAAC8K,OAAJ,GAAc,UAACz0E,GAAD,EAAS;AACrBvB,8BAAM,CAACuB,GAAD,CAAN;AACD,uBAFD;;AAIA2pE,yBAAG,CAACn8D,GAAJ,GAAUA,GAAV;AACD,qBAfM,C;;;;;;;;;AAgBR;AAED;;;;;;;;;;qCAQE4nE,G,EACAxzC,K,EACArkD,M,EAAc;AAEd,cAAI,CAACqkD,KAAD,IAAU,CAACrkD,MAAf,EAAuB;AACrB,mBAAO63F,GAAP;AACD;;AAED,cAAMC,SAAS,GAAGnnF,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAlB;AACA4mF,mBAAS,CAACzzC,KAAV,GAAkBA,KAAlB;AACAyzC,mBAAS,CAAC93F,MAAV,GAAmBA,MAAnB;AACA,cAAM+3F,GAAG,GAAGD,SAAS,CAAC3M,UAAV,CAAqB,IAArB,CAAZ;AACA4M,aAAG,CAAChM,SAAJ,CAAc8L,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,SAAS,CAACzzC,KAAnC,EAA0CyzC,SAAS,CAAC93F,MAApD;AACA,iBAAO83F,SAAP;AACD;AAED;;;;;;;;;oCAMkB7nE,G,EAAa1I,O,EAAY;;;;;;;wBACpC,KAAKywE,iBAAL,E;;;;;0BACG,IAAIx2F,KAAJ,CAAU,yCAAV,C;;;0BAEJ,CAAC+lB,OAAD,IAAY,CAAC0I,G;;;;;0BACT,IAAIzuB,KAAJ,CAAU,oDAAV,C;;;AAER;AACA+lB,2BAAO,GAAG;AACRvnB,4BAAM,EAAEunB,OAAO,CAACvnB,MAAR,GACJunB,OAAO,CAACvnB,MADJ,GAEJunB,OAAO,CAAC88B,KAAR,GACA,IADA,GAEA98B,OAAO,CAACjb,IAAR,GACA,IADA,GAEA,IAPI;AAQR+3C,2BAAK,EAAE98B,OAAO,CAAC88B,KAAR,GACH98B,OAAO,CAAC88B,KADL,GAEH98B,OAAO,CAACvnB,MAAR,GACA,IADA,GAEAunB,OAAO,CAACjb,IAAR,GACA,IADA,GAEA,IAdI;AAeRA,0BAAI,EAAEib,OAAO,CAACjb,IAAR,GAAeib,OAAO,CAACjb,IAAvB,GAA8B,GAf5B;AAgBR2rF,+BAAS,EAAE1wE,OAAO,CAAC0wE,SAAR,GAAoB1wE,OAAO,CAAC0wE,SAA5B,GAAwC,IAhB3C;AAiBRrwF,0BAAI,EAAE2f,OAAO,CAAC3f,IAAR,GAAe2f,OAAO,CAAC3f,IAAvB,GAA8B,CAjB5B;AAkBR+jF,kCAAY,EAAEpkE,OAAO,CAACokE,YAAR,GAAuBpkE,OAAO,CAACokE,YAA/B,GAA8C,YAlBpD;AAmBRiM,iCAAW,EAAErwE,OAAO,CAACqwE,WAAR,GAAsBrwE,OAAO,CAACqwE,WAA9B,GAA4C;AAnBjD,qBAAV;;;AAuBc,2BAAM,KAAK/L,WAAL,CAAiB57D,GAAjB,EAAsB1I,OAAO,CAACqwE,WAA9B,CAAN;;;AAANxL,uB;;0BAEF7kE,OAAO,CAACvnB,MAAR,IAAkBunB,OAAO,CAAC88B,K;;;;;uDAErB,KAAK6zC,sBAAL,CACL9L,GADK,EAEL7kE,OAAO,CAAC88B,KAFH,EAGL98B,OAAO,CAACvnB,MAHH,EAILunB,OAAO,CAAC3f,IAJH,EAKL2f,OAAO,CAACokE,YALH,C;;;yBAOEpkE,OAAO,CAACjb,I;;;;;0BACb,OAAOib,OAAO,CAAC0wE,SAAf,KAA6B,Q;;;;;oCACvB1wE,OAAO,CAAC0wE,SAAR,CAAkBnrF,WAAlB,E;wDACD,I,0BAGA,I,0BAGA,I;;;;AALHya,2BAAO,CAACjb,IAAR,IAAgB,IAAhB;;;;AAGAib,2BAAO,CAACjb,IAAR,IAAgB,OAAO,IAAvB;;;;AAGAib,2BAAO,CAACjb,IAAR,IAAgB,OAAO,IAAP,GAAc,IAA9B;;;;uDAIC,KAAK6rF,iBAAL,CAAuB/L,GAAvB,EAA4B7kE,OAAO,CAACjb,IAApC,EAA0Cib,OAAO,CAACokE,YAAlD,C;;;0BAED,IAAInqF,KAAJ,CAAU,oCAAV,C;;;;;;;;;0BAGF,IAAIA,KAAJ,e;;;;;;;;;AAET;AAED;;;;;;;;;;;;;+CAWE2uB,K,EACAk0B,K,EACArkD,M,EACA4H,I,EACA+jF,Y,EAAoB;AAEpB,cAAI,CAACx7D,KAAL,EAAY;AACV,mBAAO,IAAP;AACD;;AACD,cAAI,CAACw7D,YAAL,EAAmB;AACjBA,wBAAY,GAAG,YAAf;AACD;;AAED,eAAKyM,UAAL,GAAkBznF,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAlB;;AAEA,cAAI,CAACmzC,KAAD,IAAU,CAACrkD,MAAf,EAAuB;AACrBqkD,iBAAK,GAAGl0B,KAAK,CAACk0B,KAAd;AACArkD,kBAAM,GAAGmwB,KAAK,CAACnwB,MAAf;AACD,WAHD,MAGO,IAAI,CAACqkD,KAAD,IAAUrkD,MAAd,EAAsB;AAC3BqkD,iBAAK,GAAIrkD,MAAM,GAAGmwB,KAAK,CAACnwB,MAAhB,GAA0BmwB,KAAK,CAACk0B,KAAxC;AACD,WAFM,MAEA,IAAIA,KAAK,IAAI,CAACrkD,MAAd,EAAsB;AAC3BA,kBAAM,GAAIqkD,KAAK,GAAGl0B,KAAK,CAACk0B,KAAf,GAAwBl0B,KAAK,CAACnwB,MAAvC;AACD;;AAED,cAAMq4F,cAAc,GAAGloE,KAAK,CAACk0B,KAAN,KAAgBA,KAAhB,IAAyB,CAACz8C,IAA1B,GAAiC,CAAjC,GAAqC,CAACuoB,KAAK,CAACk0B,KAAN,GAAcA,KAAf,IAAwBz8C,IAApF;AACA,cAAM0wF,eAAe,GAAGnoE,KAAK,CAACnwB,MAAN,KAAiBA,MAAjB,IAA2B,CAAC4H,IAA5B,GAAmC,CAAnC,GAAuC,CAACuoB,KAAK,CAACnwB,MAAN,GAAeA,MAAhB,IAA0B4H,IAAzF;AACA,eAAKwwF,UAAL,CAAgB/zC,KAAhB,GAAwBl0B,KAAK,CAACk0B,KAA9B;AACA,eAAK+zC,UAAL,CAAgBp4F,MAAhB,GAAyBmwB,KAAK,CAACnwB,MAA/B;AAEA,eAAKo4F,UAAL,CACGjN,UADH,CACc,IADd,EAEGY,SAFH,CAEa57D,KAFb,EAEoB,CAFpB,EAEuB,CAFvB,EAE0B,KAAKioE,UAAL,CAAgB/zC,KAF1C,EAEiD,KAAK+zC,UAAL,CAAgBp4F,MAFjE;;AAGA,eAAK,IAAIyD,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGmE,IAApB,EAA0BnE,IAAC,EAA3B,EAA+B;AAC7B,gBAAM80F,QAAQ,GAAGpoE,KAAK,CAACk0B,KAAN,GAAcg0C,cAAc,GAAG50F,IAAhD;AACA,gBAAM+0F,SAAS,GAAGroE,KAAK,CAACnwB,MAAN,GAAes4F,eAAe,GAAG70F,IAAnD;AACA,iBAAK20F,UAAL,GAAkB,KAAKK,YAAL,CAAkB,KAAKL,UAAvB,EAAmCG,QAAnC,EAA6CC,SAA7C,CAAlB;AACD;;AACD,eAAKJ,UAAL,GAAkB,KAAKK,YAAL,CAAkB,KAAKL,UAAvB,EAAmC/zC,KAAnC,EAA0CrkD,MAA1C,CAAlB;AAEA,iBAAO,KAAKo4F,UAAL,CAAgBnM,SAAhB,CAA0BN,YAA1B,CAAP;AACD;AAED;;;;;;;;;;;0CASEx7D,K,EACAuoE,U,EACA/M,Y,EAAoB;AAEpB,cAAI,CAACx7D,KAAL,EAAY;AACV,mBAAO,IAAP;AACD;;AACD,cAAI,CAACw7D,YAAL,EAAmB;AACjBA,wBAAY,GAAG,YAAf;AACD;;AAED,eAAKyM,UAAL,GAAkBznF,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAlB;AACA,eAAKknF,UAAL,CAAgB/zC,KAAhB,GAAwBl0B,KAAK,CAACk0B,KAA9B;AACA,eAAK+zC,UAAL,CAAgBp4F,MAAhB,GAAyBmwB,KAAK,CAACnwB,MAA/B;AACA,eAAKo4F,UAAL,CACGjN,UADH,CACc,IADd,EAEGY,SAFH,CAEa57D,KAFb,EAEoB,CAFpB,EAEuB,CAFvB,EAE0B,KAAKioE,UAAL,CAAgB/zC,KAF1C,EAEiD,KAAK+zC,UAAL,CAAgBp4F,MAFjE;AAIA,cAAI24F,SAAS,GAAG,KAAKP,UAAL,CAAgBnM,SAAhB,CAA0BN,YAA1B,CAAhB;AACA,cAAI5oE,MAAM,GAAG41E,SAAb;AAEA,cAAMC,cAAc,GAAG,KAAKC,iBAAL,CAAuBF,SAAvB,EAAkChN,YAAlC,CAAvB;AACA,cAAImN,cAAc,GAAGpzF,IAAI,CAACmD,GAAL,CACnB,CADmB,EAEnBnD,IAAI,CAACi8B,GAAL,CAASi3D,cAAc,GAAGF,UAA1B,EAAsC,GAAtC,CAFmB,CAArB;AAKA,cAAIK,aAAa,GAAG,EAApB;;AACA,iBAAOH,cAAc,GAAGF,UAAjB,IAA+BK,aAAa,KAAK,CAAxD,EAA2D;AACzDA,yBAAa;AAEb,gBAAMC,YAAY,GAAG;AACnB30C,mBAAK,EAAE,KAAK+zC,UAAL,CAAgB/zC,KAAhB,GAAwBy0C,cADZ;AAEnB94F,oBAAM,EAAE,KAAKo4F,UAAL,CAAgBp4F,MAAhB,GAAyB84F;AAFd,aAArB;AAIA,gBAAM7N,MAAM,GAAG,KAAKwN,YAAL,CACb,KAAKL,UADQ,EAEbY,YAAY,CAAC30C,KAFA,EAGb20C,YAAY,CAACh5F,MAHA,CAAf;AAMA24F,qBAAS,GAAG1N,MAAM,CAACgB,SAAP,CAAiBN,YAAjB,CAAZ;AACA,gBAAMsN,iBAAiB,GAAG,KAAKJ,iBAAL,CAAuBF,SAAvB,EAAkChN,YAAlC,CAA1B;;AAEA,gBAAIsN,iBAAiB,GAAGP,UAApB,GAAiC,GAAjC,IAAwCO,iBAAiB,KAAK,CAAlE,EAAqE;AACnEH,4BAAc,GAAGA,cAAc,GAAG,CAAlC;;AACA,kBAAIA,cAAc,GAAG,CAArB,EAAwB;AACtBC,6BAAa,GAAG,CAAhB;AACD;AACF,aALD,MAKO;AACL,mBAAKX,UAAL,GAAkBnN,MAAlB;AACAloE,oBAAM,GAAG41E,SAAT;AACD;;AAED,iBAAKP,UAAL,GAAkBnN,MAAlB;AACD;;AAED,iBAAOloE,MAAP;AACD;;;0CAEiBm2E,S,EAAmBvN,Y,EAAoB;AACvD,kBAAQA,YAAR;AACE,iBAAK,YAAL;AACEA,0BAAY,GAAG,WAAf;AACA;;AACF;AACEA,0BAAY,GAAG,WAAf;AACA;AANJ;;AAQA,iBAAOjmF,IAAI,CAACmD,GAAL,CACL,CADK,EAELnD,IAAI,CAACszB,KAAL,CACI,CAACkgE,SAAS,CAAC5xF,MAAV,GAAmB,CAAC,UAAUqkF,YAAV,GAAyB,UAA1B,EAAsCrkF,MAA1D,IAAmE,CAApE,GAAyE,CAD5E,CAFK,CAAP;AAMD;;;;;;AA/QH;;;uBAGa2mF,a;AAAa,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;2BAEDA,a,EAAa;cAHzB,OAAAh2E,UAGyB;eAHd;AACVoI,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACL1B;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAIa8tE,gB;AAHb;AAAA;;AAKW,aAAAT,GAAA,GAAM,IAAI,kBAAJ,EAAN;AA4EV;AA1EI;;;;;;;;;;mCAMYtB,G,EAAKjrF,I,EAAgC;AAAA,cAA1Bg4F,WAA0B,uEAAZ,KAAY;AAAA,cAALvqE,KAAK;AAC9C;AACA,cAAMy1B,KAAK,GAAG,GAAd;AACA,cAAMrkD,MAAM,GAAG,GAAf;AACA,cAAM4yF,IAAI,GAAG,GAAb;AACA,cAAMC,YAAY,GAAGxuC,KAAK,GAAC,CAA3B;AACA,cAAMyuC,SAAS,GAAGD,YAAY,GAAG,CAAjC;AACA,cAAME,SAAS,GAAGD,SAAS,GAAG,EAA9B;AACA,cAAME,UAAU,GAAGF,SAAS,GAAG,EAA/B;AAEA,cAAM7H,MAAM,GAAsBt6E,QAAQ,CAACO,aAAT,CAAuB,QAAvB,CAAlC;AACA+5E,gBAAM,CAAC95E,YAAP,CAAoB,OAApB,EAA6BkzC,KAAK,CAACx4C,QAAN,EAA7B;AACAo/E,gBAAM,CAAC95E,YAAP,CAAoB,QAApB,EAA8BnR,MAAM,CAAC6L,QAAP,EAA9B;AACA,cAAMonF,GAAG,GAAGhI,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AAEA8H,aAAG,CAACC,WAAJ,GAAkB,aAAlB;AACAD,aAAG,CAACE,MAAJ,CAAWN,YAAX,EAAyB,CAAzB;AACAI,aAAG,CAACG,MAAJ,CAAWP,YAAX,EAAyB7yF,MAAzB;AACAizF,aAAG,CAACI,MAAJ;AAEAJ,aAAG,CAACK,IAAJ,GAAW,uDAAX;AACAL,aAAG,CAACM,SAAJ,GAAgB,QAAhB;AACAN,aAAG,CAACO,QAAJ,CAAc2F,WAAW,GAAGh4F,IAAH,GAAUA,IAAI,GAAG,MAAP,GAAgBytB,KAAhB,GAAwB,GAA3D,EAAgEikE,YAAhE,EAA8E,EAA9E,EAtB8C,CAwB9C;;AACAI,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BE,SAA5B,EAAuC,CAAvC,EAA0C,IAAIptF,IAAI,CAACiuF,EAAnD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GA7B8C,CA+B9C;;AACAJ,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BG,SAA5B,EAAuC,CAAvC,EAA0C,IAAIrtF,IAAI,CAACiuF,EAAnD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GApC8C,CAsC9C;;AACAJ,aAAG,CAACQ,SAAJ;AACAR,aAAG,CAACS,GAAJ,CAAQb,YAAR,EAAsBD,IAAtB,EAA4BI,UAA5B,EAAwC,CAAxC,EAA2C,IAAIttF,IAAI,CAACiuF,EAApD;AACAV,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAAC16C,IAAJ;AACA06C,aAAG,CAACI,MAAJ,GA3C8C,CA6C9C;;AACAJ,aAAG,CAACW,SAAJ,GAAgB,SAAhB;AACAX,aAAG,CAACK,IAAJ,GAAW,YAAX;AACAL,aAAG,CAACO,QAAJ,CAAc2F,WAAW,GAAG,aAAH,GAAmB,SAA5C,EAAuDtG,YAAvD,EAAqE,GAArE,EAhD8C,CAkD9C;;AACAI,aAAG,CAACY,QAAJ,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAnD8C,CAoD9C;;AACAZ,aAAG,CAACW,SAAJ,GAAgB,SAAhB,CArD8C,CAuD9C;;AACAX,aAAG,CAACK,IAAJ,GAAW,uDAAX;AACAL,aAAG,CAACO,QAAJ,CAAa,aAAb,EAA4BX,YAA5B,EAA0C,GAA1C,EAzD8C,CA2D9C;;AACAzG,aAAG,KAAK,IAAR,IAAgB6G,GAAG,CAAClH,SAAJ,CAAcK,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAAhB,CA5D8C,CA8D9C;;AACA,cAAMJ,OAAO,GACbf,MAAM,CAACgB,SAAP,CAAiB,WAAjB,CADA;AAEA,iBAAOD,OAAP;AACD;;;;;;AA/EP;;;uBAGamC,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;2BAEDA,gB,EAAgB;cAH5B,OAAAl2E,UAG4B;eAHjB;AACVoI,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACL7B;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAMaquE,sB;AASX,wCAAc;AAAA;;AARd;AACkB,aAAA0K,iBAAA,GAA0C,IAAI,OAAAz2C,YAAJ,EAA1C,CAOJ,CANd;;AACyC,aAAAvM,UAAA,GAAa,EAAb,CAK3B,CAL4C;;AACrB,aAAAijD,WAAA,GAAc,WAAd,CAIvB,CAJkD;;AACrB,aAAAC,WAAA,GAAc,SAAd;AACC,aAAAC,YAAA,GAAe,KAAf;AAE3B;;;;mCAEuCroC,G,EAAG;AACzDA,aAAG,CAACvoB,cAAJ;AACAuoB,aAAG,CAACt8C,eAAJ;AACA,eAAKwhC,UAAL,GAAkB,WAAlB;AACA,eAAKkjD,WAAL,GAAmB,WAAnB;AACA,eAAKD,WAAL,GAAmB,YAAnB;AACD;;;oCAEyDnoC,G,EAAG;AAC3DA,aAAG,CAACvoB,cAAJ;AACAuoB,aAAG,CAACt8C,eAAJ;AACA,eAAKwhC,UAAL,GAAkB,MAAlB;AACA,eAAKkjD,WAAL,GAAmB,SAAnB;AACA,eAAKD,WAAL,GAAmB,YAAnB;AACD;;;+BAE+CnoC,G,EAAG;AACjDA,aAAG,CAACvoB,cAAJ;AACAuoB,aAAG,CAACt8C,eAAJ;AACA,cAAMw2E,GAAG,GAAG,qBAAAN,gBAAA,CAAiB1jF,KAAjB,CAAuB,GAAvB,CAAZ;AACA,eAAKgvC,UAAL,GAAkB,MAAlB;AACA,eAAKkjD,WAAL,GAAmB,SAAnB;AACA,eAAKD,WAAL,GAAmB,YAAnB,CANiD,CAOjD;;AACA,cAAIvoC,KAAK,GAAG,mBAAI,IAAI7c,GAAJ,CAAQid,GAAG,CAACsoC,YAAJ,CAAiB1oC,KAAzB,CAAJ,EAAqC9kD,MAArC,CAA4C,UAACe,CAAD;AAAA,mBAAYq+E,GAAG,CAAC3sE,QAAJ,CAAa1R,CAAC,CAAC1C,IAAf,CAAZ;AAAA,WAA5C,CAAZ,CARiD,CAQ2C;AAC5F;;;AACA,eAAK+uF,iBAAL,CAAuBv1C,IAAvB,CAA4BiN,KAA5B;AACD;;;;;;AA1CH;;;uBAIa49B,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA;AAAA;;mBAAtB,sB;AAAkB,W,EAAA,W,EAAA;AAAA,mBAAlB,uBAAkB;AAAC,W,EAAA,M,EAAA;AAAA,mBAAnB,kBAAmB;AAAL,W;;;;;;;;;;;;;;2BAAdA,sB,EAAsB;cAJlC,OAAA3sF,SAIkC;eAJxB;AACTC,kBAAQ,EAAE;AADD,S;AAIwB,Q;;;;gBAEhC,OAAAqjD;;;gBAEA,OAAAo0C,W;iBAAY,kB;;;gBACZ,OAAAA,W;iBAAY,c;;;gBACZ,OAAAA,W;iBAAY,oB;;;gBACZ,OAAAA,W;iBAAY,qB;;;gBAIZ,OAAA5kF,Y;iBAAa,U,EAAY,CAAC,QAAD,C;;;gBAQzB,OAAAA,Y;iBAAa,W,EAAa,CAAC,QAAD,C;;;gBAQ1B,OAAAA,Y;iBAAa,M,EAAQ,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;;;;ACJX,YAAAi9E,eAAA,GAAmC,CAC5C;AAAEzgF,aAAO,EAAE,UAAX;AAAuB/I,WAAK,EAAE,UAA9B;AAA0CqlB,UAAI,EAAE;AAAhD,KAD4C,EAE5C;AAAEtc,aAAO,EAAE,UAAX;AAAuB/I,WAAK,EAAE,UAA9B;AAA0CqlB,UAAI,EAAE;AAAhD,KAF4C,CAAnC;AAKA,YAAAiiE,iBAAA,GAAgC;AAC5C,kBAAY,CACX;AAAEv+E,eAAO,EAAE,YAAX;AAAyB/I,aAAK,EAAE,YAAhC;AAA8CqlB,YAAI,EAAE;AAApD,OADW,EAEX;AAAEtc,eAAO,EAAE,MAAX;AAAmB/I,aAAK,EAAE,MAA1B;AAAkCqlB,YAAI,EAAE;AAAxC,OAFW,CADgC;AAK5C,kBAAY,CACX;AAAEtc,eAAO,EAAE,SAAX;AAAsB/I,aAAK,EAAE,SAA7B;AAAwCqlB,YAAI,EAAE;AAA9C,OADW,EAEX;AAAEtc,eAAO,EAAE,SAAX;AAAsB/I,aAAK,EAAE,SAA7B;AAAwCqlB,YAAI,EAAE;AAA9C,OAFW,EAGX;AAAEtc,eAAO,EAAE,YAAX;AAAyB/I,aAAK,EAAE,YAAhC;AAA8CqlB,YAAI,EAAE;AAApD,OAHW,EAIX;AAAEtc,eAAO,EAAE,MAAX;AAAmB/I,aAAK,EAAE,MAA1B;AAAkCqlB,YAAI,EAAE;AAAxC,OAJW,EAKX;AAAEtc,eAAO,EAAE,YAAX;AAAyB/I,aAAK,EAAE,YAAhC;AAA8CqlB,YAAI,EAAE;AAApD,OALW;AALgC,KAAhC;AAcA,YAAAykE,qBAAA,GAAyC,CACrD;AAAE/gF,aAAO,EAAE,UAAX;AAAuB/I,WAAK,EAAE,MAA9B;AAAsCqlB,UAAI,EAAE;AAA5C,KADqD,EAErD;AAAEtc,aAAO,EAAE,cAAX;AAA2B/I,WAAK,EAAE,OAAlC;AAA2CqlB,UAAI,EAAE;AAAjD,KAFqD,CAAzC;AAKA,YAAA4kE,4BAAA,GAAgD,CAC5D;AAAElhF,aAAO,EAAE,cAAX;AAA2B/I,WAAK,EAAE,YAAlC;AAAgDqlB,UAAI,EAAE;AAAtD,KAD4D,EAE5D;AACA;AAAEtc,aAAO,EAAE,IAAX;AAAiB/I,WAAK,EAAE,IAAxB;AAA8BqlB,UAAI,EAAE;AAApC,KAH4D,CAAhD;AAMA,YAAA+9D,mBAAA,GAAsB;AAClCrnC,WAAK,EAAE,GAD2B;AAElCrkD,YAAM,EAAE;AAF0B,KAAtB;AAKA,YAAA8qF,gBAAA,GAAmB,2CAAnB;;AAEb,aAAgB3hF,SAAhB,GAAyB;AACxB,aAAQ,IAAInE,IAAJ,EAAD,CAAa02B,OAAb,EAAP;AACA;;AAFD;;;;;;;;;;;;;;;;;;;;ACnEA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMg+D,UAAU,GAAgB,CAC5B,kBAAApS,cAD4B,EAE5B,0BAAAV,qBAF4B,EAG5B,oBAAAD,gBAH4B,EAI5B,0BAAAD,YAJ4B,CAAhC;AAOA,QAAMiT,UAAU,GAAgB,CAC5B,OAAAr3F,0BAD4B,CAAhC;AAIA,QAAMgwD,gBAAgB,GAAU,CAC5B,SAAAC,eAD4B,EAE5B,YAAAC,iBAF4B,EAG5B,SAAAC,eAH4B,EAI5B,aAAAC,kBAJ4B,EAK5B,QAAAC,cAL4B,EAM5B,mBAAAC,wBAN4B,EAO5B,eAAAC,oBAP4B,EAQ5B,eAAAC,qBAR4B,EAS5B,SAAAC,eAT4B,EAU5B,QAAAC,cAV4B,EAW5B,OAAAC,eAX4B,EAY5B,OAAAC,aAZ4B,EAa5B,WAAAC,iBAb4B,EAc5B,UAAAC,gBAd4B,EAe5B,QAAAC,cAf4B,EAgB5B,OAAAC,aAhB4B,EAiB5B,eAAAC,oBAjB4B,CAAhC;AAoBA,QAAMqmC,WAAW,GAAU,CACvB,YAAAvlB,eADuB,EAEvB,YAAAwlB,cAFuB,EAGvB,QAAAC,cAHuB,CAA3B;;QAuCa1rB,mB;;;;AAjCb;;YAiCaA;;;;yBAAAA,mB;AAAmB,O;AAAA,iBA1BxB,SAAA/tE,YA0BwB,EAzBxB,QAAA8oD,WAyBwB,EAxBxB,QAAAC,mBAwBwB,EAvBxB,YAAA2wC,YAuBwB,EAtBxB,oBAAAC,mBAsBwB,EArBxB,SAAAttB,YAqBwB,EApBxB,kBAAApjB,YAoBwB,EAnBxB,WAAA4kB,cAmBwB,EAlBxB,YAAAhlB,cAkBwB,EAjBxB,kBAAAD,oBAiBwB,SAhBrBqJ,gBAgBqB,EAfrBsnC,WAeqB,GAdxB,KAAAvwC,QAcwB,IAXxB,YAAA0wC,YAWwB,EAVxB,oBAAAC,mBAUwB,EATxB,YAAA9wC,cASwB,EARxB,kBAAAD,oBAQwB,EA1D5B,SAAAsJ,eA0D4B,EAzD5B,YAAAC,iBAyD4B,EAxD5B,SAAAC,eAwD4B,EAvD5B,aAAAC,kBAuD4B,EAtD5B,QAAAC,cAsD4B,EArD5B,mBAAAC,wBAqD4B,EApD5B,eAAAC,oBAoD4B,EAnD5B,eAAAC,qBAmD4B,EAlD5B,SAAAC,eAkD4B,EAjD5B,QAAAC,cAiD4B,EAhD5B,OAAAC,eAgD4B,EA/C5B,OAAAC,aA+C4B,EA9C5B,WAAAC,iBA8C4B,EA7C5B,UAAAC,gBA6C4B,EA5C5B,QAAAC,cA4C4B,EA3C5B,OAAAC,aA2C4B,EA1C5B,eAAAC,oBA0C4B,EAtC5B,YAAA8gB,eAsC4B,EArC5B,YAAAwlB,cAqC4B,EApC5B,QAAAC,cAoC4B;;;;+EAAnB1rB,mB,EAAmB;AAAA,uBArE5B,kBAAAkZ,cAqE4B,EApE5B,0BAAAV,qBAoE4B,EAnE5B,oBAAAD,gBAmE4B,EAlE5B,0BAAAD,YAkE4B,EA9D5B,OAAApkF,0BA8D4B,EA7BxB,OAAAwS,WA6BwB;AA7Bb,kBAGX,SAAAzU,YAHW,EAIX,QAAA8oD,WAJW,EAKX,QAAAC,mBALW,EAMX,YAAA2wC,YANW,EAOX,oBAAAC,mBAPW,EAQX,SAAAttB,YARW,EASX,kBAAApjB,YATW,EAUX,WAAA4kB,cAVW,EAWX,YAAAhlB,cAXW,EAYX,kBAAAD,oBAZW,EA7Bf,SAAAsJ,eA6Be,EA5Bf,YAAAC,iBA4Be,EA3Bf,SAAAC,eA2Be,EA1Bf,aAAAC,kBA0Be,EAzBf,QAAAC,cAyBe,EAxBf,mBAAAC,wBAwBe,EAvBf,eAAAC,oBAuBe,EAtBf,eAAAC,qBAsBe,EArBf,SAAAC,eAqBe,EApBf,QAAAC,cAoBe,EAnBf,OAAAC,eAmBe,EAlBf,OAAAC,aAkBe,EAjBf,WAAAC,iBAiBe,EAhBf,UAAAC,gBAgBe,EAff,QAAAC,cAee,EAdf,OAAAC,aAce,EAbf,eAAAC,oBAae,EATf,YAAA8gB,eASe,EARf,YAAAwlB,cAQe,EAPf,QAAAC,cAOe,EAeX,KAAAzwC,QAfW,CA6Ba;AAdhB,kBAGR,YAAA0wC,YAHQ,EAIR,oBAAAC,mBAJQ,EAKR,YAAA9wC,cALQ,EAMR,kBAAAD,oBANQ,EAvDZ,kBAAAq+B,cAuDY,EAtDZ,0BAAAV,qBAsDY,EArDZ,oBAAAD,gBAqDY,EApDZ,0BAAAD,YAoDY,EAhDZ,OAAApkF,0BAgDY,EA5CZ,SAAAiwD,eA4CY,EA3CZ,YAAAC,iBA2CY,EA1CZ,SAAAC,eA0CY,EAzCZ,aAAAC,kBAyCY,EAxCZ,QAAAC,cAwCY,EAvCZ,mBAAAC,wBAuCY,EAtCZ,eAAAC,oBAsCY,EArCZ,eAAAC,qBAqCY,EApCZ,SAAAC,eAoCY,EAnCZ,QAAAC,cAmCY,EAlCZ,OAAAC,eAkCY,EAjCZ,OAAAC,aAiCY,EAhCZ,WAAAC,iBAgCY,EA/BZ,UAAAC,gBA+BY,EA9BZ,QAAAC,cA8BY,EA7BZ,OAAAC,aA6BY,EA5BZ,eAAAC,oBA4BY,EAxBZ,YAAA8gB,eAwBY,EAvBZ,YAAAwlB,cAuBY,EAtBZ,QAAAC,cAsBY,EAWR,OAAAhlF,WAXQ;AAcgB,O;AAHb,K;;;;;2BAGNs5D,mB,EAAmB;cAjC/B,OAAA9tE,QAiC+B;eAjCtB;AACN6B,sBAAY,YACLu3F,UADK,EAELC,UAFK,GAGR,OAAA7kF,WAHQ,EADN;AAMNvU,iBAAO,GACH,SAAAF,YADG,EAEH,QAAA8oD,WAFG,EAGH,QAAAC,mBAHG,EAIH,YAAA2wC,YAJG,EAKH,oBAAAC,mBALG,EAMH,SAAAttB,YANG,EAOH,kBAAApjB,YAPG,EAQH,WAAA4kB,cARG,EASH,YAAAhlB,cATG,EAUH,kBAAAD,oBAVG,SAWAqJ,gBAXA,EAYAsnC,WAZA,GAaH,KAAAvwC,QAbG,EAND;AAqBNjnD,iBAAO,GACH,YAAA23F,YADG,EAEH,oBAAAC,mBAFG,EAGH,YAAA9wC,cAHG,EAIH,kBAAAD,oBAJG,SAKAywC,UALA,EAMAC,UANA,EAOArnC,gBAPA,EAQAsnC,WARA,GASH,OAAA9kF,WATG;AArBD,S;AAiCsB,Q;;;;;;;;;;;;;;;;;;;;;;ACxHhC;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLI;AACI;AACA;AACJ;;;;;;AACA;AACI;AACJ;;;;;;AACA;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAmB;AACzC;AACJ;;;;QDFSi3D,qB;;;;;AAMT,qCAAoBlrD,QAApB,EAA0D8rB,MAA1D,EAAgF;AAAA;;AAAA;;AAC5E;AADgB,iBAAA9rB,QAAA,GAAAA,QAAA;AAAsC,iBAAA8rB,MAAA,GAAAA,MAAA;AAAsB;AAE/E;AAED;;;;;mCA4Be;AAAA;;AACX,eAAKxpC,YAAL,CACI,SADJ,EAEI,KAAK0d,QAAL,CAAcld,MAAd,CAA8C,SAA9C,EAAyDN,SAAzD,CAAmE,UAACua,OAAD,EAAa;AAC5E,oBAAI,CAACq8E,aAAL,GAAqBr8E,OAArB;AACH,WAFD,CAFJ;;AAMA,eAAKiD,QAAL,CAAc3D,WAAd,CAA0BhH,IAA1B,CAA+B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA/B,EAAgD9Y,SAAhD,CAA0D,YAAM;AAC5D,oBAAI,CAACokF,IAAL,GAAY,QAAI,CAAC5mE,QAAL,CAAcd,OAAd,CAAsB,eAAtB,KAA0C;AAAE1V,kBAAI,EAAE;AAAR,aAAtD;AACH,WAFD;AAGH;;;4BArCoB;AACjB,iBAAO,CAAC,KAAKsiC,MAAL,CAAYuM,YAApB;AACH;AAED;;;;4BACqB;AACjB,cAAI,KAAK+gD,aAAT,EAAwB;AACpB,iBAAK,IAAMC,GAAX,IAAkB,KAAKD,aAAvB,EAAsC;AAClC,kBAAI,KAAKA,aAAL,CAAmBC,GAAnB,KAA2B,KAAKD,aAAL,CAAmBC,GAAnB,EAAwB/5F,KAAxB,KAAkC,SAAjE,EAA4E;AACxE,uBAAO,IAAP;AACH;AACJ;AACJ;;AACD,iBAAO,KAAP;AACH;AAED;;;;4BAC6B;AACzB,cAAMmD,IAAI,GAAmB,EAA7B;;AACA,eAAK,IAAM42F,GAAX,IAAkB,KAAKD,aAAvB,EAAsC;AAClC,gBAAI,KAAKA,aAAL,CAAmBC,GAAnB,CAAJ,EAA6B;AACzB52F,kBAAI,CAAC2J,IAAL,CAAU,KAAKgtF,aAAL,CAAmBC,GAAnB,CAAV;AACH;AACJ;;AACD,iBAAO52F,IAAP;AACH;;;;MApCsC,OAAAzB,a;;AAL3C;;;uBAKakqE,qB,EAAqB,2C,EAAA,qC;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,+C;AAAA,c;AAAA,a;AAAA,iR;AAAA;AAAA;ACblC;AACI;AAIA;AAGA;AAQJ;;;;AAfsB;AAAA;AAIQ;AAAA;AAGC;AAAA;;;;;;;;;2BDKlBA,qB,EAAqB;cALjC,OAAA7mB,SAKiC;eALvB;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD;AAHJ,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdlC;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBgB;AACI;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACD;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC;AAAkE;AAAM;AAC5E;AACJ;;;;;;;;AARQ;AAAA,6CAAe,QAAf,EAAe,OAAf,EAAe,MAAf,EAAe,gDAAf;AAMU;AAAA;;;;;;AATtB;AACI;AAWJ;;;;;AAXyB;AAAA;;;;;;;;;;;;;;;;;;;;;;AA3BjC;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAuB;AAAO;AAAgD;AAAO;AACvG;AACI;AAAmB;AAAC;AACpB;AAAkB;AAA2B;AACjD;AACA;AACI;AAAmB;AAAK;AACxB;AACI;AAMA;AAAW;AAAiB;AAChC;AACJ;AACA;AACJ;AACA;AACI;AACA;AAaA;AAA+D;AAAA;AAAA;AAAA;AAAA;AAC3D;AACI;AACI;AACJ;AACA;AAAkB;AAAW;AAC7B;AACJ;AACJ;AACJ;AACJ;;;;;AA9CsB;AAAA;AAEI;AAAA;AAA8B;AAAA;AAG1B;AAAA;AAkBR;AAAA,mDAAiE,cAAjE,EAAiE,gBAAjE;AAa8B;AAAA;AAGtB;AAAA;;;;;;AA3ClC;AACI;AAkDJ;;;;;AAnDmB;AACc;AAAA;;;;QDWpB+0C,kB;;;;;AAST,oCAAc;AAAA;;AAAA;;AACV;AAJJ;;AACO,iBAAAriE,SAAA,GAAoB,EAApB;AAEO;AAEb;;;;oCAEkBh1B,O,EAAwB;AAAA;;;AACvC;;;AACA,cAAIA,OAAO,CAACgQ,KAAR,IAAiBhQ,OAAO,CAACge,IAA7B,EAAmC;AAC/B,iBAAKgX,SAAL,GAAiB,YAAKhX,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAExY,KAAF,CAAQwvB,SAAjB,KAA8B,EAA/C;AACA,iBAAK30B,YAAL,CACI,WADJ,EACe,MACX,KAAK2d,IAAL,CACKhG,GADL,CACS,WADT,CADW,MAEU,IAFV,IAEU,aAFV,GAEU,MAFV,GAEU,GACf6kB,YADe,CACFt8B,SADE,CACQ,UAAC6X,CAAD;AAAA,qBAAQ,QAAI,CAAC4c,SAAL,GAAiB5c,CAAC,IAAI,EAA9B;AAAA,aADR,CAHzB;AAMH;AACJ;;;qCAEmB;AAChB,cAAM5X,IAAI,GAAG,KAAKwd,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6BxvB,KAA1C;AACA,cAAMqyC,OAAO,GAAG,IAAI,cAAAljB,IAAJ,CAAS;AAAEkjB,mBAAO,EAAE,IAAX;AAAiBve,oBAAQ,EAAE,IAA3B;AAAiC5lB,iBAAK,EAAE;AAAxC,WAAT,CAAhB;AACAlT,cAAI,CAAC2J,IAAL,CAAU0tC,OAAV,EAHgB,CAIhB;;AACA,cAAMy/C,SAAS,GAAG,KAAKC,aAAL,CAAmB1/C,OAAnB,CAAlB,CALgB,CAMhB;;AACA,eAAK2/C,WAAL,CAAiBrtF,IAAjB,CAAsBmtF,SAAtB;AACA,eAAKt5E,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6B9xB,QAA7B,CAAsC1C,IAAtC;AACA,eAAKwd,IAAL,CAAUuuD,WAAV;AACH;AAED;;;;;;sCAGc10B,O,EAAS;AACnB,iBAAO,IAAI,QAAAvZ,SAAJ,CAAc;AACjBjgC,gBAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgBic,OAAO,CAACx5C,IAAxB,EAA8B;AAAC29B,wBAAU,EAAE,CAAC,QAAAF,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAtB,CAAb;AAA6DC,sBAAQ,EAAE;AAAvE,aAA9B,CADW;AAEjBxoB,iBAAK,EAAE,IAAI,QAAAkoB,WAAJ,CAAgBic,OAAO,CAACnkC,KAAxB,EAA+B;AAAEsoB,wBAAU,EAAE,CAAC,QAAAF,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWpoB,KAAjC,CAAd;AAAuDwoB,sBAAQ,EAAE;AAAjE,aAA/B;AAFU,WAAd,CAAP;AAIH;AAED;;;;uCACsBlxB,I,EAAYpK,K,EAAe;AAC7C,cAAMo0B,SAAS,GAAG,KAAKA,SAAvB;AACAA,mBAAS,CAACjmB,MAAV,CAAiBnO,KAAjB,EAAwB,CAAxB,EAA2BoK,IAA3B;AACA,eAAKgT,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6B9xB,QAA7B,CAAsC8xB,SAAtC;AACA,eAAKhX,IAAL,CAAUuuD,WAAV;AACH;AAGD;;;;sCACqBvhE,I,EAAYpK,K,EAAe;AAC5C,cAAMo0B,SAAS,sBAAO,KAAKA,SAAZ,CAAf;;AACAA,mBAAS,CAACjmB,MAAV,CAAiBnO,KAAjB,EAAwB,CAAxB;AACA,eAAKod,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6B9xB,QAA7B,CAAsC8xB,SAAtC,EAH4C,CAI5C;;AACA,eAAKwiE,WAAL,CAAiBC,QAAjB,CAA0B72F,KAAK,GAAC,CAAhC;AACA,eAAKod,IAAL,CAAUuuD,WAAV;AACH;AAED;;;;;;kCAOiB3rE,K,EAAeoK,I,EAAgB;AAC5C,iBAAOpK,KAAP;AACH;;;4BANwB;AACrB,iBAAO,KAAKod,IAAL,CAAUhG,GAAV,CAAc,UAAd,CAAP;AACH;;;;MAxEmC,OAAAta,S;;AALxC;;;uBAKa25F,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,mC;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,iuB;AAAA;AAAA;ACZ/B;;;;AAAM;;;;;;;;;2BDYOA,kB,EAAkB;cAL9B,OAAAj1C,SAK8B;eALpB;AACPljD,kBAAQ,EAAE,cADH;AAEPmjD,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD;AAHJ,S;AAKoB,Q;;;;gBAE1B,OAAA1gD;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEhBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOa81F,oB;;;;;AAWT,oCAAoB35E,QAApB,EAAkD;AAAA;;AAAA;;AAC9C;AADgB,iBAAAA,QAAA,GAAAA,QAAA;AANpB;;AACiB,iBAAA45E,YAAA,GAAe,IAAI,OAAA93C,YAAJ,EAAf;AAKiC;AAEjD;;;;mCAEc;AAAA;;AACX,eAAK7hC,IAAL,CAAU6e,YAAV,CAAuBt8B,SAAvB,CAAkC,UAAAq2B,MAAM,EAAI;AACxC,oBAAI,CAACmX,MAAL,GAAc,IAAI,cAAApZ,IAAJ,CAAS,MAAD,OAAC,CAAD,kBAAMiC,MAAN,CAAC,EAAW;AAAEihB,qBAAO,EAAE,IAAX;AAAiBve,sBAAQ,EAAE;AAA3B,aAAX,CAAT,CAAd;;AACA,oBAAI,CAACq+D,YAAL,CAAkB52C,IAAlB,CAAuB,QAAI,CAAChT,MAA5B;AACH,WAHD;AAIH;;;;MApBqC,OAAAhvC,a;;AAL1C;;;uBAKa24F,oB,EAAoB,2C;AAAA,K;;;YAApBA,oB;AAAoB,qC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,e;AAAA,a;AAAA,mX;AAAA;AAAA;ACbjC;AACI;AACJ;AACA;AACI;AACI;AACI;AAAkB;AAAI;AACtB;AACI;AACA;AAAW;AAAgB;AAC/B;AACJ;AACA;AACI;AAAmB;AAAa;AAChC;AACI;AACA;AAAW;AAAiC;AAChD;AACJ;AACJ;AACJ;AACA;;;;AApBc;AAAA;AAEP;AAAA;;;;;;;;;2BDUMA,oB,EAAoB;cALhC,OAAAt1C,SAKgC;eALtB;AACPljD,kBAAQ,EAAE,gBADH;AAEPmjD,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD;AAHJ,S;AAKsB,Q;;;;;;gBAE5B,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;gBAGA,OAAA3gD;;;;;;;;;;;;;;;;;;;;;;;;AEtBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXI;AACI;AACJ;;;;AADc;AAAA;;;;;;AAId;AACI;AACJ;;;;;AADkB;AAAA,2CAAa,OAAb,EAAa,cAAb;;;;;;;;AAGtB;AACI;AACI;AAAwD;AAAA;AAAA;AAAA;AAAA;AAAiB;AAAI;AACjF;AACJ;;;;;AAFuC;AAAA;;;;;;AAInC;AACI;AACI;AACI;AACJ;AACA;AAAkB;AAAa;AACnC;AACJ;;;;;AAF0B;AAAA;;;;QDGjBg2F,0B;;;;;AAuBT,0CACY75E,QADZ,EAEY+R,SAFZ,EAGY6/C,cAHZ,EAIY/vB,WAJZ,EAKYD,OALZ,EAMYk4C,EANZ,EAOqCxuD,KAPrC,EAOiE;AAAA;;AAAA;;AAE7D;AARQ,iBAAAtrB,QAAA,GAAAA,QAAA;AACA,iBAAA+R,SAAA,GAAAA,SAAA;AACA,iBAAA6/C,cAAA,GAAAA,cAAA;AACA,iBAAA/vB,WAAA,GAAAA,WAAA;AACA,iBAAAD,OAAA,GAAAA,OAAA;AACA,iBAAAk4C,EAAA,GAAAA,EAAA;AACyB,iBAAAxuD,KAAA,GAAAA,KAAA;AA7BrC;;AACiB,iBAAAr5B,KAAA,GAAQ,IAAI,OAAA6vC,YAAJ,EAAR;AAKjB,iBAAAi4C,eAAA,GAA2B,IAA3B;AAuBiE;AAGhE;AAxBD;;;;;mCA0Be;AAAA;;AAEX,eAAK95E,IAAL,GAAY,IAAI,QAAAsgB,SAAJ,CAAc;AACtB/Q,iBAAK,EAAE,IAAI,QAAAqO,WAAJ,CAAgB,KAAK3kB,OAAL,CAAasW,KAA7B,EAAoC,CAAC,QAAAuO,UAAA,CAAWC,QAAZ,CAApC,CADe;AAEtB/G,qBAAS,EAAE,IAAI,QAAA4G,WAAJ,oBAAoB,KAAK3kB,OAAL,CAAa+d,SAAjC,GAA6C,CAAC,QAAA8G,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAD,CAA7C,CAFW;AAGtB87D,oBAAQ,EAAE,KAAKF,EAAL,CAAQ5uF,KAAR,CAAc,EAAd;AAHY,WAAd,CAAZ;;AAKA,cAAI,KAAKgO,OAAL,CAAa1C,EAAjB,EAAqB;AACjB,iBAAKyJ,IAAL,CAAUquB,QAAV,CAAmB9e,KAAnB,CAAyBgP,OAAzB;AACH;AAED;;;;;AAGA,eAAKtlB,OAAL,CAAa+d,SAAb,CAAuBt0B,OAAvB,CAAgC,UAACyI,EAAD,EAAQ;AACpC,gBAAGA,EAAE,CAACmwB,QAAH,IAAenwB,EAAE,CAAC0uC,OAArB,EAA8B;AAC1B,kBAAMy/C,SAAS,GAAG,QAAI,CAACC,aAAL,CAAmBpuF,EAAE,CAAC9K,IAAtB,EAA4B8K,EAAE,CAACuK,KAA/B,CAAlB;;AACA,sBAAI,CAAC8jF,WAAL,CAAiBrtF,IAAjB,CAAsBmtF,SAAtB,EAF0B,CAG1B;;AACH;AACJ,WAND;AAOH;;;sCAEaj5F,I,EAAMqV,K,EAAO;AACvB,iBAAO,IAAI,QAAA4qB,SAAJ,CAAc;AACjBjgC,gBAAI,EAAE,IAAI,QAAAu9B,WAAJ,CAAgBv9B,IAAhB,EAAsB;AAAE29B,wBAAU,EAAE,CAAC,QAAAF,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWG,SAAX,CAAqB,CAArB,CAAtB,CAAd;AAA8DC,sBAAQ,EAAE;AAAxE,aAAtB,CADW;AAEjBxoB,iBAAK,EAAE,IAAI,QAAAkoB,WAAJ,CAAgBloB,KAAhB,EAAuB;AAACsoB,wBAAU,EAAE,CAAC,QAAAF,UAAA,CAAWC,QAAZ,EAAsB,QAAAD,UAAA,CAAWpoB,KAAjC,CAAb;AAAsDwoB,sBAAQ,EAAE;AAAhE,aAAvB;AAFU,WAAd,CAAP;AAIH;;;;AAMD;kCACgB;AAAA;;AACZ,cAAMklB,GAAG,GAAG,KAAKzB,OAAL,CAAa9lC,IAAb,CAAkB,kBAAAisC,qBAAlB,EAAyC,MAAF,OAAE,CAAF,kBAC5C,kBAAAF,gBAD4C,CAAE,EAC9B;AACnBn+B,gBAAI,EAAE;AACF8F,mBAAK,EAAE,gBADL;AAEF5T,qBAAO,EAAE,+CAFP;AAGFD,kBAAI,EAAE;AAAEnS,oBAAI,EAAE,MAAR;AAAgB,yBAAO,gBAAvB;AAAyCoS,uBAAO,EAAE;AAAlD,eAHJ;AAIFpG,oBAAM,EAAE;AAJN,aADa;AAOnB00C,qBAAS,EAAE,KAPQ;AAQnBC,yBAAa,EAAE;AARI,WAD8B,CAAzC,CAAZ;;AAWA,eAAK7nD,YAAL,CACI,SADJ,EAEI+gD,GAAG,CAACM,iBAAJ,CAAsB1xC,KAAtB,CAA4BzP,SAA5B,CAAsC,UAACyP,KAAD,EAAwB;AAC1D;AACA,gBAAIA,KAAK,CAACwV,MAAN,KAAiB,MAArB,EAA6B;AACzB;AACA,kBAAI,QAAI,CAACvO,OAAL,CAAa1C,EAAjB,EAAqB;AACjB,wBAAI,CAACuG,OAAL,GAAe,6BAAf;AACA,wBAAI,CAAC8kC,WAAL,CAAiBQ,YAAjB,GAAgC,IAAhC;;AACA,wBAAI,CAACnpC,OAAL,aAAsBsH,IAAtB,CACI,YAAM;AACF,0BAAI,CAACvO,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,0BAAM,EAAE;AAAV,mBAAhB;;AACA,0BAAI,CAACzH,QAAL,CAAcw2B,aAAd,CAA4B,gCAA5B;;AACA,0BAAI,CAACqL,WAAL,CAAiBqB,KAAjB;AACH,iBALL,EAMI,UAACthC,GAAD,EAAS;AACL,0BAAI,CAAC7E,OAAL,GAAe,IAAf;;AACA,0BAAI,CAACiD,QAAL,CAAcy2B,WAAd,6CACyC70B,GAAG,CAACnG,OAAJ,IAAemG,GADxD;;AAGA,0BAAI,CAACigC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACH,iBAZL;AAcH;AACJ;;AACDgB,eAAG,CAACH,KAAJ;AACH,WAxBD,CAFJ;AA4BH;AAED;;;;+BACc;AAAA;;AACV,eAAKhgD,OAAL,CAAa,MAAb,EAAqB,YAAM;AACvB,oBAAI,CAAC6Z,OAAL,GAAe,2BAAf;;AACA,oBAAI,CAACkD,IAAL,CAAU4mC,gBAAV;;AACA,oBAAI,CAAChF,WAAL,CAAiBQ,YAAjB,GAAgC,IAAhC;AACA;;AACA,gBAAI,QAAI,CAACpiC,IAAL,CAAUk7C,KAAV,IAAmB,QAAI,CAACl7C,IAAL,CAAUyH,KAAjC,EAAwC;AACpC,kBAAMuP,SAAS,GAAG,QAAI,CAAChX,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6BxvB,KAA/C;;AADoC,2DAEbwvB,SAFa;AAAA;;AAAA;AAEpC,0EAAkC;AAAA,sBAAvBgjE,QAAuB;;AAC9B,sBAAI,CAACA,QAAQ,CAACtkF,KAAd,EAAqB;AACjBskF,4BAAQ,CAACtkF,KAAT,aAAoB9Q,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACuJ,MAAL,KAAgB,KAA3B,CAApB;AACH;AACJ;AANmC;AAAA;AAAA;AAAA;AAAA;;AAOpC,kBAAMstE,WAAW,GAAG,IAAI,cAAAlzD,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,QAAI,CAACtP,OAAL,CAAagH,MAAb,EAAN,CAAC,EAA+B,QAAI,CAACD,IAAL,CAAUxY,KAAzC,CAAZ,CAApB;;AACA,sBAAI,CAACsqB,SAAL,CAAe8lB,IAAf,CAAoB6jC,WAApB,EAAiCl7D,IAAjC,CACI,UAACsQ,GAAD,EAAS;AACL,wBAAI,CAAC7e,KAAL,CAAW+wC,IAAX,CAAgB;AAAEv7B,wBAAM,EAAE,MAAV;AAAkBhH,0BAAQ,EAAEqQ;AAA5B,iBAAhB;;AACA,wBAAI,CAAC9Q,QAAL,CAAcw2B,aAAd,CACI,QAAI,CAACt9B,OAAL,CAAa1C,EAAb,GACM,gCADN,GAEM,8BAHV;;AAKA,wBAAI,CAACo7D,cAAL,CAAoBpkE,OAApB,CAA4B,IAAI,cAAAgb,OAAJ,CAAY,MAAD,OAAC,CAAD,kBAAM,QAAI,CAACtP,OAAX,CAAC,EAAsB4X,GAAG,CAACiS,SAAJ,EAAtB,CAAZ,CAA5B;;AACA,wBAAI,CAAC8e,WAAL,CAAiBqB,KAAjB;AACH,eAVL,EAWI,UAACthC,GAAD,EAAS;AACL,wBAAI,CAAC7E,OAAL,GAAe,IAAf;;AACA,wBAAI,CAACiD,QAAL,CAAcy2B,WAAd,qBACiB,QAAI,CAACv9B,OAAL,CAAa1C,EAAb,GAAkB,QAAlB,GAA6B,KAD9C,+BAEQoL,GAAG,CAACnG,OAAJ,IAAemG,GAFvB;;AAKA,wBAAI,CAACigC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;AACH,eAnBL;AAqBH,aA7BD,MA8BK;AACD,sBAAI,CAACtlC,OAAL,GAAe,IAAf;AACA,sBAAI,CAAC8kC,WAAL,CAAiBQ,YAAjB,GAAgC,KAAhC;;AACA,sBAAI,CAACR,WAAL,CAAiBqB,KAAjB;AACH;AACJ,WAxCD;AAyCH;;;4BAjJiB;AACd,iBAAO,KAAK5X,KAAL,CAAWpyB,OAAlB;AACH;AAED;;;;4BAC2B;AACvB,iBACI,KAAK+G,IAAL,IACA,KAAKA,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6BxvB,KAD7B,IAEA,KAAKwY,IAAL,CAAUquB,QAAV,CAAmBrX,SAAnB,CAA6BxvB,KAA7B,CAAmChB,MAHvC;AAKH;;;4BA4CwB;AACrB,iBAAO,KAAKwZ,IAAL,CAAUhG,GAAV,CAAc,UAAd,CAAP;AACH;;;;MAnE2C,OAAAjZ,a;;AALhD;;;uBAKa64F,0B,EAA0B,2C,EAAA,wC,EAAA,4C,EAAA,qC,EAAA,kC,EAAA,oC,EAAA,qBA8BvB,SAAAz1C,eA9BuB,C;AA8BR,K;;;YA9BlBy1C,0B;AAA0B,4C;AAAA;AAAA;AAAA,O;AAAA,+C;AAAA,c;AAAA,a;AAAA,0Y;AAAA;AAAA;ACzBvC;AACI;AAAqB;AAA0C;AAC/D;AAGJ;AACA;AACI;AAGJ;AACA;AAKA;;;;;;AAfyB;AAAA;AACoB;AAAA;AAKnC;AAAA,8CAAiC,UAAjC,EAAiC,GAAjC;AAIU;AAAA;;;;;;;;;2BDcPA,0B,EAA0B;cALtC,OAAAx1C,SAKsC;eAL5B;AACPljD,kBAAQ,EAAE,uBADH;AAEPmjD,qBAAW,EAAE,sCAFN;AAGPC,mBAAS,EAAE,CAAC,sCAAD;AAHJ,S;AAK4B,Q;;;;;;;;;;;;;;;;kBA8B9B,OAAA5S,M;mBAAO,SAAAyS,e;;;;;gBA5BX,OAAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BL;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLY;AACI;AACA;AAAO;AAAgD;AAC3D;;;;;AAFI;AAAA;AACO;AAAA;;;;;;AAEX;AAAoC;AAAO;;;;;;;;AA+D/C;AAKI;AAAA;AAAA;AAAA,iBAAW,OAAAi0B,OAAA,OAAX;AAAyB,SAAzB;AACH;;;;;;AAJG,6CAAe,QAAf,EAAe,OAAf,EAAe,QAAf,EAAe,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3EZ;AACI;AACI;AACI;AACJ;AACA;AACI;AAIA;AACJ;AACA;AACI;AAAkB;AAA2B;AACjD;AACA;AAAqB;AAA0B;AAC/C;AAAmB;AAAiB;AACpC;AAAsB;AAAgD;AACtE;AAAoB;AAAY;AAChC;AACI;;AAMI;AACJ;AACA;;AAMI;AACJ;AACA;AAII;AAAA;AAAA;AAAA;AAAA;AAEA;AAIJ;AACA;AAII;AAAA;AAAA;AAAA;AAAA;AAEA;AACJ;AACJ;AACA;AACI;AAGI;AAAA;AAAA;AAAA;AAAA;AAEA;AAMJ;AACJ;AACJ;AACA;AACI;AACA;AAOJ;AACJ;;;;;AAjF2C;AAClB;AAAA;AACC;AAAA,oDAA2B,gBAA3B,EAA2B,iBAA3B;AACJ;AAAA;AAGI;AAAA;AAIA;AAAA;AAGI;AAAA;AAED;AAAA;AACF;AAAA;AACG;AAAA;AACF;AAAA;AAKZ;AAAA,iEAAmC,MAAnC,EAAmC,oEAAnC,EAAmC,gBAAnC;AAGa;AAAA;AAMb;AAAA;AAEa;AAAA;AAST;AAAA,iDAAmB,MAAnB,EAAmB,2BAAnB;AAUS;AAAA;AAUT;AAAA;AAQO;AAAA;AAGf;AAAA;;;;ADjEgD;;QAU/CyhB,2B;;;;;AAuCT,2CAAoBl6E,QAApB,EAA0D+R,SAA1D,EAA8F6vB,OAA9F,EAAkH;AAAA;;AAAA;;AAC9G;AADgB,iBAAA5hC,QAAA,GAAAA,QAAA;AAAsC,iBAAA+R,SAAA,GAAAA,SAAA;AAAoC,iBAAA6vB,OAAA,GAAAA,OAAA;AAlC9F;;AACiB,iBAAA62B,OAAA,GAAU,IAAI,OAAA32B,YAAJ,EAAV;AAGjB;;AACO,iBAAArnB,UAAA,GAAsB,KAAtB;AAIA,iBAAA0/D,iBAAA,GAAoB,EAApB;AAyB2G;AAEjH;AAzBD;;;;;;AAaA;iCACgBnqD,M,EAAW;AACvB,cAAM9c,MAAM,GAAG,CAAC,KAAKA,MAAL,IAAe,EAAhB,EAAoBjnB,WAApB,EAAf;AACA,iBACI,CAACinB,MAAD,IACA8c,MAAM,CAAC1vC,IAAP,CAAY2L,WAAZ,GAA0BtE,OAA1B,CAAkCurB,MAAlC,KAA6C,CAD7C,IAEA8c,MAAM,CAACr6B,KAAP,CAAa1J,WAAb,GAA2BtE,OAA3B,CAAmCurB,MAAnC,KAA8C,CAHlD;AAKH;;;0CAMwB;AACrB,cAAMknE,gBAAgB,GAAG,KAAKnoF,KAAL,CAAWyoB,aAApC;AACA,iBAAO,KAAKzoB,KAAL,CAAWglB,SAAX,CAAqB/uB,MAArB,CACH,UAACgsB,MAAD,EAASxX,IAAT,EAAkB;AACd;AACA,gBAAIA,IAAI,CAAC6e,QAAT,EAAmB;AACfrH,oBAAM,CAAC5nB,KAAP;AACA;;AACA,kBAAI8tF,gBAAgB,CAACzyF,OAAjB,CAAyB+U,IAAI,CAAC/G,KAA9B,KAAwC,CAA5C,EAA+C;AAC3Cue,sBAAM,CAACuG,UAAP;AACH;AACJ;;AACD,mBAAOvG,MAAP;AACH,WAXE,EAYH;AAAEuG,sBAAU,EAAE,CAAd;AAAiBnuB,iBAAK,EAAE;AAAxB,WAZG,CAAP;AAcH;AAED;;;;;;kCAGuB;;;;;;;;;AACnB,yBAAKyQ,OAAL,GAAe,IAAf;;AACc,2BAAM,KAAKgV,SAAL,CACfqmB,OADe,CACP,KAAKnmC,KAAL,CAAWuE,EADJ,EACQ;AACpB6jF,gCAAU,EAAE,KAAKpoF,KAAL,CAAWilB,SAAX,CAAqBvhB,KADb;AAEpBshB,+BAAS,EAAE,OAAAhsB,MAAA,CAAO,KAAKgH,KAAL,CAAWglB,SAAX,CAAqB7sB,GAArB,CAAyB,UAAAsS,IAAI;AAAA,+BAAK;AAAEpc,8BAAI,EAAEoc,IAAI,CAACpc,IAAb;AAAmBqV,+BAAK,EAAE+G,IAAI,CAAC/G;AAA/B,yBAAL;AAAA,uBAA7B,CAAP,CAFS;AAGpButB,gCAAU,EAAE,KAAKjxB,KAAL,CAAWuE,EAHH;AAIpBge,6BAAO,EAAE,KAAKviB,KAAL,CAAWuiB,OAJA;AAKpBhe,wBAAE,EAAE,KAAKvE,KAAL,CAAWuE,EALK;AAMpBihB,kCAAY,qBAAM,KAAKxlB,KAAL,CAAWwlB,YAAjB,CANQ;AAOpB6iE,mCAAa,EAAE,UAPK;AAQpBxiE,6BAAO,EAAE,KAAK7lB,KAAL,CAAWgV,KAAX,CAAiBzQ;AARN,qBADR,WAWT,UAACoL,GAAD,EAAS;AACZ,8BAAI,CAAC5B,QAAL,CAAcy2B,WAAd,+DAAiF70B,GAAG,CAACnG,OAAJ,IAAemG,GAAhG;AACH,qBAbe,CAAN;;;AAARna,yB;;AAcN,wBAAIA,KAAJ,EAAW;AACP,2BAAKwK,KAAL,GAAa,IAAI,cAAAuW,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACjB,KAAKvW,KAAL,CAAWiO,MAAX,EADiB,CAAC,EACC;AACtBsX,iCAAS,EAAE/vB,KAAK,CAAC+vB;AADK,uBADD,CAAZ,CAAb;AAIA,2BAAKihD,OAAL,CAAaz1B,IAAb;AACH;;AACD,yBAAKjmC,OAAL,GAAe,KAAf;;;;;;;;;AACH;AAED;;;;oCAUmB9a,O,EAAsB;AAAA;;;AACrC;;;AACA,cAAIA,OAAO,CAACixB,MAAZ,EAAoB;AAChB,gBAAI,CAAC,KAAKA,MAAV,EAAkB,KAAKqnE,cAAL,GAAsB,KAAtB;AAClB,iBAAKJ,iBAAL,GAAyB,CAAH,KAAG,KAAKloF,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAEglB,SAAF,CAAY9rB,MAAZ,CAAmB,UAAAmQ,CAAC;AAAA,qBAAI,QAAI,CAACk/E,QAAL,CAAcl/E,CAAd,CAAJ;AAAA,aAApB,CAAnC;AACA,iBAAKpY,OAAL,CAAa,WAAb,EAA0B;AAAA,qBAAM,QAAI,CAACq3F,cAAL,GAAsB,CAAC,CAAC,QAAI,CAACrnE,MAAnC;AAAA,aAA1B,EAAqE,EAArE;AACH;;AACD,cAAIjxB,OAAO,CAACgQ,KAAZ,EAAmB;AAAA,wCACe,KAAKwoF,eAAL,EADf;AAAA,gBACPhgE,UADO,yBACPA,UADO;AAAA,gBACKnuB,KADL,yBACKA,KADL;;AAEf,iBAAKmuB,UAAL,GAAkBA,UAAU,IAAInuB,KAAhC;AACA,iBAAK6tF,iBAAL,GAAyB,CAAH,KAAG,KAAKloF,KAAL,MAAU,IAAV,IAAU,aAAV,GAAU,MAAV,GAAU,GAAEglB,SAAF,CAAY9rB,MAAZ,CAAmB,UAAAmQ,CAAC;AAAA,qBAAI,QAAI,CAACk/E,QAAL,CAAcl/E,CAAd,CAAJ;AAAA,aAApB,CAAnC;AACH;AACJ;;;wCAEsB;AACnB,eAAKsmC,OAAL,CAAa9lC,IAAb,CACI,gCAAA+9E,0BADJ,EAEI;AACInwE,gBAAI,EAAE;AACFxQ,qBAAO,EAAE,KAAKjH;AADZ;AADV,WAFJ;AAQH;;;4BA1GqB;AAClB,cAAMqW,MAAM,GAAG,KAAKrW,KAAL,CAAWyiE,oBAA1B;AACA,iBAAOpsD,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,aAA3C;AACH;AAED;;;;4BACiB;AAAA,uCACiB,KAAKmyE,eAAL,EADjB;AAAA,cACLhgE,UADK,0BACLA,UADK;AAAA,cACOnuB,KADP,0BACOA,KADP;;AAEb,2BAAUmuB,UAAV,gBAA0BnuB,KAA1B;AACH;;;4BAiEkB;AACf,cAAMouF,OAAO,GAAGnqF,kBAAkB,WAC3B,KAAK0B,KAAL,CAAWud,KADgB,mBACH,KAAKvd,KAAL,CAAW0e,UADR,eACuB,KAAK1e,KAAL,CAAW8iE,WADlC,EAAlC;AAGA,kCAAiB,KAAK9iE,KAAL,CAAWglB,SAAX,CAAqB9rB,MAArB,CAA4B,UAAAuR,IAAI;AAAA,mBAAI,CAACA,IAAI,CAAC/G,KAAL,CAAWiI,QAAX,CAAoB,QAApB,CAAL;AAAA,WAAhC,EACZxT,GADY,CACR,UAACsS,IAAD;AAAA,mBAAUA,IAAI,CAAC/G,KAAf;AAAA,WADQ,EAEZ/H,IAFY,CAEP,GAFO,CAAjB,sBAE0B8sF,OAF1B;AAGH;;;;MAlG4C,OAAA/6F,S;;AANjD;;;uBAMau6F,2B,EAA2B,2C,EAAA,wC,EAAA,kC;AAAA,K;;;YAA3BA,2B;AAA2B,wC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,c;AAAA,a;AAAA,01B;AAAA;AAAA;ACnBxC;;;;AAA6B;;;;;;;mBDiBb,CAAC,aAAA76F,8BAAD;;;;;;2BAEH66F,2B,EAA2B;cANvC,OAAA71C,SAMuC;eAN7B;AACPljD,kBAAQ,EAAE,mBADH;AAEPmjD,qBAAW,EAAE,uBAFN;AAGPC,mBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPsH,oBAAU,EAAE,CAAC,aAAAxsD,8BAAD;AAJL,S;AAM6B,Q;;;;;;;;;;gBAEnC,OAAAwE;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEzBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRI;AACI;AACJ;;;;;;;;AAYQ;AACI;AAAuD;AAAA;AAAA;AAAA;AAAA;AAA2B;AACtF;;;;;;AADuB;AAAA,2CAAiB,QAAjB,EAAiB,aAAjB;;;;;;AAF3B;AACI;AAGJ;;;;;AAHmB;AAAA,2DAA4E,cAA5E,EAA4E,gBAA5E;;;;;;;;;;;;;AAOvB;AACI;AACI;AACJ;AACA;AACI;AACJ;AACJ;;;;;AALkB;AAAA;AAGV;AAAA;;;;QDVCm2C,wB;;;;;AAsBT,wCACYlpE,IADZ,EAEYC,OAFZ,EAGYK,SAHZ,EAG0C;AAAA;;AAAA;;AAEtC;AAJQ,iBAAAN,IAAA,GAAAA,IAAA;AACA,iBAAAC,OAAA,GAAAA,OAAA;AACA,iBAAAK,SAAA,GAAAA,SAAA;AAxBZ;;AACgB,iBAAA7sB,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAKhB;;AACO,iBAAAmQ,QAAA,GAAsB,EAAtB;AACP;;AACO,iBAAAsmF,iBAAA,GAA+B,EAA/B;AAKP;;AACgB,iBAAArrC,OAAA,GAAU,IAAI,OAAA3vC,OAAJ,EAAV;AAS0B;AAGzC;;;;mCAEO;AAAA;;AACJ,eAAK8R,OAAL,CAAarV,WAAb,CAAyBhH,IAAzB,CAA8B,YAAAgG,KAAA,CAAM,UAACC,CAAD;AAAA,mBAAOA,CAAP;AAAA,WAAN,CAA9B,EAA+C9Y,SAA/C,CAAyD,YAAM;AAC3D,oBAAI,CAACuvB,SAAL,CAAeqjB,wBAAf;;AACA,oBAAI,CAAC9yC,YAAL,CACI,UADJ,EAEI,QAAI,CAACmvB,IAAL,CACK3uB,MADL,CACY,iBADZ,EAEKN,SAFL,CAEe,UAAC8Y,CAAD,EAAO;AACd,sBAAI,CAACi0C,OAAL,CAAa78C,IAAb,WAAqB,QAAI,CAACxN,MAAL,CAAYgJ,EAAjC,cAAuCoN,CAAC,CAAC9E,EAAzC;;AACA,sBAAI,CAACub,SAAL,CAAe8iB,OAAf,CAAuBv5B,CAAC,CAAC9E,EAAzB;AACH,aALL,CAFJ;;AASA,oBAAI,CAAClU,YAAL,CACI,UADJ,EAEI,QAAI,CAACyvB,SAAL,CAAeO,QAAf,CAAwB9vB,SAAxB,CAAkC,UAACC,IAAD;AAAA,qBAAU,QAAI,CAACo4F,YAAL,CAAkBp4F,IAAlB,CAAV;AAAA,aAAlC,CAFJ;AAIH,WAfD;AAgBH;;;oCAEkBR,O,EAAsB;AACrC;AACA,cAAIA,OAAO,CAACiD,MAAZ,EAAoB;AAChB,iBAAKqqD,OAAL,CAAa78C,IAAb,WAAqB,KAAKxN,MAAL,CAAYgJ,EAAjC;AACH;AACD;;;AACA,cAAIjM,OAAO,CAACixB,MAAR,IAAkBjxB,OAAO,CAAC64F,QAA9B,EAAwC;AACpC,iBAAKF,iBAAL,GAAyB,KAAKzvF,MAAL,CAAY,KAAK+nB,MAAjB,CAAzB;AACH;AACJ;AAED;;;;kCACiBrwB,K,EAAeqW,O,EAAkB;AAC9C,iBAAOA,OAAO,CAAC1C,EAAf;AACH;;;uCAEqB;AAAA;;AAClB,eAAK6d,QAAL,CACI,iBADJ,EAEI;AAAA,mBAAM,QAAI,CAACk7B,OAAL,CAAa78C,IAAb,WAAqB,QAAI,CAACxN,MAAL,CAAYgJ,EAAjC,cAAuC,QAAI,CAACioB,KAAL,CAAWjoB,EAAlD,EAAN;AAAA,WAFJ,EAGI,KAAK,IAHT;AAKH;AAED;;;;iCACgC;AAAA;;AAAA,cAAlBnD,GAAkB,uEAAJ,EAAI;AAC5B,cAAMmoB,MAAM,GAAGnoB,GAAG,CAACkB,WAAJ,EAAf;AACA,iBAAO,KAAKqI,QAAL,CACFnJ,MADE,CACK,UAAC+N,OAAD,EAAa;AACjB,mBAAOA,OAAO,CAAC+d,SAAR,CAAkBlvB,IAAlB,CACH,UAAC2U,IAAD;AAAA,qBACIA,IAAI,CAACpc,IAAL,CAAU2L,WAAV,GAAwBtE,OAAxB,CAAgCurB,MAAhC,KAA2C,CAA3C,IACAxW,IAAI,CAAC/G,KAAL,CAAW1J,WAAX,GAAyBtE,OAAzB,CAAiCurB,MAAjC,KAA4C,CAFhD;AAAA,aADG,CAAP;AAKH,WAPE,EAQF/nB,MARE,CAQK,UAAC2lB,GAAD;AAAA,mBAAU,QAAI,CAACgqE,QAAL,GAAgB,IAAhB,GAAuBhqE,GAAG,CAAC6J,YAArC;AAAA,WARL,CAAP;AASH;;;qCAEoBl4B,I,EAAiB;AAAA;;AAClC,cAAMs4F,iBAAiB,GAAGt4F,IAAI,CAAC0I,MAAL,CACtB,UAAC2lB,GAAD;AAAA,mBACI,CAACA,GAAG,CAAC6E,QAAL,IACA7E,GAAG,CAACyE,IAAJ,CAASlO,KAAT,CAAezJ,QAAf,CAAwB,QAAI,CAAC6T,IAAL,CAAUrK,QAAV,CAAmB5Q,EAA3C,CAFJ;AAAA,WADsB,CAA1B;AAKA,cAAMlC,QAAQ,GAAGymF,iBAAiB,CAACtuF,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9C,gBAAID,CAAC,CAACnI,IAAF,KAAWoI,CAAC,CAACpI,IAAjB,EAAuB;AACnB,kBAAImI,CAAC,CAACyqB,OAAF,CAAU72B,IAAV,KAAmBqM,CAAC,CAACwqB,OAAF,CAAU72B,IAAjC,EAAuC;AACnC,uBAAOoM,CAAC,CAACua,KAAF,CAAQ3mB,IAAR,GAAeqM,CAAC,CAACsa,KAAF,CAAQ3mB,IAAvB,GAA8B,CAA9B,GAAkC,CAAC,CAA1C;AACH;;AACD,qBAAOoM,CAAC,CAACyqB,OAAF,CAAU72B,IAAV,GAAiBqM,CAAC,CAACwqB,OAAF,CAAU72B,IAA3B,GAAkC,CAAlC,GAAsC,CAAC,CAA9C;AACH;;AACD,mBAAOoM,CAAC,CAACnI,IAAF,GAASoI,CAAC,CAACpI,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AACH,WARgB,CAAjB;AASA,eAAK+P,QAAL,GAAgBA,QAAhB;AACA,eAAKsmF,iBAAL,GAAyB,KAAKzvF,MAAL,CAAY,KAAK+nB,MAAjB,CAAzB;AACH;;;4BAtFe;AACZ,iBAAO,UAAAllB,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAP;AACH;;;;MApByC,OAAAnD,a;;AAL9C;;;uBAKa25F,wB,EAAwB,4C,EAAA,sC,EAAA,4C;AAAA,K;;;YAAxBA,wB;AAAwB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,wE;AAAA,e;AAAA,a;AAAA,yZ;AAAA;AAAA;ACjBrC;AACI;AAGA;AACI;AACA;AAAkB;AAAI;AACtB;AAAkB;AAAI;AACtB;AAAqB;AAAO;AAC5B;AAAmB;AAAK;AACxB;AAAsB;AAAQ;AAC9B;AAAmB;AAAM;AAC7B;AACA;AACI;AAKJ;AACJ;AACA;;;;;;AApBwB;AAAA;AAaF;AAAA,uFAAuE,UAAvE,EAAuE,GAAvE;;;;;;;;;2BDGTA,wB,EAAwB;cALpC,OAAAt2C,SAKoC;eAL1B;AACPljD,kBAAQ,EAAE,kBADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAK0B,Q;;;;;;;;;;gBAEhC,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AEvBL;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcI;AAA4C;AAAY;;;;;AAAZ;AAAA;;;;;;;;;;;;;AAExC;;AAOI;AACJ;;;;;AAJI,wDAA0B,MAA1B,EAA0B,yDAA1B,EAA0B,gBAA1B;AAGa;AAAA;;;;;;;;;;;;;AAiBb;;;;;AAEI,iDAAmB,MAAnB,EAAmB,0BAAnB;;;;;;;;;;;;;;;;;;QDnCHm3F,gB;AAgDT,gCACYC,QADZ,EAEYt5F,SAFZ,EAGYowB,SAHZ,EAIY/R,QAJZ,EAIwC;AAAA;;AAH5B,aAAAi7E,QAAA,GAAAA,QAAA;AACA,aAAAt5F,SAAA,GAAAA,SAAA;AACA,aAAAowB,SAAA,GAAAA,SAAA;AACA,aAAA/R,QAAA,GAAAA,QAAA;AA7CZ;;AACiB,aAAAy4D,OAAA,GAAU,IAAI,OAAA32B,YAAJ,EAAV;AA6Cb;AAvCJ;;;;;oCAyCmB7/C,O,EAAsB;AACrC,cAAIA,OAAO,CAACixB,MAAZ,EAAoB;AAChB,gBAAI,KAAKA,MAAL,IAAe,CAAC,KAAKsnE,QAAzB,EAAmC;AAC/B,mBAAK74F,SAAL,CAAes7E,QAAf,CAAwB,KAAKge,QAAL,CAAc74F,aAAtC,EAAqD,WAArD;AACH,aAFD,MAEO;AACH,mBAAKT,SAAL,CAAeg8E,WAAf,CAA2B,KAAKsd,QAAL,CAAc74F,aAAzC,EAAwD,WAAxD;AACH;AACJ;AACJ;AAED;;;;;;kCAGmB;AAAA;;AACf,eAAK2a,OAAL,GAAe,IAAf;AACA,cAAMjR,MAAM,GAAwB;AAChCuuF,sBAAU,EAAE,KAAKpoF,KAAL,CAAWilB,SAAX,CAAqBvhB,KADD;AAEhCshB,qBAAS,EAAE,CAAC;AAAE32B,kBAAI,EAAE,KAAK0vC,MAAL,CAAY1vC,IAApB;AAA0BqV,mBAAK,EAAE,KAAKq6B,MAAL,CAAYr6B;AAA7C,aAAD,CAFqB;AAGhCutB,sBAAU,EAAE,KAAKjxB,KAAL,CAAWuE,EAHS;AAIhCge,mBAAO,EAAE,KAAKviB,KAAL,CAAWuiB,OAJY;AAKhChe,cAAE,EAAE,KAAKvE,KAAL,CAAWuE,EALiB;AAMhCihB,wBAAY,qBAAM,KAAKxlB,KAAL,CAAWwlB,YAAjB,CANoB;AAOhC6iE,yBAAa,EAAE,UAPiB;AAQhCxiE,mBAAO,EAAE,KAAK7lB,KAAL,CAAWgV,KAAX,CAAiBzQ;AARM,WAApC;;AAUA,eAAKub,SAAL,CAAeymB,wBAAf,CAAwC,KAAKvmC,KAAL,CAAWuE,EAAnD,EAAuD1K,MAAvD,EAA+DtJ,SAA/D,CAAyE,UAAA0f,MAAM,EAAI;AAC3E,gBAAMsV,SAAS,GAAG,MAAH,OAAG,CAAH,EAAG,EAAItV,MAAM,CAACsV,SAAX,CAAlB;AACAA,qBAAS,CAAC,QAAI,CAACwY,MAAL,CAAYr6B,KAAb,CAAT,GAA+B,IAA/B;AACA,oBAAI,CAAC1D,KAAL,CAAWulB,SAAX,GAAuBtV,MAAM,CAACsV,SAA9B;AACA,oBAAI,CAACvlB,KAAL,GAAa,IAAI,cAAAuW,OAAJ,CAAY,MAAD,OAAC,CAAD,kBACjB,QAAI,CAACvW,KAAL,CAAWiO,MAAX,EADiB,CAAC,EACC;AACtBsX,uBAAS,EAATA;AADsB,aADD,CAAZ,CAAb;;AAIA,oBAAI,CAACihD,OAAL,CAAaz1B,IAAb;;AACA,oBAAI,CAACjmC,OAAL,GAAe,KAAf;AACH,WAVL;AAWH;;;4BA5EiB;AACd,iBAAO,KAAK9K,KAAL,CAAWyiE,oBAAX,KAAoC,aAApC,IAAqD,KAAK1kC,MAAL,CAAYzU,QAAxE;AACH;AAED;;;;4BACsB;AAClB,iBAAO,KAAKtpB,KAAL,CAAWyoB,aAAX,CAAyB9c,QAAzB,CAAkC,KAAKoyB,MAAL,CAAYr6B,KAA9C,CAAP;AACH;AAED;;;;4BACmB;AACf,cAAMud,MAAM,GAAG,CAAC,KAAKA,MAAL,IAAe,EAAhB,EAAoBjnB,WAApB,EAAf;AACA,iBACI,KAAK+jC,MAAL,CAAY1vC,IAAZ,CAAiB2L,WAAjB,GAA+BtE,OAA/B,CAAuCurB,MAAvC,KAAkD,CAAlD,IACA,KAAK8c,MAAL,CAAYr6B,KAAZ,CAAkB1J,WAAlB,GAAgCtE,OAAhC,CAAwCurB,MAAxC,KAAmD,CAFvD;AAIH;;;4BAEuB;AACpB,iBAAO,CAAC,KAAK8c,MAAL,CAAYr6B,KAAb,IAAsB,KAAKq6B,MAAL,CAAYr6B,KAAZ,CAAkBiI,QAAlB,CAA2B,qBAA3B,CAA7B;AACH;AAED;;;;4BACmB;AACf,kCAAiB,KAAKoyB,MAAL,CAAYr6B,KAA7B,wBAA+C,KAAK1D,KAAL,CAAWud,KAA1D,uBACI,KAAKvd,KAAL,CAAW0e,UADf,iBAEO,KAAK1e,KAAL,CAAW8iE,WAFlB,SAGI,KAAK9iE,KAAL,CAAWilB,SAAX,CAAqBvhB,KAArB,CAA2B1J,WAA3B,OAA6C,KAAK+jC,MAAL,CAAYr6B,KAAzD,GACM,SAAS,KAAK1D,KAAL,CAAWilB,SAAX,CAAqBvhB,KADpC,GAEM,EALV;AAOH;;;4BAgDuB;AACpB,iBAAO,KAAKq6B,MAAL,CAAYzU,QAAZ,GAAuB,KAAKtpB,KAAL,CAAWylB,OAAX,CAAmB9pB,IAAnB,CAAwB,GAAxB,CAAvB,GAAsD,UAA7D;AACH;;;;;;AArGL;;;uBAKaotF,gB,EAAgB,mC,EAAA,kC,EAAA,wC,EAAA,2C;AAAA,K;;;YAAhBA,gB;AAAgB,gC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,yC;AAAA,e;AAAA,c;AAAA,krB;AAAA;AAAA;ACZ7B;AASI;AAGJ;AACA;AACI;AACI;AAAkB;AAAmC;AACzD;AACA;AAAqB;AAAmB;AACxC;AACA;AACA;AACI;AASA;;AAMI;AACJ;AACA;AAKI;AAAA,mBAAS,IAAA5iD,OAAA,EAAT;AAAkB,WAAlB;AAEA;AAKJ;AACA;AACJ;AACA;AACJ;AACA;;;;AArDI,2EAA+C,MAA/C,EAA+C,QAA/C;AAEA;AAMI;AAAA;AAIc;AAAA;AACI;AAAA;AAED;AAAA;AAED;AAAA;AAIZ;AAAA;AASA;AAAA,qGAAwE,UAAxE,EAAwE,iBAAxE,EAAwE,MAAxE,EAAwE,2CAAxE,EAAwE,gBAAxE;AAIa;AAAA;AAMb;AAAA;AAII;AAAA;AAKgB;AAAA;;;;;;;;;;2BDvCnB4iD,gB,EAAgB;cAL5B,OAAA32C,SAK4B;eALlB;AACPljD,kBAAQ,EAAE,WADH;AAEPmjD,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAKkB,Q;;;;;;;;;;;;gBAExB,OAAA1gD;;;gBAEA,OAAAA;;;gBAEA,OAAAA;;;gBAEA,OAAA2gD;;;;;;;;;;;;;;;;;;;;;;;;AEpBL;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXI;AACI;AACJ;;;;;;;;;;;;;;;AAqBgB;AAAqD;AAAA;AAAA;AAAA,qCAAsB,EAAtB;AAAwB,SAAxB;AACjD;AACJ;;;;AADc;AAAA;;;;;;;;;;;;;;;AArB9B;AACI;AACI;AAAA;AAAA;AAAA;AAAA,WAAmB,YAAnB,EAAmB;AAAA;AAAA;AAAA,qCACQ,EADR;AACU,SAD7B,EAAmB,OAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB,EAAmB,cAAnB,EAAmB;AAAA;AAAA;AAAA;AAAA,SAAnB;AAMA;AACI;AACI;AAIA;AAEI;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMA;AAGJ;AACJ;AACA;AAEI;AAAA;AAAA;AAAA;AAAA;AAIA;AACJ;AACJ;AACA;AACI;AACJ;AACJ;;;;;AAnCQ;AAAA,+CAAmB,eAAnB,EAAmB,KAAnB;AAOoB;AAAA;AAER;AAAA;AAKA;AAAA;AAI8B;AAAA;AAOtC;AAAA;AAQc;AAAA,mDAAqB,QAArB,EAAqB,aAArB,EAAqB,QAArB,EAAqB,iBAArB;;;;QDpBjB02C,iB;;;;;AAeT,iCACYzkB,MADZ,EAEY90B,OAFZ,EAGY3hC,QAHZ,EAIY4hC,OAJZ,EAKYlwB,OALZ,EAMYD,IANZ,EAMqC;AAAA;;AAAA;;AAEjC;AAPQ,iBAAAglD,MAAA,GAAAA,MAAA;AACA,iBAAA90B,OAAA,GAAAA,OAAA;AACA,iBAAA3hC,QAAA,GAAAA,QAAA;AACA,iBAAA4hC,OAAA,GAAAA,OAAA;AACA,iBAAAlwB,OAAA,GAAAA,OAAA;AACA,iBAAAD,IAAA,GAAAA,IAAA;AApBZ;;AACO,iBAAAvsB,MAAA,GAAiB,UAAA8I,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAjB;AAmB8B;AAGpC;;;;mCAEc;AAAA;;AACX,eAAK6b,QAAL,CAAcwP,KAAd,GAAsB,UAAtB;;AACA,eAAKiC,IAAL,CAAUpV,WAAV,CAAsBhH,IAAtB,CAA2B,YAAAgG,KAAA,CAAM,UAAAC,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAP,CAA3B,EAA0C9Y,SAA1C,CAAoD,YAAM;mBAAA,CACtD;;;AACA,oBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,kBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,yBAAW,EAAE,KAArC;AAA4CC,yBAAW,EAAE,QAAI,CAACnhB;AAA9D,aAAX,CAAd;;AACA,oBAAI,CAAC7G,YAAL,CACI,oBADJ,EAEI,QAAI,CAACm0E,MAAL,CAAY4G,aAAZ,CAA0B76E,SAA1B,CAAoC,UAACgrC,MAAD,EAAY;AAC5C,kBAAIA,MAAM,CAAC6pC,GAAP,CAAW,MAAX,KAAsB7pC,MAAM,CAACvzB,GAAP,CAAW,MAAX,MAAuB,QAAI,CAACwX,IAAL,CAAUrK,QAAV,CAAmB5Q,EAApE,EAAwE;AACpE,oBAAMA,EAAE,GAAGg3B,MAAM,CAACvzB,GAAP,CAAW,MAAX,CAAX;;AACA,oBAAMivB,GAAG,GAAG,QAAI,CAACzX,IAAL,CAAUpY,SAAV,CAAoBtR,IAApB,CAAyB,UAACqf,QAAD;AAAA,yBAAcA,QAAQ,CAAC5Q,EAAT,KAAgBA,EAA9B;AAAA,iBAAzB,CAAZ;;AACA,oBAAI0yB,GAAJ,EAAS;AACL,0BAAI,CAACzX,IAAL,CAAUrK,QAAV,GAAqB8hB,GAArB;AACH;AACJ;AACJ,aARD,CAFJ;;AAYA,oBAAI,CAAC5mC,YAAL,CACI,UADJ,EACc,MACV,QAAI,CAACmvB,IAAL,CAAU3uB,MAAV,CAAiB,iBAAjB,CADU,MACyB,IADzB,IACyB,aADzB,GACyB,MADzB,GACyB,GAAEN,SAAF,CAAY,YAAM;AACjD;AACA,sBAAI,CAAC0C,MAAL,GAAc,IAAI,UAAAuQ,MAAJ,CAAW;AAAElR,oBAAI,EAAE,QAAI,CAACW,MAAL,CAAYgJ,EAApB;AAAwBmc,2BAAW,EAAE,KAArC;AAA4CC,2BAAW,EAAE,QAAI,CAACnhB;AAA9D,eAAX,CAAd;AACA,sBAAI,CAACmuE,UAAL,GAAkB,QAAI,CAAC7lD,IAAL,CAAUrK,QAAV,GAAqB,IAArB,GAA4B,KAA9C;AACA,kBAAG,CAAC,QAAI,CAACkwD,UAAT,EAAqB;;AACrB,sBAAI,CAAC31B,OAAL,CAAajL,QAAb,CAAsB,EAAtB,EAA0B;AACtBirC,0BAAU,EAAE,QAAI,CAAClL,MADK;AAEtBtzB,2BAAW,EAAE;AAAEz0C,sBAAI,EAAE,QAAI,CAAC+iB,IAAL,CAAUrK,QAAV,CAAmB5Q;AAA3B;AAFS,eAA1B;AAIH,aATkC,CAFvC;AAaH,WA5BD;AA6BH;;;4CAE0B;AACvB,cAAMwT,GAAG,GAAG,UAAAhc,OAAA,CAAQ,IAAI7J,IAAJ,EAAR,CAAZ;AACA,cAAMI,IAAI,GAAGylB,GAAG,CAAC7kB,QAAJ,CAAa;AAAEP,kBAAM,EAAEC,IAAI,CAACC,IAAL,CAAUklB,GAAG,CAAChlB,OAAJ,GAAc,CAAxB,IAA6B;AAAvC,WAAb,CAAb;AACA,cAAMoiB,QAAQ,GAAG,KAAKqK,IAAL,CAAUrK,QAA3B;;AACA,cAAMH,KAAK,GAAG,KAAKyK,OAAL,CAAa3pB,IAAb,CAAkBqf,QAAQ,CAACgkB,aAAT,IAA0BhkB,QAAQ,CAAC+jB,WAArD,CAAd;;AACA,cAAMjyB,OAAO,GAAG,IAAI,cAAAsP,OAAJ,CAAY;AACxBnS,uBAAW,EAAE9R,IAAI,CAAC0R,OADM;AAExBF,qBAAS,EAAExR,IAAI,CAACa,QAAL,CAAc;AAAEJ,qBAAO,EAAE;AAAX,aAAd,CAFa;AAGxBuwB,gBAAI,EAAEtO;AAHkB,WAAZ,CAAhB;;AAKA,eAAK26B,OAAL,CAAa9lC,IAAb,CACI,gCAAA+9E,0BADJ,EAEI;AACInwE,gBAAI,EAAE;AACFxQ,qBAAO,EAAPA;AADE;AADV,WAFJ;AAQH,S,CAED;AACA;;;;qCAKoBhU,M,EAAgB;AAChC,eAAKA,MAAL,GAAcA,MAAd;AACH;;;4BA/E2B;AACxB,cAAMkiB,QAAQ,GAAG,KAAKqK,IAAL,CAAUrK,QAA3B;AACA,iBAAOA,QAAQ,IAAI,CAAC,CAAC,KAAKsK,OAAL,CAAa3pB,IAAb,CAAkBqf,QAAQ,CAACgkB,aAAT,IAA0BhkB,QAAQ,CAAC+jB,WAArD,CAArB;AACH;;;4BAsEqB;AAClB,iBAAO,KAAK1Z,IAAL,CAAUrK,QAAV,CAAmBje,QAA1B;AACH;;;;MAnFkC,OAAAnI,a;;AALvC;;;uBAKak6F,iB,EAAiB,uC,EAAA,+B,EAAA,2C,EAAA,kC,EAAA,sC,EAAA,4C;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,+C;AAAA,c;AAAA,a;AAAA,8mB;AAAA;AAAA;ACpB9B;AACI;AACA;AAGA;AAsCJ;;;;AAzCuB;AAAA;AAGA;AAAA;;;;;;;;;2BDeVA,iB,EAAiB;cAL7B,OAAA72C,SAK6B;eALnB;AACPljD,kBAAQ,EAAE,cADH;AAEPmjD,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB9B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMm0B,MAAM,GAAY,CACpB;AAAE/pD,UAAI,EAAE,EAAR;AAAYs8C,eAAS,EAAE,qBAAAiwB;AAAvB,KADoB,EAEpB;AAAEvsE,UAAI,EAAE,QAAR;AAAkBs8C,eAAS,EAAE,qBAAAiwB;AAA7B,KAFoB,EAGpB;AAAEvsE,UAAI,EAAE,IAAR;AAAcg9C,gBAAU,EAAE;AAA1B,KAHoB,CAAxB;;QAwBaH,c;;;;AAlBb;;YAkBaA;;;;yBAAAA,c;AAAc,O;AAAA,gBARd,CACL,SAAAhsE,YADK,EAEL,QAAA8oD,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAJK,EAKL,gBAAAnL,mBALK,CAQc;;;;+EAAd/B,c,EAAc;AAAA,uBAhBnB,qBAAA0vB,iBAgBmB,EAfnB,qBAAAP,wBAemB,EAdnB,iBAAAT,2BAcmB,EAbnB,oBAAAc,gBAamB,EAZnB,gCAAAnB,0BAYmB,EAXnB,uBAAAP,kBAWmB,EAVnB,yBAAAK,oBAUmB;AAVC,kBAGpB,SAAAn6F,YAHoB,EAIpB,QAAA8oD,WAJoB,EAKpB,QAAAC,mBALoB,EAKD,eALC,EAOpB,gBAAAglB,mBAPoB;AAUD,O;AAHA,K;;;;;2BAGd/B,c,EAAc;cAlB1B,OAAA/rE,QAkB0B;eAlBjB;AACN6B,sBAAY,EAAE,CACV,qBAAA45F,iBADU,EAEV,qBAAAP,wBAFU,EAGV,iBAAAT,2BAHU,EAIV,oBAAAc,gBAJU,EAKV,gCAAAnB,0BALU,EAMV,uBAAAP,kBANU,EAOV,yBAAAK,oBAPU,CADR;AAUNj6F,iBAAO,EAAE,CACL,SAAAF,YADK,EAEL,QAAA8oD,WAFK,EAGL,QAAAC,mBAHK,EAIL,SAAAsjB,YAAA,CAAa8M,QAAb,CAAsBD,MAAtB,CAJK,EAKL,gBAAAnL,mBALK;AAVH,S;AAkBiB,Q;;;;;;;;;;;;;;;;;;;;;ACpCd,YAAAhsB,WAAA,GAA+B;AACxCC,gBAAU,EAAE,IAD4B;AAExC25C,SAAG,EAAE,KAFmC;AAGxC18E,gBAAU,EAAE;AAH4B,KAA/B;;;;;;;;;;;;;;;;;;;ACGb,QAAM28E,OAAO,GAAG;AACZphD,UAAI,EAAE;AACFz3C,aAAK,EAAE,CACH;AACIjC,cAAI,EAAE,UADV;AAEIqd,eAAK,EAAE,WAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SADG,EAUH;AACItb,cAAI,EAAE,WADV;AAEIqd,eAAK,EAAE,YAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SAVG,EAmBH;AACItb,cAAI,EAAE,UADV;AAEIqd,eAAK,EAAE,WAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SAnBG,EA4BH;AACItb,cAAI,EAAE,UADV;AAEIqd,eAAK,EAAE,WAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SA5BG,EAqCH;AACItb,cAAI,EAAE,SADV;AAEIqd,eAAK,EAAE,UAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SArCG,EA8CH;AACItb,cAAI,EAAE,YADV;AAEIqd,eAAK,EAAE,aAFX;AAGIhC,cAAI,EAAE;AACFnS,gBAAI,EAAE,MADJ;AAEF,qBAAO,gBAFL;AAGFoS,mBAAO,EAAE;AAHP;AAHV,SA9CG,CADL;AAyDFy/E,iBAAS,EAAE;AAzDT;AADM,KAAhB;AA6DA;;;;AAGA,QAAMniF,OAAO,GAAG;AACZoiF,mBAAa,EAAE,CACX;AAAEh7F,YAAI,EAAE,UAAR;AAAoBkW,UAAE,EAAE;AAAxB,OADW,EAEX;AAAElW,YAAI,EAAE,UAAR;AAAoBkW,UAAE,EAAE;AAAxB,OAFW,CADH;AAKZ+kF,iBAAW,EAAE,CACT,WADS,EAET,MAFS,EAGT,UAHS,EAIT,QAJS,EAKT,UALS,EAMT,WANS,EAOT,OAPS,EAQT,MARS,EAST,SATS,EAUT,cAVS,EAWT,cAXS,CALD;AAkBZC,eAAS,EAAE,IAlBC;AAmBZC,qBAAe,EAAE,IAnBL;AAoBZC,gBAAU,EAAE;AApBA,KAAhB;AAuBA;;;;AAGA,QAAMC,QAAQ,GAAG;AACbC,cAAQ,EAAE;AADG,KAAjB;AAIA;;;;AAGA,QAAM5B,QAAQ,GAAG,EAAjB;AAEA;;;;AAGA,QAAMpS,OAAO,GAAG,EAAhB;AACA;;;;AAGA,QAAM7xC,GAAG,GAAG;AACRvmB,WAAK,EAAE,oBADC;AAERsV,iBAAW,EAAE,sDAFL;AAGR1T,gBAAU,EAAE,WAHJ;AAIRkkB,gBAAU,EAAE;AACR9rC,YAAI,EAAE,KADE;AAER4lB,WAAG,EAAE,6BAFG;AAGRmmB,kBAAU,EAAE;AAHJ,OAJJ;AASRC,eAAS,EAAE;AACPhsC,YAAI,EAAE,KADC;AAEP4lB,WAAG,EAAE,qBAFE;AAGPmmB,kBAAU,EAAE;AAHL,OATH;AAcRE,aAAO,EAAE;AACL92B,cAAM,EAAE,UADH;AAEL+2B,iBAAS,EAAE,IAFN;AAGLC,qBAAa,EAAE,IAHV;AAILC,4BAAoB,EAAE,IAJjB;AAKLC,mBAAW,EAAE;AALR,OAdD;AAqBRulD,aAAO,EAAPA,OArBQ;AAsBRliF,aAAO,EAAPA,OAtBQ;AAuBRyiF,cAAQ,EAARA,QAvBQ;AAwBR3B,cAAQ,EAARA,QAxBQ;AAyBRpS,aAAO,EAAPA;AAzBQ,KAAZ;AA4BA;;;;AAGa,YAAA3a,gBAAA,GAA6C;AACtDljE,WAAK,EAAE,IAD+C;AAEtDiT,cAAQ,EAAE;AACNK,cAAM,EAAE,EADF;AAENM,aAAK,EAAE,YAFD;AAGNT,gBAAQ,EAAE,EAHJ;AAINK,YAAI,EAAE,EAJA;AAKNE,kBAAU,EAAE,KALN;AAMNc,mBAAW,EAAE;AANP,OAF4C;AAUtDw3B,SAAG,EAAHA,GAVsD;AAWtDl4B,UAAI,EAAE,KAXgD;AAYtDiB,cAAQ,EAAE;AAZ4C,KAA7C;;;;;;;;;;;;;;;;;;;;AC7Ib;AAAA;AAAA;;AAIA;AAAA;AAAA;;;;;;;;;;AAEA,QAAI,cAAAyiC,WAAA,CAAYC,UAAhB,EAA4B;AAC1B,aAAAq6C,cAAA;AACD;;AAED,wBAAAC,eAAA,GAAyBC,eAAzB,CAAyC,mBAAD,UAAxC,WACS,UAAAn6E,GAAG;AAAA,aAAI3X,OAAO,CAACsY,KAAR,CAAcX,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["export * from './lib/animations.module';\nexport * from './lib/angular-animations'\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0 })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class AnimationsModule {}\n","export * from './lib/base.module';\nexport * from './lib/types.utilities';\nexport * from './lib/general.utilities';\nexport * from './lib/base.class';\nexport * from './lib/base.directive';\nexport * from './lib/date.utils'\nexport * from './lib/date.spec-helpers'\nexport * from './lib/replace.pipe'\nexport * from './lib/cdk-drop-list-scroll-container.directive'\nexport * from './lib/image.directive';\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NumbersOnlyDirective } from './numbers-only.directive';\n\n@NgModule({\n    imports: [CommonModule,],\n    declarations: [\n        NumbersOnlyDirective\n    ],\n    exports: [\n        NumbersOnlyDirective\n    ]\n})\nexport class BaseModule {\n}\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\nimport { BaseDirective } from './base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import MockDate from 'mockdate';\n\n/**\n * August 13, 2020 at 7:22:12 UTC\n */\nconst initialTime = 1597346532 * 1000;\n\nexport const mockDate = (timeOverride = initialTime) => MockDate.set(new Date(timeOverride));\n\nexport const resetDate = () => MockDate.reset();\n","import { DateNow, DateTZ } from '@mckinsey-converge/date-tz'\nimport { DateTime } from 'luxon';\nimport * as dayjs from 'dayjs';\nimport {\n    dayJsHoursMinutes,\n    dayJsTimeFormatString,\n} from './general.utilities';\n\n/**\n * Allows you to split up durations into a group.\n */\nexport interface DurationGroup {\n    /**\n     * Step amount to generate between start and max.\n     */\n    step: number;\n    /**\n     * Where to start in minutes.\n     */\n    start: number;\n    /**\n     * Where to end in minutes.\n     */\n    max: number;\n}\n\n/**\n * Find the multiple of `stepMinute` which is closest to the 'minutes' property of the given date.\n * @param date - Any Lexon date.\n * @param stepMinute - The number of minutes between one timeslot and the next. Integer value\n * 1 to 59, inclusive.\n */\n// R--- depreciate this one\nexport const closestToTimeSlot = (date: DateTime, stepMinute: number, start: number = 0) : DateTime => {\n    return date.set({ millisecond: 0, second: 0, minute: Math.ceil(date.minute / stepMinute) * stepMinute })\n        .plus({ minutes: start % 60 }) // apply offset as well if it starts at 15.\n};\n\nexport const closestToTimeSlotTz = (dateTz: DateTZ, stepMinute: number, start: number = 0) : DateTZ => {\n    return dateTz.setValue({ millisecond: 0, second: 0, minute: Math.ceil(dateTz.minutes / stepMinute) * stepMinute })\n        .addValue({ minutes: start % 60 }) // apply offset as well if it starts at 15.\n};\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as hrs, or minutes as mins\n */\nexport function durationHumanized(duration: number, short: boolean = false): string {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? ' hr' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? ' min' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\nexport const weekDayMonthYearFormat = (date: DateTZ): string => date.formatDate('ccc dd MMM yyyy');\n\n/**\n * Tries to extract best-fit input\n * @return undefined if not valid. otherwise if good\n */\nexport const extractDateFromInput = (input: string,\n    checkHour,\n    startDate: dayjs.Dayjs): dayjs.Dayjs | undefined => {\n    // check if input has am/pm or normal 24 hour time.\n    // let date = dayjs(input, 'HH:mm');\n    // let date = dayjs(input, 'h:mma');\n    let date = dayjs(input, dayJsTimeFormatString());\n    if (!date.isValid()) {\n        // patch if time is in format xx:x to assume you meant xx:x0\n        let cleanedInput = input;\n        const times = input.split(':');\n        if(!input){\n            return undefined\n        }\n        if (times.length === 2) {\n            if (times[1].length === 1) {\n                cleanedInput = `${times[0]}:${times[1]}0`;\n            }\n        }\n        // may be other input, lets try next value (without am/pm)\n        date = dayjs(cleanedInput, dayJsHoursMinutes());\n        // might be just purely an hour\n        if (!date.isValid() && checkHour) {\n            date = dayjs(input, 'H');\n        }\n    }\n    // We expect input times to be in the future. If now is in the afternoon, this\n    // simple block will ensure the returned date is also in the afternoon.\n    //\n    // NB: dayjs parses times as morning by default.\n    if (date.isValid()) {\n        // Move to the selected start date\n        date = date.month(startDate.month()).date(startDate.date()).year(startDate.year());\n        if (startDate.hour() > date.hour() && date.date() === startDate.date()) {\n            date = date.set('hour', date.hour() + 12);\n        }\n    }\n\n    return date.isValid() ? date : undefined;\n};\n\n\n/**\n * 1. Calculates the date from input via {@link extractDateFromInput}.\n * 2. Finds the nearest time slot that it can be via {@link closestToTimeSlot}.\n * 3. Then returns the time-format string the input expects so autocomplete can suggest\n *    closest match.\n * @param step The step between time slots.\n * @param input The input text.\n */\nexport const nearestStepToInput = (\n    step: number,\n    input: string,\n    currentStartDate: number,\n    start: number = 0\n): string => {\n    let date = extractDateFromInput(input, false, dayjs(currentStartDate));\n    if (date) {\n        const luxonDate = DateTime.fromMillis(date.valueOf());\n        const closestDate = closestToTimeSlot(luxonDate, step, start);\n        return closestDate.toFormat(dayJsHoursMinutes());\n    } else {\n        return input;\n    }\n};\n/**\n * Similiar to {@link nearestStepToInput} instead:\n * 1. Calculates the date from input via {@link extractDateFromInput}.\n * 2. Finds which duration group is closest to the currentStartDate. If not found\n *    return vanilla text.\n * 3. Finds the nearest time slot that it can be via {@link closestToTimeSlot}.\n * 4. Then returns the time-format string the input expects so autocomplete can suggest\n *    closest match.\n */\nexport const nearestDurationToInput = (durationGroups: DurationGroup[],\n    currentStartDate: number,\n    value: string): string => {\n\n    let date = extractDateFromInput(value, false, dayjs(currentStartDate));\n\n    if (!date) {\n        // Check if the input is a duration \n        const duration = parseInt(value);\n        if (typeof (duration) === 'number' && value.indexOf(':') === -1 && duration > 12) {\n            date = dayjs(currentStartDate).add(duration, 'm');\n        }\n    }\n\n    if (date) {\n        const minutes = date.diff(currentStartDate, 'minute');\n        const closestDurationGroup = durationGroups.find(d => {\n            return (minutes <= d.max);\n        });\n        if (closestDurationGroup) {\n            const offset = [closestDurationGroup].reduce((previousValue, currentValue) => {\n                return previousValue + currentValue.start;\n            }, 0);\n            const luxonDate = DateTime.fromMillis(date.valueOf());\n            const closestDate = closestToTimeSlot(luxonDate, closestDurationGroup.step, 0);\n            return closestDate.toFormat(dayJsHoursMinutes());\n        }\n    }\n\n    return value;\n};\n\nexport const resetSecondsOnTimestamp = (timestamp: number) => {\n    return DateTime.fromMillis(timestamp).set({ second: 0, millisecond: 0 }).toMillis();\n}\n\nexport const formatDateWithSuffix = (date: string): string => {\n    const dateObj = new Date(date);\n    const day = dateObj.getDate();\n    const month = dateObj.toLocaleString(\"default\", { month: \"short\" });\n    const year = dateObj.getFullYear();\n    return `${day}${nthNumber(day)} ${month} ${year}`; //this.event.date_string;\n}\n\nconst nthNumber = (number) => {\n    return number > 0\n        ? [\"th\", \"st\", \"nd\", \"rd\"][\n                (number > 3 && number < 21) || number % 10 > 3 ? 0 : number % 10\n            ]\n        : \"\";\n};\n\nexport const getListOfDateFormat = () => {\n    return [\t\n        'MMMM dd y', \t//March 07 2023\n        'MMM dd, y',\t//Mar 07 2023\n        'MMMM dd',\t\t//March 07\n        'MMM dd', \t\t//Mar 07\n        'MM dd', \t\t//03 07\n\n        'MM-dd-yy',\t\t//03-07-23\n        'MM-dd-yyyy',\t//03-07-2023\n        'MMMM-dd-yyyy', //March-07-2023\n        'MMMM-dd-yy',\t//March-07-23\n\n        'MMMM-dd',\t\t//March-07\n        'MMM-dd',\t\t//Mar-07\n        \n        'MMM-dd-y',\t\t//Mar-07-2023\n\n        'MM/dd',\t\t//03/07\n        'MM/dd/yy',\t\t//03/07/23\n        'MM/dd/yyyy',\t//03/07/2023\n        \n        'dd/MM',\t\t//07/03\n        'dd/MM/yy',\t\t//07/03/23\n        'dd/MM/yyyy',\t//07/03/2023\n        \n        'dd-MMMM',\t\t//07-March\n        'dd MMMM',\t\t//07 March\n        'dd-MMM',\t\t//07-Mar\n        'dd MMM',\t\t//07 Mar\n\n        'dd-MM-y',\t\t//07-03-23\n        'dd MMMM yy',\t//07 March 23\n        \n        'dd/MMM/y',\t    //07/Mar/2023\n        'dd/MMMM/y',    //07/March/2023\n        'dd/MMM/yy',    //07/Mar/23\n        'dd/MMMM/yy',   //07/March/23\n        \n\n        'dd-MMMM-yy',\t//07-March-23\n        'dd-MMM-yy',\t//07-Mar-23\n        'dd-MM-yy',\t\t//07-03-23\n        'MMMM-dd-yy',\t//March-07-23\n        'MMM-dd-yy',\t//Mar-07-23\n\n        'MMMM dd yy',\t//March 07 23\n        'MMM dd, yy',\t//Mar 07 23\n        'MM dd, yy',\t//03 07 23\n\n        'dd MMMM y',\t//07 March 2023\n        'dd MMM, y',\t//07 Mar 2023\n        'dd MM, yy',\t//07 03, 23\n        'dd-MMM-y',\t//07-Mar-2023\n\n        'h:mm a', // 3:30 pm\n        'h:mma' // 3:30 pm\n\n    ];\n}","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport * as utc from 'dayjs/plugin/utc';\nimport * as timezone from 'dayjs/plugin/timezone';\nimport * as isToday from 'dayjs/plugin/isToday';\nimport * as weekday from 'dayjs/plugin/weekday';\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n// TODO: this is not the best place to import this timezone addition\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(isToday);\ndayjs.extend(weekday);\ndayjs.extend(customParseFormat);\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error' | 'info';\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = 'STAFF'\n) {\n    if ((window as any).debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\n export function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T>(array: T[], key: keyof T | undefined = undefined) {\n    return array.filter(\n        (el, pos, arr) =>\n            el &&\n            arr.indexOf(\n                key\n                    ? arr.find((i) => i && i[key] === el[key])\n                    : arr.find((i) => i === el)\n            ) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(durationInput: number, size: string = 'long') {\n    const duration = Math.floor(durationInput);\n    if (!duration || duration < 0) {\n        return '';\n    }\n    let singular = false;\n    let format = { hours: ' hour', minutes: ' minute' };\n    switch (size) {\n        case 'medium':\n            format = { hours: 'hr', minutes: 'min' };\n            break;\n        case 'short':\n            format = { hours: 'h', minutes: 'm' };\n            singular = true;\n            break;\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${\n        h >= 1\n            ? h +\n              (singular ? format.hours : format.hours + (h === 1 ? '' : 's'))\n            : ''\n    }`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += singular ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${\n            m >= 1\n                ? m +\n                  (singular\n                      ? format.minutes\n                      : format.minutes + (m === 1 ? '' : 's'))\n                : ''\n        }`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort(\n        (a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word)\n    );\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (\n                            field.value.match(i.regex) || []\n                        ).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (\n                                item[`match_${f}`] ||\n                                item[f] ||\n                                ''\n                            ).split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (\n                                    k.toLowerCase().indexOf(i.word) >= 0 &&\n                                    k.indexOf('`') < 0\n                                ) {\n                                    tokens[tokens.indexOf(k)] = k.replace(\n                                        i.regex,\n                                        '`$&`'\n                                    );\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return (\n                item.match_index >= 0 &&\n                item.match &&\n                match_count >= parts.length\n            );\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(\n            /\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g,\n            '<span class=\"highlight\">$&</span>'\n        );\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = DateNow(new Date())\n        .setValue({\n            hour: +parts[0],\n            minute: +parts[1],\n        })\n        .startOfValue('minute');\n    return date.ms;\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Get time format string for locale\n * @param isLowerCaseAmPm - if true, we use lowercase for am/pm.\n */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mma';\n}\n\nexport const hoursMinutes = (): string => (is24HourTime() ? 'HH:mm' : 'h:mma');\n\nexport function dayJsTimeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mma';\n}\n\nexport const dayJsHoursMinutes = (): string =>\n    is24HourTime() ? 'HH:mm' : 'h:mm';\n\n/**\n * Converts a timeZone name into a date object.\n * @param timeZoneName - name of timezone\n */\nexport const timezoneNameToDate = (\n    timeZoneName: string | undefined\n): DateTZ | undefined => {\n    let zone: DateTZ | undefined;\n    if (timeZoneName) {\n        try {\n            zone = DateNow(new Date()).toZone(timeZoneName);\n        } catch (e) {\n            // invalid timezone. Suppress logs here.\n            // console.error(e);\n        }\n    }\n    return zone;\n};\n\nexport const timezoneDisplay = (date: DateTZ) =>\n    !!date ? `${date.formatDate('ZZZZ')}` : '';\nexport const gmtOffsetDisplay = (date: DateTZ) =>\n    !!date ? `(GMT${date.formatDate('ZZ')})` : '';\n\n/**\n * Returns a full time with timezone.\n * @param date\n */\nexport function timeWithZoneFormatString(date: DateTZ): string {\n    return `${date\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()} ${timezoneDisplay(date)}`;\n}\n\nexport function timeWithGmtOffsetFormatString(date: DateTZ): string {\n    return `${date\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()} ${gmtOffsetDisplay(date)}`;\n}\n\n/**\n * Returns a full start end range.\n *\n * Start and end both use lowercase am/pm markers (c.f. timeFormatString).\n * @param startDateTz start time DateTZ object\n * @param endDateTz end time DateTZ object\n */\nexport function startEndTimeFormatString(\n    startDateTz: DateTZ,\n    endDateTz: DateTZ\n): string {\n    return `${startDateTz\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()}-${endDateTz\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()}`;\n}\n\n/**\n * Returns a full start end range with timezone.\n *\n * Start and end both use lowercase am/pm markers (c.f. timeFormatString).\n * @param startDateTz start time DateTZ object\n * @param endDateTz end time DateTZ object\n */\nexport function startEndTimeWithZoneFormatString(\n    startDateTz: DateTZ,\n    endDateTz: DateTZ\n): string {\n    return `${startDateTz\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()}-${endDateTz\n        .formatDate(timeFormatString())\n        .toLocaleLowerCase()} ${gmtOffsetDisplay(startDateTz)}`;\n}\n\n/**\n * Returns a full date with weekday day month year.\n * @param date\n * @param comma optional boolean to display a comma after the month\n */\nexport function dateLocalFormatString(date: DateTZ, comma?: boolean): string {\n    if (comma) {\n        return date.formatLocalDate('cccc d MMMM, yyyy');\n    }\n    return date.formatLocalDate('cccc d MMMM yyyy');\n}\n\nexport function dateBuildingFormatString(\n    date: DateTZ,\n    comma?: boolean\n): string {\n    if (comma) {\n        return date.formatDate('cccc d MMMM, yyyy');\n    }\n    return date.formatDate('cccc d MMMM yyyy');\n}\n\nexport function shorterLocalDateFormatString(\n    date: DateTZ,\n    comma?: boolean\n): string {\n    if (comma) {\n        return date.formatLocalDate('ccc d MMM, yyyy');\n    }\n    return date.formatLocalDate('ccc d MMM yyyy');\n}\n\nexport function shorterBuildingDateFormatString(\n    date: DateTZ,\n    comma?: boolean\n): string {\n    if (comma) {\n        return date.formatDate('ccc d MMM, yyyy');\n    }\n    return date.formatDate('ccc d MMM yyyy');\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\n/* istanbul ignore next */\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' +\n            encodeURIComponent('\\uFEFF' + contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] =\n                        part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => {\n                        return typeof item[key] !== 'boolean'\n                            ? `\"${item[key] || ''}\"`\n                            : item[key];\n                    })\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        var t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\nexport function isLessThanBreakpoint(breakpoint: number): boolean {\n    if (window) {\n        return window.innerWidth < breakpoint;\n    }\n    return false;\n}\n\nexport function toTitleCase(str: string): string {\n    return typeof str === 'string'\n        ? str\n              .toLowerCase()\n              .split(' ')\n              .map(function (word) {\n                  return word.replace(word[0], word[0].toUpperCase());\n              })\n              .join(' ')\n        : '';\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\nimport { SpaceImageObject } from '@mckinsey-converge/base';\nimport { BehaviorSubject } from 'rxjs';\n\n@Directive({\n    selector: 'a-very-basic-component-image-that-should-not-be-used'\n})\nexport class ImageDirective extends BaseClass implements OnDestroy {\n    public foundImages?: SpaceImageObject[];\n    public loadImages?: BehaviorSubject<SpaceImageObject[]>\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}","import {\n    Directive,\n    ElementRef,\n    HostListener\n} from '@angular/core';\n\n@Directive({\n    selector: 'input[type=number], input[numbersOnly]'\n})\nexport class NumbersOnlyDirective {\n\n    constructor(private _el: ElementRef) {\n    }\n\n    @HostListener('input', ['$event']) onInputChange(event) {\n        const initalValue = this._el.nativeElement.value;\n        this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n        if (initalValue !== this._el.nativeElement.value) {\n            event.stopPropagation();\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n\n    transform(value: string, from: string = '_', to: string = ' '): string {\n        return (value|| '').split(from).join(to);\n    }\n}\n","export * from './lib/bookings.module';\nexport * from './lib/bookings.actions'\nexport * from './lib/bookings.reducer'\nexport * from './lib/bookings.types'\nexport * from './lib/bookings.utils'\n","\nimport { IBookingQueryOptions, PaginatedBooking } from '@mckinsey-converge/data-common';\nimport { \n    createLoadingAction\n} from '../../../loading/src/lib/loading.actions';\n\nimport {\n    MyBookingsState,\n    MyBookingsStoreState,\n} from './bookings.types';\nimport {\n    createAction,\n    props\n} from '@ngrx/store';\n\nexport const bookingStateSelector = (state: MyBookingsStoreState) => state.bookings;\n\nexport const loadBookingsWithQuery = createAction('[Bookings] Load Bookings with query', props<IBookingQueryOptions>());\n\nexport const loadHomepageBookingsResults = createLoadingAction<MyBookingsState, PaginatedBooking, IBookingQueryOptions>('HomepageBookings', 'homepage');\n\nexport const loadUpcomingBookingsResults = createLoadingAction<MyBookingsState, PaginatedBooking, IBookingQueryOptions>('UpcomingBookings', 'upcoming');\n\nexport const loadPastBookingsResults = createLoadingAction<MyBookingsState, PaginatedBooking, IBookingQueryOptions>('PastBookings', 'past');\n\nexport const loadCancelledBookingsResults = createLoadingAction<MyBookingsState, PaginatedBooking, IBookingQueryOptions>('CancelledBookings', 'cancelled');\n\nexport const loadBookingByIdResults = createLoadingAction<MyBookingsState, PaginatedBooking, IBookingQueryOptions>('BookingById', 'bookingById');\n\nexport const clearBookingByIdResults = createAction('[BookingById] Clear Booking Data');\n","import { Injectable } from '@angular/core';\nimport {\n    Actions,\n    Effect,\n    ofType\n} from '@ngrx/effects';\nimport {\n    IBookingQueryOptions,\n    BookingsPaginatedService\n} from '../../../data-common/src/lib/bookings';\nimport {\n    createLoadingEffect,\n    LoadingAction\n} from '@mckinsey-converge/loading';\nimport {\n    loadHomepageBookingsResults,\n    loadPastBookingsResults,\n    loadUpcomingBookingsResults,\n    loadCancelledBookingsResults,\n    loadBookingsWithQuery,\n    loadBookingByIdResults\n} from './bookings.actions';\nimport { mergeMap } from 'rxjs/operators';\nimport {\n\n} from './bookings.utils';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\n\n@Injectable()\nexport class BookingsEffects {\n    constructor(private actions: Actions,\n                private bookingService: BookingsPaginatedService) {\n    }\n\n    @Effect()\n    public afterBookingsRequestResultsLoadOthersEffect = this.actions.pipe(\n        ofType(loadBookingsWithQuery),\n        mergeMap((action: LoadingAction<IBookingQueryOptions>) => {\n            const date = new DateTZ({date: action.from})\n            const yourBookingsRequest = {\n                email: action.email,\n                pagination: true,\n                limit: 4,\n                offset: action.offset,\n                show_cancelled: false,\n                sort: 'start_epoch asc',\n                filters: {\n                    end_epoch: `>=${date.subtractValue({ minutes: 5 }).seconds}`,\n                },\n                include_rooms: true\n            };\n            const upcomingRequest = {\n                email: action.email,\n                pagination: true,\n                limit: 4,\n                offset: action.offset,\n                show_cancelled: false,\n                sort: 'start_epoch asc',\n                filters: {\n                    end_epoch: `>=${date.seconds}`,\n                },\n                include_rooms: true\n            };\n            const pastRequest = {\n                email: action.email,\n                pagination: true,\n                limit: 4,\n                offset: action.offset,\n                show_cancelled: false,\n                sort: 'start_epoch desc',\n                filters: {\n                    start_epoch: `>${date.subtractValue({ hours: 48 }).seconds}`,\n                    end_epoch: `<${date.seconds}`,\n                },\n                include_rooms: true\n            };\n            const cancelledRequest = {\n                email: action.email,\n                pagination: true,\n                limit: 4,\n                offset: action.offset,\n                show_cancelled: true,\n                sort: 'start_epoch desc',\n                filters: {\n                    start_epoch: `>${date.subtractValue({ hours: 48 }).seconds}`,\n                },\n                include_rooms: true\n            };\n            const byIdRequest = {\n                email: action.email,\n                id: action.id,\n                pagination: true,\n                limit: 1,\n                include_rooms: true\n            };\n\n            const effects = [];\n            switch(action.target) {\n                case 'upcoming':\n                    effects.push(loadUpcomingBookingsResults.request(upcomingRequest));\n                    break;\n                case 'past':\n                    effects.push(loadPastBookingsResults.request(pastRequest));\n                    break;\n                case 'cancelled':\n                    effects.push(loadCancelledBookingsResults.request(cancelledRequest));\n                    break;\n                case 'bookingById':\n                    effects.push(loadBookingByIdResults.request(byIdRequest));\n                    break\n                case 'homepage':\n                    effects.push(loadHomepageBookingsResults.request(yourBookingsRequest));\n                    effects.push(loadPastBookingsResults.request(pastRequest));\n                    break\n                default:\n            }\n            return effects;\n        })\n    );\n\n    @Effect()\n    public loadHomepageBookingsResultsEffect = createLoadingEffect(this.actions, loadHomepageBookingsResults,\n        (action) => this.bookingService.userBookings(action, `homepage-${action.filters?.start_epoch || ''}${action.filters?.end_epoch || ''}`));\n\n    @Effect()\n    public loadUpcomingBookingsResultsEffect = createLoadingEffect(this.actions, loadUpcomingBookingsResults,\n        (action) => this.bookingService.userBookings(action, `upcoming-${action.filters?.start_epoch || ''}${action.filters?.end_epoch || ''}`));\n            \n    @Effect()\n    public loadPastBookingsResultsEffect = createLoadingEffect(this.actions, loadPastBookingsResults,\n        (action) =>\n            this.bookingService.userBookings(action, `past-${action.filters?.start_epoch || ''}${action.filters?.end_epoch || ''}`));\n\n    @Effect()\n    public loadCancelledBookingsResultsEffect = createLoadingEffect(this.actions, loadCancelledBookingsResults,\n        (action) =>\n            this.bookingService.userBookings(action, `cancelled-${action.filters?.start_epoch || ''}${action.filters?.end_epoch || ''}`));\n\n    @Effect()\n    public loadBookingByIdResultsEffect = createLoadingEffect(this.actions, loadBookingByIdResults,\n        (action) => \n            this.bookingService.userBookings(action, `bookingById-${action.id}`));\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { bookingsReducer } from './bookings.reducer';\nimport { BookingsEffects } from './bookings.effects';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        EffectsModule.forFeature([BookingsEffects]),\n        StoreModule.forFeature('bookings', bookingsReducer)\n    ]\n})\nexport class BookingsModule {\n}\n","import { LoadingModel } from '@mckinsey-converge/loading';\nimport {\n    createReducer,\n    on\n} from '@ngrx/store';\nimport {\n    loadHomepageBookingsResults,\n    loadUpcomingBookingsResults,\n    loadPastBookingsResults,\n    loadCancelledBookingsResults,\n    loadBookingByIdResults,\n    clearBookingByIdResults,\n} from './bookings.actions';\nimport { MyBookingsState } from './bookings.types';\n   \nimport { \n    BookingFormState,\n    clearBookingFormData,\n    clearRoomFilters,\n    openBookingSurvey,\n    storeBookingFormData,\n    storeRoomFilters\n} from '@mckinsey-converge/data-common';\n\n\nexport const initialBookingsState: MyBookingsState = {\n    query: LoadingModel.empty(),\n    homepage: LoadingModel.empty(),\n    upcoming: LoadingModel.empty(),\n    past: LoadingModel.empty(),\n    cancelled: LoadingModel.empty(),\n    bookingById: LoadingModel.empty(),\n};\n\nexport const bookingsReducer = createReducer(initialBookingsState,\n    on(clearBookingByIdResults, (state: MyBookingsState) => ({\n        ...state,\n        bookingById: LoadingModel.empty(),\n    }) as MyBookingsState),\n    ...loadHomepageBookingsResults.ons,\n    ...loadUpcomingBookingsResults.ons,\n    ...loadPastBookingsResults.ons,\n    ...loadCancelledBookingsResults.ons,\n    ...loadBookingByIdResults.ons,\n    );\n\n\n\n    export const initialBookingFormState: BookingFormState = {\n        activeFormFilters: []\n    };\n    \n    export const bookingFormReducer = createReducer(initialBookingFormState,\n        on(storeBookingFormData, (state: BookingFormState, action) => {\n            return {\n                ...state,\n                activeForm: {\n                    ...state.activeForm,\n                    ...action.payload\n                }\n            } as BookingFormState;\n        }),\n        on(clearBookingFormData, state => ({\n            ...state,\n            activeForm: undefined\n        }) as BookingFormState),\n        on(openBookingSurvey, state => ({\n            ...state,\n            bookingCompleted: new Date()\n        }) as BookingFormState),\n        on(storeRoomFilters, (state: BookingFormState, action) => {\n            return {\n                ...state,\n                activeFormFilters: action.payload\n            } as BookingFormState;\n        }),\n        on(clearRoomFilters, (state: BookingFormState) => ({\n            ...state,\n            activeFormFilters: initialBookingFormState.activeFormFilters\n        }) as BookingFormState)\n    );\n    \n","import { Booking } from '@mckinsey-converge/data-common';\nimport { SelectOption } from '@mckinsey-converge/ui';\n\nexport const mapBookingToSelectOption = (booking?: Booking): SelectOption<any> => booking ? ({\n    value: booking.id,\n    display: booking.name\n}) : undefined;\n","import { \n    createLoadingAction,\n} from '../../../loading/src/lib/loading.actions';\nimport {\n    Building,\n    BuildingCity,\n} from '../../../data-common/src/lib/organisation/building.class';\nimport {\n    BuildingLevel,\n} from '../../../data-common/src/lib/organisation/level.class'\nimport {\n    Organisation,\n} from '../../../data-common/src/lib/organisation/organisation.class'\nimport { createSelector } from '@ngrx/store';\nimport {\n    BuildingState,\n    BuildingStoreState\n} from './buildings.types';\n\nexport const loadBuildings = createLoadingAction<BuildingState, Building[], Organisation>('Buildings', 'data');\n\nexport const buildingStateSelector = (state: BuildingStoreState) => state.buildings;\n\nexport const selectLoadBuildingsSuccess = createSelector(buildingStateSelector, loadBuildings.selectors.optionalSuccess);\n\n/**\n * Groups buildings by city\n */\nexport const selectBuildingOptionsGroupedByCity = createSelector(loadBuildings.selectors.optionalSuccess, (success) => {\n    if (success) {\n        const mapped = new Map<BuildingCity, Building[]>();\n        success.forEach(s => {\n            const found = Array.from(mapped.keys()).find(c => c.name === s.city);\n            let list = found ? mapped.get(found) : undefined;\n            if (!list) {\n                list = [];\n                mapped.set({\n                    name: s.city,\n                    timezone: s.timezone\n                }, list);\n            }\n            list.push(s);\n        });\n        return mapped;\n    }\n    return new Map<BuildingCity, Building[]>();\n});\n\nexport const selectLevelByZoneId = createSelector(selectLoadBuildingsSuccess,\n    (buildings, param: string) => {\n        if (buildings) {\n            return buildings.map(b => b.levels.find((l: BuildingLevel) => l.id === param))\n                ?.[0] ?? undefined;\n        }\n        return undefined;\n    });\n","export * from './lib/data-common.module';\nexport * from './lib/booking';\nexport * from './lib/bookings';\nexport * from './lib/catering';\nexport * from './lib/location';\nexport * from './lib/organisation';\nexport * from './lib/spaces';\nexport * from './lib/users';\nexport * from './lib/app.service';\nexport * from './lib/hotkeys.service';\nexport * from './lib/base.service';\nexport * from './lib/base-api.class';\nexport * from './lib/reports'\nexport * from './lib/service-manager.class';\nexport * from './lib/settings.service';\nexport * from './lib/spec-helpers';\nexport * from './lib/settings.interfaces';\nexport * from './lib/validation.utilities';\nexport * from './lib/status.interfaces';\nexport * from './lib/recurrence/recurrence.utils';\nexport * from './lib/validation.utilities'","import { HashMap } from '@mckinsey-converge/base';\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n  let str = '';\n  if (map) {\n    for (const key in map) {\n      if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n        str += `${(str ? '&' : '')}${key}=${map[key]}`;\n      }\n    }\n  }\n  return str;\n}\n","import {\n    ApplicationRef,\n    Injectable,\n    NgZone,\n} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { take, first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport {\n    BehaviorSubject,\n    Observable,\n    Subject\n} from 'rxjs';\n\nimport {\n    ApplicationLoadingState,\n    BaseClass,\n    ConsoleStream,\n    log\n} from '@mckinsey-converge/base';\nimport { SettingsService } from './settings.service';\n\nimport { HotkeysService } from './hotkeys.service';\nimport {\n    ApplicationIcon,\n    ComposerSettings\n} from './settings.interfaces';\nimport { EnvironmentService } from '../../../environment/src/lib/environment.service'; // '@mckinsey-converge/environment';\nimport {\n    Store\n} from '@ngrx/store';\nimport { selectCurrentUser } from '../../../user/src/lib/user.actions';\nimport { UserStoreState } from '../../../user/src/lib/user.types';\nimport { Booking } from './bookings';\nimport { filter } from 'rxjs/operators';\n\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    _kioskFormFilter: boolean;\n\n    constructor(\n        public store: Store<UserStoreState>,\n        public analytics: HeapIoService,\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _environment: EnvironmentService\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this.set('undo', new BehaviorSubject<{\n            action: 'series' | 'booking',\n            booking: Booking\n        } | null>(null));\n\n        this.set('APP.breakdown', false);\n\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this.log('APP', `Application has stablised.`);\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public set kioskFormFilter(isIt: boolean) {\n        this._kioskFormFilter = isIt;\n    }\n\n    public get kioskFormFilter():boolean {\n        return this._kioskFormFilter \n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        this.subscription('currentUser', this.store.select(selectCurrentUser)\n            .pipe( filter(user => user !== undefined) )\n            .pipe(take(1))\n            .subscribe((user: any) => {\n                // Once we know we have the user loaded.\n                this.setupAnalytics(user?.fmno);\n            })\n        );\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading');\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n        const mock =\n            this._settings.get('mock') ||\n            location.href.includes('mock=true') ||\n            localStorage.getItem('mock') === 'true';\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    private setupAnalytics(fmno: string) {\n        this.log('HEAP', `Loading heap ${this._environment?.heap_io_id}`);\n        // Default Heap app ID via the default setting\n        const heapIo = this._settings.get('app.heap_io');\n        if (this._environment?.heap_io_id) {\n            // Apply Heap app ID via the environmental setting\n            heapIo.app_id = this._environment.heap_io_id;\n        }\n        if (heapIo) {\n            this.analytics.load(heapIo);\n            if (fmno) {\n                this.analytics.identify(fmno);\n            }\n        } else {\n            this.log('HEAP', `Heap could not be found for the current frontend ${this._settings.frontend}`);\n        }\n    }\n\n}\n","import { Subject } from 'rxjs';\n\nimport {\n  BaseClass,\n  HashMap\n} from '@mckinsey-converge/base';\nimport {\n  ServiceLike,\n  ServiceManager\n} from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n  type: ApiEventType;\n  metadata: T;\n}\n\n\nexport class BaseDataClass extends BaseClass {\n  /** Subject for emitting events on the object */\n  protected readonly event_subject = new Subject<ApiEvent>();\n  /** Observable for events on this object */\n  public readonly events = this.event_subject.asObservable();\n  /** Unique Identifier of the object */\n  public readonly id: string;\n  /** Human readable name of the object */\n  public readonly name: string;\n  /** Email address associated with the object */\n  public readonly email: string;\n  /** Map of local property names to server ones */\n  protected _server_names: HashMap<string> = {};\n\n  /** Service for managing model on the server */\n  protected get _service(): ServiceLike {\n    return ServiceManager.serviceFor(BaseDataClass);\n  }\n\n  constructor(raw_data: HashMap) {\n    super();\n    this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n    this.name = raw_data.name || '';\n    this.email = `${raw_data.email || ''}`.toLowerCase();\n  }\n\n  /**\n   * Save pending changes to server\n   */\n  public save(): Promise<BaseDataClass> {\n    if (this._service) {\n      const form = this.toJSON();\n      return new Promise((resolve, reject) => {\n        const promise = this.id\n          ? this._service.update(this.id, form)\n          : this._service.add(form);\n        promise.then(\n          (d) => {\n            this.event_subject.next({ type: 'item_saved', metadata: d });\n            resolve(d);\n          },\n          (_) => reject(_)\n        );\n      });\n    } else {\n      Promise.reject('No service to process request');\n    }\n  }\n\n  /**\n   * Delete this item from the server\n   */\n  public delete(): Promise<void> {\n    if (this.id) {\n      return this._service.delete(this.id);\n    }\n  }\n\n  /**\n   * Run task for this item on the service\n   * @param task_name Name of the task\n   * @param parameters Parameters to pass to the task request\n   */\n  public runTask(task_name: string, parameters: HashMap): Promise<void> {\n    if (this.id) {\n      return this._service.task(this.id, task_name, parameters);\n    }\n  }\n\n  /**\n   * Convert object into plain object\n   */\n  public toJSON(this: BaseDataClass): HashMap {\n    const obj: any = { ...this };\n    // Remove local private members\n    delete obj._service;\n    delete obj._changes;\n    delete obj.event_subject;\n    delete obj.events;\n    // Remove parent private members\n    delete obj._timers;\n    delete obj._intervals;\n    delete obj._subscriptions;\n    delete obj._server_names;\n    delete obj._initialised;\n    // Convert remaining members to be public\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      if (key[0] === '_') {\n        const new_key = this._server_names[key.substring(1)] || key.substring(1);\n        obj[new_key] = obj[key];\n        delete obj[key];\n      } else if (obj[key] === undefined) {\n        delete obj[key];\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Make a copy of this object\n   */\n  public clone(): BaseDataClass {\n    return new BaseDataClass(this);\n  }\n\n  /**\n   * Make a copy of this object without identification data\n   */\n  public duplicate(): BaseDataClass {\n    return new BaseDataClass({ ...this, id: null, email: null });\n  }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, of, Subject, Subscriber } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass, HashMap } from '@mckinsey-converge/base';\nimport { ApplicationService } from './app.service';\nimport { toQueryString } from './api.utilities';\nimport { SettingsService } from './settings.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nexport interface IEngineResponse {\n  results: HashMap[];\n  total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n  /** Application service */\n  public parent: ApplicationService;\n  /** Display name of the service */\n  protected _name: string;\n  /** API Route of the service */\n  protected _api_route: string;\n  /** Map of state variables for Service */\n  protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n  /** Map of observables for state variables */\n  protected _observers: { [key: string]: Observable<any> } = {};\n  /** Map of poll subscribers for API endpoints */\n  protected _subscribers: { [key: string]: Subscriber<any> } = {};\n  /** Map of promises for Service */\n  protected _promises: { [key: string]: Promise<any> } = {};\n  /** Comparison function for service items */\n  protected _compare: (a: T, b: T) => boolean = (a, b) =>\n    a === b || (a as any).id === (b as any).id;\n  /** Default filter function for list method */\n  protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n  /** Http Client */\n  protected get http() {\n    return this._composer.http;\n  }\n  constructor(protected _composer: ComposerService,\n              protected settingsService: SettingsService) {\n    super();\n    this._name = 'Base';\n    this._api_route = 'base';\n    this.set('list', []);\n  }\n\n  /**\n   * Injects concierge into form_data.\n   */\n  private injectConcierge(form_data: HashMap) {\n      // we only send it over when concierge, since the BE may check for presence rather than\n      // if its true or not.\n      if (this.settingsService.concierge) {\n          return { ...form_data, concierge: true }\n      }\n      return form_data;\n  }\n\n  /**\n   * Initailise service\n   */\n  public init() {\n    this.load().then(\n      (_) => this._initialised.next(true),\n      (err) => this.timeout('init', () => this.init(), 1000)\n    );\n  }\n\n  /**\n   * Get API route for the service\n   * @param engine Whether endpoint is using the application API or engine API\n   */\n  public route(engine: boolean = false) {\n    const endpoint = engine\n      ? this._composer.auth.api_endpoint\n      : '/api/staff';\n    return `${endpoint}/${this._api_route}`;\n  }\n\n  /** API Route of the service */\n  public get api_route() {\n    return this._api_route;\n  }\n\n  /**\n   * Get the current value of the named property\n   * @param name Property name\n   */\n  public get<U = any>(name: string): U {\n    if (!this._observers[name]) {\n      this.set<U>(name, null);\n    }\n    return (this._subjects[name] as BehaviorSubject<U>).getValue();\n  }\n\n  /**\n   * Listen to value change of the named property\n   * @param name Property name\n   * @param next Callback for value changes\n   */\n  public listen<U = any>(name: string): Observable<U> {\n    if (!this._observers[name]) {\n      this.set<U>(name, null);\n    }\n    return this._observers[name];\n  }\n\n  /**\n   * Update the value of the named property\n   * @param name Property name\n   * @param value New value\n   */\n  protected set<U = any>(name: string, value: U): void {\n    if (!this._subjects[name]) {\n      this._subjects[name] = new BehaviorSubject<U>(value);\n      this._observers[name] = this._subjects[name].asObservable();\n    } else {\n      this._subjects[name].next(value);\n    }\n  }\n\n  /**\n   * Get list of loaded items\n   * @param predicate Function for filtering the list\n   */\n  public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list: T[] = this.get('list');\n        return list.filter(predicate);\n  }\n\n  /**\n   * Get item with the given id from the loaded items\n   * @param id ID of the item\n   */\n  public find(id: string): T {\n    const list = this.get('list');\n    return list.find((i) => i.id === id || (i.email?.toLowerCase() === id?.toLowerCase()));\n  }\n\n  /**\n   * Query the index of the API route associated with this service\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public query(query_params: HashMap = {}): Promise<T[]> {\n    let engine = false;\n    let cache = 1000;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n      cache = typeof query_params.cache !== 'boolean' ? query_params.cache || 1000 : 1000;\n      typeof query_params.cache !== 'boolean' && delete query_params.cache;\n    }\n    let query = toQueryString(query_params);\n    const key = `query|${query}`;\n    if (!this._promises[key]) {\n      // Bring back once implemented in the API\n      // if (this.settingsService.concierge) {\n      //   query = query + '&check_access=true';\n      // }\n      this._promises[key] = new Promise((resolve, reject) => {\n        const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n        let result: T[] | HashMap[] = [];\n        this.http.get(url).subscribe(\n          (d: IEngineResponse | HashMap[]) => {\n            result =\n              d && d instanceof Array\n                ? d.map((i) => this.process(i))\n                : d && !(d instanceof Array) && d.results\n                ? (d.results as HashMap[])\n                : d && !(d instanceof Array) && !d.results \n                ? [d]\n                : [];\n          },\n          (e) => {\n            reject(e);\n            this._promises[key] = null;\n          },\n          () => {\n            resolve(result);\n            this.timeout(key, () => (this._promises[key] = null), cache);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * query function version -2 - returns observable instead of promise...\n   * Query the index of the API route associated with this service\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n   public queryObsr(query_params: HashMap = {}):Observable<any>{\n    let engine = false;\n    let cache = 1000;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n    }\n    let query = toQueryString(query_params);\n    const key = `query|${query}`;\n    const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n    return this.http.get(url).pipe(\n      map((d: IEngineResponse | HashMap[]) =>  this.processApiResult(d) ),\n      catchError(<T>(error: any, result?: T) => {\n        console.log(error);\n        return of(result as T);\n        })\n    );;\n  }\n\n\n  /**\n   * \n   * @param d \n   * @returns \n   */\n   processApiResult(d: IEngineResponse | HashMap[]): IEngineResponse | HashMap[]{\n    let result: IEngineResponse | HashMap[] =\n        d && d instanceof Array\n          ? d.map((i) => this.process(i))\n          : d && !(d instanceof Array) && d.results\n          ? (d.results as HashMap[])\n          : d && !(d instanceof Array) && !d.results \n          ? [d]\n          : [];\n    return result;\n  }\n\n  /**\n   * query function version -2 - returns observable instead of promise...\n   * Query the index of the API route associated with this service\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public queryRoomsForQR(query_params: HashMap = {}):Observable<any>{\n    let engine = false;\n    let cache = 1000;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n    }\n    let query = toQueryString(query_params);\n    const key = `query|${query}`;\n    const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n    return this.http.get(url);\n  }\n  \n  /**\n   * Query the API route for a sepecific item\n   * @param id ID of the item\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public show(id: string, query_params: HashMap = {}): Promise<T> {\n    let engine = false;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n    }\n    const query = toQueryString(query_params);\n    const key = `show|${id}|${query}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<T>((resolve, reject) => {\n        const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.get(url).subscribe(\n          (d) => (result = this.process(d)),\n          (e) => {\n            reject(e);\n            this._promises.new_item = null;\n          },\n          () => {\n            resolve(result);\n            this.timeout(key, () => (this._promises[key] = null), 1000);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * Make post request for a new item to the service\n   * @param form_data Data to post to the server\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n    /* istanbul ignore else */\n    if (!this._promises.new_item) {\n      this._promises.new_item = new Promise<T>((resolve, reject) => {\n        const query = toQueryString(query_params);\n        const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.post(url, this.injectConcierge(form_data)).subscribe(\n          (d) => (result = this.process(d)),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n            this._promises.new_item = null;\n          },\n          () => {\n            resolve(result);\n            this.set('list', this.updateList(this.get('list'), [result]));\n            this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n            this._promises.new_item = null;\n          }\n        );\n      });\n    }\n    return this._promises.new_item;\n  }\n\n  /**\n   * Perform API task for the given item ID\n   * @param id ID of the item\n   * @param task_name Name of the task\n   * @param form_data Map of data to pass to the API\n   * @param method Verb to use for request\n   */\n  public \n  task<U = any>(\n    id: string,\n    task_name: string,\n    form_data: HashMap = {},\n    method: 'post' | 'get' = 'post'\n  ): Promise<U> {\n    const query =  toQueryString(this.injectConcierge(form_data));\n    const key = `task|${id}|${task_name}|${query}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<U>((resolve, reject) => {\n        const post_data = { ...form_data, id, _task: task_name };\n        const url = `${this.route(false)}/${id}/${task_name}`;\n        let result: any;\n        const request =\n          method === 'post'\n            ? this.http.post(url, post_data)\n            : this.http.get(`${url}${query ? '?' + query : ''}`);\n        request.subscribe(\n          (d) => (result = d),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(\n              `${this._name.toLowerCase()}-task-${task_name}-failed`,\n              id\n            );\n            delete this._promises[key];\n          },\n          () => {\n            resolve(result as U);\n            this.analyticsEvent(\n              `${this._name.toLowerCase()}-task-${task_name}-success`,\n              id\n            );\n            this.timeout(key, () => delete this._promises[key], 1000);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n\n  /**\n   * V-2\n   * Perform API task for the given item ID\n   * @param id ID of the item\n   * @param task_name Name of the task\n   * @param form_data Map of data to pass to the API\n   * @param method Verb to use for request\n   */\n   public taskObsr<U = any>( \n    id: string, \n    task_name: string, \n    form_data: HashMap = {}, \n    method: 'post' | 'get' = 'post' ):Observable<any>{\n    const query =   toQueryString(this.injectConcierge(form_data));\n    let engine = false;\n    let cache = 1000;\n    const post_data = { ...form_data, id, _task: task_name };\n    const url = `${this.route(false)}/${id}/${task_name}`;\n    let result: any;\n\n    const request = method === 'post'\n      ? this.http.post(url, post_data)\n      : this.http.get(`${url}${query ? '?' + query : ''}`);\n    \n      return request;\n  }\n\n\n  /**\n   * Make put request for changes to the item with the given id\n   * @param id ID of the item being updated\n   * @param form_data New values for the item\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n    const key = `update|${id}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<T>((resolve, reject) => {\n        const query = toQueryString(this.injectConcierge(query_params));\n        const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.put(url, this.injectConcierge(form_data)).subscribe(\n          (d) => (result = this.process(d)),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n            this._promises[key] = null;\n          },\n          () => {\n            resolve(result);\n            this.set(\n              'list',\n              this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                result\n              ])\n            );\n            this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n            this._promises[key] = null;\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n\n  /**\n   * update function version -2 - returns observable instead of promise...\n   * @param id url id with respect to update api\n   * @param form_data data to be update \n   * @param should_inject_concierge common value to be set to add concierge: true to the query url and body\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n   public updateObsr(id: string, form_data: HashMap, should_inject_concierge: Boolean = false, query_params: HashMap = {}):Observable<any>{\n    const query = should_inject_concierge ? toQueryString(this.injectConcierge(query_params)) : false;\n    const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n    const body = should_inject_concierge ? this.injectConcierge(form_data) : form_data;\n    \n    return this.http.put(url, body)\n      .pipe(\n          map((d: IEngineResponse | HashMap[]) =>  this.processApiResult(d) \n        ),\n        catchError(<T>(error: any, result?: T) => {\n          console.log(error);\n          this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n          return of(error as T);\n        })\n      );\n\n  }\n\n  /**\n   * update function version -2 - returns observable instead of promise...\n   * @param form_data data to be update \n   * @param should_inject_concierge common value to be set to add concierge: true to the query url and body\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n   public uploadSpacePhotos(apiSubRoute: string, form_data: HashMap, should_inject_concierge: Boolean = false, query_params: HashMap = {}):Observable<any>{\n    const query = should_inject_concierge ? toQueryString(this.injectConcierge(query_params)) : false;\n    const url = `${this.route(query_params.engine)}/${apiSubRoute}${query ? '?' + query : ''}`;\n    const body = should_inject_concierge ? this.injectConcierge(form_data) : form_data;\n\n    const token = sessionStorage.length ? JSON.parse(sessionStorage.getItem('OAUTH.params')).access_token : '';\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n    });\n    \n  const requestOptions = { headers: headers };\n\n    // return this.httpClient.post(url, body, {\n    //       ...requestOptions \n    //   });\n\n    return this.http.post(url, body);\n\n  }\n\n  /**\n   * Make delete request for the given item\n   * @param id ID of item\n   */\n  public delete(id: string, q: HashMap = {}): Promise<void> {\n    const key = `delete|${id}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<void>((resolve, reject) => {\n        const query = toQueryString(q);\n        const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n        this.http.delete(url).subscribe(\n          (_) => null,\n          (e) => {\n            reject(e);\n            this._promises[key] = null;\n          },\n          () => {\n            this.set('list', this.removeItem(this.get('list'), { id } as any));\n            this._promises[key] = null;\n            resolve();\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * Load initial data for the service\n   */\n  protected async load(): Promise<void> {\n  }\n\n  /**\n   * Post analytics event for this service\n   * @param action Name of the action to post\n   */\n  protected analyticsEvent(action: string, label?: string) {\n    // if (this.parent && this.parent.Analytics) {\n    //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    // }\n  }\n\n  /**\n   * Convert raw API data into a valid API Object\n   * @param raw_item Raw API data\n   */\n  protected process(raw_item: HashMap): T {\n    return raw_item as T;\n  }\n\n  /**\n   * Update recorded list of items\n   * @param old_list Old list of items\n   * @param list List of updated items\n   * @param compareFn Function to compare items to remove duplicates\n   */\n  public updateList(\n    old_list: T[],\n    list: T[],\n    compareFn: (a: T, b: T) => boolean = this._compare\n  ): T[] {\n    /* istanbul ignore else */\n    if (!list || list.length === 0) {\n      return old_list;\n    }\n    const new_list: T[] = [];\n    const mixed_list = [...list, ...old_list];\n    /* istanbul ignore else */\n    if (!compareFn) {\n      compareFn = this._compare;\n    }\n    for (const item of mixed_list) {\n      const found = new_list.find((i) => compareFn(i, item));\n      /* istanbul ignore else */\n      if (!found) {\n        new_list.push(item);\n      }\n    }\n    return new_list;\n  }\n\n  /**\n   * Remove the given item from the given list\n   * @param list List of items\n   * @param item Item to remove\n   * @param compareFn Function to compare items\n   */\n  protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n    const new_list = [];\n    /* istanbul ignore else */\n    if (!compareFn) {\n      compareFn = this._compare;\n    }\n    list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n    return new_list;\n  }\n}\n","import { SelectOption } from '../../../../ui/src/lib/options/select-option';\nimport { Building } from '../organisation/building.class';\nimport { Booking } from '../bookings/booking.class';\nimport { User } from '../users';\nimport { Space } from '../spaces';\nimport { SpaceBookingRuleOptions } from '../spaces/space.class';\nimport {\n    BookingFormData,\n} from './booking.form.data';\nimport { statusFromBookings } from '../bookings/booking.utilities';\nimport { rulesForSpace } from '../bookings/space.utilities';\nimport { SpaceStatus } from '../bookings/space.types';\nimport { SpaceFeatures } from '../spaces/space.class';\nimport { HashMap } from 'libs/base/src/lib/types.utilities';\n\nexport const spaceExtraFeatureToDisplayName = (feature: SpaceFeatures) => {\n    switch (feature) {\n        case SpaceFeatures.VideoConference:\n            return 'Video conference (VC)';\n        case SpaceFeatures.ConferencePhone:\n            return 'Conference phone';\n        case SpaceFeatures.WirelessContentSharing:\n            return 'Wireless content sharing';\n        case SpaceFeatures.FlipChart:\n            return 'Flip chart';\n        case SpaceFeatures.Glassboard:\n            return 'Glassboard';\n        case SpaceFeatures.ElectronicWhiteboard:\n            return 'Whiteboard';\n        case SpaceFeatures.ConferenceRoom:\n            return 'Conference';\n        case SpaceFeatures.TeamRoom:\n            return 'Team';\n        case SpaceFeatures.PartnerOffice:\n            return 'Partner';\n        case SpaceFeatures.PhoneBooth:\n            return 'Phone booth';\n        case SpaceFeatures.NaturalLight:\n            return 'Room with window only (natural light)';\n        case SpaceFeatures.BoardRoom:\n            return 'Boardroom room style';\n        case SpaceFeatures.CocktailRoom:\n            return 'Cocktail room style';\n        case SpaceFeatures.TheatreRoom:\n            return 'Theatre room style';\n        case SpaceFeatures.WorkshopRoom:\n            return 'Workshop room style';\n        case SpaceFeatures.UShapeRoom:\n            return 'U Shape room style';\n        case SpaceFeatures.Miscellaneous:\n            return 'Miscellaneous room style'\n        case SpaceFeatures.Catering:\n            return 'Rooms with catering';\n        // TODO: add any special display handling here.\n        default:\n            return feature;\n    }\n};\n\n\nexport const instantBookOption: SelectOption<any> = {\n    value: 'instant-book',\n    display: 'Listing you can book without waiting for a host approval',\n    shortDisplay: 'Instant book'\n};\nexport const instantBookOptions: SelectOption<any>[] = [\n    instantBookOption\n];\n\nexport const mapSpaceFeaturesToSelectOption = (f: SpaceFeatures): SelectOption<any> => {\n    const display = spaceExtraFeatureToDisplayName(f);\n    return ({\n        value: f,\n        display,\n        // Useful for long text, like that of the instant-book\n        // option.\n        //\n        // We do not expect this option object to be modified\n        // at any further point before it appears on screen -\n        // although that may change in future releases.\n        shortDisplay: display\n    });\n};\n\nexport const roomEquipmentRequiredOptions: SelectOption<any>[] = [\n    SpaceFeatures.VideoConference,\n    SpaceFeatures.ConferencePhone,\n    SpaceFeatures.WirelessContentSharing,\n    SpaceFeatures.FlipChart,\n    SpaceFeatures.Glassboard,\n    SpaceFeatures.ElectronicWhiteboard\n].map(mapSpaceFeaturesToSelectOption);\n\nexport const internalRoomTypeRequiredOptions: SelectOption<any>[] = [\n    SpaceFeatures.PartnerOffice,\n    SpaceFeatures.ConferenceRoom,\n    SpaceFeatures.TeamRoom,\n    SpaceFeatures.PhoneBooth\n].map(mapSpaceFeaturesToSelectOption);\n\nexport const externalRoomTypeRequiredOptions: SelectOption<any>[] = [\n    SpaceFeatures.ConferenceRoom,\n    SpaceFeatures.TeamRoom\n].map(mapSpaceFeaturesToSelectOption);\n\nexport const roomDetailsRequired: SelectOption<any>[] = [\n    SpaceFeatures.NaturalLight,\n    SpaceFeatures.BoardRoom,\n    SpaceFeatures.CocktailRoom,\n    SpaceFeatures.TheatreRoom,\n    SpaceFeatures.WorkshopRoom,\n    SpaceFeatures.UShapeRoom,\n    SpaceFeatures.Miscellaneous\n].map(mapSpaceFeaturesToSelectOption);\n\nexport const roomCateringAvailable: SelectOption<any>[] = [\n    SpaceFeatures.Catering,\n].map(mapSpaceFeaturesToSelectOption);\n\n/**\n * Defines the reason by which spaces are filtered out / missing.\n */\nexport enum SpaceFilterReason {\n    /**\n     * Spaces were shown and not all filtered out.\n     */\n    None = 'None',\n\n    /**\n     * If room filters are applied to the set of rooms,\n     * and rooms are available if not applied by filtering.\n     */\n    Filters = 'Filters',\n\n    /**\n     * We check office rules first to determine if its been filtered.\n     */\n    OfficeRules = 'OfficeRules',\n\n    /**\n     * Fallback as the end case if no results are found.\n     */\n    DateTime = 'DateTime',\n\n    /**\n     * If room is non-bookable in the system\n     */\n    NonBookable = 'NonBookable'\n}\n\nexport interface FilteredSpaces {\n    spaces: Space[] | undefined;\n    reason: SpaceFilterReason;\n    statusMap: HashMap<SpaceStatus>;\n    specificReason?:SpaceFilterReason;\n}\n\n/**\n * Filter spaces by filters locally. TBD in the future for real API pagination.\n *\n * @param formFilters - the set of filters to apply on the list of spaces.\n * @param spaces - the list of spaces to filter\n * @param activeForm - the landing page set of filters.\n * @param buildings - the list of buildings loaded, used to retrieve building-specific booking rules.\n * @param currentUser - the current user\n */\nexport const filterSpacesByAppliedFilters = (\n    formFilters: SelectOption<any>[],\n    spaces: Space[] | undefined, // the resultshere are raw JSON Spaces, not an array of the Space class\n    activeForm: BookingFormData,\n    buildings: Building[] = [],\n    currentUser: User | undefined): FilteredSpaces => {\n    const instantBook: boolean = formFilters.some(f => f.value === instantBookOption.value);\n    const onlyCatering: boolean  = formFilters.some(f => f.value === SpaceFeatures.Catering);\n    // Drop incompatible spaces. If no filters were given, just return the array unchanged.\n    const featureFilters = formFilters.filter(filter => ![instantBookOption.value, SpaceFeatures.Catering].includes(filter.value));\n    const formFiltersEmpty = featureFilters.length === 0;\n    \n    // R--- refactor activeForm? Only after forms can handle dateTz\n    // Blocked by date time input refactor\n    const options: SpaceBookingRuleOptions = {\n        duration: activeForm.duration,\n        host: currentUser,\n        dateTz: activeForm.dateTz,\n    };\n    let rulesCount = 0;\n    let ruleReason = '';\n    let excludedByFiltersCount = 0;\n    const statusMap: HashMap<SpaceStatus> = {};\n    console.group();\n    const filteredSpaces = spaces?.map(space => space instanceof Space ? space : new Space(space)).filter(raw_space => {\n        const space = new Space(raw_space); // Construct the full fledged space\n        const building = buildings.find(b => space.zones.includes(b.id));\n        const rules = rulesForSpace({\n            time: options.dateTz.ms,\n            duration: options.duration,\n            user: options.host,\n            rules: building?.booking_rules,\n            space\n        });\n        ruleReason = rules.reason;\n        let valid = !rules.hide;\n        if (!valid) {\n            rulesCount++;\n            return false;\n        }\n        \n\n        // Check for all the form filters ( except 'catering' )\n        const hasAllFeatures = featureFilters.every(f => space.featuresArray.includes(f.value));\n        const canBook = instantBook ? space.bookable : true;\n        const matchesType = activeForm?.bookingType?.value === 'allRooms' \n                            ? true \n                            : space?.internal_or_external?.length \n                            ? space.internal_or_external === activeForm?.bookingType?.value \n                            : true;\n        valid = valid && matchesType && (formFiltersEmpty || hasAllFeatures) && canBook;\n        let hasCatering = building?.has_catering;\n        if (space?.has_catering === false) {\n            hasCatering = false;\n        }      \n        // need the room catering to override. \n        if (onlyCatering && !hasCatering) {\n            valid = false;\n            console.log('Excluded by Catering');\n        }\n\n        // count this space if the only reason it can't be shown is because one of the filters excluded it\n        if (!hasAllFeatures) {\n            valid = false;\n            console.log('Excluded by Status');\n        }\n\n        const status = statusFromBookings(\n            space.bookings.length ? space.bookings.map(b => new Booking(b)) : space.settings.bookings.map(b => new Booking(b)),\n            space.bookable && !rules.hide,\n            !rules.auto_approve,\n            activeForm.dateTz,\n            space\n        );\n\n        // only compute room availability here right now if instant book option is chosen and room still valid.\n        if (instantBook && valid) {\n            valid = status.status === SpaceStatus.Available;\n            if (!valid) console.group('Excluded by Status');\n        }\n\n        // cache space status\n        if (valid) {\n            statusMap[space.id] = status.status;\n        } else {\n            excludedByFiltersCount++;\n        }\n        console.log('Valid:', valid);\n        return valid;\n    });\n\n    console.groupEnd();\n    let reason, specificReason = SpaceFilterReason.None;\n    console.log('Spaces:', filteredSpaces?.length, excludedByFiltersCount, rulesCount, ruleReason)\n    if (filteredSpaces?.length === 0) {\n        if (excludedByFiltersCount > 0 && (!formFiltersEmpty || onlyCatering)) {\n            reason = SpaceFilterReason.Filters;\n        } else if (rulesCount > 0) {\n            reason = SpaceFilterReason.OfficeRules;\n        }\n        else {\n            reason = SpaceFilterReason.DateTime;\n        }\n\n        if (ruleReason === SpaceFilterReason.OfficeRules) {\n            specificReason = SpaceFilterReason.OfficeRules;\n        } \n    }\n\n    return { spaces: filteredSpaces, reason, statusMap, specificReason };\n};\n","import { BookingFormData } from './booking.form.data';\nimport {\n    createAction,\n    props\n} from '@ngrx/store';\nimport { Payload } from '../../../../loading/src/lib/loading.actions';;\nimport { SelectOption } from '../../../../ui/src/lib/options/select-option';\n\n\nexport const storeBookingFormData = createAction('[BookingForm] Store Form Data',\n    props<Payload<Partial<BookingFormData>>>());\n\nexport const clearBookingFormData = createAction('[BookingForm] Clear Form Data');\n\nexport const storeRoomFilters = createAction('[BookingForm] Store Room Filters',\n    props<Payload<SelectOption<any>[]>>());\n\nexport const clearRoomFilters = createAction('[BookingForm] Clear Room Filters');\n\nexport const openBookingSurvey = createAction('[BookingSurvey] Open Survey Modal');\n","import { SelectOption } from '../../../../ui/src/lib/options/select-option';\nimport { RoomQueryOptions } from '../../../../rooms/src/lib/rooms.types';\nimport { User } from '../users/user.class';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\nimport { DaysOfWeek, RecurrencePeriod } from '../recurrence/recurrence.utils';\nimport { Building } from '../organisation';\n\nexport const DEFAULT_BOOKING_DURATION = 30;\n\nexport const internalBookingTypeOption = {\n    value: 'internal',\n    display: 'Internal',\n};\n\nexport const allBookingTypeOption = {\n    value: 'allRooms',\n    display: 'All Rooms',\n};\n\nexport const bookingTypeOptions: SelectOption<string>[] = [\n    internalBookingTypeOption,\n    {\n        value: 'external',\n        display: 'External',\n    }\n];\n\nexport const defaultRoomSizeOption = {\n    value: '2',\n    display: '3-9 People',\n};\n\nexport const roomSizeOptions: SelectOption<string>[] = [\n    {\n        value: '1',\n        display: '1-2 People',\n    },\n    defaultRoomSizeOption,\n    {\n        value: '3',\n        display: '10+ People',\n    }\n];\n\nexport const roomSizeOptionsKiosk: SelectOption<string>[] = [\n   ...roomSizeOptions,\n    {\n        value: '4',\n        display: 'All Rooms',\n    },\n];\n\nexport const roomCapacityToValue = (roomSize: string): number => {\n    switch (roomSize) {\n        case '1':\n            return 1;\n        case '2':\n            return 3;\n        case '3':\n            return 10;\n        case '4':\n            return null;\n    }\n};\n\nexport const roomMaxCapacityToValue = (roomSize: string): number => {\n    switch (roomSize) {\n        case '1':\n            return 2;\n        case '2':\n            return 9;\n        default:\n            return null;\n    }\n};\n\nexport interface BookingFormData {\n    // R--- off the rails, define these \"any's\"\n    id?: string;\n    location: SelectOption<string>[];\n    dateTz: DateTZ;\n    /**\n     * Duration, in minutes.\n     */\n    duration: number;\n    bookingType: SelectOption<any>;\n    roomSize: SelectOption<any>;\n    selectedRoom?: any;\n    organiser?: SelectOption<string>;\n    title?: string;\n    attendees?: any[];\n    code?: string;\n    notes?: string;\n    head_count?: number;\n    creator?: User;\n    company?: any[];\n    //Recurrence fields\n    recurrence_period?: RecurrencePeriod;\n    recurrence_interval?: number;\n    recurrence_endTz?: DateTZ;\n    recurrence_count?: number;\n    recurrence_starts?: Array<DateTZ>;\n    recurrence_exceptions?: Array<number>; //SHOULD BE DATETZ\n    recurrence_days?: Array<DaysOfWeek>;\n    timezone?: string;\n    offset?: number;\n    buildings?: Building[];\n}\n\n/**\n * Converts form data into API query parameters.\n */\nexport const roomFormDataToQuery = (\n    data: BookingFormData\n): RoomQueryOptions => {\n    // remove all buildings chip from query\n    const filteredLocationIds = data?.location\n        .filter((l) => l.groupChild)\n        .map((l) => l.value)\n        .join(',');\n    return {\n        dateTz: data?.dateTz,\n        duration: data?.duration,\n        locations: filteredLocationIds,\n        capacity: roomCapacityToValue(data?.roomSize?.value),\n        capacity_max: roomMaxCapacityToValue(data?.roomSize?.value),\n    };\n};\n","import { BookingFormState } from './booking.form.types';\nimport {\n    DEFAULT_BOOKING_DURATION,\n    defaultRoomSizeOption,\n    internalBookingTypeOption\n} from './booking.form.data';\nimport { DateNow } from '@mckinsey-converge/date-tz';\n\nconst now = DateNow(new Date())\n\nexport const defaultTestBookingForm = (): BookingFormState => ({\n    activeForm: {\n        dateTz: now,\n        duration: 2 * DEFAULT_BOOKING_DURATION,\n        location: [],\n        bookingType: internalBookingTypeOption,\n        roomSize: defaultRoomSizeOption\n    },\n    activeFormFilters: []\n});\n","import { createSelector } from '@ngrx/store';\nimport {\n    RoomStoreState\n}  from '../../../../rooms/src/lib/rooms.types';\nimport {\n    loadLaterThatDayResults,\n    loadNextDayResults,\n    loadRoomsForResults,\n    roomStateSelector,\n    loadByIdResults,\n    loadDiffSizeResults,\n    loadRoomsForResultsMap\n} from '../../../../rooms/src/lib/rooms.actions';\nimport {\n    loadHomepageBookingsResults,\n    loadUpcomingBookingsResults,\n    loadPastBookingsResults,\n    loadCancelledBookingsResults,\n    loadBookingByIdResults,\n    bookingStateSelector\n} from '../../../../bookings/src/lib/bookings.actions';\nimport { Building } from '../organisation/building.class';\nimport { BuildingStoreState } from '../../../../buildings/src/lib/buildings.types';\nimport { selectLoadBuildingsSuccess } from '../../../../buildings/src/lib/buildings.actions';\nimport { Space } from '../spaces/space.class';\nimport { User } from '../users/user.class';\nimport { selectCurrentUser } from '../../../../user/src/lib/user.actions';\nimport { UserStoreState } from '../../../../user/src/lib/user.types';\nimport { LoadingModel } from '../../../../loading/src/lib/loading.model';\nimport { SelectOption } from '../../../../ui/src/lib/options/select-option';\n\nimport {\n    SpaceFilterReason,\n    filterSpacesByAppliedFilters,\n    FilteredSpaces\n} from './booking-filter.utils';\nimport {\n    BookingFormData,\n    internalBookingTypeOption,\n} from './booking.form.data';\nimport {\n    BookingFormState,\n    BookingStoreState,\n} from './booking.form.types';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\n\n\n\nexport const selectBookingFormsData =\n    (state: BookingStoreState | RoomStoreState | BuildingStoreState | UserStoreState) =>\n        (state as any).bookingForm as BookingFormState;\n\nexport const selectActiveForm = createSelector(selectBookingFormsData, state => {\n    // Recreate because serialized form dateTz doesn't have DateTZ class methods\n    if (!state.activeForm?.dateTz) {\n        return state.activeForm\n    }\n    const { date, is_local_tz, building_tz} = state.activeForm?.dateTz;\n    return {\n        ...state.activeForm,\n        dateTz: new DateTZ({ date: date.valueOf(), is_local_tz, building_tz }),\n    }\n});\n\nexport const selectBookingType = createSelector(selectActiveForm,\n    (form) => form?.bookingType);\n\nexport const selectBookingLocations = createSelector(selectActiveForm,\n    (form) => (form?.location || []).filter(f => !f.groupHeader));\n\nexport const selectIsInternal = createSelector(selectBookingType,\n    (type) => type?.value === internalBookingTypeOption.value);\n\nexport const selectFormFilters = createSelector(selectBookingFormsData,\n    (state) => state.activeFormFilters || []);\n\nconst selectRoomResultsFromState = createSelector(roomStateSelector,\n    loadRoomsForResults.selectors.model);\n    \nconst selectRoomResultsFromState_map = createSelector(roomStateSelector,\n    loadRoomsForResultsMap.selectors.model);\n\nconst selectLaterThatDayResultsFromState = createSelector(roomStateSelector,\n    loadLaterThatDayResults.selectors.model);\nconst selectNextDayResultsFromState = createSelector(roomStateSelector,\n    loadNextDayResults.selectors.model);\nconst selectByIdResultsFromState = createSelector(roomStateSelector,\n    loadByIdResults.selectors.model);\nconst selectDiffSizeResultsFromState = createSelector(roomStateSelector,\n    loadDiffSizeResults.selectors.model);\n\nexport const selectHomepageBookingsResultsFromState = createSelector(bookingStateSelector,\n        loadHomepageBookingsResults.selectors.model);\nexport const selectUpcomingBookingsResultsFromState = createSelector(bookingStateSelector,\n    loadUpcomingBookingsResults.selectors.model);\nexport const selectPastBookingsResultsFromState = createSelector(bookingStateSelector,\n        loadPastBookingsResults.selectors.model);\nexport const selectCancelledBookingsResultsFromState = createSelector(bookingStateSelector,\n        loadCancelledBookingsResults.selectors.model);\nexport const selectBookingByIdResultsFromState = createSelector(bookingStateSelector,\n        loadBookingByIdResults.selectors.model);\n\n/**\n * Wraps {@link filterSpacesByAppliedFilters} with {@link LoadingModel} interop.\n * This will only filter data if there is data to filter, and returns a success {@link LoadingModel}.\n */\nconst filterSpacesByAppliedFiltersIfSuccess = (\n    results: LoadingModel<Space[]>,\n    formFilters: SelectOption<any>[],\n    activeForm: BookingFormData,\n    buildings: Building[] | undefined,\n    currentUser: User | undefined): LoadingModel<FilteredSpaces> => {\n    const data = results.optionalSuccess;\n\n    // don't filter model if no success found\n    return !activeForm ? results.mutate({\n        spaces: data, // the result here is a raw JSON Space, not the Space class\n        reason: SpaceFilterReason.None,\n        statusMap: {}\n    }) : results.mutate(\n        filterSpacesByAppliedFilters(formFilters, data, activeForm, buildings || activeForm.buildings, currentUser));\n};\n\nexport const selectFilteredResults = createSelector(selectRoomResultsFromState,\n    selectFormFilters,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    filterSpacesByAppliedFiltersIfSuccess);\n\nexport const selectMapFilteredResults = createSelector(selectRoomResultsFromState_map,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    (results, activeForm, buildings, currentUser) => filterSpacesByAppliedFiltersIfSuccess(results, [], activeForm, buildings, currentUser));\n\nexport const selectFilteredLaterDayResults = createSelector(selectLaterThatDayResultsFromState,\n    selectFormFilters,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    filterSpacesByAppliedFiltersIfSuccess);\n\nexport const selectFilteredNextDayResults = createSelector(selectNextDayResultsFromState,\n    selectFormFilters,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    filterSpacesByAppliedFiltersIfSuccess);\n\n    \nexport const selectFilteredByIdResults = createSelector(selectByIdResultsFromState,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    (results, activeForm, buildings, currentUser) => filterSpacesByAppliedFiltersIfSuccess(results, [], activeForm, buildings, currentUser));\n\nexport const selectFilteredDiffSizeResults = createSelector(selectDiffSizeResultsFromState,\n    selectFormFilters,\n    selectActiveForm,\n    selectLoadBuildingsSuccess,\n    selectCurrentUser,\n    filterSpacesByAppliedFiltersIfSuccess);\n    \n/**\n * Maps selected options by loaded buildings.\n */\nexport const selectSelectedBuildingOptions = createSelector(\n    selectBookingLocations,\n    selectLoadBuildingsSuccess,\n    (locations, buildings) => (locations\n        .map(l => buildings?.find(b => b.id === l.value))\n        .filter(f => !!f) as Building[])\n);\n\n","import { Building, BuildingCity } from '../organisation/building.class';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { Space } from '../spaces/space.class';\nimport { SpacesService } from '../spaces/spaces.service';\nimport {\n    timezoneDisplay,\n    timezoneNameToDate,\n    unique,\n    ImageDirective,\n} from '@mckinsey-converge/base';\nimport { SelectOption } from '../../../../ui/src/lib/options/select-option';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n/**\n * If more than 3 are selected, we truncate location display.\n */\nconst MAX_ABBREV_LOCATIONS = 3;\n\nexport const mapBuildingToSelectOption = (\n    city: string,\n    building: Building\n): SelectOption<any> => ({\n    display: `${building.name} ${timezoneDisplay(\n        timezoneNameToDate(building.timezone)\n    )}`,\n    dropdownOverride: `${building.code}-${building.name}, ${building.address}`,\n    value: building.id,\n    groupId: city,\n    groupChild: true,\n    shortDisplay: `${building.name} ${timezoneDisplay(\n        timezoneNameToDate(building.timezone)\n    )}`,\n    meta: { building, city },\n});\n\nexport const mapCityToAllSelectOption = (\n    city: BuildingCity\n): SelectOption<any> => ({\n    display: `${city.name} (All Offices) ${timezoneDisplay(\n        timezoneNameToDate(city.timezone)\n    )}`,\n    value: city.name,\n    groupHeader: true,\n    groupId: city.name,\n    shortDisplay: `${city.name} (All Offices) ${timezoneDisplay(\n        timezoneNameToDate(city.timezone)\n    )}`,\n    meta: { city },\n});\n\n/**\n * Flattens a map of {@link BuildingCity} to {@link Building} array into a list of {@link SelectOption}.\n * @param grouped The grouping\n */\nexport const flattenDisplayOffices = (\n    grouped: Map<BuildingCity, Building[]>\n) => {\n    const options: SelectOption<any>[] = [];\n    grouped.forEach((value, key) => {\n        options.push(mapCityToAllSelectOption(key));\n        value.forEach((b) =>\n            options.push(mapBuildingToSelectOption(key.name, b))\n        );\n    });\n    return options;\n};\n\n/**\n * This method will either add or remove a selected option from the selectedOptions list based on\n * these conditions:\n * 1. If the option EXISTS in the list AND is a groupHeader, de-select all of its children.\n * 2. If the option EXISTS in the list AND is a groupChild, remove it and its associated header from the list.\n * 3. If the option does NOT EXIST in the list AND is a groupHeader, select all other children.\n * 4. If the option does NOT EXIST in the list AND is a groupChild, add it to the list.\n *\n * Special note regarding item 4:\n * 4a. If that selection completes the children selection, select its associated header as well.\n */\nexport const toggleSelectedByGroup = (\n    options: SelectOption<any>[],\n    selectedOptions: SelectOption<any>[],\n    option: SelectOption<any>\n) => {\n    if (selectedOptions.find((s) => s.value === option.value)) {\n        return selectedOptions.filter((s) => {\n            let filter = s.value !== option.value;\n            // if group header, also remove any option that is the child of it.\n            if (option.groupHeader) {\n                filter =\n                    filter &&\n                    (!s.groupChild ||\n                        (s.groupChild && s.groupId !== option.groupId));\n            } else if (option.groupChild) {\n                // if child removing, remove the associated header.\n                filter =\n                    filter &&\n                    (!s.groupHeader ||\n                        (s.groupHeader && s.groupId !== option.groupId));\n            }\n            return filter;\n        });\n    }\n    // option does NOT EXIST\n    // if adding header, add the other children to the selected list, ensuring no dupes.\n    if (option.groupHeader) {\n        const toSelect = options.filter(\n            (v) =>\n                v.groupChild &&\n                v.groupId === option.value &&\n                !selectedOptions.find((selected) => selected.value === v.value)\n        );\n        return [...selectedOptions, option, ...toSelect];\n    }\n    // add group child, add the group header if all satisfied\n    const newGroup = [...selectedOptions, option];\n\n    // check if we have selected all children from options by filtering down by city and checking if\n    // they're in the selected options list.\n    const remainingChildrenInGroup = options.filter(\n        (o) =>\n            o.groupChild &&\n            o.groupId === option.groupId &&\n            !newGroup.find((ng) => ng.value === o.value)\n    );\n    // if we dont have remaining children, add the group\n    if (remainingChildrenInGroup.length === 0) {\n        return [\n            ...newGroup,\n            options.find((o) => o.groupHeader && o.groupId === option.groupId),\n        ];\n    }\n    return newGroup;\n};\n\n/**\n * If the list of locations are larger than {@link MAX_ABBREV_LOCATIONS}, then truncate\n * and display the remaining count.\n */\nexport const truncateLocationList = (\n    locations: readonly SelectOption<any>[]\n): string => {\n    // comma separate the locations\n    let truncatedLocations = [...locations];\n    const shouldTruncate = locations.length > MAX_ABBREV_LOCATIONS;\n    if (shouldTruncate) {\n        truncatedLocations = truncatedLocations.splice(0, MAX_ABBREV_LOCATIONS);\n    }\n    let display = truncatedLocations\n        .map((l) => l.shortDisplay || l.display)\n        .join(', ');\n    if (shouldTruncate) {\n        display += `...(${locations.length})`;\n    }\n    return display;\n};\n\nexport const mapBuildingLevelToOption = (\n    level?: BuildingLevel\n): SelectOption<any> =>\n    level\n        ? {\n              value: level.id,\n              display: level.name,\n          }\n        : undefined;\n\n/**\n * Returns all levels included with the building, deduped.\n * @param buildings\n */\nexport const flattenBuildingsWithLevels = (buildings: Building[]) => {\n    const flattenedLevels = unique(\n        buildings.reduce((next: BuildingLevel[], building: Building) => {\n            next.push(...building.levels);\n            return next;\n        }, []),\n        'id'\n    );\n    return {\n        flattenedLevels,\n        buildings,\n    };\n};\n\n/** Gets route to image placeholder if room image isn't found */\n\nexport const placeholderRoute = (num: number): string => {\n    let index: number;\n    if (num <= 3) {\n        index = num;\n    } else if (num % 3 === 0) {\n        index = 3;\n    } else {\n        index = 1;\n    }\n    return `assets/img/rooms/placeholder-${index}.png`;\n};\n\n/**\n * Method takes the rootFolderURL and fileSlug to create an array of three images\n * that should exist.  If a room image exists, it replaces the placehoder image.\n */\nexport const setupRoomImages = (\n    componentReference: ImageDirective,\n    image_positions: number[],\n    rootFolderURL: string,\n    fileSlug: string,\n    imagesLoaded: boolean = false\n): void => {\n    let foundImages: any[] = image_positions.map((i) =>\n        i ? { path: placeholderRoute(i) } : false\n    );\n    image_positions.forEach((n) => {\n        const desiredImageName = `${rootFolderURL}${fileSlug}-part-${n}.png`;\n        const desiredImage = location.pathname.includes('concierge') ?  `${location.origin}/staff/${desiredImageName}` : desiredImageName;\n        if (!imagesLoaded) {\n            const tester = new Image();\n            tester.onload = () => {\n                // Will never run on unit test\n                foundImages[n - 1] = { path: desiredImage };\n                componentReference.foundImages = [...foundImages.slice()];\n                componentReference?.loadImages && componentReference?.loadImages.next([...foundImages.slice()]);\n            };\n            tester.src = desiredImage;\n        }\n\n        // Force valid image output on unit test\n        if (imagesLoaded) {\n            foundImages[n - 1] = { path: desiredImage };\n            componentReference.foundImages = foundImages.slice();\n        }\n    });\n};\n\nexport const bookingStatusDetails = (booking: Booking) => {\n    const now = DateNow(new Date());\n    let image = '';\n    let text = '';\n    let title = '';\n\n    if (booking?.status) {\n        const status = now > booking.endDateTz ? 'expired' : booking.status;\n        switch (status) {\n            case 'unavailable':\n                image = 'assets/icon/booking_cancelled.svg';\n                title = 'Unavailable';\n                text = 'Unavailable';\n                break;\n            case 'declined':\n                image = 'assets/icon/booking_cancelled.svg';\n                title = 'Cancelled';\n                text = 'Cancelled';\n                break;\n            case 'cancelled':\n                image = 'assets/icon/booking_cancelled.svg';\n                title = 'Cancelled';\n                text = 'Cancelled';\n                break;\n            case 'expired':\n                image = 'assets/icon/booking_expired.svg';\n                title = 'Expired';\n                text = 'Expired';\n                break;\n            case 'tentative':\n                image = 'assets/icon/booking_pending.svg';\n                title = 'Requested';\n                text = 'Pending';\n                break;\n            case 'accepted':\n                image = 'assets/icon/booking_confirmed.svg';\n                title = 'Confirmed';\n                text = 'Confirmed';\n                break;\n            case 'approved':\n                image = 'assets/icon/booking_confirmed.svg';\n                title = 'Confirmed';\n                text = 'Confirmed';\n                break;\n            default:\n                // TODO\n                image = 'assets/icon/booking_expired.svg';\n                title = 'Expired';\n                text = 'Expired';\n                break;\n        }\n    }\n    return { text, title, image };\n};\n\nexport const roomHasCateringHours = (building: Building, space: Space) => {\n    let hasCatering = building\n        ? building.has_catering && building.catering_hours\n        : false;\n    // Room catering status as false overrides building status\n    if (space?.has_catering === false) {\n        hasCatering = false;\n    }\n    return hasCatering;\n};\n\nexport const cateringAllowed = (booking: Booking, building: Building) => {\n    const status = bookingStatusDetails(booking);\n    const disallowedStatus = ['declined', 'cancelled', 'expired'].includes(\n        status.text\n    );\n    const opens = building?.catering_hours?.start;\n    const closed = building?.catering_hours?.end;\n\n    if (disallowedStatus) {\n        return false;\n    }\n\n    if (typeof opens === 'undefined' || typeof closed === 'undefined') {\n        return false;\n    }\n\n    // Catering time could be a decimal so convert to a date\n    const openMinutes = opens * 60;\n    const closeMinutes = closed * 60;\n\n    const startOfDay = booking.startDateTz.startOfValue('day');\n    const cateringOpenTime = startOfDay.addValue({ minutes: openMinutes });\n    const cateringCloseTime = startOfDay.addValue({ minutes: closeMinutes });\n\n    if (\n        cateringOpenTime.ms <= booking.startDateTz.ms ||\n        cateringCloseTime.ms > booking.startDateTz.ms\n    ) {\n        // Booking ends before catering opens\n        if (booking.endDateTz.ms <= cateringOpenTime.ms) {\n            return false;\n        }\n        // Booking starts after catering closes\n        if (booking.startDateTz.ms > cateringCloseTime.ms) {\n            return false;\n        }\n\n        // Start time is OK\n        if (booking.startDateTz.ms > DateNow(new Date()).ms) {\n            // Due to COVID, no orders are available once a meeting begins.\n            return true;\n        }\n    }\n\n    return false;\n};\n\nexport const checkCollisions = (\n    service: SpacesService,\n    booking: Booking\n): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n        service\n            .available(\n                {\n                    room_ids: booking.space.id,\n                    dateTz: booking.startDateTz,\n                    duration: booking.duration,\n                    setup: booking.setup[booking.space.email],\n                    breakdown: booking.breakdown[booking.space.email],\n                    hide_bookings: false,\n                },\n                null,\n                false\n            )\n            .then(\n                (list) => {\n                    const space = list.length ? list[0] : null;\n                    if (space) {\n                        if (!space.bookable) return reject('Has conflict');\n                        const setup = booking?.setup[space?.email] || 0;\n                        const breakdown = booking?.breakdown[space?.email] || 0;\n                        const start_time = booking?.startDateTz.seconds - setup;\n                        const end_time = booking.endDateTz.seconds + breakdown;\n\n                        const bookings = space.settings.bookings;\n                        console.log('Bookings:', bookings);\n                        // Compare the existing bookings to see if any truely conflict.\n                        if (bookings.length) {\n                            const has_conflict = bookings.find(bkn => {\n                                const b_setup = bkn.setup[space.email] || 0;\n                                const b_breakdown = bkn.setup[space.email] || 0;\n                                const start = (bkn.start_epoch || bkn.start) - b_setup;\n                                const end = (bkn.end_epoch || bkn.end) + b_breakdown;\n                                return (\n                                    (end_time > start && end_time <= end) || // Booking ends during the meeting\n                                    (start_time >= start && start_time < end) || // Booking starts during a meeting\n                                    (start_time <= start && end_time >= end) // Booking overlaps entire meeting\n                                ) && bkn.id !== booking.id\n\n                            });\n                            // Conflicts found, reject\n                            if (has_conflict) return reject('has booking conflict');\n                        }\n                        return resolve(space.bookable);\n                    }\n                    reject('space not found');\n                },\n                () => reject('available error')\n            );\n    });\n};\n\nexport const getStatusErrorMessage = (status?: number) => {\n    let msg = '';\n    switch (status) {\n        case 403:\n            msg = 'Your do not have permission to update this booking.';\n            break;\n        case 409:\n            msg = 'Sorry, your booking time conflicts with another booking.';\n            break;\n        default:\n            msg = 'Your booking failed to update, please try again';\n    }\n    return msg;\n};\n","export * from './room-results/room-results.viewmodel'\nexport * from './booking-filter.utils'\nexport * from './booking.form.actions'\nexport * from './booking.form.data'\nexport * from './booking.form.spec-helpers'\nexport * from './booking.form.types'\nexport * from './booking.selectors'\nexport * from './booking.utils'","import { Space } from '../../spaces/space.class';\nimport { BuildingLevel } from '../../organisation/level.class';\nimport { Building } from '../../organisation/building.class';\n\nexport class RoomResultsViewModel {\n\n    public levelDisplay: string;\n    public title: string;\n    public office: string;\n    public capacity: string;\n\n    constructor(public space: Space,\n                public level?: BuildingLevel,\n                public building?: Building) {\n\n        this.levelDisplay = `Level ${this.space?.level?.short_name}`;\n        this.title = this.space.local_name;\n        this.office = this.building ? `(${this.building?.code}) ${this.building?.name}` : '';\n        this.capacity = `Capacity: ${this.space.capacity} people`;\n    }\n}\n\n/**\n * For each result from results, we find its level and building from the lists.\n */\nexport const mapResultsToViewModels = (results: Space[],\n                                       flattenedLevels: BuildingLevel[],\n                                       buildings: Building[]): RoomResultsViewModel[] =>\n    results.map((r: Space) => {\n        const level = flattenedLevels.find(l => r.zones.includes(l.id));\n        const building = buildings.find(b => r.zones.includes(b.id));\n        return new RoomResultsViewModel(\n            r,\n            level,\n            building\n        );\n    });\n","import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of, Observable } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { BaseClass } from '@mckinsey-converge/base';\nimport { replaceBookings, timePeriodsIntersect } from './booking.utilities';\nimport { SpacesService } from '../spaces/spaces.service';\nimport { Booking } from '../bookings/booking.class';\nimport { Space } from '../spaces/space.class';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { OrganisationService } from '../organisation/organisation.service';\n\nexport type BookingType =\n    | 'internal'\n    | 'client'\n    | 'external'\n    | 'setup'\n    | 'training'\n    | 'interview'\n    | 'declined';\n\nexport interface BookingFilters {\n    /** List of zone ids to get bookings for */\n    zone_ids?: string[];\n    space_emails?: string[];\n    hide_type?: BookingType[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingStateService extends BaseClass {\n    /** List of bookings */\n    private _poll = new BehaviorSubject<boolean>(false);\n    /** List of bookings */\n    private _long_poll = new BehaviorSubject<'month' | ''>('');\n    private _long_poll_week = new BehaviorSubject<'week' | ''>('');\n    /** List of bookings */\n    private _bookings = new BehaviorSubject<Booking[]>([]);\n    /** List of meeting count per date */\n    public _noOfMeetings = new BehaviorSubject<{}>({});\n    /** Filter details for bookings */\n    private _filters = new BehaviorSubject<BookingFilters>({});\n    /** Currently active date */\n    private _dateTz = new BehaviorSubject<DateTZ>(DateNow(new Date()));\n    /** Currently displayed zone */\n    private _zone = new BehaviorSubject<string>(' ');\n    /** Whether booking data is being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Observable for filter and booking list changes */\n    private _state = combineLatest(\n        this._bookings,\n        this._filters,\n        this._dateTz,\n        this._zone\n    );\n\n    /** Observable for list of bookings */\n    public readonly bookings = this._bookings.asObservable();\n    /** Observable for active date */\n    public readonly dateTz = this._dateTz.asObservable();\n    /** Observable for active zone */ // R-- zone was this._date.asObservable(); this looks like a mistake but it exists from the beginning of time\n    public readonly zone = this._dateTz.asObservable();\n    /** Observable for loading state of bookings */\n    public readonly loading = this._loading.asObservable();\n\n    public get booking_date() {\n        // When this class is initialized this._dateTz is local timezone\n        return this._dateTz.value;\n    }\n\n    public get timezone() {\n        return localStorage.getItem('CONCIERGE.timezone');\n    }\n\n    /** Obsevable for filtered list of bookings */\n    public readonly filtered = this._state.pipe(\n        map((state) => {\n            const bdTz = this.timezone\n                ? new DateTZ({\n                      date: this.booking_date.ms,\n                      is_local_tz: false,\n                      building_tz: this.timezone,\n                  })\n                : this.booking_date;\n            const startTz = bdTz.startOfValue('day');\n            const endTz = startTz.addValue({}).endOfValue('day');\n            return this.filterBookings(startTz, endTz);\n        }),\n        shareReplay(1)\n    );\n\n    /** Obsevable for filtered list of bookings of the active week */\n    public readonly filtered_week = this._state.pipe(\n        map(() => {\n            // Tested to be valid in building time now.\n            const bd = this.timezone\n            ? new DateTZ({\n                  date: this.booking_date.ms,\n                  is_local_tz: false,\n                  building_tz: this.timezone,\n              })\n            : this.booking_date;\n            const start = bd.startOfValue('week').startOfValue('day');\n            const end = this.getEndOfWeek(bd);\n            return this.filterBookings(start, end);\n        })\n    );\n\n    /** Obsevable for filtered list of bookings for active month */\n    public readonly filtered_month = this._state.pipe(\n        map(() => {\n            const start = this.booking_date.startOfValue('month');\n            const end = this.booking_date.endOfValue('month');\n            return this.filterBookings(start, end);\n        })\n    );\n\n    /** Active filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private ngZone: NgZone,\n    ) {\n        super();\n\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            // Just to get the timezone correct\n            this._dateTz.next(\n                new DateTZ({\n                    date: this._dateTz.value.ms,\n                    is_local_tz: false,\n                    building_tz: this._org.building?.timezone,\n                })\n            );\n        });\n\n        /** Generate observable for updating bookings */\n        const search = combineLatest(this._poll, this._zone, this._dateTz).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap(() => {\n                const fzone = this._zone.getValue();\n                if (!fzone) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = this.booking_date.startOfValue('day');\n                const end = start.endOfValue('day');\n                return this._spaces.queryBooking({\n                    zone_ids: fzone,\n                    available_from: start.seconds,\n                    available_to: end.seconds,\n                });\n            }),\n            catchError(() => of([]))\n        );\n\n        const search_long_week = combineLatest(\n            this._long_poll_week,\n            this._zone,\n            this._dateTz\n        ).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap((props) => {\n                const type = props[0];\n                const fzone = props[1];\n                const dateTz = props[2];\n                if (!fzone) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                return this.querySpace(type, fzone, dateTz, false);\n            }),\n            catchError((e) => { \n                return of([]);\n             })\n        );\n\n        /** Subscribe to update observable */\n        search.subscribe((space_list) => {\n            this.processBookings(space_list);\n            this._loading.next(false);\n        });\n        search_long_week.subscribe((space_list) => {\n            this.processBookings(space_list, this._long_poll_week.getValue() as any);\n            this._loading.next(false);\n        });\n    }\n\n    /**\n     * Function to build\n     */\n    private buildSpaceLongQuery(dailyCount: boolean = false): Observable<any> {\n        return combineLatest(\n            this._long_poll,\n            this._zone,\n            this._dateTz\n        ).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap((props) => {\n                const type = props[0];\n                const fzone = dailyCount ? this._org.building.id : props[1];\n                const dateTz = props[2];\n                if (!fzone) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                return this.querySpace(type, fzone, dateTz, dailyCount);\n            }),\n            catchError((e) => { \n                return of([]);\n             })\n        );\n    }\n\n    private querySpace(type: string, fzone: string, dateTz: DateTZ, dailyCount: boolean = false) : Observable<Space[]> | Observable<any>{\n        const start = () => {\n            const s = dateTz;\n            if (type === 'week') {\n                return s.startOfValue('week');\n            } else {\n                return s.startOfValue('month');\n            }\n        };\n\n        const end = () => {\n            const e = start();\n            if (type === 'week') {\n                /**\n                 *  To Do: date-tz.class.ts endOfValue subtracts 1 day from end of week for 7 days a week type which returns Friday instead of Saturday\n                 *  below is the adjustment -\n                 */\n                return e.addValue({ days: 1 }).endOfValue('week');\n            } else {\n                return e.endOfValue('month');\n            }\n            /**\n             * R--- when testing March 2022 London offices, the month is an hour short.\n             * Is this a Luxon bug or London DST?\n             */\n        };\n\n        // dates here are ok\n        return this._spaces.queryBooking({\n            zone_ids: fzone,\n            available_from: start().seconds,\n            available_to: end().seconds,\n            ...(dailyCount) ? { daily_count: true } : ''\n        });\n    }\n\n\n    public getDailyMeetingCount() : void {\n        this._long_poll.next('month');\n        this.buildSpaceLongQuery(true).subscribe((counts) => {\n            this._noOfMeetings.next(counts);\n            this._loading.next(false);\n        });\n    }\n\n    /**\n     * Update the booking filters\n     * @param details\n     */\n    public setFilters(details: BookingFilters) {\n        this._filters.next(details);\n    }\n\n    /**\n     * Update the booking date\n     * @param details\n     */\n    public setDate(dateTz: DateTZ) {\n        this._dateTz.next(dateTz);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setZone(zone: string) {\n        this._zone.next(zone);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPolling(delay: number = 30 * 1000) {\n        this._poll.next(true);\n        this.ngZone.runOutsideAngular(() => {\n            this.interval('polling', () => this._poll.next(true), delay);\n        });\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingWeek(delay: number = 4 * 30 * 1000 ) {\n        this._long_poll_week.next('week');\n        this.ngZone.runOutsideAngular(() => {\n            this.interval(\n                'polling_long',\n                () => this._long_poll_week.next('week'),\n                delay\n            );\n        });\n    }\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingEveryFiveMin(delay: number =  60 * 1000) {\n        this._poll.next(true);\n        this.ngZone.runOutsideAngular(() => {\n            this.interval('polling', () => this._poll.next(true), delay);\n        });\n    }\n    \n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingMonth(delay: number = 5 * 60 * 1000) {\n        this._long_poll.next('month');\n        this.ngZone.runOutsideAngular(() => {\n            this.interval(\n                'polling_long',\n                () => this._long_poll.next('month'),\n                delay\n            );\n        });\n    }\n\n\n    /**\n     * Stop polling to update bookings;\n     */\n    public stopPolling() {\n        this._poll.next(false);\n        this.clearInterval('polling');\n        this._long_poll.next('');\n        this.clearInterval('polling_long');\n    }\n\n    /**\n     * Add booking to bookings listing\n     * @param booking\n     */\n    public add(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Update booking in the bookings list\n     * @param booking\n     */\n    public replace(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings\n            .filter(\n                (bkn) =>\n                    bkn.icaluid !== booking.icaluid && bkn.id !== booking.id\n            )\n            .concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Remove booking in the bookings list\n     * @param booking\n     */\n    public remove(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.filter(\n            (bkn) => bkn.icaluid !== booking.icaluid\n        );\n        this._bookings.next(new_bookings);\n    }\n\n    public attentToDelete(\n        booking: Booking,\n        action: 'series' | 'booking' = 'booking',\n        undo: boolean = false\n    ) {\n        const bookings = this._bookings.getValue();\n        const attempted_to_delete = ((action) => {\n            return (bkg: Booking) => {\n                switch (action) {\n                    case 'booking': {\n                        const booking_master = bookings.find(\n                            (bkn) => bkn.icaluid === booking.icaluid\n                        );\n                        if (!booking_master) return false;\n                        return bkg.id === booking.id;\n                    }\n                    case 'series': {\n                        const booking_master = bookings.find(\n                            (bkg) =>\n                                bkg.id ===\n                                (booking.recurrence_type === 'occurrence'\n                                    ? booking.recurrence_master_id\n                                    : booking.id)\n                        );\n                        if (!booking_master) return false;\n                        return (\n                            booking_master.id === bkg.id ||\n                            bkg.recurrence_master_id === booking_master.id\n                        );\n                    }\n                    default:\n                        false;\n                }\n            };\n        })(action);\n\n        const new_bookings = [...bookings].map((bkg) => {\n            if (!undo && attempted_to_delete(bkg)) {\n                bkg.attempted_to_delete = action;\n            }\n\n            if (undo && attempted_to_delete(bkg)) {\n                bkg.attempted_to_delete = null;\n            }\n\n            return bkg;\n        });\n\n        this._bookings.next(new_bookings);\n    }\n\n    private processBookings(\n        space_list: Space[],\n        period: 'day' | 'week' | 'month' = 'day'\n    ) {\n        const start = () => {\n            switch (period) {\n                case 'month':\n                    return this.booking_date.startOfValue('month');\n                case 'week':\n                    return this.booking_date.startOfValue('week');\n                default:\n                    return this.booking_date.startOfValue('day');\n            }\n        };\n        const end = () => {\n            const s = start();\n            switch (period) {\n                case 'month':\n                    return s.endOfValue('month');\n                case 'week':\n                    return s.endOfValue('week');\n                default:\n                    return s.endOfValue('day');\n            }\n        };\n\n        let bookings = this._bookings.getValue();\n        space_list.forEach((space) => {\n            return (bookings = replaceBookings(\n                bookings,\n                space.bookings.map((bkn) => new Booking(bkn)),\n                {\n                    room_email: space.email,\n                    fromTz: start(),\n                    toTz: end(),\n                }\n            ));\n        });\n        this._bookings.next(bookings);\n    }\n\n    private filterBookings(startTz: DateTZ, endTz: DateTZ) {\n        const filters = this._filters.getValue();\n        const bookings = this._bookings.getValue();\n        const fzone = this._zone.getValue();\n        return bookings.filter((bkn) => {\n            const intersects = timePeriodsIntersect(\n                startTz.ms,\n                endTz.ms,\n                bkn.startDateTz.ms,\n                bkn.endDateTz.ms\n            );\n            const in_zone = bkn.room.zones.includes(fzone);\n            const has_space =\n                !filters.space_emails?.length ||\n                filters.space_emails.includes(bkn.room.email);\n            const in_zones =\n                !filters.zone_ids?.length ||\n                !!bkn.room.zones.find((zone) =>\n                    filters.zone_ids.includes(zone)\n                );\n            const type = bkn.declined ? 'declined' : bkn.getType();\n\n            const show =\n                !filters.hide_type?.length ||\n                !filters.hide_type.includes(type as any);\n            return intersects && has_space && in_zone && in_zones && show;\n        });\n    }\n\n    /**If Sunday add one day to get Saturday as end of week */\n    private getEndOfWeek(date: DateTZ): DateTZ {\n        return date.dateWeekday === 7\n            ? date.addValue({ days: 1 }).endOfValue('week').endOfValue('day')\n            : date.endOfValue('week').endOfValue('day');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { CateringOrder } from '../catering';\nimport { User } from '../users';\nimport {\n    flatten,\n    HashMap,\n    humaniseDuration,\n    shorterLocalDateFormatString,\n    toTitleCase,\n    unique\n} from '@mckinsey-converge/base';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\nimport {\n    BookingNote,\n} from './booking.types';\nimport { convertLocalTimestampToTimezonedDateTz, DateNow, DateTZ, getTimezoneOffsetString } from '@mckinsey-converge/date-tz';\nimport { DaysOfWeek, getLastDateFromList, handleRecurrenceFields, RecurrencePeriod } from '../recurrence/recurrence.utils';\nimport { findSpace } from '../spaces';\nimport { DateTime } from 'luxon';\n\n\nexport interface IBookingQueryOptions {\n    /** booking ID */\n    id?: string;\n    email?: string;\n    target?: string;\n    from?: number; // R--- depreciate\n    until?: number; // R--- depreciate\n    fromTz?: DateTZ;\n    untilTz?: DateTZ;\n    show_cancelled?: boolean;\n    pagination?: boolean;\n    limit?: number;\n    offset?: number;\n    sort?: string,\n    filters?: any;\n    include_rooms?: boolean;\n    building_zone?: string;\n}\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    // public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public title: string;\n    /** Luxon based date class of the booking start time */\n    public startDateTz: DateTZ;\n    /** Luxon based date class of the booking start time */\n    public endDateTz: DateTZ;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly booking_type: string;\n    /** List of catering orders for the booking */\n    public catering: readonly CateringOrder[];\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Mapping of emails to approval statuses */\n    public approval_status: HashMap<string>;\n    /**\n     * New booking approval status set in constructor\n     * \n     * timeBasedStatusLabel is a getter calculated via current time, some parts of the application\n     * may use status when it should use timeBasedStatusLabel\n     */\n    public status: 'tentative' | 'accepted' | 'approved' | 'declined' | 'cancelled' | 'expired' | 'unavailable';\n    /** Host/Organiser of the booking */\n    public organiser: User;\n    /** List of people invited to attend the booking */\n    public attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n\n    /** List of notes associated with the booking */\n    public notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public setup: HashMap<number>;\n    /** List of checked in attendees */\n    public check_ins: object;\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** \n     * Booking Space \n     * Bookings only have one room on MCK\n     */\n    public room: Space;\n    /** building_zone */\n    public building_zone: string;\n    /** Initialized Timezone */\n    public timezone: string;\n    /** Array of company names */ \n    public company?: string[];\n    /** Type of recurrence,  Shows whether this is a master or an occurence in the series. */\n    public readonly recurrence_type: string;\n    /** The frequency of the recurring booking. */\n    public readonly recurrence_period: RecurrencePeriod;\n    /** The interval time between each period. Defaults to 1. For example, with a period of \"weekly\" and an interval of 2, the recurrencd happen every 2 weeks. */\n    public readonly recurrence_interval: number;\n    /** Unix epoch in seconds of the recurrence end date */\n    private _recurrence_endTz: DateTZ;\n    /** The number of times to repeat the recurring booking. */\n    public readonly recurrence_count: number;\n    /** ID of the booking considered the master */\n    public readonly recurrence_master_id: string;\n    /** An array of booking IDs which belong to this recurring series. This INCLUDES the master booking ID. */\n    public readonly occurrence_ids: string[];\n    /** A list of INDIVIDUAL edits to any of the bookings in the series. This is so we can prompt the user if they are going to override previously updated bookings with a whole-series update. */\n    public readonly occurrence_edits: string[];\n    /** A list of Ocurrences */\n    public readonly occurrence_details: { id: string, start_epoch: number }[];\n    /** When the booking was created */\n    public created_epoch: number;\n    /** Is the Application concierge */\n    public is_concierge: boolean;\n    /**helper to know if recurring toggle is on */\n    public is_recurrent: boolean;\n    /**array of start dates of each ocurrence in the series */\n    public recurrence_starts: Array<DateTZ>\n    /**array of conflicting dates not to be included in the recurrence series */\n    public recurrence_exceptions: Array<number>\n\n    public recurrence_days?: Array<DaysOfWeek>\n\n    /** Master recurrence start */\n    public recurrence_start: number;\n\n    /** Start Epoch */\n    public start_epoch: number;\n    public end_epoch: number;\n    level_zone: string;\n\n    /** Currently back-end is not properly setting the recurrence_end property, this is a workaround */\n    public get recurrence_endTz(): DateTZ {\n        return this._recurrence_endTz;\n    }\n\n    public set recurrence_endTz(date: DateTZ) {\n        this._recurrence_endTz = date;\n    }\n    \n    /** Mark a booking for deleting */\n    public attempted_to_delete?: 'series' | 'booking' | null;\n\n    // No specific reason to set readonly but canm be change if needed to update in future\n    public readonly booked_by : string | { name: string };\n    public readonly booker: Object;\n    public readonly booker_concierge: Object\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        // Needed to check if the current app is Concierge or Staff\n        const settingsService = ServiceManager.serviceFor(SettingsService) as unknown as SettingsService;\n        this.is_concierge = settingsService.concierge;\n\n        /** \n         * Setup Defaults when raw_data values are not provided\n         */\n        const nowTz = new DateTZ();\n\n        const defaultTitle = ''; // Blank since the create booking form will init with test values.\n        const defaultLocalTimezone = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone;\n        const defaultBuildingZone = null // R --- no idea, should be a building.id but which and how\n        const defaultOrgainiser = User.active_user || new User(); // meh, non American use.\n        const defaultBookingType = 'internal';\n\n        /** \n        * Process the simple raw_data with defaults mixed in\n        */\n        this.title = raw_data.title || defaultTitle;\n        this.timezone = raw_data.timezone || defaultLocalTimezone;\n        // Used by components to get the building details\n        this.building_zone = raw_data.building_zone || defaultBuildingZone;\n        this.body = raw_data.body || '';\n        // Provided booking type\n        this.booking_type = raw_data.booking_type || defaultBookingType;\n        // Attendees provided in API booking data\n        this.attendees = (raw_data.attendees || []).map((i) => new User(i));\n        // Provided organiser, active user, or empty user?\n        this.organiser = raw_data.organiser ? new User(raw_data.organiser) : defaultOrgainiser;\n        // Creator is provided or defaults to the organizer\n        this.creator = (raw_data.booked_by ? new User(raw_data.booked_by) : defaultOrgainiser) || this.organiser;\n        // Setup and breakdown times can conflict but not the true event start and end times\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        // Notes are assigned by room but we only support a single room\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.check_ins = raw_data.check_ins || {};\n        this.notify_users = raw_data.notify_users?.length ? raw_data.notify_users : [this.organiser?.name];\n        this.company = raw_data.company || [];\n        // retain booked by if there : helps to get correct creator above\n        this.booked_by = raw_data.booked_by;\n        this.booker = raw_data.booker;\n        this.booker_concierge = raw_data.booker_concierge;\n        this.level_zone = raw_data.level_zone;\n\n        /** \n         * Setup Defaults when raw_data values are not provided\n         * \n         * all room_ids and space_list inputs can be refactored into just room like an API booking\n         * \n         * raw_data.room can be provides as the Space class or JSON object\n         */\n        this.room = raw_data.room ? new Space(raw_data.room) : new Space();\n\n        const room_id = raw_data.room_id || raw_data.room_ids // Not sure why we have room_id and room_ids\n        if (!this.room.id && room_id?.length) {\n            this.room = findSpace(room_id[0]) || this.room;\n        }\n        /**\n         * Setup the booking start and end time\n         * \n         * \n         * Booking defaults to now if start is not defined.\n         * Booking durration is now a getter\n         */\n        // now rounded to the next 5 minute increment\n        const defaultStartTz = new DateTZ({ date: nowTz.ms, is_local_tz: false, building_tz: this.timezone }).setValue({ minute: Math.ceil(nowTz.minutes / 5) * 5 });\n\n        /**\n         * When saving a booking the BaseDataClass doens't know to use the toAPIJson\n         * so startDateTz isn't being convert to the epoch timestamp\n         * \n         * I'm not testing for the end time values because we can assume those follow the same pattern.\n         */\n        const startEpochProvided = !!(raw_data.start_epoch || raw_data.start);\n        const startDateTzProvided = !!raw_data.startDateTz;\n\n        /**\n         * Not trying to be fancy here, just clear.\n         */\n        if (!startEpochProvided && startDateTzProvided) {\n            /**\n             * Once a booking is saved the BaseDataClass recreates the Booking\n             * but doesn't use the toApiJSON method adapt the class input, mainly the\n             * startDateTz isn't converted to the start_epoch timestamp.\n             */ \n            this.startDateTz = raw_data.startDateTz;\n            this.endDateTz = raw_data.endDateTz;\n        } else if (startEpochProvided) {\n            /**\n             * A Booking created from the API responses arrives with the booking \n             * start_epoch and end_epoch timestamps.\n             */\n            this.startDateTz = new DateTZ({\n                date: ((raw_data.start_epoch || raw_data.start) * 1000),\n                is_local_tz: false,\n                building_tz: this.timezone\n            });\n            this.endDateTz = new DateTZ({\n                date: ((raw_data.end_epoch || raw_data.end)* 1000),\n                is_local_tz: false,\n                building_tz: this.timezone\n            });\n        } else {\n            /**\n             * And there are uses of new Booking where there are no inputs\n             * and defaults are necessary.\n             */\n            this.startDateTz = defaultStartTz;\n            this.endDateTz = defaultStartTz.addValue({ minutes: 60 });;\n        }\n\n        /**\n         * End time was by design ending at one minute before, IE 4:00PM is 3:59PM, \n         * because of calendar and conflcit checking\n         * \n         * Check and finesse it. \n         * Not sure why but some booking endtime added extra seconds \n         */\n        if ((this.endDateTz.minutes % 5) !== 0 || this.endDateTz.second > 0) {\n            // Not sure of the source but some bookings do not conform.\n            this.endDateTz = this.endDateTz.setValue({ second: 0, minute: Math.round(this.endDateTz.minutes / 5) * 5 });\n        }\n\n\n\n        /**\n         * Setup the booking created_date\n         * \n         * if it exists as a key, use the value directly.\n         * if we initialize without a value, switch to checking duration.\n         * Ref: MCK-826\n         */\n        this.created_epoch = raw_data.created_epoch || nowTz.seconds;\n\n\n        /**\n         * Setup the booking all_day boolean\n         * \n         * if it exists as a key, use the value directly.\n         * if we initialize without a value, switch to checking duration.\n         * Ref: MCK-826\n         */\n        if ('all_day' in raw_data) {\n            this.all_day = raw_data.all_day;\n        } else {\n            this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        }\n\n\n        // R--- TODO Concierge will use startDateTz so i'm not sure if this is needed. \n        if (!this.is_concierge && this.all_day && this.timezone) {\n            /**\n             * Concierge has a all_day form field, I can see it may need this for that, does it really?\n             */\n            this.startDateTz = this.startDateTz.startOfValue('day')\n        }\n\n        /**\n         * Setup the booking approval status\n         */\n         let status = raw_data.status;\n         // If not provided default to approved.\n         if (!raw_data.status) {\n            status = 'accepted';\n         }\n         // \"show_as\" is a special rule to override how the applications display the status\n         if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            status = 'declined';\n         }\n         const approvalStatus = {};\n         approvalStatus[this.room.email] = status;\n         // Tracking new \"status\" and legacy \"approval_status\" from raw_data.status.\n         this.status = status;\n         this.approval_status = raw_data.approval_status || {};\n\n        /**\n         * Catering setup\n         * \n         * Bring in and sort the catering order by delivery time\n         */\n\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        \n\n\n        /**\n         * Edited fields setup\n         * \n         * Bring in and sort the catering order by delivery time\n         * \n         * cateringOrders can return the order sorted\n         */\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                flatten(\n                    Object.keys(raw_data.edits || {}).map((room) => {\n                        return flatten(Object.values(raw_data.edits[room]));\n                    })\n                )\n            );\n        this.edits = edited_fields;\n\n        /**\n         * New Recurring booking feilds\n         * \n         * New fields do not match the BookingRecurrenceDetails type\n         * and are simpler to manage this way\n         */\n        this.recurrence_count = raw_data.recurrence_count || null;\n        this.recurrence_days = raw_data.recurrence_days || null;\n        this.occurrence_edits = raw_data.occurrence_edits || null;\n        this.recurrence_endTz = raw_data.recurrence_end ? new DateTZ({date: raw_data.recurrence_end * 1000, is_local_tz: false, building_tz: this.timezone}) : null;\n        this.recurrence_exceptions = raw_data.recurrence_exceptions || null;\n        this.occurrence_ids = raw_data.occurrence_ids || null;\n        this.recurrence_interval = raw_data.recurrence_interval || null;\n        this.recurrence_period = raw_data.recurrence_period || null;\n        this.recurrence_type = raw_data.recurrence_type || null;\n        this.recurrence_master_id = raw_data.recurrence_master_id\n        this.occurrence_details = raw_data.occurrence_details\n        this.is_recurrent = raw_data.is_recurrent || (!!this.recurrence_type && !!this.recurrence_period) || null;\n        this.recurrence_starts = raw_data.recurrence_starts || []\n        this.start_epoch = raw_data.start_epoch\n        this.end_epoch = raw_data.end_epoch\n         \n        /**\n         * I'm not clear why, but the booking body, aka description is copied into the notes.\n         * R--- In concerge data description is only a key when saving, also in the note array?\n         */\n        if (raw_data.body && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: 0,\n                    message: raw_data.body,\n                    author: this.organiser.email\n                }\n            ];\n        }\n\n        /**\n         * In case there is a cancellation in progress the property attempted_to_delete is set to false\n         * And it is persisted until the booking is gone\n         */\n        this.attempted_to_delete = raw_data.attempted_to_delete || null;\n    }\n\n\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    /** Alias to approval_status */\n    public get auto_approve(): boolean {\n        // if concierge we auto_approve always.\n        if (this.is_concierge) {\n            return true;\n        }\n        return !this.room.byRequest({\n            dateTz: this.startDateTz,\n            duration: this.duration,\n            host: this.organiser\n        });\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        return !this.declined && !this.tentative;\n    }\n\n    /** All of the booking attendees including the organizer */\n    public get allAttendees(): User[] {\n        return unique([this.organiser].concat(this.attendees), 'email');\n    }\n\n    /** Computer format for booking type */\n    public get bookingTypeId(): string {\n        return this.booking_type.toLowerCase();\n    }\n\n    /** Human format for booking type */\n    public get bookingTypeLabel(): string {\n        return toTitleCase(this.booking_type);\n    }\n\n    /** Get accessor for the check in object, app expect array */\n    public get checkInsArray(): string[] {\n        return Object.keys(this.check_ins || {})\n    }\n\n    /** Legacy getter for \"class\" */ // R-- TODO remove\n    public get class(): string {\n        return this.booking_type;\n    }\n\n    /**  */\n    public get displayEndDateTz(): DateTZ {\n        if ((this.endDateTz.minutes % 5) !== 0) {\n            // All the bookings should end in 59 seconds\n            return this.endDateTz.addValue({ seconds: 1 });\n        }\n        // but if not they return 00\n        return this.endDateTz;\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        /**\n         * I'm not sure, nor is Cam if this is ever used to decline\n         * all booking for a specific room\n         */\n        if (this.room.name.toLowerCase().includes('decline')) {\n            return true;\n        }\n\n        if (this.status.includes('decline')) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Catering getter */\n    public get cateringOrders() {\n        // Return the catering orders sorted by delivery time\n        return this.catering ? this.catering.slice().sort((a, b) => {\n            if (a?.delivery_time > b?.delivery_time) return 1;\n            if (b?.delivery_time > a?.delivery_time) return -1;\n          \n            return 0;\n        }) : [];\n    }\n\n    /** Get the created date as DateTz */\n    public get creationDateTz() {\n        return new DateTZ({ date: this.created_epoch * 1000, is_local_tz: false, building_tz: this.timezone })\n    }\n\n    public get tz_offset() {\n        return getTimezoneOffsetString(this.timezone);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this.startDateTz.formatDate('dd MMM yyyy');\n    }\n\n    /**\n     * Get the booking durration based on start and end times\n     */\n     public get duration(): number {\n        return Math.abs(this.startDateTz.startOfValue('minute').dateDiff(this.displayEndDateTz, 'minutes'));\n    }\n\n    /** Unix timestamp of the booking start */\n    public get date() {  // R--- remove if not necessary\n        return this.startDateTz.ms;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Does the booking have catering orders */\n    public get has_catering(): boolean {\n        return !!this.catering.length;\n    }\n\n    /** \n     * Unique calendar event ID\n     * same as this.id, used to support existing component usage \n     */\n    public get icaluid(): string {\n        return this.id;\n    }\n\n    /**\n     * Get the booking room id\n     */\n    public get room_id(): string {\n        return this.room.id;\n    }\n\n    /** Legacy getter of room, aka space */\n    public get space(): Space {\n        return this.room;\n    }\n\n    /** Status of the booking */\n    public get timeBasedStatusLabel(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' | 'expired_yesterday' {\n        const  buildingTzDt = DateNow(new Date()).toZone(this.timezone) ;  // building time\n\n        if (DateNow(new Date()).isBeforeDate(this.startDateTz.subtractValue({ minutes: 15 }))) {\n            return 'future';\n        } else if (DateNow(new Date()).isBeforeDate(this.startDateTz)) {\n            return 'upcoming';\n        } else if (DateNow(new Date()).isBeforeDate(this.startDateTz.addValue({ minutes: 15 }))) {\n            return 'started';\n        } else if (DateNow(new Date()).isBeforeDate(this.startDateTz.addValue({ minutes: this.duration }))) {\n            return 'in_progress';\n        }\n        // if current time is 12 AM (as per timezone) and booking expired yesterday\n        else if(buildingTzDt.startOfValue('day').addValue({ minutes: 1 }).isAfterDate(this.startDateTz, 'day') ) {\n            return 'expired_yesterday'\n        }\n        \n        return 'done';\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        if (\n            this.status &&\n            this.status.indexOf('tentative') >= 0\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return `${this.startDateTz.formatDate('h:mma')} - ${this.displayEndDateTz.formatDate('h:mma')}`;\n    }\n\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this.startDateTz.formatDate('h:mma');\n    }\n\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this.endDateTz.formatDate('h:mma');\n    }\n\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return humaniseDuration(this.duration);\n    }\n\n    /** Display value for the location of the booking */\n    public get local_room_name(): string {\n        return this.room?.local_name || 'No location';\n    }\n\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.toJSON());\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(isEdit = false): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: isEdit ? this.id : null,\n        });\n    }\n\n    /**\n     * \n     * @param status\n     * @returns void\n     */\n    public undo(status?: 'accept' | 'decline', opts: { series?: boolean } = {}): Promise<void> {\n        return this._service.undo(\n            this.id, status || 'accept',\n            opts\n        );\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(opts: { series?: boolean } = {}): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id, { ...opts });\n\n            // R-- ask Cam again is he's positive these extra params are not needed for anything\n            // return this._service.delete(this.id, {\n            //     concierge: this.is_concierge,\n            //     host: this.organiser.email,\n            //     room_id: this.space?.id,\n            //     icaluid: this.icaluid,\n            //     start: json.start,\n            //     end: json.end\n            // });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        let data = super.toJSON();\n        // Remove the description from the notes\n        data.notes = data.notes.filter((note) => note.type !== 'description');\n        // Encode the nested objects\n        data.room = data.room.toJSON();\n \n\n        data.organiser = data.organiser.toJSON();\n        data.creator = data.creator?.toJSON ? data.creator.toJSON(): data.creator;\n        // Map the attendees User objects\n        data.attendees = data.attendees.map((i: User) => i.toJSON());\n\n        // New recurring booking\n        data = handleRecurrenceFields(data)\n\n        if(data.recurrence_list){\n            data.recurrence_starts = [...data.recurrence_list]\n            delete data.recurrence_list\n        }\n        \n        return data;\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toApiJSON(this: Booking): HashMap {\n        let data = super.toJSON();\n\n        // Update booking payload contains additional fields\n        data.icaluid = \"\";\n        if (data.id) {\n            data.icaluid = data.id;\n            data.location_name = this.room.local_name;\n            data.from_room = this.room.email;\n            data.building_zone = this.room.building?.id;\n        }\n\n        /**\n         * These fields are rather in flux\n         * According to Cam \"approve\" will be the prefered field\n         * and auto_approve and approval_status can be removed.\n         */\n        data.approve = this.auto_approve; // this value appear incorrect on update\n        data.auto_approve = [this.auto_approve]; // Needed to update approval status until BE accepts \"approve\"\n        delete data.approval_status;\n\n        // Booking start and end data\n        delete data.startDateTz;\n        delete data.endDateTz;        \n        data.start = this.startDateTz.seconds;\n        data.end = this.endDateTz.seconds;\n        data.old_start = this.startDateTz.seconds; // remove is not necessary\n        data.old_end = this.endDateTz.seconds; // remove is not necessary\n\n        // Creation date value\n        delete data.created_epoch;\n        data.creation_date = this.creationDateTz.seconds;\n\n        // Catering fields\n        // data.catering = data.catering.toJSON();\n        data.catering = this.cateringOrders;\n        data.has_catering = this.has_catering;\n        delete data.cateringOrders\n        \n        // Attendees appear quite incomplete\n        // Map the attendees User objects\n        data.attendees = this.allAttendees.map((i: User) => i.toJSON ? i.toJSON() : i);\n\n        // Orgainizer and Creator data\n        data.organiser = data.organiser.toJSON ? data.organiser.toJSON() : data.organiser;\n        data.creator = data.creator.toJSON ? data.creator.toJSON() : data.creator;\n\n        //  Convert check_ins to checked_in array\n        delete data.check_ins;\n        data.checked_in = this.checkInsArray;\n\n        // edits - edit booking is showing all fields even w/o an edit :(\n\n        // Room data\n        data.room_ids = [this.room.email];\n        delete data.room;\n\n        // New recurring booking\n        data = handleRecurrenceFields(data)\n\n        \n        if(data.recurrence_list){\n            data.recurrence_starts = [...data.recurrence_list]\n            delete data.recurrence_list\n        }\n\n        // Not found in dev data\n        delete data.name;\n        delete data.email;\n        delete data.is_concierge;\n        delete data.building_zone;\n        delete data.status;\n\n        return data;\n    }\n    \n    public getType(): string {\n        if (!this || this.status?.includes('decline')) {\n            return 'cancelled';\n        }\n        const booking_type = this.booking_type;\n        if (booking_type === 'internal' && this.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** fallback for a booking when the recurrence_end is null but it's a series booking */\n    public recurrenEndFromOcurrences(occurrence_details: { id: string, start_epoch: number }[]): DateTZ {\n        const date = occurrence_details.map(occurence => occurence)\n        .sort((a, b) => new Date(a.start_epoch * 1000).getTime() - new Date(b.start_epoch * 1000).getTime())\n        .reverse()\n        .shift()\n        .start_epoch * 1000\n        return new DateTZ({date, is_local_tz: false, building_tz: this.timezone});\n    }\n\n    // public get dateString() {\n    //     return shorterLocalDateFormatString(this.startDateTz);\n    // }\n\n    // public get endDateString(): string {\n    //     return shorterLocalDateFormatString(this.recurrenEndFromOcurrences(this.occurrence_details));\n    // }\n}\n\n/**\n * Merge catering orders with same time and location\n * @param order_list List of catering orders\n */\nexport function mergeCateringOrders(order_list: CateringOrder[]) {\n    // R--- investigate when this is used. Staff doesn't use it when adding catering orders.\n    for (let i = 0; i < order_list.length; i++) {\n        const orders = order_list.filter(\n            (order) =>\n                order.location_id === order_list[i].location_id &&\n                order.delivery_time === order_list[i].delivery_time\n        );\n        if (orders.length > 1) {\n            const new_list = order_list.filter(\n                (order) =>\n                    !(order.location_id === order_list[i].location_id &&\n                        order.delivery_time === order_list[i].delivery_time)\n            );\n            new_list.push(new CateringOrder({\n                ...order_list[i],\n                items: flatten(orders.map(order => order.items)),\n                booking_date: this.startDateTz.ms,\n                booking_timezone: this.booking_timezone,\n            }));\n            order_list = new_list;\n            i = 0;\n        }\n    }\n    return order_list;\n}\n","import { DateTZ } from \"@mckinsey-converge/date-tz\";\n\nexport interface SpaceRules {\n    auto_approve: boolean;\n    hide: boolean;\n    max_length?: number;\n    min_length?: number;\n    reason?: string // specially for non-bookable rooms\n}\n\nexport interface BookingNote {\n    /** Type of note */\n    type: 'equipment' | 'catering' | 'description' | 'private' | 'other' | 'catering-private';\n    /** Name of the note's author */\n    author: string;\n    /** Contents of the note */\n    message: string;\n    /** Time the note was added to the booking */\n    date: number;\n    /** Display value for the time */\n    time?: string;\n    /** ID of the space associated with the note */\n    space?: string;\n    /** ID of the catering order associated with the note */\n    order_id?: string;\n}\n\nexport interface DateDurationData {\n    dateTz: DateTZ,\n    duration: number,\n    mobile: boolean,\n    save?: boolean,\n}\n\nexport enum BOOKING_STATUS {\n    approved = 'approved',\n    declined = 'declined',\n    tentative = 'tentative',\n    unavailable = 'unavailable'\n}","import {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators\n} from '@angular/forms';\n\nimport { AvailableBookingFields } from '../settings.interfaces';\nimport {\n    HashMap,\n    humaniseDuration,\n    mockDate as mockDateBase,\n    resetDate as resetDateBase,\n    timeFormatString,\n    unique\n} from '@mckinsey-converge/base';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { ServiceManager } from '../service-manager.class';\nimport { User } from '../users/user.class';\nimport { Booking, IBookingQueryOptions } from './booking.class';\nimport {\n    BookingRule,\n    SpaceStatus\n} from './space.types';\nimport { validateEndTime } from '../validation.utilities';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { BookingAction, RecurrencePeriod, SeriesAction } from '../recurrence/recurrence.utils';\nimport { Space } from '../spaces';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE\n};\n\n/**\n * Deprecated. Use @mckinsey-converge/base's import.\n */\nexport const mockDate = mockDateBase;\n\n/**\n * Deprecated. Use @mckinsey-converge/base's import.\n */\nexport const resetDate = resetDateBase;\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n\nexport function bookingOptionsToQuery(options: IBookingQueryOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        delete query.type;\n        if (options.filters) {\n            delete query.filters;\n            for (const property in options.filters) {\n                if (!query[property]) {\n                    query[property] = options.filters[property]\n                }\n            }\n        }\n\n        // id?: string;\n        // cancelled?: boolean;\n        if (options.until) {\n            query.to = options.until;\n            delete query.until;\n        }\n        \n    }\n    return query;\n}\n\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: DateNow(new Date()).startOfValue('minute').ms * 10\n            }\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = new DateTZ({ date: 0 });\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = booking.startDateTz;\n        const bkn_end = booking.endDateTz;\n        if (bkn_start.isAfterDate(start)) {\n            const diff = Math.abs(bkn_start.dateDiff(start, 'minutes'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.ms, end: bkn_start.ms });\n            }\n            start = bkn_end;\n        } else if (start.startOfValue('minute').ms === bkn_start.startOfValue('minute').ms) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.ms,\n         // R--- these X 10's make no sense. why not + 2 years?\n        end: DateNow(new Date()).startOfValue('minute').ms * 10\n    });\n\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n * \n * R--- Possibly depreciate, I don't see it used anywhere except for its own test\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = DateNow(new Date()).ms,\n    min_size: number = 15\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const date_ = new DateTZ({date})\n    const time = date_.startOfValue('minute').setValue({ second: 1 });\n    for (const block of slots) {\n        const start = new DateTZ({date: block.start});\n        const end = new DateTZ({date: block.end});\n        if (start.startOfValue('minute').isAfterDate(time)) {\n            return block;\n        } else if (time.isBeforeDate(end.startOfValue('minute'))) {\n            const duration = end.startOfValue('minute').dateDiff(time, 'minutes');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[],\n    isConcierge: boolean = false,\n    manualTimezone?: string,\n    action?: SeriesAction | BookingAction | null\n    ): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl([booking.room], []),\n        room: new FormControl(booking.room, {}),\n        dateTz: new FormControl({ value: booking.startDateTz || DateNow(), disabled: false }, [Validators.required]),\n        duration: new FormControl({ value: booking.duration, disabled: false }),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', { validators: [ Validators.required, Validators.minLength(1) ], updateOn: 'blur' }), //Validators.pattern(\"[^=`~!@#$%*{};:'\\\",_.<>]*\")\n        booking_type: new FormControl(booking.booking_type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.cateringOrders.map(\n                (order) => new CateringOrder({\n                    ...order,\n                    booking_date: booking.startDateTz.ms,\n                    booking_timezone: booking.timezone,\n                })\n            )\n        ),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n        action: new FormControl(''),\n        timezone: new FormControl(manualTimezone || \"\"),\n        is_before_date: new FormControl(false)\n    };\n    if (!isConcierge) {\n        fields.duration.setValidators([Validators.required, validateEndTime(fields.dateTz)]);\n    }\n    /* istanbul ignore else */\n    if (booking.id && booking.id !== 'ad-hoc') {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (booking.endDateTz.ms < DateNow(new Date()).ms) {\n            fields.dateTz.disable();\n        }\n    } else {\n        const dateValidators = [Validators.required];\n        if (!isConcierge) {\n            dateValidators.push(isFuture);\n        }\n        dateValidators.push(validDateTZ)\n        fields.dateTz.setValidators(dateValidators);\n        fields.dateTz.updateValueAndValidity();\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        const expected = fields.expected_attendees.value || {};\n        const matches = Object.keys(expected).filter((key) =>\n            list.find((space) => space.email === key)\n        ).length;\n        if (list && list.length && matches === 0) {\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    fields.dateTz.valueChanges.subscribe((_) => {\n        fields.duration.updateValueAndValidity();\n    });\n    fields.needs_space.valueChanges.subscribe((space_needed) => {\n        if (!space_needed) {\n            fields.space_list.setValue([]);\n        }\n    });\n    fields.has_catering.valueChanges.subscribe((has_catering) => {\n        if (!has_catering) {\n            fields.catering.setValue([]);\n        }\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'dateTz',\n        'booking_type',\n        'equipment_codes',\n        'expected_attendees',\n        'timezone',\n        'is_before_date',\n        ...use_fields\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    \n    if (simplified_fields.all_day) {\n        const handleAllDay = (value) => {\n            if (value) {\n                let startOfDay = simplified_fields.dateTz.value.clone();\n                // When the booking space isn't set we still need a way to determine midnight\n                // and here we use the current concierge building selection's timezone.\n                if (manualTimezone) {\n                    startOfDay = startOfDay.toZone(manualTimezone);\n                }\n\n                simplified_fields.dateTz.setValidators([Validators.required]);\n                simplified_fields.dateTz.setValue(simplified_fields.all_day.value\n                            ? startOfDay.startOfValue('day')\n                            : simplified_fields.dateTz.value);\n                simplified_fields.duration.setValue(simplified_fields.all_day.value\n                    ? 24 * 60\n                    : simplified_fields.duration.value);\n                simplified_fields.dateTz.updateValueAndValidity();\n                simplified_fields.duration.disable();\n                // simplified_fields.dateTz.disable();\n            } else {\n                const dateValidators = [Validators.required];\n                if (!isConcierge) {\n                    dateValidators.push(isFuture);\n                }\n                dateValidators.push(validDateTZ)\n                simplified_fields.dateTz.setValidators(dateValidators);\n                simplified_fields.duration.setValue(booking.duration || 30);\n                simplified_fields.dateTz.updateValueAndValidity();\n                simplified_fields.duration.enable();\n                simplified_fields.dateTz.enable();\n            }\n        };\n        simplified_fields.all_day.valueChanges.subscribe(handleAllDay);\n        handleAllDay(simplified_fields.all_day.value);\n    }\n\n    const occurrences = booking.occurrence_details || [];\n\n    //Add recurrence fields\n    if(action && booking.recurrence_period  === RecurrencePeriod.LIST){\n        booking.recurrence_starts = occurrences\n            .filter(occurrence => occurrence.id !== booking.recurrence_master_id)\n            .map((occurrence) => new DateTZ({date: occurrence.start_epoch * 1000, is_local_tz: false, building_tz: booking.timezone})\n        ) \n    }\n    /**If series exists then set the start and end dates from the first and last bookings in the occurrences array\n     * this prevents prefilled form errors due to individual edits\n     */\n    if(action && action !== SeriesAction.CLONE && action !== BookingAction.CLONE && occurrences && occurrences.length && !booking.id){\n        const start_dateTz = new DateTZ({\n            date: occurrences.sort((d1, d2) => d1.start_epoch - d2.start_epoch)[0].start_epoch * 1000, \n            is_local_tz: false, building_tz: booking.timezone\n        })\n        simplified_fields.dateTz.setValue(start_dateTz)\n        const end = occurrences.sort((d1, d2) => d2.start_epoch - d1.start_epoch)[0].start_epoch * 1000\n        booking.recurrence_endTz =  new DateTZ({date: end, is_local_tz: false, building_tz: booking.timezone})  \n    }\n\n    // R-- needs TZ aware fields\n    const _recurr_end = simplified_fields.dateTz?.value || new DateTZ({ date: 1 }); // new DateTZ({date: simplified_fields.date?.value}) \n    const fields_with_recurrence = {\n        ...simplified_fields,\n        recurrence_period: new FormControl(booking.recurrence_period || RecurrencePeriod.WEEKLY),\n        recurrence_interval: new FormControl(booking.recurrence_interval || 1),\n        recurrence_endTz: new FormControl(booking.recurrence_endTz || _recurr_end.addValue({days: 1})),\n        recurrence_count: new FormControl(booking.recurrence_count || 0),\n        is_recurrent: new FormControl(booking.is_recurrent),\n        recurrence_starts: new FormControl(booking.recurrence_starts || []),\n        recurrence_exceptions: new FormControl([]),\n        recurrence_pattern: new FormControl(RecurrencePeriod.WEEKLY), //Helper value to store the last selected pattern (daily, weekly, monthly),\n        recurrence_days: new FormControl(booking.recurrence_days || [])\n    }\n\n    if(booking.is_recurrent && action !== BookingAction.CLONE){\n        fields_with_recurrence.recurrence_starts.setValidators([arrayWithValues])\n        fields_with_recurrence.recurrence_starts.updateValueAndValidity()\n        fields_with_recurrence.recurrence_endTz.setValidators([Validators.required, validDateTZ]);\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(fields_with_recurrence);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    const dateTz = control.value; // new DateTZ({date: control.value});\n    return dateTz.isBeforeDate(DateNow(new Date()).subtractValue({ minutes: 5 }))\n        ? { dateTz: 'Date needs to be in the future' }\n        : null;\n}\n\n/**\n * Validate whether an array has values\n * @param control Control to check value\n */\nexport function arrayWithValues (control: AbstractControl) {\n    return control.value.length !== 0 ? null : { field: 'Needs at least one value'}\n}\n\n/**\n * Validate whether a date has a valid value (future or current date)\n * @param control Control to check value\n */\n export function validDate (control: AbstractControl) {\n     if(!control.value){\n         return { date: 'Needs a valid date'}\n     }\n    const date = new DateTZ({date: control.value})\n    const now = DateNow(new Date())\n    const isValid = now.isBeforeDate(date, 'day') || now.isSameDate(date, 'day')\n    return isValid ? null : { date: 'Needs a valid date'}\n}\n\n/**\n * Validate whether a date has a valid DateTZ value (future or current date)\n * @param control Control to check value\n */\n export function validDateTZ (control: AbstractControl) {\n    if(!control.value){\n        return { date: 'Needs a valid date'}\n    }\n   const date = DateNow(control.value.JSDate);\n   const now = DateNow(new Date());\n   const isValid = now.isBeforeDate(date, 'day') || now.isSameDate(date, 'day')\n   return isValid ? null : { date: 'Needs a valid date'}\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[] = [],\n    bookable: boolean = true,\n    requestable: boolean = false,\n    dateTz: DateTZ = DateNow(),\n    space?: Space\n) {\n    const free_slots = getFreeBookingSlots(bookings.filter((bkn) => !bkn.declined));\n    const now = DateNow() // new DateTZ({date}); // now should be now\n    // commeted bellow piece as correct way to get next free booking slot is at line- 488\n    // const next_free_slot = free_slots.find((slot) => {\n    //     return slot && (slot.start > now.ms || now.ms > slot.start - slot.start % 1000 || now.ms < slot.end - slot.end % 60 * 1000);\n    //     // const start = new DateTZ({date: slot?.start || 0 });\n    //     // const end = new DateTZ({date: slot?.end || 0}); // slot end isn't late enough? or after now/\n    //     // return start.isAfterDate(now) || (now.isAfterDate(start.startOfValue('second')) && now.isBeforeDate(end.startOfValue('minute')))\n    // });\n\n    const next_free_slot = getNextFreeBookingSlot(bookings.filter((bkn) => !bkn.declined));\n    \n    const start = new DateTZ({date: next_free_slot?.start || 0});\n    const end = new DateTZ({date: next_free_slot?.end || 0});\n    const currently_free = now.isAfterDate(start.startOfValue('second')) && now.isBeforeDate(end.startOfValue('minute'));\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.dateDiff(now, 'minutes') : start.dateDiff(now, 'minutes'),\n        'short'\n    );\n\n    const free_tomorrow = !currently_free && !start.isSameDate(now, 'day');\n    const free_today = currently_free && !end.isSameDate(now, 'day');\n    \n    return {\n        status: (!bookable\n            ? SpaceStatus.NotBookable\n            : currently_free\n                ? requestable\n                    ? SpaceStatus.Requestable\n                    : SpaceStatus.Available\n                : SpaceStatus.InProgress) as SpaceStatus,\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n                ? `Free until ${end.formatDate(timeFormatString())}(${time_until_next_block})`\n                : free_tomorrow\n                    ? 'Unavailable today'\n                    : `Free at ${start.formatDate(timeFormatString())}(${time_until_next_block})`\n    };\n}\n\n/**\n * V1 version display.\n */\nexport const spaceStatusToDisplay = (status: SpaceStatus): string => {\n    switch (status) {\n        case SpaceStatus.NotBookable:\n            return 'Not Bookable';\n        case SpaceStatus.Requestable:\n            return 'Available by Request';\n        case SpaceStatus.Unavailable:\n            return 'Unavailable';\n        case SpaceStatus.InProgress:\n            return 'Meeting in Progress';\n        case SpaceStatus.Available:\n        default:\n            return 'Available';\n    }\n};\n\nexport function replaceBookings(\n    list: Booking[],\n    new_bookings: Booking[],\n    filter_options: { room_email: string; fromTz: DateTZ; toTz: DateTZ }\n) {\n    const filtered_list = list.filter((booking) => {\n        return (\n            !(booking.room?.email === filter_options.room_email) ||\n            !timePeriodsIntersect(filter_options.fromTz.ms, filter_options.toTz.ms, booking.startDateTz.ms, booking.endDateTz.ms)\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'icaluid');\n}\n\nexport function timePeriodsIntersect(\n    start1: number,\n    end1: number,\n    start2: number,\n    end2: number,\n    type = ''\n) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 <= end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nexport function formatWhen({\n    all_day,\n    startTZ,\n    endTZ,\n    displayEndTZ\n}): string {\n    if (all_day) {\n        return `${startTZ.formatDate('dd MMM yyyy')} - All Day`;\n    } else {\n        if (startTZ.isSameDate(endTZ, 'day')) {\n            return `${startTZ.formatDate('dd MMM yyyy, h:mma')} - ${displayEndTZ.formatDate('h:mma')}`;\n        } else {\n            return `${startTZ.formatDate('dd MMM yyyy, h:mma')} - ${displayEndTZ.formatDate('dd MMM yyyy, h:mma')}`;\n        }\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { BaseAPIService } from '../base.service';\nimport { Booking, IBookingQueryOptions } from './booking.class';\nimport { bookingOptionsToQuery } from './booking.utilities';\nimport {\n    HashMap\n} from '@mckinsey-converge/base';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\nimport { BookingCheckinParams } from './space.types';\nimport { DateNow } from \"@mckinsey-converge/date-tz\";\nimport { Observable } from 'rxjs/internal/Observable';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService,\n        settingsService: SettingsService,\n    ) {\n        super(_composer, settingsService);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    /**\n * Get user bookings\n * @param options\n */\n    public userBookings(options: IBookingQueryOptions,\n        uniqueId?: string): Promise<Booking[]> {\n        if (!options) {\n            throw new Error('Booking avilability requires request options');\n        }\n        const now = DateNow(new Date())\n        if (!options.from) {\n            options.from = now\n                .startOfValue('day')\n                .subtractValue({ days: 2 })\n                .ms;\n        }\n        if (!options.until) {\n            options.until = null;\n        }\n\n        const key = `bookings|${options.id ? options.id : ''}|${uniqueId ?? ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Booking[]) => {\n                    delete this._promises[key];\n                    resolve(list);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = bookingOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking, series?: boolean): Promise<Booking> {\n        const body = booking.toApiJSON()\n        if(series){\n            body.series = true\n        }\n        return booking.id ? this.update(booking.id, body) : this.add(body);\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return  this.task(id, 'checkin', fields);\n    }\n    public checkinIndividualVisitor(id: string, fields: BookingCheckinParams) {\n        return  this.taskObsr(id, 'checkin', fields); \n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public undo(id: string, status: 'accept' | 'decline', fields?: HashMap) {\n        return this.task(id, status, fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, this.settingsService.concierge ? 'concierge_decline' : 'decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n\n    public declineMultiple(bookings: Booking[]): Observable<any[]> {\n        const requests = [];\n        bookings.forEach(bkg => {\n            const booking = bkg.toJSON();\n            const id = booking.id;\n            const fields = {\n                booking_id: booking.id,\n                organiser: booking.organiser.email,\n                room_email: booking.space?.email,\n                icaluid: booking.icaluid,\n                start: booking.startDateTz.formatDate('h:mm a').toLocaleLowerCase(),\n                end: booking.endDateTz.formatDate('h:mm a').toLocaleLowerCase(),\n            };\n            requests.push(this.taskObsr(id, 'concierge_decline', fields) ); \n        });\n        return forkJoin(requests);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { PaginatedAPIService } from '../paginated.service';\nimport { Booking, IBookingQueryOptions,  } from './booking.class';\nimport { bookingOptionsToQuery } from './booking.utilities';\nimport {\n    HashMap\n} from '@mckinsey-converge/base';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\nimport { BookingCheckinParams } from './space.types';\nimport { Observable } from 'rxjs';\n\nexport interface PaginatedBooking {\n    results: Booking[];\n    total: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsPaginatedService extends PaginatedAPIService<Booking> {\n    constructor(protected _composer: ComposerService,\n        settingsService: SettingsService,\n    ) {\n        super(_composer, settingsService);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    /**\n * Get user bookings\n * @param options\n */\n    public userBookings(options: IBookingQueryOptions,\n        uniqueId?: string): Promise<PaginatedBooking> {\n        if (!options) {\n            throw new Error('Booking avilability requires request options');\n        }\n\n        const key = `bookingsPaginated|${options.id ? options.id : ''}|${uniqueId ?? ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (response: any) => {\n                    delete this._promises[key];\n                    resolve(response);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = bookingOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n\n        return this._promises[key];\n    }\n\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, this.settingsService.concierge ? 'concierge_decline' : 'decline', fields);\n    }\n\n    public undo(id: string, status: 'accept' | 'decline', fields?: HashMap) {\n        return this.task(id, status, fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n\n    // public getHoldingBay(query: IBookingQueryOptions): Promise<PaginatedBooking> {\n    //     const key = `bookingsPaginated|holding-bay`;\n    //     if (!this._promises[key]) {\n    //         this._promises[key] = new Promise((resolve, reject) => {\n    //             const respond = (response: any) => {\n    //                 delete this._promises[key];\n    //                 resolve(response);\n    //             };\n    //             const error = e => {\n    //                 reject(e);\n    //                 delete this._promises[key];\n    //             };         \n    //                 this.query(query, { url: '/api/staff/bookings/holding_bay' }).then(respond, error);\n    //         });\n    //     }\n\n    //     return this._promises[key];\n    // }\n\n    public getHoldingBay = (query: IBookingQueryOptions): Observable<HashMap> => this.queryHoldingBay(query, { url: '/api/staff/bookings/holding_bay' });\n}\n","export * from './booking.class'\nexport * from './space.types'\nexport * from './bookings.service'\nexport * from './bookingsPaginated.service'\nexport * from './booking.utilities'\nexport * from './booking-state.service'\nexport * from './space.utilities'\nexport * from './booking.types'\n","import { SpaceRules } from './booking.types';\n\nimport {\n    durationGreaterThanOrEqual,\n    stringToMinutes\n} from './booking.utilities';\nimport {\n    SpaceCheckOptions,\n    SpaceRuleOptions\n} from './space.types';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n/**\n * Get booking rules for the given user and space\n * @param options\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n        reason: ''\n    };\n    let match = false;\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            duration: options.duration,\n                            rules: rule_block.conditions\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        match = true;\n                        space_rules_for_user.reason = '';\n                        break;\n                    }\n                    else {\n                        space_rules_for_user.reason = 'OfficeRules';\n                    }\n                }\n            }\n            \n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    if (!match) {\n        space_rules_for_user.hide = true;\n    }\n    return space_rules_for_user;\n}\n\n\n/**\n * Check if user matches the given ruleset\n * @param options\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = new DateTZ({date: options.time});\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        Object.keys(options.rules).forEach((key) => {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = DateNow(new Date()).addValue({ minutes: duration });\n                        let match = time.isBeforeDate(check);\n                        /* istanbul ignore else */\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n\n                        const duration = stringToMinutes(condition[0]);\n                        const check = DateNow(new Date());\n                        time.isAfterDate(check.addValue({ minutes: duration })) ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(options.duration, condition[0])\n                    ) {\n                        matches++;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(condition[0], options.duration)\n                    ) {\n                        matches++;\n                    }\n                    break;\n            }\n        });\n        return matches >= count;\n    }\n    return false;\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { SettingsService } from '../settings.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService,\n                settingsService: SettingsService) {\n        super(_composer, settingsService);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = 'catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from '@mckinsey-converge/base';\n\nexport class CateringCategory extends CateringItem {\n    /** Whether item is a category */\n    public is_category = true;\n    public admin_only: boolean;\n\n    constructor(data: HashMap) {\n        super(data);\n        this.is_category = true;\n        (this as any).must_select = this.must_select || 0;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from '@mckinsey-converge/base';\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    private unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** List of associated items */\n    public readonly items: CateringItem[];\n    public readonly availableItems: CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n    /** Whether item is a category */\n    public is_category: boolean = false;\n    /** Whether item is disabled in Staff App */\n    public admin_only: boolean;\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            !this.package && this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false,\n            )\n        );\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n     /** Unit price in the assoicated order */\n     public get price(): number {\n        return this.unit_price || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`;\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.is_category = this.id.includes('category-');\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.admin_only = data.admin_only;\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select ?? 0;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy || '';\n        const cateringItems: CateringItem[] = (data.items || []).map(item => new CateringItem(item));\n        this.items = cateringItems;\n        const filteredCateringItems = cateringItems.filter(c => !c.out_of_stock);\n        this.availableItems = filteredCateringItems;\n        this.out_of_stock = !!data.out_of_stock ||\n            // if original items are empty, we hit the bottom, so if we filter out items then its out of stock.\n            (cateringItems.length > 0 && filteredCateringItems.length === 0);\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [...data.zones] : [];\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Updates the unit_price in the assoicated order if necessary\n     * @param price value to compare to unit_price\n     */\n    public setPrice(price: number = 0): void {\n        if(this.unit_price !== price) this.unit_price = price;\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { SettingsService } from '../settings.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService,\n                settingsService: SettingsService) {\n        super(_composer, settingsService);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = 'catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '@mckinsey-converge/base';\nimport { SettingsService } from '../settings.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService,\n                settingsService: SettingsService) {\n        super(_composer, settingsService);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringNotesService {\n\n    public cateringNotes = [];\n\n    \n    public setNotes(notes) {\n        this.cateringNotes = notes;\n    }\n\n    public getNotes() {\n        return this.cateringNotes;\n    }\n}","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '@mckinsey-converge/base';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings';\n\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nexport type CateringOrderMutableProperties =\n  | 'items'\n  | 'location_id'\n  | 'location'\n  | 'delivery_time'\n  | 'charge_code'\n  | 'notes'\n  | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nconst now = DateNow(new Date());\n\n// R--- refactor booking date to be dateTz\nexport class CateringOrder {\n  /**\n   * Booking fields\n   * \n   * The app handles booking data inconsisently.  Ususally these booking fields are provided\n   * for related booking data, but on occasion the full Booking class is used.\n   */\n\n  /** Unique Booking ID for the catering order */\n  readonly booking_id: string;\n  /** \n   * Timestamp based booking time of the booking associated with the order\n   * \n   * Must be provide as the true Booking startDateTz or as a new DateTZ with \n   * the correct date: timestamp, local_tz = false and bulding_tz values\n   */\n  readonly booking_date: number;\n  /**\n   * Timezone of the booking associated with the order\n   */\n  readonly booking_timezone: string;\n  /** ID of the location to deliver the items to */\n  location_id: string = '';\n  /** Display text for the location to deliver the items to */\n  location: string = '';\n  /**\n   * Smart timezone aware catering datetime with timezone\n   */\n  readonly bookingDateTz: DateTZ;\n\n  /** \n   * Booking associated with the order \n   * \n   * The booking attached to the CateringOrder is a special case used \n   * mainly on the Concierge catering reports because someone created \n   * a bad pattern to save catering changes to the booking.  \n   * \n   * Avoid when possible.\n   */\n  public booking: Booking = null;\n\n  /**\n   * Catering specific fields\n   * \n   * The app handles booking data inconsisently.  Ususally these booking fields are provided\n   * for related booking data, but on occasion the full Booking class is used.\n   */\n\n  /** Whether the order status change is loading */\n  public loading: boolean;\n  /** Unique ID for the catering order */\n  readonly id: string;\n  /** Number of minutes after the start of the associated meeting to delivery the order */\n  readonly delivery_time: number = 0;\n  /** Status of the catering order */\n  readonly status: CateringOrderStatus;\n  /** Whether items in the order need to be prepared in the kitchen */\n  readonly kitchen: boolean;\n  /** Whether items in the order are in the pantry */\n  readonly pantry: boolean;\n  /** List of items */\n  readonly items: readonly (CateringItem | CateringCategory)[] = [];\n  /** Creation time of the order */\n  readonly created_at: number;\n  /** Charge code associated with the order */\n  readonly charge_code: string;\n  /** Notes associated with the order */\n  readonly notes: string;\n  // /** Mapping of properties to their changes */\n  // private _changes: HashMap = {};\n  /** Map of local property names to server ones */\n  protected _server_names: HashMap<string> = {};\n  /** Currency code for the location of the order */\n  public symbol: string;\n  /** Whether the is an error with the order */\n  public error: boolean;\n\n\n  constructor(data: HashMap) {\n    /** \n     * Setup Defaults when raw_data values are not provided\n     */\n    const nowTz = DateNow(new Date());\n    // now rounded to the next 5 minute increment\n    const defaultStartTz = nowTz.setValue({ minute: Math.ceil(nowTz.minutes / 5) * 5 });\n    const defaultLocalTimezone = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone;\n\n    this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n\n    // If the booking is provided default the booking values to the true booking values\n    this.booking = data.booking || null;\n\n    \n    // Has a booking so init with those values\n    if (this.hasBookingAttached) {\n      this.booking_date = this.booking.startDateTz.ms;\n      this.booking_timezone = this.booking.timezone;\n      this.bookingDateTz = this.booking.startDateTz;\n      this.location_id = data.location_id || '';\n      this.location = data.location || '';\n    } else {\n      this.booking_date = data.booking_date || defaultStartTz.ms;\n      this.booking_timezone = data.booking_timezone || defaultLocalTimezone;\n      this.bookingDateTz = new DateTZ({ date: this.booking_date, is_local_tz: false, building_tz: this.booking_timezone });\n      this.location_id = data.location_id || '';\n      this.location = data.location || '';\n    }\n    \n    this.delivery_time = typeof data.delivery_time === 'number' ? data.delivery_time : 0;\n    this.status = data.status || 'accepted';\n    this.charge_code = data.charge_code || data.code;\n    this.notes = data.notes;\n    this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n    this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n    this.symbol = data.symbol || 'USD';\n    this.items = (data.items || [])\n      .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n      .filter(item => !!item.amount);\n  }\n\n  /** Special Case, check if a full booking is attached */\n  public get hasBookingAttached(): boolean {\n    return !!this.booking;\n  }\n\n  /** Display string for the types of items in the order */\n  public get type(): string {\n    let type = '';\n    /* istanbul ignore else */\n    if (this.kitchen) type += 'Kitchen';\n    /* istanbul ignore else */\n    if (this.pantry) {\n      /* istanbul ignore else */\n      if (type) type += ' + ';\n      type += 'Pantry';\n    }\n    return type;\n  }\n\n  /** Total cost of the order */\n  public get total(): number {\n    return this.items.reduce((total, item) => total + (item.total || 0), 0);\n  }\n\n  /** Total number of items in the order */\n  public get item_count(): number {\n    return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n  }\n\n  public get deliver_date(): DateTZ {\n    return (this.bookingDateTz || this.booking?.startDateTz).addValue({ minutes: this.delivery_time })\n  }\n\n  /** Display string for the delivery time of the order (short version) */\n  public get deliver_at(): string {\n    return this.deliver_date.formatDate('h:mm a');\n  }\n\n  /** Display string for the delivery time of the order */\n  public get deliver_at_time(): string {\n    return this.deliver_date.formatDate('h:mma').toLocaleLowerCase();\n  }\n\n  /** Display string for the delivery date of the order */\n  public get deliver_on_date(): string {\n    return this.deliver_date.formatDate('dd MMM yyyy');\n  }\n\n  /**\n   * Make a copy of this object\n   */\n  public clone(): CateringOrder {\n      return new CateringOrder(this.toJSON());\n  }\n\n  /**\n   * Convert class object into plain object\n   */\n  public toJSON(this: CateringOrder): HashMap {\n    const obj: any = { ...this };\n    // Remove local private members\n    delete obj._server_names;\n    // Remove local public members\n    delete obj.booking;\n    delete obj.loading;\n    delete obj.bookingDateTz;\n\n    // Convert remaining members to be public\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      if (key[0] === '_') {\n        const new_key = this._server_names[key.substr(1)] || key.substr(1);\n        obj[new_key] = obj[key];\n        delete obj[key];\n      } else if (obj[key] === undefined) {\n        delete obj[key];\n      }\n    }\n    obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n\n    return obj;\n  }\n}\n","import { CateringItem } from './catering-item.class';\n\nexport const mergeCateringItemWithFormData = (existing: CateringItem, override: any) =>\n    new CateringItem({\n        ...(existing instanceof CateringItem ? existing.toJSON() : existing),\n        ...override\n    });\n","export * from './catering-item.class';\nexport * from './catering-category.class';\nexport * from './catering-menu.service';\nexport * from './catering-order.class';\nexport * from './catering-categories.service';\nexport * from './catering-items.service';\nexport * from './catering.utilities';\nexport * from './catering-notes.service';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class DataCommonModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription\n} from 'rxjs';\n\nimport {\n  HashMap,\n  unique\n} from '@mckinsey-converge/base';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HotkeysService {\n  /** Map of subjects which store press states of keys */\n  private keydown_states: HashMap<BehaviorSubject<number>> = {};\n  /** Map of obserers for key state subjects */\n  private keydown_observers: HashMap<Observable<number>> = {};\n  /** List of keys at the end of a combination */\n  private combo_end: string[] = [];\n  /** List of registered hotkey combinations */\n  private registered_combos: string[][] = [];\n  /** Counter for the number of keydown events. Used for checking order of key presses */\n  private counter: number = 0;\n  /** Last key code to be pressed */\n  private last_down: string;\n\n  constructor() {\n    window.addEventListener('keydown', (event: KeyboardEvent) => {\n      const code = this.mapKey((event.code || '').toLowerCase());\n      /* istanbul ignore else */\n      if (this.last_down !== code) {\n        /* istanbul ignore else */\n        if (!this.keydown_states[code]) {\n          this.keydown_states[code] = new BehaviorSubject(null);\n          this.keydown_observers[code] = this.keydown_states[code].asObservable();\n        }\n        this.keydown_states[code].next(++this.counter);\n        /* istanbul ignore else */\n        if (this.combo_end.indexOf(code) >= 0) {\n          event.preventDefault();\n        }\n        this.last_down = code;\n      }\n    });\n\n    window.addEventListener('keyup', (event: KeyboardEvent) => {\n      const code = this.mapKey((event.code || '').toLowerCase());\n      /* istanbul ignore else */\n      if (this.keydown_states[code]) {\n        this.keydown_states[code].next(null);\n      }\n      /* istanbul ignore else */\n      if (this.last_down === code) {\n        this.last_down = null;\n      }\n    });\n  }\n\n  /**\n   * Listen to the given key combination\n   * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n   * @param next Callback for combination presses\n   */\n  public listen(combo: string | string[], next: () => void): Subscription {\n    combo = (combo instanceof Array ? combo : combo.split('+'));\n    const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n    /* istanbul ignore else */\n    if (combination.length > 0 && this.validCombination(combination)) {\n      this.registered_combos.push(combination);\n      const last_key = combination[combination.length - 1];\n      /* istanbul ignore else */\n      if (!this.keydown_states[last_key]) {\n        this.keydown_states[last_key] = new BehaviorSubject(null);\n        this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n      }\n      this.updateCombinationEndList();\n      return this.keydown_observers[last_key].subscribe((count) => {\n        /* istanbul ignore else */\n        if (count) {\n          const presses: number[] = [];\n          /* istanbul ignore else */\n          if (combination.length > 0) {\n            // Check that keys are pressed\n            for (const key of combination) {\n              const state = this.keydown_states[key];\n              presses.push(state ? state.getValue() || -1 : -1);\n            }\n            // Check that keys are pressed in the correct order\n            for (let i = 0; i < combination.length - 1; i++) {\n              if (presses[i] > presses[i + 1]) {\n                return;\n              }\n            }\n          }\n          const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n          /* istanbul ignore else */\n          if (total >= combination.length) {\n            next();\n          }\n        }\n      });\n    }\n    return null;\n  }\n\n  /**\n   * Map key codes with multiple versions to simple form\n   * @param code Code to transform\n   */\n  private mapKey(code: string): string {\n    /* istanbul ignore else */\n    if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n      return code.replace('left', '').replace('right', '');\n    }\n    return code;\n  }\n\n  /**\n   * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n   */\n  private updateCombinationEndList(): void {\n    const key_list = [];\n    for (const combo of this.registered_combos) {\n      this.combo_end.push(combo[combo.length - 1]);\n    }\n    this.combo_end = unique(key_list);\n  }\n\n  /**\n   * Checks if the given hotkey combination is allowed and valid\n   * @param combo Array of key codes\n   */\n  private validCombination(combo: string[]): boolean {\n    let non_meta = 0;\n    for (const key of combo) {\n      /* istanbul ignore else */\n      if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n        non_meta++;\n      }\n    }\n    return non_meta > 0;\n  }\n}\n","export * from './location.class';\nexport * from './location.service';\n","import { HashMap } from '@mckinsey-converge/base';\n\nimport { Organisation } from '../organisation/organisation.class';\nimport {\n    ServiceLike,\n    ServiceManager\n} from '../service-manager.class';\nimport { BuildingLevel } from '../organisation/level.class';\n\nexport class MapLocation {\n  /** ID of the element on the associated map */\n  public readonly id?: string;\n  /** Name of the location */\n  public readonly name?: string;\n  /** X coordinate of the location */\n  public readonly x?: number;\n  /** Y coordinate of the location */\n  public readonly y?: number;\n  /** Level details for the location */\n  public readonly level: BuildingLevel;\n  /** Whether the position is fixed */\n  public readonly fixed: boolean;\n  /** Accuracy of the location when not fixed */\n  public readonly confidence?: number;\n  /** Whether location is at a desk */\n  public readonly at_desk?: boolean;\n  /** Whether location is set */\n  public readonly empty: boolean;\n\n  /** Service for managing model on the server */\n  protected get _service(): ServiceLike {\n    return ServiceManager.serviceFor(MapLocation);\n  }\n\n  /** Display string for the building and level of the location */\n  public get display(): string {\n    const service = ServiceManager.serviceFor(Organisation);\n    if (!service) {\n      return this.level.name;\n    }\n    const bld = service.buildings.find((bld) => bld.id === this.level.building_id);\n    return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n  }\n\n  /** Whether location is in a different building from the active one */\n  public get in_another_building(): boolean {\n    const service = ServiceManager.serviceFor(Organisation);\n    return service && service.building.id !== this.level.building_id;\n  }\n\n  constructor(raw_data: HashMap) {\n    this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n    this.name = raw_data.name || '';\n    this.x = raw_data.x\n      ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n      : null;\n    this.y = raw_data.y\n      ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n      : null;\n    const service = ServiceManager.serviceFor(Organisation);\n    this.level =\n      raw_data.level instanceof BuildingLevel\n        ? raw_data.level\n        : service\n        ? service.levelWithID(raw_data.level)\n        : new BuildingLevel(raw_data.level);\n    this.fixed = this.x === null && this.y === null;\n    this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n    this.at_desk = this.id && this.id.indexOf('area-') === 0;\n    this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n  }\n\n  /** Normalise the given value within the max */\n  private normalise(value: number, max: number): number {\n    return value / (max * 1.0);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { MapLocation } from './location.class';\nimport { HashMap } from '@mckinsey-converge/base';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocationService extends BaseAPIService {\n    constructor(protected _composer: ComposerService,\n                settingsService: SettingsService) {\n        super(_composer, settingsService);\n        ServiceManager.setService(MapLocation, this);\n        this._name = 'Location';\n        this._api_route = 'people';\n    }\n\n    public add(...args): never {\n        throw new Error('Create not allowed for location service')\n    }\n\n    public update(...args): never {\n        throw new Error('Update not allowed for location service')\n    }\n\n    public delete(...args): never {\n        throw new Error('Delete not allowed for location service')\n    }\n\n    public process(item: HashMap) {\n        return new MapLocation(item) as any;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport {\n    getItemWithKeys,\n    HashMap,\n    Identity\n} from '@mckinsey-converge/base';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface BuildingCity {\n    timezone: string\n    name: string\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Custom booking rules for the map */\n    readonly other_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n    /** Link for more details */\n    readonly link?: { url?: string, name?: string };\n    /**\n     * Allow buildings to define their own rules formats where needed or for special messages.\n     */\n    readonly custom_html?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Service for managing buildings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** The city the building belongs in **/\n    public readonly city: string;\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || {};\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map(i => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name\n        }));\n        this.loan_items = (raw_data.loan_items || disc_info.loan_items || []).map(i => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(i => new BuildingLevel({\n            ...i,\n            building_id: this.id\n        }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || {\n            start: 7,\n            end: 20\n        };\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.searchables = searchables;\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || {};\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n        this.city = raw_data.city || disc_info.city || 'No City';\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings) || getItemWithKeys(['discovery_info', ...keys], this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","export * from './building.class';\nexport * from './level.class';\nexport * from './organisation.class';\nexport * from './organisation.service';\n","import { HashMap } from 'libs/base/src/lib/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: HashMap = {}) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport {\n  getItemWithKeys,\n  HashMap\n} from '@mckinsey-converge/base';\n\n/* istanbul ignore next */\n\nexport class Organisation extends BaseDataClass {\n  /** List of available building zone ids for the organisation */\n  public readonly available_buildings: readonly string[];\n  /** Map of custom settings for the building */\n  private _settings: HashMap;\n\n  constructor(raw_data: HashMap = {}) {\n    super(raw_data);\n    this._settings = raw_data.settings || {};\n    this.available_buildings = (raw_data.settings?.discovery_info?.buildings || []).map(\n      (bld) => bld.zone_id\n    );\n  }\n\n  /**\n   * Get a custom building setting\n   * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n   */\n  public setting(key: string): any {\n    const keys = key.split('.');\n    const value = getItemWithKeys(keys, this._settings);\n    return value;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n  ApplicationLoadingState,\n  HashMap,\n  Identity\n} from '@mckinsey-converge/base';\nimport { BuildingLevel } from './level.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users';\nimport { SettingsService } from '../settings.service';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n  /** Organisation data for the application */\n  private _organisation: Organisation;\n  /** Actively displayed building */\n  private _active_building: string;\n\n  private _spaceTypesSubject: Subject<Identity[]> = new Subject<Identity[]>();\n\n  constructor(\n    protected _composer: ComposerService,\n    private _service: ApplicationService,\n    private _users: UsersService,\n    settingsService: SettingsService,\n  ) {\n    super(_composer, settingsService);\n    ServiceManager.setService(Organisation, this);\n    ServiceManager.setService(Building, this);\n    this._name = 'Organisation';\n    this._api_route = 'zones';\n    this.set('buildings', []);\n    this.set('active_building', null);\n    this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n  }\n\n  /**\n   * Add is not available on organisation service\n   */\n  public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n    throw new Error('Add is not available on the organisation service');\n  }\n\n  /**\n   * Update is not available on organisation service\n   */\n  public async update(\n    id: string,\n    form_data: HashMap,\n    query_params?: HashMap\n  ): Promise<Organisation> {\n    throw new Error('Update is not available on the organisation service');\n  }\n\n  /**\n   * Delete is not available on organisation service\n   */\n  public async delete(id: string): Promise<void> {\n    throw new Error('Delete is not available on the organisation service');\n  }\n\n  /**\n   * Get list of levels for the given building ID\n   * @param bld_id Building ID\n   */\n  public levels(bld_id: string): readonly BuildingLevel[] {\n    return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n  }\n\n  /**\n   * Get a setting from the organisation or active building\n   * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n   */\n  public setting(key: string) {\n    return this.building.setting(key) || this._organisation.setting(key);\n  }\n\n  /** Active building */\n  public get building(): Building {\n    return this.buildings.find((i) => i.id === this._active_building);\n  }\n\n  /** List of types of spaces */\n  public get space_types(): Identity[] {\n    return this.get('space_types') || [];\n  }\n\n  public set building(bld: Building) {\n    if (bld instanceof Building) {\n      this._active_building = bld.id;\n    } else {\n      this._active_building = bld;\n    }\n    this.set('active_building', this.building);\n    this.loadSpaceTypes();\n    localStorage.setItem('PlaceOS.building', this._active_building);\n    localStorage.setItem('CONCIERGE.timezone', bld.timezone);\n  }\n\n  /** List of buildings for the organisation */\n  public get buildings(): Building[] {\n    return this.get<Building[]>('buildings') || [];\n  }\n\n  /**\n   * Get list of available equipment\n   * @param id ID of the building to get the list from. i.e. Defaults to the active building\n   */\n  public getExtras(id: string, bld_id?: string) {\n    const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n    if (bld && id) {\n      return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the first level matching the list of given IDs\n   * @param ids List of ID to search with\n   */\n  public levelWithID(ids: string | string[]): BuildingLevel {\n    const list = ids instanceof Array ? ids : [ids];\n    const bld_list = this.buildings;\n    for (const id of list) {\n      for (const bld of bld_list) {\n        for (const lvl of bld.levels) {\n          if (lvl.id === id) {\n            return lvl;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Initialise service data\n   */\n  protected async load(): Promise<void> {\n    /* istanbul ignore else */\n    if (localStorage) {\n      this._active_building = localStorage.getItem(`${this.settingsService.frontend.toUpperCase()}.building`);\n    }\n    const loading: ApplicationLoadingState = this._service.get('loading') || {};\n    loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n    await this.loadOrganisation();\n    loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n    loading.buildings = { message: 'Loading building data', state: 'loading' };\n    this._service.set('loading', loading);\n    await this.loadBuildings();\n    loading.buildings = { message: 'Loading building data', state: 'complete' };\n    loading.levels = { message: 'Loading building floor data', state: 'loading' };\n    this._service.set('loading', loading);\n    await this.loadLevels();\n    loading.levels = { message: 'Loading building floor data', state: 'complete' };\n    this._service.set('loading', loading);\n    loading.space_types = { message: 'Loading space type data', state: 'loading' };\n    this._service.set('loading', loading);\n    await this.loadSpaceTypes();\n    loading.space_types = { message: 'Loading space type data', state: 'complete' };\n    this._service.set('loading', loading);\n    const user = this._users.current;\n\n    if (user) {\n      const id = localStorage.getItem('PlaceOS.building');\n      const building = this.buildings.find(bld => id && bld.id === id) || this.buildings.find((bld) => bld.code === user.location);\n      if (building) {\n        this._active_building = building.id;\n        this.set('active_building', building);\n      } else if(this.building) {\n        // This conditional solves a problem of infinite loop when user building doesn't exist.\n        this._active_building = this.building.id;\n        this.set('active_building', this.building);\n      }\n    }\n  }\n\n  /**\n   * Load organisation data for application\n   */\n  public async loadOrganisation(): Promise<Organisation> {\n    const org_data = await this.query({ tags: 'org', engine: true });\n    this._organisation = new Organisation(org_data[0]);\n    this.set('organisation', this._organisation);\n    return this._organisation;\n  }\n\n  /**\n   * Load building data for the organisation already stored in the service..\n   */\n  public async loadBuildings(): Promise<Building[]> {\n    return this.loadBuildingsWithOrg(this._organisation);\n  }\n\n  /**\n   * Load building data for the organisation passed.\n   */\n  public async loadBuildingsWithOrg(organisation: Organisation): Promise<Building[]> {\n    const bld_data = await this.query({ tags: 'building', engine: true, limit: 1000 });\n    const buildings = (bld_data as HashMap[])\n      .map((i) => new Building(i))\n      .filter((bld) => organisation.available_buildings.includes(bld.id));\n    this.set('buildings', buildings);\n    /* istanbul ignore else */\n    if (!this._active_building && buildings && buildings.length > 0) {\n      this._active_building = buildings[0].id;\n    }\n    return buildings;\n  }\n\n  /**\n   * Load level data for the buildings\n   */\n  public async loadLevels(): Promise<BuildingLevel[]> {\n    const lvl_data = await this.query({ tags: 'level', engine: true, limit: 1000 });\n    const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n    this.set('levels', levels);\n    return levels;\n  }\n\n  /**\n   * Load space type data for the buildings\n   */\n  public async loadSpaceTypes(): Promise<void> {\n    const type_data = await this.query({ tags: 'room', engine: true, limit: 1000, building_id: this._active_building });\n    const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n    this.set('space_types', types);\n    // Emit the updated space_types\n    this._spaceTypesSubject.next(types);\n  }\n\n    /**\n     * Observable to listen for changes in space_types\n     */\n    public get spaceTypesObservable(): Observable<Identity[]> {\n      return this._spaceTypesSubject.asObservable();\n    }\n\n  public getOrganizationFiltersByRoomType(key: string) {\n    if (!this._organisation) {\n      return {}\n    }\n    const discovery_info = this._organisation.setting('discovery_info')\n\n    return discovery_info && discovery_info[key] ? discovery_info[key] : {}\n  }\n\n  public getRoomTypeSubsetDDOptions(type:string) {\n    const filters = this.getOrganizationFiltersByRoomType(type) || {}\n    return [...Object.keys(filters).map((key) => {\n        const display = filters[key].toString();\n        return {\n            display,\n            value: key,\n            meta: {}\n        }\n    }) ];\n  }\n\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, of, Subject, Subscriber } from 'rxjs';\n\nimport { BaseAPIService } from './base.service';\nimport { BaseClass, HashMap } from '@mckinsey-converge/base';\nimport { ApplicationService } from './app.service';\nimport { toQueryString } from './api.utilities';\nimport { SettingsService } from './settings.service';\nimport { catchError, map } from 'rxjs/operators';\n\nexport interface IEngineResponse {\n  results: HashMap[];\n  total: number;\n}\n\nexport class PaginatedAPIService<T extends {} = BaseAPIService> extends BaseClass {\n  /** Application service */\n  public parent: ApplicationService;\n  /** Display name of the service */\n  protected _name: string;\n  /** API Route of the service */\n  protected _api_route: string;\n  /** Map of state variables for Service */\n  protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n  /** Map of observables for state variables */\n  protected _observers: { [key: string]: Observable<any> } = {};\n  /** Map of poll subscribers for API endpoints */\n  protected _subscribers: { [key: string]: Subscriber<any> } = {};\n  /** Map of promises for Service */\n  protected _promises: { [key: string]: Promise<any> } = {};\n  /** Comparison function for service items */\n  protected _compare: (a: T, b: T) => boolean = (a, b) =>\n    a === b || (a as any).id === (b as any).id;\n  /** Default filter function for list method */\n  protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n  /** Http Client */\n  protected get http() {\n    return this._composer.http;\n  }\n\n  constructor(protected _composer: ComposerService,\n              protected settingsService: SettingsService) {\n    super();\n    this._name = 'Base';\n    this._api_route = 'base';\n    this.set('list', []);\n  }\n\n  /**\n   * Injects concierge into form_data.\n   */\n  private injectConcierge(form_data: HashMap) {\n      // we only send it over when concierge, since the BE may check for presence rather than\n      // if its true or not.\n      if (this.settingsService.concierge) {\n          return { ...form_data, concierge: true }\n      }\n      return form_data;\n  }\n\n  /**\n   * Initailise service\n   */\n  public init() {\n    this.load().then(\n      (_) => this._initialised.next(true),\n      (err) => this.timeout('init', () => this.init(), 1000)\n    );\n  }\n\n  /**\n   * Get API route for the service\n   * @param engine Whether endpoint is using the application API or engine API\n   */\n  public route(engine: boolean = false) {\n    const endpoint = engine\n      ? this._composer.auth.api_endpoint\n      : '/api/staff';\n    return `${endpoint}/${this._api_route}`;\n  }\n\n  /** API Route of the service */\n  public get api_route() {\n    return this._api_route;\n  }\n\n  /**\n   * Get the current value of the named property\n   * @param name Property name\n   */\n  public get<U = any>(name: string): U {\n    if (!this._observers[name]) {\n      this.set<U>(name, null);\n    }\n    return (this._subjects[name] as BehaviorSubject<U>).getValue();\n  }\n\n  /**\n   * Listen to value change of the named property\n   * @param name Property name\n   * @param next Callback for value changes\n   */\n  public listen<U = any>(name: string): Observable<U> {\n    if (!this._observers[name]) {\n      this.set<U>(name, null);\n    }\n    return this._observers[name];\n  }\n\n  /**\n   * Update the value of the named property\n   * @param name Property name\n   * @param value New value\n   */\n  protected set<U = any>(name: string, value: U): void {\n    if (!this._subjects[name]) {\n      this._subjects[name] = new BehaviorSubject<U>(value);\n      this._observers[name] = this._subjects[name].asObservable();\n    } else {\n      this._subjects[name].next(value);\n    }\n  }\n\n  /**\n   * Get list of loaded items\n   * @param predicate Function for filtering the list\n   */\n  public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list: T[] = this.get('list');\n        return list.filter(predicate);\n  }\n\n  /**\n   * Get item with the given id from the loaded items\n   * @param id ID of the item\n   */\n  public find(id: string): T {\n    const list = this.get('list');\n    return list.find((i) => i.id === id || (i.email?.toLowerCase() === id?.toLowerCase()));\n  }\n\n  /**\n   * Query the index of the API route associated with this service\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public query(query_params: HashMap = {}, config: { url?: string } = {}): Promise<T> {\n    let engine = false;\n    let cache = 1000;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n      cache = query_params.cache || 1000;\n      delete query_params.cache;\n    }\n    const query = toQueryString(query_params);\n    const key = `query|${query}`;\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise((resolve, reject) => {\n        const url = config && config.url ? `${config.url}${query ? '?' + query : ''}` : `${this.route(engine)}${query ? '?' + query : ''}`;\n        let result: IEngineResponse;\n        this.http.get(url).subscribe(\n          (d: IEngineResponse | HashMap[]) => {\n            if (d && d instanceof Array) {\n              const results = d.map((i) => this.process(i));\n              result = {\n                results,\n                total: results.length,\n              }\n            } else if (d && !(d instanceof Array) && d.results && d.total) {\n              const results = d.results.map((i) => this.process(i));\n              result = {\n                results,\n                total: d.total,\n              }\n            } else if (d && !(d instanceof Array) && d.results) {\n              const results = d.results.map((i) => this.process(i));\n              result = {\n                results,\n                total: results.length,\n              }\n            } else {\n              result = {\n                results: [],\n                total: 0,\n              }\n            }\n          },\n          (e) => {\n            reject(e);\n            this._promises[key] = null;\n          },\n          () => {\n            resolve(result);\n            this.timeout(key, () => (this._promises[key] = null), cache);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * \n   * @param query_params \n   * @param config \n   * @returns \n   */\n  queryHoldingBay(query_params: HashMap = {}, config: { url?: string } = {}):Observable<any> {\n    const query = toQueryString(query_params);\n    const url =  `${config.url}${query ? '?' + query : ''}`;\n    return this.http.get(url).pipe(\n      map((d: IEngineResponse | HashMap[]) =>  this.processApiResult(d) ),\n      catchError(<T>(error: any, result?: T) => {\n        console.log(error);\n        return of(result as T);\n        })\n    );\n  }\n\n  /**\n   * \n   * @param d \n   * @returns \n   */\n  processApiResult(d: IEngineResponse | HashMap[]): IEngineResponse{\n    let result: IEngineResponse;\n    if (d && d instanceof Array) {\n      const results = d.map((i) => this.process(i));\n      result = {\n        results,\n        total: results.length,\n      }\n    } else if (d && !(d instanceof Array) && d.results && d.total) {\n      const results = d.results.map((i) => this.process(i));\n      result = {\n        results,\n        total: d.total,\n      }\n    } else if (d && !(d instanceof Array) && d.results) {\n      const results = d.results.map((i) => this.process(i));\n      result = {\n        results,\n        total: results.length,\n      }\n    } else {\n      result = {\n        results: [],\n        total: 0,\n      }\n    }\n    return result;\n  }\n  \n\n  /**\n   * Query the API route for a sepecific item\n   * @param id ID of the item\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public show(id: string, query_params: HashMap = {}): Promise<T> {\n    let engine = false;\n    /* istanbul ignore else */\n    if (query_params) {\n      engine = !!query_params.engine;\n      delete query_params.engine;\n    }\n    const query = toQueryString(query_params);\n    const key = `show|${id}|${query}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<T>((resolve, reject) => {\n        const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.get(url).subscribe(\n          (d) => {\n            result = this.process(d);            \n          },\n          (e) => {\n            reject(e);\n            this._promises.new_item = null;\n          },\n          () => {\n            resolve(result);\n            this.timeout(key, () => (this._promises[key] = null), 1000);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * Make post request for a new item to the service\n   * @param form_data Data to post to the server\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n    /* istanbul ignore else */\n    if (!this._promises.new_item) {\n      this._promises.new_item = new Promise<T>((resolve, reject) => {\n        const query = toQueryString(query_params);\n        const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.post(url, this.injectConcierge(form_data)).subscribe(\n          (d) => (result = this.process(d)),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n            this._promises.new_item = null;\n          },\n          () => {\n            resolve(result);\n            this.set('list', this.updateList(this.get('list'), [result]));\n            this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n            this._promises.new_item = null;\n          }\n        );\n      });\n    }\n    return this._promises.new_item;\n  }\n\n  /**\n   * Perform API task for the given item ID\n   * @param id ID of the item\n   * @param task_name Name of the task\n   * @param form_data Map of data to pass to the API\n   * @param method Verb to use for request\n   */\n  public task<U = any>(\n    id: string,\n    task_name: string,\n    form_data: HashMap = {},\n    method: 'post' | 'get' = 'post'\n  ): Promise<U> {\n    const query = toQueryString(this.injectConcierge(form_data));\n    const key = `task|${id}|${task_name}|${query}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<U>((resolve, reject) => {\n        const post_data = { ...form_data, id, _task: task_name };\n        const url = `${this.route(false)}/${id}/${task_name}`;\n        let result: any;\n        const request =\n          method === 'post'\n            ? this.http.post(url, post_data)\n            : this.http.get(`${url}${query ? '?' + query : ''}`);\n        request.subscribe(\n          (d) => (result = d),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(\n              `${this._name.toLowerCase()}-task-${task_name}-failed`,\n              id\n            );\n            delete this._promises[key];\n          },\n          () => {\n            resolve(result as U);\n            this.analyticsEvent(\n              `${this._name.toLowerCase()}-task-${task_name}-success`,\n              id\n            );\n            this.timeout(key, () => delete this._promises[key], 1000);\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n\n  /**\n   * Make put request for changes to the item with the given id\n   * @param id ID of the item being updated\n   * @param form_data New values for the item\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n  public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n    const key = `update|${id}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<T>((resolve, reject) => {\n        const query = toQueryString(this.injectConcierge(query_params));\n        const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n        let result: T = null;\n        this.http.put(url, this.injectConcierge(form_data)).subscribe(\n          (d) => (result = this.process(d)),\n          (e) => {\n            reject(e);\n            this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n            this._promises[key] = null;\n          },\n          () => {\n            resolve(result);\n            this.set(\n              'list',\n              this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                result\n              ])\n            );\n            this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n            this._promises[key] = null;\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * Make delete request for the given item\n   * @param id ID of item\n   */\n  public delete(id: string, q: HashMap = {}): Promise<void> {\n    const key = `delete|${id}`;\n    /* istanbul ignore else */\n    if (!this._promises[key]) {\n      this._promises[key] = new Promise<void>((resolve, reject) => {\n        const query = toQueryString(q);\n        const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n        this.http.delete(url).subscribe(\n          (_) => null,\n          (e) => {\n            reject(e);\n            this._promises[key] = null;\n          },\n          () => {\n            this.set('list', this.removeItem(this.get('list'), { id } as any));\n            this._promises[key] = null;\n            resolve();\n          }\n        );\n      });\n    }\n    return this._promises[key];\n  }\n\n  /**\n   * Load initial data for the service\n   */\n  protected async load(): Promise<void> {\n  }\n\n  /**\n   * Post analytics event for this service\n   * @param action Name of the action to post\n   */\n  protected analyticsEvent(action: string, label?: string) {\n    // if (this.parent && this.parent.Analytics) {\n    //     this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    // }\n  }\n\n  /**\n   * Convert raw API data into a valid API Object\n   * @param raw_item Raw API data\n   */\n  protected process(raw_item: HashMap): T {\n    return raw_item as T;\n  }\n\n  /**\n   * Update recorded list of items\n   * @param old_list Old list of items\n   * @param list List of updated items\n   * @param compareFn Function to compare items to remove duplicates\n   */\n  public updateList(\n    old_list: T[],\n    list: T[],\n    compareFn: (a: T, b: T) => boolean = this._compare\n  ): T[] {\n    /* istanbul ignore else */\n    if (!list || list.length === 0) {\n      return old_list;\n    }\n    const new_list: T[] = [];\n    const mixed_list = [...list, ...old_list];\n    /* istanbul ignore else */\n    if (!compareFn) {\n      compareFn = this._compare;\n    }\n    for (const item of mixed_list) {\n      const found = new_list.find((i) => compareFn(i, item));\n      /* istanbul ignore else */\n      if (!found) {\n        new_list.push(item);\n      }\n    }\n    return new_list;\n  }\n\n  /**\n   * Remove the given item from the given list\n   * @param list List of items\n   * @param item Item to remove\n   * @param compareFn Function to compare items\n   */\n  protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n    const new_list = [];\n    /* istanbul ignore else */\n    if (!compareFn) {\n      compareFn = this._compare;\n    }\n    list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n    return new_list;\n  }\n}\n","import { FormGroup } from \"@angular/forms\";\nimport { HashMap } from \"@mckinsey-converge/base\"\nimport { DateNow, DateTZ } from \"@mckinsey-converge/date-tz\"\n\nexport enum RecurrencePeriod {\n    LIST = 'list',\n    DAILY = 'daily',\n    WEEKLY = 'weekly',\n    //RELATIVE_MONTHLY = 'relativeMonthly', for the moment we will only support absoluteMonthly\n    ABSOLUTE_MONTHLY = 'monthly'\n}\n\nexport enum DaysOfWeek {\n    SUNDAY = 'sunday',\n    MONDAY = 'monday',\n    TUESDAY = 'tuesday',\n    WEDNESDAY = 'wednesday',\n    THURSDAY = 'thursday',\n    FRIDAY = 'friday',\n    SATURDAY = 'saturday'\n\n}\n\nexport enum SeriesAction {\n    EDIT = 'edit',\n    CLONE = 'clone'\n}\n\nexport enum BookingAction {\n    CLONE = 'booking_clone',\n    EDIT = 'booking_edit'\n}\n\nexport interface WeekDays {\n    id: string;\n    active: boolean;\n    day_index: number;\n    full_name: string;\n}\n\nexport interface RepeatPeriod {\n    id: RecurrencePeriod;\n    label: string\n}\n\nexport enum RepeatsOn {\n    PATTERN = 'pattern',\n    DATE = 'date'\n}\n\nexport interface RecurrenceType {\n    type: RepeatsOn;\n    label: string;\n}\n\nexport interface RecurrenceDetails {\n    period: RecurrencePeriod,\n    end: DateTZ,\n    list: Array<DateTZ>\n    interval: number\n}\n\nexport interface RecurrenceRecurringDetails extends RecurrenceDetails {\n    start: number\n}\n\nexport const recurrencePeriodToDurationType = (period: RecurrencePeriod) =>{\n    switch (period) {\n        case RecurrencePeriod.DAILY:\n            return 'days'\n        case RecurrencePeriod.WEEKLY:\n            return 'weeks' \n        case RecurrencePeriod.ABSOLUTE_MONTHLY:\n            return 'months' \n        default:\n            return 'days'\n    }\n}\n\n/**\n * Generate weekdays from monday to saturday\n */\nexport const generateWeekDays = (date: number, params: { building_tz?: string } = {}): Array<WeekDays>=> {\n    const { building_tz } = params;\n    let start_week = DateNow(new Date()).startOfValue('week').addValue({days : 1}); //set monday as start of week\n    const week_days: Array<WeekDays> = []\n    for (let i = 1; i <= 7; i++) {\n        const activeDate = new DateTZ({date, building_tz, is_local_tz: false })\n        const active = activeDate.dateWeekday === i\n        const full_name = start_week.formatDate('EEEE')\n        const day_index = i === 7 ? 0 : i //Sunday must be indexed as day 0\n        week_days.push({id: full_name.substring(0, 1), active, day_index, full_name: full_name.toLocaleLowerCase()});\n        start_week = start_week.addValue({ days : 1 });\n    }\n    return week_days\n}\n\nexport const getFirstDateFromList = (list: Array<DateTZ>) => {\n    return list.reduce((a, b) => { return a.isBeforeDate(b) ? a : b; });\n}\n\nexport const getLastDateFromList = (list: Array<DateTZ>) => {\n    return list.reduce((a, b) => { return a.isAfterDate(b) ? a : b; });\n}\n\nexport const recurrenceDetails = (recurr: RecurrenceDetails): string => {\n    const end = getLastDateFromList(recurr.list).formatDate('ccc dd MMM yyyy')\n    const getPeriod = (period: string) => {\n        if(recurr.interval === 1){\n            return `Occurs Every ${period} until ${end}`\n        }else{\n            return `Occurs Every ${recurr.interval} ${period}s until ${end}`\n        }\n    } \n    \n    switch (recurr.period) {\n        case RecurrencePeriod.DAILY:\n            return getPeriod('Day')\n        case RecurrencePeriod.WEEKLY:\n            return getPeriod('Week')\n        case RecurrencePeriod.ABSOLUTE_MONTHLY:\n            return getPeriod('Month')\n        case RecurrencePeriod.LIST:\n            return `Occurs on Specific Dates until ${getLastDateFromList(recurr.list).formatDate('ccc dd MMM yyyy')}`\n        default:\n            return ''\n    }\n}\n\nexport const recurrenceRecurringDetails = (recurr: RecurrenceRecurringDetails): string => {\n    const end = recurr.end\n    const start = new DateTZ({ date: recurr.start })\n\n    const getPeriod = (period: string) => {\n        if(recurr.interval === 1){\n            return `occurs every ${period} effective ${start.formatDate('dd MMM yyyy')} until ${end.formatDate('dd MMM yyyy')}`\n        }else{\n            return `occurs every ${recurr.interval} ${period}s effective ${start.formatDate('dd MMM yyyy')} until ${end.formatDate('dd MMM yyyy')}`\n        }\n    }\n\n    switch (recurr.period) {\n        case RecurrencePeriod.DAILY:\n            return getPeriod('Day')\n        case RecurrencePeriod.WEEKLY:\n            return getPeriod('Week')\n        case RecurrencePeriod.ABSOLUTE_MONTHLY:\n            return getPeriod('Month')\n        case RecurrencePeriod.LIST:\n            return `occurs on Specific Dates`\n        default:\n            return ''\n    }\n}\n\nexport const handleRecurrenceFields = (data: HashMap) => {\n    if(data.is_recurrent){\n        if(data.recurrence_period !== RecurrencePeriod.LIST){\n            delete data.recurrence_starts\n            delete data.recurrence_endTz\n            if(data.recurrence_period !== RecurrencePeriod.WEEKLY){\n                delete data.recurrence_days\n            }\n        } else if(data.recurrence_period){\n            data.recurrence_list = [...(data.recurrence_starts || []).map((date: DateTZ) => date.startOfValue('minute').seconds)]\n            delete data.recurrence_interval;\n            delete data.recurrence_endTz;\n            delete data.recurrence_count;\n            delete data.recurrence_starts\n            delete data.recurrence_days\n        }\n        delete data.is_recurrent\n    }else{\n        delete data.recurrence_period;\n        delete data.recurrence_interval;\n        delete data.recurrence_endTz;\n        delete data.recurrence_count;\n        delete data.recurrence_starts\n        delete data.is_recurrent\n        delete data.recurrence_exceptions\n        delete data.recurrence_days\n    }\n\n    return data\n}\n\n/** Removes expired occurrences and updates start and end dates when cloning a series */\nexport const removeExpiredOcurrences = (form: FormGroup) =>{\n    if(form.controls.action?.value === SeriesAction.CLONE ){\n        const tz = form.controls.space_list.value[0].timezone\n        const date_now = new DateTZ({ is_local_tz: false, building_tz: tz });\n        const occurrences = form.controls.recurrence_starts.value.filter((date: DateTZ) =>\n            date_now.isBeforeDate(date, 'day') || date_now.isSameDate(date, 'day')\n        )\n        form.controls.recurrence_starts.setValue(occurrences)\n        const { start, end } = setStartAndEndDateFromArray(occurrences, tz)\n        form.controls.dateTz.setValue(start)\n        form.controls.recurrence_endTz.setValue(end)\n    }\n}\n\n/** \n * Returns starts and end dates from an array of dates in milliseconds \n **/\n export const setStartAndEndDateFromArray = (dates: Array<DateTZ>, tz: string): {start: DateTZ, end: DateTZ} =>{\n    if(dates.length !== 0){\n        return {\n            start: dates.sort((d1, d2) => d1.ms - d2.ms)[0] ,\n            end: dates.sort((d1, d2) => d2.ms - d1.ms)[0]\n        }\n    }\n    //if the dates array is empty set the start and end dates as the current and next day\n    const now = DateNow(new Date()).toZone(tz)\n    return {start: now, end: now.addValue({days: 1})}\n}\n\nexport const setRecurrenceStartsTime = (form: FormGroup) => {\n    const { recurrence_starts, dateTz } = form.value\n    const list = (recurrence_starts || []).map((date: DateTZ) => date.setValue({hour: dateTz.dateHour, minute: dateTz.minutes}))\n    form.controls.recurrence_starts.setValue(list)\n}","export * from './report.class'\nexport * from './reports.service'\n","import { CurrencyPipe } from '@angular/common';\n\nimport {\n    csvToJson,\n    downloadFile,\n    HashMap,\n    humaniseDuration,\n    jsonToCsv,\n} from '@mckinsey-converge/base';\n\nimport { ServiceManager } from '../service-manager.class';\nimport { Space } from '../spaces';\nimport { Organisation } from '../organisation';\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n\n    constructor(raw_data: HashMap = {}) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unnamed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    public formatCancelledBy(email: string) {\n        if (email !== null && email !== undefined) {\n            let name = email.split('@')[0];\n            name = name.split('_').join(' '); //get name from email and convert it to title case\n            name = name.replace(/\\w\\S*/g, function (txt) {\n                return `${txt\n                    .charAt(0)\n                    .toUpperCase()}${txt.substr(1).toLowerCase()}`;\n            });\n            return name;\n        } else {\n            return email;\n        }\n    }\n\n    public timeConverter( UNIX_timestamp: number ){\n        let a = new Date(UNIX_timestamp * 1000);\n        let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        let year = a.getFullYear();\n        let month = months[a.getMonth()];\n        let date = a.getDate();\n        let hour = ((a.getHours() + 11) % 12 + 1);\n        let suffix = a.getHours() >= 12 ? \"PM\":\"AM\";\n        let min = a.getMinutes();\n        let time = date + ' ' + month + ' ' + year + ' - ' + hour + ':' + min + ' ' + suffix;\n        return time;\n    }\n\n    private cleanData(data: T[] = []) {\n        if (data.length > 0 && this.type === 'day') {\n            for (let i = 0; i < data.length; i++) {\n                data[i]['booker'] = data[i]['booker'].name;\n                data[i]['expected_attendees'] = Object.values(data[i]['expected_attendees'])[0];\n            }\n        } else if (data.length > 0 && this.type === 'audit') {\n            for (let i = 0; i < data.length; i++) {\n                data[i]['created_at'] = this.timeConverter(data[i]['created_at']);\n            }\n        } else if (data.length > 0 && this.type === 'catering') {\n            for (let i = 0; i < data.length; i++) {\n                data[i]['Cancelled By'] = this.formatCancelledBy(\n                    data[i]['Cancelled By']\n                );\n            }\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(\n                (key) =>\n                    key.toLowerCase().includes('room') &&\n                    key.toLowerCase().includes('email')\n            );\n            const price_field = fields.find((key) =>\n                key.toLowerCase().includes('price')\n            );\n\n            for (let row of data) {\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(\n                        row[room_field].toLowerCase()\n                    );\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(\n                        (bld: { id: any }) =>\n                            bld.id === room?.level?.building_id\n                    );\n                    row[price_field] = new CurrencyPipe('en_us').transform(\n                        row[price_field] / 100,\n                        bld?.currency\n                    );\n                }\n                /* istanbul ignore else */\n                for (let field of fields) {\n                    row[field] =\n                        typeof row[field] === 'string'\n                            ? row[field].replace(/\\,/g, '٫')\n                            : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n            data = data.map((i: HashMap) => {\n                const booking = i;\n                try {\n                    if (booking.setup instanceof Object) {\n                        booking.setup = booking.setup[booking.room_email];\n                    }\n                    if (booking.breakdown instanceof Object) {\n                        booking.breakdown =\n                            booking.breakdown[booking.room_email];\n                    }\n                    booking.setup = humaniseDuration((booking.setup || 0) / 60);\n                    booking.breakdown = humaniseDuration(\n                        (booking.breakdown || 0) / 60\n                    );\n                    booking.description = (booking.description || '')\n                        .replace(/<[^>]*>?/gm, '')\n                        .replace(/\\,/g, '٫')\n                        .replace(/\\r?\\n|\\r/g, ' ');\n                    booking['Meeting Host'] =\n                        booking.organizer?.name || booking.organizer;\n                    booking['Booked By'] =\n                        booking.booked_by?.name ||\n                        booking.booked_by?.email ||\n                        '';\n                    booking.charge_code =\n                        booking.equipment_codes[booking.room_email] || '';\n                    //    booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n                    booking.attendees = (booking.attendees || [])\n                        .map((person) => person.name || person.email || person)\n                        .join('٫ ');\n                    booking.notes = (booking.notes || [])\n                        .map((note) =>\n                            note.author &&\n                            (note.type === 'description' ||\n                                note.type === 'private')\n                                ? `[${note.author}|${note.type}]${note.message\n                                      .replace(/<[^>]*>?/gm, '')\n                                      .replace(/\\,/g, '٫')\n                                      .replace(/\\r?\\n|\\r/g, ' ')}`\n                                : ''\n                        )\n                        .join(' | ');\n                    booking.cancelled = booking.isCancelled;\n                    booking.status = booking.status[booking.room_email] || '';\n                    booking.company = booking.company.join(', ');\n                    if (booking.cancelled_by) {\n                        booking.cancelled_by = this.formatCancelledBy(\n                            booking.cancelled_by\n                        );\n                    }\n                    if (booking.isCancelled) {\n                        booking.cancelled_at_epoch = new Date(\n                            booking.cancelled_at_epoch * 1000\n                        ).toLocaleString();\n                    }\n                    booking.cancelled_date = booking.cancelled_at_epoch;\n                } catch (e) {}\n                const remove_fields = [\n                    'id',\n                    'icaluid',\n                    'accepted_at',\n                    'accepted_by',\n                    'check_ins',\n                    'changeKey',\n                    'created',\n                    'booking_type',\n                    'edit_history',\n                    'end_epoch',\n                    'old_attendees',\n                    'start_epoch',\n                    'expected_attendees',\n                    'isAllDay',\n                    'isCancelled',\n                    'body',\n                    'is_free',\n                    'lastModifiedDateTime',\n                    'locationType',\n                    'locations',\n                    'organizer',\n                    'booked_by',\n                    'originalEndTimeZone',\n                    'originalStartTimeZone',\n                    'room_booking_status',\n                    'room_email',\n                    'room_emails',\n                    'room_id',\n                    'sensitivity',\n                    'seriesMasterId',\n                    'show_as',\n                    'notes',\n                    'subject',\n                    'type',\n                    'previous_booking',\n                    'catering',\n                    'responseStatus',\n                    'equipment_codes',\n                    'cancelled_at_epoch',\n                ];\n                for (const field of remove_fields) {\n                    if (booking[field] !== undefined) {\n                        delete booking[field];\n                    }\n                }\n                const output = {};\n                const order = [\n                    'title',\n                    'start',\n                    'end',\n                    'location',\n                    'Meeting Host',\n                    'Booked By',\n                    'all_day',\n                    'attendees',\n                    'company',\n                    'description',\n                    'cancelled',\n                    'cancelled_by',\n                    'cancelled_date',\n                ];\n                const keys = Object.keys(booking);\n                keys.sort((a, b) => {\n                    const idx_a = order.indexOf(a);\n                    const idx_b = order.indexOf(b);\n                    return (\n                        (idx_a === -1 ? keys.length : idx_a) -\n                        (idx_b === -1 ? keys.length : idx_b)\n                    );\n                });\n                for (const key of keys) {\n                    output[key] = booking[key];\n                }\n                return output;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { Report } from './report.class';\nimport { BaseAPIService } from '../base.service';\nimport { SettingsService } from '../settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService,\n                settingsService: SettingsService) {\n        super(_composer, settingsService);\n        this._name = 'Reports';\n        this._api_route = 'reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from '@mckinsey-converge/base';\n\n\nexport interface ServiceLike<T = any> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\n\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T;\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import {\n    Inject,\n    Injectable\n} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    BehaviorSubject,\n    Observable\n} from 'rxjs';\n\nimport { VERSION } from '@mckinsey-converge/environment';\nimport {\n    BaseClass,\n    getItemWithKeys,\n    HashMap,\n    log\n} from '@mckinsey-converge/base';\nimport { ServiceManager } from './service-manager.class';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport const SETTINGS_TOKEN = 'settings_service_data';\n\ntype SettingsAppData<T> = T & {\n    title: string;\n    description: string;\n    short_name: string;\n    logo_light: {\n        type: string;\n        src: string;\n        background: string;\n    }\n    logo_dark: {\n        type: string;\n        src: string;\n        background: string;\n    }\n    heap_io: {\n        app_id: number;\n        force_ssl: boolean;\n        secure_cookie: boolean;\n        disable_text_capture: boolean;\n        cookie_path: string;\n    }\n}\n\nexport interface SettingsData<TApp> {\n    debug: boolean;\n    mock: boolean;\n    frontend: 'staff' | 'concierge' | 'booking';\n    composer: {\n        domain: string;\n        route: string;\n        protocol: string;\n        port: string;\n        use_domain: boolean;\n        local_login: boolean;\n    }\n    app: SettingsAppData<TApp>;\n}\n\nexport class SettingsObject {\n    constructor(public data: SettingsData<any>) {\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Which frontend we're in. staff, concierge, or bookings **/\n    public readonly frontend: string;\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title,\n                @Inject(SETTINGS_TOKEN)\n                private settings: SettingsObject) {\n        super();\n        ServiceManager.setService(SettingsService, this);\n        const time = new DateTZ({date: VERSION.time});\n        const built = DateNow(new Date()).isSameDate(time, 'day')\n            ? `Today at ${time.formatDate('h:mma')}`\n            : time.formatDate('do MMM yyyy, h:mma');\n        const frontend = this.get('frontend') || 'Unknown';\n        this.frontend = frontend;\n        log('CORE', `${VERSION.semver}`, null, 'debug', true, frontend?.toUpperCase());\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true, frontend?.toUpperCase());\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get concierge() {\n        return this.frontend === 'concierge';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, this.settings.data);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, this.settings.data);\n    }\n}\n","export * from './space.class';\nexport * from './spaces.service';\nexport * from './space.utilities';\n","import { BaseDataClass } from '../base-api.class';\nimport {\n    HashMap,\n} from '@mckinsey-converge/base';\nimport {\n    Building,\n    BuildingLevel,\n    Organisation\n} from '../organisation';\nimport { User } from '../users';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\nimport { SpaceRules } from '../bookings/booking.types';\nimport { rulesForSpace } from '../bookings/space.utilities';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\nimport { DaysOfWeek, RecurrencePeriod } from '../recurrence/recurrence.utils';\nimport { DateTime } from 'luxon';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    dateTz?: DateTZ;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string | string[];\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n    /** Min capacity on the room **/\n    capacity?: number\n    clear?: boolean;\n    /** Length of the setup */\n    setup?: number;\n    /** Length of the breakdown */\n    breakdown?: number;\n    /** Hide declined bookings */\n    hide_declined?: boolean;\n    /** Max capacity on the room **/\n    capacity_max?: number\n\n    diff_capacity?: boolean\n\n    /** Fields to include recurrence in the availability search */\n    recurrence_period?: RecurrencePeriod;\n    recurrence_interval?: number;\n    recurrence_endTz?: DateTZ;\n    recurrence_count?: number;\n    recurrence_starts?: Array<DateTZ>\n    is_recurrent?: boolean\n    recurrence_days?: Array<DaysOfWeek>\n}\n\nexport interface SpaceBookingRuleOptions {\n    dateTz: DateTZ;\n    duration: number;\n    host: User;\n}\n\nexport const OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\n/**\n * Room Settings Type\n *\n * Exmaple:\n * available: true\n * available_until: 1644344999\n * bookings: []\n * catering: false\n * charge_code: false\n * extra_features: \"meeting_room boardroom\"\n * internal_or_external: \"internal\"\n * map_id: \"08.8.15\"\n * natural_light: false\n * room_booking_screen: true\n * room_name: \"8.15 Meeting\"\n * vc: false\n * recurrence_availability: {\n *    date: \"1642596300\",\n *    available: false,\n * }\n */\nexport interface RoomSettings {\n    // Local room name is required.\n    room_name?: string\n    // TBD if anything else should be required\n    available?: boolean\n    available_until?: number\n    bookings?: HashMap[]\n    catering?: boolean\n    charge_code?: boolean\n    extra_features?: string\n    internal_or_external?: string\n    map_id?: string\n    natural_light?: boolean\n    room_booking_screen?: boolean\n    vc?: boolean\n    recurrence_availability?: RecurrenceAvailability[]\n    equipment_code?: boolean\n    external?: boolean\n}\n\n/**\n * List of space features that come from settings.\n *\n * Im sure this list will grow. It is not the most comprehensive list.\n */\nexport enum SpaceFeatures {\n    BoardRoom = 'boardroom',\n    Catering = 'catering',\n    CocktailRoom = 'cocktail',\n    ConferencePhone = 'conference_phone',\n    ConferenceRoom = 'conference',\n    ElectronicWhiteboard = 'whiteboard',\n    FlipChart = 'flipchart',\n    Glassboard = 'glassboard',\n    PartnerOffice = 'partner',\n    PhoneBooth = 'phone_booth',\n    TheatreRoom = 'theatre',\n    TeamRoom = 'team_room',\n    VideoConference = 'vc',\n    NaturalLight = 'natural_light',\n    WirelessContentSharing = 'wireless_content_sharing',\n    WorkshopRoom = 'workshop',\n    UShapeRoom = 'u_shape',\n    Miscellaneous = 'miscellaneous'\n}\n\nexport enum SpaceEquipments {\n    conference_phone,\n    whiteboard,\n    vc,\n    flipchart,\n    glassboard,\n    wireless_content_sharing\n}\nexport enum SpaceStyles {\n    boardroom,\n    cocktail,\n    conference,\n    partner,\n    theatre,\n    team_room,\n    // natural_light,\n    workshop,\n    u_shape,\n    miscellaneous\n}\n\nconst EMPTY_ARRAY = [];\n\nexport class Space extends BaseDataClass {\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Settings has extensive info displayed in the app. */\n    public readonly settings: RoomSettings;\n    /** URL for the control interface of the space */\n    public readonly support_url: string;\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Is the Application concierge */\n    public is_concierge: boolean = false;\n\n    /** Simple name == local name being using in seeting.room_name\n\t\t *\n\t\t*/\n    public simple_name: string;\n\n    /** Room style set of all room style one room has\n    * [\"boardroom\", \"cocktail\", \"miscellaneous\", \"natural_light\", \"theatre\", \"u-shape\", \"workshop\"]   */\n    public room_style: string[] = [];\n\n    /** Equipment set of all room equipment one room has\n    * [\"conference_phone\", \"whiteboard\", \"vc\", \"flipchart\", \"glassboard\", \"whiteboard\", \"wireless_content_sharing\"] */\n    public equipment: string[] = [];\n\n    /** Filters has charge code settings for booking and catering */\n    public filters: RoomSettings;\n\n    /** room_type subset of internal or external rooms */\n    public room_type: string[] | string;\n    /**\n     * Features used in identifying room types.\n     *\n     * Both features and extra_features are space delimited strings.\n     *\n     * There is a getter featuresArray that returns the\n     * combination of the two as an array.\n     */\n    public readonly features: string;\n    public readonly extra_features: string;\n    public map_id: string;\n\n\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n\n    /** Return the rooms' building */\n    public get building() {\n        return this._service?.buildings.find((bld) => {\n            return this.zones.includes(bld.id);\n        });\n    }\n\n    /** Return building timezone */\n    public get timezone() {\n        return this.building?.timezone;\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n\n        // Needed to check if the current app is Concierge or Staff\n        const settingsService = ServiceManager.serviceFor(SettingsService) as unknown as SettingsService;\n        this.is_concierge = !!settingsService?.concierge;\n\n        const defaultGlobalName = raw_data.name || raw_data.email || 'Meeting Room';\n        const defaultSettings = {\n            room_name: defaultGlobalName\n        }\n        /**\n         * Duplicate of base-api.class just for readability\n         * .name is the full, mckinsey standardised name of the room.\n         * You can think of it was what people would call the room when\n         * considering every office and room globally.\n         *\n         * this.name = raw_data.name;\n         */\n        /**\n         * Settings has extensive info displayed in the app.\n         * setting.room_name is always used when displaying the room name in the applications\n         * setting.room_name is the more office-specific room name, you can think of this as\n         * the one people in that office would refer to the room as.\n         *\n         */\n        this.settings = raw_data.settings || defaultSettings;\n        this.filters = raw_data?.filters;\n        // Room fields\n        this.bookable = raw_data.bookable || false;\n        this.capacity = raw_data.capacity || 0;\n        this.support_url = raw_data.support_url;\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        // Feature fields\n        this.features = raw_data.features || '';\n        this.extra_features = raw_data.settings?.extra_features || '';\n\n\t\tthis.room_type = raw_data?.room_type;\n        this.simple_name = raw_data?.simple_name;\n        this.map_id = raw_data?.map_id || raw_data.settings?.map_id || '';\n        this.room_style = raw_data?.room_style || [];\n        this.equipment = raw_data?.equipment || [];\n\n    }\n\n    /**\n     * Return the global room name\n     * IE LDN-4-408-06\n     */\n    public get global_name(): string {\n        return this.name || ''\n    }\n\n    /**\n     * Return the local room name\n     * i.e. 4.08\n     * TO DO: ROOM-DATA-STRUCTURE-REFACTOR - stop using/remove seetings.room_name\n     */\n    public get local_name(): string {\n        return this.simple_name || this.settings?.room_name || this.name || ''\n    }\n\n    public get street_and_city(): string {\n        return this.building ? `${this.building.address}, ${this.building.city}` : '';\n    }\n\n    /**\n     * Return the map_id from settings\n     * TO DO: ROOM-DATA-STRUCTURE-REFACTOR - stop using/remove seetings.map_id and use map_id from space modal( after testing over prod)\n     */\n    // public get map_id(): string {\n    //     return this?.map_id || this.settings?.map_id || '';\n    // }\n\n    /** Internal / External status */\n    public get internal_or_external(): string {\n        const  external  = this.filters?.external;\n        return ( external ? 'external' : this.settings?.internal_or_external ) || 'internal';\n    }\n\n    /**\n     * Works in conjunction with available_until.\n     *\n     * If a room is bookable that only means you can make a booking but not when.\n     * Available indicates that is is available to be booked durring the queried times.\n     */\n    public get available(): boolean {\n        return this.settings?.available ?? false;\n    }\n\n    public get currently_in_use(): boolean {\n        const nowMs = new DateTZ({ date: DateTime.now(), is_local_tz: false, building_tz: this.timezone }).ms;\n        const runningBookings = this.settings?.bookings?.filter( bks => {\n            const startEpoch = new DateTZ({ date: bks.start_epoch * 1000, is_local_tz: false, building_tz: bks.timezone}).ms;\n            const endEpoch = new DateTZ({ date: bks.end_epoch * 1000, is_local_tz: false, building_tz: bks.timezone}).ms;\n             return startEpoch <= nowMs && endEpoch >= nowMs;\n        })\n        // console.log(raw_data.settings.room_name+' : '+ nowMs.ms);\n        // console.log('IS IN USER CURRENTLY : ', isinUsernow);\n        return !!runningBookings.length;\n    }\n\n    /** Last returned availability time */\n    public get available_until(): number {\n        return this.settings?.available_until;\n    }\n\n    /** Bookings associated with the space */\n    public get bookings(): HashMap[] {\n        // We should need to care if a room as bookings in Staff\n        if (!this.is_concierge) {\n            return EMPTY_ARRAY;\n        }\n\n        if (this.settings?.bookings?.length) {\n            /**\n             * When we're dealing with Concierge the API data arriving is rooms, and those rooms contain booking,\n             * but those bookings don't contain a room since the room is the root.\n             * In order for Concierge to filter bookings by room we need to reattach this room\n             * to each of the bookings, with it's own bookings.\n             *\n             * It's loopy and kooky but correcting for this pattern is beyond the scope of this refactor.\n             */\n            const spaceWithBookings =  new Space(this.toJSON());\n            return this.settings?.bookings.map(b => {\n                b.room = spaceWithBookings;\n                return b;\n            });\n        }\n        return EMPTY_ARRAY;\n    }\n\n    /**\n\t\t * Whether space has catering\n     * TO DO: ROOM-DATA-STRUCTURE-REFACTOR - stop using/remove seetings.catering and use filters?.catering instead\n\t\t */\n    public get has_catering(): boolean {\n        return this.filters?.catering || this.settings?.catering || false;\n    }\n\n     /** Returns an array of the space delimited feature and extra_feature strings.\n     * TO DO: ROOM-DATA-STRUCTURE-REFACTOR - stop using/remove features, extra_features\n     */\n    public get featuresArray(): (SpaceFeatures | string)[] {\n        // (this.simple_name === \"Entresol M-06\" ) && console.log('raw_data : ', this)\n        const roomType = Array.isArray(this.room_type) ?  this.room_type : [this.room_type]\n        const features = [\n                ...this.features.split(' '),\n                ...this.extra_features?.split(' '),\n\n                ...roomType, // required to work with staff>result>filters\n                ...this?.room_style,\n                ...this?.equipment,\n\n                (this.filters?.natural_light || this.settings?.natural_light) && SpaceFeatures.NaturalLight || undefined,\n                this.settings?.natural_light && SpaceFeatures.NaturalLight || undefined,\n                this.settings?.vc && SpaceFeatures.VideoConference || undefined,\n            ].filter(f => !!f).map(f => f.toLowerCase());\n        //will be an array... new Set() turns it into a set, but [... ] turns it back into an array again\n        return [ ...new Set(features) ];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Return the new recurrence_availability from settings\n     */\n    public get recurrence_availability(): RecurrenceAvailability[] {\n        return this.settings?.recurrence_availability || [];\n    }\n\n    // public get availableOccurrences(): number {\n    //     if(this?.recurrence_availability) {\n    //         return this?.recurrence_availability?.filter(recurr => recurr.available).length;\n    //     }\n    // }\n\n    // public get totalOccurrences(): number {\n    //     return this?.recurrence_availability.length;\n    // }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        const space = { ...this };\n        space.settings.bookings = []; // clear out bookings\n        return new Space({ ...space, id: null, email: null });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        if (!this._service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n\n        const building = this.is_concierge ? this.level.building_id : this.building\n\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { dateTz, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: dateTz.ms,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Space): HashMap {\n        return { ...super.toJSON(), settings: { ...this.settings, bookings: [] }, filters: { ...this.filters }, equipment: [ ...this.equipment] };\n    }\n}\n","import { HashMap } from '@mckinsey-converge/base';\nimport {\n    ISpaceAvailabilityOptions,\n    Space\n} from './space.class';\nimport { Building } from '../organisation/building.class';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\nimport { handleRecurrenceFields, RecurrencePeriod } from '../recurrence/recurrence.utils';\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.dateTz) {\n            const date = options.dateTz.startOfValue('minute');\n            query.available_from = date.seconds; // Add one second or API will not allow end to end booking\n            query.available_to = date.addValue({ minutes: options.duration || 60 }).subtractValue({ seconds: 1 }).seconds;\n\n            if (options.setup) query.setup = options.setup ;\n            if (options.breakdown) query.breakdown = options.breakdown;\n \n            delete query.dateTz;\n            delete query.duration;\n        }\n\n        if (!options.capacity_max) delete query.capacity_max\n\n        if (options.hide_declined) query.hide_declined = options.hide_declined;\n        query = handleRecurrenceFields(query)\n    }\n    return query;\n}\n\n/**\n * Compare two spaces to determine order\n * @param first\n * @param second\n */\nexport function sort(first: Space, second: Space, blds: Building[] = []) {\n    const bld = blds.find(bld => first.zones.includes(bld.id));\n    const bld_b = blds.find(bld => second.zones.includes(bld.id));\n    if (bld) {\n        if (bld !== bld_b) {\n            return (bld.name).localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = first.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = second.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n    }\n    return first.name.localeCompare(second.name);\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { ISpaceAvailabilityOptions, Space } from './space.class';\nimport { ApplicationLoadingState, HashMap } from '@mckinsey-converge/base';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation';\nimport { ApplicationService } from '../app.service';\nimport { SettingsService } from '../settings.service';\nimport { DateNow } from '@mckinsey-converge/date-tz';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nlet SPACE_LIST = [];\n\nexport function findSpace(id: string) {\n    return SPACE_LIST.find((_) => _.id === id || _.email === id);\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(\n        protected _composer: ComposerService,\n        private _org: OrganisationService,\n        private _service: ApplicationService,\n        settingsService: SettingsService\n    ) {\n        \n        super(_composer, settingsService);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) =>\n            !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.init());\n    }\n\n    public async query(query: HashMap = {}) {\n        const list = await super.query(query);\n        if ( (query.hasOwnProperty('cache') && query.cache === false) || !Object.keys(query).length) {\n            this.set('list', list);\n            SPACE_LIST = list;\n        }\n        return list;\n    }\n\n    public filterAvailableSpaces(list: Space[]) {\n        return list.filter((i) => {\n            if (i.recurrence_availability?.length) return i; //if recurrence, send the space regardless of availability (needed for edit and cloning series)\n            return i.available;\n        });\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(\n        options: ISpaceAvailabilityOptions,\n        uniqueId?: string,\n        filter: boolean = true\n    ): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n\n        const now = DateNow(new Date());\n        if (!options.dateTz) {\n            options.dateTz = now.startOfValue('minute');\n        }\n\n        if (options.hide_declined === undefined) {\n            options.hide_declined = true;\n        }\n\n        const key = `available|${options.id ? options.id : ''}|${\n            uniqueId ?? ''\n        }`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    delete this._promises[key];\n                    resolve(filter ? this.filterAvailableSpaces(list) : list);\n                };\n                const error = (e) => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(\n                        (i) => respond([i]),\n                        error\n                    );\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState =\n            this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = {\n                message: 'Loading space data',\n                state: 'loading',\n            };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    public process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n    /**\n     * \n     * Special observable function to make http call for rooms\n     * @param query \n     * @returns observable\n     */\n    public queryRooms = (query: HashMap = {}): Observable<HashMap> => super.queryRoomsForQR(query);\n\n    public setSpaceList(list) {\n        this.set('list', list);\n        SPACE_LIST = list;\n    }\n\n    public queryBooking = (query: HashMap = {}) : Observable<Space[]> | Observable<any>  => super.queryObsr(query);\n    public updateSpace = (id: string, form_data: HashMap, should_inject_concierge: Boolean = false, query_params: HashMap = {}) : Observable<Space[]> | Observable<any>  => super.updateObsr(id, form_data, should_inject_concierge, query_params);\n    public uploadSpacePhotos = (apiSubRoute: string, form_data: HashMap, should_inject_concierge: Boolean = false, query_params: HashMap = {}) : Observable<any> | Observable<any>  => super.uploadSpacePhotos(apiSubRoute, form_data, should_inject_concierge, query_params);\n    \n}\n","import {\n    BehaviorSubject,\n    of\n} from 'rxjs';\nimport {\n    Building,\n    Organisation\n} from './organisation';\nimport { BaseDataClass } from './base-api.class';\nimport { MapLocation } from './location';\nimport { User } from './users';\nimport { Booking } from './bookings';\nimport {\n    RoomSettings,\n    Space,\n    SpaceFeatures\n} from './spaces';\nimport { ServiceManager } from './service-manager.class';\nimport {\n    CateringCategory,\n    CateringItem\n} from './catering';\nimport {\n    HashMap,\n    padZero,\n    predictableRandomInt,\n    unique\n} from '@mckinsey-converge/base';\n\nimport * as faker from 'faker';\n\nimport {\n    SETTINGS_TOKEN,\n    SettingsData,\n    SettingsObject,\n    SettingsService\n} from './settings.service';\nimport { Report } from './reports';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nfaker.seed(2560);\n\nlet SERVICE: any;\n\ndeclare global {\n    interface Jest {\n        fn: () => any\n    }\n}\n\n\ndeclare let jest: Jest;\n\n/* istanbul ignore file */\n\nexport function generateMockOrganisationService(): HashMap {\n    return {\n        levelWithID: jest.fn(),\n        listen: jest.fn(),\n        loadOrganisation: jest.fn(),\n        initialised: of(true),\n        building: new Building(generateMockBuilding({ id: 'bld-01' })),\n        loadBuildingsWithOrg: jest.fn(),\n        getOrganizationFiltersByRoomType: jest.fn(),\n        getRoomTypeSubsetDDOptions: jest.fn(),\n        ...generateMockDataService('OrganisationService')\n    };\n}\n\nexport const generateMockSpacesService = (): HashMap => ({\n    available: jest.fn(),\n    ...generateMockDataService('SpacesService')\n});\n\nexport const generateMockUsersService = (): HashMap => ({\n    loadCurrentUser: jest.fn(),\n    ...generateMockDataService('UsersService')\n});\n\nexport const bookingState = () => ({\n    bookings: of([]),\n    filtered: of([]),\n    filtered_week: of([]),\n    filtered_month: of([]),\n    setZone: jest.fn(),\n    setDate: jest.fn(),\n    setFilters: jest.fn(),\n    add: jest.fn(),\n    replace: jest.fn(),\n    remove: jest.fn(),\n    startPolling: jest.fn(),\n    startPollingMonth: jest.fn(),\n    startPollingWeek: jest.fn(),\n    startPollingEveryFiveMin: jest.fn(),\n    _noOfMeetings: of([])\n});\n\nconst test_app = {\n    title: 'McKinsey & Company',\n    description: 'McKinsey & Company Staff UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: ''\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: ''\n    },\n    heap_io: {\n        app_id: 3540602199,\n        force_ssl: true,\n        secure_cookie: true,\n        disable_text_capture: true,\n        cookie_path: '/staff/'\n    }\n};\n\nexport const TEST_SETTINGS: SettingsData<typeof test_app> = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/test',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false\n    },\n    app: test_app,\n    mock: false,\n    frontend: 'staff'\n};\n\nexport const generateMockSettingsService = (overrides: Partial<SettingsData<any>> = {}) => new SettingsService({ getTitle: () => jest.fn() } as any,\n    new SettingsObject({\n        ...TEST_SETTINGS,\n        ...overrides\n    }));\n\n/**\n * Provides an injectable instance for settings.\n */\nexport const provideMockSettingsObject = (settings: Partial<SettingsData<any>> = {}) => ({\n    provide: SETTINGS_TOKEN,\n    useValue: new SettingsObject({\n        ...TEST_SETTINGS,\n        ...settings\n    })\n});\n\n/**\n * Generate a mocked version of the application service\n */\nexport function generateMockAppService(settingsOverrides: Partial<SettingsData<any>> = {}) {\n    SERVICE = {\n        setting: jest.fn(),\n        notify: jest.fn(),\n        notifyInfo: jest.fn(),\n        notifyWarn: jest.fn(),\n        notifySuccess: jest.fn(),\n        notifyError: jest.fn(),\n        log: jest.fn(),\n        navigate: jest.fn(),\n        navigateBack: jest.fn(),\n        get: jest.fn(),\n        listen: jest.fn(),\n        set: jest.fn(),\n        Composer: { auth: { token: 'test' } },\n        Hotkeys: { listen: jest.fn() },\n        Users: generateMockUsersService(),\n        Organisation: generateMockOrganisationService(),\n        Locations: generateMockDataService('LocationsService'),\n        Base: generateMockDataService('BaseService'),\n        Menu: generateMockDataService('CateringMenuService'),\n        Spaces: generateMockSpacesService(),\n        Bookings: generateMockDataService('BookingsService'),\n        Reports: generateMockDataService('ReportsService'),\n        CateringItems: generateMockDataService('CateringItemsService'),\n        CateringCategories: generateMockDataService('CateringCategoriesService'),\n        Settings: generateMockSettingsService(settingsOverrides),\n        initialised: of(true)\n    };\n    ServiceManager.setService(BaseDataClass, SERVICE.Base);\n    ServiceManager.setService(Organisation, SERVICE.Organisation);\n    ServiceManager.setService(Building, SERVICE.Organisation);\n    ServiceManager.setService(User, SERVICE.Users);\n    ServiceManager.setService(Booking, SERVICE.Bookings);\n    ServiceManager.setService(Space, SERVICE.Spaces);\n    ServiceManager.setService(MapLocation, SERVICE.Locations);\n    ServiceManager.setService(Report, SERVICE.Reports);\n    ServiceManager.setService(CateringItem, SERVICE.CateringItems);\n    ServiceManager.setService(CateringCategory, SERVICE.CateringCategories);\n    SERVICE.Organisation.buildings = [SERVICE.Organisation.building];\n    SERVICE.Users.current = new User(generateMockUser());\n    SERVICE.Users.initialised = of(true);\n    SERVICE.Bookings.booking_list = new BehaviorSubject(new Array(10).fill(0).map(_ => new Booking(generateMockBooking())));\n    SERVICE.listen.mockReturnValue(of(null, []));\n    return SERVICE;\n}\n\nexport function generateMockDataService(name: string) {\n    const service = {\n        find: jest.fn(),\n        filter: jest.fn(),\n        listen: jest.fn(),\n        get: jest.fn(),\n        set: jest.fn(),\n        setting: jest.fn(),\n        query: jest.fn(),\n        show: jest.fn(),\n        add: jest.fn(),\n        save: jest.fn(),\n        remove: jest.fn(),\n        delete: jest.fn(),\n        update: jest.fn(),\n        addFrom: jest.fn(),\n        removeFrom: jest.fn(),\n        task: jest.fn(),\n        available: jest.fn(),\n        process: jest.fn(),\n        updateList: jest.fn(),\n        clearList: jest.fn(),\n        removeFromList: jest.fn(),\n        accept: jest.fn(),\n        decline: jest.fn(),\n        checkin: jest.fn(),\n        is_logged_in: false,\n        initialised: of(true),\n        getHoldingBay: jest.fn(),\n        name,\n        queryRooms: of(true),\n        queryRoomsForQR: of([]),\n        queryObsr: of([]),\n        queryBooking: of(true),\n        checkinIndividualVisitor: jest.fn(),\n        taskObsr: of(true),\n        updateSpace: jest.fn(),\n        updateObsr: of([]),\n        uploadSpacePhotos: of([])\n\n    };\n\n    service.getHoldingBay.mockImplementation(_ => Promise.resolve([new Booking({})]));\n    service.save.mockImplementation(_ => Promise.resolve(new Booking({})));\n\n    service.listen.mockReturnValue(of(null));\n    service.filter.mockReturnValue([]);\n    return service;\n}\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMinimalRoomDetails(count: number) {\n    return {\n        name: `space-0${count}`,\n        email: `space-0${count}@test.com`,\n        settings: {\n            name: `localname-0${count}`,\n            catering: true\n        }\n    }\n}\n\nexport function generateMockSpace(overrides: HashMap = {}, space_id: number = null, recurring_search: boolean = false ): Space {\n    const id = `space-${space_id || SPACE_COUNT++}`;\n    const name = overrides.name || `${faker.name} ${faker.name.lastName()} Space`;\n    const startOfDay = DateNow(new Date()).startOfValue('day');\n    let settings: RoomSettings = {\n        available: true,\n        available_until: startOfDay.addValue({ days: 1 }).seconds, // (Date.now() / 1000) + (60 * 60 * 24), // now plus 24 hrs\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        catering: true,\n        charge_code: true,\n        extra_features: \"meeting_room boardroom\",\n        internal_or_external: \"internal\",\n        map_id: \"1\",\n        natural_light: false,\n        room_booking_screen: true,\n        room_name: `${name} - Local Name`,\n        vc: false,\n    }\n    if (overrides.settings) {\n        settings = { ...settings, ...overrides.settings };\n        delete overrides.settings;\n    }\n    if (recurring_search) {\n        settings.recurrence_availability = [\n            {\n                date: startOfDay.seconds,\n                available: false,\n            },\n            {\n                date: startOfDay.addValue({ days: 1 }).seconds,\n                available: false,\n            },\n            {\n                date: startOfDay.addValue({ days: 2 }).seconds,\n                available: false,\n            },\n            {\n                date: startOfDay.addValue({ days: 3 }).seconds,\n                available: false,\n            },\n        ]\n    }\n\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return new Space({\n        id,\n        name: `${name} - Global Name`,\n        map_id: `${space_id || SPACE_COUNT}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        hourly_rate: Math.floor(predictableRandomInt(300)) * 100,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        capacity: 15,\n        sort_priority: 0,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        support_url: `/control/#/${id}`,\n        image: faker.image.business(),\n        zones: ['zone_lvl-0'],\n        features: `${SpaceFeatures.BoardRoom} ${SpaceFeatures.ElectronicWhiteboard}`,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        settings,\n        ...overrides\n    });\n}\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE =  DateNow(new Date()).setValue({ hour: 6 }).setValue({minute: 0}).subtractValue({ days: 10 }).startOfValue('minute');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    const date = new DateTZ({date: time})\n    BOOKING_DATE = date.startOfValue('minute');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.addValue({ minutes: Math.floor(predictableRandomInt(4) + 2) * 15 });\n    const start = BOOKING_DATE.ms;\n    const duration = Math.floor(predictableRandomInt(4) + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.addValue({ minutes: Math.floor(predictableRandomInt(4)) * 15 });\n    const organiser = generateMockUser({ external: false, visitor: false });\n    const orders = Array(Math.floor(predictableRandomInt(5)))\n        .fill(0)\n        .map(_ => generateMockCateringOrder({ booking_date: start }, override.room_ids, override.menu));\n    const hasCatering = Math.floor(predictableRandomInt(34567)) % 3 === 0;\n    const date_start = new DateTZ({date: start})\n    return {\n        id,\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(predictableRandomInt(5) + 2))\n            .fill(0)\n            .map((_, i) => generateMockUser(override.users)),\n        organiser,\n        start_epoch: date_start.seconds,\n        end_epoch: date_start.addValue({ minutes: duration }).seconds,\n        body: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        // Mckinsey only has internal or external meetings\n        booking_type: ['internal', 'external'][predictableRandomInt(2)],\n        setup: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        status: 'accepted',\n        catering: hasCatering ? orders : [],\n        room: new Space(generateMinimalRoomDetails(1)), // returns space-01 type values\n        equipment_codes: {},\n        company:[],\n        ...override\n    };\n}\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n * @param overrides Supply object value overrides in place. Supports a levelGenerator function\n * to stabilize level ids for testing.\n */\nexport function generateMockBuilding(overrides: HashMap = {}): HashMap {\n    const id = `zone_bld-${BLD_COUNT++}`;\n    const levels = Array(10)\n        .fill(0)\n        .map((_, i) => generateMockLevel(undefined, overrides.levelGenerator?.(i)));\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(predictableRandomInt(3) + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][faker.commerce.productName()] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        code: 'NYO',\n        name: faker.name.firstName(),\n        address: 'building address field',\n        city: 'building city',\n        loan_items: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => generateMockUser())\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            },\n            city: faker.address.city()\n        },\n        timezone: 'America/Chicago',\n        ...overrides\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param overrides value overrides\n */\nexport function generateMockLevel(id?: string, overrides: HashMap = {}): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        id,\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        short_name: `L ${LVL_COUNT}`,\n        ...overrides\n    };\n}\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !(predictableRandomInt(99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(predictableRandomInt(4) + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(predictableRandomInt(USER_EMAILS.length))]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(predictableRandomInt(99999)), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\nexport function generateMockCateringOrder(overrides: HashMap = {}, room_id: string = '', menu: HashMap<HashMap[]> = {}) {\n    return {\n        id: `order-${predictableRandomInt(9999_9999)}`,\n        delivery_time: predictableRandomInt(6) * 5,\n        location_id: room_id, // R--- could be undefined\n        items: new Array(predictableRandomInt(5, 1)).fill(0).map(i => pickMenuItem(menu)),\n        ...overrides\n    };\n}\n\nfunction pickMenuItem(menu_map: HashMap<HashMap[]> = {}) {\n    const zones = Object.keys(menu_map);\n    const menu = menu_map[zones[predictableRandomInt(zones.length)]] || [];\n    const category = menu[predictableRandomInt(menu.length)] || { items: [] };\n    const group = { ...(category.items[predictableRandomInt(category.items.length)] || {}) };\n    if (!group.package && group.items?.length) {\n        const item = { ...group.items[predictableRandomInt(group.items.length)] };\n        item.amount = predictableRandomInt(5, 1);\n        return item;\n    }\n    group.amount = predictableRandomInt(5, 1);\n    return group;\n}\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = predictableRandomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[predictableRandomInt(fixed_locations.length)],\n            level: maps[predictableRandomInt(maps.length)],\n            ...overrides\n        };\n    } else {\n        return {\n            x: predictableRandomInt(900, 100),\n            x_max: 1000,\n            y: predictableRandomInt(500, 100),\n            level: maps[predictableRandomInt(maps.length)],\n            confidence: predictableRandomInt(30),\n            ...overrides\n        };\n    }\n}\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    const buildings = Array(3).fill(0).map(i => generateMockBuilding());\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings,\n        settings: {\n            discovery_info: {\n                buildings\n            },\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n\n\nexport const generateMockBuildingSetByCity = () => {\n    const buildings: Building[] = Array(10).fill(0)\n        .map(() => new Building(generateMockBuilding()));\n    buildings.push(...Array(2).fill(0).map(() => new Building(generateMockBuilding({\n        settings: {\n            city: 'Auckland'\n        },\n        city: 'Auckland'\n    }))));\n    buildings.push(...Array(5).fill(0).map(() => new Building(generateMockBuilding({\n        settings: {\n            city: 'NYC'\n        },\n        city: 'NYC'\n    }))));\n    return buildings;\n};\n\nexport function generateMockModalData(data: HashMap<any> = null) : HashMap  {\n    if (data) {\n        return data;\n    }\n    return {\n        pendingDate: new Date(1603087100 + (1000 * 60 * 15)),\n        pendingDuration: 60,\n        date: 1603087100,\n        duration: 30,\n    }\n}\n\nexport const mockDateToBuildingTz = (date?: number) =>{\n    return new DateTZ({date, building_tz: 'America/Chicago', is_local_tz: false})\n}","export * from './user.class'\nexport * from './user.utilities'\nexport * from './users.service'\n","import { BaseDataClass } from '../base-api.class';\nimport {\n  HashMap,\n  Identity\n} from '@mckinsey-converge/base';\nimport { MapLocation } from '../location';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n  /** Currently logged in user */\n  public static get active_user(): User {\n    const service = ServiceManager.serviceFor(User);\n    return service ? service.current : null;\n  }\n\n  /** First name of the user */\n  public readonly first_name: string;\n  /** Last name of the user */\n  public readonly last_name: string;\n  /** Windows user ID */\n  public readonly windows_id: string;\n  /** FMNO */\n  public readonly fmno: string;\n  /** Type of user */\n  public readonly type: 'partner' | 'external' | 'internal';\n  /** Contact phone number of the user */\n  public readonly phone: string;\n  /** Organisational department the user is part of */\n  public readonly business_unit: string;\n  /** Whether user is external from the application's organisation */\n  public readonly external: boolean;\n  /** Whether user is a visitor */\n  public readonly visitor: boolean;\n  /** Organisational Identifier for the user */\n  public readonly staff_code: string;\n  /** Basic location descriptor for the user */\n  public readonly location: string;\n  /** List of users that this user can act on behalf */\n  public readonly delegates: readonly string[];\n  /** URL of the user's avatar image */\n  public readonly image: string;\n  /** List of user groups associated with this user */\n  public readonly groups: readonly string[];\n  /** Organisation the user is associated with */\n  private _organisation: Identity;\n\n  /** Map location of the user */\n  private _location: MapLocation;\n  /** List of desk bookings */\n  // private _desk_bookings: HashMap = {}; // R--- can't explain why this is here.\n\n  constructor(raw_data: HashMap = {}) {\n    super(raw_data);\n    this.first_name = raw_data.first_name || '';\n    this.last_name = raw_data.last_name || '';\n    this.windows_id = raw_data.email || '';\n    this.fmno = raw_data.fmno;\n    this.external = raw_data.external || false;\n    this.visitor = raw_data.visitor || false;\n\n\n    this.type = this.visitor ? 'external' : 'internal';\n    this.phone = raw_data.phone || raw_data.mobile || '';\n    this.business_unit = raw_data.business_unit || raw_data.department || '';\n    this._organisation = raw_data.organisation || {\n      id: raw_data.organisation_id,\n      name: raw_data.organisation_name\n    };\n\n    this._location = null;\n    this.image = raw_data.image || '';\n    this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n    this.delegates = raw_data.delegates || [];\n    this._location = new MapLocation(\n      raw_data.location && raw_data.location instanceof Object\n        ? raw_data.location\n        : { name: raw_data.location }\n    );\n    this.groups = raw_data.groups || [];\n    this.location = raw_data.location || raw_data.officeLocation || '';\n  }\n\n  /** Organisation the user is associated with */\n  public get organisation() {\n    return this._organisation;\n  }\n\n  /** Map location of the user */\n  public get last_location(): MapLocation {\n    return new MapLocation(this._location || {});\n  }\n\n  /**\n   * Ask the server for the users current location\n   */\n  public locate(): Promise<MapLocation> {\n    const service: any = ServiceManager.serviceFor(MapLocation);\n    return new Promise((resolve, reject) => {\n      if (service) {\n        service.show(this.id, { desk: this.email }).then(\n          l => {\n            this._location = l;\n            resolve(l);\n          },\n          e => reject(e)\n        );\n      } else {\n        resolve(null);\n      }\n    });\n  }\n\n  /**\n   * Whether user is available during the given period\n   * @param start Start time as a unix timestamp with milliseconds\n   * @param end End time as a unix timestamp with milliseconds\n   */\n  public available(start?: number, end?: number): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._service.query({ email: this.email, start, end }).then(\n        l => resolve(l && l.length > 0),\n        _ => resolve(false)\n      );\n    });\n  }\n\n  /**\n   * Make a copy of this object\n   */\n  public clone(): User {\n    return new User(this);\n  }\n\n  /**\n   * Make a copy of this object without identification data\n   */\n  public duplicate(): User {\n    return new User({ ...this, id: null, email: null });\n  }\n\n  /**\n   * Convert object into plain object\n   */\n  public toJSON(this: User): HashMap {\n    const data = super.toJSON();\n    delete data.location;\n    return data;\n  }\n}\n\n// R--- Might need an toApiJSON due to visitor field.","import {\n  FormControl,\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\nimport { HashMap } from '@mckinsey-converge/base';\nimport { User } from './user.class';\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n  if (!user) {\n    throw Error('No user passed');\n  }\n  const fields: HashMap<FormControl> = {\n    id: new FormControl(user.id || ''),\n    name: new FormControl(user.name || ''),\n    first_name: new FormControl(user.first_name || '', [Validators.required, Validators.pattern(/^(?![\\d\\s]+$)[^\\d]+$/)]),\n    last_name: new FormControl(user.last_name || '', [Validators.required, Validators.pattern(/^(?![\\d\\s]+$)[^\\d]+$/)]),\n    email: new FormControl(user.email || '', [Validators.email])\n  };\n  // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport {\n    HttpClient,\n    HttpHeaders\n} from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport {\n    ApplicationLoadingState,\n    HashMap,\n    unique\n} from '@mckinsey-converge/base';\n\nimport { ApplicationService } from '../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { SettingsService } from '../settings.service';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService,\n        settingsService: SettingsService\n    ) {\n        super(_composer, settingsService);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('list', []);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this.set('delegates', null);\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            const now = DateNow(new Date())\n            expiry = now.addValue({ days: 7 }).endOfValue('day').ms;\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public async login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (this.settingsService.concierge) {\n            if (!this._promises['login']) {\n                this._promises['login'] = new Promise<void>((resolve, reject) => {\n                    this.set('status', 'loading');\n                    let headers = new HttpHeaders();\n                    if (!options || options.form !== false) {\n                        headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                    }\n                    const url = (options ? options.url : '') || '/auth/signin';\n                    this.uhttp.post(url, query_params, { headers }).subscribe(\n                        (_) => null,\n                        (e) => reject(e),\n                        () => {\n                            this._composer.auth.authorise();\n                            resolve();\n                        }\n                    );\n                });\n            }\n            return this._promises['login'];\n        }\n    }\n\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Loads current user from API. This diverges from {@link load} in order to simply return\n     * the user object instead of setting it on the service.\n     */\n    public async loadCurrentUser(): Promise<User> {\n        return this.show('current')\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.user = { message: 'Loading user credentials', state: 'loading' };\n        this._service.set('loading', loading);\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            // this is due to unclear nature of the merge between concierge and staff\n            // concierge has the retries enabled, while staff continuously retries.\n            if (this.settingsService.concierge && tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                async (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true);\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            async (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                await this.loadDelegates().catch(_ => null);\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete'\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()), Math.min(3000, 300 * tries))\n                        );\n                    } else {\n                        \n                        // is after process\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        await this.loadDelegates().catch(_ => null);\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()), Math.min(3000, 300 * tries))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}","import { AbstractControl } from '@angular/forms';\n\nimport { User } from './users';\n\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n\nconst HAS_ERROR = true;\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n */\nexport function buildValidateDate(date?: number) {\n  const from = new DateTZ({ date });\n  return (c) => validateDate(c, date);\n}\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from?: number) {\n  const from = new DateTZ({date: is_from})\n  const date = new DateTZ({date: control.value})\n  return date.isBeforeDate(from) ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from?: number) {\n  const from = new DateTZ({date: is_from})\n  return (c) => validateStartTime(c, date, from.ms);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from?: number) {\n  const now = new DateTZ({date: is_from});\n  const parts = control.value.split(':');\n  const date_obj = new DateTZ({date});\n  return date_obj.setValue({ hour: +parts[0], minute: +parts[1] }).isBeforeDate(now) ? {\n    start: HAS_ERROR,\n    message: 'Booking time needs to be made in the future'\n  } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n  return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n  if (control.value < (min || 30)) {\n    return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n  } else if (control.value > (max || 480)) {\n    return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n  }\n  return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n  return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n  if (!control || !(control.value instanceof Array)) {\n    return min > 0\n      ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n      : null;\n  }\n  const list: User[] = control.value;\n  if (host) {\n    const result = list.find(a => a.email === host.email);\n    if (result) {\n      list.splice(list.indexOf(result), 1);\n    }\n  }\n  return list.length >= min ? null : {\n    count: true,\n    message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n  };\n}\n\nexport function validateEndTime(dateControlTz: AbstractControl) {\n  return (control: AbstractControl) => {\n    // const date = new DateTZ({date: date_control ? date_control.value : undefined})\n    const now = DateNow(new Date())\n    return dateControlTz.value.addValue({ minutes: control.value || 60 }).isBeforeDate(now)? { end_time: true } : null;\n  };\n}\n\nexport function noWhitespaceValidator(control: AbstractControl) {\n  const value = control?.value;\n  if ( value === '') {\n      return null; // Return null if control value is undefined or null\n  }\n  const isWhitespace = value.trim().length === 0;\n  // const isValid = !isWhitespace;\n  return !isWhitespace ? null : { whitespace: true };\n}\n\n","export * from './lib/date-tz.class'","import { DateObjectUnits, DateTime, DateTimeUnit, DurationLike, DurationUnits } from 'luxon';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\nfunction padZero(value: number, length: number): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\ninterface DateTZParams {\n    date?: number | DateTime\n    building_tz?: string\n    is_local_tz?: boolean\n    all_day?: boolean\n}\n\nconst now = new Date()\n\nexport class DateTZ {\n    date: DateTime\n    date_org: DateTime\n    building_tz: string\n    is_local_tz: boolean = true\n    all_day: boolean\n    local_tz: string\n    valid: boolean\n\n    constructor(data?: DateTZParams) { \n        this.date_org = typeof data?.date === 'number' ? DateTime.fromMillis(data?.date) : data?.date ? data?.date : DateTime.fromMillis(now.valueOf())\n        this.is_local_tz = data?.is_local_tz === false ? data?.is_local_tz : true\n        this.all_day = data?.all_day || false\n        this.local_tz = DateTime.now().zoneName\n        this.building_tz = data?.building_tz || this.local_tz\n        this.date = !this.is_local_tz ? this.date_org.setZone(this.building_tz) : this.date_org\n        this.valid = this.date.isValid\n    }\n\n    //get epoch milliseconds\n    public get ms(): number {\n        return this.date.valueOf()\n    }\n\n    //get epoch seconds\n    public get seconds(): number {\n        return Math.trunc(this.date.toSeconds())\n    }\n\n    //get the second of the minute\n    public get second(): number {\n        return this.date.second\n    }\n\n    //get the minutes of the hour\n    public get minutes(): number {\n        return this.date.minute\n    }\n\n    //get the minutes of the hour\n    public get hours(): number {\n        return this.date.hour\n    }\n\n    public get utc(): number {\n        const newDate = new DateTZ({...this, date: this.date.toUTC()})\n        return newDate.seconds\n    }\n\n    public get dateDay(): number {\n        return this.date.day\n    }\n\n    public get dateHour(): number {\n        return this.date.hour\n    }\n\n    public get dateYear(): number {\n        return this.date.year\n    }\n\n    public get dateWeekday(): number {\n        try {\n            return this.date.weekday;\n        } catch (e) {\n            return this.date.toJSDate().getDay();\n        }\n    }\n\n    public get dateMonth(): number {\n        return this.date.month\n    }\n\n    public dateDiff (compare_to: DateTZ, unit: DurationUnits, ans_unit = 'minutes'): number {\n        return this.date.diff(compare_to.date, unit)[ans_unit]\n    }\n\n    //set the date to the begining of the given unit\n    public startOfValue (unit: DateTimeUnit) {\n        // All the luxon start of values work as needed except for week\n        let newDate = new DateTZ({...this, date: this.date.startOf(unit)})\n        // Special week logic\n        if (unit === 'week') {\n            if (this.dateWeekday === 7) {\n                // Don't change, we want sunday as the start of the week even though luxon thinks it is Monday\n                newDate =  new DateTZ({ ...this, date: this.date })\n            } else if (this.dateWeekday === 1) {\n                // If this.date is monday, just subtract one more day to make it Sunday\n                const monday =  new DateTZ({ ...this, date: this.date })\n                newDate = monday.subtractValue({ days: 1 });\n            } else {\n                // If later than monday, startOfWeek back to monday and then subtact another day to get to Sunday.\n                const monday = new DateTZ({...this, date: this.date.startOf(unit)})\n                newDate = monday.subtractValue({ days: 1 })\n            }\n        }\n\n        return newDate\n    }\n\n    //set the date to the end of the given unit\n    public endOfValue (unit: DateTimeUnit) : DateTZ {\n        // All the luxon start of values work as needed except for week\n        let newDate = new DateTZ({...this, date: this.date.startOf(unit)})\n        // Special week logic\n        if (unit === 'week') {\n            if (this.dateWeekday === 6) {\n                // Don't change, we want saturday as the end of the week even though luxon thinks it is Sunday\n                newDate =  new DateTZ({ ...this, date: this.date })\n            } else if (this.dateWeekday === 7) {\n                // If this.date is Sunday, this alone is the luxon end of week so add a day\n                // to get to monday, then endOfWeek to Sunday, and subtract 1 day to Saturday\n                const sunday =  new DateTZ({ ...this, date: this.date }).addValue({ days: 1 })\n                newDate = sunday.endOfValue(unit).subtractValue({ days: 1 }); // return next saturday\n            } else {\n                // If not saturday or sunday\n                // endOfWeek to Sunday and then subtact a day to get to Saturday.\n                const later = new DateTZ({...this, date: this.date.endOf(unit)})\n                newDate = later.subtractValue({ days: 1 })\n            }\n        } else {\n            newDate =  new DateTZ({...this, date: this.date.endOf(unit)})\n        }\n\n        return newDate\n    }\n    \n    public startEpoch (): number {\n        const org = new DateTZ({date: this.date_org})\n        return this.all_day\n        ? this.startOfValue('day').ms - this.dateDiff(org, 'minutes')\n        : this.ms\n    }\n\n    //clone the given value and unit to the date\n    public clone (): DateTZ {\n        // return new DateTZ({...this})\n        return this.addValue({ seconds: 0 })\n    }\n\n    //adds the given value and unit to the date\n    public addValue (duration: DurationLike, isLastDayOfMonth?: boolean): DateTZ {\n        return new DateTZ({...this, date: isLastDayOfMonth ? this.date.plus(duration).endOf('month') : this.date.plus(duration)});\n    }\n\n    //subtracts the given value and unit to the date\n    public subtractValue (duration: DurationLike): DateTZ {\n        const newDate = new DateTZ({...this, date: this.date.minus(duration)})\n        return newDate\n    }\n\n    public setValue (obj: DateObjectUnits): DateTZ {\n        const newDate = new DateTZ({...this, date: this.date.set(obj)})\n        return newDate\n    }\n\n    public formatDate (format: string): string {\n        // Return new immuatable via \"plus\" to prevent \n        // TypeError: Cannot assign to read only property 'weekData' of object\n        // https://github.com/moment/luxon/issues/601\n        return this.date.plus({ seconds: 0 }).toFormat(format)\n    }\n\n    public formatLocalDate (format: string): string {\n        // setZone already returns new immutable so it doesn't have the formatDate issue.\n        return this.date.plus({ seconds: 0 }).setZone(this.local_tz).toFormat(format)\n    }\n\n    public isSameDate(compare_to: DateTZ, value: DateTimeUnit): boolean {\n        return this.date.hasSame(compare_to.date, value)\n    }\n\n    public isAfterDate(compare_to: DateTZ, unit?: DateTimeUnit): boolean {\n        switch (unit) {\n            case 'year':\n                return this.dateYear > compare_to.dateYear\n            case 'month':\n                if(this.isAfterDate(compare_to, 'year')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'year')){\n                    return false\n                }else{\n                    return this.dateMonth > compare_to.dateMonth\n                }\n            case 'day':\n                if(this.isAfterDate(compare_to, 'month')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'month')){\n                    return false\n                }else{\n                    return this.dateDay > compare_to.dateDay\n                }\n            case 'hour':\n                if(this.isAfterDate(compare_to, 'day')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'day')){\n                    return false\n                }else{\n                    return this.dateHour > compare_to.dateHour\n                }\n            case 'minute':\n                if(this.isAfterDate(compare_to, 'hour')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'hour')){\n                    return false\n                }else{\n                    return this.minutes > compare_to.minutes\n                }\n            default:\n                return this.ms > compare_to.ms;\n        }\n    }\n\n    public isBeforeDate(compare_to: DateTZ, unit?: DateTimeUnit): boolean {\n        switch (unit) {\n            case 'year':\n                return this.dateYear < compare_to.dateYear\n            case 'month':\n                if(this.isBeforeDate(compare_to, 'year')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'year')){\n                    return false\n                }else{\n                    return this.dateMonth < compare_to.dateMonth\n                }\n            case 'day':\n                if(this.isBeforeDate(compare_to, 'month')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'month')){\n                    return false\n                }else{\n                    return this.dateDay < compare_to.dateDay\n                }\n            case 'hour':\n                if(this.isBeforeDate(compare_to, 'day')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'day')){\n                    return false\n                }else{\n                    return this.dateHour < compare_to.dateHour\n                }\n            case 'minute':\n                if(this.isBeforeDate(compare_to, 'hour')){\n                    return true\n                }else if(!this.isSameDate(compare_to, 'hour')){\n                    return false\n                }else{\n                    return this.minutes < compare_to.minutes\n                }\n            default:\n                return this.ms < compare_to.ms;\n        }\n    }\n\n    public toZone(tz: string): DateTZ {\n        const newDate = new DateTZ({\n            ...this, \n            date: this.date.setZone(tz), \n            building_tz: tz, \n            is_local_tz: false\n        })\n        return newDate\n    }\n\n    public setTimestamp(timestamp: number): DateTZ {\n        const newDate = new DateTZ({\n            ...this, \n            date: timestamp,\n        })\n        return newDate\n    }\n\n    public get JSDate(): Date {\n        return this.date.toJSDate()\n    }\n\n    // helper to log out the dateTZ values\n    public logDateTz (label: string = ''): void {\n        console.log(`${label} local tz/date/time`, this.addValue({ seconds: 0 }).formatLocalDate(\"cccc d MMMM,yyyy h:mma\"), this.local_tz)\n        console.log(`${label} building tz/date/time`, this.addValue({ seconds: 0 }).formatDate(\"cccc d MMMM,yyyy h:mma\"), this.building_tz)\n    }\n}\n\nexport const DateNow = (date: Date = new Date()) => {\n    return new DateTZ({date: date.valueOf()})\n} \n\n// input the local time and the building timezone\nexport const convertLocalTimestampToTimezonedDateTz = (timestamp: number, buildingTimezone: string): DateTZ => {\n    const date = new Date(timestamp);\n    return new DateTZ({ date: timestamp, building_tz: buildingTimezone, is_local_tz: false }).setValue({\n        day: date.getDate(),\n        hour: date.getHours(),\n        minute: date.getMinutes()\n    });\n}\n\n// input the building time and the building timezone\nexport const convertTimezonedTimestampToLocalDateTz = (timestamp: number, buildingTimezone: string): DateTZ => {\n    const local_tz = DateTime.now().zoneName;\n    const localOffset = getTimezoneOffset(local_tz, new Date(timestamp));\n    const desiredOffset = getTimezoneOffset(buildingTimezone, new Date(timestamp));\n    if (localOffset > desiredOffset) {\n        const eleA = timestamp + (localOffset - desiredOffset);\n        return  new DateTZ({date: eleA, building_tz: buildingTimezone, is_local_tz: false});\n    } else {\n        const eleA = timestamp + (desiredOffset - localOffset);\n        return  new DateTZ({date: eleA, building_tz: buildingTimezone, is_local_tz: false});\n    }\n}\n\nexport const localTimezone = () => {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n\nexport const getTimezoneOffsetString = (tz: string) => {\n    const offset_minutes = Math.floor(getTimezoneOffset(tz) / 1000 / 60);\n    const hours = Math.floor(offset_minutes/60);\n    const minutes = offset_minutes % 60;\n    return `${offset_minutes > 0 ? '+' : '-'}${padZero(Math.abs(hours), 2)}${padZero(minutes, 2)}`;\n}\n\nexport function toMiddayUTC(value: DateTZ = DateNow()) {\n    // exclude Auckland from rouding up timezone as it has 12+ hours UTC timezone difference\n    return value.building_tz.includes('Auckland') ? value :  new DateTZ({\n        date: value.setValue({ hour: 12, minute: 0 }).ms,\n        is_local_tz: false,\n        building_tz: 'UTC',\n    }).setValue({ hour: 12, minute: 0 });\n}\n\n/**returns the offset between two timezones in minutes and hours */\nexport function timezoneOffset(tz: string){\n    const nowTz = DateNow(new Date())\n    const offset = nowTz.date.offset - nowTz.toZone(tz).date.offset\n    return {minutes: offset, hours: offset/60}\n}\n\nexport function isToday (date, timezone) {\n\n    return new DateTZ({\n        date: toMiddayUTC(date).ms,\n        is_local_tz: false,\n        building_tz: timezone\n    }).isSameDate(\n        new DateTZ({\n            date: Date.now(),\n            is_local_tz: false,\n            building_tz: timezone,\n        }),\n        'day'\n    );\n}\n","export * from './lib/environment.module';\nexport * from './lib/version';\nexport * from './lib/environment.service'\nexport * from './lib/types'\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [CommonModule],\n    providers: []\n})\nexport class EnvironmentModule {\n}\n","import {\n    Inject,\n    Injectable\n} from '@angular/core';\nimport { EnvironmentData } from './types';\n\nexport const ENVIRONMENT_TOKEN = 'environments_service_data';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EnvironmentService {\n\n    public get production(): boolean {\n        return this.environment.production;\n    }\n\n    public get heap_io_id(): number {\n        return this.environment.heap_io_id;\n    }\n\n    constructor(@Inject(ENVIRONMENT_TOKEN) private environment: EnvironmentData) {\n    }\n}\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"3d1bcaa84\",\n    \"hash\": \"3d1bcaa84\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"3d1bcaa84\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"time\": 1700124870036\n};\n/* tslint:enable */\n","export * from './lib/legacy-overlays.module';\nexport * from './lib/space-select-modal/space-select-modal.component';\nexport * from './lib/new-user-modal/new-user-modal.component';\nexport * from './lib/confirm-modal/confirm-modal.component';\nexport * from './lib/catering-confirm-modal/catering-confirm-modal.component';\nexport * from './lib/catering-details-modal/catering-details-modal.component';\nexport * from './lib/requirement-details-modal/requirement-details-modal.component';\nexport * from './lib/booking-confirm/booking-confirm.component';\nexport * from './lib/user-form/user-form.component'\nexport * from './lib/booking-form/booking-form.component'\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Output\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport {\n    ApplicationService,\n    Booking,\n    BookingsService,\n    BookingStateService,\n    CateringOrder,\n    getFirstDateFromList,\n    OrganisationService,\n    rulesForSpace,\n    recurrenceDetails,\n    SeriesAction,\n    SettingsService,\n    Space,\n    SpacesService,\n    User,\n    UsersService,\n    formatWhen,\n    BOOKING_STATUS\n} from '@mckinsey-converge/data-common';\nimport {\n    BaseDirective,\n    DialogEvent,\n    HashMap,\n    humaniseDuration\n} from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConflictsModalComponent, ConflictsModalComponentData } from '@mckinsey-converge/ui';\n\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n    action?: SeriesAction\n}\n\nexport interface BookingDetailInfo {\n    bookedBy: {\n        display:boolean,\n        value: string\n    }\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective implements OnInit{\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n    /** Whether booking needs to be accepted */\n    public readonly is_request: boolean;\n\n    public approved: boolean;\n    public declined: boolean;\n    public bookingDetails: BookingDetailInfo;\n    lastMomentConflict: boolean = false;\n    \n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Active user */\n    public get user(): User {\n        return this._users.current;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day && duration_value < 25 * 60;\n        if(this.booking.is_recurrent && this.booking.recurrence_starts && this.booking.recurrence_starts.length){\n            return formatWhen({all_day, ...this.recurrenceDates })\n        }\n        return formatWhen({\n            all_day,\n            startTZ: this.booking.startDateTz,\n            endTZ: this.booking.endDateTz,\n            displayEndTZ: this.booking.displayEndDateTz})\n    }\n\n    public get recurrenceDates(){\n        const startTZ = getFirstDateFromList(this.booking.recurrence_starts)\n        const endTZ = startTZ.addValue({minutes: this.booking.duration})\n        return {startTZ, endTZ, displayEndTZ: endTZ}\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return recurrenceDetails({\n            period: this.booking.recurrence_period,\n            end: this.booking.recurrence_endTz,\n            list: this.booking.recurrence_starts,\n            interval: this.booking.recurrence_interval\n        });\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return [this.booking.room];\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({\n                ...order,\n                location: space.local_name,\n                symbol: building.currency,\n                booking_date: this.booking.startDateTz.ms,\n                booking_timezone: this.booking.timezone,\n            });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _booking_state_service: BookingStateService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData,\n        public settings: SettingsService\n    ) {\n        super();\n        this.booking.time_changed =\n            this.old_booking &&\n            (this.old_booking.startDateTz.ms !== this.booking.startDateTz.ms ||\n                this.old_booking.duration !== this.booking.duration);\n        // in concierge, all bookings are acceptable without explicit approval.\n\n        const rules = rulesForSpace({ user: this.user, space: this.booking.room, duration: 60 });\n        this.is_request = this.settings.concierge ? false : rules.auto_approve;\n    }\n\n    ngOnInit(): void {\n        this.approved = this.booking.status === BOOKING_STATUS.approved;\n        this.declined = this.booking.status === BOOKING_STATUS.declined; \n        // test comment\n        const {creator, organiser, booker_concierge} = this.booking;\n        this.bookingDetails = {\n            bookedBy: {\n                display: creator && ( creator.email !== organiser.email || (creator.email === organiser.email && (booker_concierge !== null && booker_concierge !==undefined ) && organiser.email !==booker_concierge['email']) ),\n                value: (creator.email === organiser.email && booker_concierge !== null && (booker_concierge['email'] && organiser.email !==booker_concierge['email']) ) ?  booker_concierge['name'] || booker_concierge['email']  :  creator?.name || creator.email\n            }\n        }\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                // Change the unchanged settings to the selected room\n                const newEmail = this.booking.space.email;\n                const replaceObjects = ['setup', 'breakdown', 'approval_status']\n                replaceObjects.forEach(key => {\n                    const obj = this.booking[key];\n                    if (obj && obj.constructor === Object) {\n                        const keys = Object.keys(obj);\n                        if (keys.length > 0) {\n                            const replacement = {};\n                            keys.forEach(nk => {\n                                replacement[newEmail] = obj[nk];\n                            })\n                            this.booking[key] = replacement;\n                        }\n                    }\n                });\n\n                // if notes or catering exist? add 15 min buffer setup and breakdown to booking\n                const has_note_buffer = (this.booking.notes && this.booking.notes?.length) || (this.booking.catering && this.booking.catering?.length) ? {[this.booking?.space?.email]: 900} :  null; // 900 seconds = 15 min\n                if (has_note_buffer) {\n                  this.booking.setup = has_note_buffer;\n                  this.booking.breakdown = has_note_buffer;      \n                }\n\n                this._bookings.save(this.booking, this._data.action === SeriesAction.EDIT).then(\n                    async (bkn) => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        const updated = new Booking({ ...this.booking, ...bkn.toApiJSON() });\n                        this._booking_state_service.replace(updated);\n                        \n                        /**\n                         * update the master booking in case of recurring to have latest updated in the system\n                         */\n                        if(updated.recurrence_master_id !== null)\n                        { \n                            const master_booking = await this._bookings.show(updated.recurrence_master_id);\n                            this._booking_state_service.replace(master_booking);\n                        }\n\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n\n                        this._dialog_ref.disableClose = false;\n                        let erroMessage: string = '';\n                        switch(err.status){\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 400:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terroMessage = 'Apologies, the booking cannot be finalized because the current time has exceeded the scheduled start time for this booking. Please try again.';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 409:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terroMessage = 'Apologies, this room has been booked recently by another user, please try another one.';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.lastMomentConflict = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n                        this.loading = erroMessage;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${erroMessage}`\n                        );\n                       setTimeout(()=> {\n                        this.loading = null;\n                        this.event.emit({ reason: 'last-moment-conflict' });\n                       }, 4000) ;\n                    }\n                );\n            },\n            (err) => {\n\n                this.lastMomentConflict = true;\n                this._dialog_ref.disableClose = false;\n                const erroMessage = 'Apologies, this room has been booked recently by another user, please try another one.';\n                this.loading = erroMessage;\n                this._service.notifyError(\n                    `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${erroMessage}`\n                );\n               setTimeout(()=> {\n                this.loading = null;\n                this.event.emit({ reason: 'last-moment-conflict' });\n               }, 4000) ;\n            }\n        );\n    }\n\n    /**\n     * Staff only\n     */\n    public newBooking() {\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Staff only\n     */\n    public toSchedule() {\n        this._router.navigate(['/schedule'], {\n            queryParams: { email: this.booking.organiser.email }\n        });\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id &&\n                (this.booking.startDateTz.ms === this.old_booking.startDateTz.ms &&\n                    this.booking.duration === this.old_booking.duration)) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            // Use of this.booking.timezone is unreliable, use booking space instead.\n            const all_day = this.booking.all_day;\n            // R--- should be nothing to do with date as a timestamp getter\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    dateTz: this.booking.startDateTz,\n                    duration: all_day ? 24 * 60 : this.booking.duration,\n                    ignore: this.booking.icaluid,\n                    recurrence_count: this.booking.recurrence_count,\n                    recurrence_period: this.booking.recurrence_period,\n                    recurrence_endTz: this.booking.recurrence_endTz,\n                    recurrence_interval: this.booking.recurrence_interval,\n                    recurrence_starts: this.booking.recurrence_starts,\n                    is_recurrent: this.booking.is_recurrent,\n                    recurrence_days: this.booking.recurrence_days\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.bookable) {\n                                this.lastMomentConflict = true;\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        if (space_list.length < spaces.length) {\n                            this.lastMomentConflict = true;\n                            return reject(\n                                `${spaces[0].name} is not available at the select time period.`\n                            );\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n\n    public openConflictsModal(){\n        const ref = this._dialog.open<ConflictsModalComponent,\n        ConflictsModalComponentData>(ConflictsModalComponent, {\n        maxWidth: '95vw',\n        width: '32em',\n        data: {\n            room_name: this.booking.room.local_name,\n            conflicts: this.booking.recurrence_exceptions,\n            copy_conflicts: true,\n            timezone: this.booking.timezone\n        }\n        });\n\n        this.subscription(\n        'modal_events',\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            if(event.reason === 'close'){\n                ref.close();\n            }else if(event.reason  === 'action'){\n                navigator.clipboard.writeText(this.conflictsText)\n            }\n            \n        })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    public get conflictsText(){\n        let text = ''\n        this.booking.recurrence_exceptions.map((date)=>{\n            const dateTZ = new DateTZ({date: date*1000});\n            const display = dateTZ.formatDate('ccc dd MMM yyyy');\n            text = `${text}\\n${display}${dateTZ.isSameDate(DateNow(new Date()), 'day') ? ' (Today)' : ''}`;\n        })\n        return text\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\" *ngIf=\"booking.is_recurrent\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n            <div\n                class=\"tooltip\"\n                *ngIf=\"booking.recurrence_exceptions && booking.recurrence_exceptions.length > 0\"\n                (click)=\"openConflictsModal()\"\n            >\n                Conflicts\n            </div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\">\n                        <div class=\"text\" [title]=\"item?.name\">{{ item?.local_name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"bookingDetails?.bookedBy?.display\" >\n            <label>Booked by<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\" [title]=\"'Booked By: ' + (bookingDetails.bookedBy.value)\">\n                {{ bookingDetails.bookedBy.value }}\n            </div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" [disabled]=\"lastMomentConflict\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" [disabled]=\"lastMomentConflict\" (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close *ngIf=\"settings.concierge\">Close</button>\n    <ng-container *ngIf=\"!settings.concierge\">\n        <button mat-button class=\"inverse\" name=\"new\" (click)=\"newBooking()\">New Booking</button>\n        <a button mat-button mat-dialog-close (click)=\"toSchedule()\">My Day</a>\n    </ng-container>\n</ng-template>\n","import {\n    Component,\n    Input,\n    OnInit, ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { distinctUntilChanged, first, skip } from 'rxjs/operators';\n\nimport {\n    BaseDirective,\n    closestToTimeSlotTz,\n    Identity,\n    unique\n} from '@mckinsey-converge/base';\nimport {\n    ApplicationService,\n    arrayWithValues,\n    BookingAction,\n    CateringOrder,\n    SeriesAction,\n    SettingsService,\n    User,\n    UsersService\n} from '@mckinsey-converge/data-common';\n\nimport { NewUserModalComponent } from '../new-user-modal/new-user-modal.component';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData\n} from '../space-select-modal/space-select-modal.component';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { DateTime } from 'luxon';\n\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    public nowTz: DateTZ = DateNow(new Date());\n    /** From date input for date field */\n    public fromDateTz: DateTZ = this.nowTz.setValue({ minute: Math.ceil(this.nowTz.minutes / 5) * 5 });\n    /** Last bookable date, concierge only */\n    public readonly untilDateTz = DateNow(new Date()).addValue({ days: 365 }).endOfValue('day');\n    public isConcierge: boolean;\n    public localTimezone = DateNow(new Date()).building_tz;\n    public localStart = \"\";\n    public localEnd = \"\";\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog,\n        private settingsService: SettingsService,\n        private cdRef: ChangeDetectorRef\n    ) {\n        super();\n        this.isConcierge = this.settingsService.concierge;\n    }\n\n    public ngOnInit(): void {\n        // Trim title \n        // this.form.get('title').setValue(this.form.get('title').value.trim());\n        this.localTimezone = DateNow(new Date()).building_tz;\n        const building_tz = (\n            this.form.controls.action &&\n            (\n                this.form.controls.action.value === 'booking_clone' ||\n                this.form.controls.action.value === 'clone' ||\n                this.form.controls.action.value === 'edit' ||\n                this.form.controls.action.value === 'booking_edit'\n            ) &&\n            this.form.controls.dateTz &&\n            this.form.controls.dateTz.value\n        ) ? this.form.controls.dateTz.value.building_tz : this.localTimezone;\n\n        this.nowTz = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz });\n        this.fromDateTz = closestToTimeSlotTz(this.nowTz, 15);\n\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n\n        this.updateCoachmarkTimes(this.form.controls.timezone.value);\n        this.subscription('formChanges',  this.form.valueChanges\n            .pipe(\n                skip(1), // initial form changes\n                distinctUntilChanged())\n            .subscribe(() => {\n                this.timeout('update_coachmark', () => {\n                    this.updateCoachmarkTimes(this.form.controls.timezone.value);\n                }, 500);\n            })\n        );\n\n        this.subscription('isRecurrentChanges',  this.form.controls.is_recurrent.valueChanges\n            .subscribe(() => {\n                const recurrenceStarts = this.form.controls.recurrence_starts\n                if(!this.form.controls.is_recurrent.value){\n                    recurrenceStarts.clearValidators()     \n                }else{\n                    const arrayValidators = [Validators.required];\n                    arrayValidators.push(arrayWithValues);\n                    recurrenceStarts.setValidators(arrayValidators);\n                }\n                recurrenceStarts.updateValueAndValidity()\n            })\n        );     \n\n        /**Disable Inputs */\n        this.disableInputs();\n\n        /**turn is_recurrent to false if editing or cloning a stand-alone/occurrence */\n        if(this.form.controls.id?.value && !this.form.controls.action?.value){\n            this.form.controls.is_recurrent.setValue(false)\n        }\n    }\n\n    /**\n     * \n     * @param key : formcontrol name \n     * Function trim value being submitted with only spaces/beginning/end \n     */\n    public trim(key: string): void {\n        this.form.get(key).setValue(this.form.get(key).value.trim());\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].local_name\n            : spaces.length > 1\n                ? `${spaces.length} spaces selected`\n                : 'No Spaces selected';\n    }\n\n    public disableInputs() {\n        const { id, action, needs_space, is_recurrent } = this.form.value;\n        const has_id = !!id;\n        const is_edit = action === BookingAction.EDIT;\n        if (has_id) {\n            this.form.get('is_recurrent')?.disable();\n        }\n\n        if (!this.isConcierge && !needs_space) {\n            this.form.get('has_catering')?.disable();\n        }\n        if(has_id && is_edit && is_recurrent){\n            this.form.get('dateTz')?.disable()\n            this.form.patchValue({ action: null });\n        }\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    dateTz: this.form.controls.dateTz.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                    needsCatering: !!this.form.controls.catering?.value?.length,\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    const catering = this.form.controls?.catering?.value.map((order: CateringOrder) => {\n                        order.location = space_list[0].name;\n                        order.location_id = space_list[0].email;\n                        return order;\n                    })\n                    this.form.controls.catering?.setValue(catering || [])\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n                if (event.reason === 'close') {\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto'\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                    this.cdRef.detectChanges();\n                }\n            })\n        );\n    }\n\n    private updateCoachmarkTimes(timezone: string) {\n        if (!timezone) timezone = this.localTimezone;\n        // Resolve the problem that locally I might have the same TZ offset but the names don't match.\n        const localTzOffset = DateTime.now().setZone(this.localTimezone).offset;\n        const buildingTzOffset = DateTime.now().setZone(timezone).offset;\n        const dateTz = this.form.controls.dateTz.value;\n        if (dateTz && localTzOffset !== buildingTzOffset) {\n            const startDate = dateTz.clone();\n            this.localStart = startDate.formatLocalDate(\"h:mma\");\n            this.localEnd = startDate.addValue({ minutes: this.form.value.duration }).formatLocalDate(\"h:mma\");\n        } else {\n            // No location is selected so coachmark is hidden\n            this.localStart = \"\";\n            this.localEnd = \"\";\n        }\n        this.cdRef.detectChanges();\n    }\n\n    public get isSeriesAction(){\n        return this.form.value.action === SeriesAction.CLONE || this.form.value.action === SeriesAction.EDIT\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.value.id && form.controls.space_list && !isSeriesAction\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" name=\"title\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" (blur)=\"trim('title')\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n            >\n            {{ ( form?.get('title').errors && form?.get('title').hasError('pattern')) \n                ? 'Some special characters (^=`~!@#$%*{};:\\'_\\\",.\\<>) are not allowed' : 'Title is required'}} \n            </mat-error\n            >\n        </mat-form-field>\n    </div>\n\n    <div class=\"group date\" *ngIf=\"!form.get('is_recurrent')?.value\">\n        <!-- this is our regular booking date input -->\n        <div class=\"date-field\" name=\"date\" *ngIf=\"form.controls.dateTz\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <date-tz-date-picker\n                [error]=\"form.controls.dateTz.touched && form.controls.dateTz.invalid && form.controls.dateTz.errors.date\"\n                [class.full-width]=\"form.controls.action.value === 'booking_clone'\" \n                name=\"date\" \n                class=\"time-inputs\"\n                [fromDateTz]=\"fromDateTz\"\n                [untilDateTz]=\"isConcierge ? untilDateTz : null\"\n                formControlName=\"dateTz\"\n                [invalid]=\"form.controls.dateTz.invalid\"\n                [can_pick_today]=\"false\"\n            ></date-tz-date-picker>\n            <div class=\"error info\" *ngIf=\"form.controls.dateTz.touched && form.controls.dateTz.invalid && form.controls.dateTz.errors.date\">\n                Date and time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" name=\"start-time\" *ngIf=\"form.controls.dateTz\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <date-tz-time-field\n                class=\"time-inputs\"\n                [required]=\"true\"\n                name=\"start-time\"\n                [fromDateTz]=\"fromDateTz\"\n                [startFromDateTz]=\"(form.controls.is_before_date && form.controls.is_before_date.value === true) &&\n                    (\n                        form.controls.action.value === 'booking_clone' ||\n                        form.controls.action.value === 'clone' ||\n                        form.controls.action.value === 'booking_edit' ||\n                        form.controls.action.value === 'edit'\n                    )\"\n                [all_day]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.dateTz.value\"\n                [disabled]=\"form.value.all_day\"\n                (ngModelChange)=\"form.controls.dateTz.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n                [show_current]=\"form.controls.id && form.controls.id.value\"\n            ></date-tz-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.dateTz.touched && form.controls.dateTz.invalid && !form.controls.is_recurrent && form.controls.dateTz.errors.start\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" name=\"duration\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    name=\"all-day\"\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                >All day booking\n                </mat-checkbox\n                >\n            </div>\n            <date-tz-duration-field\n                class=\"time-inputs\"\n                name=\"duration\"\n                [startDateTz]=\"form.controls.dateTz.value\"\n                [required]=\"true\"\n                [all_day]=\"form.controls.all_day?.value\"\n                formControlName=\"duration\"\n            ></date-tz-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n        <div *ngIf=\"localStart && localEnd\" class=\"coachmark\">\n            Please be aware that this booking starts at {{localStart}} and ends at {{localEnd}} in your local timezone.\n        </div>\n    </div>\n    <div class=\"recurrence-siwch\">\n        <mat-slide-toggle\n        class=\"mck-slide-toggle\"\n        labelPosition=\"after\"\n        name=\"recurrence\"\n        formControlName=\"is_recurrent\"\n        >Recurring booking</mat-slide-toggle>\n    </div>\n    <!-- this is recurring booking form that appears when the above recurrence toggle is enabled -->\n    <recurrence-booking-form *ngIf=\"form.get('is_recurrent')?.value\" [form]=\"form\"></recurrence-booking-form>\n    <div class=\"field\" name=\"organiser\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"\n                             *ngIf=\"isConcierge\"></a-user-search-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"!isConcierge\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"attendees\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" name=\"booking-type\" *ngIf=\"form.controls.booking_type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"booking_type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" name=\"need-space\" *ngIf=\"!isConcierge && form.controls.needs_space\">\n        <mat-checkbox formControlName=\"needs_space\" i18n=\"Booking form need space label\"\n        >Need a meeting space?\n        </mat-checkbox\n        >\n    </div>\n    <div class=\"field\" name=\"has-catering\" *ngIf=\"form.controls.has_catering\">\n        <!-- [disabled]=\"!isConcierge && !form.controls.needs_space.value\" -->\n        <mat-checkbox\n            name=\"catering\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" name=\"body\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n                (blur)=\"trim('body')\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Output\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\nimport {\n    FormControl,\n    FormGroup\n} from '@angular/forms';\n\nimport {\n    ApplicationService,\n    CateringItem,\n    OrganisationService,\n    Space,\n    SpacesService\n} from '@mckinsey-converge/data-common';\nimport {\n    BaseDirective,\n    DialogEvent\n} from '@mckinsey-converge/base';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\n\n\nexport interface CateringConfirmModalData {\n    all_day: boolean;\n    form: FormGroup;\n    dateTz: DateTZ;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss']\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        let date = this._data.dateTz;\n        if (this._data.form && this._data.form.controls.delivery_time) {\n            date = date.addValue({ minutes: this._data.form.controls.delivery_time.value });\n        }\n        return date.formatDate('h:mma').toLocaleLowerCase();\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => {\n            const price = item.price\n            return amount + item.amount * price\n        }, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item.toJSON()));\n    }\n}\n","<header class=\"heading\">\n    <div i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.local_name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-menu-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-menu-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators\n} from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n    OrganisationService,\n    BookingNote,\n    CateringOrder,\n    Space,\n    UsersService,\n    CateringNotesService,\n    Booking\n} from '@mckinsey-converge/data-common';\nimport {\n    DialogEvent,\n    HashMap\n} from '@mckinsey-converge/base';\n\nimport { DateNow } from '@mckinsey-converge/date-tz';\n\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n    booking: Booking\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss']\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.pattern || this.active_form.controls.code.errors?.minlength;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce(\n            (valid, space) => valid && this.form[space.email].valid,\n            true\n        );\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _cateringNotesService: CateringNotesService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {\n    }\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._data.booking.booked_by ? this._data.booking.booked_by['name'] : this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: DateNow(new Date()).ms\n                    } as BookingNote)\n            );\n            this._cateringNotesService.setNotes(new_notes);\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            // Save the notes\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id]\n                            ? this.form[order.location_id].controls.code.value\n                            : ''\n                    })\n            );\n\n            this._data.catering.setValue(orders);\n            // This should go to the next\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            \n            this.needs_charge_code[space.email] = space?.filters?.charge_code || space?.settings?.charge_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ?\n                        [Validators.pattern(/^[a-zA-Z0-9]{4,}$/), Validators.minLength(4),  Validators.required ] : [Validators.pattern(/^[a-zA-Z0-9]{4,}$/), Validators.minLength(4)])\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el?.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.local_name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code\n                    <span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                    <mat-error i18n=\"Catering details charge code error\">\n                        {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Output\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\nimport {\n    BaseDirective,\n    DialogEvent\n} from '@mckinsey-converge/base';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LegacyUiModule } from '@mckinsey-converge/legacy-ui';\nimport { UiModule } from '@mckinsey-converge/ui';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NoCateringModalComponent } from './no-catering-modal/no-catering-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BaseModule } from '@mckinsey-converge/base';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { BookingFormComponent } from './booking-form/booking-form.component';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nconst DECLARATIONS = [\n    SpaceSelectModalComponent,\n    NewUserModalComponent,\n    ConfirmModalComponent,\n    NoCateringModalComponent,\n    BookingCateringConfirmModalComponent,\n    CateringDetailsModalComponent,\n    RequirementDetailsModalComponent,\n    BookingConfirmComponent,\n    UserFormComponent,\n    BookingFormComponent,\n];\n\n@NgModule({\n    imports: [\n        LegacyUiModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        UiModule,\n        BaseModule,\n        EditorModule,\n    ],\n    declarations: [\n        ...DECLARATIONS\n    ],\n    exports: [\n        ...DECLARATIONS,\n        BaseModule\n    ]\n})\nexport class LegacyOverlaysModule {\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { BaseDirective, DialogEvent } from '@mckinsey-converge/base';\nimport { generateUserForm, User } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User();\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n                external: true,\n                visitor: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button name=\"previous\" class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button name=\"next\" (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","import {\n    Component,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport {\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    BaseDirective,\n    DialogEvent\n} from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'no-catering-modal',\n    templateUrl: './no-catering-modal.component.html',\n    styleUrls: ['./no-catering-modal.component.scss']\n})\nexport class NoCateringModalComponent extends BaseDirective {\n    constructor(\n        private _dialog_ref: MatDialogRef<NoCateringModalComponent>,\n    ) {\n        super();\n    }\n\n    // /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    // Submit the Survey in it's current state.\n    public confirm() {\n        this.event.emit({ reason: 'done' });\n        this._dialog_ref.close();\n    }\n\n    // Close the modal\n    public cancel() {\n        this.event.emit({ reason: 'close' });\n        this._dialog_ref.close();\n    }\n}\n","<div>\n    <mat-dialog-content>\n        <div class=\"nc-modal\">\n            <div class=\"mck-column modal-heading\">\n                <div class=\"header\">\n                    <img src=\"assets/img/no-catering-room.svg\" />\n                    <p>Catering is not available for your new room selection. \n                    <br>Are you sure you want to change rooms?</p>\n                </div>\n            </div>\n            <mat-dialog-actions>\n                <mck-modal-button-row\n                    primaryLabel=\"Yes, proceed\" (primarySubmit)=\"confirm()\"\n                    secondaryLabel=\"Cancel\" (secondarySubmit)=\"cancel()\"\n                ></mck-modal-button-row>\n            </mat-dialog-actions>            \n        </div>\n    </mat-dialog-content>\n</div>","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators\n} from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n    BookingNote,\n    OrganisationService,\n    SettingsService,\n    Space,\n    UsersService\n} from '@mckinsey-converge/data-common';\nimport {\n    DialogEvent,\n    HashMap\n} from '@mckinsey-converge/base';\n\nimport { DateNow } from '@mckinsey-converge/date-tz';\n\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean;\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get has_recurrence(): boolean {\n        return false\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.minlength || this.active_form.controls.code.errors?.pattern;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    public isConcierge: boolean;\n    public frontend: string;\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData,\n        private _settings: SettingsService,\n    ) {\n        this.isConcierge = _settings.concierge;\n        this.frontend = _settings.frontend;\n    }\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes \n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value.trim(),\n                space: space.email,\n                date: DateNow(new Date()).ms\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._content_el.nativeElement.scrollTo({\n                top: this._content_el.nativeElement.scrollHeight,\n                left: 0,\n                behavior: 'smooth'\n            });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            // this.needs_charge_code[space.email] = space?.settings?.equipment_code || building?.required?.equipment_code || false;\n            const { filters, settings } = space;\n            const roomBasedEqCode = filters?.equipment_code || settings?.equipment_code;\n            const officeBasedEqCode = building?.required?.equipment_code;\n            this.needs_charge_code[space.email] = roomBasedEqCode !== undefined ? roomBasedEqCode : officeBasedEqCode !== undefined ? officeBasedEqCode: false;\n\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ?\n                        [Validators.pattern(/^[a-zA-Z0-9]*$/), Validators.minLength(4),  Validators.required] : [Validators.minLength(4), Validators.pattern(/^[a-zA-Z0-9]*$/)]\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required, Validators.pattern(/^(?!0+$)/)])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.email].invalid && form[space.email].touched\">\n                        {{\n                        space.local_name +\n                        (form[space.email].invalid && form[space.email].touched ? '*' : '')\n                        }}\n                    </span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <main class=\"{{frontend}}\">\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text {{frontend}}\" i18n=\"Booking equipment information\">\n                {{\n                has_recurrence && !isConcierge\n                    ? 'To update headcount information, add equipment or catering, please edit individual meeting occurences in My Day'\n                    : \"Would you like to add equipment to your booking's spaces?\"\n                }}\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\" *ngIf=\"!has_recurrence || isConcierge\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div\n                    class=\"field\"\n                    name=\"charge-code\"\n                    *ngIf=\"!has_recurrence || needs_charge_code[space_list[active_space].email] || isConcierge\"\n                >\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                    >*</span\n                    >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Catering details charge code error\">\n                            {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\" name=\"head-count\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                            numbersOnly\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    BehaviorSubject,\n    Observable,\n    of,\n    Subject\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    first,\n    map,\n    switchMap,\n    take,\n    withLatestFrom\n} from 'rxjs/operators';\nimport {\n    Building,\n    mapBuildingToSelectOption,\n    mapCityToAllSelectOption,\n    OrganisationService,\n    SettingsService,\n    Space,\n    SpaceBookingRuleOptions,\n    SpacesService,\n    toggleSelectedByGroup,\n    User,\n    UsersService\n} from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport {\n    DialogEvent,\n    HashMap,\n    Identity,\n    unique\n} from '@mckinsey-converge/base';\nimport { NoCateringModalComponent } from '../no-catering-modal/no-catering-modal.component'\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { SelectOption } from '@mckinsey-converge/ui';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    dateTz: DateTZ;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n    /** Booking needs catering */\n    needsCatering?: boolean,\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string | string[]>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** host to load (only in staff) **/\n    public host: User;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    public isConcierge: boolean;\n    public frontend: string;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return false;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    public formGroup = new FormGroup({\n        location: new FormControl([]),\n    });\n\n    public options = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public selectedOptions = new BehaviorSubject<SelectOption<any>[]>([]);\n\n\n    public noCateringDialogRef: MatDialogRef<NoCateringModalComponent, any>;\n\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n\n\n    public get initialBuildingIds(): string[] {\n        return this._org.building ? [this._org.building.id] : [];\n    }\n\n    public savedSelection\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n        this.isConcierge = _settings.concierge;\n        this.frontend = _settings.frontend;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((bld) => {\n                    this.loading = true;\n                    const zone_ids: string[] = [];\n                    /* istanbul ignore else */\n                    if (this.active_building) {\n                        zone_ids.push(this.active_building.id);\n                    }\n\n                    if (bld?.includes('|')) {\n                        bld = this.savedSelection\n                    }\n\n                    const id = request_id;\n                    return this._spaces.available({\n                        zone_ids: bld?.length ? bld : this._data.spaces[0].building.id || zone_ids.join(','),\n                        dateTz: this._data.dateTz,\n                        duration: this._data.duration\n                    }).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [], error: _ })),\n                map((resp: { id: number, list: Space[] }) => {\n                    this.loading = false;\n                    const filtered_list = resp.list.filter((space: Space) => {\n                        // if concierge skip rules check.\n                        if (this._settings.concierge) {\n                            return (this.active_type && this.active_type.id ? space.zones.includes(`${this.active_type.id}`) : true) &&\n                                !this.selected_spaces.find((s) => s.id === space.id);\n                        }\n\n                        const rules = space.rulesFor({\n                            dateTz: this._data.dateTz,\n                            duration: this._data.duration,\n                            host: this.host || this._data.host\n                        });\n                        return (\n                            rules.hide !== true &&\n                            (this.active_type && this.active_type.id\n                                ? space.zones.includes(`${this.active_type.id}`)\n                                : true) &&\n                            !this.selected_spaces.find((_space) => _space.id === space.id)\n                        );\n                    });\n                    return resp.id === request_id ? filtered_list : this.spaces;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.spaces = list.filter((space) => {\n                        if (!space.available) {\n                            return false;\n                        }\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    });\n                    this.spaces.sort((a, b) => this.sort(a, b));\n                    if (!this.selectedOptions.value.length) {\n                        this.setDefaultBuilding()\n                    }\n                })\n            );\n            this.active_building = this._data.spaces?.length\n                ? this._org.buildings.find((i) => i.id === this._data.spaces[0].level.building_id)\n                : this._org.building;\n            this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n                this._org.space_types || []\n            );\n            this.active_type = this.types[0];\n            this.change$.next('');\n        });\n\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            const city = this._org.building.city\n            const timezone = this._org.building.timezone\n            const grouped_by_city = {\n                key: { name: city, timezone },\n                value: bld_list?.filter((bld) => bld.city === city) || []\n            }\n            const city_buildings = grouped_by_city.value.map(\n                (bld) => mapBuildingToSelectOption(grouped_by_city.key.name, bld)\n            )\n            const buildings = [\n                mapCityToAllSelectOption(grouped_by_city.key),\n                ...city_buildings\n            ]\n            this.options.next(buildings)\n        }));\n\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter((a_space) => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        if (!this._data.needsCatering) {\n            // No catering order to warn about\n            this.event.emit({ reason: 'done', metadata: list });\n            return;\n        }\n        // Check if the room has catering \n        if (list[0].has_catering) {\n            this.event.emit({ reason: 'done', metadata: list });\n            return;\n        }\n        // If not warn that the room doesn't have catering\n        this.noCateringDialogRef = this._dialog.open(NoCateringModalComponent, {\n            panelClass: 'mck-modal-mini',\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'no-catering-modal',\n            this.noCateringDialogRef.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done') {\n                    this.event.emit({ reason: 'done', metadata: list });\n                }\n                if (event.reason === 'close') {\n                    this.event.emit({ reason: 'close' });\n                }\n            })\n        );\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            dateTz: this._data.dateTz,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n\n    public setDefaultBuilding() {\n        const defaultBld = this.options.value.filter(opt => opt.value === this._org.building.id)\n        this.selectedOptions.next(defaultBld)\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    public sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find((bld) => space_a.zones.includes(bld.id)) || { name: '', sort_order: [] };\n        const bld_b = this._org.buildings.find((bld) => space_b.zones.includes(bld.id));\n        if (bld && bld !== bld_b) {\n            return bld.name.localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return space_a.name.localeCompare(space_b.name);\n    }\n\n    public toggle(option: SelectOption<any>) {\n        // update the selected value\n        this.selectedOptions.pipe(\n            take(1),\n            withLatestFrom(this.options),\n            map(([selectedOptions, options]) => {\n                return toggleSelectedByGroup(options, selectedOptions, option);\n            })\n        ).subscribe(next => {\n            const formData = this.formGroup.value;\n            this.formGroup.setValue({\n                location: formData.location,\n            });\n            this.selectedOptions.next(next);\n            this.savedSelection = next.map((bld) => bld.value)\n\n        });\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        const list = this.spaces;\n        if (list.find((item) => item.id === space.id)) {\n            this.spaces = list.filter((item) => item.id !== space.id);\n        } else {\n            this.spaces = [space];\n        }\n    }\n\n    public clearList() {\n        this.spaces = []\n        this.savedSelection = []\n    }\n\n    public triggerSearch = () => {\n        if (this.savedSelection.length) {\n            this.change$.next(this.savedSelection)\n        } else {\n            this.spaces = []\n        }\n    }\n\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available {{frontend}}\" [formGroup]=\"formGroup\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mck-autocomplete-chip-select-item\n                    errorMessage=\"Location and office must be selected\"\n                    label=\"Location and office\"\n                    [required]=\"true\"\n                    [selectOnlyOneGroup]=\"true\"\n                    placeHolder=\"Start typing to filter location or office...\"\n                    formControlName=\"location\"\n                    [options]=\"options\"\n                    [selectedOptions]=\"selectedOptions\"\n                    (optionSelected)=\"toggle($event)\"\n                    [displayCTA]=\"true\"\n                    (chipsCleared)=\"clearList()\"\n                    [useCTAs]=\"true\"\n                    (onClickConfirm)=\"triggerSearch()\"\n                ></mck-autocomplete-chip-select-item>\n                <mck-label *ngIf=\"types && types.length > 1\">Type</mck-label>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"change$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.local_name }}</div>  \n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"has-catering\" *ngIf=\"space.has_catering\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'restaurant' }\"\n                                    title=\"Catering Available\"\n                                ></app-icon>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                    title=\"Room Capacity\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions {{frontend}}\">\n                                <button\n                                    [class.request]=\"!isConcierge && request_map[space.id]\"\n                                    name=\"add\"\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    {{ (!isConcierge && request_map[space.id]) ? 'Request' : 'Select' }}\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected {{frontend}}\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions {{frontend}}\">\n                            <button mat-icon-button name=\"remove\" (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button name=\"next\" (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No results available, please select another office. </div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"\n                    form.controls.first_name.invalid &&\n                    form.controls.first_name.touched\n                \"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\"\n                    >First name is required\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"\n                    form.controls.last_name.invalid &&\n                    form.controls.last_name.touched\n                \"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\"\n                    >Last name is required</mat-error\n                >\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"\n                    form.controls.email.invalid && form.controls.email.touched\n                \"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"email\"\n                    placeholder=\"Email Address\"\n                    i18n-placeholder\n                    formControlName=\"email\"\n                />\n                <mat-error i18n=\"User form email error\"\n                    >A valid email is required</mat-error\n                >\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","export * from './lib/legacy-ui.module';\nexport * from './lib/custom-fields';\nexport * from './lib/icon/icon.component';\nexport * from './lib/feedback/feedback.component';\nexport * from './lib/action-icon/action-icon.component'\nexport * from './lib/user-avatar/user-avatar.component'\nexport * from './lib/bookings/catering/item/item.component'\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport {\n    ApplicationService,\n    CateringCategory,\n    CateringItem,\n    SettingsService\n} from '@mckinsey-converge/data-common';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@mckinsey-converge/animations';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { PackageOptionsModalComponent } from '../package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n    public initial_state = null;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                /* istanbul ignore else */\n                if (list) {\n                    list += '\\n\\n';\n                }\n                return (list += `${item.name}${\n                    (item as any).items\n                        ? (item as any).items.reduce(\n                        (a_list, an_item) =>\n                            (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                        ''\n                        )\n                        : ''\n                } ${item.amount ? '✓' : ''}`);\n            }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog,\n                public settings: SettingsService) {\n        super();\n        // on the item selection set the revert/close state\n        this.initial_state = this.item;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            // check the category\n            let item = list.find((an_cat) => an_cat.id === this.item.id);\n            if (item) {\n                // update the category level amount\n                this.item.setAmount(item ? item.amount : 0);\n            } else {\n                // find a category item\n                for (var cat of list) {\n                    item = cat?.items.find((an_item) => an_item.id === this.item.id);\n                    if (item) {\n                        this.item.setAmount(item ? item.amount : 0);\n                        break;\n                    }\n                };                \n            } \n\n            // On the confirm catering order modal set the revert/close state\n            if (!this.initial_state && this.item.amount) {\n                this.initial_state = this.item;\n            }\n\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n                // MCK-1550 fix\n                const price = this.item.price;\n                item.setPrice(price)\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        let updatedList: CateringItem[] = [];\n        this.selectPackageOptions().then(\n            (confirmed_item) => {\n                // Update the existing category package\n                this.field.value.forEach((category: CateringCategory) => {\n                    if (category.id === confirmed_item.id) {\n                        updatedList.push(new CateringCategory(confirmed_item))\n                    } else {\n                        updatedList.push(category)\n                    }\n                })\n                this.field.setValue(updatedList.filter((an_item) => an_item.amount));\n            },\n            () => {\n                this.item.setAmount(999);\n                this.timeout('amount', () => this.item.setAmount(0), 5);\n                this._service.notifyWarn(\n                    'Package options not selected. Item removed from order'\n                );\n            }\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item)\n                },\n                autoFocus: false,\n                backdropClass: 'mck-modal-backdrop',\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    this.initial_state = this.item;\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    if (this.initial_state) {\n                        resolve(this.initial_state);\n                    } else {\n                        reject();\n                    }\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item && (!item.out_of_stock || settings.concierge)\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')' | safe:'style'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.availableItems.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.availableItems.length, plural, =1 { Contains {{ item.availableItems.length }} item } other {\n                Contains {{ item.availableItems.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.availableItems.length || item.package\"\n        [useInput]=\"item.must_select === 0 || item.availableItems.length === 0\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.availableItems && item.availableItems.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.availableItems\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [disabled]=\"!settings.concierge && disabled\"\n        [field]=\"field\"\n    ></a-catering-menu-item>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Output\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n    DialogEvent,\n    HashMap\n} from '@mckinsey-converge/base';\nimport {\n    CateringCategory,\n    CateringItem\n} from '@mckinsey-converge/data-common';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n        category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) });\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {\n    }\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content class=\"package-options\">\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.availableItems && package.availableItems.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.availableItems\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div\n    class=\"action-field\"\n    role=\"button\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"performAction()\"\n    (click)=\"performAction()\"\n>\n    <div class=\"display\">{{ placeholder }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    templateUrl: './counter.component.html',\n    styleUrls: ['./counter.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n\n    @Input() public useInput = false;\n\n    /** Current value of the counter */\n    public value: number;\n    public previous_value: number = 0;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    public handleTimeout = null;\n\n    public onInputChange(new_value: string) {\n        if (this.handleTimeout) {\n            clearTimeout(this.handleTimeout);\n            this.handleTimeout = null;\n        }\n        this.handleTimeout = setTimeout(() => this.changeInput(new_value), 500);\n    }\n\n    public changeInput(new_value: string) {\n        let value = Number(new_value);\n        if (isNaN(value)) {\n            value = this.previous_value;\n        }\n        if (value < this.min) {\n            value = this.min || 0;\n        }\n        if (value > this.max) {\n            value = this.max || 10;\n        }\n        this.setValue(value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.previous_value = new_value;\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <input\n        #inputValue\n        aria-label=\"value input\"\n        *ngIf=\"useInput\"\n        (keyup.enter)=\"onInputChange(inputValue.value)\"\n        (blur)=\"onInputChange(inputValue.value)\"\n        (ngModelChange)=\"onInputChange($event)\"\n        [(ngModel)]=\"value\"\n        class=\"value\"/>\n    <div class=\"value\" *ngIf=\"!useInput\" aria-label=\"value\">\n        {{value || '0'}}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = DateNow(new Date()).ms;\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether form control is invalid, touched and contains errors */\n    @Input() public error?: boolean;\n    /** Optional event emitter for changes */\n    @Output() public onChange = new EventEmitter();\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || DateNow(new Date()).startOfValue('day').ms;\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || DateNow(new Date()).endOfValue('day').addValue({ years: 1 }).ms;\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        // R--- Needs TZ aware inputs\n        const date = new DateTZ({date: this.date})\n        return date.formatDate('dd MMM yyyy');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = DateNow(new Date()).ms;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new DateTZ({date: this.date });\n        const new_d = new DateTZ({date: new_value})\n        let new_date = new_d\n            .setValue({ hour: old_date.dateHour, minute: old_date.minutes })\n            .ms;\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n            this.onChange.emit(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [class.error]=\"error\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <aca-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></aca-date-picker>\n    </div>\n</mat-menu>\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport {\n    humaniseDuration,\n    Identity,\n    timeFormatString\n} from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n    /** Whether form all_day is enabled. */\n    @Input() public all_day: boolean = false;\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step, this.all_day);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time || changes.all_day) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step, this.all_day);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number, all_day: boolean = false): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        // R--- Change input to dateTz\n        let date = this.time ? new DateTZ({date: this.time}) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.addValue({ minutes: option }).formatDate(timeFormatString()).toLocaleLowerCase()} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`\n            });\n        }\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.addValue({ minutes: time }).formatDate(timeFormatString()).toLocaleLowerCase()} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`\n            });\n            time += step;\n        }\n        if (all_day) {\n           blocks.push({ id: 24 * 60, name: 'All Day' }); \n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","export * from './action-field/action-field.component'\nexport * from './counter/counter.component'\nexport * from './date-field/date-field.component'\nexport * from './duration-field/duration-field.component'\nexport * from './time-field/time-field.component'\nexport * from './user-search-field/user-search-field.component'\nexport * from './user-list-field/user-list-field.component'\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport {\n    Identity,\n    timeFormatString\n} from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = DateNow(new Date()).ms;\n    /** String representing the currently set time */\n    public time: string = DateNow(new Date()).formatDate('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    // R--- This is the form input that needs to be TZ active.\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    public get date_(){\n        return new DateTZ({date: this.date})\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = this.date_.setValue({ hour: +time[0], minute: +time[1] });\n        if (date.minutes % 15 !== 0 && !this._time_options.find(time => time.id === date.formatDate('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.formatDate(timeFormatString())}`,\n                id: date.formatDate('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = this.date_.setValue({ hour: +time[0], minute: +time[1] }).startOfValue('minute');\n            this._onChange(date.ms);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        if (!value) {\n            return;\n        }\n        this.date = value;\n        let date = this.date_.startOfValue('minute');\n        date = date.setValue({ minute: Math.ceil(date.minutes / 5) * 5 });\n        this.time = date.formatDate('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        let date = new DateTZ({date: datestamp});\n        const blocks = [];\n        if (show_past || date.isAfterDate(DateNow(new Date()))) {\n            date = date.startOfValue('day');\n        } else if (date.isAfterDate(DateNow(new Date()))) {\n            date = DateNow(new Date());\n        }\n        date = date.setValue({ minute: Math.ceil(date.minutes / step) * step });\n        const end = date.endOfValue('day');\n        // Add options for the rest of the day\n        while (date.isBeforeDate(end)) {\n            blocks.push({\n                name: `${date.formatDate(timeFormatString()).toLocaleLowerCase()}`,\n                id: date.formatDate('HH:mm')\n            });\n            date = date.addValue({ minutes: step });\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnInit,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n    Observable,\n    of,\n    Subject\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    tap,\n    map,\n    switchMap,\n    finalize\n} from 'rxjs/operators';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport {\n    ApplicationService,\n    User,\n    UsersService\n} from '@mckinsey-converge/data-common';\nimport {\n    csvToJson,\n    downloadFile,\n    filterList,\n    matchToHighlight\n} from '@mckinsey-converge/base';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    @ViewChild(MatAutocompleteTrigger, {read: MatAutocompleteTrigger}) inputAutoComplete: MatAutocompleteTrigger;\n\n    constructor(private _service: ApplicationService, private _users: UsersService,  private cdRef: ChangeDetectorRef) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                        q: query.slice(0, Math.max(this.limit, 3)),\n                        cache: 60 * 1000\n                    })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n                this.user_list.length ? this.inputAutoComplete.openPanel() : this.inputAutoComplete.closePanel();\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                    this.cdRef.detectChanges();\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            el.external = !el.email.endsWith(\"@mckinsey.com\") && !el.email.endsWith(\"@external.mckinsey.com\");\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            type=\"text\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event.trim())\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            #trigger=\"matAutocompleteTrigger\"  \n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n    Observable,\n    of,\n    Subject\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    switchMap\n} from 'rxjs/operators';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport {\n    User,\n    UsersService\n} from '@mckinsey-converge/data-common';\nimport {\n    filterList,\n    matchToHighlight\n} from '@mckinsey-converge/base';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n    @ViewChild(MatAutocompleteTrigger, {read: MatAutocompleteTrigger}) inputAutoComplete: MatAutocompleteTrigger;\n    \n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query, cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n            this.user_list.length ? this.inputAutoComplete.openPanel() : this.inputAutoComplete.closePanel();\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n            #trigger=\"matAutocompleteTrigger\"  \n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title), 1000);\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import {\n    Component,\n    Input\n} from '@angular/core';\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent\n} from './custom-fields';\nimport { IconComponent } from './icon/icon.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ACA_PIPES_MODULE } from '@acaprojects/ngx-pipes';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { ActionIconComponent } from './action-icon/action-icon.component';\nimport { PopoutMenuComponent } from './popout-menu/popout-menu.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { UserAvatarComponent } from './user-avatar/user-avatar.component';\nimport { CateringMenuItemComponent } from './bookings/catering/item/item.component';\nimport { PackageOptionsModalComponent } from './bookings/catering/package-options-modal/package-options-modal.component';\nimport { BaseModule } from '@mckinsey-converge/base';\nimport { UiModule } from '@mckinsey-converge/ui';\n\nconst DECLARATIONS = [\n    ActionFieldComponent,\n    IconComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    FeedbackComponent,\n    ActionIconComponent,\n    PopoutMenuComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n    CateringMenuItemComponent,\n    PackageOptionsModalComponent\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ACA_PIPES_MODULE,\n        FormsModule,\n        ReactiveFormsModule,\n        ...MATERIAL_MODULES,\n        BaseModule,\n        UiModule\n    ],\n    declarations: [\n        ...DECLARATIONS\n    ],\n    exports: [\n        ACA_PIPES_MODULE,\n        ...DECLARATIONS,\n        ...MATERIAL_MODULES,\n        BaseModule,\n    ]\n})\nexport class LegacyUiModule {\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output\n} from '@angular/core';\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { User } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","export * from './lib/loading.actions'\nexport * from './lib/loading.model'\nexport * from './lib/loading.effects'\nexport * from './lib/loading.selectors'\nexport * from '../testing'\n","import {\n    createAction,\n    createSelector,\n    on,\n    On,\n    props\n} from '@ngrx/store';\nimport {\n    LoadingModel,\n    wrapLoading\n} from './loading.model';\nimport {\n    selectIsLoading,\n    selectOptionalError,\n    selectOptionalSuccess,\n    selectSuccess\n} from './loading.selectors';\nimport { MemoizedSelector } from '@ngrx/store/src/selector';\nimport {\n    ActionCreator,\n    NotAllowedCheck,\n    TypedAction\n} from '@ngrx/store/src/models';\nimport { HashMap } from '@mckinsey-converge/base';\n\nexport interface Payload<T> {\n    payload: T\n}\n\nexport type LoadingAction<T> = T & TypedAction<string>\nexport type LoadingActionCreator<T extends null | undefined | object> = T extends null | undefined ?\n    ActionCreator<string, () => TypedAction<string>>\n    : ActionCreator<string, (props: T & NotAllowedCheck<T>) => LoadingAction<T>>\n\ntype ClearAction = ActionCreator<string, () => TypedAction<string>>\n\ninterface Selectors<TState, TRequest, TSuccess> {\n    success: MemoizedSelector<TState, TSuccess>\n    optionalSuccess: MemoizedSelector<TState, TSuccess | undefined>\n    error: MemoizedSelector<TState, Error | undefined>\n    loading: MemoizedSelector<TState, boolean>\n    model: (TState) => LoadingModel<TSuccess>\n}\n\nexport interface LoadingActionObject<TState, TRequest extends object | undefined, TSuccess> {\n    request: LoadingActionCreator<TRequest>\n    success: LoadingActionCreator<Payload<TSuccess>>\n    error: LoadingActionCreator<Payload<Error>>\n    clear: ClearAction,\n    ons: On<TState>[],\n    selectors: Selectors<TState, TRequest, TSuccess>\n}\n\n/**\n * Creates a {@link LoadingActionObject} that contains a set of ActionCreators\n * for request, success, error, loading, and clear data. Also, it contains\n * the necessary On reducers and selectors in order to properly connect them in\n * a standardized way to data in the application.\n *\n * `TState` is the type of data on your reducer, not global store.\n * `TRequest` is an object type to use in request methods.\n * `TSuccess` is the object type of the T parameter on `LoadingModel`.\n *\n * This assumes you have state represented by:\n * ```typescript\n * interface SomeState {\n *   stateKey: LoadingModel<TSuccess>\n * }\n * ```\n *\n * To dispatch an action:\n * ```typescript\n *\n * // request parameters depend on the object type used as second type parameter\n * // in createLoadingAction\n * this.store.dispatch(someLoadingAction.request())\n *\n * // action created with createLoadingAction<SomeState, { name: string, age: int }>\n * this.store.dispatch(someLoadingAction.request({\n *   name: 'Andrew G',\n *   age: 24\n * }))\n *\n * ```\n *\n * The generated selectors only select data from its fractured state, not the global\n * store. In order to use them, make sure you {@link select} the global state\n * before using them:\n *\n * ```typescript\n *\n * this.store.pipe(\n *   select(selectSomeState),\n *   select(someLoadingAction.selectors.success)\n * ).subscribe(next => {\n *\n * })\n *\n * ```\n *\n * @param actionPrefix - Prefixes actions to uniquely identify them.\n * @param stateKey -  The field within the reducer state to set data on.\n */\nexport const createLoadingAction = <TState, TSuccess extends object = {}, TRequest extends object | undefined = undefined>(\n    actionPrefix: string,\n    stateKey: keyof TState\n): LoadingActionObject<TState, TRequest, TSuccess> => {\n    const buildAction = (postfix: string) => `[${actionPrefix}] ${postfix}`;\n    // @ts-ignore\n    const request = createAction(buildAction('request'), props<TRequest>());\n    const success = createAction(buildAction('success'), props<Payload<TSuccess>>());\n    const error = createAction(buildAction('error'), props<Payload<Error>>());\n    const clear = createAction(buildAction('clear'));\n    const ons: On<TState>[] = [\n        on(request, (state: TState & HashMap<LoadingModel<TSuccess>>, action: LoadingAction<TRequest>) =>\n            ({\n                ...state,\n                [stateKey]: wrapLoading<TSuccess>(state[stateKey]).loading()\n            })),\n        on(success, (state: TState & HashMap<LoadingModel<TSuccess>>, action: LoadingAction<Payload<TSuccess>>) => ({\n            ...state,\n            [stateKey]: LoadingModel.success(action.payload)\n        })),\n        // some reason specifying state like in success and request does not work.\n        on(error, (state: any, action: LoadingAction<Payload<Error>>) => ({\n            ...state,\n            [stateKey]: LoadingModel.error<TSuccess>(action.payload)\n        })),\n        on(clear, () => ({\n            ...this.state,\n            [stateKey]: LoadingModel.empty()\n        }))\n    ];\n    const selectData = (state: TState) => {\n        if (!state) {\n            console.warn('[LoadingActions] State is empty for key', stateKey);\n        }\n        return wrapLoading<TSuccess>(state?.[stateKey] as unknown as LoadingModel<TSuccess>);\n    };\n    const selSuccess = createSelector<TState, LoadingModel<TSuccess>, TSuccess>(\n        selectData,\n        selectSuccess\n    );\n    const selOptionalSuccess = createSelector(\n        selectData,\n        selectOptionalSuccess\n    );\n    const selError = createSelector(\n        selectData,\n        selectOptionalError\n    );\n    const selLoading = createSelector(\n        selectData,\n        selectIsLoading\n    );\n    return {\n        request,\n        success,\n        error,\n        clear,\n        ons,\n        selectors: {\n            success: selSuccess,\n            optionalSuccess: selOptionalSuccess,\n            error: selError,\n            loading: selLoading,\n            model: selectData\n        }\n    };\n};\n","import {\n  Actions,\n  ofType\n} from '@ngrx/effects';\n\nimport { \n  LoadingAction,\n  LoadingActionObject\n} from '../../../loading/src/lib/loading.actions';\n\nimport {\n  catchError,\n  flatMap,\n  map\n} from 'rxjs/operators';\nimport {\n  Observable,\n  of\n} from 'rxjs';\nimport { TypedAction } from '@ngrx/store/src/models';\n\n/**\n * This creates an effect to use in Effects classes. This coordinates a simple\n * success and error payload effect.\n * @param actions - The actions object\n * @param actionObject - The created createLoadingAction object.\n * @param caller - Define what API method or asynchronous operation is needed to\n * run this. Return TSuccess.\n */\nexport const createLoadingEffect = <TState, TSuccess = {}, TRequest extends object | undefined = {}>(\n  actions: Actions, actionObject: LoadingActionObject<TState, TRequest, TSuccess>,\n  caller: (action: LoadingAction<TRequest>) => Promise<TSuccess>): Observable<TypedAction<string>> => actions.pipe(\n  ofType(actionObject.request),\n  flatMap((action) => caller(action as LoadingAction<TRequest>)),\n  map((response: TSuccess) => actionObject.success({ payload: response })),\n  catchError(err => {\n    return of(actionObject.error({ payload: err }));\n  })\n);\n","/* eslint-disable no-underscore-dangle,no-useless-constructor */\n/**\n * Wraps around the typical data objects we write for success, error, loading, and empty state. This convenience\n * wrapper consolidates all of that logic into a handy wrapper.\n */\nexport class LoadingModel<T = {}> {\n    static empty = <T>() => new LoadingModel<T>(false, false, false, undefined);\n\n    static success = <T>(success?: T): LoadingModel<T> =>\n        new LoadingModel(false, false, true, success);\n\n    static error = <T>(error?: Error, optionalSuccess?: T): LoadingModel<T> =>\n        new LoadingModel<T>(false, true, false, optionalSuccess, error);\n\n    /**\n     * Mutates the model with a success state, preserving other state fields.\n     * @param success - override success state.\n     */\n    mutate = <T2 = T>(\n        success: T2 | null) => new LoadingModel(\n        this.isLoading,\n        this.hasError,\n        !!success,\n        !success ? undefined : success\n    );\n\n    loading = (success: T | null = this.success) =>\n        new LoadingModel(\n            true,\n            false,\n            !!success && this.hasSuccess,\n            !success ? undefined : success\n        );\n\n    public get success(): T {\n        return this._success as T;\n    }\n\n    public get optionalSuccess(): T | undefined {\n        return this._success;\n    }\n\n    constructor(\n        public isLoading: boolean,\n        private hasError: boolean,\n        private hasSuccess: boolean,\n        private _success?: T,\n        public error?: Error\n    ) {\n    }\n\n    isEmpty = () => !this.isSuccess() && !this.isError();\n\n    hasLoaded = () => !this.isEmpty() && !this.isLoading;\n\n    isSuccess = () => this.hasSuccess;\n\n    isError = () => this.hasError;\n\n    shouldLoad = () => !this.isSuccess() && !this.isLoading;\n\n    public toString = () =>\n        `Loading: ${this.isLoading}, Success: ${this.hasSuccess}:**${this._success}**, ` +\n        `Error: ${this.hasError}:${this.error}`;\n}\n\n/**\n * Wraps an object that conforms to LoadingModel to restore object loss from\n * hydrating state during development.\n */\nexport const wrapLoading = <T extends any>(loading: any): LoadingModel<T> => {\n    if (loading instanceof LoadingModel) {\n        return loading;\n    } else {\n        if (!loading) {\n            return LoadingModel.empty();\n        } else {\n            return new LoadingModel(\n                loading.isLoading || false,\n                loading.hasError || false,\n                loading.hasSuccess || false,\n                loading._success,\n                loading.error\n            );\n        }\n    }\n};\n","import { LoadingModel, wrapLoading } from './loading.model';\n\nexport const selectSuccess = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).success;\nexport const selectOptionalSuccess = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).optionalSuccess;\nexport const selectIsLoading = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).isLoading;\nexport const selectIsSuccess = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).isSuccess();\nexport const selectOptionalError = (state: LoadingModel<any>) =>\n  wrapLoading<any>(state).error;\nexport const selectIsError = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).isError();\nexport const selectHasLoaded = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).hasLoaded();\nexport const selectIsEmpty = <T>(state: LoadingModel<T>) =>\n  wrapLoading<T>(state).isEmpty();\n\n","import {\n  Observable,\n  Subject\n} from 'rxjs';\nimport { Action } from '@ngrx/store';\nimport { Actions } from '@ngrx/effects';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { take } from 'rxjs/operators';\nimport {\n  LoadingActionObject\n} from '../src/lib/loading.actions';\n\nexport const generateMockActions = () => {\n  const dispatcher = new Subject<Action>();\n  return {\n    dispatcher,\n    actions: new Actions(dispatcher)\n  };\n};\n\n/**\n * Simple verifier that checks if the request action results in a success returned.\n */\nexport const verifyActionSuccess = <TState, TSuccess, TRequest extends object | undefined = {}>(\n  action: LoadingActionObject<TState, TRequest, TSuccess>,\n  effect: Observable<TypedAction<string>>,\n  dispatcher: Subject<Action>,\n  options: {\n    data: TSuccess,\n    payload?: TRequest,\n  }) => {\n  let result: TypedAction<string>;\n  effect\n    .pipe(take(1))\n    .subscribe(next => {\n      result = next;\n    });\n  // payload has type issues, just ignore them since we specify TRequest as type param already.\n  dispatcher.next(action.request((options.payload || {}) as never));\n\n  expect(result).toBeDefined();\n  expect(result).toStrictEqual(action.success({ payload: options.data }));\n};\n\n/**\n * Simple verifier that checks if the request action results in a failure returned.\n */\nexport const verifyActionError = <TState, TRequest extends object, TSuccess>(\n  action: LoadingActionObject<TState, TRequest, TSuccess>,\n  effect: Observable<TypedAction<string>>,\n  dispatcher: Subject<Action>,\n  options: {\n    error: Error,\n    payload?: TRequest\n  }) => {\n  let result: TypedAction<string>;\n  effect\n    .pipe(take(1))\n    .subscribe(next => {\n      result = next;\n    });\n  // payload has type issues, just ignore them since we specify TRequest as type param already.\n  dispatcher.next(action.request((options.payload || {}) as never));\n\n  expect(result).toBeDefined();\n  expect(result).toStrictEqual(action.error({ payload: options.error }));\n};\n","export * from './effects.testing'\n","import { createLoadingAction } from '../../../loading/src/lib/loading.actions';\nimport { Space } from '../../../data-common/src/lib/spaces/space.class';\nimport {\n    RoomQueryOptions,\n    RoomState,\n    RoomStoreState\n} from './rooms.types';\nimport {\n    createAction,\n    createSelector,\n    props\n} from '@ngrx/store';\n\nexport const roomStateSelector = (state: RoomStoreState) => state.rooms;\n\nexport const loadRoomsWithQuery = createAction('[Rooms] Load Rooms with query', props<RoomQueryOptions>());\n\nexport const loadRoomsForResults = createLoadingAction<RoomState, Space[], RoomQueryOptions>('Rooms', 'query');\n\nexport const loadRoomsForResultsMap = createLoadingAction<RoomState, Space[], RoomQueryOptions>('Rooms for map', 'query');\n\n\nexport const loadLaterThatDayResults = createLoadingAction<RoomState, Space[], RoomQueryOptions>('Later Rooms', 'later');\n\nexport const loadNextDayResults = createLoadingAction<RoomState, Space[], RoomQueryOptions>('Next Day Rooms', 'next');\n\nexport const loadByIdResults = createLoadingAction<RoomState, Space[], RoomQueryOptions>('By Id Rooms', 'byid');\n\nexport const selectRoomResultsSuccess = createSelector(roomStateSelector,\n    loadRoomsForResults.selectors.optionalSuccess);\n\nexport const loadDiffSizeResults = createLoadingAction<RoomState, Space[], RoomQueryOptions>('Different Size Rooms', 'size');\n","export * from './lib/storage.module';\nexport * from './lib/localstorage.wrapper'\n","export class LocalStorageWrapper {\n\n  constructor(private prefix: string) {\n  }\n\n  protected setValue(key: string, value: string) {\n    localStorage.setItem(`${this.prefix}.${key}`, value);\n  }\n\n  protected getValue<T>(key: string): string | null {\n    return localStorage.getItem(`${this.prefix}.${key}`) as string | null;\n  }\n\n  protected removeValue(key: string) {\n    localStorage.removeItem(`${this.prefix}.${key}`);\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: []\n})\nexport class StorageModule {\n}\n","export * from './lib/ui.module';\nexport * from './lib/types';\nexport * from './lib/base-template.component';\nexport * from './lib/recurrence-pattern-form/recurrence-pattern-form.component';\nexport * from './lib/recurrence-booking-form/recurrence-booking-form.component';\nexport * from './lib/conflicts-modal/conflicts-modal.component'\nexport * from './lib/override-changes-modal/override-changes-modal.component'\nexport * from './lib/date-tz-calendar-widget/date-tz-calendar-widget.component';\nexport * from './lib/date-tz-date-picker/date-tz-date-picker.component';\nexport * from './lib/date-tz-duration-field/date-tz-duration-field.component';\nexport * from './lib/date-tz-time-field/date-tz-time-field.component';\nexport * from './lib/aca-date-picker/aca-date-picker.component';\nexport * from './lib/conflict-alert-modal/conflict-alert-modal.component';","import { Component, OnInit, Input, Output, OnChanges, SimpleChanges, forwardRef, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nexport interface IDatePickerOptions {\n    /** Unix timestamp with millisecond. First selectable date */\n    from?: number;\n    /** Unix timestamp with millisecond. Last selectable date */\n    to?: number;\n    /** Luxon format string for formatting days of the week. Defaults to `DDD` */\n    day_format?: string;\n    /** Luxon format string for formatting active month. Defaults to `MMMM yyyy` */\n    month_format?: string;\n}\n\ninterface IDateBlock {\n    /** Timestamp value of the date */\n    value: number;\n    /** Day of the month to display */\n    display: string;\n    /** Whether block is the selected date */\n    active: boolean;\n    /** Whether block not selectable */\n    disabled: boolean;\n    /** Whether block outside the active month */\n    non_month: boolean;\n    /** Whether the block is today */\n    today: boolean;\n    /** Number of events on this block */\n    count?: number;\n}\n\n@Component({\n    selector: 'aca-date-picker',\n    templateUrl: './aca-date-picker.component.html',\n    styleUrls: ['./aca-date-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AcaDatePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class AcaDatePickerComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** CSS class to add to the root element of the component */\n    @Input() public klass = 'default';\n    /** Counters of the events on given dates. Key format is `yyyy-MM-dd` */\n    @Input() public counters: { [date: string]: number };\n    /** Settings for the date picker component */\n    @Input() public options: IDatePickerOptions;\n    /** Offset of the display month from the current month */\n    @Output() public month = new EventEmitter<number>();\n    /** Display the last selected day as active */\n    @Input() public show_last_selection?: boolean = true\n\n    public date: number = DateNow(new Date()).ms;\n\n    // R--- this is the date picker that needs to be TZ aware\n    /** Offset of the month displayed from the current month */\n    public offset = 0;\n    /** Minimum offset for changing the month */\n    public min_offset = -999999;\n    /** Maximum offset for changing the month */\n    public max_offset = 999999;\n    /** Blocks representing the rendering details of the display days of the month */\n    public date_list: IDateBlock[] = [];\n    /** Name of the actively displayed month */\n    public month_name = DateNow(new Date()).formatDate('MMMM yyyy');\n    /** Name of the days of the week to display */\n    public days_of_week = [];\n    /** First selectable date */\n    private from: DateTZ;\n    /** Last selectable date */\n    private to: DateTZ;\n    /** Luxon format string for formatting days of the week. Defaults to `dd` */\n    private day_format = 'EEE';\n    /** Luxon format string for formatting active month. Defaults to `MMMM yyyy` */\n    private month_format = 'MMMM yyyy';\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    /** ID of the timer used for changing the month */\n    private _change_timer: number;\n\n    public ngOnInit(): void {\n        this.generateMonth();\n        this.generateDaysOfTheWeek();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.options) {\n            this.updateOptions();\n        }\n        if (changes.counters) {\n            this.generateMonth();\n        }\n    }\n\n    /** Change date using the given block */\n    public setDate(item: IDateBlock) {\n        this.date = item.value;\n        if (this._onChange) {\n            this._onChange(this.date);\n        }\n        this.generateMonth();\n    }\n\n    /**\n     * Update offset to show the selected date\n     */\n    public updateDate(): void {\n        \n        if (!this.date) {\n            return;\n        }\n        const now = DateNow(new Date()).startOfValue('month');\n        const date_ = new DateTZ({date: this.date})\n        const date = date_.startOfValue('month');\n        if (date.valid) {\n            const difference = date.dateDiff(now, 'months', 'months');\n            if (this.offset !== difference) {\n                this.offset = difference;\n                this.month.emit(this.offset);\n            }\n            this.generateMonth();\n        }\n    }\n\n    /**\n     * Update local properties based off changes to settings\n     */\n    public updateOptions(): void {\n        if (this.options) {\n            // Setup from date\n            if (this.options.from) {\n                const date_ = new DateTZ({date: this.options.from})\n                this.from = date_.startOfValue('day');;\n                const today = DateNow(new Date()).startOfValue('month');\n                const date = this.from.startOfValue('month');\n                this.min_offset = date.dateDiff(today, 'months', 'months');\n            } else if (this.from) {\n                this.from = null;\n                this.min_offset = -999999;\n            }\n            // Setup to date\n            if (this.options.to) {\n                const date_ = new DateTZ({date: this.options.to})\n                this.to = date_.startOfValue('day');\n                const today = DateNow(new Date()).startOfValue('month');\n                const date = this.to.startOfValue('month');\n                this.max_offset = date.dateDiff(today, 'months', 'months');\n            } else if (this.to) {\n                this.to = null;\n                this.max_offset = 999999;\n            }\n            if (this.options.month_format) {\n                this.month_format = this.options.month_format || 'MMMM yyyy';\n            }\n            if (this.options.day_format) {\n                this.day_format = this.options.day_format || 'EEE';\n                this.generateDaysOfTheWeek();\n            }\n            // Update date blocks\n            this.generateMonth();\n        }\n    }\n\n    /**\n     * Generate the display blocks for the days of the active month\n     */\n    private generateMonth(): void {\n        if (!this.date) {\n            return;\n        }\n        const date = DateNow(new Date()).addValue({ months : this.offset });\n        const active = new DateTZ({date: this.date});\n        let start = date.setValue({ day: 1 }).setValue({ weekday: 7 }).subtractValue({ weeks: 1 });\n        const end_ = new DateTZ({date: start.ms})\n        const end = end_.addValue({ weeks: 1 }).endOfValue('month').addValue({ days: 2 }).endOfValue('week');\n        this.date_list = [];\n        while (start.isBeforeDate(end) || start.isSameDate(end, 'day')) {\n            this.date_list.push({\n                value: start.ms,\n                display: start.formatDate('d'),\n                active:  this.show_last_selection && active.isSameDate(start, 'day'),\n                non_month: !date.isSameDate(start, 'month'),\n                count: this.counters ? this.counters[start.formatDate('yyyy-MM-dd')] || 0 : 0,\n                disabled: (this.from ? start.isBeforeDate(this.from, 'day') : false) || (this.to ? start.isAfterDate(this.to, 'day') : false),\n                today: DateNow(new Date()).isSameDate(start, 'day')\n            });\n            start = start.addValue({ days : 1 });\n        }\n        this.month_name = date.formatDate(this.month_format);\n    }\n\n    /**\n     * Generate this weekdays to display in the header of the calendar\n     */\n    private generateDaysOfTheWeek() {\n        let date = DateNow(new Date()).startOfValue('week');\n        this.days_of_week = [];\n        for (let i = 0; i < 7; i++) {\n            this.days_of_week.push(date.formatDate(this.day_format));\n            date = date.addValue({ days : 1 });\n        }\n    }\n\n    /**\n     * Changes the month offset by the given value.\n     * Does nothing if the new month is not available to be selected\n     * @param value Number of months to change the offset by\n     */\n    public changeMonth(value: number): void {\n        if (this._change_timer) {\n            clearTimeout(this._change_timer);\n        }\n        this._change_timer = <any>setTimeout(() => {\n            const new_offset = this.offset + value;\n            const now = DateNow(new Date())\n            const date = now.addValue({ months : new_offset, days: now.dateMonth === 2 ? 2 : 0 }); //add 2 days if month is february to avoid calc errors\n            if (this.from && date.isBeforeDate(this.from, 'month')) { return; }\n            if (this.to && date.isAfterDate(this.to, 'month')) { return; }\n            this.offset = new_offset;\n            this.month.emit(this.offset);\n            this.generateMonth();\n            this._change_timer = null;\n        }, 100);\n    }\n\n    /**\n     * Reset the month offset to the month of the selected date\n     */\n    public reset() {\n        const date = new DateTZ({date: this.date});\n        const offset = this.offset;\n        this.offset = DateNow(new Date()).dateDiff(date, 'months', 'months');\n        if (offset !== this.offset) {\n            this.generateMonth();\n        }\n        this.month.emit(this.offset);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.updateDate();\n        this.generateMonth();\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div [class]=\"'date-picker' + (klass ? ' ' + klass : '')\" widget>\n    <div class=\"header\">\n        <div class=\"arrow previous\" [class.disabled]=\"offset <= min_offset\" (click)=\"changeMonth(-1)\" (touchend)=\"changeMonth(-1)\">\n            <div class=\"previous icon\"></div>\n        </div>\n        <div class=\"month\" (dblclick)=\"reset()\">{{month_name}}</div>\n        <div class=\"arrow next\" [class.disabled]=\"offset >= max_offset\" (click)=\"changeMonth(1)\" (touchend)=\"changeMonth(1)\">\n            <div class=\"next icon\"></div>\n        </div>\n    </div>\n    <div class=\"week\">\n        <div class=\"block\" *ngFor=\"let item of days_of_week\">{{item}}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"block\" *ngFor=\"let item of date_list\">\n            <div class=\"date\" \n                (click)=\"item.disabled ? null : setDate(item)\"\n                (touchend)=\"item.disabled ? null : setDate(item)\"\n                [class.non-month]=\"item.non_month\"\n                [class.active]=\"item.active\"\n            >\n                {{item.display}}\n                <div class=\"dot\" *ngIf=\"item.today\"></div>\n                <div class=\"count\" *ngIf=\"item.count\">{{item.count > 9 ? '+9' : item.count}}</div>\n            </div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\n\nexport enum AlertMode {\n    Warning = 'warning',\n    Coachmark = 'coachmark',\n    BlueCoachmark = 'blue-coachmark',\n    Error = 'error'\n}\n\nexport enum AlertBannerDisplay {\n    /**\n     * New UI\n     */\n    V2 = 'v2',\n\n    /**\n     * Default, legacy ui.\n     */\n    V1 = 'v1',\n}\n\n@Component({\n    selector: 'mck-alert-banner',\n    template: `\n        <div class=\"alert-container {{mode}}\">\n            <div class=\"alert-icon-container {{mode}}\">\n                <img [src]=\"iconPath\">\n            </div>\n            <div class=\"content-wrap\">\n                <div name=\"message\" class=\"message {{mode}} {{display}}\" [innerHTML]=\"message | sanitize\"></div>\n                <div class=\"actions-button-container {{display}}\" *ngIf=\"buttonText\">\n                    <button name=\"action-button\"\n                            color=\"{{materialColor}}\"\n                            class=\"{{materialColor}} {{display}}\"\n                            [class.mck-stroked-button]=\"display === 'v2'\"\n                            [class.mck-short]=\"display === 'v2'\"\n                            type=\"button\" mat-stroked-button\n                            (click)=\"action.emit($event)\">{{buttonText}}</button>\n                </div>\n            </div>\n            <button\n                *ngIf=\"showClose\"\n                mat-icon-button name=\"close-button\" class=\"close-button\"\n                aria-label=\"Close\"\n                color=\"{{materialColor}}\"\n                (click)=\"close.emit($event)\">\n                <img [attr.src]=\"'assets/img/' + closeIcon\">\n            </button>\n        </div>\n    `,\n    styleUrls: ['./alert-banner.component.scss']\n})\nexport class AlertBannerComponent implements OnInit, OnChanges {\n\n    @Input()\n    public mode: AlertMode = AlertMode.Warning;\n\n    @Output()\n    public close = new EventEmitter<MouseEvent>();\n\n    @Output()\n    public action = new EventEmitter<MouseEvent>();\n\n    @Input()\n    public message: string;\n\n    @Input()\n    public buttonText: string;\n\n    @Input()\n    public showClose = true;\n\n    @Input()\n    public display: AlertBannerDisplay = AlertBannerDisplay.V1;\n\n    public iconPath: string = 'assets/icon/warning-yellow.svg';\n    public materialColor: string = 'black';\n    public closeIcon: string = 'close_outline.svg';\n\n    public ngOnInit(): void {\n        this._onModeChange();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.mode) {\n            this._onModeChange();\n        }\n    }\n\n    private _onModeChange() {\n        this.iconPath = 'assets/icon/warning-yellow.svg';\n        this.closeIcon = 'close_outline.svg';\n        switch (this.mode) {\n            case AlertMode.Warning:\n                this.materialColor = 'black';\n                break;\n            case AlertMode.Coachmark:\n                this.materialColor = 'coachmark';\n                this.closeIcon = 'close_outline_coachmark.svg';\n                break;\n            case AlertMode.BlueCoachmark:\n                this.iconPath = 'assets/icon/info-bg-dark.svg'\n                this.materialColor = 'blue-coachmark'\n                break;\n            case AlertMode.Error:\n                this.iconPath = 'assets/img/error-icon.svg'\n                this.materialColor = 'white'\n                break;\n            default:\n                this.materialColor = 'black';\n        }\n    }\n\n}\n","import {\n    Component,\n    Directive,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NgControl\n} from '@angular/forms';\nimport { SelectOption } from '../types';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    from,\n    Subject\n} from 'rxjs';\nimport {\n    COMMA,\n    ENTER\n} from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {\n    distinctUntilChanged,\n    map,\n    take\n} from 'rxjs/operators';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Component({\n    selector: 'mck-autocomplete-chip-select-item',\n    template: `\n        <div class=\"mck-column mck-form-input\" [ngClass]=\"mobileFullScreen ? 'mobile-select' : ''\">\n            <button *ngIf=\"mobileFullScreen\" name=\"CloseButton\" class=\"close-button\" mat-icon-button (click)=\"loseFocus()\">\n                <div class=\"close-image\"></div>\n            </button>\n            <mck-label [required]=\"required\">{{label}}</mck-label>\n            <mat-form-field\n                appearance=\"outline\"\n                floatLabel=\"never\"\n                [ngClass]=\"showError ? 'mck-error' : ''\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\">\n                <div class=\"mck-row input-container\">\n                    <input\n                        matInput\n                        #componentInput=\"matInput\"\n                        #trigger=\"matAutocompleteTrigger\"\n                        [style.width]=\"'100%'\"\n                        [style.margin]=\"'0'\"\n                        [formControl]=\"filterFormControl\"\n                        placeholder=\"{{placeHolder}}\"\n                        type=\"text\"\n                        (focusin)=\"onFocus(true)\"\n                        (input)=\"keyedInput($event.target.value)\"\n                        [matAutocomplete]=\"auto\"\n                        [matAutocompleteConnectedTo]=\"origin\"\n                        [matChipInputFor]=\"chipList\"\n                        (matChipInputTokenEnd)=\"add($event)\"\n                    >\n                    <div class=\"mck-row\">\n                        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </div>\n                        <mck-selected-chip-count\n                            (close)=\"clearSelections()\"\n                            *ngIf=\"hasChips\"\n                            [count]=\"(chipOptions | async).length\"></mck-selected-chip-count>\n                        <div class=\"mck-column icon-container {{focused ? '' : 'not-clickable'}}\"\n                             (click)=\"onClickArrow()\" *ngIf=\"!hideDropdownCarret\">\n                            <mck-chevron-icon [up]=\"focused\"\n                                              fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n                        </div>\n                    </div>\n                </div>\n                <mck-spacer size=\"4px\" *ngIf=\"hasChips\"></mck-spacer>\n                <mat-chip-list #chipList>\n                    <!-- empty chip useful for padding -->\n                    <mat-chip *ngIf=\"focused && !hasChips\"\n                              [style.visibility]=\"'collapse'\"></mat-chip>\n                    <mat-chip *ngFor=\"let selected of (chipOptions | async)\" removable\n                              (removed)=\"removeOption(selected)\" class=\"{{selected.meta?.color ? selected.meta?.color : ''}}\">{{selected.shortDisplay}}\n                        <mck-close-icon matChipRemove [fillClass]=\"iconFillClass(selected.meta?.color)\">close</mck-close-icon>\n                    </mat-chip>\n                </mat-chip-list>\n                <mck-spacer size=\"4px\" *ngIf=\"hasChips\"></mck-spacer>\n                <mat-autocomplete\n                    class=\"{{!!mobileFullScreen && 'mobile-select'}} mck-checkbox-panel\"\n                    #auto=\"matAutocomplete\"\n                    (opened)=\"onPanelFocusChange(true)\"\n                    (closed)=\"onPanelFocusChange(false)\"\n                    (optionSelected)=\"selectOption($event.option.value)\"\n                    multiple>\n                    <div class='checkbox-container'>\n                        <mat-option\n                            [disabled]=\"!option.enabled\"\n                            class=\"mck-truncated {{(option.groupHeader || option.displayAsHeader) && 'mck-checkbox-group-header'}} {{option.groupChild && !option.displayAsHeader && 'mck-checkbox-group-child'}}\"\n                            (click)=\"$event.stopPropagation()\"\n                            *ngFor=\"let option of filteredAutocompleteOptions | async | groupHeaderPatch\"\n                            [value]=\"option.value\">\n                            <mat-checkbox\n                                [ngClass]=\"!option.enabled && 'mck-checkbox-disabled'\"\n                                [disabled]=\"!option.enabled\"\n                                [style.display]=\"'block'\"\n                                [checked]=\"option.selected\"\n                                (change)=\"onChanged(option, $event)\"\n                                (click)=\"$event.stopPropagation()\">\n                                {{option.dropdownOverride || option.display}}\n                            </mat-checkbox>\n                        </mat-option>\n                    </div>\n                    <div class='checkbox-cta-container' *ngIf='displayCTA'>\n                        <button\n                            mat-stroked-button class=\"mck-secondary-button\"\n                            (click)=\"clearSelections()\"\n                            [disabled]=\"!enableCTAs\"\n                        >\n                            Clear\n                        </button>\n                        <button\n                            mat-button class=\"mck-primary-button\"\n                            (click)=\"onFocus(false)\"\n                            [disabled]=\"!enableCTAs\"\n                        >\n                            Confirm\n                        </button>\n                    </div>\n                </mat-autocomplete>\n            </mat-form-field>\n            <mck-error-message *ngIf=\"showError\">{{errorMessage}}</mck-error-message>\n        </div>\n    `,\n    styleUrls: ['./auto-complete-chip-select-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AutoCompleteChipSelectItemComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor, OnDestroy {\n\n    @ViewChild('trigger')\n    trigger: MatAutocompleteTrigger;\n\n    @ViewChild('componentInput')\n    componentInput: HTMLInputElement;\n\n    @Input()\n    label: string;\n\n    @Input()\n    required?: boolean;\n\n    @Input()\n    feedbackInput?: boolean;\n\n    @Input()\n    loading?: boolean;\n\n    @Input()\n    placeHolder: string;\n\n    @Input()\n    options: Subject<SelectOption<any>[]>;\n\n    @Input()\n    selectedOptions: Subject<SelectOption<any>[]>;\n\n    @Input()\n    useCTAs?: boolean;\n\n    @Output()\n    optionSelected = new EventEmitter<SelectOption<any>>();\n\n    @Output()\n    feedbackOutput = new EventEmitter<any>();\n\n    @Output()\n    chipsCleared: EventEmitter<void> = new EventEmitter<void>();\n\n    @Output()\n    onClickConfirm: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * If true, only allow 1 group at a time to get selected. Show others as disabled.\n     */\n    @Input()\n    selectOnlyOneGroup = false;\n\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    @Input() public localFilter: boolean = true;\n\n    /**\n     * If error exists, a message.\n     */\n    @Input()\n    errorMessage?: string;\n\n    @Input()\n    hideDropdownCarret?: boolean;\n\n    @Input()\n    displayCTA?: boolean;\n\n    private selectOnlyOneGroupChange = new BehaviorSubject(false);\n\n    separatorKeysCodes = [ENTER, COMMA];\n\n    public filterFormControl: FormControl = new FormControl();\n\n    public focused = false;\n    public mobileFullScreen = false;\n\n    public autocompleteOptions = new BehaviorSubject<SelectOption<any>[]>([]);\n    public filteredAutocompleteOptions = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    /** List shown to user, filters children if a group header is added **/\n    public chipOptions = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    /** Form control on change handler */\n    private _onChange?: (_: SelectOption<any>[]) => void;\n    /** Form control on touch handler */\n    private _onTouch?: (_: string) => void;\n\n    private value = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public enableCTAs: boolean = false\n\n    public hasChips: boolean = false;\n\n    constructor(@Self() @Optional() private control: NgControl) {\n        super();\n        if (this.control) {\n            this.control.valueAccessor = this;\n        }\n    }\n\n    public get invalid(): boolean {\n        return this.control ? this.control.invalid : false;\n    }\n\n    public get showError(): boolean {\n        if (!this.control) {\n            return false;\n        }\n\n        const { dirty, touched } = this.control;\n\n        return this.invalid ? (dirty && touched) : false;\n    }\n\n    public iconFillClass(color?: string): string {\n        return color === 'external' ? 'mck-icon-fill-gray' : 'mck-icon-fill-white'\n    }\n\n    ngOnInit() {\n        this.subscription('autoCompleteOptions', combineLatest([\n            this.options,\n            this.selectedOptions,\n            this.selectOnlyOneGroupChange\n        ])\n            .pipe(\n                map(([options, selectedOptions, selectOnlyOneGroup]) => {\n                    this.hasChips = !!selectedOptions.length;\n                    return options.map(option => {\n                        const selected = !!selectedOptions.find(s => s.value === option.value);\n                        let enabled = true;\n                        if (selectOnlyOneGroup) {\n                            // find first group item in selection\n                            const selectedGroupHeader = selectedOptions.find(s => s.groupHeader || s.groupId === option.groupId);\n\n                            // if no options chosen, enable it, otherwise only allow selections from other options.\n                            enabled =\n                                selectedOptions.length === 0 ||\n                                (selectedGroupHeader ? selectedGroupHeader.groupId === option.groupId : false);\n                            this.enableCTAs = selectedOptions.length !== 0\n                        }\n\n                        return {\n                            ...option,\n                            enabled,\n                            selected\n                        } as SelectOption<any>;\n                    });\n                })\n            ).subscribe(next => {\n                const options = next.sort((a, b) => {\n                    if (a.groupId === b.groupId) {\n                        return b.display > a.display ? -1 : 1;\n                    }\n                    return b.groupId > a.groupId ? -1 : 1;\n                });\n                this.autocompleteOptions.next(options);\n                this.filteredAutocompleteOptions.next(this.getFilteredAutocompleteOptions(this.filterFormControl.value?.trim()));\n            }));\n        this.subscription('filterFormControlChanges',\n            this.filterFormControl.valueChanges.subscribe(value => {\n                if (this.localFilter && value.length) {\n                    this.filteredAutocompleteOptions.next(this.getFilteredAutocompleteOptions(value));\n                } else {\n                    this.filteredAutocompleteOptions.next(this.getFilteredAutocompleteOptions());\n                }\n            }));\n        this.subscription('chipOptions', this.selectedOptions\n            .pipe(map(selectedOptions => {\n                // find group headers and check if children are part of that group.\n                // if part of group, filter them out as redundant.\n                const groupHeaders = selectedOptions.filter(s => s.groupHeader) || [];\n                return selectedOptions.filter(s => s.groupHeader || s.groupChild && !(groupHeaders.find(g => g.groupId === s.groupId)));\n            }))\n            .subscribe(next => {\n                this.chipOptions.next(next);\n            }));\n\n        this.subscription('formData', this.selectedOptions\n            .pipe(map(selected => {\n                // group headers always contain children, so only pick out children for data\n                return selected;\n            }))\n            .subscribe(next => {\n                this.value.next(next);\n            }));\n\n        // tie value changes to change.\n        this.subscription('valueChanges', this.value\n            .pipe(distinctUntilChanged())\n            .subscribe(next => {\n                if (this._onChange) {\n                    // rewrote this to avoid read only error\n                    const values = [];\n                    next.forEach((v, i) => {\n                        const value = { ...v };\n                        if (v.meta?.user) {\n                            value.display = v.meta.user.name;\n                        }\n                        values.push(value);\n                    });\n                    this._onChange(values);\n                }\n            }));\n\n        window.addEventListener('scroll', this.scrollEvent, true);\n    }\n\n    getFilteredAutocompleteOptions(searchString: string = '') {\n        // Exact matches of the groupId or display value\n        const exactMatches = this.autocompleteOptions.value.filter(o => {\n            if (searchString && searchString.length) {\n                return o.groupId.toLowerCase().indexOf(searchString.toLowerCase()) === 0 || o.display.toLowerCase().indexOf(searchString.toLowerCase()) === 0;\n            }\n            return o.groupId && o.display;\n        });\n        // Fuzzier search of the dropdownOverride field\n        const moreOptions = this.autocompleteOptions.value.filter(o => {\n            if (o?.dropdownOverride?.length && searchString) {\n                const match = o.dropdownOverride?.toLowerCase().indexOf(searchString.toLowerCase()) > -1;\n                // only return found locations that don't exist in exactMatches.\n                return match && !exactMatches.find(e => {\n                    return e.value === o.value\n                });\n            }\n            return false;\n        });\n\n        // Merge the two result sets\n        let joinedOptions = exactMatches.concat(moreOptions).sort((a, b) => {\n            if (a.groupId === b.groupId) {\n                return b.display > a.display ? -1 : 1;\n            }\n            return b.groupId > a.groupId ? -1 : 1;\n        });\n\n        // Create a 1D array of the groupId\n        const groupIds = joinedOptions.map(o => o.groupId);\n        // Get a deduped list of the group parents\n        const parents = this.autocompleteOptions.value.filter(o => {\n            return o?.groupHeader && groupIds.indexOf(o.groupId) !== -1;\n        });\n\n        // Remove the parents from the joinedOptions and merge with the reduced parents set, and then sort by groupId.\n        // Resulting array sets the parents first in order so the widget renders properly.\n        const filteredAutocompleteOptions = parents.concat(joinedOptions.filter(jo => !!jo.dropdownOverride)).sort((a, b) => {\n            return b.groupId > a.groupId ? -1 : 1;\n        });\n        return filteredAutocompleteOptions;\n    }\n\n    loseFocus(): void {\n        this.mobileFullScreen = false;\n        this.focused = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.selectOnlyOneGroup) {\n            this.selectOnlyOneGroupChange.next(this.selectOnlyOneGroup);\n        }\n    }\n\n    keyedInput(matInput: string) {\n        if (this.feedbackInput) {\n            this.feedbackOutput.emit(matInput);\n        }\n    }\n\n    selectOption(value: string) {\n        this.options.pipe(\n            take(1),\n            map((options: SelectOption<any>[]) => options.find(o => o.value === value))\n        ).subscribe(next => {\n            if (next) {\n                this.optionSelected.emit(next);\n            }\n        });\n    }\n\n    removeOption(value: SelectOption<any>) {\n        this.optionSelected.emit(value);\n        if (this.useCTAs) {\n            this.onClickConfirm.emit();\n        }\n\n    }\n\n    clearSelections() {\n        this.selectedOptions.next([]);\n        this.chipsCleared.emit();\n    }\n\n    onClickArrow() {\n        // only close events we allow arrow to close panel.\n        if (this.focused) {\n            this.onFocus(false);\n        }\n    }\n\n    onPanelFocusChange(focusIn: boolean) {\n        this.onFocus(focusIn, true);\n    }\n\n    onFocus(focusIn: boolean, fromPanel?: boolean) {\n        if (!focusIn && this.useCTAs) {\n            this.onClickConfirm.emit();\n        }\n        // Only for location input???\n        if (this.localFilter && fromPanel && focusIn) {\n            // open on focus, mobile needs a refocus\n            this.mobileFullScreen = true;\n            this.timeout('showDefaults', () => {\n                // All results do not show as expected unless I focus again.\n                // Something about the mobile styles.\n                this.onFocus(true);\n            }, 100)\n        }\n\n        if (this.feedbackInput && !fromPanel) {\n            // clear input when input creates options\n            this.componentInput.value = '';\n            this.filterFormControl.setValue('');\n            this.feedbackOutput.emit('');\n        }\n\n        if (this.focused !== focusIn) {\n            this.focused = focusIn;\n            // clear on close\n            if (!focusIn) {\n                this.componentInput.value = '';\n                this.filterFormControl.setValue('');\n            }\n            if (!fromPanel) {\n                if (focusIn) {\n                    this.trigger.openPanel();\n                } else {\n                    this.trigger.closePanel();\n                    // close the mobile full screen\n                    this.loseFocus();\n                }\n            }\n        }\n    }\n\n    onChanged(value: SelectOption<any>, event: MatCheckboxChange) {\n        this.optionSelected.emit(value);\n    }\n\n    add(event: MatChipInputEvent) {\n        // reset\n        if (event.input) {\n            event.input.value = '';\n        }\n        this.filterFormControl.setValue('');\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouch = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        // TODO: disabled not implemented yet.\n        this.disabled = isDisabled;\n    }\n\n    writeValue(obj: SelectOption<any>[] | undefined): void {\n        // update selected options when this value is written\n        this.options?.pipe(\n            take(1),\n            map((options: SelectOption<any>[]) => {\n                return options.filter(o => obj ? !!obj.find(spl => o.value === spl.value) : false );\n            })\n        ).subscribe(next => {\n            this.selectedOptions.next(next);\n        });\n    }\n\n    private scrollEvent = (event): void => {\n        if (this.trigger === null) {\n          return;\n        }\n        /**\n         * IF - to confirm user not scrolling from autocomplete opened panel and close panel if scroll event triggers from outside of panel\n         */\n        if (this.trigger.panelOpen && event.target.closest('.mat-autocomplete-panel') === null && !event.srcElement.classList.contains('mat-form-field-autofill-control')) {\n            this.onFocus(false);\n            this.trigger['_element'].nativeElement.blur();\n        }\n      }\n      public ngOnDestroy(): void {\n        window.removeEventListener('scroll', this.scrollEvent, true);\n      }\n}\n\n\n","import {\n    Pipe,\n    PipeTransform\n} from '@angular/core';\nimport { SelectOption } from '../types';\n\n/**\n * Patch orphaned SelectOption children into acting as their own group headers.\n *\n * This intends to help in the common scenario where filters have (for whatever\n * reason) prevented the child's usual group header from appearing.\n */\n@Pipe({\n    name: 'groupHeaderPatch',\n})\nexport class GroupHeaderPipe implements PipeTransform {\n    transform(items: SelectOption<any>[]): SelectOption<any>[] {\n        if (!items) {\n            return [];\n        }\n\n        return items.map(v => {\n            const hasHeader = !!items.find(i => i.groupHeader && i.groupId === v.groupId);\n            return {\n                ...v,\n                displayAsHeader: !hasHeader,\n            }\n        })\n    }\n\n}\n","import { Component, Input, Output, forwardRef, SimpleChanges, OnChanges, OnInit, EventEmitter, ViewChild, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport {\n  BehaviorSubject\n} from 'rxjs';\n\n/**\n * @title Autocomplete filtering select of a single option via text search.\n */\n@Component({\n  selector: 'mck-autocomplete-select-option',\n  templateUrl: 'auto-complete-select-option.component.html',\n  styleUrls: ['auto-complete-select-option.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutoCompleteSelectOptionComponent),\n      multi: true\n    }\n  ],\n})\nexport class AutoCompleteSelectOptionComponent implements OnInit, OnChanges, ControlValueAccessor, OnDestroy{\n  @Input()\n  public label: string;\n\n  @Input()\n  public required: boolean;\n\n  @Input()\n  public options: SelectOption<any>[] = [];\n\n  @Input()\n  public selectedValue: SelectOption<any> | undefined;\n\n  @Input()\n  public resetInput: number | undefined;\n\n  @Input()\n  public placeholder: string;\n\n  @Input()\n  public noEntriesFoundLabel: string;\n\n  @Output()\n  public filteredOptionsChange = new EventEmitter<SelectOption<any>[]>();\n\n  @Output()\n  public inputTextChange = new EventEmitter<string>();\n\n  @Output() emptyBoxEvent = new EventEmitter();\n\n  /** Form control on change handler */\n  private _onChange: (_: SelectOption<any>) => void;\n  /** Form control on touch handler */\n  private _onTouch: (_: SelectOption<any>) => void;\n\n  filterFormControl = new FormControl();\n  filteredOptions: Observable<SelectOption<any>[]>;\n\n  /** The selected value */\n  public value = new BehaviorSubject<any | undefined>('');\n\n  /** Available options to search / select from */\n  public _options = new BehaviorSubject<SelectOption<any>[]>(this.options);\n  @ViewChild('trigger')\n    trigger: MatAutocompleteTrigger;\n\n  ngOnInit() {\n    this.updateFilteredOptions();\n    window.addEventListener('scroll', this.scrollEvent, true);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    // Watch and apply changes from the parent component.\n    if (changes.options || changes.selectedValue) {\n      if (changes.options && !changes.selectedValue) {\n        this.filterFormControl.setValue('')\n      }\n      this.updateFilteredOptions();\n    }\n    if (changes.resetInput) {\n      this.filterFormControl.setValue('');\n      this.updateFilteredOptions();\n    }\n    \n  }\n\n  private updateFilteredOptions() {\n    this.filteredOptions = this.filterFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value && value?.display ? value.display : ''),\n        map(name => name ? this._filter(name) : this.options.slice())\n      );\n  }\n\n  displayFn(data: SelectOption<any>): string {\n    return data && data?.display ? data.display : '';\n  }\n\n  private _filter(display: string): SelectOption<any>[] {\n    const filterValue = display.toLowerCase();\n    // return all the matches found\n    const filtered = this.options.filter(option => {\n      // split this input and index both, if both\n      // match return true.\n      if (filterValue.includes(' ')) {\n        const filterValues =filterValue.split(' ');\n        let matchesAll = true;\n        for (let x = 0; x < filterValues.length; x++) {\n          if (option.display.toLowerCase().indexOf(filterValues[x]) === -1) {\n            matchesAll = false;\n          }\n        }\n        if (matchesAll) {\n          return true;\n        }\n      }\n      // match the whole string\n      return option.display.toLowerCase().indexOf(filterValue) > -1;\n    });\n    this.inputTextChange.emit(filterValue);\n    this.filteredOptionsChange.emit(filtered);\n    return filtered;\n  }\n\n  /**\n   * Update the form field value\n   * @param new_value New value to set on the form field\n   */\n  public setValue(new_value: SelectOption<any>): void {\n    this.value.next(new_value);\n    if (this._onChange) {\n      this._onChange(this.options.find(f => f.value === new_value.value));\n    }\n  }\n\n  /**\n * Update local value when form control value is changed\n * @param value The new value for the component\n */\n  public writeValue(value: SelectOption<any> | null) {\n    if (value != null) {\n      this.value.next(value.value);\n    }\n  }\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   * @param fn The callback function to register\n   */\n  public registerOnChange(fn: (_: SelectOption<any>) => void): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n   * @param fn The callback function to register\n   */\n  public registerOnTouched(fn: (_: SelectOption<any>) => void): void {\n    this._onTouch = fn;\n  }\n\n  public onChangeInput() {\n    if (this.filterFormControl.value === '') {\n      this.emptyBoxEvent.emit(true);\n    }\n  }\n\n  private scrollEvent = (event): void => {\n    if (this.trigger === null) {\n      return;\n    }\n    /**\n     * IF - to confirm user not scrolling from autocomplete opened panel and close panel if scroll event triggers from outside of panel\n     */\n    if (this.trigger.panelOpen && event.target.closest('.mat-autocomplete-panel') === null ) {\n      this.trigger.closePanel();\n        this.trigger['_element'].nativeElement.blur();\n    }\n  }\n  public ngOnDestroy(): void {\n    window.removeEventListener('scroll', this.scrollEvent, true);\n  }\n\n}","<div class=\"mck-column mck-form-input\">\n    <mck-label *ngIf=\"label\" [required]=\"required\">{{label}}</mck-label>\n    <mat-form-field\n                appearance=\"outline\"\n                class=\"mck-center-suffix\">\n      <input\n        type=\"text\"\n        autocomplete=\"off\"\n        matInput\n        #trigger=\"matAutocompleteTrigger\"\n        [formControl]=\"filterFormControl\"\n        [matAutocomplete]=\"auto\"\n        [placeholder]=\"placeholder\"\n        value={{selectedValue?.display}}\n        (keyup)=\"onChangeInput();\"\n      >\n      <mat-autocomplete\n        #auto=\"matAutocomplete\"\n        [displayWith]=\"displayFn\"\n        (optionSelected)=\"setValue($event.option.value)\"\n      >\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{option.shortDisplay || option.display}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n</div>","import {\n    AfterViewInit,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\n/**\n * A helper class for rendering embedded views (ng-template) as standalone components.\n *\n * If the view is lazy and does not render upon initialization,\n * it attempts embedding view again later.\n *\n * When testing a component directly that extends this class, its best to wrap the component\n * in a wrapper component for testing so that it can render itself.\n */\nexport class BaseTemplateComponent extends BaseDirective implements AfterViewInit, OnInit, OnDestroy {\n    @ViewChild(TemplateRef, { static: true })\n    public template: TemplateRef<any>;\n\n    private isRendered = false;\n\n    constructor(private vcRef: ViewContainerRef) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // try early rendering\n        this.attemptViewEmbed();\n    }\n\n    public attemptViewEmbed() {\n        if (this.template && !this.isRendered) {\n            this.isRendered = true;\n            this.vcRef.createEmbeddedView(this.template);\n            return true;\n        }\n        return false;\n    }\n\n    public ngAfterViewInit(): void {\n        if (!this.isRendered) {\n            console.log('View not rendered yet, attempting to post initialization');\n            setTimeout(() => {\n                console.log('Timeout ended, trying again', this.template);\n                if (!this.attemptViewEmbed()) {\n                    console.log('Attempting render in after view initialization');\n                    setTimeout(() => {\n                        if (!this.attemptViewEmbed()) {\n                            console.error('FAILED TO LOAD TEMPLATE');\n                        }\n                    }, 1000);\n                }\n            });\n        }\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.isRendered = false;\n    }\n}\n","import {\n    Component,\n    Output,\n    TemplateRef,\n    ViewChild,\n    EventEmitter,\n    Input\n  } from \"@angular/core\";\n  import { DropdownPanel } from \"./dropdown-panel\";\n  \n  @Component({\n    selector: \"cng-select-options\",\n    templateUrl: \"./cng-select-options.component.html\",\n    styleUrls: [\"./cng-select-options.component.scss\"]\n  })\n  export class CngSelectOptionsComponent implements DropdownPanel {\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n    @Output() closed = new EventEmitter<void>();\n    @Input() ddWidth: string;\n  \n    constructor() {}\n  }\n  ","<ng-template>\n    <div (click)=\"closed.emit()\" class=\"dropdown-content flex-column\" [ngStyle]=\"{'width': ddWidth}\" >\n      <ng-content></ng-content>\n    </div>\n  </ng-template>","import {\n    Component,\n    Output,\n    TemplateRef,\n    ViewChild,\n    EventEmitter,\n    Input,\n    OnInit\n  } from \"@angular/core\";\n  import { DropdownPanel, DropdownOpion } from \"./dropdown-panel\";\n  \n  @Component({\n    selector: \"cng-select\",\n    templateUrl: \"./cng-select.component.html\",\n    styleUrls: [\"./cng-select.component.scss\"]\n  })\n  export class CngSelectComponent implements OnInit {\n    @Input() data: any;\n    public isClosed: boolean = false;\n    public selected: DropdownOpion;\n    constructor() {\n\n    }\n    ngOnInit(): void {\n      this.selected = this.data.defaultSelected;\n    }\n\n    public optionSelected(item: DropdownOpion) {\n      // this.selected = item;\n      this.data.defaultSelected = item;\n      this.data?.onChangeCallback && this.data?.onChangeCallback(item);\n    }\n  }\n  ","\n\n<div name=\"level\" [dropdownTriggerFor]=\"dropdown\" class=\"cng-select flex-row\" [class]=\"data?.ddBoxClass\" [ngClass]=\"{'focus': isClosed, 'disabled': data?.disabled }\" matRipple (isPanelOpened)=\"isClosed = !isClosed\">\n  <span class=\"selecte-sort\" style=\"flex: 1 1 auto ;\">{{data?.defaultSelected?.display}}</span>\n  <div class=\"mck-column select-chevron\">\n      <mck-chevron-icon [up]=\"isClosed\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n  </div>\n</div>\n<cng-select-options #dropdown ddWidth >\n    <div matRipple *ngFor=\"let item of data?.options\" (click)=\" optionSelected(item)\" class=\"dropdown-item flex-row\" [class]=\"data?.optionBoxClass\" [ngClass]=\"{'selected' : data?.defaultSelected?.value === item?.value }\">{{item?.display}}</div>\n</cng-select-options>","import {\n  AfterViewInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewContainerRef\n  } from '@angular/core';\n  import { DropdownPanel } from './dropdown-panel';\n  import { Overlay, OverlayRef } from '@angular/cdk/overlay';\n  import { TemplatePortal } from '@angular/cdk/portal';\n  import { merge, Observable, Subscription } from 'rxjs';\n  \n  @Directive({\n    selector: '[dropdownTriggerFor]',\n    host: {\n      '(click)': 'toggleDropdown()'\n    }\n  })\n  export class DropdownTriggerForDirective implements OnDestroy, AfterViewInit, OnInit {\n    private isDropdownOpen = false;\n    private overlayRef: OverlayRef;\n    private dropdownClosingActionsSub = Subscription.EMPTY;\n  \n    @Input('dropdownTriggerFor') public dropdownPanel: DropdownPanel;\n    @Output() isPanelOpened = new EventEmitter<boolean>();\n    constructor(\n      private overlay: Overlay,\n      private elementRef: ElementRef<HTMLElement>,\n      private viewContainerRef: ViewContainerRef,\n      private renderer: Renderer2\n    ) {\n     \n    }\n    ngOnInit(): void {\n      // const cngSelectEl = this.elementRef.nativeElement.nextElementSibling; \n      // const parentWidth = this.elementRef.nativeElement.offsetWidth; \n      // this.renderer.setStyle(cngSelectEl, 'width', `${parentWidth}px`);\n    }\n    ngAfterViewInit(): void {\n      \n    }\n\n  \n    toggleDropdown(): void {\n      this.isDropdownOpen ? this.destroyDropdown() : this.openDropdown();\n      \n    }\n  \n    openDropdown(): void {\n      let {ddWidth} = this.dropdownPanel;\n      this.dropdownPanel.ddWidth = ddWidth !=='' ? ddWidth : `${this.elementRef.nativeElement.offsetWidth}px`;\n      this.isDropdownOpen = true;\n      this.isPanelOpened.emit(this.isDropdownOpen);\n      this.overlayRef = this.overlay.create({\n        hasBackdrop: true,\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n        scrollStrategy: this.overlay.scrollStrategies.close(),\n        positionStrategy: this.overlay\n          .position()\n          .flexibleConnectedTo(this.elementRef)\n          .withPositions([\n            {\n              originX: 'end',\n              originY: 'bottom',\n              overlayX: 'end',\n              overlayY: 'top',\n              offsetY: 8\n            }\n          ])\n      });\n  \n      const templatePortal = new TemplatePortal(\n        this.dropdownPanel.templateRef,\n        this.viewContainerRef\n      );\n      this.overlayRef.attach(templatePortal);\n  \n      this.dropdownClosingActionsSub = this.dropdownClosingActions().subscribe(\n        () => this.destroyDropdown()\n      );\n    }\n  \n    private dropdownClosingActions(): Observable<MouseEvent | void> {\n      const backdropClick$ = this.overlayRef.backdropClick();\n      const detachment$ = this.overlayRef.detachments();\n      const dropdownClosed = this.dropdownPanel.closed;\n  \n      return merge(backdropClick$, detachment$, dropdownClosed);\n    }\n  \n    private destroyDropdown(): void {\n      if (!this.overlayRef || !this.isDropdownOpen) {\n        return;\n      }\n  \n      this.dropdownClosingActionsSub.unsubscribe();\n      this.isDropdownOpen = false;\n      this.isPanelOpened.emit(this.isDropdownOpen);\n      this.overlayRef.detach();\n    }\n  \n    ngOnDestroy(): void {\n      if (this.overlayRef) {\n        this.overlayRef.dispose();\n      }\n    }\n  }\n  ","import {\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'mck-collapse-header',\n    template: `\n        <mat-expansion-panel\n            [disabled]=\"isLoading\"\n            name=\"expansion-panel\"\n            class=\"mck-expansion-panel {{(isExpanded | async) && 'mck-expanded'}}\"\n            (opened)=\"isExpanded.next(true)\"\n            (closed)=\"isExpanded.next(false)\" hideToggle>\n            <mat-expansion-panel-header *ngIf=\"!isLoading\" name=\"expansion-panel-header\">\n                <mat-panel-title>{{title}}</mat-panel-title>\n                <div class=\"mck-collapse-icon\" [class.expanded]=\"isExpanded | async\"></div>\n            </mat-expansion-panel-header>\n            <mat-expansion-panel-header *ngIf=\"isLoading\">\n                <div class=\"mck-row mck-center\">\n                    <ngx-skeleton-loader class=\"mck-skeleton-header\"></ngx-skeleton-loader>\n                </div>\n            </mat-expansion-panel-header>\n            <mat-panel-description *ngIf=\"description && (isExpanded | async)\">{{description}}</mat-panel-description>\n            <ng-template matExpansionPanelContent>\n                <ng-content></ng-content>\n            </ng-template>\n        </mat-expansion-panel>\n    `,\n    styleUrls: ['./collapse-header.component.scss'],\n})\nexport class CollapseHeaderComponent implements OnInit {\n\n    @Input()\n    title: string;\n\n    @Input()\n    description: string;\n\n    /**\n     * If true, show skeleton.\n     */\n    @Input()\n    isLoading = false;\n\n    public isExpanded = new BehaviorSubject(false);\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface RoomAvaibilityModalData {\n\theaderText: string,\n\tmessage: string,\n\tbuttonLabel: string,\n\tcallback: Function,\n    shouldClose: boolean\n}\n\n@Component({\n    selector: 'conflict-alert-modal',\n    templateUrl: 'conflict-alert-modal.component.html',\n    styleUrls: ['./conflict-alert-modal.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class ConflictAlertModalComponent implements OnInit {\n    constructor(public dialogRef: MatDialogRef<ConflictAlertModalComponent>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: RoomAvaibilityModalData) {\n    }\n    ngOnInit(): void {}\n\n    public done() {\n        this.dialogData?.callback(); this.dialogRef.close()\n    }\n}\n","<div>\n    <mck-modal [shouldClose]=\"dialogData?.shouldClose\">\n        <div class=\"nc-modal\">\n\t\t\t\t\t<div class=\"mck-column modal-heading\">\n\t\t\t\t\t\t\t<div class=\"header mck-column\">\n\t\t\t\t\t\t\t\t\t<img src=\"assets/icon/room-not-available.svg\" />\n\t\t\t\t\t\t\t\t\t<span>{{dialogData?.headerText}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"alert-message\">{{dialogData?.message}}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</mck-modal>\n\t\t\t<mat-dialog-actions>\n\t\t\t\t\t <mck-modal-button-row [primaryLabel]=\"dialogData?.buttonLabel\" (primarySubmit)=\"done()\"></mck-modal-button-row>\n\t\t\t</mat-dialog-actions>\n</div>","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {DialogEvent} from '@mckinsey-converge/base';\nimport {DateTZ, isToday} from '@mckinsey-converge/date-tz';\n\nexport interface ConflictsModalComponentData {\n  room_name: string;\n  conflicts: number[];\n  copy_conflicts?: boolean;\n  timezone: string;\n}\n\n@Component({\n  selector: 'app-conflicts-modal',\n  templateUrl: './conflicts-modal.component.html',\n  styleUrls: ['./conflicts-modal.component.scss']\n})\nexport class ConflictsModalComponent implements OnInit{\n  public room_name: string;\n  public conflicts: number[];\n  public copy_conflicts: boolean;\n  public timezone;\n\n\n  @Output() public event = new EventEmitter<DialogEvent>();\n\n  constructor(@Inject(MAT_DIALOG_DATA) private _data: ConflictsModalComponentData){\n\n  }\n\n  public ngOnInit(){\n    this.timezone = this._data.timezone;\n    this.room_name = this._data.room_name\n    this.conflicts = this._data.conflicts\n    this.copy_conflicts = this._data.copy_conflicts\n  }\n\n  public formatDate(date: number) {\n    const dateTZ = new DateTZ({date: date*1000,  is_local_tz: false, building_tz: this._data.timezone});\n    const dateIsToday = isToday(dateTZ, this.timezone);\n    const display = dateTZ.formatDate('ccc dd MMM yyyy');\n    return `${display}${dateIsToday ? ' (Today)' : ''}`;\n  }\n\n  public continue(): void {\n    this.event.emit({ reason: 'done' });\n  }\n\n  public close(): void {\n    this.event.emit({ reason: 'close' });\n  }\n\n  public copy(): void {\n    this.event.emit({ reason: 'action' });\n  }\n\n\n}\n","<div class=\"header\">\n    <button mat-icon-button mat-dialog-close name=\"close\">\n        <div class=\"close-image\"></div>\n    </button>\n</div>\n<mat-dialog-content #content>\n    <div class=\"conflicts-content-header\">\n        <h2>Conflicts ({{conflicts.length}})</h2>\n        <div class=\"info\" *ngIf=\"!copy_conflicts\">\n            The {{room_name}} room is not available on the following dates.\n            Do you want to proceed <span>without booking</span> these days?\n        </div>\n        <div class=\"info\" *ngIf=\"copy_conflicts\">\n            The {{room_name}} room is not available on the following dates.\n            You need to make individual bookings to cover these days, please.\n        </div>\n    </div>\n    <div class=\"conflicts-list\">\n        <div class=\"conflicts-list--header\">\n            Date\n        </div>\n        <div class=\"items\">\n            <div class=\"item\" *ngFor=\"let conflict of conflicts\">\n                {{formatDate(conflict)}}\n            </div>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button\n            mat-button\n            class=\"inverse\"\n            i18n=\"Booking spaces cancel action\"\n            (click)=\"copy_conflicts ? copy() : close()\"\n            [class.copy]=\"copy_conflicts\"\n    >\n       {{copy_conflicts ? 'Copy to clipboard' : 'Close'}}\n    </button>\n    <button\n            mat-button\n            name=\"next\"\n            i18n=\"Booking spaces continue action\"\n            (click)=\"copy_conflicts ? close() : continue()\"\n            [class.copy]=\"copy_conflicts\"\n    >\n    {{copy_conflicts ? 'Close' : 'Continue'}}\n    </button>\n</mat-dialog-actions>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    OnChanges,\n    SimpleChanges,\n    forwardRef,\n    EventEmitter,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BaseClass } from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nexport interface IDateTzPickerOptions {\n    /** DateTZ object. First selectable date */\n    fromDateTz?: DateTZ;\n    /** DateTZ object. Last selectable date */\n    untilDateTz?: DateTZ;\n    /** Luxon format string for formatting days of the week. Defaults to `DDD` */\n    day_format?: string;\n    /** Luxon format string for formatting active month. Defaults to `MMMM yyyy` */\n    month_format?: string;\n}\n\ninterface IDateBlock {\n    /** Timestamp value of the date */\n    value: DateTZ;\n    /** Day of the month to display */\n    display: string;\n    /** Whether block is the selected date */\n    active: boolean;\n    /** Whether block not selectable */\n    disabled: boolean;\n    /** Whether block outside the active month */\n    non_month: boolean;\n    /** Whether the block is today */\n    today: boolean;\n    /** Number of events on this block */\n    count?: number;\n}\n\n@Component({\n    selector: 'date-tz-calendar-widget',\n    templateUrl: './date-tz-calendar-widget.component.html',\n    styleUrls: ['./date-tz-calendar-widget.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTzCalendarWidgetComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateTzCalendarWidgetComponent\n    extends BaseClass\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** CSS class to add to the root element of the component */\n    @Input() public className = 'default';\n    /** Counters of the events on given dates. Key format is `yyyy-MM-dd` */\n    @Input() public counters: { [date: string]: number };\n    /** Settings for the date picker component */\n    @Input() public options: IDateTzPickerOptions;\n    /** Offset of the display month from the current month */\n    @Output() public month = new EventEmitter<number>();\n\n    public readonly weeks = new Array(6).fill(0);\n    public selectedDateTz: DateTZ = DateNow();\n\n    // R--- this is the date picker that needs to be TZ aware\n    /** Offset of the month displayed from the current month */\n    public offset = 0;\n    /** Minimum offset for changing the month */\n    public min_offset = -999999;\n    /** Maximum offset for changing the month */\n    public max_offset = 999999;\n    /** Blocks representing the rendering details of the display days of the month */\n    public date_list: IDateBlock[] = [];\n    /** Name of the actively displayed month */\n    public month_name = DateNow(new Date()).formatDate('MMMM yyyy');\n    /** Name of the days of the week to display */\n    public days_of_week = [];\n    /** First selectable date */\n    private fromTz: DateTZ;\n    /** Last selectable date */\n    private toTz: DateTZ;\n    /** Luxon format string for formatting days of the week. Defaults to `dd` */\n    private day_format = 'EEE';\n    /** Luxon format string for formatting active month. Defaults to `MMMM yyyy` */\n    private month_format = 'MMMM yyyy';\n    /** Form control on change handler */\n    private _onChange: (_: DateTZ) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: DateTZ) => void;\n\n    private _today = DateNow();\n\n    public get timezone() {\n        return this.selectedDateTz?.building_tz || '';\n    }\n\n    public ngOnInit(): void {\n        this.generateMonth();\n        this.generateDaysOfTheWeek();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.options) {\n            this.updateOptions();\n        }\n        if (changes.counters) {\n            this.generateMonth();\n        }\n    }\n\n    /** Change date using the given block */\n    public setDate(item: IDateBlock) {\n        this.selectedDateTz = item.value;\n        if (this._onChange) {\n            this._onChange(this.selectedDateTz);\n        }\n        this.generateMonth();\n    }\n\n    /**\n     * Update offset to show the selected date 2\n     */\n    public updateDate(): void {\n        if (!this.selectedDateTz) {\n            return;\n        }\n        const now = this._today.startOfValue('month');\n        const startOfMonthDateTz = this.selectedDateTz.startOfValue('month');\n        if (startOfMonthDateTz.valid) {\n            const difference = startOfMonthDateTz.dateDiff(\n                now,\n                'months',\n                'months'\n            );\n            if (this.offset !== difference) {\n                this.offset = Math.round(difference);\n                this.month.emit(this.offset);\n            }\n            this.generateMonth();\n        }\n    }\n\n    /**\n     * Update local properties based off changes to settings\n     */\n    public updateOptions(): void {\n        if (this.options) {\n            // Setup from date\n            if (this.options.fromDateTz) {\n                const today = this._today.startOfValue('month');\n                this.fromTz = this.options.fromDateTz.startOfValue('day');\n                this.min_offset = Math.round(\n                    this.fromTz\n                        .startOfValue('month')\n                        .dateDiff(today, 'months', 'months')\n                );\n            } else if (this.fromTz) {\n                this.fromTz = null; // R-- check if ok\n                this.min_offset = -999999;\n            }\n            // Setup to date\n            if (this.options.untilDateTz) {\n                const today = this._today.startOfValue('month');\n                this.toTz = this.options.untilDateTz.startOfValue('day');\n                this.max_offset = this.toTz\n                    .startOfValue('month')\n                    .dateDiff(today, 'months', 'months');\n            } else if (this.toTz) {\n                this.toTz = null;\n                this.max_offset = 999999;\n            }\n            if (this.options.month_format) {\n                this.month_format = this.options.month_format || 'MMMM yyyy';\n            }\n            if (this.options.day_format) {\n                this.day_format = this.options.day_format || 'EEE';\n                this.generateDaysOfTheWeek();\n            }\n            // Update date blocks\n            this.generateMonth();\n        }\n    }\n\n    /**\n     * Generate the display blocks for the days of the active month\n     */\n    private generateMonth(): void {\n        this._today = new DateTZ({ date: Date.now(), is_local_tz: !this.timezone, building_tz: this.timezone });\n        const startOfMonthDateTz = this._today.addValue({ months: this.offset });\n        const active = this.selectedDateTz || DateNow();\n        let startDate = startOfMonthDateTz\n            .setValue({ day: 1 })\n            .setValue({ weekday: 7 })\n            .subtractValue({ weeks: 1 });\n        this.date_list = [];\n        for (let i = 0; i < 42; i++) {\n            this.date_list.push({\n                value: startDate,\n                display: startDate.formatDate('d'),\n                active: active.isSameDate(startDate, 'day'),\n                non_month: !startOfMonthDateTz.isSameDate(startDate, 'month'),\n                count: this.counters\n                    ? this.counters[startDate.formatDate('yyyy-MM-dd')] || 0\n                    : 0,\n                disabled:\n                    (this.fromTz ? startDate.ms < this.fromTz.ms : false) ||\n                    (this.toTz ? startDate.ms > this.toTz.ms : false),\n                today: this._today.isSameDate(startDate, 'day'),\n            });\n            startDate = startDate.addValue({ days: 1 });\n        }\n        this.month_name = startOfMonthDateTz.formatDate(this.month_format);\n    }\n\n    /**\n     * Generate this weekdays to display in the header of the calendar\n     */\n    private generateDaysOfTheWeek() {\n        let date = this._today.startOfValue('week');\n        this.days_of_week = [];\n        for (let i = 0; i < 7; i++) {\n            this.days_of_week.push(date.formatDate(this.day_format));\n            date = date.addValue({ days: 1 });\n        }\n    }\n\n    /**\n     * Changes the month offset by the given value.\n     * Does nothing if the new month is not available to be selected\n     * @param value Number of months to change the offset by\n     */\n    public changeMonth(value: number): void {\n        const new_offset = Math.min(\n            this.max_offset,\n            Math.max(this.min_offset, this.offset + value)\n        );\n        this.offset = Math.round(new_offset);\n        this.generateMonth();\n        this.month.emit(this.offset);\n    }\n\n    /**\n     * Reset the month offset to the month of the selected date\n     */\n    public reset() {\n        const offset = this.offset;\n        this.offset = Math.round(\n            this._today.dateDiff(this.selectedDateTz, 'months', 'months')\n        );\n        if (offset !== this.offset) this.generateMonth();\n        this.month.emit(this.offset);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: DateTZ) {\n        if (value) {\n            this.selectedDateTz = value;\n            this.updateDate();\n            this.generateMonth();\n        }\n    }\n\n    public readonly registerOnChange = (fn: (_: DateTZ) => void) => this._onChange = fn;\n    public readonly registerOnTouched = (fn: (_: DateTZ) => void) => this._onTouch = fn;\n}\n","<div [class]=\"'date-picker' + (className ? ' ' + className : '')\" widget>\n    <div class=\"header\">\n        <button\n            matRipple\n            class=\"arrow previous\"\n            [disabled]=\"offset <= min_offset\"\n            (click)=\"changeMonth(-1)\"\n        >\n            <div class=\"previous icon\"></div>\n        </button>\n        <div class=\"month\" (dblclick)=\"reset()\">{{ month_name }}</div>\n        <button\n            matRipple\n            class=\"arrow next\"\n            [disabled]=\"offset >= max_offset\"\n            (click)=\"changeMonth(1)\"\n        >\n            <div class=\"next icon\"></div>\n        </button>\n    </div>\n    <table>\n        <thead>\n            <td *ngFor=\"let item of days_of_week\">{{ item }}</td>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let week of weeks; let i = index\">\n                <td *ngFor=\"let item of date_list | slice: i * 7:i * 7 + 7\">\n                    <button\n                        matRipple\n                        class=\"date\"\n                        (click)=\"setDate(item)\"\n                        [disabled]=\"item.disabled\"\n                        [class.non-month]=\"item.non_month\"\n                        [class.active]=\"item.active\"\n                    >\n                        {{ item.display }}\n                        <div class=\"dot\" *ngIf=\"item.today\"></div>\n                        <div class=\"count\" *ngIf=\"item.count\">{{item.count > 9 ? '+9' : item.count}}</div>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    ViewChild,\n    OnInit\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport {\n    BehaviorSubject,\n    Observable\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { DateTzCalendarWidgetComponent } from '../date-tz-calendar-widget/date-tz-calendar-widget.component';\n\n@Component({\n    selector: 'date-tz-date-picker',\n    template: `\n        <div\n            [class.icon-only]=\"icon_only\"\n            [class.mck-form-input]=\"!icon_only\"\n            [class.mck-column]=\"!icon_only\"\n            [class.error]=\"error\"\n        >\n            <mck-label [required]=\"true\" *ngIf=\"!icon_only && label\">{{label}}</mck-label>\n                <div\n                    [class.mck-date-display]=\"!icon_only\"\n                    [class.mck-input]=\"!icon_only\"\n                    role=\"button\"\n                    form-field\n                    tabindex=\"0\"\n                    [class.active]=\"is_open\"\n                    [attr.disabled]=\"disabled\"\n                    (keydown.enter)=\"openDatePicker()\"\n                    [matMenuTriggerFor]=\"appMenu\"\n                    [class.date-error]=\"invalid || error\"\n                    \n                >\n                <div class=\"display\" *ngIf=\"!icon_only\">{{ dateString | async }}</div>\n                <div class=\"icon\">\n                    <mck-calendar-icon\n                        [fillClass]=\"is_open ? 'mck-icon-fill-open' : 'mck-icon-fill-black'\"></mck-calendar-icon>\n                </div>\n            </div>\n            \n            <mat-menu #appMenu=\"matMenu\" xPosition=\"before\" (close)=\"onDatePickerClose()\">\n                <div class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n                    <date-tz-calendar-widget\n                        className=\"mck-date-picker\"\n                        [counters]=\"counters\"\n                        [ngModel]=\"selectedDateTzValue | async\"\n                        [options]=\"{ fromDateTz: fromDateTz, untilDateTz: untilDateTz, day_format: 'EEE' }\"\n                        (ngModelChange)=\"setValue($event); closeDatePicker()\"\n                    ></date-tz-calendar-widget>\n                    <button\n                        mat-stroked-button\n                        color=\"primary\"\n                        class=\"mck-stroked-button today-button\"\n                        *ngIf=\"can_pick_today\"\n                        (click)=\"goToToday()\"\n                    >Today\n                    </button>\n                </div>\n            </mat-menu>\n        </div>\n    `,\n    styleUrls: ['./date-tz-date-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTzDatePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTzDatePickerComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    @Input() public label?: string;\n    /** Earliest date available the user is allowed to pick */\n    @Input() public fromDateTz: DateTZ = DateNow(new Date());\n    /** Latest date available the user is allowed to pick */\n    @Input() public untilDateTz: DateTZ = DateNow(new Date()).endOfValue('day').addValue({ years: 1 });\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    // R-- possible TODO, address all_day that disables this input and displays \"Add Day for the value like the time picker\"\n    @Input() public all_day: boolean = false;\n    /** Whether to show the calendar tooltip */\n    @Input() public icon_only: boolean = false;\n\n    @Input() public counters: any;\n\n    @Input() public initialDateSelectionTz?: DateTZ;\n\n    @Output() public onSelect = new EventEmitter();\n\n    @Input() public invalid?: boolean;\n\n    @Input() public timezone?: string;\n\n    @Input() public can_pick_today: boolean = true;\n\n    /** Whether form control is invalid, touched and contains errors */\n    @Input() public error?: boolean;\n\n    public ngOnInit(): void {\n        if (this.initialDateSelectionTz) {\n            this.writeValue(this.initialDateSelectionTz)\n        }\n    }\n\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: DateTZ) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: DateTZ) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n    @ViewChild(DateTzCalendarWidgetComponent, {static: true }) private _acaDatePicker: DateTzCalendarWidgetComponent;\n    /** Currently selected date */\n    public selectedDateTzValue = new BehaviorSubject<DateTZ>(DateNow(new Date()));\n\n    /** Display value for the current date */\n    public get dateString(): Observable<string> {\n        return this.selectedDateTzValue.pipe(map(d => {\n            const display = d.formatDate('ccc dd MMM yyyy');\n            return `${display}${d.isSameDate(new DateTZ({ is_local_tz: false, building_tz: d.building_tz }), 'day') ? ' (Today)' : ''}`;\n        }));\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    // date\n    public get dateTzObservable(): Observable<DateTZ> {\n        return this.selectedDateTzValue.pipe(map(d => {\n            return d \n        }));\n\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(newValueTz: DateTZ) {\n        // Keep hours and minutes of the old date\n        const old_date = this.selectedDateTzValue.value;\n        let newDateTz = newValueTz.setValue({ hour: old_date.dateHour, minute: old_date.minutes, second: old_date.second });\n\n        // Check that new date is before from\n        if (newDateTz.ms < this.fromDateTz.ms) {\n            newDateTz = this.fromDateTz;\n        }\n\n        this.selectedDateTzValue.next(newDateTz);\n        if (this._onChange) {\n            this._onChange(newDateTz);\n        }\n\n        this.onSelect.emit(newDateTz);\n        this.show_tooltip = false;\n    }\n\n    public goToToday() {\n        const building_tz = this.timezone || this.fromDateTz.building_tz\n        const is_local_tz = DateNow(new Date()).building_tz === building_tz\n        this.setValue(new DateTZ({ is_local_tz, building_tz }));\n    }\n\n    public resetToLastSelection = () => this._acaDatePicker.updateDate();\n\n    public onDatePickerClose() {\n        this.resetToLastSelection();\n    }\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(selectedDateTz: DateTZ) {\n        this.selectedDateTzValue.next(selectedDateTz);\n        this.show_tooltip = false;\n    }\n\n    public readonly registerOnChange = (fn: (_: DateTZ) => void) => this._onChange = fn;\n    public readonly registerOnTouched = (fn: (_: DateTZ) => void) => this._onTouch = fn;\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    BaseDirective,\n    DurationGroup,\n    nearestDurationToInput,\n} from '@mckinsey-converge/base';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n    BehaviorSubject,\n    combineLatest\n} from 'rxjs';\n\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport { map } from 'rxjs/operators'; \nimport {\n    DEFAULT_DURATION,\n    defaultDurationGroups,\n    generateDurationOptionsFromGroups\n} from '../utils/time.utils';\nimport { MatSelect } from '@angular/material/select';\nimport { convertLocalTimestampToTimezonedDateTz, convertTimezonedTimestampToLocalDateTz, DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'date-tz-duration-field',\n    template: `\n        <div class=\"mck-column mck-form-input\">\n            <mck-label *ngIf=\"label\" [required]=\"required\">{{label}}</mck-label>\n            <mat-form-field appearance=\"outline\" class=\"mck-center-suffix\">\n                <mat-select\n                    #select\n                    [placeholder]=\"(placeHolderOption | async)?.display\"\n                    panelClass=\"mck-select-panel\"\n                    [disabled]=\"all_day\"\n                    [value]=\"value | async\"\n                    (valueChange)=\"setValue($event)\"\n                    disableOptionCentering>\n                    <mat-option>\n                        <ngx-mat-select-search\n                            noEntriesFoundLabel=\"No timeslots found for current search. Try selecting one in the dropdown.\"\n                            [placeholderLabel]=\"(selectedOption | async)?.display\"\n                            [formControl]=\"filterFormControl\"></ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let option of options | async | filter: (nearestStep | async): 'display'\"\n                        [value]=\"option.value\"\n                        [disabled]=\"isDisabled(option)\">\n                        <mck-select-option\n                            [option]=\"option\"\n                            [selected]=\"isSelected(option) | async\"\n                        ></mck-select-option>\n                    </mat-option>\n                </mat-select>\n                <div class=\"mck-column\">\n                    <mck-chevron-icon [up]=\"isOpen\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n                </div>\n            </mat-form-field>\n        </div>\n    `,\n    styleUrls: ['./date-tz-duration-field.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTzDurationFieldComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTzDurationFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor, OnChanges {\n    @Input() public label?: string;\n    @Input() public required: boolean;\n    @Input() max_length?: number;\n\n    // /** Whether form field is disabled */\n    // @Input() public disabled: boolean;\n    /** Start date value to count from */\n    @Input() public startDateTz: DateTZ;\n    /** Set to limit the duration options */\n    @Input() public extended?: boolean;\n    /** Whether form all_day is enabled. */\n    // R-- need to address all_day that disables this input and displays \"Add Day for the value\"\n    @Input() public all_day: boolean = false;\n\n    /**\n     * Specify the slice of durations to use when generating options.\n     */\n    @Input() public durationGroups: DurationGroup[] = defaultDurationGroups;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    /** Component will return a number of minutes */\n    public value = new BehaviorSubject<number>(DEFAULT_DURATION);\n\n    public currentStartDateTz = new BehaviorSubject(DateNow(new Date()));\n\n    public filterFormControl: FormControl = new FormControl();\n\n    public nearestStep = combineLatest([this.filterFormControl.valueChanges, this.currentStartDateTz]).pipe(\n            \n            map(([value, currentStartDate]) => { \n                /**\n                 * convert current start date/time to building time zone first\n                 *  \n                 */\n                const ms = convertTimezonedTimestampToLocalDateTz(currentStartDate.ms, currentStartDate.building_tz).ms;\n                return nearestDurationToInput(this.durationGroups, ms, value); \n            }\n        ));\n\n    public options = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public placeHolderOption = this.options.pipe(\n        map(options => options.find(o => o.value === DEFAULT_DURATION))\n    );\n\n    public selectedOption = combineLatest([this.options, this.value]).pipe(\n        map(([options, value]) => options.find(o => o.value === value))\n    );\n\n    public isSelected(option: SelectOption<any>) {\n        return this.value.pipe(map(t => t === option.value));\n    }\n\n    public isDisabled(option: SelectOption<any>) {\n        return this.max_length ? option.value > this.max_length : false;\n    }\n\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n    ngOnInit(): void {\n        this.subscription('OptionsCalculation',\n            this.currentStartDateTz.pipe(\n                map(d => generateDurationOptionsFromGroups(d, this.durationGroups, this.extended))\n            ).subscribe(next => {\n                this.options.next(next);\n            }));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.timezone) {\n            const dopt = generateDurationOptionsFromGroups(this.currentStartDateTz.value, this.durationGroups, this.extended);\n            this.options.next(dopt);\n        }\n        if (changes.startDateTz) {\n            this.currentStartDateTz.next(changes.startDateTz.currentValue);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.writeValue(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    writeValue(obj: number): void {\n        this.value.next(obj);\n        if (this._onChange) {\n            this._onChange(obj);\n        }\n    }\n\n    // public setDisabledState(disabled: boolean) {\n    //     this.disabled = disabled;\n    // }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport {\n    BaseDirective,\n    closestToTimeSlotTz,\n    nearestStepToInput,\n    timeWithGmtOffsetFormatString,\n} from '@mckinsey-converge/base';\n\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport {\n    generateAvailableTimes,\n    generateAvailableTimesTz,\n} from '../utils/time.utils';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { DateTime } from 'luxon';\n\n@Component({\n    selector: 'date-tz-time-field',\n    template: `\n        <div class=\"mck-column mck-form-input\">\n            <mck-label *ngIf=\"label\" [required]=\"required\">{{\n                label\n            }}</mck-label>\n            <mat-form-field appearance=\"outline\" class=\"mck-center-suffix\">\n                <mat-select\n                    #select\n                    [placeholder]=\"(placeHolderOption | async)?.display\"\n                    panelClass=\"mck-select-panel\"\n                    [disabled]=\"all_day\"\n                    [value]=\"selectedTimeString | async\"\n                    (valueChange)=\"setValue($event)\"\n                    disableOptionCentering\n                >\n                    <mat-option>\n                        <ngx-mat-select-search\n                            noEntriesFoundLabel=\"No timeslots found for current search. Try selecting one in the dropdown.\"\n                            [placeholderLabel]=\"\n                                (selectedOption | async)?.display ||\n                                (placeHolderOption | async)?.display ||\n                                ''\n                            \"\n                            [formControl]=\"filterFormControl\"\n                        ></ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"\n                            let option of options\n                                | async\n                                | filter: (nearestStep | async):'shortDisplay'\n                        \"\n                        [value]=\"option.display\"\n                    >\n                        <mck-select-option\n                            [option]=\"option\"\n                            [selected]=\"isSelected(option)\"\n                        ></mck-select-option>\n                    </mat-option>\n                </mat-select>\n                <div class=\"mck-column\">\n                    <mck-chevron-icon\n                        [up]=\"isOpen\"\n                        matSuffix\n                        fillClass=\"mck-icon-fill-black\"\n                    ></mck-chevron-icon>\n                </div>\n            </mat-form-field>\n        </div>\n    `,\n    styleUrls: ['./date-tz-time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTzTimeFieldComponent),\n            multi: true,\n        },\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DateTzTimeFieldComponent\n    extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    @Input() public label?: string;\n    @Input() public required: boolean;\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    // @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public noPastTimes = true;\n    /** Representing the DateTZ object datetime to start time options from **/\n    @Input() public fromDateTz: DateTZ = DateNow(new Date());\n    // Disables this input and displays R--- \"All Day\" for the value\n    @Input() public all_day: boolean = false;\n    @Input() public show_current: boolean = false;\n    @Input() public startFromDateTz: boolean = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: DateTZ) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: DateTZ) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n    /** DateTZ object representing the currently set datetime */\n    public selectedDateTz = new BehaviorSubject(\n        closestToTimeSlotTz(DateNow(new Date()), this.step)\n    );\n\n    /** string representing the currently set datetime display value, needed for the input to display the slected value */\n    public selectedTimeString = new BehaviorSubject(\n        timeWithGmtOffsetFormatString(this.selectedDateTz.value)\n    );\n\n    public filterFormControl: FormControl = new FormControl();\n\n    /** Available time blocks for the selected date */\n    public options = new BehaviorSubject<SelectOption<any>[]>(\n        generateAvailableTimesTz(\n            DateNow(),\n            !this.noPastTimes,\n            this.step,\n            this.timezone,\n            this.all_day,\n            this.show_current\n                ? [generateOptionForDateTz(DateNow())]\n                : [],\n            this.startFromDateTz\n        )\n    );\n\n    public ngOnInit(): void {\n        // Generate the time input options for the booking date\n        this.options.next(\n            generateAvailableTimesTz(\n                this.selectedDateTz.value,\n                !this.noPastTimes,\n                this.step,\n                this.timezone,\n                this.all_day,\n                this.show_current\n                    ? [generateOptionForDateTz(this.selectedDateTz.value)]\n                    : [],\n                this.startFromDateTz\n            )\n        );\n        // Subscribe to selected option changes\n        this.subscription(\n            'dateTimeChanges',\n            combineLatest([this.selectedDateTz])\n                .pipe(\n                    map(([selectedDateTz]) => {\n                        /**\n                         * The selectedDateTz should already be pegged to the closest time slot, but\n                         * if the selected time rolls into the past this can correct it.  // R--- verify this statement\n                         */\n                        return closestToTimeSlotTz(selectedDateTz, this.step);\n                    }),\n                    withLatestFrom(this.options),\n                    filter(\n                        ([date, timeOptions]: [\n                            DateTZ,\n                            SelectOption<any>[]\n                        ]) => {\n                            // if new time slot opened up when date / time changes, add it here.\n                            return !timeOptions.find(\n                                (t) => t.value === date.formatDate('HH:mm')\n                            );\n                        }\n                    ),\n                    map(([dateTz, timeOptions]) => {\n                        // TODO probably an issue here with going from a future date and time earlier than now back to day showing null\n                        // Push the current date option in\n                        timeOptions.push({\n                            display: timeWithGmtOffsetFormatString(dateTz),\n                            shortDisplay: dateTz.formatDate('hh:mma'),\n                            value: dateTz,\n                        });\n\n                        // Sort the time options\n                        timeOptions.sort((a, b) =>\n                            `${a.value}`.localeCompare(`${b.value}`)\n                        );\n                        return timeOptions;\n                    })\n                )\n                .subscribe((next) => {\n                    return this.options.next(next);\n                })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.no_past_times ||\n            changes.step ||\n            changes.fromDateTz ||\n            changes.all_day\n        ) {\n            // If there's a new date value then update the time options\n            this.options.next(\n                generateAvailableTimesTz(\n                    this.selectedDateTz.value,\n                    !this.noPastTimes,\n                    this.step,\n                    this.timezone,\n                    this.all_day,\n                    this.show_current\n                        ? [generateOptionForDateTz(this.selectedDateTz.value)]\n                        : [],\n                    this.startFromDateTz\n                )\n            );\n            // If today and all day goes from on to off the selected value isn't going to be available.\n            if (\n                changes.all_day &&\n                !changes.all_day.currentValue &&\n                changes.all_day.previousValue\n            ) {\n                this.setValue(this.options.value[0].display);\n            }\n        }\n    }\n\n    /**\n     * Getter if the time picker options are visiable or not\n     */\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n    /**\n     * Getter to return the current form timestamp from the from date object\n     */\n    public get timezone(): string {\n        return this.fromDateTz.building_tz;\n    }\n\n    /**\n     * A filter for finding a matching value when using the input text search\n     */\n    public nearestStep = combineLatest([\n        this.filterFormControl.valueChanges,\n        this.selectedDateTz,\n    ]).pipe(\n        map(([value, selectedDateTz]) => {\n            return nearestStepToInput(\n                this.step,\n                value,\n                DateTime.now().valueOf()\n            );\n        })\n    );\n\n    /**\n     * Default text displayed in the search field when the component initializes\n     */\n    public placeHolderOption = this.options.pipe(\n        map((os) => os.length > 0 && os[0])\n    );\n\n    /**\n     * Returns the selected option object by matching the selectedDateTz formated string with the option.display string\n     */\n    public selectedOption = combineLatest([\n        this.options,\n        this.selectedDateTz,\n    ]).pipe(\n        map(([options, selectedDateTz]) =>\n            options.find(\n                (o) =>\n                    o.display === timeWithGmtOffsetFormatString(selectedDateTz)\n            )\n        )\n    );\n\n    /**\n     * Determines the visually selected value when the options list is visible.\n     *\n     * @param option DateTZ\n     * @returns boolean\n     */\n    public isSelected(option: SelectOption<DateTZ>) {\n        return this.selectedTimeString.value === option.display;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: DateTZ) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: DateTZ) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Method just used in unit tests to test disabling the input\n     * @param disabled\n     */\n    // public setDisabledState(disabled: boolean) {\n    //     this.disabled = disabled;\n    // }\n\n    /**\n     * Update the selected values\n     * @param dateTz the DateTz object for the new time\n     */\n    public setSelectedValues(dateTz: DateTZ) {\n        // Update the selected DateTz and string representations\n        this.selectedTimeString.next(timeWithGmtOffsetFormatString(dateTz));\n        this.selectedDateTz.next(dateTz);\n        if (this._onChange) {\n            this._onChange(dateTz);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param displayString The \"display\" value of this.options set by the time picker\n     */\n    public setValue(displayString: string): void {\n        // Convert the display time string to the actual option object via an array find.\n        const newTimeTz = this.options.value.find(\n            (opt) => opt.display === displayString\n        ).value;\n        // Update the selected DateTz and string representations\n        this.setSelectedValues(newTimeTz);\n        // Send the\n        if (newTimeTz) {\n            if (this._onChange) {\n                this._onChange(newTimeTz);\n            }\n        }\n    }\n\n    /**\n     * Fires when the form control value is changed\n     * @param dateTz The new value for the component\n     */\n    public writeValue(dateTz: DateTZ | null) {\n        // Init is null ?\n        if (dateTz != null) {\n            // Update the selected DateTz and string representations\n            this.setSelectedValues(dateTz);\n            // Update the available options\n            this.options.next(\n                generateAvailableTimesTz(\n                    dateTz,\n                    !this.noPastTimes,\n                    this.step,\n                    dateTz.building_tz,\n                    this.all_day,\n                    this.show_current\n                        ? [generateOptionForDateTz(dateTz)]\n                        : [],\n                    this.startFromDateTz\n                )\n            );\n        }\n    }\n}\n\nfunction generateOptionForDateTz(dateTz: DateTZ): SelectOption<DateTZ> {\n    return {\n        display: timeWithGmtOffsetFormatString(dateTz),\n        shortDisplay: dateTz.formatDate('hh:mma'),\n        value: dateTz, \n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    BaseDirective,\n    nearestDurationToInput,\n    DurationGroup,\n} from '@mckinsey-converge/base';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport {\n    BehaviorSubject,\n    combineLatest\n} from 'rxjs';\n\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport {\n    map\n} from 'rxjs/operators';\nimport {\n    DEFAULT_DURATION,\n    defaultDurationGroups,\n    generateDurationOptionsFromGroups\n} from '../utils/time.utils';\nimport { MatSelect } from '@angular/material/select';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'mck-duration-field',\n    template: `\n        <div class=\"mck-column mck-form-input\">\n            <mck-label [required]=\"required\">{{label}}</mck-label>\n            <mat-form-field appearance=\"outline\" class=\"mck-center-suffix\">\n                <mat-select\n                    #select\n                    [placeholder]=\"(placeHolderOption | async)?.display\"\n                    panelClass=\"mck-select-panel\"\n                    [value]=\"value | async\"\n                    [disabled]=\"disabled\"\n                    (valueChange)=\"setValue($event)\"\n                    disableOptionCentering>\n                    <mat-option>\n                        <ngx-mat-select-search\n                            noEntriesFoundLabel=\"No timeslots found for current search. Try selecting one in the dropdown.\"\n                            [placeholderLabel]=\"(selectedOption | async)?.display\"\n                            [formControl]=\"filterFormControl\"></ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let option of options | async | filter: (nearestStep | async): 'display'\"\n                        [value]=\"option.value\"\n                        [disabled]=\"isDisabled(option)\">\n                        <mck-select-option\n                            [option]=\"option\"\n                            [selected]=\"isSelected(option) | async\"\n                        ></mck-select-option>\n                    </mat-option>\n                </mat-select>\n                <div class=\"mck-column\">\n                    <mck-chevron-icon [up]=\"isOpen\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n                </div>\n            </mat-form-field>\n        </div>\n    `,\n    styleUrls: ['./duration-field.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor, OnChanges {\n    @Input()\n    public label: string;\n    @Input()\n    public required: boolean;\n    @Input() max_length?: number;\n\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Start date value to count from */\n    @Input() public startDate: number;\n    /** Set to limit the duration options */\n    @Input() public extended?: boolean;\n    /** Representing desired timezone **/\n    @Input() public timezone?: string = new DateTZ({ date: Date.now() }).local_tz;\n\n    /**\n     * Specify the slice of durations to use when generating options.\n     */\n    @Input() public durationGroups: DurationGroup[] = defaultDurationGroups;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public value = new BehaviorSubject<number>(DEFAULT_DURATION);\n\n    public currentStartDate = new BehaviorSubject(DateNow(new Date()));\n\n    public filterFormControl: FormControl = new FormControl();\n\n    public nearestStep = combineLatest([this.filterFormControl.valueChanges, this.currentStartDate]).pipe(\n        map(([value, currentStartDate]) => nearestDurationToInput(this.durationGroups, currentStartDate.ms, value)\n    ));\n\n    public options = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public placeHolderOption = this.options.pipe(\n        map(options => options.find(o => o.value === DEFAULT_DURATION))\n    );\n\n    public selectedOption = combineLatest([this.options, this.value]).pipe(\n        map(([options, value]) => options.find(o => o.value === value))\n    );\n\n    public isSelected(option: SelectOption<any>) {\n        return this.value.pipe(map(t => t === option.value));\n    }\n\n    public isDisabled(option: SelectOption<any>) {\n        return this.max_length ? option.value > this.max_length : false;\n    }\n\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n    ngOnInit(): void {\n        this.subscription('OptionsCalculation',\n            this.currentStartDate.pipe(\n                map(d => generateDurationOptionsFromGroups(d.toZone(this.timezone), this.durationGroups, this.extended))\n            ).subscribe(next => {\n                this.options.next(next);\n            }));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.timezone) {\n            const dopt = generateDurationOptionsFromGroups(this.currentStartDate.value.toZone(this.timezone), this.durationGroups, this.extended);\n            this.options.next(dopt);\n        }\n        if (changes.startDate) {\n            // R--- refactor input param\n            const date = new DateTZ({date: this.startDate})\n            this.currentStartDate.next(date);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.writeValue(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    writeValue(obj: number): void {\n        this.value.next(obj);\n        if (this._onChange) {\n            this._onChange(obj);\n        }\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'mck-error-message',\n    template: `\n        <div class=\"mck-row\">\n            <div class=\"mck-row mck-center content\">\n                <div class=\"error-icon\"></div>\n                <span>\n                    <ng-content></ng-content>\n                </span>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./error-message.component.scss']\n})\nexport class ErrorMessageComponent {\n\n    constructor() {\n    }\n\n}\n","import {\n    Component,\n    Input,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../../base-template.component';\n\n@Component({\n    selector: 'mck-calendar-icon',\n    template: `\n        <ng-template>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      [ngClass]=\"fillClass\"\n                      d=\"M4 0.5V2H1.5C0.671858 2 0 2.67186 0 3.5V5.5V14.5C0 15.3281 0.671858 16 1.5 16H14.5C15.3281 16 16 15.3281 16 14.5V5.5V3.5C16 2.67186 15.3281 2 14.5 2H12V0.5C12 0.223858 11.7761 0 11.5 0C11.2239 0 11 0.223858 11 0.5V2H5V0.5C5 0.223858 4.77614 0 4.5 0C4.22386 0 4 0.223858 4 0.5ZM11.5 3H4.5H1.5C1.22414 3 1 3.22414 1 3.5V5H15V3.5C15 3.22414 14.7759 3 14.5 3H11.5ZM1 6V14.5C1 14.7759 1.22414 15 1.5 15H14.5C14.7759 15 15 14.7759 15 14.5V6H1Z\"\n                />\n            </svg>\n        </ng-template>\n    `,\n})\nexport class CalendarIconComponent extends BaseTemplateComponent {\n\n    @Input()\n    fillClass?: string;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n}\n","import {\n    Component,\n    Input,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../../base-template.component';\n\n@Component({\n    selector: 'mck-chevron-icon',\n    template: `\n        <ng-template>\n            <ng-container>\n                <div class=\"mck-chevron-icon\" [class.turn-up]=\"up\">\n                    <svg width=\"24\" height=\"24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                            d=\"M11.957 10.664l4 4 .707-.707-4.707-4.707-4.707 4.707.707.707 4-4z\"\n                            [ngClass]=\"fillClass\"\n                            \n                        />\n                    </svg>\n                </div>\n            </ng-container>\n            <!-- <ng-container *ngIf=\"!up\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                          d=\"M11.9571 13.25L7.95711 9.25L7.25 9.95711L11.9571 14.6642L16.6642 9.95711L15.9571 9.25L11.9571 13.25Z\"\n                          [ngClass]=\"fillClass\" />\n                </svg>\n            </ng-container> -->\n        </ng-template>\n    `\n})\nexport class ChevronIconComponent extends BaseTemplateComponent {\n\n    @Input()\n    fillClass?: string;\n\n    @Input()\n    up?: boolean;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit\n} from '@angular/core';\n\n@Component({\n    selector: 'mck-close-icon',\n    template: `\n        <svg width=\"9\" height=\"9\" viewBox=\"0 0 9 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                  d=\"M7.50209 1.08543L1.08543 7.50209C0.971524 7.616 0.971524 7.80067 1.08543 7.91457C1.19933 8.02848 1.384 8.02848 1.49791 7.91457L7.91457 1.49791C8.02848 1.384 8.02848 1.19933 7.91457 1.08543C7.80067 0.971524 7.616 0.971524 7.50209 1.08543Z\"\n                  [ngClass]=\"fillClass\" />\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                  d=\"M1.08543 1.49791L7.50209 7.91457C7.616 8.02848 7.80067 8.02848 7.91457 7.91457C8.02848 7.80067 8.02848 7.616 7.91457 7.50209L1.49791 1.08543C1.384 0.971524 1.19933 0.971524 1.08543 1.08543C0.971524 1.19933 0.971524 1.384 1.08543 1.49791Z\"\n                  [ngClass]=\"fillClass\"\n            />\n        </svg>\n    `\n})\nexport class CloseIconComponent implements OnInit {\n\n    @Input()\n    fillClass?: string;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import {\n    Component,\n    Input,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\n\n@Component(\n    {\n        selector: 'mck-informational-image',\n        template: `\n            <ng-template>\n                <div class=\"body\">\n                    <div class=\"info-block full\">\n                        <div class=\"image-wrapper full\">\n                            <img src=\"{{src}}\">\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        `,\n        styleUrls: ['./informational-image.component.scss'],\n        encapsulation: ViewEncapsulation.None\n    }\n)\nexport class InformationalImageComponent extends BaseTemplateComponent {\n\n    @Input()\n    public src: string;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\n\n@Component({\n    selector: 'mck-label',\n    template: `\n        <ng-template>\n            <mat-label>\n                <ng-content></ng-content>\n                <span class=\"required-star\" *ngIf=\"required\">*</span>\n            </mat-label>\n        </ng-template>\n    `,\n    styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent extends BaseTemplateComponent implements OnInit {\n\n    @Input()\n    required = false;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n\n}\n","import {\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatSelect } from '@angular/material/select';\nimport { SelectOption } from '../options/select-option';\n\n@Component({\n    selector: 'mck-legend-dropdown',\n    template: `\n        <div class=\"mck-column mck-form-input legend-container\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"mck-center-suffix mck-select-dropdown-button\">\n                <mat-select\n                    class=\"legend-select\"\n                    #select\n                    panelClass=\"mck-select-panel select-panel-position\"\n                    disableOptionCentering>\n                    <mat-option\n                        [disabled]=\"true\"\n                        *ngFor=\"let option of options\"\n                        [value]=\"option.value\">\n                        <mck-select-option\n                            [ignoreDisabled]=\"true\"\n                            [option]=\"option\"\n                            [selected]=\"false\">\n                            <div class=\"legend-color-{{option.value}}\"></div>\n                        </mck-select-option>\n                    </mat-option>\n                </mat-select>          \n                <span class=\"legend-placeholder\">{{ buildPlaceholder() }}</span>\n                <mck-spacer\n                    size=\"1px\"\n                    [mode]=\"'vertical'\"\n                    spacerClass=\"legend-divider\"></mck-spacer>\n                <div class=\"mck-column chevron-container\">\n                    <mck-chevron-icon [up]=\"isOpen\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n                </div>              \n            </mat-form-field>\n        </div>\n    `,\n    styleUrls: ['./legend-dropdown.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LegendDropdownComponent {\n\n    @Input()\n    public placeholder: string;\n\n    @Input()\n    public options: SelectOption<any>[] = [];\n\n    @Input()\n    public placeholderOpen?: string\n\n    /** Select field for selecting the value */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n    public buildPlaceholder(){\n        return this.isOpen && this.placeholderOpen ? this.placeholderOpen : this.placeholder\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    ViewChild,\n    OnInit\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport {\n    BehaviorSubject,\n    Observable\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { AcaDatePickerComponent } from '../aca-date-picker/aca-date-picker.component';\n\n@Component({\n    selector: 'mck-date-picker',\n    template: `\n        <div\n            [class.icon-only]=\"icon_only\"\n            [class.mck-form-input]=\"!icon_only\"\n            [class.mck-column]=\"!icon_only\"\n        >\n            <mck-label [required]=\"true\" *ngIf=\"!icon_only\">Date</mck-label>\n            <div\n                [class.mck-date-display]=\"!icon_only\"\n                [class.mck-input]=\"!icon_only\"\n                [class.date-error]=\"invalid\"\n                role=\"button\"\n                form-field\n                tabindex=\"0\"\n                [class.active]=\"is_open\"\n                [attr.disabled]=\"disabled\"\n                (keydown.enter)=\"openDatePicker()\"\n                [matMenuTriggerFor]=\"appMenu\"\n                \n            >\n                <div class=\"display\" *ngIf=\"!icon_only\">{{ dateString | async }}</div>\n                <div class=\"icon\">\n                    <mck-calendar-icon\n                        [fillClass]=\"is_open ? 'mck-icon-fill-open' : 'mck-icon-fill-black'\"></mck-calendar-icon>\n                </div>\n            </div>\n            \n            <mat-menu #appMenu=\"matMenu\" xPosition=\"before\" (close)=\"onDatePickerClose()\">\n                <div mat-menu-item class=\"date-picker mck-column\" (click)=\"$event.stopPropagation()\">\n                    <date-tz-calendar-widget\n                        klass=\"mck-date-picker\"\n                        [ngModel]=\"date | async\"\n                        [options]=\"{ from: from, to: until, day_format: 'EEE' }\"\n                        (ngModelChange)=\"setValue($event); closeDatePicker()\"\n                    ></date-tz-calendar-widget>\n                    <button\n                        mat-stroked-button\n                        color=\"primary\"\n                        class=\"mck-stroked-button today-button\"\n                        (click)=\"goToToday()\"\n                    >Today\n                    </button>\n                </div>\n            </mat-menu>\n        </div>\n    `,\n    styleUrls: ['./mck-date-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MckDatePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class MckDatePickerComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = DateNow(new Date()).ms;\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    @Input() public icon_only: boolean = false;\n\n    @Input() public initialDateSelection?: number;\n\n    @Input() public invalid?: boolean;\n\n    @Output() public onSelect = new EventEmitter();\n\n    // R--- or is this the date picker to refactor. too tired.\n    public ngOnInit(): void {\n        if (this.initialDateSelection) {\n            this.writeValue(this.initialDateSelection)\n        }\n    }\n\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n    @ViewChild(AcaDatePickerComponent, {static: true }) private _acaDatePicker: AcaDatePickerComponent;\n\n    /** Currently selected date */\n    public dateValue = new BehaviorSubject<DateTZ>(DateNow(new Date()));\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || DateNow(new Date()).startOfValue('day').ms;\n    }\n\n    /** Current date value */\n    public get until(): number {\n        return this._to || DateNow(new Date()).endOfValue('day').addValue({ years: 1 }).ms;\n    }\n\n    /** Display value for the current date */\n    public get dateString(): Observable<string> {\n        return this.dateValue.pipe(map(d => {\n            const display = d.formatDate('ccc dd MMM yyyy');\n            return `${display}${d.isSameDate(DateNow(new Date()), 'day') ? ' (Today)' : ''}`;\n        }));\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public get date(): Observable<DateTZ> {\n        return this.dateValue;\n\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = this.dateValue.value;\n        const d = new DateTZ({date: new_value})\n        let new_date = d\n            .setValue({ hour: old_date.dateHour, minute: old_date.minutes })\n            .ms;\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        const new_d = new DateTZ({ date: new_date })\n        this.dateValue.next(new_d);\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.onSelect.emit(new_date);\n        this.show_tooltip = false;\n    }\n\n    public goToToday() {\n        this.setValue(DateNow(new Date()).ms);\n    }\n\n    public resetToLastSelection = () => this._acaDatePicker.updateDate();\n\n    public onDatePickerClose() {\n        this.resetToLastSelection();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        const date = new DateTZ({date: value})\n        this.dateValue.next(date);\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\n\n@Component({\n    selector: 'mck-modal-button-row',\n    template: `\n        <ng-template>\n            <div\n                class=\"button-wrapper\"\n                [class.has-fixed]=\"!disableFixed\">\n                <mck-spacer\n                    [autoSize]=\"true\"\n                    spacerClass=\"mck-spacer-content-expand-mobile mck-spacer-content-divider\"\n                    size=\"1px\">\n                </mck-spacer>\n                <div class=\"mck-row mck-center button-row\" [class.small-buttons]=\"smallButtons\">\n                    <button\n                        *ngIf=\"secondaryLabel\"\n                        mat-stroked-button class=\"mck-secondary-button mck-modal-secondary-button\"\n                        type=\"submit\"\n                        (click)=\"secondarySubmit.emit()\"\n                        [disabled]=\"secondaryDisabled\"\n                    >\n                        {{secondaryLabel}}\n                    </button>\n                    <button\n                        *ngIf=\"primaryLabel\"\n                        mat-button class=\"mck-primary-button mck-modal-primary-button\"\n                        type=\"submit\"\n                        (click)=\"primarySubmit.emit()\"\n                        [disabled]=\"primaryDisabled\"\n                    >\n                        {{primaryLabel}}\n\n                    </button>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./modal-button-row.component.scss']\n})\nexport class ModalButtonRowComponent extends BaseTemplateComponent {\n\n    @Input()\n    primaryLabel?: string;\n\n    /**\n     * Specify if you want to disable the primary button\n     */\n    @Input()\n    primaryDisabled?: boolean = false;\n\n    /**\n     * Used only if primaryLabel is specified.\n     */\n    @Output()\n    public primarySubmit = new EventEmitter();\n\n    /**\n     * Specify if you want to show a secondary label button\n     */\n    @Input()\n    secondaryLabel?: string;\n\n    @Input()\n    disableFixed: boolean = false;\n\n    /**\n     * Specify if you want to disable the secondary button\n     */\n    @Input()\n    secondaryDisabled?: boolean = false;\n\n    /**\n     * Used only if secondaryLabel is specified.\n     */\n    @Output()\n    public secondarySubmit = new EventEmitter();\n\n    @Input()\n    smallButtons?: boolean = false;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'mck-modal',\n    template: `\n        <mat-dialog-content class=\"mck-column modal-container\">\n            <div class=\"mck-column modal-top mck-content-expand-width mck-stretch\">\n                <div class=\"button-row\">\n                    <button *ngIf=\"shouldClose\" name=\"CloseButton\" mat-icon-button (click)=\"close()\">\n                        <div class=\"close-image\"></div>\n                    </button>\n                </div>\n                <div class=\"mck-column mck-center\">\n                    <h1 name=\"ModalHeader\" class=\"modal-header\" *ngIf=\"header\">{{header}}</h1>\n                </div>\n            </div>\n            <ng-content></ng-content>\n        </mat-dialog-content>\n    `,\n    styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n\n    @Input()\n    header?: string;\n    @Input() shouldClose?: boolean = true;\n\n    constructor(private dialogRef: MatDialogRef<ModalComponent>) {\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { DateTZ, isToday } from '@mckinsey-converge/date-tz';\n\n\n@Component({\n  selector: 'override-changes-modal',\n  templateUrl: './override-changes-modal.component.html',\n  styleUrls: ['./override-changes-modal.component.scss']\n})\nexport class OverrideChangesModalComponent implements OnInit{\n\n  public edits;\n  public timezone;\n\n  @Output() public event = new EventEmitter<DialogEvent>();\n\n  constructor(@Inject(MAT_DIALOG_DATA) private _data: OverrideChangesModalComponent){\n\n  }\n\n  public ngOnInit(){\n      this.edits = this._data.edits.sort((a, b) =>  a - b);\n  }\n\n  public formatDate(date: number) {\n    const dateTZ = new DateTZ({date: date*1000, is_local_tz: false, building_tz: this._data.timezone });\n    const dateIsToday = isToday(dateTZ, this._data.timezone);\n    const display = dateTZ.formatDate('ccc dd MMM yyyy');\n    return `${display}${dateIsToday ? ' (Today)' : ''}`;\n  }\n\n  public continue(): void {\n    this.event.emit({ reason: 'done' });\n  }\n\n  public close(): void {\n    this.event.emit({ reason: 'close' });\n  }\n}","<header class=\"override-header\">\n    <button class=\"hidden\">button3</button>\n    <button mat-icon-button mat-dialog-close>\n        <i [class]=\"\">\n            <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n            </svg>\n        </i>\n    </button>\n</header>\n<mat-dialog-content #content class=\"mck-column modal-container\">\n    <svg class=\"red-icon\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24 1C11.3 1 1 11.3 1 24C1 36.7 11.3 47 24 47C36.7 47 47 36.7 47 24C47 11.3 36.7 1 24 1ZM32.7 31.3C33.1 31.7 33.1 32.3 32.7 32.7C32.5 32.9 32.3 33 32 33C31.7 33 31.5 32.9 31.3 32.7L24 25.4L16.7 32.7C16.5 32.9 16.3 33 16 33C15.7 33 15.5 32.9 15.3 32.7C14.9 32.3 14.9 31.7 15.3 31.3L22.6 24L15.3 16.7C14.9 16.3 14.9 15.7 15.3 15.3C15.7 14.9 16.3 14.9 16.7 15.3L24 22.6L31.3 15.3C31.7 14.9 32.3 14.9 32.7 15.3C33.1 15.7 33.1 16.3 32.7 16.7L25.4 24L32.7 31.3Z\" fill=\"#D51F31\"/>\n    </svg>\n\n    <h2>Overriding Changes</h2>\n    <p>Editing the series here will override all previous changes made to individual occurrences. Are you sure you want to proceed?</p>\n\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Dates</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let edit of edits\">\n                <td>{{formatDate(edit)}}</td>\n            </tr>\n        </tbody>\n    </table>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button mat-stroked-button (click)=\"close()\"><span>Back</span></button>\n    <button mat-button (click)=\"continue()\"><span>Yes, Override</span></button>\n</mat-dialog-actions>","import {\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n/**\n * Transforms input by returning a subset of items based on if the\n * any items include the search text based on passed objectKey.\n *\n * objectKey can be pipe separated keys. e.g: 'name|age'. Then it will check against all.\n */\n@Pipe({\n    name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], searchText: string, objectKey?: string): any[] {\n        if (!items) return [];\n        if (!searchText) return items;\n        searchText = searchText.toLowerCase();\n        const splitKeys = objectKey?.split('|') ?? [];\n        return items.filter(it => {\n            let included = false;\n            splitKeys.forEach((key) => {\n                if (it[key]?.toLowerCase().includes(searchText)) {\n                    included = true;\n                }\n            });\n            if (splitKeys.length === 0) {\n                return it.toLowerCase().includes(searchText);\n            }\n            return included;\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n    DomSanitizer,\n    SafeHtml,\n    SafeResourceUrl,\n    SafeScript,\n    SafeStyle,\n} from '@angular/platform-browser';\n\nexport enum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5,\n}\n\n@Pipe({\n    name: 'sanitize',\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return (\n                    this.sanitizer.sanitize(\n                        SecurityContext.RESOURCE_URL,\n                        value\n                    ) || ''\n                );\n            case 'url':\n                return (\n                    this.sanitizer.sanitize(SecurityContext.URL, value) || ''\n                );\n            case 'script':\n                return (\n                    this.sanitizer.sanitize(SecurityContext.SCRIPT, value) || ''\n                );\n            case 'style':\n                return (\n                    this.sanitizer.sanitize(SecurityContext.STYLE, value) || ''\n                );\n        }\n        return this.sanitizer.sanitize(SecurityContext.HTML, value) || '';\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnInit,\n    ViewContainerRef\n} from '@angular/core';\nimport { SelectOption } from '../types';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { BaseTemplateComponent } from '../base-template.component';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'mck-radio-select',\n    template: `\n        <ng-template>\n            <div class=\"mck-column mck-form-input mck-radio-select\">\n                <mck-label [required]=\"required\">{{label}}</mck-label>\n                <mat-radio-group [disabled]=\"disabled\"\n                                 [value]=\"(value | async).value\"\n                                 (change)=\"setValue($event.value)\">\n                    <mat-radio-button *ngFor=\"let option of options\"\n                                      [value]=\"option.value\">{{option.display}}</mat-radio-button>\n                </mat-radio-group>\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./radio-select.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RadioSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class RadioSelectComponent extends BaseTemplateComponent implements OnInit, ControlValueAccessor {\n\n    @Input()\n    label: string;\n\n    @Input()\n    required?: boolean;\n\n    @Input()\n    options: SelectOption<any>[];\n\n    public value = new BehaviorSubject<SelectOption<any> | undefined>(undefined);\n\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: SelectOption<any>) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: SelectOption<any>) => void;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouch = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    public setValue(value: string) {\n        const obj = this.options.find(o => o.value === value);\n        this.writeValue(obj);\n        if (this._onChange) {\n            this._onChange(obj)\n        }\n    }\n\n    writeValue(obj: SelectOption<any>): void {\n        this.value.next(obj);\n    }\n}\n","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { OrganisationService, RecurrencePeriod, RecurrenceType, removeExpiredOcurrences, RepeatsOn } from \"@mckinsey-converge/data-common\";\nimport { DateTZ } from \"@mckinsey-converge/date-tz\";\nimport { first } from \"rxjs/operators\";\nimport { RecurrencePatternForm } from \"../recurrence-pattern-form/recurrence-pattern-form.component\";\n\n@Component({\n    selector: 'recurrence-booking-form',\n    templateUrl: './recurrence-booking-form.component.html',\n    styleUrls: ['./recurrence-booking-form.component.scss']\n})\n\nexport class RecurringBookingForm implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n\n    public current_type: RecurrenceType; \n    public recurrence_types: Array<RecurrenceType> = [\n        {type: RepeatsOn.PATTERN, label: 'Repeats on'},\n        {type: RepeatsOn.DATE, label: 'Repeats on specific date'}\n    ]\n\n    public building_tz = \"\";\n\n    @ViewChild(RecurrencePatternForm) pattern_form: RecurrencePatternForm;\n\n    constructor(\n        private _org: OrganisationService,\n    ) {}\n\n    public get recurrencePeriod(){\n        return this.form.get('recurrence_period')\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.building_tz = this._org?.building?.timezone || 'America/Chicago';\n        })\n        if(this.recurrencePeriod.value === RecurrencePeriod.LIST){\n            this.current_type = this.recurrence_types[1];\n            removeExpiredOcurrences(this.form)\n        }else{\n            this.current_type = this.recurrence_types[0];\n        }\n    }\n\n    public onChangeType(value: string) {\n        this.current_type = this.recurrence_types.filter((type) => type.type === value)[0]\n        if(this.current_type.type === RepeatsOn.PATTERN){\n            this.recurrencePeriod.setValue(this.pattern_form.recurrencePatternFormControl.value)\n        }else{\n            this.recurrencePeriod.setValue(RecurrencePeriod.LIST)\n        }\n    }\n\n    public dateToBuildingTz(date?: number){\n        return new DateTZ({date, building_tz: this.building_tz, is_local_tz: false})\n    }\n\n    public get error(){\n        const recurrence_starts = this.form.controls.recurrence_starts\n        const recurrence_days = this.form.controls.recurrence_days\n        return recurrence_starts.invalid || recurrence_days.invalid\n    }\n\n}\n","<div class=\"recurrence-form-container\" [class.error-state]=\"error\">\n    <mat-radio-group [value]=\"current_type.type\" (change)=\"onChangeType($event.value)\">\n        <div class=\"type-container\">\n            <!-- the repeats on button -->\n            <mat-radio-button [value]=\"recurrence_types[0].type\">\n                {{recurrence_types[0].label}}\n            </mat-radio-button>\n            <recurrence-pattern-form \n                [disabled]=\"current_type.type !== recurrence_types[0].type\" \n                [form]=\"form\">\n            </recurrence-pattern-form>\n        </div>\n        <div class=\"type-container\">\n            <!-- the repeats on specific date button -->\n            <mat-radio-button [value]=\"recurrence_types[1].type\">\n                {{recurrence_types[1].label}}\n            </mat-radio-button>\n            <recurrence-date-form\n                [disabled]=\"current_type.type !== recurrence_types[1].type\" \n                [form]=\"form\">\n            </recurrence-date-form>\n        </div>\n    </mat-radio-group>\n</div>\n<mck-error-message *ngIf=\"error\">The recurrence pattern is not valid.</mck-error-message>","import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { BaseDirective, closestToTimeSlotTz } from \"@mckinsey-converge/base\";\nimport { OrganisationService } from \"@mckinsey-converge/data-common\";\nimport { DateNow, DateTZ,toMiddayUTC } from \"@mckinsey-converge/date-tz\";\n\n@Component({\n    selector: 'recurrence-date-form',\n    templateUrl: './recurrence-date-form.component.html',\n    styleUrls: ['./recurrence-date-form.component.scss']\n})\n\nexport class RecurrenceDateForm extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    @Input() disabled: boolean;\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    public selected_dates: Array<DateTZ> = []\n    public timezone: string = '';\n    public nowTz: DateTZ = DateNow(new Date());\n    public fromDateTz: DateTZ = this.nowTz.clone();\n    public untilDateTz: DateTZ = this.fromDateTz.endOfValue('day').addValue({ years: 1 });\n    public dateTz: DateTZ = DateNow(new Date());\n\n    public get recurrenceStarts(){\n        return this.form.get('recurrence_starts');\n    }\n\n    public get formDateTz(){\n        return this.form.get('dateTz');\n    }\n\n    constructor (private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // Setup some data to only run once, the previous giters were hogs\n        this.timezone = this.form.get('timezone').value;\n        this.nowTz = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: this.timezone });\n        // R--- The fromDateTz is curious, would it make sense to be based on the form dateTz?\n        this.fromDateTz = this.nowTz.clone()\n        this.untilDateTz = this.fromDateTz.endOfValue('day').addValue({ years: 1 });\n\n        if(this.recurrenceStarts.value){\n            this.selected_dates = this.recurrenceStarts.value.sort((d1: DateTZ, d2: DateTZ) => d1.ms - d2.ms)\n        }\n        this.subscription('ocurrenceChanges',  this.recurrenceStarts.valueChanges\n            .subscribe(() => {\n                this.selected_dates = [...this.recurrenceStarts.value]\n            })\n        ); \n    }\n\n    /**\n     * Add value to the list of selected dates\n     * @param newDateTz\n     */\n    public addDate(newDateTz: DateTZ) {\n        const d = newDateTz.clone();\n        const start_date = this.formDateTz.value;\n        let new_date = d.setValue({hour: start_date.dateHour, minute: start_date.minutes})\n        \n        /**  Prevent user from selecting past dates */\n        if (new_date.isBeforeDate(this.fromDateTz)) {\n            new_date = this.fromDateTz;\n        }\n\n        /** Prevent user from selecting the same date more than once */\n        const is_selected = this.selected_dates.filter((date: DateTZ)=> new_date.isSameDate(date, 'day'))\n        if(is_selected.length){\n            return\n        }\n       \n        this.selected_dates.push(new_date);\n        this.recurrenceStarts.setValue(this.selected_dates.sort((d1, d2) => d1.ms - d2.ms));\n        this.setDateTzForm();\n    }\n\n    /**\n     * \n     * @param dateMsValue: number\n     * @returns  \n     */\n     public setPickerToGivenDate(dateTsValue: DateTZ) {\n        this.fromDateTz = dateTsValue.clone();\n    }\n\n    /**\n     * Function calls on close of date picker without date selection\n     */\n    public onDatePickerClose = () => {\n        this.setPickerToGivenDate(this.nowTz)\n    };\n\n    public goToToday() {\n        this.addDate(this.nowTz);\n        this.setPickerToGivenDate(this.nowTz);\n    }\n\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n\n    public deleteDate(date: DateTZ) {\n        const index = this.selected_dates.map((d: DateTZ) => d.ms).indexOf(date.ms)\n        this.selected_dates.splice(index, 1)\n        this.recurrenceStarts.setValue(this.selected_dates)\n        this.setDateTzForm()\n    }\n\n    public isToday(date) {\n        return new DateTZ({\n            date: toMiddayUTC(date).ms,\n            is_local_tz: false,\n            building_tz: this.timezone,\n        }).isSameDate(\n            new DateTZ({\n                date: Date.now(),\n                is_local_tz: false,\n                building_tz: this.timezone,\n            }),\n            'day'\n        );\n    }\n\n    public formatDate(date: DateTZ){\n        const isToday = this.isToday(date);\n        const display = date.formatDate('ccc dd MMM yyyy');\n\n        return  `${display}${isToday ? ' (Today)' : ''}`;\n    }\n\n    private setDateTzForm(): void {\n        if (this.selected_dates.length === 0)\n            return;\n\n        const tz = this._org.building.timezone;\n        const date_now = DateNow(new Date()).toZone(tz);\n        let dateTz = this.selected_dates[0].clone();\n\n        dateTz = dateTz.setValue({\n            hour: (this.formDateTz.value as DateTZ).hours,\n            minute: (this.formDateTz.value as DateTZ).minutes\n         });\n\n        if (this.selected_dates[0].isSameDate(this.nowTz, \"day\") && dateTz.hours < date_now.hours) {\n            const { minutes: minute, hours: hour } = closestToTimeSlotTz(this.nowTz, 15);\n            dateTz = dateTz.setValue({ minute, hour, second: 0 });\n        }\n\n        this.formDateTz.setValue(dateTz);\n    }\n}\n","<div class=\"type-form\" [class.disabled]=\"disabled\">\n    <table [cellSpacing]=\"0\">\n        <tr>\n            <th>Date</th>\n            <th>Action</th>\n        </tr>\n        <tr *ngFor=\"let date of selected_dates\">\n            <td>{{formatDate(date)}}</td>\n            <td class=\"cell-centered pointer\" (click)=\"deleteDate(date)\">Delete</td>\n        </tr>\n        <tr>\n            <td class=\"underlined pointer\">\n                <div (keydown.enter)=\"openDatePicker()\"\n                [matMenuTriggerFor]=\"appMenu\">[+] Add another date</div>\n                <mat-menu #appMenu=\"matMenu\" xPosition=\"before\"  (closed)=\"onDatePickerClose()\">\n                    <div mat-menu-item class=\"date-picker mck-column\" (click)=\"$event.stopPropagation()\">\n                        <date-tz-calendar-widget\n                            className=\"mck-date-picker\"\n                            [ngModel]=\"fromDateTz\"\n                            [options]=\"{ fromDateTz: fromDateTz, untilDateTz: untilDateTz, day_format: 'EEE' }\"\n                            (ngModelChange)=\"addDate($event); closeDatePicker()\"\n                        ></date-tz-calendar-widget>\n                        <button\n                            mat-stroked-button\n                            color=\"primary\"\n                            class=\"mck-stroked-button today-button\"\n                            (click)=\"goToToday()\"\n                        >Today\n                        </button>\n                    </div>\n                </mat-menu>\n            </td>\n            <td></td>\n        </tr>\n    </table>\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\nimport { FormGroup, Validators } from \"@angular/forms\";\nimport { BaseDirective, closestToTimeSlotTz } from \"@mckinsey-converge/base\";\nimport { arrayWithValues, generateWeekDays, RecurrencePeriod, recurrencePeriodToDurationType, RepeatPeriod, validDateTZ, WeekDays } from \"@mckinsey-converge/data-common\";\nimport { DateNow, DateTZ } from \"@mckinsey-converge/date-tz\";\n\n@Component({\n    selector: 'recurrence-pattern-form',\n    templateUrl: './recurrence-pattern-form.component.html',\n    styleUrls: ['./recurrence-pattern-form.component.scss']\n})\n\nexport class RecurrencePatternForm extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    @Input() disabled: boolean;\n\n    /** Range of dates for the Start Date Picker*/\n    public nowTz: DateTZ = DateNow(new Date());\n    public fromStartTz: DateTZ = this.nowTz.setValue({ minute: Math.ceil(this.nowTz.minutes / 5) * 5 });\n    public untilTz: DateTZ = this.nowTz.addValue({ years: 1 }).endOfValue('day');\n    public timezone: string = '';\n    \n\n    /** Range of dates for the End Date Picker*/\n    public fromEndTz: DateTZ;\n\n    public repeat_period_options: Array<RepeatPeriod> = [\n        {label: 'Day', id: RecurrencePeriod.DAILY},\n        {label: 'Week',id: RecurrencePeriod.WEEKLY},\n        {label: 'Month', id: RecurrencePeriod.ABSOLUTE_MONTHLY}\n    ]\n    public week_days: Array<WeekDays> = []\n\n    public repeat_every_options\n\n\n    public get recurrenceDateStartTzFormControl() {\n        return this.form.get('dateTz')\n    }\n\n    public get recurrenceEndFormControl(){\n        return this.form.get('recurrence_endTz')\n    }\n\n    public get recurrencePeriodFormControl(){\n        return this.form.get('recurrence_period')\n    }\n\n    public get recurrenceIntervalFormControl(){\n        return this.form.get('recurrence_interval')\n    }\n\n    public get recurrencePatternFormControl(){\n        return this.form.get('recurrence_pattern')\n    }\n\n    public get recurrenceDaysFormControl(){\n        return this.form.get('recurrence_days')\n    }\n\n    public ngOnInit(): void {\n        // Setup some data to only run once, the previous giters were hogs\n        this.timezone = this.form.get('timezone').value;\n        this.nowTz = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: this.timezone });\n        // R--- The from date is curious, why isn't it based on the form dateTz?\n        this.repeat_every_options = new Array(1)\n        this.fromStartTz = closestToTimeSlotTz(this.nowTz, 15)\n        this.untilTz = this.nowTz.addValue({ years: 1 }).endOfValue('day');\n        this.fromEndTz = this.fromStartTz.addValue({days: 1})\n\n        this.setEndDateFromStartDate(this.recurrenceDateStartTzFormControl.value) //make sure end date is after start date\n\n        if(!this.recurrencePeriodFormControl.value){\n            this.recurrencePeriodFormControl.setValue(RecurrencePeriod.WEEKLY)\n        }\n\n        if(this.recurrencePeriodFormControl.value !== RecurrencePeriod.LIST){\n            this.recurrencePatternFormControl.setValue(this.recurrencePeriodFormControl.value)\n        }\n\n        this.week_days = generateWeekDays(this.recurrenceDateStartTzFormControl.value.ms, { building_tz: this.fromStartTz.building_tz })\n        this.generateMaxIntervals()\n\n        if(this.recurrenceDaysFormControl.value.length > 0){\n            this.week_days = this.week_days.map((day) => \n                ({...day, active: this.recurrenceDaysFormControl.value.includes(day.full_name)})\n            )\n        }\n\n        if(!this.recurrenceDaysFormControl.value.length && this.recurrencePeriodFormControl.value === RecurrencePeriod.WEEKLY){\n            const current_days = this.week_days.filter((day) => day.active).map((day)=>day.full_name)\n            this.recurrenceDaysFormControl.setValue(current_days)\n        }\n\n        this.generateOcurrenceList()\n\n        this.subscription('startTimeChanges',  this.recurrenceDateStartTzFormControl.valueChanges\n            .subscribe((next) => {\n                this.setEndDateFromStartDate(next)               \n            })\n        );\n\n        this.subscription('endTimeChanges',  this.recurrenceEndFormControl.valueChanges\n            .subscribe(() => {\n                this.generateMaxIntervals();\n            })\n        );\n        \n        this.subscription('recurrencePeriodFormControlChanges',  this.recurrencePeriodFormControl.valueChanges\n            .subscribe(() => {\n                this.generateMaxIntervals();\n            })\n        );  \n    }\n\n    public setEndDateFromStartDate(startDateTz: DateTZ){\n        let end_date = this.recurrenceEndFormControl.value.setValue({hour: startDateTz.dateHour, minute: startDateTz.minutes})\n\n        /**Update the End date picker range */\n        this.fromEndTz = startDateTz.isSameDate(this.untilTz,'day') ? startDateTz : startDateTz.addValue({days: 1})\n\n        if(end_date.isBeforeDate(this.fromEndTz)){\n            end_date = this.fromEndTz\n        }\n\n        this.recurrenceEndFormControl.setValue(end_date)\n\n        this.generateMaxIntervals()\n        this.updateActiveWeekday() \n    }\n\n    public setRepeatPeriod(value: RecurrencePeriod){\n        this.updateValidators(value)\n        this.recurrencePeriodFormControl.setValue(value);\n        this.recurrencePatternFormControl.setValue(value);\n        this.recurrenceIntervalFormControl.setValue(1)\n        this.generateOcurrenceList();\n    }\n\n    public setRepeatEvery(value: number){\n        this.recurrenceIntervalFormControl.setValue(value)\n        this.generateOcurrenceList()\n    }\n\n    public repeatTimeString(value: string){\n        return this.recurrenceIntervalFormControl.value !== 1 ? `${value}(s)` : value\n    }\n\n    public get displayWeekdays(){\n        return this.recurrencePatternFormControl.value === RecurrencePeriod.WEEKLY\n    }\n\n    /* Check if selected interval is valid and reset to 1 if not*/\n    private validateRecurrenceInterval = () => {\n        if(this.repeat_every_options.length < this.recurrenceIntervalFormControl.value){\n            this.recurrenceIntervalFormControl.setValue(1)\n        }    \n    };\n\n    /**\n     * Generate max value for dorpdown interval\n     */\n    public generateMaxIntervals(){\n        const start = this.recurrenceDateStartTzFormControl.value;\n        const date_diff = this.recurrenceEndFormControl.value.dateDiff(start, this.periodToDurationType, this.periodToDurationType)\n        //If no diff default to 1\n        this.repeat_every_options = new Array(Math.round(date_diff) || 1)\n        this.validateRecurrenceInterval();\n        if(this.recurrencePeriodFormControl.value !== RecurrencePeriod.LIST){\n            this.generateOcurrenceList()\n        }\n    }\n\n    /**\n     * Generate ocurrence list base on the selected interval\n     */\n    public generateOcurrenceList() {\n\n        /**If selected period is list then we don't want \n         * to generate a list based on the repeats on selections*/\n        if(this.recurrencePeriodFormControl.value === RecurrencePeriod.LIST){\n            return\n        }\n\n        const occurrence = []\n        const first_date = this.recurrenceDateStartTzFormControl.value;\n        let start = first_date\n        const end = this.recurrenceEndFormControl.value;\n        const interval = this.recurrenceIntervalFormControl.value\n        const recurr_days = this.week_days.filter(day => day.active)\n        /**\n         * isLastDayOfMonth : Boolean\n         *  flag - to generate last day of every month in case of day or month reccuring booking if start date is last day of month\n         */\n        //  const isLastDayOfMonth = first_date.date.day === first_date.date.daysInMonth && this.recurrencePeriodFormControl.value === RecurrencePeriod.ABSOLUTE_MONTHLY;\n        const isLastDayOfMonth = first_date.dateDay === 31 && this.recurrencePeriodFormControl.value === RecurrencePeriod.ABSOLUTE_MONTHLY ;\n        \n        if(this.recurrencePeriodFormControl.value === RecurrencePeriod.WEEKLY){\n            start = start.startOfValue('week')\n        }\n\n        while (end.dateDiff(start.startOfValue('day'), this.periodToDurationType, this.periodToDurationType) >= 0) {\n            \n            if(this.recurrencePeriodFormControl.value !== RecurrencePeriod.WEEKLY){\n                occurrence.push(start) \n                start = start.addValue({[this.periodToDurationType]: interval}, isLastDayOfMonth);\n               /**\n                * IF - should only consider resetting start under mentioned condition of ticket - https://acaprojects.atlassian.net/browse/MCK-2085\n                *  In summery - If user select any date except 31st, other months in the series (no matter 30 or 31 day month) should have same date select as start date.\n                *  If user select 31st as an start date, other month in the seleries should have select last day of the month (30th/31st/28th/29th).\n                *  Exception for February - February should select 28th or 29th  If in above both selection includes date between 28th - 31st.\n                * \n                */\n                if(start.dateDay !== first_date.dateDay && start.dateDay !== start.date.daysInMonth && this.recurrencePeriodFormControl.value === RecurrencePeriod.ABSOLUTE_MONTHLY) {\n                    start = start.setValue({day: first_date.dateDay});\n                }   \n            }else {\n                recurr_days.forEach((day)=>{\n                    const date = start.addValue({days: day.day_index})\n                    if((date.isAfterDate(first_date) || date.isSameDate(first_date, 'day')) && \n                      (date.isBeforeDate(end) || date.isSameDate(end, 'day'))){\n                        occurrence.push(date)\n                    }\n                })\n                start = start.addValue({[this.periodToDurationType]: interval})\n            }\n        }\n\n        this.form.controls.recurrence_count.setValue(occurrence.length)\n        this.form.controls.recurrence_starts.setValue(occurrence.sort((d1, d2) => d1.ms - d2.ms))\n        \n    }\n\n    public get periodToDurationType(){\n        const period = this.recurrencePeriodFormControl.value\n        return recurrencePeriodToDurationType(period)\n    }\n\n    /**\n     * Update active weekday in the weekdays array\n     */\n     private updateActiveWeekday() {\n        const _week_days = this.week_days.map((day)=>{\n            if(this.recurrenceDaysFormControl.value.includes(day.full_name)){\n                return {...day, active: true}\n            }else{\n                return {...day, active: false}\n            }\n        })\n        this.week_days = [..._week_days]         \n    }\n\n    public setWeekDays(new_day: WeekDays){\n        const days = this.recurrenceDaysFormControl.value\n        if(this.disabled){\n            return\n        }\n\n        if(!new_day.active){\n            days.push(new_day.full_name)\n        }else{\n            const current_index = days.indexOf(new_day.full_name)\n            days.splice(current_index,1)\n        }\n        this.recurrenceDaysFormControl.setValue([...days])\n        this.updateActiveWeekday()\n        this.generateOcurrenceList()\n    }\n\n    /**Update the recurrence days validator if period changes */\n    public updateValidators(value: RecurrencePeriod){\n        if(value === RecurrencePeriod.WEEKLY && this.recurrencePeriodFormControl.value !== RecurrencePeriod.WEEKLY){\n            const arrayValidators = [Validators.required];\n            arrayValidators.push(arrayWithValues);\n            this.recurrenceDaysFormControl.setValidators(arrayValidators);\n            this.recurrenceDaysFormControl.updateValueAndValidity();\n        }else if(value !== RecurrencePeriod.WEEKLY && this.recurrencePeriodFormControl.value === RecurrencePeriod.WEEKLY){\n            this.recurrenceDaysFormControl.clearValidators();\n            this.recurrenceDaysFormControl.updateValueAndValidity();\n        }\n    }\n}\n","<div class=\"type-form\" [formGroup]=\"form\" [class.disabled]=\"disabled\">\n    <div class=\"date-field\">\n        <label i18n=\"Booking form start date label\">Start date<span>*</span> </label>\n        <date-tz-date-picker\n            class=\"mck-form-input time-inputs-calendar\"\n            formControlName=\"dateTz\"\n            [fromDateTz]=\"fromStartTz\"\n            [untilDateTz]=\"untilTz\"\n            [disabled]=\"disabled\"\n            [invalid]=\"recurrenceDateStartTzFormControl.invalid\">\n        </date-tz-date-picker>\n        <mck-error-message *ngIf=\"recurrenceDateStartTzFormControl.invalid\">Date and time must be in the future</mck-error-message>\n    </div>\n    <div class=\"date-field\">\n        <label i18n=\"Booking form end date label\">End date<span>*</span> </label>\n        <date-tz-date-picker\n            class=\"mck-form-input time-inputs-calendar\"\n            formControlName=\"recurrence_endTz\"\n            [fromDateTz]=\"fromEndTz\"\n            [untilDateTz]=\"untilTz\"\n            [disabled]=\"disabled\"\n            [invalid]=\"recurrenceEndFormControl.invalid\">\n        </date-tz-date-picker>\n        <mck-error-message *ngIf=\"recurrenceEndFormControl.invalid\">Date and time must be in the future</mck-error-message>\n    </div>\n    <div class=\"pattern-container\">\n        <div class=\"flex-column repeat-every\">\n            <label i18n=\"Booking form repeat time label\">Repeats every<span>*</span> </label>\n            <div class=\"flex-row\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-select #select [value]=\"recurrenceIntervalFormControl.value\" [disabled]=\"disabled\" (valueChange)=\"setRepeatEvery($event)\">\n                        <mat-option *ngFor=\"let in of repeat_every_options;let i = index\" [value]=\"i + 1\">\n                            {{ i + 1}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select #select [value]=\"recurrencePatternFormControl.value\" [disabled]=\"disabled\" (valueChange)=\"setRepeatPeriod($event)\">\n                        <mat-option *ngFor=\"let option of repeat_period_options\" [value]=\"option.id\">\n                            {{ repeatTimeString(option.label) }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"flex-column repeat-on\" *ngIf=\"displayWeekdays\">\n            <label i18n=\"Booking form repeat on label\">On</label>\n            <div class=\"flex-row\">\n                <div \n                class=\"week-day\" \n                *ngFor=\"let day of week_days\" \n                [class.active-weekday]='day.active'\n                (click)=\"setWeekDays(day)\">\n                    {{day.id}}\n                </div>    \n            </div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    Input,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\nimport { SelectOption } from '../types';\n\n@Component({\n    selector: 'mck-select-option',\n    template: `\n        <ng-template>\n            <div\n                *ngIf=\"option\"\n                [ngClass]=\"{ 'mck-ignore-disabled': ignoreDisabled }\"\n                class=\"mck-row mck-select-option-{{selected ? 'selected' : 'unselected'}} mck-select-option mck-center-align\">\n                <mck-spacer\n                    [autoSize]=\"true\"\n                    size=\"5px\"\n                    class=\"mck-select-option-bar\"\n                    [mode]=\"'vertical'\"></mck-spacer>\n                <ng-content></ng-content>\n                {{ option.display }}\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./select-option.component.css']\n})\nexport class SelectOptionComponent extends BaseTemplateComponent {\n\n    @Input()\n    option: SelectOption<any>;\n\n    @Input()\n    selected: boolean;\n\n    /**\n     * If true, we still display as if it wasn't disabled.\n     */\n    @Input()\n    ignoreDisabled = false;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    BehaviorSubject,\n    combineLatest\n} from 'rxjs';\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport { map } from 'rxjs/operators';\nimport { MatSelect } from '@angular/material/select';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\n@Component({\n    selector: 'mck-select',\n    templateUrl: './select.component.html',\n    styleUrls: ['./select.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SelectComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SelectComponent implements OnInit, OnChanges, ControlValueAccessor {\n\n    @Input()\n    public label: string;\n\n    @Input()\n    public required: boolean;\n\n    @Input()\n    public options: SelectOption<any>[] = [];\n\n    @Input()\n    public selectedValue: SelectOption<any> | undefined;\n\n    /**\n     * When true, can filter by searching on the input.\n     */\n    @Input()\n    public searchEnabled = false;\n\n    @Input()\n    public splitDisplay = false;\n\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    @Input()\n    public noEntriesFoundLabel: string;\n\n    @Input()\n    public showDivider: boolean = false\n\n    /** Form control on change handler */\n    private _onChange: (_: SelectOption<any>) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: SelectOption<any>) => void;\n\n    public filterFormControl: FormControl = new FormControl();\n\n    public value = new BehaviorSubject<string | undefined>(this.selectedValue || this.options[0]?.value);\n\n    /** Available time blocks for the selected date */\n    public _options = new BehaviorSubject<SelectOption<any>[]>(this.options);\n\n    /** Select field for selecting the value */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public selectedOption = combineLatest([this._options, this.value]).pipe(\n        map(([options, value]) => options.find(o => o.value === value))\n    );\n\n    public placeHolderOption = this._options.pipe(\n        map(os => os.length > 0 && os[0])\n    );\n\n    public isSelected(option: SelectOption<any>) {\n        return this.value.pipe(map(t => t === option.value));\n    }\n\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n\n    constructor() {\n    }\n\n    public ngOnInit(): void {\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.options) {\n            this._options.next(this.options);\n            this.value.next(this.selectedValue || this.options?.[0]?.value);\n        }\n        if (changes.selectedValue) {\n            this.value.next(this.selectedValue?.value);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.value.next(new_value);\n        if (this._onChange) {\n            this._onChange(this.options.find(f => f.value === new_value));\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: SelectOption<any> | null) {\n        if (value != null) {\n            this.value.next(value.value);\n        }\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: SelectOption<any>) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: SelectOption<any>) => void): void {\n        this._onTouch = fn;\n    }\n\n}\n","<div class=\"mck-column mck-form-input\" [class.disabled]=\"disabled\">\n    <mck-label [required]=\"required\">{{label}}</mck-label>\n    <mat-form-field\n        appearance=\"outline\"\n        class=\"mck-center-suffix\">\n        <mat-select\n            #select\n            [placeholder]=\"(placeHolderOption | async)?.display\"\n            panelClass=\"mck-select-panel\"\n            [value]=\"value | async\"\n            [disabled]=\"disabled\"\n            (valueChange)=\"setValue($event)\"\n            disableOptionCentering>\n            <mat-option *ngIf=\"searchEnabled\">\n                <ngx-mat-select-search\n                    noEntriesFoundLabel=\"{{noEntriesFoundLabel}}\"\n                    [placeholderLabel]=\"(selectedOption | async)?.display\"\n                    [formControl]=\"filterFormControl\"></ngx-mat-select-search>\n            </mat-option>\n            <mat-option\n                *ngFor=\"let option of _options | async | filter: (filterFormControl.valueChanges | async): 'display'\"\n                [value]=\"option.value\">\n                <mck-select-option\n                    [option]=\"option\"\n                    [selected]=\"isSelected(option) | async\"\n                ></mck-select-option>\n            </mat-option>\n        </mat-select>\n        <mck-spacer\n            *ngIf=\"showDivider\"\n            size=\"1px\"\n            [mode]=\"'vertical'\"\n            spacerClass=\"legend-divider select-divider\"></mck-spacer>\n        <div class=\"mck-column select-chevron\">\n            <mck-chevron-icon [up]=\"isOpen\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n        </div>\n    </mat-form-field>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output\n} from '@angular/core';\n\n@Component({\n    selector: 'mck-selected-chip-count',\n    template: `\n        <div\n            (click)=\"close.emit()\"\n            class=\"mck-row mck-center selected-count-chip\">\n            <span>{{count}}</span>\n            <mck-close-icon fillClass=\"mck-icon-fill-black\"></mck-close-icon>\n        </div>\n    `,\n    styleUrls: ['./selected-chip-count.component.scss']\n})\nexport class SelectedChipCountComponent {\n\n    @Input()\n    count: number;\n\n    @Output()\n    close = new EventEmitter<void>();\n\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n    ViewContainerRef\n} from '@angular/core';\nimport { BaseTemplateComponent } from '../base-template.component';\n\nexport enum SpacerMode {\n    /**\n     * If vertical, it expands in the vertical direction. Size is width.\n     */\n    Vertical = 'vertical',\n    /**\n     * If horizontal, it expands in the horizontal direction. Size is height.\n     */\n    Horizontal = 'horizontal',\n}\n\n@Component({\n    selector: 'mck-spacer',\n    template: `\n        <ng-template>\n            <div class=\"mck-spacer-content {{spacerClass}}\"\n                 *ngIf=\"mode === SpacerMode.Vertical\"\n                 [ngStyle]=\"{ width: size, height: autoSize ? 'auto' : '100%'}\">\n            </div>\n            <div class=\"mck-spacer-content {{spacerClass}}\"\n                 *ngIf=\"mode === SpacerMode.Horizontal\"\n                 [ngStyle]=\"{ height: size, width: autoSize ? 'auto' : '100%'}\">\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./spacer.component.css'],\n})\nexport class SpacerComponent extends BaseTemplateComponent implements OnInit {\n    SpacerMode = SpacerMode;\n\n    @Input()\n    size: string;\n\n    @Input()\n    mode: SpacerMode = SpacerMode.Horizontal;\n\n    @Input()\n    autoSize?: boolean;\n\n    @Input()\n    spacerClass?: string;\n\n    constructor(vcRef: ViewContainerRef) {\n        super(vcRef);\n    }\n\n\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { SelectOption } from '@mckinsey-converge/ui';\n\n@Component({\n    selector: 'mck-switch-group',\n    template: `\n        <div class=\"mck-column mck-content-expand-width mck-stretch switch-container\">\n            <span\n                id=\"{{title}}\"\n                class=\"switch-title\">{{title}}</span>\n            <mat-slide-toggle\n                class=\"mck-slide-toggle\"\n                labelPosition=\"before\"\n                name=\"{{title}} - toggle - {{option.display}}\"\n                *ngFor=\"let option of options\"\n                (change)=\"onCheckedChange(option)\"\n                [checked]=\"isSelected(option)\">{{option.display}}</mat-slide-toggle>\n        </div>\n    `,\n    styleUrls: ['./switch-group.component.scss']\n})\nexport class SwitchGroupComponent implements OnInit {\n\n    @Input()\n    title: string;\n\n    @Input()\n    options: SelectOption<any>[];\n\n    @Input()\n    selectedOptions: SelectOption<any>[] = [];\n\n    @Output()\n    optionChecked = new EventEmitter<SelectOption<any>>();\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    public onCheckedChange(option: SelectOption<any>) {\n        this.optionChecked.emit(option);\n    }\n\n    public isSelected(option: SelectOption<any>) {\n        return !!this.selectedOptions.find(s => s.value === option.value);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport {\n    BaseDirective,\n    closestToTimeSlot,\n    nearestStepToInput,\n    timeWithGmtOffsetFormatString\n} from '@mckinsey-converge/base';\n\nimport { SelectOption } from '@mckinsey-converge/ui';\nimport { generateAvailableTimes } from '../utils/time.utils';\nimport {\n    BehaviorSubject,\n    combineLatest\n} from 'rxjs';\nimport {\n    filter,\n    map,\n    withLatestFrom\n} from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { DateTime } from 'luxon';\n\n@Component({\n    selector: 'mck-time-field',\n    template: `\n        <div class=\"mck-column mck-form-input\">\n            <mck-label [required]=\"required\">{{label}}</mck-label>\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"mck-center-suffix\">\n                <mat-select\n                    #select\n                    [placeholder]=\"(placeHolderOption | async)?.display\"\n                    panelClass=\"mck-select-panel\"\n                    [value]=\"value | async\"\n                    [disabled]=\"disabled\"\n                    (valueChange)=\"setValue($event)\"\n                    disableOptionCentering>\n                    <mat-option>\n                        <ngx-mat-select-search\n                            noEntriesFoundLabel=\"No timeslots found for current search. Try selecting one in the dropdown.\"\n                            [placeholderLabel]=\"(selectedOption | async)?.display\"\n                            [formControl]=\"filterFormControl\"></ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let option of options | async | filter: (nearestStep | async): 'shortDisplay'\"\n                        [value]=\"option.value\">\n                        <mck-select-option\n                            [option]=\"option\"\n                            [selected]=\"isSelected(option) | async\"\n                        ></mck-select-option>\n                    </mat-option>\n                </mat-select>\n                <div class=\"mck-column\">\n                    <mck-chevron-icon [up]=\"isOpen\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n                </div>\n            </mat-form-field>\n        </div>\n    `,\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    @Input()\n    public label: string;\n    @Input()\n    public required: boolean;\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public noPastTimes = true;\n    /** Representing the date from start **/\n    @Input() public from: number;\n    /** Representing desired timezone **/\n    @Input() public timezone?: string = new DateTZ({ date: Date.now() }).local_tz;\n\n    // R-- Which time field is going to be used, there's too many\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    /** String representing the currently set date */\n    public date = new BehaviorSubject(DateNow(new Date()).ms);\n\n    public filterFormControl: FormControl = new FormControl();\n\n    public nearestStep = combineLatest([\n        this.filterFormControl.valueChanges,\n        this.date]).pipe(\n        map(([value, date]) => nearestStepToInput(this.step, value, DateTime.now().valueOf()))\n    );\n\n    /** String representing the currently set time */\n    public value = new BehaviorSubject<string>(closestToTimeSlot(DateTime.now(), this.step).toFormat('HH:mm'));\n\n    /** Available time blocks for the selected date */\n    public options = new BehaviorSubject<SelectOption<any>[]>(generateAvailableTimes(DateNow(new Date()).ms, !this.noPastTimes, this.step, this.timezone));\n\n    public selectedOption = combineLatest([this.options, this.value]).pipe(\n        map(([options, value]) => options.find(o => o.value === value))\n    );\n\n    public placeHolderOption = this.options.pipe(\n        map(os => os.length > 0 && os[0])\n    );\n\n    public isSelected(option: SelectOption<any>) {\n        return this.value.pipe(map(t => t === option.value));\n    }\n\n    public get isOpen() {\n        return this.select_field?.panelOpen ?? false;\n    }\n\n    public ngOnInit(): void {\n        // Generate the time input options for the booking date\n        this.options.next(generateAvailableTimes(this.date.value, !this.noPastTimes, this.step, this.timezone));\n\n        // Subscribe to selected option changes\n        this.subscription('dateTimeChanges',\n            combineLatest([\n                this.date\n            ]).pipe(\n                map(([date]) => {\n                    // R--- The time input needing to be TZ aware.\n                    const closestTimeSlot = closestToTimeSlot(DateTime.fromMillis(date.valueOf()), this.step);\n                    // Need to return the date with building timezone or the HH:mm representation will no match the option values\n                    return new DateTZ({date: closestTimeSlot.valueOf(), is_local_tz:false, building_tz: this.timezone});\n                }),\n                withLatestFrom(this.options),\n                filter(([date, timeOptions]: [DateTZ, SelectOption<any>[]]) => {\n                    // if new time slot opened up when date / time changes, add it here.\n                    return !timeOptions.find(t => t.value === date.formatDate('HH:mm'));\n                }),\n                map(([date, timeOptions]) => {\n                    // TODO probably an issue here with going from a future date and time earlier than now back to day showing null\n                    // Push the current date option in\n                    timeOptions.push({\n                        display: timeWithGmtOffsetFormatString(date),\n                        value: date.formatDate('HH:mm')\n                    });\n                    // Sort the time options\n                    timeOptions.sort((a, b) => `${a.value}`.localeCompare(`${b.value}`));\n                    return timeOptions;\n                })\n            ).subscribe(next => this.options.next(next)));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step || changes.timezone) {\n            // If there's a new date value then update the time options\n            this.options.next(generateAvailableTimes(this.date.value, !this.noPastTimes, this.step, this.timezone));\n            const buildingDate = new DateTZ({date: this.from, is_local_tz: false, building_tz: this.timezone}).startOfValue('minute');\n            this.value.next(buildingDate.formatDate('HH:mm'));\n        }\n        if (changes.from) {\n            // When the from input param changes update the date value\n            this.date.next(this.from);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        // value comes in as a HH:mm string\n        const newTime = (new_value.indexOf(':') > 0 ? new_value : '00:00').split(':');\n        // need the date with the building timezone so the hour set is relative to there and not local.\n        const d = new DateTZ({ date: this.date.value, is_local_tz: false, building_tz: this.timezone });\n        const date = d.setValue({ hour: parseInt(newTime[0]), minute: parseInt(newTime[1]) });\n        if (date) {\n            if (this._onChange) {\n                this._onChange(date.ms);\n            }\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number | null) {\n        if (value != null) {\n            // Time input value in building time milliseconds\n            this.date.next(value);\n            // Get the closest time to slot in case the browser was idle and elapse the valid times\n            const date = closestToTimeSlot(DateTime.fromMillis(value).startOf('minute'), this.step);\n            // Need the building time so HH:mm is correct\n            const buildingDate = new DateTZ({date: date.valueOf(), is_local_tz: false, building_tz: this.timezone}).startOfValue('minute');\n            this.options.next(generateAvailableTimes(buildingDate.ms, !this.noPastTimes, this.step, this.timezone));\n        }\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output\n} from '@angular/core';\nimport { SelectOption } from '@mckinsey-converge/ui';\n\n@Component({\n    selector: 'mck-toggle',\n    template: `\n        <div class=\"mck-row toggle-container\">\n            <button\n                name=\"{{option.display}}\"\n                class=\"mck-toggle-button {{isSelected(option) ? 'mck-toggle-button-selected' : ''}}\"\n                mat-ripple\n                (click)=\"onTapOption(option)\"\n                *ngFor=\"let option of options\">{{option.display}}</button>\n        </div>\n    `,\n    styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent {\n\n    @Input()\n    options: SelectOption<any>[];\n\n    @Input()\n    selected: SelectOption<any>;\n\n    @Output()\n    selectedChange = new EventEmitter<SelectOption<any>>();\n\n    public onTapOption(option: SelectOption<any>) {\n        this.selectedChange.emit(option);\n    }\n\n    isSelected(option: SelectOption<any>) {\n        return this.selected === option;\n    }\n}\n","export { AlertMode, AlertBannerDisplay } from './alert-banner/alert-banner.component';\nexport { SelectOption } from './options/select-option';\nexport * from './cng-select/dropdown-panel';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AutoCompleteChipSelectItemComponent } from './auto-complete-chip-select-item/auto-complete-chip-select-item.component';\nimport { AutoCompleteSelectOptionComponent } from './auto-complete-select-option/auto-complete-select-option.component';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { RadioSelectComponent } from './radio-select/radio-select.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TimeFieldComponent } from './time-field/time-field.component';\nimport { DateTzTimeFieldComponent } from './date-tz-time-field/date-tz-time-field.component';\nimport { SpacerComponent } from './spacer/spacer.component';\nimport { DurationFieldComponent } from './duration-field/duration-field.component';\nimport { DateTzDurationFieldComponent } from './date-tz-duration-field/date-tz-duration-field.component';\nimport { AcaDatePickerComponent } from './aca-date-picker/aca-date-picker.component'; // the old widget\nimport { MckDatePickerComponent } from './mck-date-picker/mck-date-picker.component'; // the old form field \nimport { DateTzCalendarWidgetComponent } from './date-tz-calendar-widget/date-tz-calendar-widget.component'; // the new widget\nimport { DateTzDatePickerComponent } from './date-tz-date-picker/date-tz-date-picker.component'; // the new form field \nimport { CalendarIconComponent } from './icons/calendar/calendar-icon.component';\nimport { ChevronIconComponent } from './icons/calendar/chevron-icon.component';\nimport { SelectOptionComponent } from './select-option/select-option.component';\nimport { CloseIconComponent } from './icons/close/close-icon.component';\nimport { SelectedChipCountComponent } from './selected-chip-count/selected-chip-count.component';\nimport { AlertBannerComponent } from './alert-banner/alert-banner.component';\nimport { ErrorMessageComponent } from './error-message/error-message.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LabelComponent } from './label/label.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { CollapseHeaderComponent } from './collapse-header/collapse-header.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { SwitchGroupComponent } from './switch-group/switch-group.component';\nimport { ModalButtonRowComponent } from './modal-button-row/modal-button-row.component';\nimport { InformationalImageComponent } from './informational-image/informational-image.component';\nimport { GroupHeaderPipe } from './auto-complete-chip-select-item/groupHeader.pipe';\nimport { SelectComponent } from './select/select.component';\nimport { LegendDropdownComponent } from './legend-dropdown/legend-dropdown.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { RecurrencePatternForm } from './recurrence-pattern-form/recurrence-pattern-form.component'; \nimport { RecurrenceDateForm } from './recurrence-date-form/recurrence-date-form.component';\nimport { ConflictsModalComponent } from './conflicts-modal/conflicts-modal.component';\nimport { RecurringBookingForm } from './recurrence-booking-form/recurrence-booking-form.component';\nimport { OverrideChangesModalComponent } from './override-changes-modal/override-changes-modal.component';\nimport { SanitizePipe } from './pipes/sanitise.pipe';\nimport { ConflictAlertModalComponent } from './conflict-alert-modal/conflict-alert-modal.component';\nimport { CngSelectComponent } from './cng-select/cng-select.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { DropdownTriggerForDirective } from './cng-select/dropdown-trigger-for.directive';\nimport { CngSelectOptionsComponent } from './cng-select/cng-select-options.component';\n\nexport const MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    OverlayModule\n];\n\n@NgModule({\n    imports: [CommonModule,\n        ...MATERIAL_MODULES,\n        ReactiveFormsModule,\n        FormsModule,\n        NgxMatSelectSearchModule, NgxSkeletonLoaderModule],\n    declarations: [\n        AutoCompleteChipSelectItemComponent,\n        AutoCompleteSelectOptionComponent,\n        AcaDatePickerComponent,\n        MckDatePickerComponent,\n        DateTzCalendarWidgetComponent,\n        DateTzDatePickerComponent,\n        TimeFieldComponent,\n        DateTzTimeFieldComponent,\n        DurationFieldComponent,\n        DateTzDurationFieldComponent,\n        GroupHeaderPipe,\n        RadioSelectComponent,\n        FilterPipe,\n        SanitizePipe,\n        SpacerComponent,\n        CalendarIconComponent,\n        ChevronIconComponent,\n        SelectOptionComponent,\n        CloseIconComponent,\n        SelectedChipCountComponent,\n        AlertBannerComponent,\n        ErrorMessageComponent,\n        ToggleComponent,\n        LabelComponent,\n        ModalComponent,\n        CollapseHeaderComponent,\n        SwitchGroupComponent,\n        ModalButtonRowComponent,\n        InformationalImageComponent,\n        SelectComponent,\n        LegendDropdownComponent,\n        RecurrencePatternForm,\n        RecurrenceDateForm,\n        RecurringBookingForm,\n        ConflictsModalComponent,\n        OverrideChangesModalComponent,\n        ConflictAlertModalComponent,\n        CngSelectComponent, \n        DropdownTriggerForDirective,\n        CngSelectOptionsComponent\n    ],\n    exports: [\n        AutoCompleteChipSelectItemComponent,\n        AutoCompleteSelectOptionComponent,\n        AcaDatePickerComponent,\n        MckDatePickerComponent,\n        DateTzCalendarWidgetComponent,\n        DateTzDatePickerComponent,\n        TimeFieldComponent,\n        DateTzTimeFieldComponent,\n        DurationFieldComponent,\n        DateTzDurationFieldComponent,\n        RadioSelectComponent,\n        FilterPipe,\n        SanitizePipe,\n        SpacerComponent,\n        CalendarIconComponent,\n        ChevronIconComponent,\n        AlertBannerComponent,\n        ReactiveFormsModule,\n        FormsModule,\n        ToggleComponent,\n        LabelComponent,\n        ModalComponent,\n        CollapseHeaderComponent,\n        SwitchGroupComponent,\n        ModalButtonRowComponent,\n        InformationalImageComponent,\n        SelectComponent,\n        LegendDropdownComponent,\n        RecurrencePatternForm,\n        RecurrenceDateForm,\n        RecurringBookingForm,\n        ConflictsModalComponent,\n        OverrideChangesModalComponent,\n        ConflictAlertModalComponent,\n        CngSelectComponent, DropdownTriggerForDirective,\n        CngSelectOptionsComponent\n    ]\n})\nexport class UiModule {\n}\n","/**\n * Generate a list of time options for the given date\n * @param datestamp Date to generate options for\n * @param show_past Whether past times should be options\n */\n\nimport {\n    closestToTimeSlot,\n    closestToTimeSlotTz,\n    DurationGroup,\n    durationHumanized,\n    timeFormatString,\n    timeWithGmtOffsetFormatString,\n    unique\n} from '@mckinsey-converge/base';\nimport { SelectOption } from '../types';\nimport { DateTZ } from \"@mckinsey-converge/date-tz\";\nimport { DateTime } from 'luxon';\n\n// 24 hours\nexport const ALL_DAY_BOOKING_VALUE = 60 * 24;\n\nexport const DEFAULT_DURATION = 30;\n\n// R--- depreciate.\nexport const generateAvailableTimes = (\n    datestamp: number,\n    showPast: boolean,\n    step: number = 15,\n    timezone: string = new DateTZ({ date: Date.now() }).local_tz\n): SelectOption<any>[] => {\n    // R--- refactor to only used dateTz input and drop timezone param.\n    // now needs the building timezone for isAfter to work correctly\n    const now = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: timezone });\n    // date needs the building timezone for isAfter to work correctly\n    let date = new DateTZ({ date: datestamp, is_local_tz: false, building_tz: timezone });\n    // Check if we're today or a future date\n    const blocks: SelectOption<any>[] = [];\n    if (showPast || date.isAfterDate(now, 'day')) {\n        // later than today\n        date = date.startOfValue('day');\n    } else {\n        // today\n        date = now;\n    }\n    // Get the closest timeslot to the start time\n    const inputDate = DateTime.fromMillis(date.ms);\n    const closestDate = closestToTimeSlot(inputDate, step);\n    // Date changed to the closest time\n    date = new DateTZ({ date: closestDate.valueOf(), is_local_tz: false, building_tz: timezone });\n    const end = date.endOfValue('day');\n    // Add options for the rest of the day\n    while (date.isBeforeDate(end)) {\n        blocks.push({\n            display: timeWithGmtOffsetFormatString(date),\n            shortDisplay: date.formatDate('hh:mma'),\n            value: date.formatDate('HH:mm')\n        });\n        date = date.addValue({ minutes: step });\n    }\n    return blocks;\n};\n\n\nexport const generateAvailableTimesTz = (\n    fromDateTz: DateTZ,\n    showPast: boolean,\n    step: number = 15,\n    timezone: string = new DateTZ({ date: Date.now() }).local_tz,\n    all_day: boolean = false,\n    extras: SelectOption<DateTZ>[] = [],\n    startFromDateTz: boolean = false\n): SelectOption<DateTZ>[] => {\n    // now needs the building timezone for isAfter to work correctly\n    const now = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: timezone });\n    // date needs the building timezone for isAfter to work correctly\n    let dateTz = fromDateTz.clone();\n    // Check if we're today or a future date\n    const blocks: SelectOption<DateTZ>[] = [];\n    if (showPast || dateTz.isAfterDate(now, 'day')) {\n        // later than today\n        dateTz = dateTz.startOfValue('day');\n    } else {\n        // today/fromDateTz using the flag\n        dateTz = startFromDateTz ? dateTz : now;\n    }\n    // Get the closest timeslot to the start time\n    dateTz = closestToTimeSlotTz(dateTz, step);\n    // Date changed to the closest time\n    const end = dateTz.endOfValue('day');\n    // Add the all day option for today\n    if (all_day && dateTz.isSameDate(now, 'day')) {\n        const startOfDay = dateTz.startOfValue('day');\n        blocks.push({\n            display: timeWithGmtOffsetFormatString(startOfDay),\n            shortDisplay: startOfDay.formatDate('hh:mma'),\n            value: startOfDay\n        })\n    }\n    // Add options for the rest of the day\n    while (dateTz.isBeforeDate(end)) {\n        blocks.push({\n            display: timeWithGmtOffsetFormatString(dateTz),\n            shortDisplay: dateTz.formatDate('hh:mma'),\n            value: dateTz, \n        });\n        \n        dateTz = dateTz.addValue({ minutes: step });\n    }\n\n    return unique(extras.concat(blocks), 'shortDisplay');\n};\n\n/**\n * Generates list of duration options for new booking flow.\n * @param date - The start dateTime\n * @param max - The max number of minutes to go to from the date param.\n * @param min - The min number of minutes to display first time from.\n * @param step - The number of minutes to step up by for timeslots.\n */\nexport const generateDurationOptions = (\n    date: DateTZ,\n    max: number,\n    min: number,\n    step: number,\n    extended: boolean): SelectOption<any>[] => {\n    const blocks: SelectOption<any>[] = [];\n    let value = min;\n    while (value <= max) {\n        let duration: string;\n        if (extended) {\n            const d = durationHumanized(value - min, true);\n            duration = d ? `+${d}` : 'Current';\n        } else {\n            duration = durationHumanized(value, true);\n        }\n\n        blocks.push({\n            value,\n            display: `${date.addValue({ minutes: value }).formatDate(timeFormatString()).toLocaleLowerCase()} (${duration})`,\n        });\n        value += step;\n    }\n    return blocks;\n};\n\nexport const allDayOption: SelectOption<any> = ({\n    value: ALL_DAY_BOOKING_VALUE,\n    display: 'All Day'\n});\n\nexport const oneWeekOption: SelectOption<any> = ({\n    value: 60 * 24 * 7, // 1 week\n    display: 'One Week'\n});\n\nexport const defaultDurationGroups: DurationGroup[] = [\n    {\n        start: 15,\n        step: 15,\n        max: 60 * 24\n    }\n    // , {\n    //     start: 60,\n    //     step: 30,\n    //     max: (60 * 8) - 1  // 8 hours\n    // }, {\n    //     start: 60 * 8,\n    //     step: 60,\n    //     max: 60 * 24 // 24 hours\n    // }\n];\n\n/**\n * Maps the {@link DurationGroup} to {@link SelectOption} and appends the default all day and week options.\n */\nexport const generateDurationOptionsFromGroups = (date: DateTZ, durationGroups: DurationGroup[], extended: boolean): SelectOption<any>[] => [\n    ...(durationGroups.map(duration => generateDurationOptions(date, duration.max, duration.start, duration.step, extended)).reduce(((previousValue, currentValue) => {\n        previousValue.push(...currentValue);\n        return previousValue;\n    }), [])),\n        // allDayOption,\n        // oneWeekOption\n    ];\n","export * from './lib/user.module';\nexport * from './lib/user.actions'\nexport * from './lib/user.types'\nexport * from './lib/user.reducer'\n","import { \n    createLoadingAction\n  } from '../../../loading/src/lib/loading.actions';\nimport {\n    UserState,\n    UserStoreState\n} from './user.types';\nimport { User } from '../../../data-common/src/lib/users/user.class';\nimport { createSelector } from '@ngrx/store';\n\nexport const loadUser = createLoadingAction<UserState, User>('CurrentUser', 'current');\n\nexport const selectUserState = ({ user }: UserStoreState) => user;\n\nexport const selectHasUserData = createSelector(createSelector(selectUserState, loadUser.selectors.model), (state) => !!state.optionalSuccess);\n\nexport const selectCurrentUser = createSelector(selectUserState, loadUser.selectors.optionalSuccess);\n","import { Injectable } from '@angular/core';\nimport {\n    Actions,\n    Effect\n} from '@ngrx/effects';\nimport { createLoadingEffect } from '@mckinsey-converge/loading';\nimport { loadUser } from './user.actions';\nimport { UsersService } from '../../../data-common/src/lib/users/users.service';\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private actions: Actions,\n                private userService: UsersService) {\n    }\n\n    @Effect()\n    loadUser = createLoadingEffect(this.actions, loadUser, () => this.userService.loadCurrentUser());\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { userReducer } from './user.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffects } from './user.effects';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StoreModule.forFeature('user', userReducer),\n        EffectsModule.forFeature([UserEffects])\n    ]\n})\nexport class UserModule {\n}\n","import { createReducer } from '@ngrx/store';\nimport { UserState } from './user.types';\nimport { LoadingModel } from '@mckinsey-converge/loading';\nimport { loadUser } from './user.actions';\n\n\nexport const initialUserState: UserState = {\n    current: LoadingModel.empty()\n};\n\nexport const userReducer = createReducer(initialUserState,\n    ...loadUser.ons);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./calendar/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./calendar/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./reports/reports.module').then(m => m.ReportsModule)\n            },\n            {\n                path: 'room-admin',\n                loadChildren: () =>\n                import('./room-admin/room-admin.module').then(m => m.RoomAdminModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        // CONCIERGE.date: If invalid, reset the localstorage date and timezone when reloading pages.\n        const timezoneString = localStorage.getItem('CONCIERGE.timezone') || null;\n        localStorage.removeItem('CONCIERGE.date');\n        if (!timezoneString) {\n            localStorage.removeItem('CONCIERGE.timezone');            \n        }\n\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from '../environments/environment';\nimport { SharedContentModule } from './shared/shared.module';\nimport {\n    ActionReducer,\n    MetaReducer,\n    StoreModule\n} from '@ngrx/store';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { provideMockSettingsObject } from '@mckinsey-converge/data-common';\nimport { DEFAULT_SETTINGS } from 'src/environments/settings';\nimport { ENVIRONMENT_TOKEN } from '@mckinsey-converge/environment';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { BookingsModule } from 'src/app/bookings/bookings.module';\nimport { BookingsModule as BookingModuleStaff } from '@mckinsey-converge/bookings';\nimport { CalendarModule } from 'src/app/calendar/calendar.module';\nimport { EffectsModule } from '@ngrx/effects';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n/**\n * Cache some state in local storage. Not for use in production.\n */\n export function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\n    // Keys needed to fix prod reloading.  MCK-1229\n    let keys = [\n        'buildings',\n        'bookingForm',\n        'rooms',\n    ];\n\n    if (!environment.production) {\n        keys = [\n            'bookings',\n            'buildings',\n            'organisation',\n            'bookingForm',\n            'rooms',\n            'user'\n        ];\n    }\n\n    return localStorageSync({\n        keys,\n        rehydrate: true,\n    })(reducer);\n}\n\nconst metaReducers: Array<MetaReducer<any, any>> = [localStorageSyncReducer];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        BookingsModule,\n        CalendarModule,\n        LegacyOverlaysModule,\n        SharedContentModule,\n        StoreModule.forRoot({}, { metaReducers }),\n        BookingModuleStaff,\n        EffectsModule.forRoot(),\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'nevet' } },\n        provideMockSettingsObject(DEFAULT_SETTINGS),\n        { provide: ENVIRONMENT_TOKEN, useValue: environment }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import {Component, OnInit, Inject, Output, EventEmitter} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {first} from 'rxjs/operators';\nimport {BaseDirective, closestToTimeSlotTz} from '@mckinsey-converge/base';\nimport {\n  Booking,\n  BookingAction,\n  generateBookingForm, OrganisationService, RecurrencePeriod, removeExpiredOcurrences, SeriesAction, validDateTZ\n} from '@mckinsey-converge/data-common';\nimport {AvailableBookingFields} from '@mckinsey-converge/data-common';\nimport {ApplicationService} from '@mckinsey-converge/data-common';\nimport {HashMap, DialogEvent} from '@mckinsey-converge/base';\nimport {CateringDetailsModalComponent, CateringDetailsModalData} from '@mckinsey-converge/legacy-overlays';\nimport {BookingConfirmComponent} from '@mckinsey-converge/legacy-overlays';\nimport {RequirementDetailsModalComponent, RequirementDetailsModalData} from '@mckinsey-converge/legacy-overlays';\nimport {SpacesService} from '@mckinsey-converge/data-common';\nimport { ConflictsModalComponent, ConflictsModalComponentData, OverrideChangesModalComponent } from '@mckinsey-converge/ui';\nimport { DateNow, DateTZ } from \"@mckinsey-converge/date-tz\";\nimport { I } from '@angular/cdk/keycodes';\n\n\nexport interface BookingFlowEvent {\n  /** Type of flow event */\n  type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n  /** Step which the event was emitted from */\n  step: string;\n  /** Additional metadata for the event */\n  metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n  /** Booking to create/edit */\n  booking: Booking;\n  /** Whether to edit only catering */\n  only_catering?: boolean;\n  /** Pass in timezone for new bookings */\n  timezone?: string;\n  /**Type of action on a series */\n  action?: SeriesAction | BookingAction;\n  //** If Booking request from day view grid click */\n  isFromGrid?: boolean;\n}\n\n@Component({\n  selector: 'a-booking-modal',\n  templateUrl: './booking-modal.component.html',\n  styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n\n  /** Range of dates for the Start Date Picker*/\n  public from_start: DateTZ;\n  public to: DateTZ;\n\n  /** Range of dates for the Start Date Picker*/\n  public from_end: DateTZ;\n\n  /** Form fields */\n  public form: FormGroup;\n  /** Form data store */\n  public booking: Booking;\n  /** Step of the booking flow that is currently active */\n  public flow_step: string;\n  public modalTitle: string;\n\n  public iscloning: SeriesAction | BookingAction | null = null;\n\n  public edit_recurrence: boolean\n\n  /** Whether to edit only catering */\n  public get only_catering(): boolean {\n    return !!this._data.only_catering;\n  }\n\n  @Output() public event = new EventEmitter<DialogEvent>();\n\n  /** List of available booking fields for the form */\n  public get available_fields(): AvailableBookingFields[] {\n    return this._service.setting('app.booking.show_fields') || [];\n  }\n\n  constructor(\n    private _service: ApplicationService,\n    private _spaces: SpacesService,\n    private _org: OrganisationService,\n    private _dialog: MatDialog,\n    private _dialog_ref: MatDialogRef<BookingModalComponent>,\n    @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n  ) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.getModalTitle();\n    this._dialog_ref.disableClose = true;\n    this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n      this.flow_step = this._data.only_catering ? 'catering' : 'form';\n      this.loadFormData();\n    });\n  }\n\n  public getModalTitle() {\n    switch (this._data.action) {\n      case BookingAction.EDIT:\n        this.modalTitle = 'Edit Booking';\n        break;\n      case SeriesAction.CLONE:\n        this.modalTitle = 'Clone Recurring Series';\n        break;\n      case BookingAction.CLONE:\n        this.modalTitle = 'Clone Booking';\n        break;\n      case SeriesAction.EDIT:\n        this.modalTitle = 'Edit Series';\n        break;\n      default:\n        this.modalTitle = 'New Booking';\n        break;\n    }\n  }\n\n  /**\n   * Handle events from child components\n   * @param event Booking flow event\n   */\n  public handleFlowEvent(event: BookingFlowEvent) {\n    /* istanbul ignore else */\n    if (event.type === 'next') {\n      this.toNextFlowStep(event);\n    } else if (event.type === 'previous') {\n      this.toPreviousFlowStep(event);\n    } else if (event.type === 'reset') {\n      this.resetForm();\n    }\n  }\n\n  public close() {\n    this._dialog_ref.close();\n  }\n\n\n  private toNextFlowStep(event: BookingFlowEvent) {\n    const space_list = this.form.controls.space_list.value;\n    switch (event.step) {\n      case 'recurrence':\n        this.openRecurrenceConflictsModal();\n        break\n      case 'search':\n        if (\n          space_list &&\n          space_list.length &&\n          (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n        ) {\n          this.openEquipmentDetailsModal();\n        } else {\n          if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n            this.navigate('catering');\n          } else {\n            this.navigate('form');\n            this.confirmBooking();\n          }\n        }\n        break;\n      case 'catering':\n        const order_list = this.form.controls.catering.value;\n        if (\n          order_list.find(order => this.form.controls.space_list.value.find(space => space.email === order.location_id)) &&\n          order_list &&\n          order_list.length &&\n          (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n        ) {\n          this.openCateringDetailsModal();\n        } else {\n          this.navigate('form');\n          this.confirmBooking();\n        }\n        break;\n      case 'changes':\n        this.overrideChanges();\n      break;\n      default:\n        this.form.markAsDirty();\n        //const is_recurr_series_edit = this.booking.id && this.form.controls.is_recurrent.value && this._data.action\n        const is_recurr_series_edit = this.booking.id && (\n          this._data.action === SeriesAction.CLONE || this._data.action === SeriesAction.EDIT || this._data.action === BookingAction.CLONE\n        )\n        if (!space_list || !space_list.length || !this.booking.id || is_recurr_series_edit) {\n          this.navigate('search');\n        } else if (this.booking.id && space_list && space_list.length) {\n          this.openEquipmentDetailsModal();\n        } else {\n          this.confirmBooking();\n        }\n        break;\n    }\n  }\n\n  private toPreviousFlowStep(event: BookingFlowEvent) {\n    switch (event.step) {\n      case 'search':\n        this.navigate('form');\n        break;\n      case 'catering':\n        /* istanbul ignore else */\n        if (!this._data.only_catering) {\n          this.navigate('search');\n        }\n        else {\n          this.close();\n        }\n        break;\n    }\n  }\n\n  private navigate(route: string) {\n    this.flow_step = route;\n  }\n\n  /** Clear user changes to the form data */\n  private resetForm() {\n    delete this.form;\n    // Pass in the desired location timezone\n    this.form = generateBookingForm(\n      this.booking,\n      this.available_fields,\n      true,\n      this._data?.timezone,\n      this._data.action\n    );\n\n    this.form.addControl('action', new FormControl(this._data.action))\n  }\n\n  /**\n   * Load existing form data or generate a new booking form\n   *\n   * It fires when the modal first opens.\n   * this._data.booking is an empty {} when creating a booking but set when editing\n   */\n  private loadFormData(): void {\n    const form_data: HashMap = this._data.booking ? this._data.booking.toJSON() : {};\n    form_data.duration = form_data.duration || form_data?.startDateTz?.dateDiff(form_data?.endDateTz, 'minutes') || 0\n    //\n    /**\n     * Set the desired timezone in the booking creation.\n     * this._data?.timezone is when creating a new booking\n     *  this._data.booking?.timezone is when editing a booking\n     *\n     * R-- refactor to make consistent atm _data.timezone is defined everywhere\n     * but generateBookingForm could use form_data.timezone\n     */\n    form_data.timezone = this._data.booking?.timezone || this._data?.timezone;\n    // start a new booking out with a start end time.\n\n    const is_cloning_or_edit = this._data.action === SeriesAction.CLONE ||\n      this._data.action === BookingAction.CLONE ||\n      this._data.action === BookingAction.EDIT ||\n      this._data.action === SeriesAction.EDIT;\n\n    if (\n        ( !this._data?.isFromGrid && ( !form_data.startDateTz || form_data.startDateTz.isBeforeDate(DateNow()) ) )\n        && !this._data.only_catering && !is_cloning_or_edit\n      ) {\n      form_data.startDateTz = closestToTimeSlotTz(new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: form_data.timezone }), 15);\n      form_data.start_epoch = form_data.startDateTz.seconds;\n      form_data.endDateTz = form_data.startDateTz.addValue({ minutes: form_data.duration });\n      form_data.end_epoch = form_data.endDateTz.seconds;\n    }\n    this.booking = new Booking(form_data);\n\n    if(this.booking.is_recurrent && (\n        this._data.action === SeriesAction.CLONE || this._data.action === SeriesAction.EDIT\n    )){ //if it's series get the recurrence_end from the occurences\n      this.booking.recurrence_endTz = this.booking.recurrenEndFromOcurrences(this.booking.occurrence_details)\n    }\n\n\n    // An empty booking here is when creating a new booking, edit booking will populate all the values\n    this.form = generateBookingForm(\n      this.booking,\n      this.available_fields,\n      true,\n      this._data?.timezone, // MUST be defined in dialog.open(BookingModalComponent or booking will revert to a local timezone\n      this._data.action\n    );\n\n    this.form.addControl('action', new FormControl(this._data.action))\n\n    // localize the booking form start time\n    /* istanbul ignore else */\n    if (form_data && form_data.room_ids && this.form.controls.space_list) {\n      this.form.controls.space_list.setValue(\n        form_data.room_ids.map(id => this._spaces.find(id) || {id, name: id})\n      );\n    }\n\n    this.edit_recurrence = this.booking?.id\n      && (this.form.controls.action?.value === SeriesAction.EDIT || this.form.controls.action?.value === SeriesAction.CLONE);\n\n    if (this._data.action === SeriesAction.CLONE || this._data.action === BookingAction.CLONE) {\n\n      this.iscloning = this._data.action === SeriesAction.CLONE ? SeriesAction.CLONE : BookingAction.CLONE;\n\n      this._data.action === BookingAction.CLONE\n        ? this.form.get('title').setValue(`Clone ${this.booking.title}`)\n        : this.form.get('title').setValue(`Series Clone ${this.booking.title}`);\n\n      this.form.get('id').setValue('');\n      this.form.get('organiser').enable();\n\n      if (this._data.action === BookingAction.CLONE) {\n        this.form.get('is_recurrent').setValue(false);\n        this.form.get('is_recurrent').disable();\n      }\n      const tz = this._org.building.timezone;\n      this.form.patchValue({ timezone: tz });\n\n      // Check if the booking is a list, if so then updates the value for start and end date fields.\n      if (form_data.recurrence_period === RecurrencePeriod.LIST) {\n        removeExpiredOcurrences(this.form)\n      }\n\n      // cloning individual occurrence set tup\n      const start_time = form_data.recurrence_period === RecurrencePeriod.LIST ? this.form.controls.dateTz.value : new DateTZ({ date: this.booking.start_epoch * 1000, is_local_tz: false, building_tz: tz });\n      const date_now = DateNow(new Date()).toZone(tz);\n\n      // case 1: past booking\n      if (start_time.isBeforeDate(date_now, \"day\")) {\n        if (form_data.recurrence_period !== RecurrencePeriod.LIST) {\n          this.form.controls.dateTz.setValidators([\n            Validators.required,\n            validDateTZ\n          ]);\n          this.form.controls.dateTz.updateValueAndValidity();\n          this.form.controls.dateTz.markAsTouched();\n          this.form.controls.is_before_date.setValue(true);\n\n          if(this._data.action === BookingAction.CLONE && this.form.controls.all_day.value === true) {\n            this.form.get('dateTz').enable();\n          }\n        }\n      }\n\n      // case 2: booking is in the same day but but the start time has already passed\n      if (\n        start_time.isSameDate(date_now, \"day\") && start_time.startEpoch() < date_now.startEpoch()\n      ) {\n        this.form.controls.dateTz.setValue(closestToTimeSlotTz(date_now, 15));\n      }\n\n      // case 3: future booking nothing to do\n      //Nothing to do\n    }\n\n    if (\n      this.form.controls.action?.value === SeriesAction.EDIT || this.form.controls.action?.value === BookingAction.EDIT\n    ) {\n      const tz = this._org.building.timezone;\n      const start_time = form_data.recurrence_period === RecurrencePeriod.LIST ? this.form.controls.dateTz.value : new DateTZ({ date: this.booking.start_epoch * 1000, is_local_tz: false, building_tz: tz });\n      const date_now = DateNow(new Date()).toZone(tz);\n\n      if (\n        start_time.isSameDate(date_now, \"day\") && (\n          start_time.startEpoch() <= date_now.startEpoch() &&\n          start_time.addValue({ minutes: this.booking.duration}).startEpoch() >= date_now.startEpoch())\n       ) {\n        this.form.controls.is_before_date.setValue(true);\n      }\n\n      if (start_time.isSameDate(date_now, \"day\") && start_time.addValue({ minutes: this.booking.duration}).startEpoch() < date_now.startEpoch()) {\n        this.form.controls.dateTz.setValue(closestToTimeSlotTz(date_now, 15));\n      }\n    }\n\n    if (!this.booking.catering.length) {\n      const notes = this.booking.notes.filter(note => note.type !== 'catering');\n\n      this.form.get('notes').setValue(notes);\n    }\n  }\n\n  /** Open modal for adding equipment requirements to booking */\n  private openEquipmentDetailsModal() {\n    const equipment_ref = this._dialog.open<RequirementDetailsModalComponent,\n      RequirementDetailsModalData>(RequirementDetailsModalComponent, {\n      maxWidth: '95vw',\n      width: '32em',\n      data: {\n        spaces: this.form.controls.space_list.value,\n        notes_field: this.form.controls.notes,\n        codes_field: this.form.controls.equipment_codes,\n        head_counts_field: this.form.controls.expected_attendees\n      }\n    });\n    this.subscription(\n      'equipments_modal_events',\n      equipment_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n        /* istanbul ignore else */\n        if (event.reason === 'done') {\n          this.toNextFlowStep({\n            type: 'next',\n            step: 'search',\n            metadata: {ref: 'equipment'}\n          });\n          equipment_ref.close();\n        }\n      })\n    );\n    equipment_ref.afterClosed().subscribe(() => this.unsub('equipments_modal_events'));\n  }\n\n  /** Open modal for adding equipment requirements to booking */\n  private openCateringDetailsModal() {\n    const catering_ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n      CateringDetailsModalComponent,\n      {\n        maxWidth: '95vw',\n        width: '32em',\n        data: {\n          spaces: this.form.controls.space_list.value,\n          notes_field: this.form.controls.notes,\n          catering: this.form.controls.catering,\n          booking: this.booking\n        }\n      }\n    );\n    this.subscription(\n      'catering_modal_events',\n      catering_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n        /* istanbul ignore else */\n        if (event.reason === 'done') {\n          this.toNextFlowStep({\n            type: 'next',\n            step: 'catering',\n            metadata: { ref: 'details' }\n          });\n          catering_ref.close();\n        }\n      })\n    );\n    catering_ref.afterClosed().subscribe(() => this.unsub('catering_modal_events'));\n  }\n\n  /*\n    Open overriding changes modal\n  */\n  private overrideChanges() {\n    const ref = this._dialog.open<OverrideChangesModalComponent>(OverrideChangesModalComponent, {\n        width: '576px',\n        data: {\n          edits: this.booking.occurrence_edits,\n          timezone: this.booking.timezone\n        }\n    });\n    ref.componentInstance.event.subscribe(event => {\n      if (event.reason === 'done') {\n        this.toNextFlowStep({\n          type: 'next',\n          step: 'search',\n        });\n        ref.close();\n      } else if (event.reason === 'close') {\n        ref.close();\n      }\n    });\n  }\n\n  /**\n   * Open modal to confirm the booking details\n   */\n  private confirmBooking() {\n    /* Clear recurrence validator if only catering is being edited */\n    if(this.only_catering){\n      this.clearRecurrenceValidators()\n    }\n\n    /* istanbul ignore else */\n    if (this.form.valid || this.only_catering) {\n      const formValues = this.form.value;\n      // this.booking is the booking being edited, not much to it on a new booking\n      // having an empty booking is used in determining changes I assume.\n      const startDateTz = this.form.controls.dateTz.value\n      const endDateTz = startDateTz.addValue({ minutes: formValues.duration })\n      const booking = {\n        ...(\n          this._data.action === BookingAction.CLONE || this._data.action === BookingAction.EDIT || this._data.only_catering ? this.sanitizeBookingFromCloning(this.booking) : this.booking.toJSON()),\n        ...(\n          this._data.action === BookingAction.CLONE || this._data.action === BookingAction.EDIT  || this._data.only_catering ? this.sanitizeBookingFromCloning(formValues) : formValues),\n        startDateTz,\n        endDateTz,\n        start_epoch: startDateTz.seconds,\n        end_epoch: endDateTz.seconds,\n        room: formValues.space_list[0],\n      };\n\n      const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n        width: '32em',\n        maxWidth: '95vw',\n        maxHeight: '95vh',\n        data: {\n          old_booking: this.booking,\n          booking: new Booking(booking),\n          action: this._data.action\n        },\n        autoFocus: false,\n        backdropClass: 'mck-modal-backdrop',\n      });\n      dialog_ref.componentInstance.event.subscribe(event => {\n        /* istanbul ignore else */\n        if (event.reason === 'done') {\n          this.close();\n          this.event.emit({ reason: 'done', metadata: this.form});\n        } else if (event.reason === 'action') {\n          this.resetForm();\n        }\n        else if(event.reason === 'last-moment-conflict') {\n          this.form.patchValue({space_list: []}, {emitEvent: true});\n          // this.handleFlowEvent({ type: 'reset', step: 'search' })\n          dialog_ref.close();\n        }\n      });\n    }\n  }\n\n  private sanitizeBookingFromCloning(booking: Booking | Object): Object {\n    const obj = booking instanceof Booking ? booking.toJSON() : booking;\n    return {...Object.keys(obj).reduce((acc, key) => {\n          if(\n            key.search(/^recurrence_/) === -1\n            && key.search(/^occurrence_/) === -1\n          ) {\n            acc[key] = obj[key]\n          };\n\n          return acc;\n      }, {}),\n      is_recurrent: false\n    }\n  }\n\n  /** Open modal for adding equipment requirements to booking */\n  private openRecurrenceConflictsModal() {\n    const recurr_ref = this._dialog.open<ConflictsModalComponent,\n      ConflictsModalComponentData>(ConflictsModalComponent, {\n      maxWidth: '95vw',\n      width: '32em',\n      data: {\n        room_name: this.form.controls.space_list.value[0].name,\n        conflicts: this.form.controls.recurrence_exceptions.value,\n        timezone: this.booking.timezone\n      }\n    });\n    this.subscription(\n      'conflicts_modal_events',\n      recurr_ref.componentInstance.event.subscribe((event: DialogEvent) => {\n        if(this.booking.occurrence_edits && this.booking.occurrence_edits.length && event.reason === 'done') {\n          this.toNextFlowStep({\n            type: 'next',\n            step: 'changes',\n          });\n        } else {\n          /* istanbul ignore else */\n          if (event.reason === 'done') {\n            this.toNextFlowStep({\n              type: 'next',\n              step: 'search',\n            });\n          }\n        }\n        recurr_ref.close();\n      })\n    );\n    recurr_ref.afterClosed().subscribe(() => this.unsub('conflicts_modal_events'));\n  }\n\n  public get title(){\n    const type = this.booking?.id ? 'Edit' : 'New'\n    return `${type} ${this.edit_recurrence ? 'recurring' : ''} booking`\n  }\n\n   private clearRecurrenceValidators() {\n      const recurrenceStarts = this.form.controls.recurrence_starts\n      recurrenceStarts.clearValidators()\n      recurrenceStarts.updateValueAndValidity()\n  }\n}\n","<header>\n    <div class=\"heading\">\n        <app-icon *ngIf=\"edit_recurrence\" [icon]=\"{ class: 'material-icons', content: 'autorenew' }\"></app-icon>\n        {{ modalTitle }}\n    </div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    [isCloning]=\"iscloning\"\n                    [booking]=\"booking\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from '@mckinsey-converge/data-common';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\n\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking  */\n    @Input() public form: FormGroup; // R-- maybe add booking timezone has hidden form field since the date timestamp is from here\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get dateTz(): DateTZ {\n        const now = DateNow(new Date())\n        return this.form && this.form.controls.dateTz\n            ? this.form.controls.dateTz.value\n            : now.startOfValue('minute');\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({\n            booking_timezone: this.dateTz.building_tz,\n        });\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        // active_order = null\n        if (!order) {\n            this.active_order = null;\n        }\n        /* istanbul ignore else */\n        if (order) {\n            let orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            // Tack on or replace the order\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            // Sort by delivery_time\n            orders = orders.sort((a,b) => {\n                if ( a.delivery_time < b.delivery_time) {\n                    return -1;\n                }\n                if ( a.delivery_time < b.delivery_time) {\n                    return 1;\n                }\n                return 0\n            });\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"dateTz\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [dateTz]=\"dateTz\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"handleOrderEvent($event)\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { CateringItem } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.availableItems && category.availableItems.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.availableItems\">\n        <a-catering-menu-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-menu-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { Identity, DialogEvent } from '@mckinsey-converge/base';\nimport { CateringItem } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from '@mckinsey-converge/legacy-overlays';\n\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { CateringMenuService } from '@mckinsey-converge/data-common';\nimport { BehaviorSubject } from 'rxjs';\nimport {  map } from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\ninterface StartEndResponse {\n    timezone: string, \n    start: DateTZ;\n    end: DateTZ\n}\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public dateTz: DateTZ;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n    /** Whether the search input should be shown */\n    public show_search: boolean;\n    /** Current search string for filtering */\n    public readonly search$ = new BehaviorSubject('');\n    /** List of menu items that match the search string */\n    public matched_items: CateringItem[] = [];\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    // R--- different in staff, but should it be?\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form = this.form || { controls: { location_id: { value: '' } } };\n        const form_controls = (form).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form?.controls?.items?.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /* istanbul ignore next */\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form?.controls?.delivery_time.value < 0;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            true\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n        this.subscription(\n            'search',\n            this.search$\n                .pipe(\n                    map((str) => {\n                        const search = str.toLowerCase();\n                        const items = [];\n                        for (const category of this.category_list) {\n                            if (category.items) {\n                                for (const group of category.items) {\n                                    if ((group as any).items.length) {\n                                        if (\n                                            (group as any).package &&\n                                            (group.name.toLowerCase().includes(search) ||\n                                                (group as any).items.find((item) =>\n                                                    item.name.toLowerCase().includes(search)\n                                                ))\n                                        ) {\n                                            items.push(group);\n                                        } else {\n                                            for (const item of (group as any).items) {\n                                                if (item.name.toLowerCase().includes(search)) {\n                                                    items.push(item);\n                                                }\n                                            }\n                                        }\n                                    } else {\n                                        if (group.name.toLowerCase().includes(search)) {\n                                            items.push(group);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        return items;\n                    })\n                )\n                .subscribe((items) => (this.matched_items = items))\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.dateTz || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0]?.id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public focusSearch() {\n        if (this._input_el && this.show_search) {\n            this._input_el.nativeElement.focus();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(this.dateTz.ms), // R-- different in staff\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0]?.id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0]?.id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0]?.id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                all_day: this.all_day,\n                dateTz: this.dateTz,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    // R--- add booking_date and timezone\n                    // this.order bookingDateTz is missing correct timezone.\n                    const order = new CateringOrder({ ...this.order, ...this.form.value });\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu\n            .query({ zone_id: this._org.buildings.find((bld) => space.zones.includes(bld.id))?.id })\n            .then(\n                (list) => {\n                    this.loading = false;\n                    this.category_list = list\n                        .map((i) => new CateringCategory(i))\n                        .filter(c => !c.out_of_stock);\n                },\n                () => (this.loading = false)\n            );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        let { timezone, start, end } = this.generateStartAndEndTimes();\n        start = start.setValue({ minute: Math.ceil(start.minutes / 5) * 5 });\n        // will be different from staff in these commonly named methods.\n        // R--- Form Controls TBD\n        // R--- The timezone here doesn't seem legit, back to putting into a form hidden field\n        let start_date = this.dateTz; // new DateTZ({ date: this.date, building_tz: timezone, is_local_tz: false});\n        start_date.logDateTz('start date')\n        this.available_times = [];\n        while (start.isBeforeDate(end)) {\n            this.available_times.push({\n                id: Math.abs(start_date.dateDiff(start, 'minutes')),\n                name: start.formatDate('h:mma').toLocaleLowerCase(),\n            });\n            start = start.addValue({ minutes : 5});\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): StartEndResponse {\n        const now = DateNow(new Date())\n        let timezone = now.local_tz;\n        const space_email = this.space_list[0]?.email;\n        let catering_hours = { start: 7, end: 20 };\n        // R--- change date input to dateTz input.\n        // R--- Same issue as the above generateAvailableTimes\n        const date_ = this.dateTz; // new DateTZ({date: this.date, building_tz: timezone, is_local_tz: false})\n        let building_time = date_.startOfValue('day');\n        let cat_start_time = building_time.addValue({ hours: catering_hours.start });\n        let cat_end_time = building_time.addValue({ hours: catering_hours.end });\n\n        if (space_email) {\n            // Fetch the Space and Building\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => space?.zones.includes(bld.id));\n            if (building?.timezone) {\n                // Update to the building timezone if defined.\n                timezone = building.timezone;\n                building_time = date_.toZone(timezone).startOfValue('day');\n            }\n            if (building?.catering_hours) {\n                // Update to the building catering hours if defined.\n                catering_hours = building?.catering_hours;\n            }\n            // Update the hours with the currently defined timezone.\n            cat_start_time = building_time.addValue({ hours: catering_hours.start });\n            cat_end_time = building_time.addValue({ hours: catering_hours.end });\n        }\n\n        // Start Time of the Booking\n        let start = date_.toZone(timezone);\n        let end = date_.toZone(timezone).addValue({ minutes: this.duration });\n\n        // Do the booking start and end time coincide with the catering hours?\n        if (start.isBeforeDate(cat_start_time)) {\n            // booking start before catering opens'\n            if (cat_end_time.isAfterDate(start)) {\n                // catering closes after booking starts'\n                start = cat_start_time.addValue({});\n            } else {\n                // were just closed, catering closes before booking start'\n                start = cat_end_time.addValue({});\n                end = cat_end_time.addValue({});\n                return { timezone, start, end };\n            }\n        } else {\n            // booking starts after catering is open'\n            if (cat_end_time.isBeforeDate(start)) {\n                // were just closed, catering closed before booking start'\n                start = cat_end_time.addValue({});\n                end = cat_end_time.addValue({});\n                return { timezone, start, end };\n            }\n        }\n\n        if (end.isBeforeDate(cat_end_time)) {\n            // booking ends before catering closes'\n            \n            if (cat_start_time.isAfterDate(end)) {\n                // were just closed, catering opens is after booking ends'\n                start = cat_start_time.addValue({});\n                end = cat_start_time.addValue({});\n                return { timezone, start, end };\n            }\n        } else {\n            // booking ends after catering closes'\n            // set the booking end to the catering close time.'\n            end = cat_end_time.addValue({});\n        }\n\n        return { timezone, start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.local_name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"search\" [class.min]=\"hide_details\">\n                <button\n                    mat-icon-button\n                    [disabled]=\"!can_order\"\n                    (click)=\"\n                        show_search = !show_search;\n                        !show_search ? search$.next('') : '';\n                        focusSearch()\n                    \"\n                >\n                    <app-icon\n                        [icon]=\"{\n                            class: 'material-icons',\n                            content: show_search ? 'close' : 'search'\n                        }\"\n                    ></app-icon>\n                </button>\n                <div class=\"search-input\" [class.show]=\"show_search || compact\">\n                    <div class=\"input\">\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                #input\n                                matInput\n                                [ngModel]=\"search$ | async\"\n                                (ngModelChange)=\"search$.next($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Search for items...\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" [class.is-search]=\"search$ | async\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"search$ | async; else menu\">\n            <div class=\"item\" *ngFor=\"let item of matched_items\">\n                <a-catering-menu-item\n                    [compact]=\"compact\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    [symbol]=\"symbol\"\n                    [item]=\"item\"\n                    [field]=\"form.controls.items\"\n                ></a-catering-menu-item>\n            </div>\n        </ng-container>\n        <ng-template #menu>\n            <ng-container *ngIf=\"!active_category; else category_display\">\n                <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                    <button\n                        mat-button\n                        class=\"category\"\n                        *ngFor=\"let item of category_list\"\n                        [style.background-image]=\"'url(' + item.image_path + ')'\"\n                        [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                        (click)=\"active_category = item\"\n                    >\n                        <div class=\"overlay\"></div>\n                        <div class=\"name\">{{ item.name }}</div>\n                    </button>\n                </div>\n            </ng-container>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            name=\"previous\"\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"next\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent implements OnInit {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public room: Space;\n\n    public ngOnInit(): void {\n        this.room = (this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n\n    public get space_in_booking(): boolean {\n        return !!this.room;\n    }\n\n    /** Space selected for delivery */\n    public get local_space_name(): string {\n        return this.room?.local_name || '<No Location>';\n    }\n\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        return this.order.bookingDateTz.addValue({ minutes: this.order.delivery_time || 0}).formatDate('h:mma').toLocaleLowerCase();\n    }\n\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ local_space_name }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        (click)=\"edit.emit()\"\n    >\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: 'edit' }\"\n    ></app-icon>\n</button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent implements OnInit{\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    public ngOnInit(): void {\n        if(this.space_list && this.space_list.length) {\n            this.catering.value.forEach(catering => {\n                catering.location = this.space_list[0].name; \n                catering.location_id = this.space_list[0].email;\n                catering.bookingDateTz = this.date;\n            });\n        }\n    }\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        return this.catering.value;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { unique } from '@mckinsey-converge/base';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@mckinsey-converge/animations';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { HashMap } from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Preselected buildings */\n    @Input() public initBuildings: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    public get date_() {\n        // R--- another instance, can the form control date be TZ aware\n        return new DateTZ({date: this.date.value}) \n    }\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const now = DateNow(new Date())\n        return now.isSameDate(this.date_, 'day');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        // R--- needs to be TZ aware because of day is relative\n        return this.is_today ? 'Today' : this.date_.formatDate('dd MMM yyyy');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = this.date_.addValue({ 'days': amount });\n        const now_ = DateNow(new Date())\n        const now = now_.startOfValue('minute');\n        if (date.isBeforeDate(now)) {\n            date = now;\n        }\n        this.date.setValue(date.ms);\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n            if (Array.isArray(this.initBuildings)) {\n                this.locations = unique(this.initBuildings);\n            }        \n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit([...this.locations]);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\" xPosition=\"before\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n    take,\n    withLatestFrom,\n} from 'rxjs/operators';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService, Booking, BookingAction, BookingStateService, ISpaceAvailabilityOptions, mapBuildingToSelectOption, mapCityToAllSelectOption, SeriesAction, toggleSelectedByGroup } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { randomInt } from '@mckinsey-converge/base';;\nimport { DateTZ } from '@mckinsey-converge/date-tz';\nimport { SelectOption } from '@mckinsey-converge/ui';\n\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss'],\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n\n    @Input() public isCloning: SeriesAction | BookingAction | null;\n\n    @Input() public booking: Booking;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string | string[]>();\n\n    public searchQuery: string = '';\n\n    public formGroup = new FormGroup({\n        location: new FormControl([]),\n    });\n\n    public options = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public selectedOptions = new BehaviorSubject<SelectOption<any>[]>([]);\n\n    public savedSelection = [];\n\n    public selectedSpace: Array<Space & { unavailable?: boolean }> = [];\n\n    public oldSpace = [];\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    public get has_valid_space() {\n        return this.spaces?.value?.some(_ => _.id && _.bookable);\n    }\n\n    public get initialBuildingIds(): string[] {\n        return this._org.building ? [this._org.building.id] : [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _booking_state: BookingStateService,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((bld = []) => {\n                    this.loading = true;\n                    request_id = randomInt(9999_9999);\n                    const dateTz = this.form.controls.dateTz.value;\n\n                    const ignore = this.form.controls.action?.value === SeriesAction.EDIT ? this.form.controls.id.value : null\n\n                    // R--- need to pass on the all day param and let libs/data-common/src/lib/spaces/spaces.service.ts \n                    // availability do the math.\n                    let query: ISpaceAvailabilityOptions = {\n                        dateTz: this.form.controls.all_day.value\n                        ? dateTz.startOfValue('day').startOfValue('minute').startOfValue('second')\n                        : dateTz.startOfValue('minute').startOfValue('second'),\n                        duration: this.form.controls.all_day.value\n                            ? 24 * 60\n                            : this.form.controls.duration.value,\n                        zone_ids: bld.length ? bld : this._org.building.id,\n                        bookable: true,\n                        recurrence_count: this.form.controls.recurrence_count.value,\n                        recurrence_period: this.form.controls.recurrence_period.value,\n                        recurrence_endTz: this.form.controls.recurrence_endTz.value,\n                        recurrence_interval: this.form.controls.recurrence_interval.value,\n                        recurrence_starts: this.form.controls.recurrence_starts.value,\n                        is_recurrent: this.form.controls.is_recurrent.value,\n                        recurrence_days: this.form.controls.recurrence_days.value,\n                        ignore\n                    };\n\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    const id = request_id;\n                    return this._spaces.available(query).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [], error: _})),\n                map((resp: { id: number, list: Space[]}) => {\n                    this.loading = false;\n                    return resp.id === request_id ? resp.list : this.space_list;\n                })\n            );\n\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.space_list = list.filter((space) => {\n                        if (!space.available && !this.form.controls.action?.value) {\n                            return false;\n                        }\n\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    }).filter(space => space.available);\n\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                    if(!this.selectedOptions.value.length){\n                        this.setDefaultBuilding()\n                    }\n                    this.space_list.map((space)=>{\n                        if(space.id === this.spaces.value[0]?.id){\n                            this.spaces.setValue([space])\n                            const spaceConflicts = space.recurrence_availability.filter(recurr => !recurr.available);\n                            this.form.controls.recurrence_exceptions.setValue(spaceConflicts.map((recurr)=> recurr.date))\n                        }\n                    })\n\n                    if (\n                        this.isCloning === BookingAction.CLONE\n                        || this.isCloning === SeriesAction.CLONE\n                    ) {\n\n                        const space = this.space_list.find(space => space.id === this.booking.room.id);\n                        const bookable = space !== undefined;\n                        this.space_list = bookable && this.space_list.filter(space => space.id !== this.booking.room.id) || this.space_list;\n\n                        const original_space = new Space({\n                            ...this.booking.room,\n                            ...(space || {\n                                settings: {\n                                    ...this.booking.room.settings,\n                                    recurrence_availability: []\n                                }\n                            } as any),\n                            bookable\n                        });\n\n                        this.oldSpace = [original_space];\n                        this.spaces.value.some(space => space.id === original_space.id) && this.spaces.setValue([original_space]);\n                        this.selectedSpace.push(original_space);\n                    }\n\n                    if(this.form.controls.is_recurrent.value){\n                        this.sortByRecurrenceAvailability();\n                    }\n\n                    const booking_space_list = this.form.controls.space_list.value\n                    if(booking_space_list.length !== 0){\n                        this.spaces.setValue(booking_space_list)\n                    }\n                })\n            );\n            \n            this.change$.next('');\n        });\n\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            const city = this._org.building.city\n            const timezone = this._org.building.timezone\n            const grouped_by_city = {\n                key: {name: city, timezone},\n                value: bld_list?.filter((bld)=> bld.city === city) || []\n            }\n            const city_buildings = grouped_by_city.value.map(\n                (bld)=>mapBuildingToSelectOption(grouped_by_city.key.name, bld)\n            )\n            const buildings  = [\n                mapCityToAllSelectOption(grouped_by_city.key),\n                ...city_buildings\n            ] \n            this.options.next(buildings)\n        }));\n        \n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = (_) => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.dateTz) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.dateTz.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        const list = this.spaces.value;\n        if (list.find((item) => item.id === space.id)) {\n            this.spaces.setValue(list.filter((item) => item.id !== space.id));\n        } else {\n            this.spaces.setValue([space]);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        if(this.form.controls.is_recurrent.value && \n            this.form.controls.recurrence_exceptions.value.length){\n            const id = this.form.controls.id.value\n            if(id && this.form.controls.action?.value === 'edit'){ \n                this.handleEditConflicts(id)\n            }else{\n                this.event.emit({ type: 'next', step: 'recurrence' });\n            }          \n        }else{\n            if(this.booking && this.booking.occurrence_edits && this.booking.occurrence_edits.length) {\n                this.event.emit({ type: 'next', step: 'changes' });\n            } \n            else {\n                this.event.emit({ type: 'next', step: 'search' });\n            }\n        }\n        \n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    public sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find((bld) => space_a.zones.includes(bld.id));\n        const bld_b = this._org.buildings.find((bld) => space_b.zones.includes(bld.id));\n        if (bld && bld !== bld_b) {\n            return bld.name.localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return space_a.name.localeCompare(space_b.name);\n    }\n\n    public sortByRecurrenceAvailability() {\n        this.space_list.sort((a, b)=>{\n            const a_availability = (a.recurrence_availability?.filter(recurr => recurr.available)?.length*100)/a.recurrence_availability.length\n            const b_availability = (b.recurrence_availability?.filter(recurr => recurr.available)?.length*100)/b.recurrence_availability.length\n            return b_availability - a_availability\n        })\n    }\n    public toggle(option: SelectOption<any>) {\n        // update the selected value\n        this.selectedOptions.pipe(\n            take(1),\n            withLatestFrom(this.options),\n            map(([selectedOptions, options]) => {\n                return toggleSelectedByGroup(options, selectedOptions, option);\n            })\n        ).subscribe(next => {\n            const formData = this.formGroup.value;\n            this.formGroup.setValue({\n                location: formData.location,\n            });\n            this.selectedOptions.next(next);\n            this.savedSelection = next.map((bld)=>bld.value)     \n            \n        });\n    }\n\n    public setDefaultBuilding(){\n        const defaultBld = this.options.value.filter(opt => opt.value === this._org.building.id)\n        this.selectedOptions.next(defaultBld)\n    }\n\n    public clearList(){\n        this.space_list = []\n        this.savedSelection = []\n    }\n\n    public triggerSearch = () =>{\n        if(this.savedSelection.length){\n            this.change$.next(this.savedSelection)\n        }else{\n            this.space_list = []\n        }\n    }\n\n    public handleEditConflicts = (id: string) =>{\n        /** When editing, compare exceptions with the original ocurrence list */\n        const recurrence_exceptions = this.form.controls.recurrence_exceptions;\n        let occurrences_org: Array<number>\n        let booking_org: Booking;\n\n        this._booking_state.bookings.subscribe(bookings => {\n            booking_org = bookings.filter((booking) => booking.id === id)[0]\n            occurrences_org = booking_org.occurrence_details.map((ocurr)=>\n                ocurr.start_epoch\n            )\n        })\n\n        const { hours, minutes } = new DateTZ({ date: booking_org.start_epoch * 1000, is_local_tz: false, building_tz: booking_org.timezone});\n        const { hours: to_hours, minutes: to_minutes } = this.form.controls.dateTz.value;\n        const new_conflicts = hours === to_hours && minutes === to_minutes\n            ? recurrence_exceptions.value.filter((date: number)=> occurrences_org.includes(date))\n            : recurrence_exceptions.value.filter((date: number)=> !occurrences_org.includes(date));\n\n        if(new_conflicts.length){\n            recurrence_exceptions.setValue([...new_conflicts])\n            this.event.emit({ type: 'next', step: 'recurrence' });\n        }else{\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    // Create a computed property to filter spaces based on the search query\n    get filteredSpaces() {\n        if (!this.space_list) {\n            return [];\n        }\n\n        // Filter spaces based on the searchQuery\n        return this.space_list.filter((space) => {\n            let spaceName = space.simple_name || space.settings?.room_name || space.local_name;\n            return spaceName.toLowerCase().includes(this.searchQuery.toLowerCase());\n        });\n    }\n\n}\n","<div class=\"find-space\" [formGroup]=\"formGroup\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <mck-autocomplete-chip-select-item\n        errorMessage=\"Location and office must be selected\"\n        label=\"Location and office\"\n        [required]=\"true\"\n        [selectOnlyOneGroup]=\"true\"\n        placeHolder=\"Start typing to filter location or office...\"\n        formControlName=\"location\"\n        [options]=\"options\"\n        [selectedOptions]=\"selectedOptions\"\n        (optionSelected)=\"toggle($event)\"\n        [displayCTA]=\"true\"\n        (chipsCleared)=\"clearList()\"\n        [useCTAs]=\"true\"\n        (onClickConfirm)=\"triggerSearch()\"\n    ></mck-autocomplete-chip-select-item>\n    <div class=\"room-search-wrapper\">\n        <input type=\"text\" placeholder=\"Search rooms by name\" [(ngModel)]=\"searchQuery\" [ngModelOptions]=\"{standalone: true}\"\n        class=\"mat-input-element search-rooms\" />    \n    </div>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n            minBufferPx=\"900\" maxBufferPx=\"1200\"\n        >\n            <div *ngIf=\"isCloning\">\n                <h3>Original Selection</h3>\n    \n                <div *ngFor=\"let space of selectedSpace\">\n                    <a-booking-space-item\n                        [form]=\"form\"\n                        [space]=\"space\"\n                        [multi]=\"multiple\"\n                        [isCloning]=\"isCloning\"\n                        (select)=\"selectSpace(space)\"\n                    ></a-booking-space-item>\n                </div>\n            </div>\n\n\n            <h3 *ngIf=\"isCloning\">All Available Rooms</h3>\n            <ng-container *cdkVirtualFor=\"let space of filteredSpaces\">\n                <a-booking-space-item [form]=\"form\" [space]=\"space\" [multi]=\"multiple\" [isCloning]=\"isCloning\"\n                    (select)=\"selectSpace(space)\"></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                [disabled]=\"loading\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!has_valid_space || loading\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No results available, please select another office\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingAction, SeriesAction, Space } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n\n    @Input() isCloning: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n\n        return (this.form.controls.space_list && !!(this.form.controls.space_list.value || []).find((space) => space.id === this.space.id));\n    }\n\n    public get is_hidden(): boolean {\n        return false;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        return false;\n    }\n\n    public get availableOccurrences(): number {\n        if(this.space && this.space.recurrence_availability) {\n            return this.space.recurrence_availability.filter(recurr => recurr.available).length;\n        }\n    }\n\n    public get totalOccurrences(): number {\n        return this.space.recurrence_availability.length;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if(this.form.controls.is_recurrent.value){\n            const spaceConflicts = this.space.recurrence_availability.filter(recurr => !recurr.available);\n            this.form.controls.recurrence_exceptions.setValue(spaceConflicts.map((recurr)=> recurr.date))\n        }\n        this.select.emit();\n    }\n\n    public disableSelect(): boolean {\n        if (\n            this.form.controls.action.value === SeriesAction.CLONE\n            && this.availableOccurrences === 0\n        ) {\n            return true;\n        }\n\n        if (\n            this.form.controls.action.value === BookingAction.CLONE\n            && (this.space as any).bookable === false\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.local_name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info occurrence_availability\"\n            [class.warning]=\"availableOccurrences === 0\"\n            *ngIf=\"this.form.controls.is_recurrent.value && space.recurrence_availability\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for {{ availableOccurrences }} out of {{ totalOccurrences }} occurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [disabled]=\"disableSelect()\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { setRecurrenceStartsTime } from '@mckinsey-converge/data-common';\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        if(this.form.controls?.is_recurrent?.value){\n            setRecurrenceStartsTime(this.form)\n        }\n\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button\n                mat-button\n                type=\"button\"\n                name=\"return\"\n                *ngIf=\"can_return\"\n                class=\"inverse\"\n                (click)=\"previous()\"\n                i18n=\"Booking form cancel action\"\n            >\n                Back\n            </button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">\n                Next\n            </button>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedContentModule } from '../shared/shared.module';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { UiModule } from '@mckinsey-converge/ui';\n\n\n@NgModule({\n    declarations: [\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        BookingModalComponent,\n        BookingCateringOrderDetailsComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        DeleteConfirmModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LegacyOverlaysModule,\n        UiModule\n    ],\n    exports: [\n        BookingCateringOrderDetailsComponent\n    ]\n})\nexport class BookingsModule {\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from '@mckinsey-converge/base';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleting meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { PrivateDetailsModalComponent } from './meeting-details-modal/private-details-modal/private-details-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedContentModule } from '../shared/shared.module';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingRecurringDetailsDisplayComponent } from './meeting-details-modal/recurring-details/recurring-details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n\n@NgModule({\n    declarations: [\n        MeetingDetailsModalComponent,\n        PrivateDetailsModalComponent,\n        MeetingDetailsDisplayComponent,\n        MeetingRecurringDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LegacyOverlaysModule,\n        ScrollingModule\n    ],\n    exports: []\n})\nexport class CalendarModule {\n}\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { first, map, take, takeWhile } from 'rxjs/operators';\n\nimport { Booking, BookingsPaginatedService, BookingsService, OrganisationService, User } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { UserStoreState, selectCurrentUser } from '@mckinsey-converge/user';\nimport { Store } from '@ngrx/store';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport { getListOfDateFormat, formatDateWithSuffix } from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n@Component({\n\tselector: 'day-view-approvals-view',\n\ttemplateUrl: './approvals-view.component.html',\n\tstyleUrls: ['./approvals-view.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnDestroy {\n\t/** List of spaces to check for pending approvals */\n\t// public space_list: string[] = [];\n\t/** Whether the pending bookings are being loaded */\n\tpublic loading: boolean = true;\n\t/** Whether an event action is in progress */\n\t// public waiting_on_event: boolean;\n\t/** Observable for tentative events */\n\n\tpublic inputText: string = '';\n\n\tpublic incommingRequests: Booking[] = [];\n\tpublic sortOrderByOptions: { display: string; value: string; meta: {}; }[];\n\tpublic selectedSort: { display: string; value: string; meta: {}; } = { display: 'Soonest booking', value: 'Soonest booking', meta: {} };\n\n\tpublic isClosed: boolean = false;\n\tpublic updatedRequest: Booking[] = [];\n\n\t/** Display value for the active date */\n\t// public get date_display(): string {\n\t// \treturn 'Today';\n\t// }\n\n\tpublic currentUser: User;\n\n\tconstructor(\n\t\tprivate _org: OrganisationService,\n\t\tprivate _bookings_service: BookingsPaginatedService,\n\t\tprivate store: Store<UserStoreState>,\n\t\tprivate _bookings: BookingsService,\n\t\tprivate _zone: NgZone,\n\t\tprivate cdRef: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.subscription('currentUser', this.store.select(selectCurrentUser)\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe((user: User) => {\n\t\t\t\t// Once we know we have the user loaded\n\t\t\t\tthis.currentUser = new User(user);\n\t\t\t\tthis.getHoldingBay();\n\t\t\t})\n\t\t);\n\n\t\tthis.subscription(\n\t\t\t'building',\n\t\t\tthis._org.listen('active_building').subscribe((_) => this.currentUser && this.getHoldingBay() )\n\t\t);\n\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tthis.interval('holdingBay', () => {\n\t\t\t\t// update every 30 seconds.\n\t\t\t\tthis.getHoldingBay();\n\t\t\t}, 30 * 1000);\n\t\t});\n\n\t\tthis.sortOrderByOptions = [\n\t\t\t{ display: 'Soonest booking', value: 'soonest', meta: {} },\n\t\t\t{ display: 'Latest booking', value: 'latest', meta: {} },\n\t\t\t{ display: 'Newest request creation date', value: 'newest_date', meta: {} },\n\t\t\t{ display: 'Oldest request creation date', value: 'oldest_date', meta: {} }\n\t\t];\n\n\t\tthis.selectedSort = { display: 'Soonest booking', value: 'Soonest booking', meta: {} };\n\t}\n\n\tpublic getHoldingBay() {\n\t\tif (!this._org.building || !this.currentUser) {\n\t\t\treturn;\n\t\t}\n\n\t\t\n\n\t\tthis.subscription('holdingBay', this._bookings_service.getHoldingBay(\n\t\t\t{\n\t\t\t\t'email': this.currentUser.email,\n\t\t\t\t'building_zone': this._org.building.id,\n\t\t\t}\n\t\t\t).subscribe((res) => {\n\t\t\t// this.incommingRequests = cloneDeep(res.results); // [...res.results];\n\t\t\tlet expiredBkngs = [];\n\t\t\tconst pendingBkngs = res.results?.filter(bkng => (bkng.timeBasedStatusLabel !== 'expired_yesterday') ? true : !expiredBkngs.push(bkng) ) || [];\n\t\t\texpiredBkngs.length && this.declineExpiredBookings(expiredBkngs);\n\t\t\t\n\t\t\t this.updatedRequest = cloneDeep(pendingBkngs);\n\t\t\t//  const request = cloneDeep(this.updatedRequest);\n\t\t\t this.searchRequest();\n\t\t\t// this.applyOrderBy(request);\n\t\t\tthis.loading = false;\n\t\t\tthis.cdRef.detectChanges();\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.incommingRequests = [];\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t})\n\t\t);\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * Track by function for ngFor optimisation\n\t * @param index Index of the item\n\t * @param item Data associated with the item at the given index\n\t */\n\tpublic trackByFn(index: number, item: Booking) {\n\t\treturn item.id || index;\n\t}\n\n\t/**\n\t * store selected border by sorting method and apply to \n\t * @param sortingValue \n\t */\n\tpublic selectOrderBy(sortingValue: { display: string; value: string; meta: {}; }) {\n\t\tthis.selectedSort = sortingValue;\n\t\t// this.applyOrderBy(this.incommingRequests);\n\t\tthis.searchRequest();\n\t}\n\n\t/**\n\t * Function apply order by sorting method to incomming requests for approval\n\t * @param requests \n\t */\n\tpublic applyOrderBy(requests: Booking[]): void {\n\t\tconst items = cloneDeep(requests);\n\t\tswitch (this.selectedSort.value) {\n\t\t\tcase 'soonest':\n\t\t\t\titems.sort((a, b) => a.start_epoch - b.start_epoch );\n\t\t\t\tbreak;\n\t\t\tcase 'latest':\n\t\t\t\titems.sort((a, b) => b.start_epoch - a.start_epoch );\n\t\t\t\tbreak\n\t\t\tcase 'newest_date':\n\t\t\t\titems.sort((a, b) => b.created_epoch - a.created_epoch )\n\t\t\t\tbreak;\n\t\t\tcase 'oldest_date':\n\t\t\t\titems.sort((a, b) => a.created_epoch - b.created_epoch )\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\titems.sort((a, b) => a.start_epoch - b.start_epoch );\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.incommingRequests = items;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic totalCateringItems(booking: Booking) {\n\t\tlet num = 0;\n\t\tbooking.catering.forEach(el =>  el?.items.forEach(item => num += item.amount ) );\n\t\treturn num;\n\t}\n\n\tpublic searchRequest(value?: string) {\n\t\t// console.log(value);\n\t\tconst searchText = this.inputText.toLowerCase();\n\t\t\n\t\t\tconst filtered  = this.updatedRequest.filter( (el) => {\n\t\t\tconst { room, organiser, booked_by, booker, booking_type, attendees, date_string, startDateTz, start_time, end_time, creationDateTz } = el;\n\n\t\t\treturn room?.name?.toLowerCase().includes(searchText) ||            /// input text inlcudes room name\n\t\t\t\troom?.local_name?.toLowerCase().includes(searchText) ||            /// input text inlcudes room local name\n\t\t\t\troom?.street_and_city?.toLowerCase().includes(searchText) ||       /// input text inlcudes room address\n\t\t\t\troom?.building?.address?.toLowerCase().includes(searchText) ||     /// input text inlcudes room address\n\t\t\t\troom?.level.name?.toLowerCase().includes(searchText) ||              /// input text inlcudes room level\n\n\t\t\t\torganiser?.name?.toLowerCase().includes(searchText) ||               ///input text inlcudes host name\n\t\t\t\t(booked_by && booked_by['name']?.toLowerCase().includes(searchText)) ||             ///input text inlcudes booked by name\n\t\t\t\t(booker && booker['name']?.toLowerCase().includes(searchText)) ||                ///input text inlcudes booker name\n\t\t\t\tbooking_type?.toLowerCase().includes(searchText)\t||\n\t\t\t\tattendees?.some(att => att?.name?.toLowerCase().includes(searchText)) ||  ///input text inlcudes attendees name\n\n\t\t\t\tdate_string?.toLowerCase().includes(searchText) ||                         /// date_string == '06 Mar 2023'\n\t\t\t\tformatDateWithSuffix(date_string).toLowerCase().includes(searchText) ||      /// date_string == '06th Mar 2023'  \n\t\t\t\tformatDateWithSuffix(creationDateTz.formatDate('dd MMM yyyy')).toLowerCase().includes(searchText) ||      /// date_string == '06th Mar 2023'              \n\t\t\t\t//searchText.includes(startDateTz?.date?.day?.toString()) ||   /// day 06/6\n\t\t\t\t//searchText.includes(startDateTz?.date?.monthLong) ||         /// monthLong == 'March'\n\t\t\t\t//searchText.includes(startDateTz?.date?.monthShort) ||        /// monthShort == 'Mar'\n\t\t\t\tsearchText.includes(startDateTz?.date?.weekdayLong.toLowerCase()) ||       /// weekdayLong == 'Monday'\n\t\t\t\tsearchText.includes(startDateTz?.date?.weekdayShort.toLowerCase()) ||        /// weekdayShort == 'Mon'\n\t\t\t\t\n\n\t\t\t\tgetListOfDateFormat().some(format => startDateTz?.formatDate(format).toLowerCase().includes(searchText) ) ||\n\t\t\t\tgetListOfDateFormat().some(format => creationDateTz?.formatDate(format).toLowerCase().includes(searchText) ) ||\n\n\t\t\t\tstart_time?.toLowerCase().includes(searchText) ||\n\t\t\t\tend_time?.toLowerCase().includes(searchText)\n\n\t\t\t\n\t\t\t}); \n\t\t\t\n\t\t\tthis.applyOrderBy(filtered);\n\t}\n\t\n\tpublic declineExpiredBookings(expiredBkngs: Booking[] ) {\n\t\t// console.log(expiredBkngs);\n\t\tthis._bookings.declineMultiple(expiredBkngs).subscribe(resArray => this.cdRef.detectChanges(),\n\t\t(error) => {\n\t\t\tconsole.log(error);\n\t\t\tthis.cdRef.detectChanges();\n\t\t});\n\n\t}\n\n}\n","<div class=\"approvals-view\">\n    <div class=\"flex-column head\" >\n        <div  class=\"holding-bay-search flex-row\" matRipple >\n            <input type=\"text\" matInput [(ngModel)]=\"inputText\" (keyup)=\"searchRequest(inputText)\"\n\t\t\t\t\t\t\tplaceholder=\"Type to search (level, number or name) ...\" >\n\t\t\t\t\t<button  class=\"close-button mck-short mck-short-height mck-form-input\" [hidden]=\"!inputText\">\n\t\t\t\t\t\t<div matRipple class=\"close-button-icon\" (click)=\"$event.stopPropagation(); inputText=''; searchRequest(inputText)\"></div>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"search-button mck-short mck-short-height mck-form-input\" \t>\n\t\t\t\t\t\t<div class=\"search-button-icon\"></div>\n\t\t\t\t\t</button>\n        </div>\n\n        <div [dropdownTriggerFor]=\"dropdown\" class=\"holding-bay-select flex-row\" matRipple (isPanelOpened)=\"isClosed = !isClosed\">\n            <span class=\"selecte-sort\" style=\"flex: 1 1 auto ;\">Order by: {{selectedSort.display}}</span>\n            <div class=\"mck-column select-chevron\">\n                <mck-chevron-icon [up]=\"isClosed\" matSuffix fillClass=\"mck-icon-fill-black\"></mck-chevron-icon>\n            </div>\n        </div>\n\n        <cng-select-options #dropdown ddWidth=\"382px\" >\n            <div matRipple *ngFor=\"let sorting of sortOrderByOptions\" (click)=\"selectOrderBy(sorting)\" class=\"dropdown-item flex-row\">{{sorting.display}}</div>\n        </cng-select-options>\n    </div>\n    <cdk-virtual-scroll-viewport\n        *ngIf=\"incommingRequests?.length; else empty_state\"\n        [itemSize]=\"80\"\n        appendOnly\n        orientation=\"vertical\"\n        class=\"viewport\"\n    >\n        <ng-container *cdkVirtualFor=\"let item of incommingRequests; trackBy: trackByFn\">\n            <approvals-event [event]=\"item\" [totalCateringItems]=\"totalCateringItems(item)\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n        </ng-container>\n    </cdk-virtual-scroll-viewport>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, NgZone, ChangeDetectorRef, ChangeDetectionStrategy, OnInit, ViewEncapsulation, SimpleChanges } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Booking, CateringCategory, CateringItem, SpacesService } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { ConfirmModalComponent } from '@mckinsey-converge/legacy-overlays';\nimport { MeetingDetailsModalComponent } from 'src/app/calendar/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BookingStateService, BOOKING_STATUS } from '@mckinsey-converge/data-common';\nimport {  formatDateWithSuffix } from '@mckinsey-converge/base';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n\t\t// encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective implements OnInit {\n    /** Event to display */\n    @Input() event: Booking;\n    @Input() totalCateringItems: number;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n    /* Booking type : Internal, External, Interview... */\n    public bookingType: string;\n    /* Booking date */\n    public date: string;\n    /* Booking creation date */\n    public creationDate: string;\n    /* Office address */\n    public officeAddress: string;\n\n    public showCateringNote: boolean = false;\n\n    public showEquipmentNote: boolean = false;\n\n\t\t /** Whether the meeting has catering attached */\n    public has_catering: boolean;\n    public cateringNote: string = '';\n    public equipmentNote: string = '';\n    public cateringOrderItems: number = 0;\n\n   \n    /** Type of event */\n    public get start(): string {\n        return this.event.startDateTz.formatDate('h:mm a').toLocaleLowerCase();\n    }\n\n    /** Type of event */\n    public get end(): string {\n        return this.event.endDateTz.formatDate('h:mm a').toLocaleLowerCase();\n    }\n\n    /** View booking details */\n    public view() {\n        const room_id = Object.keys(this.event.approval_status)[0] || '';\n        const space = this._spaces.find(room_id) || this.event.room\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        space,\n                        booking: new Booking({ ...this.event.toApiJSON(), room_id, room: space }),\n                    },\n                    autoFocus: false,\n                    backdropClass: 'mck-modal-backdrop',\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state_sevice: BookingStateService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _zone: NgZone,\n        private cdRef: ChangeDetectorRef,\n    ) {\n        super();\n    }\n    ngOnInit(): void {\n        this.cateringOrderItems = 0\n       this.updateData();\n    }\n\n    public updateData() {\n        const type = this.event.booking_type;\n        this.bookingType = `${type.charAt(0).toUpperCase()}${type.slice(1)}`;\n        const catering: readonly CateringOrder[] = this.event.catering;\n        this.has_catering = !!catering.find((order) => this.event.space.email === order.location_id);\n        this.cateringNote = this.event.notes.filter(el => el.type === 'catering')[0]?.message || '';\n        this.equipmentNote = this.event.notes.filter(el => el.type === 'equipment')[0]?.message || '';\n\n        const createdDate = this.event.creationDateTz.formatDate('dd MMM yyyy');\n        const createdTime = this.event.creationDateTz.formatDate('h:mm a').toLocaleLowerCase();\n        this.creationDate = `${ formatDateWithSuffix(createdDate) },  ${ createdTime }`;\n        this.date =  formatDateWithSuffix(this.event.date_string);\n        this.officeAddress = `${this.event.room.building?.name} ${this.event.room.level.name} ${this.event.space.building?.city}`;\n        this.cdRef.detectChanges();\n    }\n\n      \n    /**\n     * Approve the meeting for the set room\n     */\n    public accept(event: Event) {\n\t\t\t\tevent.stopPropagation();\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n      backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_email: this.event.space?.email,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        (acceptedBooking) => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.status = BOOKING_STATUS.approved;\n                            STATES[this.event.id] = BOOKING_STATUS.approved;\n                            this._booking_state_sevice.replace(this.event);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                            this.cdRef.detectChanges();\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                            this.cdRef.detectChanges();\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline(event: Event) {\n\t\t\tevent.stopPropagation();\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking = this.event.toJSON();\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        room_email: this.event.space?.email,\n                        icaluid: booking.icaluid,\n                        start: booking.start,\n                        end: booking.end,\n                        \n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.status = BOOKING_STATUS.declined;\n                            STATES[this.event.id] = BOOKING_STATUS.declined;\n                            this._booking_state_sevice.replace(this.event);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                            this.cdRef.detectChanges();\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                            this.cdRef.detectChanges();\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n\n\t\tngOnChanges(changes: SimpleChanges) {\n\t\t\t// console.log('CHANGES: ',changes);\n\t\t\tthis.updateData();\n\t\t\tthis.cdRef.detectChanges();\n\t\t}\n}\n","<div class=\"approval-card flex-column\" >\n\t<div class=\"card-header flex-row\" (click)=\"view()\" name=\"view\" >\n\t\t<!-- {{ event.title }} -->\n\t\t<div class=\"room-detail flex-column\">\n\t\t\t<div class=\"rm-name\">{{ event.space?.global_name ? event.space.local_name : '' }}</div>\n\t\t\t<div class=\"flex-row booking-details\">\n\t\t\t\t<div *ngIf=\"equipmentNote\">\n\t\t\t\t\t<!--  (mouseenter)=\"$event.stopPropagation(); showEquipmentNote = !showEquipmentNote\"  (mouseleave)=\"$event.stopPropagation(); showEquipmentNote = !showEquipmentNote\"  -->\n\t\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/Document-Content.svg'  }\" (click)=\"$event.stopPropagation(); showCateringNote = false; showEquipmentNote = !showEquipmentNote\"   ></app-icon>\n\t\t\t\t\t<div class=\"hint\" *ngIf=\"showEquipmentNote\">\n\t\t\t\t\t\t<div class=\"triangle equipment\"></div>\n\t\t\t\t\t\t<div class=\"hint-wrapper\">\n\t\t\t\t\t\t\t\t<div >{{equipmentNote}}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div  *ngIf=\"has_catering\">\n\t\t\t\t\t<!--  (mouseenter)=\"$event.stopPropagation(); showCateringNote = !showCateringNote\" (mouseleave)=\"$event.stopPropagation(); showCateringNote = !showCateringNote\" -->\n\t\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/small.svg' }\"  (click)=\"$event.stopPropagation(); showEquipmentNote = false; showCateringNote = !showCateringNote\" ></app-icon>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"hint\" *ngIf=\"showCateringNote \" >\n\t\t\t\t\t\t<div class=\"triangle \" [ngStyle]=\"{left: equipmentNote ? '55px' : '24px' }\"></div>\n\t\t\t\t\t\t<div class=\"hint-wrapper\">\n\t\t\t\t\t\t\t\t<!-- <div *ngFor=\"let catItem of catering; let i = index\" class=\"flex-column\" > -->\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<!-- Order {{i+0}} -->\n\t\t\t\t\t\t\t\t\t\t{{totalCateringItems}} items in catering order\n\t\t\t\t\t\t\t\t\t<!-- <span *ngFor=\"let item of catItem.items\">{{item.name}}</span> -->\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<!-- <ul class=\"a\" style=\"list-style-type: circle; margin: 0px;\">\n\t\t\t\t\t\t\t\t\t\t<li *ngFor=\"let item of catItem.items\">{{item.name}}</li>\n\t\t\t\t\t\t\t\t\t  </ul> -->\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<div class=\"booking-type flex-center\" [ngClass]=\"{'external': bookingType === 'External'}\">{{ bookingType }}</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"booking-date-details flex-row\">\n\t\t\t<!-- for normal booking -->\n\t\t\t<div class=\"flex-column flex-end\">\n\t\t\t\t<span> {{ date }} </span>\n\t\t\t\t<span> {{ event.all_day ? 'All Day' : start + ' - ' + end }} </span>\n\t\t\t\t<span></span>\n\t\t\t</div>\n\t\t\t<!-- for rucurring booking  -->\n\t\t</div>\n\t</div>\n\t<div class=\"card-content flex-column\" (click)=\"view()\" name=\"view\" >\n\t\t<div class=\"flex-row content-row\">\n\t\t\t<span class=\"icon\">\n\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/Pin.svg' }\" ></app-icon>\n\t\t\t</span>\n\t\t\t<span class=\"info\">{{ officeAddress }}</span>\n\t\t</div>\n\n\t\t<div class=\"flex-row content-row\">\n\t\t\t<span class=\"icon\">\n\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/User (single).svg' }\" ></app-icon>\n\t\t\t</span>\n\t\t\t<span class=\"info\">\n\t\t\t\t<label for=\"name\">Host:</label>\n\t\t\t\t <span name=\"host\"> {{ event.organiser?.name }}</span>\n\t\t\t\t</span>\n\t\t</div>\n\n\t\t<div class=\"flex-row content-row\">\n\t\t\t<span class=\"icon\">\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/User (multiple).svg' }\" ></app-icon></span>\n\t\t\t<span class=\"info\" >{{ event.attendees.length }}<label for=\"attendees\"> attendees</label> </span>\n\t\t</div>\n\n\t\t<div class=\"flex-row content-row format-attendee\" >\n\t\t\t<span class=\"icon\"><app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/User (single).svg' }\" ></app-icon></span>\n\t\t\t<div class=\"info flex-row \" name=\"attendees\">\n\t\t\t\t<div class=\"attendee-wrapper\" *ngFor=\"let item of event.attendees\">\n\t\t\t\t\t<div class=\"attendees flex-center\" [ngClass]=\" {'external': item.external }\">{{ item.name }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"flex-row content-row\"  *ngIf=\"\n\t\t\tevent.creator &&\n\t\t\tevent.organiser &&\n\t\t\tevent.organiser.email !== event.creator.email\" >\n\n\t\t\t<span class=\"icon\">\n\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src : './assets/img/User (single).svg' }\" ></app-icon>\n\t\t\t</span>\n\t\t\t<span class=\"info\"> \n\t\t\t\t<label for=\"bookee\">Booked by:</label>\n\t\t\t\t<span name=\"bookee\"> {{ event.creator?.name }}</span>\n\t\t\t</span>\n\t\t</div>\n\n\t\t<div class=\"flex-row content-row\">\n\t\t\t<span class=\"info requested-on\"> Requested on {{ creationDate }}</span>\n\t\t</div>\n\t</div>\n\t<div class=\"card-footer flex-row flex-center\">\n\t\t<button mat-button class=\"primary\" name=\"accept\"  (click)=\"accept($event)\"> Accept </button>\n\t\t<button mat-button  class=\"secondary\" name=\"decline\"  (click)=\"decline($event)\" > Decline </button>\n\t</div>\n</div>\n\n","import {\n    Component,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    BaseDirective,\n    HashMap,\n    Identity\n} from '@mckinsey-converge/base';\nimport { BookingModalComponent } from 'src/app/bookings/booking-modal/booking-modal.component';\nimport {\n    ApplicationService,\n    BookingStateService,\n    BookingStoreState,\n    BuildingLevel,\n    OrganisationService,\n    selectBookingByIdResultsFromState,\n    User,\n    Booking\n} from '@mckinsey-converge/data-common';\n\nimport {\n    AlertMode,\n} from '@mckinsey-converge/ui';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { MeetingDetailsModalComponent } from '../meeting-details-modal/meeting-details-modal.component';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { selectCurrentUser, UserStoreState } from '@mckinsey-converge/user';\nimport { select, Store } from '@ngrx/store';\nimport { BuildingStoreState } from 'libs/buildings/src';\nimport { clearBookingByIdResults, loadBookingsWithQuery, MyBookingsStoreState } from '@mckinsey-converge/bookings';\nimport { Subscription } from 'rxjs';\n\nexport type RoomBookingStoreState = BookingStoreState & BuildingStoreState & MyBookingsStoreState & UserStoreState;\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date, starts out with no timezone data, gets updated later */\n    public dateTz: DateTZ = DateNow(new Date());\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: HashMap<boolean> = {};\n    /** List of legend keys to show */\n    public legend_list: string[] = [];\n    /** List of available legend keys */\n    public legend_keys: Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true }\n    ];\n\n    public banner_mode = AlertMode.Warning\n    public showBanner = true;\n    public undo_banner_mode = AlertMode.Error;\n    public has_access: boolean;\n    public undo_action: 'series' | 'booking';\n    private _undo_timer: any;\n\n\t\tprivate spaceTypesSubscription: Subscription;\n\n    event_list: Booking[] = [];\n\tsearchStr: any;\n\tfoundSearchLength: number = 0;\n\tsearchedCounter: any = 1;\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _booking_state_service: BookingStateService,\n        private store: Store<RoomBookingStoreState>,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Day View';\n\n\t\t\t\tif( this._service.get('active_legends') !== null &&  this._service.get('active_legends').hasOwnProperty('length')) {\n\t\t\t\t\tthis.legend_keys = this._service.get('active_legends');\n\t\t\t\t}\n\n\t\t\t\tthis._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            // Init dateTz here once the organization data is loaded.\n            this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n            this.legend_list = this.legend_keys.map((item) => `${item.id}`);\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                                this._booking_state_service.setZone(this.active_level || this._org.building.id);\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    // Update dateTz here when the building is changed.\n\t\t\t\t\t\t\t\t\t\tthis.dateTz = new DateTZ({\n\t\t\t\t\t\t\t\t\t\t\tdate: this.dateTz.ms,\n\t\t\t\t\t\t\t\t\t\t\tis_local_tz: false,\n\t\t\t\t\t\t\t\t\t\t\tbuilding_tz: this.timezone,\n\t\t\t\t\t\t\t\t\t\t});\n                    const building = this._org.building;\n                    this.has_access = building ? true : false;\n                    if (!this.has_access) {\n                        return;\n                    }\n\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = building?.levels[0]?.id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n\t\t\t\t\t\t\t\t\t\tthis.levels.sort((a, b) =>\n\t\t\t\t\t\t\t\t\t\tb.name.localeCompare(a.name, undefined, {\n\t\t\t\t\t\t\t\t\t\t\t\tnumeric: true,\n\t\t\t\t\t\t\t\t\t\t\t\tignorePunctuation: true,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n\t\t\t\t\t\t\t\t\t\tif (this._org.spaceTypesObservable) {\n\t\t\t\t\t\t\t\t\t\t\tthis.spaceTypesSubscription = this._org.spaceTypesObservable.subscribe(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(spaceTypes) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.space_types = [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ id: '', name: 'All Space Types' } as any,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].concat(spaceTypes);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n                })\n            );\n            this.subscription(\n                'day_view_undo',\n                this._service.get('undo').subscribe(undo => {\n                    if (!undo)\n                        return;\n\n                    if (this.undo_action) {\n                        this.undo_action = null;\n                        clearTimeout(this._undo_timer);\n                    }\n\n                    this._booking_state_service.attentToDelete(undo.booking, undo.action);\n                    this.undo_action = undo.action;\n                    this._undo_timer = setTimeout(() => {\n                        this._service.get('undo').next(null);\n                        this.undo_action = null;\n                    }, 15000);\n                })\n            );\n        });\n\n        this.configureIfLinksFromEmail();\n\n        this.subscription(\n            'bookings',\n            this._booking_state_service.filtered.subscribe((list) => {\n                this.event_list = [...list];\n\n            })\n        );\n    }\n\n    searchBooking(value) {\n\t\t\tconst searchValue = value.toLowerCase()\n\t\t\tif(this.searchStr !== value) {\n\t\t\t\tconst booking = this.event_list.filter(el => el.title.toLowerCase().includes(searchValue) || el.organiser.name.toLowerCase().includes(searchValue) || el.organiser.email.toLowerCase().includes(searchValue));\n\t\t\t\tthis._service.set('CONCIERGE.day_view.viewing', booking[0]);\n\t\t\t\tthis.foundSearchLength = booking.length-1;\n\t\t\t\tthis.searchStr = value;\n\t\t\t\tthis.searchedCounter = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.searchedCounter = this.searchedCounter < this.foundSearchLength ? this.searchedCounter+1 : 0\n\t\t\t\tconst booking = this.event_list.filter(el => el.title.toLowerCase().includes(value) || el.organiser.name.toLowerCase().includes(value) || el.organiser.email.toLowerCase().includes(value));\n\t\t\t\tthis._service.set('CONCIERGE.day_view.viewing', booking[this.searchedCounter]);\n\t\t\t}\n\n    }\n\n\n\n    public configureIfLinksFromEmail() {\n        /**\n         * https://acaprojects.atlassian.net/browse/MCK-2055\n         * Load booking with id received from email link to concierge and setup configuration to open booking detail dialog on day view\n         * Will work with both formatted URL's\n         * http://localhost:4200/#/day-view?view=booking-1edd3a4f-45fa-43cd-960d-5ae6ee5b1e36\n         * http://localhost:4200/#/day-view/zone-1FUT0pxu12s?view=booking-1edd3a4f-45fa-43cd-960d-5ae6ee5b1e36\n         */\n         const bookingId = this._route.snapshot.queryParams['view'];\n         if(bookingId) {\n             this.subscription('currentUser', this.store.select(selectCurrentUser).pipe(take(1))\n             .subscribe((user: User | undefined) => {\n                 // Once we know we have the user loaded.\n                this.store.dispatch(loadBookingsWithQuery({ 'id': bookingId,  'target': 'bookingById', 'offset': 0 }));\n             }));\n\n             this.store.dispatch(clearBookingByIdResults())\n\n             this.subscription('bookingResults', this.store.pipe( select(selectBookingByIdResultsFromState) ).pipe(first(_ => !!_ && !!_.success))\n             .subscribe(next => {\n                 const booking = next.success ? next.success?.[0] : null;\n                 if (booking && booking.room) {\n                     const levelId = this._route.snapshot.params.hasOwnProperty('level');\n\n                     localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(booking.toJSON()));\n                     localStorage.setItem('CONCIERGE.view_booking_space', JSON.stringify(booking.space.toJSON()));\n                     localStorage.setItem('CONCIERGE.date', `${booking.startDateTz.ms}`);\n                     localStorage.setItem('CONCIERGE.timezone', `${booking.startDateTz.building_tz}`);\n\n                     this.updateDateTz(booking.startDateTz)\n                     this._booking_state_service.setDate(booking.startDateTz);\n                     this._booking_state_service.setZone(booking.level_zone);\n                     if(!levelId ) {\n                         this._router.navigate(['/day-view', booking.level_zone], { queryParams: { view: bookingId }, replaceUrl: true });\n                     }\n                 }\n             }));\n         }\n    }\n\n    public ngOnDestroy(): void {\n        if (this._service.get('undo').getValue()) {\n            this._service.get('undo').next(null);\n        }\n\t\t\t\tif (this.spaceTypesSubscription) {\n\t\t\t\t\tthis.spaceTypesSubscription.unsubscribe();\n\t\t\t\t}\n    }\n\n\n    // Fires for the big blue new booking button\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: { timezone: this.timezone },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    // R--- surely these 2 methods are not DRY and all the main tabs need a base class\n    // that encapsulates the common elements.\n    public get timezone() {\n        return this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone');\n    }\n\n    public updateDateTz(dateTz: DateTZ) {\n        this.dateTz = dateTz;\n    }\n\n    public updateLevel() {\n        this._booking_state_service.setZone(this.active_level || this._org.building.id);\n        this._router?.url?.includes('/day-view') && this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend(mobile: boolean = false) {\n        if (mobile) {\n            this.legend_list = this.legend_keys.reduce((list, key) => {\n                if (key.active) list.push(key.id);\n                return list;\n            }, []);\n\t\t\t\t\t\tthis._service.set('active_legends', this.legend_keys);\n        }\n        this.legend = this.legend_keys.reduce((map, key) => {\n            map[key.id] = this.legend_list.includes(`${key.id}`);\n            return map;\n        }, {});\n\n        this._booking_state_service.setFilters({\n            ...this._booking_state_service.filters,\n            hide_type: Object.keys(this.legend).filter((i) => this.legend[i] === false) as any\n        });\n    }\n\n    public onOnlySetupBreakdownChanged(toggle: MatSlideToggleChange): void {\n        this._service.set('APP.breakdown', toggle.checked)\n    }\n\n    public async undoBooking(): Promise<void> {\n        const { action, booking } = this._service.get('undo').getValue();\n        if (!booking)\n            return;\n\n        await booking.undo('accept', action === 'series' ? { series: true } : {});\n        this._service.get('undo').next(null);\n        this._booking_state_service.attentToDelete(booking, action, true);\n        this.undo_action = null;\n        clearTimeout(this._undo_timer);\n        this._undo_timer = null;\n\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: booking.space,\n                booking: booking\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    public hideBanner() {\n        this.showBanner = false;\n    }\n\n    public hideUndo() {\n        this.undo_action = null;\n        clearTimeout(this._undo_timer);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <div class=\"header\" *ngIf=\"showBanner\">\n            <mck-alert-banner\n            [mode]=\"banner_mode\"\n            (close)=\"hideBanner()\"\n            message=\"This current version of Converge does not support multiroom bookings.\"\n            ></mck-alert-banner>\n        </div>\n        <div class=\"header\" *ngIf=\"undo_action\">\n            <mck-alert-banner\n                [mode]=\"undo_banner_mode\"\n                (action)=\"undoBooking()\"\n                (close)=\"hideUndo()\"\n                buttonText=\"Undo\"\n                message=\"Canceling {{undo_action === 'series' ? 'series' : 'booking'}}\">\n            </mck-alert-banner>\n        </div>\n        <a-topbar-header\n            [(dateTz)]=\"dateTz\"\n            [timezone]=\"timezone\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n            (dateChangeTz)=\"updateDateTz($event)\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button  [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field> -->\n                <!-- <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend_list\"\n                        (ngModelChange)=\"updateLegend()\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field> -->\n                <!-- <mat-slide-toggle\n                    name=\"overflow\"\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    (change)=\"onOnlySetupBreakdownChanged($event)\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle> -->\n\t\t\t\t\t\t\t\t<!-- <input name=\"search\" value=\"\" placeholder=\"Search by booking title or host name\" #box (keyup.enter)=\"searchBooking(box.value)\" /> -->\n\n\t\t\t\t\t\t\t\t<div class=\"cng-serach\" style=\"width: 100%;display: flex;\tflex:1;\tplace-content: center;\">\n\t\t\t\t\t\t\t\t\t<mat-form-field [class.rounded]=\"true\" appearance=\"outline\" style=\"width: 24em\">\n\t\t\t\t\t\t\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n\t\t\t\t\t\t\t\t\t\t<input  #box  matInput [(ngModel)]=\"search_str\" (keyup.enter)=\"box.value !== '' && searchBooking(box.value)\" name=\"search-name\" placeholder=\"Search by booking host name or title\" />\n\t\t\t\t\t\t\t\t\t\t<button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''; box.value = '' \">\n\t\t\t\t\t\t\t\t\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t\t\t\t</div>\n\n\n            </div>\n        </a-topbar-header>\n        <main [style.height]=\"showBanner ? 'calc(100% - 7.5em)' : ''\">\n            <day-view-timeline\n                [dateTz]=\"dateTz\"\n                [level]=\"active_level\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n                [undo_action]=\"undo_action\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_listing\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_listing=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend(true)\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@mckinsey-converge/ui';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule, UiModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Space, BOOKING_STATUS } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { MeetingDetailsModalComponent } from 'src/app/calendar/meeting-details-modal/meeting-details-modal.component';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\nexport interface BookingDetailInfo {\n    bookedBy: {\n        display:boolean,\n        value: string\n    }\n}\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Event to display */\n    @Input() public booking: Booking;\n    /** Date to display bookings for */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** Space associated with the booking */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the booking */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this booking */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the booking within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the booking start time in the day */\n    public top: number;\n    /** Position of the booking relative to overlapping bookings */\n    public left: number;\n    /** Height based of the duration of the booking */\n    public height: number;\n    /** Size of the booking when overlapping with other bookings */\n    public width: number;\n    /** Offset from the booking's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the booking's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n\n    public approved: boolean;\n    public declined: boolean;\n    public bookingDetails: BookingDetailInfo;\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private cdRef: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.approved = this.booking.status === BOOKING_STATUS.approved;\n        this.declined = this.booking.status === BOOKING_STATUS.declined;\n        // test comment\n        const {creator, organiser, booker_concierge} = this.booking;\n        this.bookingDetails = {\n            bookedBy: {\n                display: creator && ( creator.email !== organiser.email || (creator.email === organiser.email && booker_concierge !== null && organiser.email !==booker_concierge['email']) ),\n                value: (creator.email === organiser.email && booker_concierge !== null && organiser.email !==booker_concierge['email']) ?  booker_concierge['name'] || booker_concierge['email']  :  creator?.name || creator.email\n            }\n        }\n    }\n\n    public get local_id(): string {\n        return this.booking.icaluid.substr(0, 6);\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        return this.booking.getType();\n    }\n\n    /** Period that the booking will occur during the day */\n    public get period(): string {\n        // the booking time is being pass in as the local timezone version.\n        return this.booking.time_period;\n    }\n\n    /** Number attendees expected to turn up to the booking */\n    public get expected(): number {\n        const expected = this.booking.expected_attendees;\n        return this.space ? expected[this.space.email] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.booking.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view(event: Event) {\n        event.stopPropagation();\n       const dialogRef =  this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                space: this.space,\n                booking: this.booking,\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        dialogRef.afterClosed().subscribe(_ => {\n            this.calculatePosition();\n            this.cdRef.detectChanges();\n        })\n    }\n\n    /** Whether booking is active */\n    public get active(): boolean {\n        const booking = this._service.get('CONCIERGE.day_view.viewing');\n        return !booking || booking.id === this.booking.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.booking || changes.overlap || changes.dateTz) {\n            this.calculatePosition();\n            this.approved = this.booking.status === BOOKING_STATUS.approved;\n            this.declined = this.booking.status === BOOKING_STATUS.declined;\n        }\n    }\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        const booking_details = this.booking.toApiJSON();\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(booking_details));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.startDateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${this.booking.startDateTz.building_tz}`);\n    }\n\n    /**\n     * View catering order for the booking\n     */\n    public viewOrder(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (this.booking && this.booking.catering) {\n            /* istanbul ignore else */\n            if (localStorage) {\n                this.storeOrder(order);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.booking.id, view: order.id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.booking) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = this.dateTz.startOfValue('day');\n            const date = this.booking.startDateTz.startOfValue('minute');\n            const end = this.booking.endDateTz.startOfValue('minute');\n            const from_previous_day = !date.isSameDate(shown_date, 'day');\n            if (end.isBeforeDate(shown_date, 'day')) { // Hide booking if not on shown date\n                this.top = -100;\n                this.height = 1;\n                return;\n            }\n\n            //R-- Stragest thing, but one time this was logging bookings form different timezones?\n            // this.dateTz.logDateTz('calculatePosition this.dateTz')\n            // this.booking.startDateTz.logDateTz('calculatePosition this.booking.startDateTz')\n\n            const start = from_previous_day ? 0 : Math.abs(+date.dateDiff(shown_date, 'hours', 'hours').toFixed(3));\n            const duration = Math.min(\n                this.booking.duration,\n                Math.abs(shown_date.dateDiff(date.addValue({ minutes: this.booking.duration }), 'minutes'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.booking.setup[this.space.email]\n                    ? (this.booking.setup[this.space.email] / 60) / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.booking.breakdown[this.space.email]\n                    ? (this.booking.breakdown[this.space.email] / 60) / duration\n                    : -0.1) * 100;\n            if (this.booking.all_day) {\n                this.top = 0;\n                this.height = 100;\n            }\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + local_id\"\n    *ngIf=\"booking\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' concierge-' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' concierge-' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view($event)\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ booking.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (declined || approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : declined ? 'event_busy' : ''\n                    }\"\n                >\n\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (booking.organiser?.name || booking.organiser)\">\n                    {{ booking.organiser?.name || booking.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\" *ngIf=\"bookingDetails?.bookedBy?.display\" >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (bookingDetails.bookedBy.value)\">\n                    {{ bookingDetails.bookedBy.value }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + booking.title\">{{ booking.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ booking.attendees ? booking.attendees.length || 'No' : 'No' }} Attendee{{\n                        booking.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"booking.company.length > 0\">\n                <div class=\"value\">\n                    Company: {{ booking.company.length }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"booking.organiser?.name || booking.organiser\"\n                [title]=\"'Welcomed by: ' + booking.organiser.name || booking.organiser\"\n            >\n                <div class=\"value\">Welcomed by: {{ booking.organiser?.name || booking.organiser }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering && !loading\"\n        (click)=\"viewOrder(order)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { IEventOverlap } from './event/event.component';\nimport { BaseDirective, closestToTimeSlotTz, Identity } from '@mckinsey-converge/base';\nimport { OrganisationService, Space } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { ConfirmModalComponent } from '@mckinsey-converge/legacy-overlays';\nimport { DialogEvent, HashMap } from '@mckinsey-converge/base';\nimport { DayViewSettings } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { BookingsService } from '@mckinsey-converge/data-common';\n\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { convertTimezonedTimestampToLocalDateTz, DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { BookingModalComponent } from 'src/app/bookings/booking-modal/booking-modal.component';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public dateTz: DateTZ;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n\n\t\t@Input() public eventMovingLoader :  HashMap<boolean> = {};\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n\t\t /** Emitter for whether an event is being dropped and moving in progress */\n\t\t @Output() public moving = new EventEmitter<{}>();\n    /** List of bookings for the current date and space */\n    public event_list: Booking[] = [];\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    /** List of timeblocks to display */\n\t\tpublic time_blocks: Identity[] = this.generateTimeBlocks();\n\n\t\t/** Generate time blocks to display on the day view */\n\t\tprivate generateTimeBlocks(): Identity[] {\n\t\t\tconst blocks: Identity[] = [];\n\t\t\tconst date = DateNow(new Date()).startOfValue('hour');\n\t\t\tfor (let i = 0; i < 24; i++) {\n\t\t\t\tblocks.push({\n\t\t\t\t\tid: date.setValue({ hour: i }).formatDate('HH:mm'),\n\t\t\t\t\tname: date.setValue({ hour: i }).formatDate('h:mma').toLocaleLowerCase(),\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn blocks;\n    }\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _booking_state_service: BookingStateService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog,\n        private cdr: ChangeDetectorRef,\n\t\t\t\tprivate _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public  events: Booking[]  = []\n\n    public ngOnInit(): void {\n        this.events = this.filterEvents();\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => {\n                        this.overflow_only = state;\n                        this.events = [...this.filterEvents()];\n                    })\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription(\n                'bookings',\n                this._booking_state_service.filtered.subscribe((list) => {\n                    this.event_list = [...list];\n                    this.events = [...this.filterEvents()];\n                    this.cdr.detectChanges();\n                })\n            );\n            this.checkInView();\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        if (changes.space) {\n            this.event_list = [...this.event_list];\n            this.timeout('in_view', () => this.checkInView(), 100);\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    private filterEvents(): Booking[] {\n        if (this.space) {\n            const bookings = this.event_list;\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n\n                const ignore = event.is_recurrent && event.recurrence_type === 'master';\n\n                return (\n                    !ignore &&\n                    event.room.email === this.space.email &&\n                    (!this.overflow_only ||\n                        event.setup[event.room.email] ||\n                        event.breakdown[event.room.email])\n                );\n            }).map(e => new Booking({...e.toJSON()})  );\n\n            return list;\n        }\n        return [];\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.startDateTz.ms - b.startDateTz.ms ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = bkn.startDateTz.startOfValue('minute');\n            const bkn_end = bkn.endDateTz.startOfValue('minute');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = cmp.startDateTz.startOfValue('minute');\n                    const cmp_end = cmp.endDateTz.startOfValue('minute');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSameDate(cmp_start, 'minute') ||\n                        (bkn_start.isAfterDate(cmp_start)  && bkn_start.isBeforeDate(cmp_end)) ||\n                        bkn_end.isSameDate(cmp_end, 'minute') ||\n                        (bkn_end.isAfterDate(cmp_start) && bkn_end.isBeforeDate(cmp_end))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = booking.startDateTz;\n        const new_date = old_date.startOfValue('day').setValue({ minute: new_start });\n\t\t\t\tconst start_epoch = new_date.seconds;\n\t\t\t\tconst end_epoch = new_date.addValue({ minutes: booking.duration }).seconds;\n        const now = DateNow(new Date());\n        /* istanbul ignore else */\n        // Prevent moving event into past\n\t\t\t\tif (now.startOfValue('minute').ms > new_date.ms) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n\t\t\t\tif (now.startOfValue('minute').ms > booking.endDateTz.ms) {\n\t\t\t\t\tthis.handleDropError(booking.id, 'Only future meetings can be moved');\n\t\t\t\t\treturn;\n\t\t\t\t}\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n\t\t\t\tthis.moving.emit({ isMoving:true, movingId:booking.id} );\n        let room = booking.space;\n\t\t\t\tlet message = `Update ${booking.organiser.name}'s meeting in \"${ booking.space.name }\" from ${ old_date.formatDate('h:mma') } to ${new_date.formatDate('h:mma')}`;\n        let success = `Successfully updated meeting time from ${old_date.formatDate( 'h:mma' )} to ${new_date.formatDate('h:mma')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\troom.name\t}\" at ${new_date.formatDate('h:mma')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${new_date.formatDate('h:mma')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        // if (room === booking.space && new_date.isSameDate(old_date, 'month')) {\n        //     this.handleDropError(booking.id, 'The meeting is already in this room');\n        //     return;\n        // }\n        const room_list = [room];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        // if (room_count < room_list.length) {\n        //     this.handleDropError(booking.id, 'The meeting is already in this room');\n        //     return;\n        // }\n        const new_booking = new Booking({\n            ...booking.toJSON(),\n\t\t\t\t\t\tstart_epoch,\n\t\t\t\t\t\tend_epoch,\n            room: room_list[0], // R--- messy\n        });\n\t\t\t\t\n        this.checkCollisions(\n            room_list,\n            new_date,\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.moving.emit({ isMoving:false, movingId:booking.id} );\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param dateTz\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        dateTz: DateTZ,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    dateTz,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n\t\t\t\tthis.moving.emit({ isMoving:false, movingId:id} );\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this._bookings.save(new_booking).then(\n                            (bkn: Booking) => {\n                                this._booking_state_service.replace(bkn);\n                                resolve(bkn);\n                            },\n                            (err) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.moving.emit({ isMoving:false, movingId:new_booking.id} );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.override_state = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treject(err)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                        );\n                    }\n                    ref.close(event.reason);\n                })\n            );\n\t\t\t\t\t\tref.afterClosed().subscribe((reason?:string) => { \n\t\t\t\t\t\t\treason !== 'done' ? this.moving.emit({ isMoving:false, movingId:new_booking.id} ) : null;\n\t\t\t\t\t\t\tthis.unsub('confirm');\n\t\t\t\t\t\t});\n        });\n    }\n\n\n\n\n\n\t\tpublic checkAvailabilityOnGivenTime(selectedBlockStart, selectedBlockEnd) {\n\t\t\tconst runningBookings = this.events?.filter( bks => {\n\t\t\t\tconst startEpoch = new DateTZ({ date: bks.start_epoch * 1000, is_local_tz: false, building_tz: bks.timezone}).ms;\n\t\t\t\tconst endEpoch = new DateTZ({ date: bks.end_epoch * 1000, is_local_tz: false, building_tz: bks.timezone}).ms;\n\t\t\t\treturn selectedBlockStart.ms >= startEpoch &&  selectedBlockStart.ms <= endEpoch || selectedBlockEnd.ms > startEpoch && selectedBlockEnd.ms < endEpoch\n\t\t\t}) || []\n\t\t\treturn !!runningBookings.length;\n\t\t}\n\n\t\t/** Whether booking has been ended */\n    public expired(booking): boolean {\n\t\t\treturn booking.timeBasedStatusLabel === 'done';\n\t\t}\n\n\t\tgridBookingOnClick(event: any, space: Space) {\n\n\t\t\tconst box = this.view.nativeElement.getBoundingClientRect();\n\t\t\tconst y = event.y;\n\n\t\t\tconst top = (y - box.top - 20) / box.height;\n\t\t\tconst top_minutes = Math.round(top * 24 );\n\t\t\tconst topMinutes = (top_minutes / 24) * 100;\n\t\t\tconst new_start = Math.round(((topMinutes || 0) / 100) * 24 * 60) ;\n\t\t\tconst old_date = this._booking_state_service.booking_date;\n\n\t\t\tconst new_date = old_date.startOfValue('day').setValue({ minute: new_start });\n\t\t\tconst timezone = this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone')\n\t\t\tconst closestDateTz = closestToTimeSlotTz(new DateTZ({ date: new_date.ms, is_local_tz: true, building_tz: timezone }), -60)\n\n\t\t\tconst isConflict = this.checkAvailabilityOnGivenTime(closestDateTz, closestDateTz.addValue({ minutes: 60 }));\n\t\t\tif(isConflict) {\n\t\t\t\t// this._service.notifyError('Meetings cannot be create into the past');\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst now = DateNow(new Date());\n\t\t\t// Prevent moving event into past\n\t\t\tif (now.startOfValue('minute').ms > closestDateTz.ms) {\n\t\t\t\t\tthis._service.notifyError('Meetings cannot be create into the past');\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst form_data = {\n\t\t\t\tdateTz : closestDateTz,\n\t\t\t\tstartDateTz : closestDateTz,\n\t\t\t\tstart_epoch : closestDateTz.seconds,\n\t\t\t\tendDateTz : closestDateTz.addValue({ minutes: 60 }),\n\t\t\t\tend_epoch : closestDateTz.addValue({ minutes: 60 }).seconds,\n\t\t\t\ttimezone : timezone,\n\t\t\t\troom: space\n\t\t\t}\n\t\t\tconst booking\t=\tnew Booking(form_data);\n\t\t\tthis._dialog.open(BookingModalComponent, {\n\t\t\t\tdata: {\n\t\t\t\t\ttimezone: timezone,\n\t\t\t\t\tbooking: booking,\n\t\t\t\t\tisFromGrid: true\n\t\t\t\t },\n\t\t\t\tautoFocus: false,\n\t\t\t\tbackdropClass: 'mck-modal-backdrop',\n\t\t\t});\n\t\t}\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n\t\t(click)=\"gridBookingOnClick($event, space)\"\n>\n\t\t<div class=\"time-lines\" [style.min-width]=\"'100%'\" >\n\t\t\t<div class=\"block\"  *ngFor=\"let item of time_blocks\">\n\t\t\t\t\t<div class=\"line\"></div>\n\t\t\t</div>\n\t\t</div>\n\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [id]=\"item?.id\"\n        [cdkDragDisabled]=\" expired(item) ||  item.declined || !settings.dragdrop \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [dateTz]=\"dateTz\"\n            [booking]=\"item\"\n            [loading]=\"eventMovingLoader ? eventMovingLoader[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [booking]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n\n","import {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Renderer2,\n    SimpleChanges,\n    ViewChild, NgZone, DoCheck, ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { HashMap, Identity } from '@mckinsey-converge/base';\nimport { MeetingDetailsModalComponent } from 'src/app/calendar/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ, toMiddayUTC } from '@mckinsey-converge/date-tz';\nimport { isToday } from 'date-fns';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\n\n\n\nconst UPDATE_INTERVAL = 10;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DayViewTimelineComponent\n    extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** DateTZ object of the active date */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n\n    @Input() undo_action;\n\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    public space_zones: string[] = [];\n\n    public is_today: boolean = this.isToday();\n    public modalInitialized = false;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    @ViewChild(CdkVirtualScrollViewport) virtualScroll: CdkVirtualScrollViewport;\n    isEventMoving: boolean = false;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize')\n    public onResize() {\n        if (this.scroll_area['elementRef'].nativeElement) {\n            this.box = this.scroll_area['elementRef'].nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get is_loading() {\n        return this._booking_state_service.loading;\n    }\n\n    public isToday() {\n        return new DateTZ({\n            date: toMiddayUTC(this.dateTz).ms,\n            is_local_tz: false,\n            building_tz: this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone'),\n        }).isSameDate(\n            new DateTZ({\n                date: Date.now(),\n                is_local_tz: false,\n                building_tz: this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone'),\n            }),\n            'day'\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _booking_state_service: BookingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog,\n        private _zone: NgZone,\n        private cdr: ChangeDetectorRef,\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                this._booking_state_service.startPollingEveryFiveMin();\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this._zone.runOutsideAngular(() => {\n                    this.interval('time', () => this.updateTime(), 15 * 1000);\n                });\n                // R--- return to see if the booking service needs updating\n                this.subscription(\n                    'dateTz',\n                    this._booking_state_service.dateTz.subscribe((dateTz) => {\n                        // const dateTz = new DateTZ({date});\n                        this.dateTz = dateTz;\n                    })\n                );\n            });\n        });\n        this.is_today = this.isToday();\n\n        // this.virtualScroll.elementScrolled()\n        //     .subscribe(event => {\n        //         console.log('scrolled');\n        //     });\n\n\n    }\n\n    ngAfterViewInit() {\n        const d2 = this._renderer.createElement('div');\n        this._renderer.addClass(d2, 'adjustable-room-block-2');\n        this.virtualScroll.elementRef && this._renderer.appendChild(this.virtualScroll.elementRef.nativeElement, d2);\n      }\n\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.updateTime();\n            // this._zone.runOutsideAngular(() => {\n            //  this.interval('time', () => this.updateTime(), 15 * 1000);\n            // });\n            this.initSpaces();\n        }\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this._booking_state_service?.stopPolling) this._booking_state_service?.stopPolling();\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view') || localStorage.getItem('CONCIERGE.view_booking')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    const spaceJson = localStorage.getItem('CONCIERGE.view_booking_space');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const space: Space | undefined = spaceJson\n                            ? new Space(JSON.parse(spaceJson))\n                            : undefined;\n                        const booking = new Booking({ ...JSON.parse(details), room: space });\n                        if(!this.modalInitialized) {\n                            this.modalInitialized = true;\n                            this.view(booking, space);\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                            localStorage.removeItem('CONCIERGE.view_booking_space');\n                        }\n                    }\n                }\n            })\n        );\n        // this._zone.runOutsideAngular(() => {\n        // this.interval(\n        //     'scroll',\n        //     () => {\n        //         /* istanbul ignore else */\n        //         if (this.scroll_area && this.scroll_area['elementRef'].nativeElement) {\n        //             this.updateScroll({ target: this.scroll_area['elementRef'].nativeElement });\n        //         }\n        //     },\n        //     1000\n        //     );\n        // });\n        /* istanbul ignore else */\n        if (this.scroll_area['elementRef'].nativeElement) {\n            this.box = this.scroll_area['elementRef'].nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n        // console.log('update scroll called')\n        this.cdr.detectChanges();\n    }\n\n\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = DateNow(new Date()).startOfValue('hour');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.setValue({ hour: i }).formatDate('HH:mm'),\n                name: date.setValue({ hour: i }).formatDate('h:mma').toLocaleLowerCase(),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const now = new DateTZ({\n            date: Date.now(),\n            is_local_tz: false,\n            building_tz: this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone'),\n        });\n        this.now = (now.dateHour + now.minutes / 60) / 24;\n        this.active_hour = now.startOfValue('hour').formatDate('HH:mm');\n        this.is_today = this.isToday();\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     * @param space Space that's selected.\n     */\n    private view(booking: Booking, space?: Space) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                space: space || booking.space,\n                booking,\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.view_id = null;\n    }\n\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && booking.space && this.scroll_area && this.scroll_area['elementRef'].nativeElement) {\n            const element: HTMLDivElement = this.scroll_area['elementRef'].nativeElement.querySelector(\n                `#space-col-${booking.space.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                this._renderer.addClass(element, 'wild');\n                const scroll_box = this.scroll_area['elementRef'].nativeElement.getBoundingClientRect();\n                const date_percent =\n                    Math.abs(\n                        booking.startDateTz.dateDiff(\n                            booking.startDateTz.startOfValue('day'),\n                            'minutes'\n                        )\n                    ) /\n                    (24 * 60);\n                const box = element.getBoundingClientRect();\n                this.scroll_area['elementRef'].nativeElement.scrollTo({\n                    left:\n                    box.left - scroll_box.left + this.scroll_area['elementRef'].nativeElement.scrollLeft - 500,\n                    top: this.scroll_area['elementRef'].nativeElement.scrollHeight * date_percent - 10,\n                    behavior: 'smooth',\n                });\n                setTimeout(()=> {\n                    this._renderer.removeClass(element, 'wild');\n                }, 3000)\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area['elementRef'].nativeElement.scrollTop += y || 0;\n            this.scroll_area['elementRef'].nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area['elementRef'].nativeElement.scrollTop >=\n                        this.scroll_area['elementRef'].nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area['elementRef'].nativeElement.scrollLeft >=\n                        this.scroll_area['elementRef'].nativeElement.scrollWidth) ||\n                (y && this.scroll_area['elementRef'].nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area['elementRef'].nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area['elementRef'].nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area['elementRef'].nativeElement.scrollTop; //this.scroll_area['elementRef'].nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this._zone.runOutsideAngular(() => {\n                        this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                    });\n                    this.cdr.detectChanges();\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.local_name.localeCompare(b.local_name));\n        this.space_zones = this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n\n\n\t\tpublic onEventDragging(isDragging: boolean): void {\n\t\t\t// Check if dragging is initiated\n\t\t\tif (isDragging) {\n\t\t\t\t// Store the current scroll position\n\t\t\t\tthis.scroll_offset = this.scroll_area['elementRef'].nativeElement.scrollTop;\n\t\t\t\t// Subscribe to mouse move events\n\t\t\t\tthis.subscribeToMouseMove();\n\t\t\t\t// Clear existing interval for bookings\n\t\t\t\tthis.clearInterval('bookings');\n\t\t\t} else {\n\t\t\t\t// Cancel scroll operation\n\t\t\t\tthis.cancelScroll();\n\t\t\t\t// Unsubscribe from mouse move events\n\t\t\t\tthis.unsubscribeFromMouseMove();\n\t\t\t}\n\t}\n\n\t// Subscribe to mouse move events and handle scroll logic\n\tprivate subscribeToMouseMove(): void {\n\t\tthis.subscription(\n\t\t\t'listen_move',\n\t\t\tthis._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n\t\t\t\t// Get mouse position\n\t\t\t\tconst position = { x: event.clientX, y: event.clientY };\n\t\t\t\t// Calculate scroll direction based on mouse position\n\t\t\t\tconst [x, y] = this.calculateScrollDirection(position);\n\t\t\t\t// Scroll the view based on calculated direction\n\t\t\t\tthis.scrollView(x * 5, y * 5);\n\t\t\t\t// Run auto-scroll logic\n\t\t\t\tthis.runAutoScroll(x, y);\n\t\t\t\t// Detect changes to update the view\n\t\t\t\tthis.cdr.detectChanges();\n\t\t\t})\n\t\t);\n\t}\n\n\t// Calculate scroll direction based on mouse position\n\tprivate calculateScrollDirection(position: { x: number, y: number }): [number, number] {\n\t\tconst tolerance = 0.05;\n\t\tconst x = this.calculateDirection(position.x, this.box.left, this.box.right, tolerance);\n\t\tconst y = this.calculateDirection(position.y, this.box.top, this.box.bottom, tolerance);\n\t\treturn [x, y];\n\t}\n\n\t// Calculate direction based on mouse position and element boundaries\n\tprivate calculateDirection(pos: number, min: number, max: number, tolerance: number): number {\n\t\tif (pos > max - this.box.width * tolerance) {\n\t\t\t\treturn 1; // Scroll right\n\t\t} else if (pos < min + this.box.width * tolerance) {\n\t\t\t\treturn -1; // Scroll left\n\t\t} else {\n\t\t\t\treturn 0; // Do not scroll\n\t\t}\n\t}\n\n\t// Run auto-scroll logic\n\tprivate runAutoScroll(x: number, y: number): void {\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\t\tthis.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n\t\t});\n\t}\n\n\t// Unsubscribe from mouse move events\n\tprivate unsubscribeFromMouseMove(): void {\n\t\tthis.unsub('listen_move');\n\t}\n\n    public movingEvent(booking) {\n        this.isEventMoving = booking.isMoving;\n        this.loading_space[booking.movingId] = booking.isMoving;\n    }\n\n}\n\n","<div class=\"timeline\">\n\t<div class=\"loader\" *ngIf=\"is_loading | async\">\n\t\t\t<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n\t</div>\n\t<!-- <div class=\"header\" style=\"place-content: end;\"> -->\n\t\t\t<!-- <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n\t\t\t<div class=\"flex\">\n\t\t\t\t\t<div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n\t\t\t\t\t\t\t<div class=\"space-header\" *ngFor=\"let room of filtered_spaces\" [title]=\"room.local_name\">\n\t\t\t\t\t\t\t\t\t<div class=\"details\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text\">{{ room.local_name }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"icon\"></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"capacity\">\n\t\t\t\t\t\t\t\t\t\t\tCapacity - {{ room.capacity || '0' }}\n\t\t\t\t\t\t\t\t\t\t\t{{ room.capacity === 1 ? 'person' : 'people' }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div> -->\n\t\t\t<!-- <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n\t\t\t\t\t<div class=\"space-header\" [title]=\"holding_bay.name\">\n\t\t\t\t\t\t\t<div class=\"text\">Incoming Requests</div>\n\t\t\t\t\t\t\t<div class=\"icon\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n\t\t\t\t\t\t\t<app-icon\n\t\t\t\t\t\t\t\t\t[icon]=\"{\n\t\t\t\t\t\t\t\t\t\t\tclass: 'material-icons',\n\t\t\t\t\t\t\t\t\t\t\tcontent: show_holding_bay ? 'close' : 'list'\n\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t></app-icon>\n\t\t\t\t\t</div>\n\t\t\t</div> -->\n\t<!-- </div> -->\n\t<div class=\"body\" (click)=\"clearSelected()\">\n\t\t\t<!-- <div class=\"time-blocks\">\n\t\t\t\t\t<div class=\"text\">Time</div>\n\t\t\t\t\t<div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n\t\t\t\t\t\t\t<div class=\"block\" *ngFor=\"let timeslot of time_blocks\">\n\t\t\t\t\t\t\t\t\t<div div class=\"hour\" [class.active]=\"is_today && timeslot.id === active_hour\">\n\t\t\t\t\t\t\t\t\t\t\t{{ timeslot.name }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div> -->\n\n\n\t\t\t<div class=\"flex content\" [class.is_banner_shown]=\"undo_action\"  id=\"day-view-scroll\" >\n\t\t\t\t\t<cdk-virtual-scroll-viewport\n\t\t\t\t\t\t\t#scroll_area\n\t\t\t\t\t\t\titemSize=\"50\"\n\t\t\t\t\t\t\tclass=\"viewport\"\n\t\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\t\tminBufferPx=\"200\" maxBufferPx=\"1000\"\n\t\t\t\t\t\t\t(scroll)=\"updateScroll($event)\" >\n\n\t\t\t\t\t\t\t<div class=\"time-blocks\" >\n\t\t\t\t\t\t\t\t\t<div class=\"group\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text\">Time</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\" *ngFor=\"let timeslot of time_blocks\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div div class=\"hour\" [class.active]=\"is_today && timeslot.id === active_hour\"> {{ timeslot.name }} </div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div class=\"room-blocks\">\n\t\t\t\t\t\t\t\t\t<div class=\"space-header\" *ngFor=\"let room of filtered_spaces\" [title]=\"room.local_name\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"details\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"text\">{{ room.local_name }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"icon\"></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"capacity\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tCapacity - {{ room.capacity || '0' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ room.capacity === 1 ? 'person' : 'people' }}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"adjustable-room-block\"></div>\n\n\t\t\t\t\t\t\t<div class=\"time-grid-container\" >\n\t\t\t\t\t\t\t\t\t<div class=\"container-space\">\n\t\t\t\t\t\t\t\t\t\t\t<!-- <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\" *cdkVirtualFor=\"let item of time_blocks\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"line\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"space-day\" >\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <ng-container *cdkVirtualFor=\"let event of booking_list | async; trackBy: trackByFn\"> -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"space\" [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*ngFor=\"let item of filtered_spaces\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcdkDropListGroup\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- // R--- not sure if it's necessary to update this components date fomat -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<day-view-space\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[space_list]=\"space_zones\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[dateTz]=\"dateTz\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[space]=\"item\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[legend]=\"legend\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[overflow_only]=\"overflow_only\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[scroll]=\"-scroll_left\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[scrollTop]=\"scroll_offset - scroll_top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[lastUpdate]=\"last_update\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[eventMovingLoader]=\"loading_space\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(dragging)=\"dragChange($event)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(inView)=\"in_view[item.id] = $event\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(moving)=\"movingEvent($event)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></day-view-space>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- </ng-container> -->\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</cdk-virtual-scroll-viewport>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"now-line\" *ngIf=\"is_today\"  [style.top]=\" 'calc(' + now * time_blocks.length * 3 + 'rem - ' + (scroll_top - 48 ) + 'px)' | safe: 'style' \" >\n\t\t\t\t\t<div class=\"knob\"></div>\n\t\t\t</div>\n\n\t\t\t<div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\" >\n\t\t\t\t\t<div class=\"space-header\" [title]=\"holding_bay.name\">\n\t\t\t\t\t\t\t<div class=\"text\">Incoming Booking Requests</div>\n\t\t\t\t\t\t\t<!-- <div class=\"icon\"></div> -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n\t\t\t\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', content: show_holding_bay ? 'close' : 'list' }\"  ></app-icon>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"approval-cards-view\">\n\t\t\t\t\t\t\t<day-view-approvals-view></day-view-approvals-view>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t</div>\n</div>\n<div class=\"moving-overlay\" *ngIf=\"isEventMoving\">\n\t<div class=\"moving\" >\n\t\t\t<div class=\"text\">Moving meeting</div>\n\t\t\t<div class=\"spinner\">\n\t\t\t\t\t<mat-spinner diameter=\"32\"></mat-spinner>\n\t\t\t</div>\n\t</div>\n</div>","import { Component, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { BookingModalComponent } from '../../../bookings/booking-modal/booking-modal.component';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { DialogEvent, BaseDirective  } from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    @Output() updateBooking = new EventEmitter();\n\n    public orders = [];\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    public get total_edited(): boolean {\n        return this.booking.edits.some((_) => this.orders.some((o) => o.id === _));\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = this.space || { level: { building_id: '' } };\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        if (this.orders.length) {\n            const note = this.booking.notes.find(\n                (note) =>\n                    note.type === 'catering' &&\n                    note.space === this.space.email &&\n                    note.author === this.booking.creator.name\n            );\n            return note ? note.message : '<No Notes>';\n        } else {\n            return '<No Notes>';\n        }\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.timeBasedStatusLabel === 'done' || this.booking.declined;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._updateOrders();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this._updateOrders();\n        }\n    }\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        const booking = this.booking || order.booking;\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(booking.toApiJSON()));\n        localStorage.setItem('CONCIERGE.date', `${booking.startDateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${booking.startDateTz.building_tz}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        const dialogRef = this._dialog.open(BookingModalComponent, {\n            data: {\n                timezone: this.booking.timezone,\n                booking: this.booking,\n                only_catering: true,\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'modal_events',\n            dialogRef.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                if (event.reason === 'done') {\n                    dialogRef.close();\n                    this.updateBooking.emit(event.metadata);\n                }\n            })\n        );\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(order: CateringOrder) {\n        const booking = this.booking || order.booking;\n        if (!booking || !order) return;\n        /* istanbul ignore else */\n        if (localStorage) this.storeOrder(order);\n        this._router.navigate(['/catering', 'orders'], {\n            queryParams: { booking: booking.id, view: order.id },\n        });\n        this._dialog.closeAll();\n    }\n\n    /** List of orders for this booking and space */\n    private _updateOrders() {\n        let orders = this.booking.catering.filter(\n            (order) => order.location_id === this.space.email\n        );\n        orders = orders.map((order) => {\n            let ord = order.toJSON();\n            ord.booking = this.booking; // R--- check this change works\n            return new CateringOrder(ord);\n        });\n        this.orders = orders;\n    }\n}\n","<div class=\"heading\">Catering</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"total_edited\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <button matRipple *ngFor=\"let order of orders\" (mousedown)=\"viewOrder(order)\">\n                <div class=\"details\" [class.edited]=\"booking.edits.includes(order.id)\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </button>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"total_edited\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('charge_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('catering_note|' + space.email)\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">Edit Catering</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">&lt;No Catering Orders&gt;</div>\n</ng-template>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nimport { Booking, BookingAction, generateBookingForm } from '@mckinsey-converge/data-common';\nimport { humaniseDuration } from '@mckinsey-converge/base';;\nimport { BookingModalComponent } from '../../../bookings/booking-modal/booking-modal.component';\nimport { HashMap } from '@mckinsey-converge/base';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { DialogEvent } from '@mckinsey-converge/base';\n\nexport interface BookingDetailInfo {\n    bookedBy: {\n        display:boolean,\n        value: string\n    }\n}\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent extends BaseDirective implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Mapping of edited fields */\n\n    @Output() updateBooking = new EventEmitter();\n\n    @Output() public event = new EventEmitter();\n\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return (this.booking.room || this.space).local_name;\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n\n    /** Display string for attendees in booking */\n    public get start_and_duration_time() {\n        const end_ = this.booking.startDateTz.addValue({minutes: this.booking.duration});\n        return `${this.start_time} - ${end_.formatDate('h:mma').toLocaleLowerCase()}`;\n    }\n\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return `${this.booking.startDateTz.formatDate('dd MMM yyyy')} ${this.booking.startDateTz.formatDate('h:mma').toLocaleLowerCase()}`;\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        const end_ = this.booking.startDateTz.addValue({minutes: this.booking.duration})\n        return `${end_.formatDate('dd MMM yyyy,')} ${end_.formatDate('h:mma').toLocaleLowerCase()}`;\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.timeBasedStatusLabel === 'done';\n    }\n\n    public bookingDetails: BookingDetailInfo;\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n        this.setDetails();\n    }\n\n    /**\n     * Function to set details of the booking, can take advantage to one time assignment and set tmeplate properties to avoid template conditions and function calls\n     */\n    setDetails() {\n        const {creator, organiser, booker_concierge} = this.booking;\n        this.bookingDetails = {\n            bookedBy: {\n                display: creator && ( creator.email !== organiser.email || (creator.email === organiser.email && booker_concierge !== null && organiser.email !==booker_concierge['email']) ),\n                value: (creator.email === organiser.email && booker_concierge !== null && organiser.email !==booker_concierge['email']) ?  booker_concierge['name'] || booker_concierge['email']  :  creator?.name || creator.email\n            }\n        }\n    }\n\n    public editMeeting() {\n        const dialogRef = this._dialog.open<BookingModalComponent>(BookingModalComponent, {\n            data: {\n                timezone: this.booking.timezone,\n                booking: this.booking,\n                action: BookingAction.EDIT\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'modal_events',\n            dialogRef.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                const form = generateBookingForm(this.booking, ['space_list'], true);\n                if (event.reason === 'done') {\n                    dialogRef.close();\n                    this.updateBooking.emit(event.metadata);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Booking Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"bookingDetails?.bookedBy?.display\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ bookingDetails.bookedBy.value }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_email\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Date:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_and_duration_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.company\" *ngIf=\"this.booking.company.length > 0\">\n        <label for=\"company\">Company:</label>\n        <div class=\"value\" name=\"company\">\n            {{ this.booking.company.join(', ') }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.body || edited.notes || edited.description\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Booking\n</button>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking, BookingAction } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { BookingsService, BOOKING_STATUS } from '@mckinsey-converge/data-common';\nimport { DeleteConfirmModalComponent } from '../../bookings/delete-confirm-modal/delete-confirm-modal.component';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { BookingModalComponent } from 'src/app/bookings/booking-modal/booking-modal.component';\n\nexport interface MeetingDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    public set booking(booking: Booking) {\n        this._data.booking = booking;\n        // if space selected no longer exists on booking change, pick first one.\n        if (this._data.booking.room?.id && this._data.booking.room.id !== this._data.space?.id) {\n            this._data.space = this._data.booking.room;\n        }\n    }\n\n    /** Space to display booking details for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.getType();\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state_service: BookingStateService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (!this.booking) {\n            this._dialog_ref.close();\n            return;\n        };\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_email: this.space.email,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                this.booking.status = BOOKING_STATUS.approved;\n                this._booking_state_service.replace(this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: BOOKING_STATUS.approved });\n            }, this._on_error('Apologies, Unable to approve! This time slot has been booked recently by another user, please try booking another one.'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: this.booking.startDateTz.seconds,\n                end: this.booking.endDateTz.seconds,\n                room_email: this.space.email,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.status = BOOKING_STATUS.declined;\n                this._booking_state_service.replace(this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: BOOKING_STATUS.declined });\n            }, this._on_error('Unable to declining meeting, please try another one.'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking'),\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => {\n                        ref.close()\n                    }, 3000);\n                }\n            }),\n        );\n    }\n\n    /** Open model to cloning a booking */\n    public cloningMeeting():void {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                action: BookingAction.CLONE\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop'\n        });\n    }\n\n    /** Delete booking */\n    private async deleteMeeting(opts: { series?: boolean } = {}) {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete(opts);\n        this._service.notifySuccess('Successfully deleted booking');\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.afterClosed().subscribe(_ => this.setLoading(null));\n        this._dialog_ref.close();\n        this._service.get('undo').next({ action: opts && opts.series ? 'series' : 'booking', booking: this.booking });\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form: FormGroup) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking_data = this.booking.toJSON();\n        const booking = new Booking({\n            ...booking_data,\n            ...value,\n            room: value.space_list[0], // R--- not ideal\n        });\n         // if notes or catering exist? add 15 min buffer setup and breakdown to booking\n         const has_note_buffer = (booking.notes && booking.notes?.length) || (booking.catering && booking.catering?.length) ? {[booking?.space?.email]: 900} :  null; // 900 seconds = 15 min\n         if (has_note_buffer) {\n            booking.setup = has_note_buffer;\n            booking.breakdown = has_note_buffer;      \n         }\n        const new_booking: Booking = (await this._bookings\n            .save(booking)\n            .catch(this._on_error(`Error updating requirements`))) as any;\n        if (new_booking) {\n            const bkn = new Booking({ ...booking_data, ...new_booking.toApiJSON() });\n            this._data.booking = bkn;\n            this._booking_state_service.replace(bkn);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n\n    public async updateBooking(form) {\n        this.setLoading('Updating booking...');\n        const value = form.value;\n        const booking_data = this.booking.toJSON();\n        const startDateTz = form.controls.dateTz.value\n        const endDateTz = startDateTz.addValue({ minutes: value.duration })\n        const booking = new Booking({\n            ...booking_data,\n            ...value,\n            startDateTz,\n            endDateTz,\n            start_epoch: startDateTz.seconds,\n            end_epoch: endDateTz.seconds,\n            room: value.space_list[0], // R--- not ideal\n        });\n         // if notes or catering exist? add 15 min buffer setup and breakdown to booking\n         const has_note_buffer = (booking.notes && booking.notes?.length) || (booking.catering && booking.catering?.length) ? {[booking?.space?.email]: 900} :  null; // 900 seconds = 15 min\n         if (has_note_buffer) {\n            booking.setup = has_note_buffer;\n            booking.breakdown = has_note_buffer;      \n         }\n        const new_booking: Booking = (await this._bookings\n            .save(booking)\n            .catch(this._on_error(`Error updating booking`))) as any;\n        if (new_booking) {\n            this._booking_state_service.bookings.subscribe(res =>{\n                const booking = res.find(book => this.booking.id === book.id);\n                this.booking = booking; // if space selected no longer exists on booking change, this will pick first one.\n            })\n            this._service.notifySuccess('Successfully updated booking');\n        }\n        this.setLoading(null);\n    }\n\n    public async updateBreakdown(event) {\n        this.setLoading('Updating requirements...');\n        const booking_data = this.booking.toJSON();\n        const _booking = new Booking({\n            ...booking_data,\n            setup: event.setup,\n            breakdown: event.breakdown,\n            notes: event.notes,\n        });\n        const new_booking: Booking = (await this._bookings\n            .save(_booking)\n            .catch(this._on_error(`Error updating requirements`))) as any;\n        if (new_booking) {\n            const bkn = new Booking({ ...booking_data, ...new_booking.toApiJSON() });\n            this._data.booking = bkn;\n            this._booking_state_service.replace(bkn);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"'concierge-' + type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\" [class.edited]=\"booking.edits.includes('title')\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<ng-container *ngIf=\"booking.recurrence_type && booking.recurrence_period && !loading\">\n    <meeting-recurring-details [ngClass]=\"{ 'declined': type === 'cancelled'}\"\n        [booking]=\"booking\"\n        (confirmDelete)=\"deleteMeeting($event)\"\n    ></meeting-recurring-details>\n</ng-container>\n<mat-dialog-content [class]=\"'concierge-' + type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <section>\n            <div class=\"block\">\n                <meeting-details [booking]=\"booking\" [space]=\"space\" (updateBooking)=\"updateBooking($event)\"></meeting-details>\n            </div>\n            <div class=\"block\">\n                <meeting-details-requirements\n                    [booking]=\"booking\"\n                    [space]=\"space\"\n                    (event)=\"updateRequirements($event)\"\n                ></meeting-details-requirements>\n            </div>\n            <div class=\"block\">\n                <meeting-catering [booking]=\"booking\" [space]=\"space\" (updateBooking)=\"updateBooking($event)\"></meeting-catering>\n            </div>\n            <div class=\"block\">\n                <meeting-private-details [booking]=\"booking\" [space]=\"space\" (updateBooking)=\"updateBreakdown($event)\"></meeting-private-details>\n            </div>\n        </section>\n        <section>\n            <button name=\"accept\" (click)=\"acceptMeeting()\" [attr.disabled]=\"this.booking.status === 'approved' || booking.attempted_to_delete ? 'disabled' : null\">\n                <div class=\"group\">\n                    <div class=\"app-icon calendar-confirm\"></div>\n                    Accept booking\n                </div>\n            </button>\n            <button name=\"decline\" (click)=\"declineMeeting()\" [attr.disabled]=\"booking.attempted_to_delete ? 'disabled' : null\">\n                <div class=\"group\">\n                    <div class=\"app-icon circle-close\"></div>\n                    Decline booking\n                </div>\n            </button>\n            <button [class.error]=\"true\" name=\"clone\" (click)=\"cloningMeeting()\">\n                <div class=\"group\">\n                    <div class=\"app-icon document-copy\"></div>\n                    Clone booking\n                </div>\n            </button>\n            <button [class.error]=\"true\" name=\"delete\" (click)=\"deleteMeeting()\" [attr.disabled]=\"booking.attempted_to_delete ? 'disabled' : null\">\n                <div class=\"group\">\n                    <div class=\"app-icon trash\"></div>\n                    Cancel booking\n                </div>\n            </button>\n        </section>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <main class=\"loading\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { Identity, DialogEvent } from '@mckinsey-converge/base';\nimport { humaniseDuration } from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService, BookingNote } from '@mckinsey-converge/data-common';\n\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateTZ } from '@mckinsey-converge/date-tz';\n\nexport interface PrivateDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15 * 60, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this._data.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this._data.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this._data.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        const now = new DateTZ();\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this._data.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: now.ms,\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this._data.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            const setup = { ...this.booking.setup };\n            setup[this._data.space.email] = value.setup;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this._data.space.email] = value.breakdown;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this._bookings.save(new_booking).then(\n                (booking) => {\n                    this.event.emit({ reason: 'done', metadata: {setup, breakdown, notes} });\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking, generateBookingForm } from '@mckinsey-converge/data-common';\nimport { humaniseDuration, BaseDirective, DialogEvent } from '@mckinsey-converge/base';;\nimport { PrivateDetailsModalComponent } from '../private-details-modal/private-details-modal.component';\nimport { Space } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent extends BaseDirective implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    @Output() updateBooking = new EventEmitter();\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.space.email];\n        return setup ? humaniseDuration(setup / 60) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.space.email];\n        return breakdown ? humaniseDuration(breakdown / 60) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private' && note.space === this.space.email) || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        const dialogRef = this._dialog.open<PrivateDetailsModalComponent>(PrivateDetailsModalComponent, {\n            data: {\n                space: this.space,\n                booking: this.booking,\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n\n        this.subscription(\n            'modal_events',\n            dialogRef.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                const form = generateBookingForm(this.booking, ['space_list'], true);\n                if (event.reason === 'done') {\n                    dialogRef.close();\n                    this.updateBooking.emit(event.metadata);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('setup|' + space.email)\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('breakdown|' + space.email)\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('private_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nimport { Booking, BookingStateService, SeriesAction, RecurrencePeriod, BookingsService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from \"@mckinsey-converge/date-tz\"\nimport { BookingModalComponent } from 'src/app/bookings/booking-modal/booking-modal.component';\n\n@Component({\n    selector: 'meeting-recurring-details',\n    templateUrl: './recurring-details.component.html',\n    styleUrls: ['./recurring-details.component.scss'],\n})\nexport class MeetingRecurringDetailsDisplayComponent extends BaseDirective implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** helper for setLoading state of the parent modal */\n    @Output() public confirmDelete: EventEmitter<{ series?: boolean}> = new EventEmitter<{}>();\n\n    private _recurrence_endTz: DateTZ;\n    private _recurrence_startTz: DateTZ;\n    private _recurrence_period: RecurrencePeriod;\n    private _recurrence_interval: number;\n    private _occurrence_details: { id: string, start_epoch: number, dateTz?: DateTZ }[];\n    private _specific_dates: boolean = false;\n    private _master_booking: Booking;\n    public expired_ocurrences: Array<Booking> = [];\n\n    constructor(\n        private _booking_state: BookingStateService,\n        private _dialog: MatDialog,\n        private _bookings: BookingsService\n    ) {\n        super()\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'detail_bookings',\n            this._booking_state.bookings.subscribe(async (bookings) => {\n\n                const booking = bookings.find(bkn => bkn.icaluid === this.booking.icaluid);\n                if (!booking) {\n                    return;\n                }\n\n                this.master_booking = (this.booking.recurrence_type === 'occurrence'\n                    ? bookings.filter(bkg => bkg.id === booking.recurrence_master_id)\n                    : [booking]\n                ).shift();\n\n                if (!this.master_booking) {\n                    this.master_booking = await this._bookings.show(booking.recurrence_master_id);\n                    this._booking_state.add(this.master_booking);\n                }\n\n                this.recurrence_endTz = this.master_booking.recurrenEndFromOcurrences(this.master_booking.occurrence_details);\n                this.recurrence_startTz = new DateTZ({date: this.master_booking.start_epoch * 1000, is_local_tz: false, building_tz: this.master_booking.timezone});\n                this.recurrence_period = this.master_booking.recurrence_period;\n                this.recurrence_interval = this.master_booking.recurrence_interval;\n                this.occurrence_details = this.master_booking.occurrence_details && this.master_booking.occurrence_details\n                    .filter(ocurrence => ocurrence.id !== this.master_booking.id)\n                    .map(ocurrence => ({ ...ocurrence, start_epoch:  ocurrence.start_epoch * 1000, dateTz: new DateTZ({ date: ocurrence.start_epoch * 1000, is_local_tz: false, building_tz: this.master_booking.timezone }) }));\n                const occurrence_ids = this.master_booking?.occurrence_details.map(ocurr => ocurr.id) || []\n                this.expired_ocurrences = bookings.filter(booking => {\n                    if(occurrence_ids.includes(booking.id)){\n                        const building_tz = this.master_booking.timezone\n                        const date = (booking.start_epoch * 1000) + (booking.duration * 60000)\n                        const start = new DateTZ({date, is_local_tz: false, building_tz})\n                        const now = DateNow(new Date()).toZone(building_tz)\n                        return now.isAfterDate(start, 'minute')\n                    }\n                    return false\n                })\n            })\n        );\n    }\n\n    public set recurrence_startTz(date: DateTZ)  {\n        this._recurrence_startTz = date\n    }\n\n    public get recurrence_startTz():DateTZ  {\n        return this._recurrence_startTz\n    }\n\n    public set recurrence_endTz(date: DateTZ)  {\n        this._recurrence_endTz = date\n    }\n\n    public get recurrence_endTz(): DateTZ  {\n        return this._recurrence_endTz\n    }\n\n    public set recurrence_period(period: RecurrencePeriod)  {\n        this._recurrence_period = period;\n    }\n\n    public get recurrence_period():RecurrencePeriod  {\n        return this._recurrence_period;\n    }\n\n    public set recurrence_interval(interval: number)  {\n        this._recurrence_interval = interval;\n    }\n\n    public get recurrence_interval():number  {\n        return this._recurrence_interval;\n    }\n\n    public set occurrence_details(occurrences: { id: string, start_epoch: number }[]) {\n        this._occurrence_details = occurrences;\n    }\n\n    public get occurrence_details(): { id: string, start_epoch: number }[]  {\n        return this._occurrence_details;\n    }\n\n    public set specific_dates(val: boolean) {\n        this._specific_dates = val;\n    }\n\n    public get specific_dates(): boolean {\n        return this._specific_dates;\n    }\n\n    public set master_booking(bkng: Booking)  {\n        this._master_booking = bkng;\n    }\n\n    public get master_booking():Booking  {\n        return this._master_booking;\n    }\n\n    public toggleSpecificDates() {\n        this.specific_dates = !this.specific_dates;\n    }\n\n    public async editSeries() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.master_booking.duplicate(true), //we want to send the master booking since it's the one with all of the series data\n                action: SeriesAction.EDIT,\n                timezone: localStorage.getItem('CONCIERGE.timezone')\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });  \n    }\n\n    public async cloneSeries() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.master_booking.duplicate(),\n                action: SeriesAction.CLONE\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    public async cancelSeries() {\n        this.confirmDelete.emit({ series: true });\n    }\n}\n","<div class=\"banner\">\n    <div class=\"banner-info\">\n        <div class=\"app-icon status\"></div>\n        <div class=\"banner-info-txt\" [ngSwitch]=\"recurrence_period\">\n            <ng-template [ngSwitchCase]=\"'daily'\">\n                This is one occurrence in a recurring series which occurs every {{recurrence_interval > 1 ? recurrence_interval + ' Days' : 'Day'}} effective {{recurrence_startTz.formatDate('dd MMM yyyy')}} until {{recurrence_endTz.formatDate('dd MMM yyyy')}}\n            </ng-template>\n            <ng-template [ngSwitchCase]=\"'weekly'\">\n                This is one occurrence in a recurring series which occurs every {{recurrence_interval > 1 ? recurrence_interval + ' Weeks' : 'Week'}} effective {{recurrence_startTz.formatDate('dd MMM yyyy')}} until {{recurrence_endTz.formatDate('dd MMM yyyy')}}\n            </ng-template>\n            <ng-template [ngSwitchCase]=\"'monthly'\">\n                This is one occurrence in a recurring series which occurs every {{recurrence_interval > 1 ? recurrence_interval + ' Months' : 'Month'}} effective {{recurrence_startTz.formatDate('dd MMM yyyy')}} until {{recurrence_endTz.formatDate('dd MMM yyyy')}}\n            </ng-template>\n            <ng-template ngSwitchDefault>\n                This is one occurrence in a recurring series which occurs on<button name=\"specificdates\" type=\"button\" (click)=\"toggleSpecificDates()\">Specific Dates.</button>\n                <div class=\"hint\" *ngIf=\"specific_dates\">\n                    <div class=\"triangle\"></div>\n                    <div class=\"hint-wrapper\">\n                        <div *ngFor=\"let occurrence of occurrence_details\">{{ occurrence.dateTz.formatDate('dd MMM yyyy') }}</div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n    <div class=\"banner-actions\">\n        <button mat-button name=\"menu\" [matMenuTriggerFor]=\"seriesActionsMenu\">\n            <div class=\"group\">\n                Series Actions\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'expand_more' }\"\n                ></app-icon>\n            </div>\n        </button>\n    </div>\n</div>\n<mat-menu #seriesActionsMenu=\"matMenu\">\n    <button mat-menu-item name=\"edit\" (click)=\"editSeries()\" [disabled]=\"expired_ocurrences.length > 0\">\n        <div class=\"group\">\n            <div class=\"app-icon edit\"></div>\n            Edit series\n        </div>\n    </button>\n    <button mat-menu-item name=\"clone\" (click)=\"cloneSeries()\">\n        <div class=\"group\">\n            <div class=\"app-icon clone\"></div>\n            Clone series\n        </div>\n    </button>\n    <button mat-menu-item name=\"cancel\" (click)=\"cancelSeries()\" [disabled]=\"booking.attempted_to_delete && booking.attempted_to_delete === 'series'\">\n        <div class=\"group\">\n            <div class=\"app-icon cancel\"></div>\n            Cancel series\n        </div>\n    </button>\n</mat-menu>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {\n    Booking,\n    generateBookingForm\n} from '@mckinsey-converge/data-common';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '@mckinsey-converge/legacy-overlays';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Space } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.timeBasedStatusLabel === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list'], true);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('room_email')\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.room.local_name || space.local_name }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('expected_attendees|' + space.email)\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    space.email || booking.room.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_code')\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    space.email || booking.room.email\n                ] || 'No Charge Code'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, Input, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { Booking, Space } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\n\nimport { timePeriodsIntersect } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WeekViewDayDisplayComponent extends BaseDirective {\n    /** Date to display bookings for */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** Whether the date set is today */\n    public isToday: boolean = false;\n    /** List of bookings for this date */\n    public readonly booking_list = this._booking_state_service.filtered_week.pipe(\n        map((bookings) => {\n            const date = this.dateTz.startOfValue('day');\n            /**\n             * Before the dateTz refactor timePeriodsIntersect would show bookings on the wrong day\n             * because this.dateTz did not have the building timezone\n             */\n            return bookings.filter((booking) => {\n                const ignore = booking.is_recurrent && booking.recurrence_type === 'master';\n                return (\n                    !ignore &&\n                    this.spaces.find((space: Space) => space.email === booking.room.email) &&\n                    timePeriodsIntersect(\n                        date.ms,\n                        date.endOfValue('day').ms,\n                        booking.startDateTz.ms,\n                        booking.endDateTz.ms\n                    )\n                );\n            });\n        })\n    );\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        return this.dateTz.formatDate('EEE, dd MMM yyyy');\n    }\n\n    constructor(private _booking_state_service: BookingStateService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dateTz) {\n            const now = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: this.dateTz.building_tz })\n            this.isToday = this.dateTz.isSameDate(now, 'day');\n        }\n        if (changes.spaces) {\n            this.timeout('changed', () => this._booking_state_service.setFilters(this._booking_state_service.filters), 100);\n        }\n    }\n\n     /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n      public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"isToday\">Today</div>\n</div>\n<div class=\"list\">\n    <cdk-virtual-scroll-viewport *ngIf=\"(booking_list | async).length; else empty_state\" appendOnly [itemSize]=\"100\" orientation=\"vertical\"\n     class=\"viewport\">\n        <ng-container *cdkVirtualFor=\"let event of booking_list | async; trackBy: trackByFn\">\n            <week-view-item [event]=\"event\"></week-view-item>\n         </ng-container>\n    </cdk-virtual-scroll-viewport>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, ChangeDetectionStrategy, OnInit, ChangeDetectorRef} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { MeetingDetailsModalComponent } from 'src/app/calendar/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WeekViewItemComponent implements OnInit{\n    @Input() public event: Booking;\n\n    public type: string = '';\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        this.type = this.event.getType();\n    }\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: this.event.space,\n                booking: this.event\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' concierge-' + type : '') +\n        (event.timeBasedStatusLabel === 'done' ? ' ended' : '') +\n        (event.timeBasedStatusLabel === 'in_progress' ? ' in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.local_room_name\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\">\n                {{ event.space?.local_name || event.local_room_name }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n        <div class=\"field\" *ngIf=\"event.company.length > 0\">\n            <label for=\"company\">Company:</label>\n            <div class=\"value\" name=\"company\">{{ event.company.length }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public dateListTz: DateTZ[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n\n    constructor(private _spaces: SpacesService, private _booking_state_service: BookingStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._booking_state_service.startPollingWeek();\n            this.dateListTz = this.generateDatesTz(this.dateTz, this.weekends);\n            this.space_list = this._spaces.filter(\n                (space) =>\n                    space.zones.includes(this.level) &&\n                    (!this.space_type || space.zones.includes(this.space_type))\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.dateTz || changes.weekends || changes.level || changes.space_type) {\n            this.dateListTz = this.generateDatesTz(this.dateTz, this.weekends);\n            this.space_list = this._spaces.filter(\n                (space) =>\n                    space.zones.includes(this.level) &&\n                    (!this.space_type || space.zones.includes(this.space_type))\n            );\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this._booking_state_service?.stopPolling) this._booking_state_service?.stopPolling();\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param dateTz Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDatesTz(dateTz: DateTZ, weekends: boolean = false): DateTZ[] {\n        const list: DateTZ[] = [];\n        // start of day takes midnight to the previous day issue\n        let day = dateTz.addValue({ minutes: 5 }).startOfValue('day');\n        let start = day.startOfValue('week');\n        let end = start.endOfValue('week').addValue({ minutes: 15 });\n        while (start.isBeforeDate(end)) {\n            if ((start.dateWeekday !== 6 && start.dateWeekday !== 7) || weekends) {\n                list.push(start);\n            }\n            start = start.addValue({ days: 1 });\n        }\n\n        return list;\n    }\n    \n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let listDateTz of dateListTz\"\n        [dateTz]=\"listDateTz\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Identity } from '@mckinsey-converge/base';\nimport { BookingModalComponent } from 'src/app/bookings/booking-modal/booking-modal.component';\nimport { Booking, BookingsService, OrganisationService } from '@mckinsey-converge/data-common';\nimport { ApplicationService, BuildingLevel } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\nimport { AlertMode } from '@mckinsey-converge/ui';\nimport { MeetingDetailsModalComponent } from '../meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date, starts out with no timezone data, gets updated later */\n    public dateTz: DateTZ = DateNow(new Date());\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    public banner_mode = AlertMode.Error;\n    public undo_action: 'series' | 'booking';\n    private _undo_timer: any;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public has_access: boolean;\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _booking_state_service: BookingStateService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Week View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            // Init dateTz here once the organization data is loaded.\n            this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                                this._booking_state_service.setZone(this.active_level || this._org.building.id);\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    // Update dateTz here when the building is changed.\n                    this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n                    const building = this._org.building;\n                    this.has_access = building ? true : false;\n                    if(!this.has_access) return\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => b.name.localeCompare(a.name, undefined, {\n                        numeric: true,\n                        ignorePunctuation: true,\n                    }));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n            this.subscription(\n                'week_view_undo',\n                this._service.get('undo').subscribe(undo => {\n                    if (!undo)\n                        return\n\n                    if (this.undo_action) {\n                        this.undo_action = null;\n                        clearTimeout(this._undo_timer);\n                    }\n\n                    this._booking_state_service.attentToDelete(undo.booking, undo.action);\n                    this.undo_action = undo.action;\n\n                    this._undo_timer = setTimeout(() => {\n                        this._service.get('undo').next(null);\n                        this.undo_action = null;\n                    }, 15000);\n                })\n            );\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this._service.get('undo').getValue()) {\n            this._service.get('undo').next(null);\n        }\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: { timezone: this.timezone },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    public updateLevel() {\n        this._booking_state_service.setZone(this.active_level || this._org.building.id);\n        this._router?.url?.includes('/week-view') && this._router.navigate(['/week-view', this.active_level]);\n    }\n\n    // R--- surely these 2 methods are not DRY and all the main tabs need a base class\n    // that encapsulates the common elements.\n    public get timezone() {\n        return this._org.building.timezone;\n    }\n\n    public updateDateTz(dateTz: DateTZ) {\n        this.dateTz = dateTz;\n    }\n\n    public hideBanner() {\n        this.undo_action = null;\n    }\n\n    public async undoBooking(): Promise<void> {\n        const { action, booking } = this._service.get('undo').getValue();\n        if (!booking)\n            return;\n\n        await booking.undo('accept', action === 'series' ? { series: true } : {});\n        this._booking_state_service.attentToDelete(booking, action, true);\n        this._service.get('undo').next(null);\n        this.undo_action = null;\n        this._undo_timer = null;\n\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: booking.space,\n                booking: booking\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <div class=\"header\" *ngIf=\"undo_action\">\n            <mck-alert-banner\n                [mode]=\"banner_mode\"\n                (action)=\"undoBooking()\"\n                (close)=\"hideBanner()\"\n                buttonText=\"Undo\"\n                message=\"Canceling {{ undo_action }}\">\n            </mck-alert-banner>\n        </div>\n        <a-topbar-header\n            [(dateTz)]=\"dateTz\"\n            [timezone]=\"timezone\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            (dateChangeTz)=\"updateDateTz($event)\"\n        >\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    name=\"weekends\"\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [dateTz]=\"dateTz\"\n                [level]=\"active_level || building?.id\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\nimport { UiModule } from '@mckinsey-converge/ui';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule, UiModule]\n})\nexport class WeekViewModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { first } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringStorage } from 'src/app/catering/catering.storage';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public dateTz: DateTZ = DateNow(new Date());\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    public orderDetailsExpanded = new BehaviorSubject<boolean>(false);\n\n    public has_access: boolean;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private cateringStorage: CateringStorage\n    ) {\n        super();\n        this.orderDetailsExpanded.next(cateringStorage.orderDetails);\n    }\n\n    public ngOnInit(): void {\n        this.subscription('orderDetailsExpand', this.orderDetailsExpanded.subscribe(value => {\n            this.cateringStorage.orderDetails = value;\n        }));\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Init dateTz here once the organization data is loaded.\n            this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n            this.category = 0;\n            this._service.title = 'Catering';\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    if (params.has('page')) {\n                        this.page = params.get('page');\n                    }\n                })\n            );\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    // Update dateTz here when the building is changed.\n                    this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n                    this.has_access = this._org.building ? true : false;\n                    if(!this.has_access) return\n                    \n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id }\n                    });\n                })\n            );\n        });\n    }\n\n    public get timezone() {\n        return this._org.building.timezone;\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <a-topbar-header [(dateTz)]=\"dateTz\" timezone=\"timezone\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    *ngIf=\"page === 'orders'\" labelPosition=\"before\" class=\"order-details\"\n                    [checked]=\"orderDetailsExpanded | async\"\n                    (change)=\"orderDetailsExpanded.next($event.checked)\">\n                    Order Details\n                </mat-slide-toggle>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" name=\"add-category\" (click)=\"category = category + 1\">Add\n                Category\n            </button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" name=\"add-package\" (click)=\"package = package + 1\">Add\n                Sub-Category/Package\n            </button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\"\n                                     (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [orderDetailsExpanded]=\"orderDetailsExpanded | async\" [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" name=\"menu\" mat-button [routerLink]=\"['/catering', 'menu']\"\n                           queryParamsHandling=\"preserve\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" name=\"orders\" mat-button [routerLink]=\"['/catering', 'orders']\"\n                           queryParamsHandling=\"preserve\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    Route,\n    RouterModule\n} from '@angular/router';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from '../shared/shared.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\nimport { CateringStorage } from './catering.storage';\nimport { CateringMenuOrderComponent } from './menu/item/item.component';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { BaseModule } from '@mckinsey-converge/base';\nimport { BookingsModule } from '../bookings/bookings.module';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n        CateringMenuOrderComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        LegacyOverlaysModule,\n        BaseModule,\n        BookingsModule,\n    ],\n    providers: [CateringStorage],\n    exports: [BaseModule]\n})\nexport class CateringModule {\n}\n","import { LocalStorageWrapper } from '@mckinsey-converge/storage';\n\nexport class CateringStorage extends LocalStorageWrapper {\n\n    private static orderDetailsKey = 'order-details';\n\n    constructor() {\n        super('CATERING');\n    }\n\n    public set orderDetails(value: boolean) {\n        this.setValue(CateringStorage.orderDetailsKey, value + '');\n    }\n\n    public get orderDetails(): boolean {\n        const value = this.getValue(CateringStorage.orderDetailsKey);\n        return value === 'true';\n    }\n\n    public removeOrderDetails() {\n        this.removeValue(CateringStorage.orderDetailsKey);\n    }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-order-item [parent]=\"category\" [item]=\"item\"></a-catering-order-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@mckinsey-converge/animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from '@mckinsey-converge/data-common';\nimport { ConfirmModalComponent } from '@mckinsey-converge/legacy-overlays';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent, HashMap } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { CateringCategoriesService } from '@mckinsey-converge/data-common';\nimport { CateringItemsService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuOrderComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(group, event.metadata);\n                }\n            })\n        );\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n            autoFocus: false,\n      backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(item, event.metadata);\n                }\n            })\n        );\n    }\n\n    private updateItemList(old_item: CateringItem | CateringCategory, new_item: HashMap) {\n        const item =\n            old_item instanceof CateringCategory\n                ? new CateringCategory(new_item)\n                : new CateringItem(new_item);\n        if (old_item.id) {\n            const index = this.parent.items.findIndex((itm) => itm.id === old_item.id);\n            (this.parent.items as any[]).splice(index, 1, item);\n            (this.parent as any).items = [...this.parent.items];\n        } else {\n            (this.item.items as any[]).push(item);\n        }\n    }\n\n    public deleteItem() {\n        const type =\n            this.item.is_category\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item.is_category\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e = err || 'Error');\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                } else {\n                    this._service.notifyError(`Error deleting ${type}.`);\n                }\n            }\n        });\n    }\n}\n","<div class=\"catering-item\" *ngIf=\"item\" [class.subitem]=\"subitem\">\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-order-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items.length || item.is_category\">\n        <button mat-menu-item name=\"add-group\" *ngIf=\"!subitem\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button\n        mat-menu-item\n        name=\"edit\"\n        (click)=\"item.items.length || item.is_category ? openGroupModal(item) : openItemModal(item)\"\n    >\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n            <div class=\"text\">\n                Edit\n                {{\n                    item.items.length || item.is_category\n                        ? subitem\n                            ? 'Group'\n                            : item.package\n                            ? 'Package'\n                            : 'Sub-category'\n                        : 'Item'\n                }}\n            </div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n            <div class=\"text\">\n                Delete\n                {{\n                    item.items.length || item.is_category\n                        ? subitem\n                            ? 'Group'\n                            : item.package\n                            ? 'Package'\n                            : 'Sub-category'\n                        : 'Item'\n                }}\n            </div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { CateringMenuService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { \n            data: { category }, \n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop', \n        });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from '@mckinsey-converge/data-common';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@mckinsey-converge/animations';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { Identity, HashMap } from '@mckinsey-converge/base';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { getTimezoneOffsetString } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    @Input()\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Mapping of items to the option selections */\n    public readonly item_details: HashMap<{ amount: number, details: string }> = {};\n\n    public showIndividualItem : boolean = false;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach((item) => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    public get timezone() {\n        return getTimezoneOffsetString(localStorage.getItem('CONCIERGE.timezone'));\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _booking_state_service: BookingStateService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n            this.updateItemDetails();\n        }\n        this.showIndividualItem = this.show_items;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (updated_booking) {\n                this._booking_state_service.replace(updated_booking);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        const dialogRef = this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking,\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    private updateItemDetails() {\n        for (const item of this.order.items) {\n            if ((item as any).items) {\n                const items = [];\n                for (const sub_item of (item as any).items) {\n                    if (!sub_item.items.length && sub_item.amount) {\n                        items.push(sub_item)\n                    } else {\n                        for (const sub_sub_item of sub_item.items) {\n                            if (sub_sub_item.amount) {\n                                items.push(sub_sub_item)\n                            }\n                        }\n                    }\n                }\n                this.item_details[item.id] = {\n                    amount: items.length,\n                    details: `[${items.map(i => i.name).join(']\\n[')}]`\n                };\n            }\n        }\n    }\n\n    public expandMore() {\n        this.showIndividualItem = !this.showIndividualItem\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at }}</div>\n        <div class=\"location\">{{ space?.local_name || space?.simple_name || space?.settings.room_name}}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"\n                                        loading ? '#eee' : status_details?.colour\n                                    \"\n                                >\n                                    <app-icon\n                                        *ngIf=\"!loading\"\n                                        [icon]=\"status_details?.icon\"\n                                    ></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"expandMore()\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: showIndividualItem ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" *ngIf=\"showIndividualItem || search \" [ngClass]=\"showIndividualItem || search ? 'show' : 'hide'\">\n\n        <div class=\"bar\"></div>\n        <div\n            class=\"item\"\n            *ngFor=\"let item of order.items\"\n            [class.not-match]=\"search && !search_matches[item.id]\"\n        >\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div\n                    class=\"options\"\n                    *ngIf=\"item_details[item.id]?.amount\"\n                    [matTooltip]=\"item_details[item.id].details\"\n                >\n                    {{ item_details[item.id]?.amount }}\n                    { item_details[item.id]?.amount, plural, =1 { Option } other { Options } }\n                </div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { combineLatest, Subject } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\n\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    @Input() public orderDetailsExpanded: boolean;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of catering orders for the selected date */\n    public orders = this._booking_state_service.filtered.pipe(\n        map((bookings) => {\n            let list: CateringOrder[] = [];\n            bookings.forEach((booking, i) => {\n                const catering = [...booking.catering]\n                    .map((order) => new CateringOrder({\n                        ...order,\n                        booking_date: booking.date,\n                        booking\n                    }));\n                list = list.concat(catering);\n            });\n            list.sort((a, b) => a.booking_date - b.booking_date);\n            return list;\n        })\n    );\n    /** List of catering orders for the selected date */\n    public filtered_orders = combineLatest([this.search$, this.orders]).pipe(\n        map(([search, orders]) => this.filter(orders || [], search || ''))\n    );\n\n    public display_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public readonly loading = this._booking_state_service.loading;\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        // R--- check if input can be changed since there is isSameDate calculations\n        const date = new DateTZ({date: this.date});\n        const now = DateNow(new Date())\n        return now.isSameDate(date, 'day') ? 'Today' : date.formatDate('dd MMM yyyy');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _booking_state_service: BookingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._booking_state_service.startPollingEveryFiveMin();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .pipe(filter((bld) => !!bld))\n                    .subscribe(() => {\n                        this._booking_state_service.setZone(this._org.building.id);\n                    })\n            );\n            this.subscription(\n                'orders',\n                this.filtered_orders.subscribe((orders) => {\n                    this.display_orders = orders.sort((a ,b) => {\n                        const date = new DateTZ({date: a.booking.date}).formatDate('yyyy/MM/dd');\n\n                        return Date.parse(`${date} ${a.deliver_at_time.slice(0, -2)} ${a.deliver_at_time.slice(-2)}`) - Date.parse(`${date} ${b.deliver_at_time.slice(0, -2)} ${b.deliver_at_time.slice(-2)}`)\n                    }\n                )})\n            )\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n            this.search$.next(this.search);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.search$.next(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : index;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading | async\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"display_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <cdk-virtual-scroll-viewport [itemSize]=\"display_orders.length\" class=\"viewport\">\n            <ng-container *cdkVirtualFor=\"let order of display_orders; trackBy: trackByFn\">\n                <a-catering-orders-item [order]=\"order\" [search]=\"search\"\n                                        [show_items]=\"orderDetailsExpanded\"></a-catering-orders-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DialogEvent } from '@mckinsey-converge/base';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from '@mckinsey-converge/data-common';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from '@mckinsey-converge/legacy-overlays';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    public disabled: boolean = true\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            admin_only: new FormControl(this.category.admin_only),\n        });\n\n        this.form.get('admin_only').setValue(this.form.get('admin_only').value ?? false);\n\n        if (!this.category.id) {\n            this.disabled = false\n        } else {\n            this.form.valueChanges.subscribe(val => {\n                for(let key of Object.keys(val)){\n                    if(this.category[key] !== val[key]){\n                        this.disabled = false\n                        return\n                    }\n                    this.disabled = true\n                }\n            });\n        }\n\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n      backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const category = new CateringCategory(this.category);\n            const data = { ...category.toJSON(), ...this.form.value };\n            const request = category.id\n                ? this._menu_categories.update(category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"admin_only\">Disable for Staff App</label>\n                    <mat-checkbox formControlName=\"admin_only\" name=\"admin_only\">Disable</mat-checkbox>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" name=\"delete\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading || disabled\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DialogEvent, Identity } from '@mckinsey-converge/base';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from '@mckinsey-converge/data-common';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from '@mckinsey-converge/legacy-overlays';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n        { id: 'none', name: 'Other' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const price = this.category.price\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = {\n                ...(this.category instanceof CateringCategory\n                    ? this.category.toJSON()\n                    : this.category),\n                ...this.form.value,\n                parent_categories: [this.parent.id],\n            };\n            data.price = data.unit_price;\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: new CateringCategory(item) });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox name=\"package\" formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Description'\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                            numbersOnly\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quantity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quantity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { CateringItem } from '@mckinsey-converge/data-common';\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { DialogEvent, Identity } from '@mckinsey-converge/base';\nimport { CateringItemsService } from '@mckinsey-converge/data-common';\nimport {\n    CONFIRM_METADATA, ConfirmModalComponent,\n} from '@mckinsey-converge/legacy-overlays';\nimport { mergeCateringItemWithFormData } from '@mckinsey-converge/data-common';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const price = this.item.price\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id]),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = mergeCateringItemWithFormData(this.item, this.form.value).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`,\n                    ),\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quantity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quantity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                        numbersOnly\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { getTimezoneOffsetString } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Email of the order space */\n    @Input() public space: Space;\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    public get timezone() {\n        return getTimezoneOffsetString(localStorage.getItem('CONCIERGE.timezone'));\n    }\n\n    /** Display startDateTZ and endDateTZ time only time */\n    public get start_and_duration_time() {\n        const end_ = this.booking.startDateTz.addValue({minutes: this.booking.duration});\n        return `${this.start_time} - ${end_.formatDate('h:mm a')}`;\n    }\n\n    /** Display startDateTZ time only time */\n    public get start_time() {\n        return `${this.booking.startDateTz.formatDate('h:mm a')}`;\n    }\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking_space', JSON.stringify(this.space.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.startDateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${this.booking.startDateTz.building_tz}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ start_and_duration_time }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[space?.email] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    name=\"view-meeting\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { CateringCategory } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent extends BaseDirective {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return this.order.items as any;\n    }\n\n    constructor(\n        private _service: ApplicationService, \n        private _bookings: BookingsService,\n        private _booking_state_service: BookingStateService,) {\n        super();\n    }\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking.toJSON(), catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this._booking_state_service.replace(booking);\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"order && items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <ng-container *ngFor=\"let sub_item of item.items\">\n                    <div class=\"sub-item\" *ngIf=\"sub_item.amount || sub_item.items.length\">\n                        <div class=\"name\">{{ sub_item.name }}</div>\n                        <ng-container *ngIf=\"sub_item.items\">\n                            <ng-container *ngFor=\"let sub_sub_item of sub_item.items\">\n                                <div class=\"sub-item\" *ngIf=\"sub_sub_item.amount\">\n                                    <div class=\"name\">{{ sub_sub_item.name }}</div>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [dateTz]=\"booking.startDateTz\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" name=\"edit\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\n\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { UsersService, BookingNote } from '@mckinsey-converge/data-common';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                (note.type === 'catering' || note.type === 'catering-private') &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            // Use the booking timezone to make the note date TZ aware since the native format is not.\n            const date = new DateTZ({date: note.date, is_local_tz: false, building_tz: this.booking.timezone })\n            note.time = date.formatDate('dd MMM, h:mma');\n        });\n        return notes;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _users: UsersService\n    ) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const now = new DateTZ({ date: Date.now(), is_local_tz: false, building_tz: this.booking.timezone })\n            const date = now.startOfValue('minute');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering-private',\n                    date: date.ms,\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.order.location_id,\n                    message: this.new_note,\n                    time: date.formatDate('h:mma'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking.toJSON(), notes: new_notes });\n            this.loading = true;\n            const new_booking: Booking = (await this._bookings\n                .save(pending_booking)\n                .catch((err) => {\n                    this._service.notifyError(\n                        `Failed to add note to order meeting. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                    throw err;\n                })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                this._booking_state.replace(new_booking);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { DialogEvent, Identity } from '@mckinsey-converge/base';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { SpacesService } from '@mckinsey-converge/data-common';\n\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateTZ, getTimezoneOffsetString } from '@mckinsey-converge/date-tz';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n    public booking: Booking;\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get delivery_date(): DateTZ {\n        return this.booking.startDateTz.addValue({ minutes: this._data.order.delivery_time });\n    }\n\n    /** Details about the delivery_at time */\n    public get delivery_at(): string {\n        return this.booking.startDateTz.addValue({ minutes: this._data.order.delivery_time }).formatDate('h:mm a');\n    }\n\n    public get timezone() {\n        return getTimezoneOffsetString(localStorage.getItem('CONCIERGE.timezone'));\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _booking_state_service: BookingStateService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n        this.booking = new Booking(this._data.booking)\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking: any = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                this._booking_state_service.replace(updated_booking);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}&nbsp;({{ space?.local_name}})</div>\n            <div class=\"time\">({{delivery_date?.ms | date:'mediumDate':timezone }}) To be delivered at {{ delivery_at }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [space]=\"space\" [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'access-denied',\n    templateUrl: './access-denied.component.html',\n    styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDenied {\n\n    constructor() {}\n\n}\n","<div class=\"access-denied-container\">\n    <img src=\"assets/img/access-denied.svg\">\n    <h4>Oooops - sorry! You don’t have access to this page.</h4>\n    <p>Please <a href=\"mailto:global_helpdesk@mckinsey.com\">contact help desk</a> or continue to <a href=\"/staff/\">Converge</a> for room booking.</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { ApplicationLinkInternal, ApplicationIcon } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        [id]=\"'link-' + (item.id || i)\"\n        class=\"item\"\n        *ngFor=\"let item of menu_items; let i = index\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseDirective } from '@mckinsey-converge/base';\n\nimport { BookingStateService, OrganisationService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ, getTimezoneOffsetString, toMiddayUTC } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** Currently building timezone */\n    @Input() public timezone: string;\n    /** Currently active zone */\n    @Input() public zone: string;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChangeTz = new EventEmitter<DateTZ>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `yyyy-MM-dd` */\n    public event_map: { [date: string]: number };\n\n    public fromDateTz = DateNow().subtractValue({ months: 6 });\n\n    public get now() {\n        return DateNow();\n    }\n\n    /** Display string for the currently selected date */\n    public get tz(): string {\n        return getTimezoneOffsetString(this.timezone_value);\n    }\n\n    public get timezone_value() {\n        return localStorage.getItem('CONCIERGE.timezone') || this.timezone || this.now.building_tz;\n    }\n\n    public get is_today() {\n        return new DateTZ({\n            date: toMiddayUTC(this.dateTz).ms,\n            is_local_tz: false,\n            building_tz: this.timezone_value,\n        }).isSameDate(\n            new DateTZ({\n                date: Date.now(),\n                is_local_tz: false,\n                building_tz: this.timezone_value,\n            }),\n            'day'\n        );\n    }\n\n    constructor(private _bookings: BookingStateService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        // CONCIERGE.date: Get the localstorage date and timezone when changing pages.\n        const date = +localStorage.getItem('CONCIERGE.date') || this.now.ms;\n        \n        /* istanbul ignore else */\n        if (date && (date !== this.dateTz.ms || this.timezone_value !== this.dateTz.building_tz)) {\n            // CONCIERGE.date Reapply the localstorage date and timezone when changing pages.\n            this.timeout(\n                'init',\n                () => {\n                    this.dateTz = new DateTZ({\n                        date,\n                        is_local_tz: false,\n                        building_tz: this.timezone_value,\n                    });\n                    this.dateChangeTz.emit(this.dateTz);\n                    this.updateDate();\n                },\n                10\n            );\n        }\n        this.subscription(\n            'events',\n            this._bookings._noOfMeetings.subscribe((list) => {\n                this.event_map = {};\n                this.event_map = list[0];\n            })\n        );\n    }\n\n    public noOfCount(event) {\n       // Disabling bellow until find more reliable way to call as it is been called multiple times on hover/click\n        // this._bookings.getDailyMeetingCount();\n        // event.stopPropogation();\n    }\n\n    /**\n     * Change the selected date with the arrow controls\n     *\n     */\n    public changeDate(value: number) {\n        let date = new DateTZ({\n            date: toMiddayUTC(this.dateTz).ms,\n            is_local_tz: false,\n            building_tz: this.timezone_value,\n        });\n        date = date.addValue({ days: value });\n        this.dateTz = date;\n        this.dateChangeTz.emit(this.dateTz);\n        localStorage.setItem('CONCIERGE.date', `${this.dateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${this.timezone_value}`);\n        this.updateDate();\n    }\n\n    /**\n     * Change the selected date with the calendar widget\n     *\n     */\n    public applyDatePickerValue(dateInputTz: DateTZ) {\n        this.dateTz = new DateTZ({\n            date: toMiddayUTC(dateInputTz).ms,\n            is_local_tz: false,\n            building_tz: this.timezone_value,\n        });\n        this.dateChangeTz.emit(this.dateTz);\n        localStorage.setItem('CONCIERGE.date', `${this.dateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${this.timezone_value}`);\n        this.updateDate();\n        this.closeDatePicker();\n    }\n\n    public updateDate() {\n        this.timeout('update_date', () => this._bookings.setDate(this.dateTz));\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.dateTz = new DateTZ({\n            date: toMiddayUTC(this.now).ms,\n            is_local_tz: false,\n            building_tz: this.timezone_value,\n        });\n        this.dateChangeTz.emit(this.dateTz);\n        localStorage.setItem('CONCIERGE.date', `${this.dateTz.ms}`);\n        localStorage.setItem('CONCIERGE.timezone', `${this.timezone_value}`);\n        this.updateDate();\n    }\n\n    public closeDatePicker() {\n        this.updateDate();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">\n                <p small *ngIf=\"is_today\">Today</p>\n                <p [class.medium]=\"is_today\">{{ dateTz.ms | date: 'mediumDate':tz }}</p>\n            </div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"divide\" (click)=\"noOfCount($event)\">\n            <date-tz-date-picker\n                class=\"time-inputs-calendar\"\n                [icon_only]=\"true\"\n                [counters]=\"show_events ? event_map : {}\"\n                [(ngModel)]=\"dateTz\"\n                [fromDateTz]=\"fromDateTz\"\n                [can_pick_today]=\"false\"\n                [timezone]=\"timezone_value\"\n                (onSelect)=\"applyDatePickerValue($event)\"\n            >\n            </date-tz-date-picker>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\nimport { UsersService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\" *ngIf=\"!loading; else loading_state\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container>\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"spinner\">\n            <img src=\"assets/img/loader.gif\" />\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Converge is loading</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { Building } from '@mckinsey-converge/data-common';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { ReportsService } from '@mckinsey-converge/data-common';\n\nimport { DateNow, DateTZ, toMiddayUTC } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number;\n    /** End date for the generated report */\n    public end_date: number;\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n    /** Multiple Locations? */\n    public multipleLocations: boolean = false;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    @Output() locationChanged = new EventEmitter<Building>();\n\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService,\n        private _router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        // R--- TODO no prams present for timezone\n        const now = DateNow();\n        this.start_date = now.startOfValue('day').ms;\n        this.end_date = now.endOfValue('day').ms;\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n        if (this.locations.length > 1) {\n            this.locations = [this.locations[0]];\n        }\n    }\n\n    /* function runs on location change from on-page dropdown(not from sidebar) */\n    public onLocationChange(data: any) {\n        this.locationChanged.emit(this.locations[0]);\n    }\n\n    /**\n     * Ensure Space Time Continuum\n     */\n    public checkDates(new_date: number) {\n        if (this.start_date > this.end_date) {\n            // R--- TODO no prams present for timezone\n            const date = new DateTZ({ date: new_date });\n            this.start_date = date.startOfValue('day').ms;\n            this.end_date = date.endOfValue('day').ms;\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            const date = toMiddayUTC(new DateTZ({ date: this.start_date })).toZone(\n                this.locations[0]?.timezone\n            );\n            const end_date = toMiddayUTC(new DateTZ({ date: this.end_date })).toZone(\n                this.locations[0]?.timezone\n            );\n            this._reports\n                .show(this.report.id, {\n                    date: date.formatDate('yyyy-MM-dd'),\n                    start_date: date.startOfValue('day').seconds,\n                    end_date: end_date.endOfValue('day').seconds,\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        const zone_ids = this.locations.map((i) => i.id).join(',');\n                        if (this.report.id === 'day' && this.locations[0]?.city !== 'Dallas') {\n                            this.loading = false;\n                            this._service.notifyError(\n                                `Day View is currently available for Dallas only`\n                            );\n                        } else {\n                            this.loading = false;\n                            this.report_data = new Report({ ...report, type: this.report.id });\n                        }\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = new DateTZ({ date: this.start_date });\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date.formatDate(\n                    'yyyy-MM-dd'\n                )}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\" [hidden]=\"this.report?.id === 'day'\">Start Date</label>\n            <label for=\"start-date\" [hidden]=\"this.report?.id !== 'day'\">Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\" [hidden]=\"this.report?.id === 'day'\">to</div>\n        <div class=\"field\" [hidden]=\"this.report?.id === 'day'\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date / 10\"\n                [to]=\"start_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <!-- Single Location Select -->\n            <mat-select *ngIf=\"!multipleLocations\" name=\"locations\" [(ngModel)]=\"locations[0]\" (ngModelChange)=\"onLocationChange($event)\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <!-- Multi Location Select - Could be wrapped to make directives conditional -->     \n            <mat-select *ngIf=\"multipleLocations\" name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from '@mckinsey-converge/base';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key | replace }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields; sticky: true\" ></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon, OrganisationService } from '@mckinsey-converge/data-common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { first } from 'rxjs/operators';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n    /** Multiselect Locations */\n    multi_locations: boolean;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public dateTz: DateTZ = DateNow(new Date());\n    /** ID of the active report */\n    public active_report: string;\n\n    public has_access: boolean;\n\n    public location: any;\n\n    /** List of available reports to display */\n    public reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive reports on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: false,\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n        {\n            id: 'day',\n            name: 'Day View Report',\n            short_name: 'day-view',\n            description: ' ',\n            hide_fields: [' '],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n        {\n            id: 'audit',\n            name: 'Audit',\n            short_name: 'audit',\n            description: '',\n            hide_fields: [],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: true,\n        }\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find((report) => report.id === this.active_report);\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Reports';\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((params) => {\n                if (params.has('report')) {\n                    this.active_report = params.get('report');\n                }\n            })\n        );\n\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            // Init dateTz here once the organization data is loaded.\n            this.dateTz = new DateTZ({\n                date: this.dateTz.ms,\n                is_local_tz: false,\n                building_tz: this.timezone,\n            });\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    // Update dateTz here when the building is changed.\n                    this.dateTz = new DateTZ({\n                        date: this.dateTz.ms,\n                        is_local_tz: false,\n                        building_tz: this.timezone,\n                    });\n                    const building = this._org.building;\n                    this.location = this._org.building;\n                    this.has_access = building ? true : false;\n\n                    //check for Dallas\n                    if (this.location.city != 'Dallas') {\n                        // remove day view from reports array\n                        this.reports = this.reports.filter(function (reports) {\n                            return reports.id !== 'day';\n                        });\n                    }\n                })\n            );\n        });\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n\n    // R--- surely these 2 methods are not DRY and all the main tabs need a base class\n    // that encapsulates the common elements.\n    public get timezone() {\n        return this._org.building.timezone;\n    }\n\n    public updateDateTz(dateTz: DateTZ) {\n        this.dateTz = dateTz;\n    }\n\n    public onLocationChanged(location: any) {\n        this.location = location;\n        //check for Dallas\n        if (this.location.city != 'Dallas') {\n            // remove day view from reports array\n            this.reports = this.reports.filter(function (reports) {\n                return reports.id !== 'day';\n            });\n            this._router.navigate(['/reports/bookings']);\n        } else {\n            // add day view to reports array\n            this.reports = [\n                ...this.reports,\n                {\n                    id: 'day',\n                    name: 'Day View Report',\n                    short_name: 'day-view',\n                    description: ' ',\n                    hide_fields: [' '],\n                    icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n                    multi_locations: true,\n                },\n            ];\n        }\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <div class=\"topbar\" *ngIf=\"active_report\">\n            <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                <mat-select\n                    name=\"report-type\"\n                    [(ngModel)]=\"active_report\"\n                    (ngModelChange)=\"updateReport()\"\n                >\n                    <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                        {{ report.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    [name]=\"report.id + '-report'\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display (locationChanged)=\"onLocationChanged($event)\" [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from '../shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-bulk-qr-overlay',\n    templateUrl: './bulk-qr-overlay.component.html',\n    styleUrls: ['./bulk-qr-overlay.component.scss'],\n})\nexport class BulkQrOverlayComponent implements OnInit {\n    @Input() itemsCheckboxes: any[];\n    @Input() qrCodeUrls: any[];\n    @Output() selectItemChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() selectAllChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() isOpen: boolean;\n    @Input() selectAll: boolean;\n    @Output() downloadQrCodeRequested: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancelClick: EventEmitter<void> = new EventEmitter<void>();\n    @Input() newArr: any[];\n    @Input() allLevels: any;\n    @Output() qrCodeUrlsChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    public onSubmit(str: string) {\n        this.qrCodeUrlsChange.emit(this.qrCodeUrls); // Emit the updated qrCodeUrls array\n        this.downloadQrCodeRequested.emit();\n        if (str === 'room') {\n            this.qrTabClick({ index: 0 });\n        } else if (str === 'level') {\n            this.qrTabClick({ index: 1 });\n        }\n    }\n\n    public onCancel(str: string) {\n        // Handle cancel button logic for rooms here (reset the form)\n        if (str === 'level') {\n            this.itemsCheckboxes = this.newArr.map((item) => {\n                return { ...item, ...{ checked: false }, ...{ isLevel: false } };\n            });\n        }\n        this.itemsCheckboxes.forEach((checkbox) => (checkbox.checked = false));\n        this.selectAll = false;\n        this.qrCodeUrls = [];\n        this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n        this.cancelClick.emit();\n    }\n\n    public onSelectAllChange(str: string) {\n        for (const checkbox of this.itemsCheckboxes) {\n            checkbox.checked = this.selectAll;\n        }\n        if (str === 'room') {\n            this.qrCodeUrls = this.itemsCheckboxes\n                .filter((checkbox) => checkbox.checked)\n                .map(({ id, roomname, level }) => ({\n                    url: window.location.origin + '/staff/#/home?id=' + id,\n                    roomname: roomname,\n                    level: level\n                }));\n        } else if (str === 'level') {\n            this.qrCodeUrls = this.itemsCheckboxes\n                .filter((checkbox) => checkbox.checked)\n                .map(({ id, building_id, name }) => ({\n                    url: window.location.origin + '/staff/#/home?zone_id=' + building_id + '&floor=' + id,\n                    name: name,\n                }));\n        }\n        this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n    }\n\n    public onSelectItemChange(e: any, item: any) {\n        if (e.checked && !item.isLevel) {\n            //If room selected, push it to qrCodeUrls array\n            let checkedRoomObj = {\n                url: window.location.origin + '/staff/#/home?id=' + item.id,\n                roomname: item.roomname,\n                level: item.level,\n            };\n            this.qrCodeUrls.push(checkedRoomObj);\n            this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n        } else if (e.checked && item.isLevel) {\n            //If levels selected, push it to qrCodeUrls array\n            let checkedLevelObj = {\n                url:\n                    window.location.origin +\n                    '/staff/#/home?zone_id=' +\n                    item.building_id +\n                    '&floor=' +\n                    item.id,\n                name: item.name,\n            };\n            this.qrCodeUrls.push(checkedLevelObj);\n            this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n        } else {\n            // If unselected, find the index of the checked Obj in qrCodeUrls array based on room/level name\n            const index = item.isLevel\n                ? this.qrCodeUrls.findIndex((obj) => obj.name === item.name)\n                : this.qrCodeUrls.findIndex((obj) => obj.roomname === item.roomname);\n            // If the object is found, remove it from the array using splice\n            if (index !== -1) {\n                this.qrCodeUrls.splice(index, 1);\n                this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n            }\n        }\n    }\n\n    isAnyItemSelected(): boolean {\n        return this.itemsCheckboxes.some((checkbox) => checkbox.checked);\n    }\n\n    public qrTabClick(e: any) {\n        let checkedFlag = { checked: false };\n        this.qrCodeUrls = [];\n        this.qrCodeUrlsChange.emit(this.qrCodeUrls);\n        this.itemsCheckboxes = [];\n        this.selectAll = false;\n\n        if (e.index === 0) {\n            //rooms tab\n            this.itemsCheckboxes = this.newArr.map((item) => {\n                return { ...item, ...checkedFlag, ...{ isLevel: false } };\n            });\n        } else if (e.index === 1) {\n            //levels tab\n            Object.assign(this.itemsCheckboxes, this.allLevels);\n            this.itemsCheckboxes = this.itemsCheckboxes.map((item) => {\n                return { ...item, ...checkedFlag, ...{ isLevel: true } };\n            });\n        }\n    }\n}\n","\n<div class=\"qr-heading\">Print QR codes</div>\n\n<mat-tab-group\n    fitInkBarToContent\n    animationDuration=\"0ms\"\n    (selectedTabChange)=\"qrTabClick($event)\"\n>\n    <mat-tab label=\"Rooms\">\n        <div>\n            <form (ngSubmit)=\"onSubmit('room')\">\n                <div class=\"checkbox-wrapper\">\n                    <div class=\"select-all-wrapper\">\n                        <label>\n                            <mat-checkbox\n                                [(ngModel)]=\"selectAll\"\n                                (change)=\"onSelectAllChange('room')\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></mat-checkbox>\n                            Select All\n                        </label>\n                    </div>\n                    <div class=\"room-list\">\n                        <div *ngFor=\"let checkbox of itemsCheckboxes\">\n                            <label>\n                                <mat-checkbox\n                                    [(ngModel)]=\"checkbox.checked\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    name=\"{{ checkbox.roomname }}\"\n                                    (change)=\"\n                                        onSelectItemChange($event, checkbox)\n                                    \"\n                                ></mat-checkbox>\n                                {{ checkbox.roomname }}\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-buttons\">\n                    <button type=\"button\" (click)=\"onCancel('room')\">\n                        Cancel\n                    </button>\n                    <button type=\"submit\" [disabled]=\"!isAnyItemSelected()\">\n                        Download\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-tab>\n\n    <mat-tab label=\"Levels\">\n        <div>\n            <form (ngSubmit)=\"onSubmit('level')\">\n                <div class=\"checkbox-wrapper\">\n                    <div class=\"select-all-wrapper\">\n                        <label>\n                            <mat-checkbox\n                                [(ngModel)]=\"selectAll\"\n                                (change)=\"onSelectAllChange('level')\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></mat-checkbox>\n                            Select All\n                        </label>\n                    </div>\n                    <div *ngFor=\"let checkbox of itemsCheckboxes\">\n                        <label>\n                            <mat-checkbox\n                                [(ngModel)]=\"checkbox.checked\"\n                                name=\"{{ checkbox.name }}\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                (change)=\"\n                                    onSelectItemChange($event, checkbox)\n                                \"\n                            ></mat-checkbox>\n                            {{ checkbox.name }}\n                        </label>\n                    </div>\n                </div>\n                <div class=\"form-buttons\">\n                    <button type=\"button\" (click)=\"onCancel('level')\">\n                        Cancel\n                    </button>\n                    <button type=\"submit\" [disabled]=\"!isAnyItemSelected()\">\n                        Download\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n","import {\n    AfterViewInit,\n    Component,\n    OnInit,\n    ViewChild,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    Output,\n    EventEmitter,\n    ChangeDetectorRef,\n    Inject,\n} from '@angular/core';\nimport { BaseDirective, DialogEvent, HashMap } from '@mckinsey-converge/base';\nimport { OrganisationService, SpacesService } from '@mckinsey-converge/data-common';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {  ResizeService,  ReadLocalPicService } from '../services/';\nimport { RequiredFileType, RoomPhotoDiamension } from '../util/room-admin-utility';\nimport { HttpEventType, HttpHeaders, HttpClient} from '@angular/common/http';\nimport * as cloneDeep from 'lodash/cloneDeep';\n// import { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\nimport { of, Observable, forkJoin } from \"rxjs\";\nimport { catchError, tap, toArray } from 'rxjs/operators';\nimport { ComposerService } from '@placeos/composer';\nimport { IconComponent } from '@mckinsey-converge/legacy-ui';\n\n@Component({\n    selector: 'app-manage-photos',\n    templateUrl: './manage-photos.component.html',\n    styleUrls: ['./manage-photos.component.scss'],\n\t\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ManagePhotosComponent extends BaseDirective implements OnInit {\n     /** Emitter for modal events */\n     @Output() public event = new EventEmitter<any>();\n\n\t\t public canvas: HTMLCanvasElement;\n\t\t public context: any;\n\t\t public imageInitial = null;\n\t\t public imageToModify = null;\n\n\t\t public photoArray: Array<any> = []; // array hold images to display (uploaded or to be upload)\n\t\t public photoUploadArray: Array<any> = []; // array hold image to upload\n\n\t\t public uploadProgress:number;\n\t\t public uploadError: boolean = false;\n\t\t public uploadingStatus: string = 'Uploading...';\n\t\t public room: any;\n\t\t public resizedFiles = [];\n\t\t public requiredFileType = RequiredFileType;\n\t\t public count: any = 0;\n\t\t public total: number = 0;\n\t\t public failedNo: string;\n\t\t//  isImageToModify: boolean;\n\n\n    constructor(\n\t\t\tprivate _composer: ComposerService,\n\t\t\t@Inject(MAT_DIALOG_DATA) private _data: any,\n\t\t\tpublic resizeService: ResizeService,\n\t\t\tprivate readLocalPicService: ReadLocalPicService,\n\t\t\tprivate _spaces: SpacesService,\n\t\t\tprivate cdRef: ChangeDetectorRef,\n\t\t\tprivate httpClient?: HttpClient,\n\t\t\t) {\n\t\t\tsuper();\n    }\n  \n\n    public ngOnInit() {\n       this.photoArray =  cloneDeep(this._data?.photos);\n\t\t\t this.room = this._data?.room\n    }\n\n\t\t\n\n\t\tpublic\tonFileSelected (event , indexToReplace?) {\n\t\t\tthis.uploadError = false;\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tthis.context = this.canvas.getContext('2d');\n\t\t\tconst ext = RequiredFileType.split(',');\n\t\t\tconst files = event instanceof Array ? event : [...new Set(event.target.files)].filter((f:File) => ext.includes(f.type));\n\t\t\tconst unusedIdx = indexToReplace!==undefined ? 1 : (3 - this.photoArray.length);\n\t\t\tfiles.splice(0,unusedIdx).forEach( file => {\n\n\t\t\t\tthis.readLocalPicService.readFileInput(file).then((base64Img) => {\n\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\tasync function (that) {\n\n\t\t\t\t\t\t\tawait that.resizeService.resizeImage(base64Img, {width: RoomPhotoDiamension.width, height: RoomPhotoDiamension.height,  outputFormat: 'image/png', })\n\t\t\t\t\t\t\t\t\t\t.then(function (imgResized) {\n\n\t\t\t\t\t\t\t\t\t\t\tthat.resizeService.createImage(imgResized).then(function (image) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tthat.context.clearRect(0, 0, image.width, image.height );\n\t\t\t\t\t\t\t\t\t\t\t\tthat.canvas.width = image.width;\n\t\t\t\t\t\t\t\t\t\t\t\tthat.canvas.height = image.height;\n\t\t\t\t\t\t\t\t\t\t\t\tthat.context.drawImage(  image,  0,  0,  image.width,  image.height );\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tconst dataURL: string | HTMLCanvasElement | HTMLImageElement = that.canvas.toDataURL('image/png');\n\t\t\t\t\t\t\t\t\t\t\t\tif(indexToReplace!==undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.photoArray.splice(indexToReplace, 1, { path : dataURL, index: indexToReplace+1 } )\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.photoUploadArray.splice(indexToReplace, 1, { path : dataURL, index: indexToReplace+1 } )\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst index = that.photoArray.length+1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.photoArray.push({ path: dataURL, index: index });\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.photoUploadArray.push({ path: dataURL, index: index });\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tthat.cdRef.detectChanges();\n\n\t\t\t\t\t\t\t\t\t\t\t\t// indexToReplace!==undefined ? that.photoArray.splice(indexToReplace, 1, { path : dataURL} ) : that.photoArray.push({ path: dataURL });\n\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('ERROR while creating image : ', error);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('ERROR while resizing image : ', error);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, 0, this );\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log('ERROR while Read local pic :', error);\n\t\t\t\t});\n\n\t\t\t})\n\n\t\t}\n\n\n\t\tupload() {\n\t\t\tthis.uploadError = false;\n\t\t\tthis.uploadProgress = 1;\n\t\t\tlet obs: Observable<any>[] = [];\n\t\t\tthis.count = 0;\n\t\t\tthis.total = this.photoUploadArray.length;\n\t\t\t\n\t\t\t// for (var i = 0; i < this.photoUploadArray.length; i++)\n\t\t\tthis.photoUploadArray.forEach(( img, i) =>{ \n\t\t\t\tconst formData = new FormData();\n\t\t\t\tconst file = this.readLocalPicService.b64toFile(img.path);\n\n\t\t\t\tformData.append( \"file\", file, `${this.room.email.split('@')[0]}-part-${img.index}.png`);\n\t\t\t\t\n\t\t\t\tobs.push(this.uploadSpacePhotos('photos', formData).pipe( catchError(err => of(err.status))) ) ;\n\n\t\t\t}) \n\n\t\t\t\n\n\t\t\tthis.subscription(`uploadPhotosSub$`, forkJoin(obs.map(o => o.pipe( \n\t\t\t\t\ttap(item => this.updateProgressMeter(item)),  \n\t\t\t\t\t// toArray() \n\t\t\t\t)))\n\t\t\t\t.subscribe(event => {\n\n\t\t\t\t\t\t\tthis._data.photos = [];\n\t\t\t\t\t\t\tevent.forEach((res ,i ) => {\n\t\t\t\t\t\t\t\tif(res?.message === 'File uploaded successfully!')  {\n\n\t\t\t\t\t\t\t\t\tthis.uploadError = false;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse  {\n\t\t\t\t\t\t\t\t\tconst suffixes = ['', 'st','nd','rd'];\n\t\t\t\t\t\t\t\t\tthis.failedNo = `${i+1}${suffixes[i+1]}`;\n\t\t\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t\t\t\tthis.uploadError = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(i === (this.photoUploadArray.length-1)) {\n\t\t\t\t\t\t\t\t\tthis.photoUploadArray = [];\n\t\t\t\t\t\t\t\t\tthis.uploadingStatus =  'Complete';\n\t\t\t\t\t\t\t\t\tthis.event.emit(this._data.photos);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis._data.photos = [];\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t\tthis.uploadError = true;\n\t\t\t\t\t\t\tconsole.log('Error while uploadig room photos: ', error) ;\n\t\t\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tprivate updateProgressMeter(item) {\n\t\t\tif(item?.message === 'File uploaded successfully!')  {\n\t\t\t\tthis.count++;\n\t\t\t\tthis.uploadProgress = this.total > 0 ? Math.round((this.count / this.total) * 100) : 0;\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t}\n\t\t}\n\t\n\t\n\t\treset() {\n\t\t\tthis.uploadProgress = null;\n\t\t\tthis.cdRef.detectChanges();\n\t\t}\n\n\t\tpublic timestamp (photo) {\n\t\t\treturn photo?.index ? '' : `?${(new Date()).getTime()}`;\n\t\t}\n\n\n\t\t/**\n   * update function version -2 - returns observable instead of promise...\n   * @param form_data data to be update \n   * @param should_inject_concierge common value to be set to add concierge: true to the query url and body\n   * @param query_params Map of query paramaters to add to the request URL\n   */\n\t\t public uploadSpacePhotos(apiSubRoute: string, form_data: HashMap, should_inject_concierge: Boolean = false, query_params: HashMap = {}):Observable<any>{\n\t\t\tconst url = `/api/staff/rooms/${apiSubRoute}`;\n\t\t\tconst body = form_data;\n\t\n\t\t\tconst token = this._composer.auth.token; //sessionStorage.length ? JSON.parse(sessionStorage.getItem('OAUTH.params')).access_token : '';\n\t\n\t\t\tconst headers = new HttpHeaders({\n\t\t\t\t'Authorization': `Bearer ${token}`,\n\t\t\t});\n\t\t\t\n\t\tconst requestOptions = { headers: headers };\n\t\n\t\t\treturn this.httpClient.post(url, body, {\n\t\t\t\t\t\t...requestOptions \n\t\t\t\t});\n\t\n\t\t\t// return this.http.post(url, body);\n\t\n\t\t}\n\n}\n","<div class=\"manage-photos-main flex-column\" >\n    <div class=\"header flex-row\">\n      <div class=\"flex flex-grow header-title\"> {{ room?.roomname }} </div>\n\t\t\t<div class=\"flex-row-end\">\n\t\t\t\t<button mat-icon-button mat-dialog-close >\n\t\t\t\t\t<app-icon\t[icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n\t\t\t</button>\n\t\t\t</div>\n    </div>\n\n\t\t<div class=\"container flex-column\">\n\t\t\t<div class=\"selected-photos-count flex-row\">\n\t\t\t\t<div class=\" flex-column\" >\n\t\t\t\t\t<span class=\"label-2\"> Selected photos ({{ photoArray.length }}/3)</span>\n\t\t\t\t\t<span class=\"img-specification\">Required photo parameters: landscape orientation, W 400x H 225 pixels, format PNG or WEBP</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"uploaded-photos flex-row\">\n\t\t\t\t<div class=\"flex-column\" *ngFor=\"let photo of  photoArray; let i = index;\">\n\t\t\t\t\t<div class=\"image flex-row\" >\n\t\t\t\t\t\t<img class=\"\" [src]=\"photo.path + timestamp(photo)\" style=\"width: 283px;height: 200px;\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"image-details flex-column\">\n\t\t\t\t\t\t<span class=\"label-2\">Room photo #{{i+1}}</span>\n\t\t\t\t\t\t<span >{{ room.email.split('@')[0] }}-part-{{i+1}}.png </span>\n\t\t\t\t\t\t<span >Ratio: 400x225</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex-row img-action\">\n\t\t\t\t\t\t<input type=\"file\" class=\"file-input\" (change)=\"onFileSelected($event, i)\" #fileUpload style=\"display: none;\" [accept]=\"requiredFileType\" >\n\t\t\t\t\t\t<button mat-icon-button (click)=\"fileUpload.click()\">\n\t\t\t\t\t\t\t<img  src=\"assets/icon/reload.svg\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button mat-icon-button name=\"deletePhoto\" (click)=\"photoArray.splice(i, 1); photoUploadArray.splice(i, 1)\">\n\t\t\t\t\t\t\t<img src=\"assets/icon/delete-photo.svg\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"photoArray.length < 3\" class=\"flex-column flex-center drag-drop-placeholder\" fileDragDrop (filesChangeEmiter)=\"onFileSelected($event)\">\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"flex-row flex-center label-3\">\n\t\t\t\t\t\tDrag & drop or\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-row flex-center\">\n\t\t\t\t\t\t<input type=\"file\" class=\"file-input\" (change)=\"onFileSelected($event)\" #fileUpload style=\"display: none;\" multiple [accept]=\"requiredFileType\">\n\t\t\t\t\t\t<button mat-button class=\"transparent-btns \" name=\"drag-drop-photos\"  (click)=\"fileUpload.click()\">Choose files</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class=\"footer flex-column\">\n\t\t\t\t<div class=\"uploading-progress flex-column\" [ngClass]=\"{'uploading-error' : uploadError }\"  >\n\t\t\t\t\t<div class=\" flex-column status\" *ngIf=\"uploadProgress\">\n\t\t\t\t\t\t<span>{{uploadingStatus}}</span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<mat-progress-bar class=\"progress-bar\" mode=\"determinate\" [value]=\"uploadProgress\" *ngIf=\"uploadProgress\"></mat-progress-bar>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\n\t\t\t\t\t<div class=\"flex-row\" *ngIf=\"uploadError\">\n\t\t\t\t\t\t<img class=\"\" src=\"assets/icon/S-ban.svg\" />\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{failedNo}} Photo failed to upload successfully. Please try again.\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<div class=\"flex-row flex-row-end\">\n\t\t\t\t\t<button mat-button  class=\"primary\" name=\"upload\" [disabled]=\"photoUploadArray.length < 1\"  (click)=\"upload()\"> Upload </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n   \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RoomAdminComponent } from './room-admin.component';\nimport { RoomDetailsWrapperComponent } from './room-details/room-details-wrapper.component';\n\nconst routes: Routes = [\n  { path: '',\n    children: [\n      { path: '', component: RoomAdminComponent },\n      {\n        path: 'room-details', \n        component: RoomDetailsWrapperComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoomAdminRoutingModule { }\n\n\n","import {\n    Component,\n    Input,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    DEFAULT_BOOKING_DURATION,\n    rulesForSpace,\n    SpacesService,\n    User,\n} from '@mckinsey-converge/data-common';\nimport {\n    OrganisationService,\n    ApplicationService,\n    BuildingLevel,\n} from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ, toMiddayUTC } from '@mckinsey-converge/date-tz';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { Space } from '@mckinsey-converge/data-common';\nimport { first, take } from 'rxjs/operators';\nimport { Identity, BaseDirective, closestToTimeSlotTz } from '@mckinsey-converge/base';\nimport { Store } from '@ngrx/store';\nimport { selectCurrentUser, UserStoreState } from '@mckinsey-converge/user';\nimport { RoomAdminService } from './services/room-admin.service';\nimport jsPDF, { RGBAData } from 'jspdf';\nimport { Hash } from 'crypto';\n\n@Component({\n    selector: 'app-room-admin',\n    templateUrl: './room-admin.component.html',\n    styleUrls: ['./room-admin.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoomAdminComponent extends BaseDirective implements OnInit {\n    public spaces: Space[] = [];\n    public newArr: any[];\n    public location: string;\n    public isOpen = false;\n\n    public itemsCheckboxes = [\n        {\n            label: '',\n            checked: false,\n            id: '',\n            building_id: '',\n            name: '',\n            email: '',\n            roomname: '',\n            isLevel: false,\n        },\n    ];\n\n    public qrCodeUrls = [];\n\n    public selectAll: boolean = false;\n\n    public allLevels: any; //need this for populating levels in bulk-qr-overlay component\n\n    /** DateTZ object of the active date */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n\n    /** ID of the active level */\n    @Input() public level: string;\n\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    /** ID of the currently selected level */\n    public active_level = '';\n\n    /** List of legend keys to show */\n    public legend_list: string[] = [];\n\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true },\n    ];\n\n    public detailsViewIndex = 0;\n\n    public rowInfo = [];\n\n    public has_access: boolean;\n    currentUser: User;\n    public enableOverlay = false;\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _booking_state_service: BookingStateService,\n        private store: Store,\n        private cdref: ChangeDetectorRef,\n        private roomAdminService: RoomAdminService\n    ) {\n        super();\n    }\n\n    public eventFromChild(data: number) {\n        this.detailsViewIndex = data;\n    }\n\n    public passRowToDetailsView(data: []) {\n        this.rowInfo = data;\n    }\n\n    public returnToRoomAdmin(data: number) {\n        this.detailsViewIndex = data;\n        this.updatePayload();\n        this.cdref.detectChanges();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Room Administration';\n\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                // Init dateTz here once the organization data is loaded.\n                this.dateTz = new DateTZ({\n                    date: this.dateTz.ms,\n                    is_local_tz: false,\n                    building_tz: this.timezone,\n                });\n                this.legend_list = this.legend_keys.map((item) => `${item.id}`);\n                this.subscription(\n                    'building',\n                    this._org.listen('active_building').subscribe(() => {\n                        // Update dateTz here when the building is changed.\n                        this.dateTz = new DateTZ({\n                            date: this.dateTz.ms,\n                            is_local_tz: false,\n                            building_tz: this.timezone,\n                        });\n                        const building = this._org.building;\n                        this.has_access = building ? true : false;\n                        if (!this.has_access) {\n                            return;\n                        }\n\n                        /* istanbul ignore else */\n                        if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                            this.active_level = building?.levels[0]?.id;\n                            this.updateLevel();\n                        }\n                        this.updateLevel();\n                        this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                            building.levels\n                        );\n                        this.levels.sort((a, b) =>\n                            b.name.localeCompare(a.name, undefined, {\n                                numeric: true,\n                                ignorePunctuation: true,\n                            })\n                        );\n                        this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                            this._org.space_types\n                        );\n                    })\n                );\n            });\n        });\n    }\n\n    public updateLevel() {\n        this._booking_state_service.setZone(this.active_level || this._org.building.id);\n        this.enableOverlay = true;\n        this._spaces.queryRooms({zone_ids: this._org.building.id }).subscribe(\n            (res) => {\n                const list = res.map((i) => this._spaces.process(i));\n                this._router.navigate(['/room-admin']);\n                this.detailsViewIndex = 0;\n                this.updatePayload([...list]);\n            });\n    }\n\n    public updatePayload(spaces?) {\n        const zone_id = !this.level ? this._org.building.id : this.level;\n        /** TO DO : remove _space.filter use  */\n        this.spaces =  spaces ? [...spaces] : this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n        this.location = this._org.building.name;\n        const roomDataSource = [];\n        for (let i = 0; i < this.spaces.length; i++) {\n            if (this.spaces[i].map_id) {\n\n                roomDataSource.push({\n                    roomname: this.spaces[i].local_name,\n                    roomnum: this.spaces[i].map_id,\n                    level: this.spaces[i].level.short_name,\n                    capacity: this.spaces[i].capacity,\n                    roomtype: this.spaces[i].internal_or_external,\n                    bookable: this.spaces[i].bookable,\n                    settings: this.spaces[i].settings,\n                    equipment: this.spaces[i]?.equipment,\n                    room_style: this.spaces[i]?.room_style,\n                    email: this.spaces[i].email,\n                    roomobject: this.spaces[i],\n                    id: this.spaces[i].id,\n                    building: this.spaces[i].building,\n                });\n            }\n        }\n\n        this.newArr = [...roomDataSource]; // to make sure tabe is up to date\n\n        let checkedFlag = { checked: false };\n        this.itemsCheckboxes = this.newArr.map((item) => {\n            return { ...item, ...checkedFlag };\n        });\n        this.allLevels = this._org.building.levels;\n        this.enableOverlay = false;\n        this.cdref.detectChanges();\n    }\n\n    public get timezone() {\n        return this._org.building?.timezone || localStorage.getItem('CONCIERGE.timezone');\n    }\n\n    public bg_click_close() {\n        this.isOpen = false;\n        this.qrCodeUrls = [];\n        this.itemsCheckboxes.forEach((checkbox) => (checkbox.checked = false));\n        this.cdref.detectChanges();\n    }\n\n    public onQrCodeUrlsChange(newUrls: any[]) {\n        this.qrCodeUrls = newUrls;\n    }\n\n    public downloadQrCode() {\n        /**\n         * Use the same array of selected rooms/levels for qr code to iterate\n         */\n        this.roomAdminService.doc = new jsPDF();\n        let isRoom: boolean;\n        this.qrCodeUrls.forEach((item, i) => {\n            // Get the generated QR code img and modifiy as per design\n            const qrcode = document.querySelector(`.qr-code${i} img`);\n            let imageData: any = null;\n            if (item.roomname) {\n                isRoom = true;\n                imageData = this.roomAdminService.drawCanvas(qrcode, item.roomname, false, item.level); // roomname should be room name for rooms or [Level <no>] for levels\n            } else if (item.name) {\n                isRoom = false;\n                imageData = this.roomAdminService.drawCanvas(qrcode, item.name, true, ''); // roomname should be room name for rooms or [Level <no>] for levels\n            }\n            // Add generated qr code image to the pdf\n            switch ((i + 1) % 4) {\n                case 1:\n                    this.roomAdminService.doc.addImage(imageData, 'JPEG', 3, 5, 100, 100);\n                    break;\n                case 2:\n                    this.roomAdminService.doc.addImage(imageData, 'JPEG', 107, 5, 100, 100);\n                    break;\n                case 3:\n                    this.roomAdminService.doc.addImage(imageData, 'JPEG', 3, 130, 100, 100);\n                    break;\n                case 0:\n                    this.roomAdminService.doc.addImage(imageData, 'JPEG', 107, 130, 100, 100);\n                    this.roomAdminService.doc.addPage();\n                    break;\n            }\n        });\n        this.roomAdminService.doc.save(`${this.location} - ${isRoom ? `rooms.pdf` : `levels.pdf`}`);\n    }\n}\n","<div class=\"room-admin\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <div class=\"right-panel\">\n            <div class=\"overflow-bg\">\n                <div class=\"white-bg\">\n                    <div class=\"backoffice\">\n                        <img class=\"backoffice-img\" src=\"assets/img/backoffice-converge.svg\" />\n                    </div>\n                    <p class=\"heading\">Room Administration</p>\n                    <div>\n                        <hr class=\"hr\" />\n                    </div>\n                </div>\n            </div>\n            <div class=\"showing-rooms-and-qr\">\n                <p class=\"description\">Showing {{ this.location }} Rooms ({{ newArr?.length }})</p>\n                <!-- This button triggers the overlay and is it's origin -->\n                <button\n                    (click)=\"isOpen = !isOpen\"\n                    type=\"button\"\n                    cdkOverlayOrigin\n                    #trigger=\"cdkOverlayOrigin\"\n                    class=\"qr-button\"\n                >\n                    <ng-container *ngIf=\"isOpen; else closedState\">\n                        <img src=\"assets/img/bulk-qr-selected.svg\" />\n                    </ng-container>\n                    <ng-template #closedState>\n                        <img src=\"assets/img/bulk-qr-unselected.svg\" />\n                    </ng-template>\n                </button>\n                <!-- This template displays the overlay content and is connected to the above button -->\n                <ng-template\n                    cdkConnectedOverlay\n                    [cdkConnectedOverlayOrigin]=\"trigger\"\n                    [cdkConnectedOverlayOpen]=\"isOpen\"\n                    [cdkConnectedOverlayHasBackdrop]=\"isOpen\"\n                    [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop-cs'\"\n                    (backdropClick)=\"bg_click_close()\"\n                >\n                    <div class=\"qr-overlay\">\n                        <app-bulk-qr-overlay\n                            [isOpen]=\"isOpen\"\n                            [itemsCheckboxes]=\"itemsCheckboxes\"\n                            [qrCodeUrls]=\"qrCodeUrls\"\n                            [selectAll]=\"selectAll\"\n                            (selectItemChange)=\"onSelectItemChange($event)\"\n                            (selectAllChange)=\"onSelectAllChange($event)\"\n                            (downloadQrCodeRequested)=\"downloadQrCode()\"\n                            (cancelClick)=\"bg_click_close()\"\n                            [newArr]=\"newArr\"\n                            [allLevels]=\"allLevels\"\n                            (qrCodeUrlsChange)=\"onQrCodeUrlsChange($event)\"\n                            ></app-bulk-qr-overlay>\n                    </div>\n                </ng-template>\n            </div>\n            <app-rooms-table\n                *ngIf=\"newArr\"\n                [inputValue]=\"newArr\"\n                (onDetailsClick)=\"eventFromChild($event)\"\n                (rowClicked)=\"passRowToDetailsView($event)\"\n            ></app-rooms-table>\n        </div>\n    </div>\n\n    <div class=\"spinner-overlay\" [ngClass]=\"{ 'enable-overlay': enableOverlay }\"></div>\n\t<mat-spinner class=\"spinner-admin\" [ngClass]=\"{ 'enable-overlay': enableOverlay }\"></mat-spinner>\n</div>\n\n<div class=\"qrcodeImage flex-row\" *ngFor=\"let item of qrCodeUrls; let i = index\">\n    <qrcode\n        [qrdata]=\"item.url\"\n        [allowEmptyString]=\"true\"\n        [alt]=\"'A custom alt attribute'\"\n        [ariaLabel]=\"'QR Code image with the following content...'\"\n        [cssClass]=\"'qr-code' + i + ' unique-class'\"\n        [colorDark]=\"'#051C2C'\"\n        [colorLight]=\"'#FFFFFF'\"\n        [elementType]=\"'img'\"\n        [errorCorrectionLevel]=\"'M'\"\n        [margin]=\"3\"\n        [scale]=\"1\"\n        [title]=\"'A custom title attribute'\"\n        [width]=\"225\"\n        [ngStyle]=\"{ display: 'none' }\"\n    ></qrcode>\n</div>\n","import {  NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoomAdminRoutingModule } from './room-admin-routing.module';\nimport { RoomAdminComponent } from './room-admin.component';\nimport { SharedContentModule } from '../shared/shared.module';\nimport { RoomsTableComponent } from './rooms-table/rooms-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { OverlayModule} from '@angular/cdk/overlay';\nimport { MatTabsModule} from '@angular/material/tabs';\nimport { RoomAdminService } from './services/room-admin.service';\nimport { BulkQrOverlayComponent } from './bulk-qr-overlay/bulk-qr-overlay.component';\nimport { IconComponent, LegacyUiModule } from '@mckinsey-converge/legacy-ui';\nimport { UiModule } from '@mckinsey-converge/ui';\nimport { RoomDetailsWrapperComponent } from './room-details/room-details-wrapper.component';\nimport { ManagePhotosComponent } from './manage-photos/manage-photos.component';\nimport {  ResizeService, ReadLocalPicService } from './services/';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { ComposerModule } from '@placeos/composer';\nimport { FileDragNDropDirective } from './util/file-drag-n-drop.directive';\n\n\n\n@NgModule({\n  declarations: [RoomAdminComponent, RoomsTableComponent, RoomDetailsComponent, RoomDetailsWrapperComponent, BulkQrOverlayComponent, ManagePhotosComponent, FileDragNDropDirective],\n  imports: [\n    CommonModule,\n    RoomAdminRoutingModule,\n    SharedContentModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatExpansionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    QRCodeModule,\n    LegacyUiModule,\n    OverlayModule,\n    MatTabsModule,\n    UiModule,\n    LegacyOverlaysModule,\n    MatProgressBarModule,\n    ComposerModule\n  ],\n  providers: [\n    ResizeService,\n    ReadLocalPicService,\n    RoomAdminService\n  ],\n})\nexport class RoomAdminModule { }\n","import {\n    Component,\n    OnInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'room-details-wrapper',\n    template: `\n                <div class=\"room-admin\">\n                    <a-sidebar></a-sidebar>\n    \n                    <div class=\"right-panel details-view\" >\n                        <div class=\"overflow-bg\">\n                            <div class=\"white-bg\">\n                                <div class=\"backoffice\">\n                                    <img class=\"backoffice-img\" src=\"assets/img/backoffice-converge.svg\"/>\n                            </div>\n                            <p class=\"breadcrumb\"><a (click)=\"getToRoomList()\">Room Administration</a> > Room Detail</p>\n                            <p class=\"heading\">Room detail</p>\n                            <div>\n                                <hr class=\"hr\"/>\n                            </div>\n                        </div>\n                            <app-room-details [rowInfo]=\"rowInfo\" ></app-room-details>\n                        </div>\n                    </div>\n                </div>  \n                `,\n    styleUrls: ['./room-details-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoomDetailsWrapperComponent implements OnInit {\n    public rowInfo: any;\n   \n\n\n    constructor(\n        private cd: ChangeDetectorRef,\n        private _router: Router,\n    ) {\n        if(this._router.getCurrentNavigation() !== null && this._router.getCurrentNavigation().extras['state']?.details) {\n           this.rowInfo = this._router.getCurrentNavigation().extras['state']?.details;\n        }\n        else {\n            this._router.navigate(['room-admin']);\n        }\n    }\n\n    public ngOnInit(): void {\n       this.cd.detectChanges();\n    }\n\n    public getToRoomList() {\n        this._router.navigate(['room-admin'])\n    }\n\n}","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SpacesService, noWhitespaceValidator, OrganisationService, SpaceEquipments, SpaceStyles, setupRoomImages } from '@mckinsey-converge/data-common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DropdownOpion, CngSelectData } from '@mckinsey-converge/ui';\nimport { roomTypeOptions, roomSubsetOptions, roomVisibilityOptions, canteringAvailabilityOptions, room, RoomSubset } from '../util/room-admin-utility';\nimport jsPDF from 'jspdf';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ManagePhotosComponent } from '../manage-photos/manage-photos.component';\nimport { BaseDirective, DialogEvent, SpaceImageObject } from '@mckinsey-converge/base';\nimport { BehaviorSubject } from 'rxjs';\n\n\n\n@Component({\n    selector: 'app-room-details',\n    templateUrl: './room-details.component.html',\n    styleUrls: ['./room-details.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoomDetailsComponent extends BaseDirective  implements OnInit {\n    public reactiveForm: FormGroup;\n    public room: room;\n    public rowInfoData: any;\n    public doc: jsPDF;\n    public cityname: string;\n\n    public roomTypeDD: CngSelectData;\n    public roomSubsetDD: CngSelectData;\n    public roomVisibilityDD: CngSelectData;\n    public canteringAvailabilityDD: CngSelectData;\n\t\tpublic givenRoomType: any = 'internal';\n\t\tpublic givenRoomSubType: any = 'conference';\n\t\tpublic givenCateringAvailability: any;\n\t\tpublic uploadedPhotos : Array<any> = [];\n\t\tpublic roomSubsetOptions:RoomSubset;\n\n    @Input() set rowInfo(value: any) {\n        this.rowInfoData = value;\n    }\n    @Input() set location(value: string) {\n        this.cityname = value;\n    }\n\n    @Output('parentFun') parentFun: EventEmitter<any> = new EventEmitter<any>();\n\t\tpublic loadImages = new BehaviorSubject<SpaceImageObject[]>([]);\n\n    public disableButtons = false;\n    public enableOverlay = false;\n    public windowLocation = location;\n\n\n\t\t// Set to a config once we know where the files are hosted.\n    public rootFolderURL = 'assets/img/rooms/';\n\t\tpublic foundImages: SpaceImageObject[] = [];\n\t\tpublic roomImages: SpaceImageObject[] = [];\n\n\n\t\tpublic get roomImagesFileSlug(): string {\n\t\t\treturn this.rowInfoData.email.split('@')[0];\n\t\t}\n\n    constructor(\n        private _spaces: SpacesService,\n        private cd: ChangeDetectorRef,\n        private _snackBar: MatSnackBar,\n        private _router: Router,\n\t\t\t\tprivate _dialog: MatDialog,\n\t\t\t\tprivate cdRef: ChangeDetectorRef,\n\t\t\t\tprivate _org:OrganisationService\n    ) {\n\t\t\t\tsuper();\n        this.room = {} as room;\n    }\n\n    public ngOnInit(): void {\n        this.doc = new jsPDF();\n        history.pushState({}, '');\n\n        this.cityname = this?.rowInfoData?.building?.city;\n\n\t\t\t\tconst internalSubSet: DropdownOpion[] = this._org.getRoomTypeSubsetDDOptions('internal_room_types');\n\t\t\t\tconst externalSubset: DropdownOpion[] = this._org.getRoomTypeSubsetDDOptions('external_room_types');\n\t\t\t\tthis.roomSubsetOptions = {internal: internalSubSet, external: externalSubset};\n\n\t\t\t\tconst internal_or_external = this.rowInfoData?.roomobject?.internal_or_external; // ( this.rowInfoData?.roomobject?.filters?.external ? 'external' : 'internal') || this.rowInfoData?.settings;\n\n\t\t\t\tif(internal_or_external) {\n\t\t\t\t\tthis.givenRoomType =    typeof(internal_or_external) === 'string'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? internal_or_external\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: typeof(internal_or_external.value) === 'string'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? internal_or_external.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: internal_or_external.value.value;  // temporary fix\n\t\t\t\t}\n\t\t\t\tconst roomSubType = this.rowInfoData?.roomobject?.room_type;\n\t\t\t\tthis.givenRoomSubType = Array.isArray(roomSubType) && roomSubType.length\n\t\t\t\t\t\t\t\t\t\t?  roomSubType[0]\n\t\t\t\t\t\t\t\t\t\t: Array.isArray(roomSubType) && !roomSubType.length\n\t\t\t\t\t\t\t\t\t\t? 'conference'\n\t\t\t\t\t\t\t\t\t\t: roomSubType  || 'conference';\n\t\t\t\tthis.givenCateringAvailability = this.rowInfoData?.roomobject?.filters?.catering ? 'yes-onsite' : 'no';\n\n\n\t\t\t\tthis.rowInfoData && this.setAllDropdowns(this.rowInfoData);\n\n\n        this.reactiveForm = new FormGroup({\n\n            roomname: new FormControl(this.rowInfoData.roomname, [\n                Validators.required,\n                Validators.maxLength(250),\n                Validators.minLength(1),\n                Validators.pattern('[^=`~!#$%*{};\\'\"]*'),\n                noWhitespaceValidator,\n            ]),\n\n            city: new FormControl({ value: this.cityname, disabled: true }, []),\n            level: new FormControl({ value: this.rowInfoData.level, disabled: true }, []),\n            roomnumber: new FormControl({ value: this.rowInfoData.roomnum, disabled: true }, []),\n\n\n\n\n            internal_or_external: new FormControl( this.givenRoomType , []),\n\t\t\t\t\t\troom_type: new FormControl( this.givenRoomSubType, [] ),\n\n            capacity: new FormControl(this.rowInfoData.capacity.toString(), [\n                Validators.required,\n                Validators.maxLength(250),\n                Validators.pattern(/^(?!0+$)[0-9]{1,10}$/),\n            ]),\n\n\n            roomvisibility: new FormControl(this.rowInfoData.bookable),\n\t\t\t\t\t\tcatering: new FormControl(this.rowInfoData?.roomobject?.filters?.catering || false),\n\n\t\t\t\t\t\t// equipment_code === booking charge code ! if possible change equipment_code key to booking_charge_code\n\t\t\t\t\t\tequipment_code: new FormControl( this.rowInfoData?.roomobject?.filters?.equipment_code || this.rowInfoData?.settings['equipment_code'] || false),\n\t\t\t\t\t\tcharge_code: new FormControl(this.rowInfoData?.roomobject?.filters?.charge_code || this.rowInfoData.settings.charge_code || false),\n\n            vc: new FormControl(this.isFeatureChecked('vc')),\n            conference_phone: new FormControl(this.isFeatureChecked('conference_phone')),\n            wireless_content_sharing: new FormControl( this.isFeatureChecked('wireless_content_sharing')),\n            flipchart: new FormControl(this.isFeatureChecked('flipchart')),\n            glassboard: new FormControl(this.isFeatureChecked('glassboard')),\n            whiteboard: new FormControl(this.isFeatureChecked('whiteboard')),\n            natural_light: new FormControl(this.isFeatureChecked('natural_light')),\n            boardroom: new FormControl(this.isFeatureChecked('boardroom')),\n            cocktail: new FormControl(this.isFeatureChecked('cocktail')),\n            theatre: new FormControl(this.isFeatureChecked('theatre')),\n            workshop: new FormControl(this.isFeatureChecked('workshop')),\n            u_shape: new FormControl(this.isFeatureChecked('u_shape')),\n            miscellaneous: new FormControl(this.isFeatureChecked('miscellaneous')),\n        });\n\n\n\t\t\t\t\tsetupRoomImages(this, [1,2,3], this.rootFolderURL, this.roomImagesFileSlug);\n\n\t\t\t\t\tthis.subscription(\n\t\t\t\t\t\t'found_images',\n\t\t\t\t\t\tthis.loadImages.subscribe((imgArr: SpaceImageObject[]) => {\n\t\t\t\t\t\t\tthis.roomImages = imgArr;\n\t\t\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t\t\t}));\n\n    }\n\n\n\n    public isFeatureChecked(param: string) {\n        switch (param) {\n            case 'vc': {\n                return this.rowInfoData['equipment']?.includes(param) || this.rowInfoData.roomobject['filters']?.vc;\n            }\n            case 'natural_light': {\n                return this.rowInfoData.roomobject['filters']?.natural_light || this.rowInfoData['settings']?.natural_light;\n            }\n            default: {\n                const { extra_features } = this.rowInfoData['settings'];\n                return extra_features && extra_features?.includes(param) || this.rowInfoData['equipment']?.includes(param) || this.rowInfoData['room_style']?.includes(param);\n            }\n        }\n    }\n\n    get capacity() {\n\t\t\treturn this.reactiveForm.get('capacity');\n    }\n\n    get roomname() {\n\t\t\treturn this.reactiveForm.get('roomname');\n    }\n\n    public onSubmit(formValue: any) {\n\t\t\tlet roomObject = Object.assign({}, this.rowInfoData.roomobject);\n\n\t\t\tconst allowed_keys = [\n\t\t\t\t\t'edge_id',\n\t\t\t\t\t'name',\n\t\t\t\t\t'description',\n\t\t\t\t\t'email',\n\t\t\t\t\t'equipment',\n\t\t\t\t\t'capacity',\n\t\t\t\t\t'filters',\n\t\t\t\t\t'features',\n\t\t\t\t\t'bookable',\n\t\t\t\t\t'installed_ui_devices',\n\t\t\t\t\t'zones',\n\t\t\t\t\t'modules',\n\t\t\t\t\t'room_type',\n\t\t\t\t\t'room_style',\n\t\t\t\t\t'settings',\n\t\t\t\t\t'created_at',\n\t\t\t\t\t'support_url',\n\t\t\t\t\t'version',\n\t\t\t\t\t'id',\n\t\t\t];\n\n\t\t\t// this is to filter unwanted keys and make the request body match room model\n\t\t\troomObject = Object.keys(roomObject)\n\t\t\t\t\t.filter((key) => allowed_keys.includes(key))\n\t\t\t\t\t.reduce((obj, key) => {\n\t\t\t\t\t\t\tobj[key] = roomObject[key];\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t}, {});\n\n\n\t\t\troomObject.settings.room_name = formValue.roomname;\n\t\t\troomObject.simple_name = formValue.roomname;\n\n\t\t\tif(formValue.internal_or_external) {\n\t\t\t\troomObject.settings.internal_or_external = formValue.internal_or_external;\n\t\t\t\troomObject.filters['external'] = formValue.internal_or_external === 'external';\n\t\t\t}\n\t\t\troomObject.room_type = formValue.room_type;\n\t\t\troomObject.capacity = parseInt(formValue.capacity);\n\n\t\t\troomObject.bookable = formValue.roomvisibility;\n\t\t\troomObject.settings['equipment_code'] = formValue.equipment_code;\n\t\t\troomObject.filters['equipment_code'] = formValue.equipment_code;\n\n\t\t\troomObject.settings['catering'] = formValue.catering\n\t\t\troomObject.filters['catering'] = formValue.catering;\n\t\t\troomObject.settings['charge_code'] = formValue.charge_code;\n\t\t\troomObject.filters['charge_code'] = formValue.charge_code;\n\n\n\n\t\t\t// roomObject.features = getExtraFeatures();\n\t\t\troomObject.settings.extra_features = getExtraFeatures();\n\t\t\troomObject.filters.vc = formValue.vc;\n\t\t\troomObject.settings.vc = formValue.vc;\n\t\t\troomObject.settings.natural_light = formValue.natural_light;\n\t\t\troomObject.filters['natural_light'] = formValue.natural_light;\n\n\t\t\tfunction getExtraFeatures() {\n\t\t\t\t\tconst excludeFromExtraFeatures = ['capacity','charge_code','internal_or_external', 'roomvisibility', 'roomname', 'equipment_code', 'catering', 'room_type'];\n\t\t\t\t\tlet features = '';\n\n\t\t\t\t\tObject.keys(formValue).forEach((element) => {\n\t\t\t\t\t\t\tconst isEqAndDetail = formValue[element];\n\t\t\t\t\t\t\t// console.log(SpaceEquipments[element]);\n\t\t\t\t\t\t\tif (!excludeFromExtraFeatures.includes(element) && isEqAndDetail) {\n\t\t\t\t\t\t\t\t\tfeatures += ` ${element}`;\n\n\t\t\t\t\t\t\t\t\tif(SpaceEquipments[element]!==undefined && !roomObject?.equipment.includes(element) ) {\n\t\t\t\t\t\t\t\t\t\troomObject?.equipment.push(element);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t else if( SpaceStyles[element]!==undefined && !roomObject?.room_style.includes(element) ){\n\t\t\t\t\t\t\t\t\t\t  roomObject.room_style.push(element);\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t} else if(!isEqAndDetail) {\n\t\t\t\t\t\t\t\troomObject.features = roomObject.features.replace(element, '');\n\t\t\t\t\t\t\t\troomObject.equipment = SpaceEquipments[element]!==undefined ? roomObject.equipment.filter((value)=>value!=element) : roomObject.equipment;\n\t\t\t\t\t\t\t\troomObject.room_style = SpaceStyles[element]!==undefined ? roomObject.room_style.filter((value)=>value!=element) : roomObject.room_style;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn features;\n\t\t\t}\n\n\t\t\tconst body = roomObject;\n\n\t\t\tif (this.reactiveForm.invalid) {\n\t\t\t\t\tfor (const control of Object.keys(this.reactiveForm.controls)) {\n\t\t\t\t\t\t\tthis.reactiveForm.controls[control].markAsTouched();\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\tthis.disableButtons = true;\n\t\t\t\t\tthis.enableOverlay = true;\n\n\t\t\t\t\tthis._spaces.updateSpace(this.rowInfoData.id, body).subscribe(\n\t\t\t\t\t\t\t(data: any) => {\n\t\t\t\t\t\t\t\t\tthis.updateAllRooms(); // TO DO: this call enabled to pull all updated rooms to use on day/week view, In future remove this call here and day/week view should handle it there\n\t\t\t\t\t\t\t\t\tthis.disableButtons = false;\n\t\t\t\t\t\t\t\t\tthis.enableOverlay = false;\n\t\t\t\t\t\t\t\t\tthis.reactiveForm.markAsPristine();\n\t\t\t\t\t\t\t\t\tthis.cd.markForCheck();\n\t\t\t\t\t\t\t\t\tthis._snackBar.open('Operation Successful!', 'Close', {\n\t\t\t\t\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\t\t\t\t\tpanelClass: ['room-admin-toast'],\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(err: any) => {\n\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\tthis._snackBar.open('There was an error', 'Close', { duration: 3000 });\n\t\t\t\t\t\t\t\t\tthis.disableButtons = false;\n\t\t\t\t\t\t\t\t\tthis.enableOverlay = false;\n\t\t\t\t\t\t\t\t\tthis.cd.markForCheck();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tthis.room = this.reactiveForm.value;\n    }\n\n    public updateAllRooms(): void {\n        this._spaces.query().then(() => { }).catch(() => {});\n    }\n\n    public onCancel() {\n\t\t\tthis._router.navigate(['room-admin']);\n    }\n\n\n\n\n\t\tpublic setAllDropdowns(rowInfoData) {\n\t\t\t// const {internal_or_external} = rowInfoData?.settings;\n\t\t\t// const roomType =  typeof(internal_or_external) === 'string' ? internal_or_external : internal_or_external.value;\n\n\t\t\tthis.roomTypeDD = {\n\t\t\t\tddBoxClass: 'room-type',\n\t\t\t\toptions: roomTypeOptions,\n\t\t\t\tdefaultSelected: roomTypeOptions.filter(el => el.value ===  this.givenRoomType )[0],\n\t\t\t\tonChangeCallback: this.roomTypeChanged.bind(this)\n\t\t\t};\n\n\t\t\tthis.roomSubsetDD = {\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tddBoxClass: 'room-subset',\n\t\t\t\t\toptions: this.roomSubsetOptions[this.roomTypeDD?.defaultSelected?.value.toString()],\n\t\t\t\t\tdefaultSelected: this.roomSubsetOptions[this.roomTypeDD?.defaultSelected?.value.toString()].filter(el => el.value === this.givenRoomSubType )[0],\n\t\t\t\t\tonChangeCallback: this.roomTypeSubsetChanged.bind(this)\n\t\t\t};\n\n\t\t\tthis.roomVisibilityDD = {\n\t\t\t\t\tddBoxClass: 'room-visibility',\n\t\t\t\t\toptions: roomVisibilityOptions,\n\t\t\t\t\tdefaultSelected: roomVisibilityOptions.filter(el => el.value === rowInfoData?.bookable.toString())[0],\n\t\t\t\t\tonChangeCallback: this.roomVisibilityChanged.bind(this)\n\t\t\t};\n\n\t\t\tthis.canteringAvailabilityDD = {\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tddBoxClass: 'catering-availability',\n\t\t\t\t\toptions: canteringAvailabilityOptions,\n\t\t\t\t\tdefaultSelected: canteringAvailabilityOptions.filter(el => el.value === this.givenCateringAvailability )[0],\n\t\t\t\t\tonChangeCallback: this.roomCateringChanged.bind(this)\n\t\t\t};\n\t\t}\n\n    /**\n\t * store selected border by sorting method and apply to\n\t * @param sortingValue\n\t */\n\tpublic roomTypeChanged(type: DropdownOpion) {\n\t\t\tthis.reactiveForm.controls.internal_or_external.setValue(type.value);\n\t\t\tthis.reactiveForm.markAsDirty();\n\n\t\t\tif(!this.roomSubsetDD.disabled) {\n\t\t\t\tthis.roomSubsetDD.options = this.roomSubsetOptions[type.value.toString()];\n        this.roomSubsetDD.defaultSelected = type.value === this.givenRoomType ? this.roomSubsetDD.options.filter(el => el.value ===  this.givenRoomSubType )[0] : this.roomSubsetOptions[type.value.toString()][0];\n\t\t\t\tthis.reactiveForm.controls.room_type.setValue(this.roomSubsetDD.defaultSelected.value);\n\t\t\t}\n\t\t\tthis.reactiveForm.markAsDirty();\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\tpublic roomTypeSubsetChanged(subset: DropdownOpion ) {\n\t\t\t// console.log(subset);\n\t\t\tthis.reactiveForm.controls.room_type.setValue(subset.value);\n\t\t\tthis.reactiveForm.markAsDirty();\n\t}\n\n\tpublic roomVisibilityChanged(visibility: DropdownOpion) {\n\t\tthis.reactiveForm.controls.roomvisibility.setValue(visibility.value==='true');\n\t\tthis.reactiveForm.markAsDirty();\n\t}\n\n\tpublic roomCateringChanged(isCatering: DropdownOpion) {\n\t\tthis.reactiveForm.controls.catering.setValue(!(isCatering.value==='no'));\n\t\tthis.reactiveForm.markAsDirty();\n\t}\n\n    /**\n     * Function drawCanvas - Generate canvas as per required design for QR code\n     * https://mckinsey.atlassian.net/browse/CNG-10\n     * @param img\n     * @returns canvas image\n     */\n    drawCanvas(img): string | HTMLCanvasElement | HTMLImageElement {\n\t\t\t// TO DO : move to enum/utility file, while room detail more editable field developement\n\t\t\tconst width = 500;\n\t\t\tconst height = 550;\n\t\t\tconst arcY = 300;\n\t\t\tconst arc_X_Center = width/2;\n\t\t\tconst otrRadius = arc_X_Center - 2 ;\n\t\t\tconst whtRadius = otrRadius - 12;\n\t\t\tconst innrRadius = otrRadius - 15;\n\n\t\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\t\tcanvas.setAttribute('width', width.toString());\n\t\t\tcanvas.setAttribute('height', height.toString());\n\t\t\tconst ctx = canvas.getContext('2d');\n\n\t\t\tctx.strokeStyle = \"transparent\";\n\t\t\tctx.moveTo(arc_X_Center, 0);\n\t\t\tctx.lineTo(arc_X_Center, height);\n\t\t\tctx.stroke();\n\n\t\t\tctx.font = '14px McKinsey Sans, Helvetica Neue, Arial, sans-serif';\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.fillText(this.rowInfoData?.roomname , arc_X_Center, 20);\n\n\t\t\t//oputer arc\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(arc_X_Center, arcY, otrRadius, 0, 2 * Math.PI);\n\t\t\tctx.fillStyle = '#051C2C';\n\t\t\tctx.fill();\n\t\t\tctx.stroke();\n\n\t\t\t//inner white arc\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(arc_X_Center, arcY, whtRadius, 0, 2 * Math.PI);\n\t\t\tctx.fillStyle = '#FFFFFF';\n\t\t\tctx.fill();\n\t\t\tctx.stroke();\n\n\t\t\t//second inner arc\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(arc_X_Center, arcY, innrRadius, 0, 2 * Math.PI);\n\t\t\tctx.fillStyle = '#051C2C';\n\t\t\tctx.fill();\n\t\t\tctx.stroke();\n\n\t\t\t// header text\n\t\t\tctx.fillStyle = '#FFFFFF';\n\t\t\tctx.font = '44px Bower';\n\t\t\tctx.fillText('Book Me', arc_X_Center, 166);\n\n\t\t\t//centeral rectangle\n\t\t\tctx.fillRect(137, 187, 225, 225);\n\t\t\t//fill central rectangle with color\n\t\t\tctx.fillStyle = '#FFFFFF';\n\n\t\t\t// fill text at the bottom\n\t\t\tctx.font = '29px McKinsey Sans, Helvetica Neue, Arial, sans-serif';\n\t\t\tctx.fillText('in Converge', arc_X_Center, 470);\n\n\t\t\t// draw QR code image into center of canvas\n\t\t\timg !== null && ctx.drawImage(img, 137, 187);\n\n\t\t\t// create data url\n\t\t\tconst dataURL: string | HTMLCanvasElement | HTMLImageElement =\n\t\t\tcanvas.toDataURL('image/png');\n\t\t\treturn dataURL;\n    }\n\n    /**\n     * Function downloadQRPdf\n     * download generated QR code to the local system\n     */\n    public downloadQRPdf(roomid?: string): void {\n        // Get the generated QR code img and modifiy as per design\n        const qrcode = document.querySelector('.qr-code img');\n        let imageData = this.drawCanvas(qrcode);\n        // Add generated qr code image to the pdf\n        this.doc.addImage(imageData, 'JPEG', 3, 5, 100, 100);\n\n\t\t\t\t// this.doc.addImage(imageData, \"JPEG\", 107, 5, 100, 100);\n\t\t\t\t// this.doc.addImage(imageData, \"JPEG\", 3, 130, 100, 100);\n\t\t\t\t// this.doc.addImage(imageData, \"JPEG\", 107, 130, 100, 100);\n        // this.doc.addImage(imageData, \"JPEG\", 10, 10);   // left commented for alignment reference later in future\n        // doc.addPage();\n\t\t\t\t// this.openQRInConverge();\n        this.doc.save(`${this.rowInfoData.id}.pdf`);\n    }\n\n    /**\n     * Not in use but keeping for future use\n     * Function openQRInConverge\n     * Open QR code in seperate tab\n     */\n    public openQRInConverge(): void {\n        const qrcode = document.querySelector('.qr-code img');\n        const dataURL = this.drawCanvas(qrcode);\n        const win = window.open();\n        win &&\n            win.document.write(\n                '<div style=\" height: 100%; flex-direction: row; box-sizing: border-box; display: flex; place-content: flex-start; align-items: flex-start; flex-flow: row wrap; box-sizing: border-box; display: flex;\" >\\\n\t\t\t\t\t\t\t<iframe src=\"' +\n                    dataURL +\n                    '\" frameborder=\"0\" style=\"border:0; width:500px; height:550px; margin:10px 10px 0 0 \" allowfullscreen> </iframe>\\\n\t\t\t\t\t\t</div>'\n            );\n    }\n\n\t\t/** Open modal for adding equipment requirements to booking */\n\t\tpublic openManagePhotosModal() {\n\t\t\tconst equipment_ref = this._dialog.open<ManagePhotosComponent>(ManagePhotosComponent, {\n\t\t\t\tmaxWidth: '95vw',\n\t\t\t\twidth: '70em',\n\t\t\t\tdata: {\n\t\t\t\t\tphotos: this.roomImages,\n\t\t\t\t\troom: this.rowInfoData\n\t\t\t\t\t}\n\t\t\t});\n\t\t\tthis.subscription(\n\t\t\t\t'equipments_modal_events',\n\t\t\t\tequipment_ref.componentInstance.event.subscribe((event: any) => {\n\t\t\t\t\t/* istanbul ignore else */\n\n\t\t\t\t\t\t// this.uploadedPhotos = event;\n\t\t\t\t\t\tsetupRoomImages(this, [1,2,3], this.rootFolderURL, this.roomImagesFileSlug);\n\t\t\t\t\t\t//equipment_ref.close();\n\n\t\t\t\t})\n\t\t\t);\n\t\t\tequipment_ref.afterClosed().subscribe(() => {\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\tthis.unsub('equipments_modal_events')\n\t\t\t});\n\t\t}\n\n\n\t\tpublic get timestamp () {\n\t\t\treturn (new Date()).getTime()\n\t\t}\n\n\n}\n","<form *ngIf=\"reactiveForm\" [formGroup]=\"reactiveForm\" #form=\"ngForm\" (submit)=\"onSubmit(form.value)\">\n\n\t<div class=\"flex-row\">\n\t\t<div class=\"flex-column details\" >\n\t\t\t<div class=\"flex-column form-elements\" >\n\t\t\t\t<label for=\"roomname\">Room name</label>\n\t\t\t\t<input type=\"text\" id=\"roomname\" name=\"roomname\" formControlName=\"roomname\"\n\t\t\t\t\t[class.is-invalid]=\"roomname.invalid && (roomname.dirty || roomname.touched)\" />\n\t\n\t\t\t\t\t<div class=\"roomname-suffix-msg flex-row\">\n\t\t\t\t\t\t<span  [class.err-msg]=\"roomname.invalid && (roomname.dirty || roomname.touched)\" >\n\t\t\t\t\t\t\t{{ \troomname.errors?.required \n\t\t\t\t\t\t\t\t\t\t\t\t? 'This field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t: roomname.errors?.maxlength \n\t\t\t\t\t\t\t\t\t\t\t\t? 'This field must have at most 250 characters' \n\t\t\t\t\t\t\t\t\t\t\t\t: roomname.errors?.pattern \n\t\t\t\t\t\t\t\t\t\t\t  ? 'Some special characters and are not allowed'\n\t\t\t\t\t\t\t\t\t\t\t\t:\troomname.errors?.whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Only spaces are not allowed'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'System generated name '+ roomname.value + ' (can not be changed)' }} \t\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"section-group3\">\n\t\t\t\t<div class=\"flex-row form-elements grp3\" >\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"city\" [class.disabled]=\"reactiveForm?.controls?.city?.disabled\">City</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"city\" name=\"city\" formControlName=\"city\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"level\" [class.disabled]=\"reactiveForm?.controls?.level?.disabled\">Level</label>\n\t\t\t\t\t\t<input formControlName=\"level\" type=\"text\" id=\"level\" name=\"level\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-column room-no flex\">\n\t\t\t\t\t\t<label for=\"roomnumber\" [class.disabled]=\"reactiveForm?.controls?.roomnumber?.disabled\">Room no.</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"roomnumber\" name=\"roomnumber\" formControlName=\"roomnumber\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\n\t\t\t\t<div class=\"flex-row form-elements grp3\" >\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"level\">Room type</label>\n\t\t\t\t\t\t<cng-select [data]=\"roomTypeDD\" ></cng-select>\n\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"level\">Room subset</label>\t\t\n\t\t\t\t\t\t<cng-select [data]=\"roomSubsetDD\" ></cng-select>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-column room-capacity flex\">\n\t\t\t\t\t\t<label for=\"capacity\">Capacity</label>\n\t\t\t\t\t\t<input formControlName=\"capacity\" required minlength=\"1\" maxlength=\"250\" type=\"text\" id=\"capacity\" name=\"capacity\"\n\t\t\t\t\t\t\t[class.is-invalid]=\"capacity.invalid && (capacity.dirty || capacity.touched)\" />\n\t\t\t\t\t\t<div *ngIf=\"capacity.invalid && (capacity.dirty || capacity.touched)\" class=\"err-msg flex-row\">\n\t\t\t\t\t\t\t<span > {{\n\t\t\t\t\t\t\t\t\t\t\t\tcapacity.errors?.required \n\t\t\t\t\t\t\t\t\t\t\t\t? 'This field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t: capacity.errors?.maxlength\n\t\t\t\t\t\t\t\t\t\t\t\t? 'This field must have at most 250 characters'\n\t\t\t\t\t\t\t\t\t\t\t\t: capacity.errors?.pattern \n\t\t\t\t\t\t\t\t\t\t\t\t? 'Zero, letters and special characters are not allowed'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div class=\"section-group2 flex-column\">\n\t\t\t\t<div class=\"flex-row form-elements grp2\" >\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"level\">Room visibility</label>\n\t\t\t\t\t\t<cng-select [data]=\"roomVisibilityDD\" ></cng-select>\n\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t<label for=\"level\">Catering availability</label>\t\t\n\t\t\t\t\t\t<cng-select [data]=\"canteringAvailabilityDD\" ></cng-select>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"flex-row form-elements grp2\" >\n\t\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t\t<mat-slide-toggle  name=\"equipment_code\"  formControlName=\"equipment_code\" ></mat-slide-toggle> <!-- name=\"bookingChargeCode\" -->\n\t\t\t\t\t\t<span class=\"label\" for=\"equipment_code\"> &nbsp; Booking charge code required</span> \n\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t\t\t<mat-slide-toggle name=\"cateringChargeCode\" formControlName=\"charge_code\" ></mat-slide-toggle>\n\t\t\t\t\t\t<span class=\"label\" for=\"cateringChargeCode\"> &nbsp; Catering charge code required</span> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"section-group-accordion\">\n\t\t\t\t<mat-accordion>\n\t\t\t\t\t<mat-expansion-panel>\n\t\t\t\t\t\t<mat-expansion-panel-header>\n\t\t\t\t\t\t\t<mat-panel-title> Room equipment and detail </mat-panel-title>\n\t\t\t\t\t\t</mat-expansion-panel-header>\n\t\t\t\t\t\t<p class=\"mat-panel-heading\">Room Equipment</p>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Video Conference (VC)</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"vc\" formControlName=\"vc\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Conference phone</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"conference_phone\" formControlName=\"conference_phone\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Wireless content sharing</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"wireless_content_sharing\" formControlName=\"wireless_content_sharing\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Flipchart</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"flipchart\" formControlName=\"flipchart\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Glassboard</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"glassboard\" formControlName=\"glassboard\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Whiteboard</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"whiteboard\" formControlName=\"whiteboard\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p class=\"mat-panel-heading\">Room Detail</p>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Room with window only (natural light)</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"natural_light\" formControlName=\"natural_light\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Boardroom room style</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"boardroom\" formControlName=\"boardroom\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Cocktail room style</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"cocktail\" formControlName=\"cocktail\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Theatre room style</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"theatre\" formControlName=\"theatre\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Workshop room style</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"workshop\" formControlName=\"workshop\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>U shape room style</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"u_shape\" formControlName=\"u_shape\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"accordion-row\">\n\t\t\t\t\t\t\t<p>Miscellaneous</p>\n\t\t\t\t\t\t\t<mat-slide-toggle name=\"miscellaneous\" formControlName=\"miscellaneous\"></mat-slide-toggle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</mat-expansion-panel>\n\t\t\t\t</mat-accordion>\n\t\t\t</div>\n\t\t\t\n\t\n\t\t</div>\n\t</div>\n\n\t<button mat-button type=\"submit\"  class=\"primary submit-button\"  [disabled]=\"disableButtons || !reactiveForm.dirty || reactiveForm.invalid\"> Save changes </button>\n\t<button mat-button type=\"button\"  class=\"primary cancel-button\" [disabled]=\"disableButtons || !reactiveForm.dirty || reactiveForm.invalid\" (click)=\"onCancel()\"> Discard changes </button>\n\n\t<div class=\"overlay\" [ngClass]=\"{ 'enable-overlay': enableOverlay }\"></div>\n\t<mat-spinner class=\"spinner\" [ngClass]=\"{ 'enable-overlay': enableOverlay }\"></mat-spinner>\n</form>\n\n<div class=\"qr-section flex-column\">\n\t<div class=\"sub-row srqr\">\n\t\t<span class=\"name\" for=\"roomname\">Room URL</span>\n\t\t<div class=\"staff-url flex-row\">\n\t\t\t<span id=\"roomUrl\">{{ windowLocation.origin }}/staff/#/home?id={{ rowInfoData.id }}</span>\n\t\t\t<a class=\"flex-row\" [href]=\"windowLocation.origin + '/staff/#/home?id=' + rowInfoData.id\" target=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t<app-icon [icon]=\"{ class: 'material-icons', type: 'img', src: './assets/img/Arrow.svg' }\"></app-icon>\n\t\t\t</a>\n\t\t</div>\n\t\t<label class=\"flex-row disabled\" for=\"roomname\" >Room URL is generated automatically and cannot be changed</label>\n\t</div>\n\t<div class=\"qr-footer flex-row\">\n\t\t<button mat-button class=\"qr-inverse\" name=\"PDF\" (click)=\"downloadQRPdf()\">\n\t\t\tDownload QR Code (PDF)\n\t\t</button>\n\t\t<!-- keeping this for future use -->\n\t\t<!-- <button mat-button class=\"qr-inverse\" name=\"tab\" (click)=\"openQRInConverge()\">\n            Open the Room Detail in Converge\n        </button> -->\n\t</div>\n\t<div class=\"qrcodeImage flex-row\">\n\t\t<qrcode [qrdata]=\"windowLocation.origin + '/staff/#/home?id=' + rowInfoData.id\" [allowEmptyString]=\"true\"\n\t\t\t[alt]=\"'A custom alt attribute'\" [ariaLabel]=\"'QR Code image with the following content...'\"\n\t\t\t[cssClass]=\"'qr-code'\" [colorDark]=\"'#051C2C'\" [colorLight]=\"'#FFFFFF'\" [elementType]=\"'img'\"\n\t\t\t[errorCorrectionLevel]=\"'M'\" [margin]=\"3\" [scale]=\"1\" [title]=\"'A custom title attribute'\" [width]=\"225\"\n\t\t\t[ngStyle]=\"{ display: 'none' }\"></qrcode>\n\t</div>\n</div>\n\n<div class=\" main room-photos\" >\n\t<div class=\"section-group4 flex-column \">\n\t\t<div class=\"flex-row\" >\n\t\t\t<div class=\"flex-column \">\n\t\t\t\t<label for=\"level\">Room Photos</label>\n\t\t\t\t<div class=\"flex-row \" *ngIf=\"roomImages.length\" [ngStyle]=\"{'margin-bottom': '15px'}\">\n\t\t\t\t\t\t<div class=\"image flex-row\" *ngFor=\"let photos of roomImages\">\n\t\t\t\t\t\t\t<img class=\"\" [src]=\"photos.path +'?'+ timestamp\" style=\"width: 375px;height: 200px;\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t<button mat-button class=\"admn-btns manage-photos\" [ngClass]=\"{'showing-photos' : uploadedPhotos.length}\" name=\"room-photos\" (click)=\"openManagePhotosModal()\" >Manage Photos</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { Component, OnInit, Input, Injectable } from '@angular/core';\n\n\n// data model \nexport interface RoomsTableItem {\n  roomname: string;\n  roomnum: string;\n  level: string;\n  capacity: number;\n  roomtype: string;\n  bookable: boolean;\n}\n\n// sample data\nconst EXAMPLE_DATA: RoomsTableItem[] = [\n  {\n    roomname: 'test',\n    roomnum: '02',\n    level: '01',\n    capacity: 4,\n    roomtype: 'internal',\n    bookable: true,\n}\n];\n\n/**\n * Data source for the RoomsTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\n\n// convert this class into service and use provider:root\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoomsTableDataSource extends DataSource<RoomsTableItem> {\n  data: RoomsTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n\n  constructor(public datatwo: RoomsTableItem[],\n    ) {\n    super();\n    this.data = datatwo;\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  \n    \n  connect(): Observable<RoomsTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: RoomsTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: RoomsTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'roomname': return compare(a.roomname, b.roomname, isAsc);\n        case 'roomnum': return compare(+a.roomnum, +b.roomnum, isAsc);\n        case 'level': return compare(+a.level, +b.level, isAsc);\n        case 'capacity': return compare(+a.capacity, +b.capacity, isAsc);\n        case 'roomtype': return compare(a.roomtype, b.roomtype, isAsc);\n        case 'bookable': return compare(+a.bookable, +b.bookable, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {\n    AfterViewInit,\n    Component,\n    OnInit,\n    ViewChild,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    Output,\n    EventEmitter,\n    ChangeDetectorRef,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { RoomsTableDataSource, RoomsTableItem } from './rooms-table-datasource';\nimport { first } from 'rxjs/operators';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-rooms-table',\n    templateUrl: './rooms-table.component.html',\n    styleUrls: ['./rooms-table.component.scss'],\n})\nexport class RoomsTableComponent extends BaseDirective implements AfterViewInit, OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    @ViewChild(MatTable) table: MatTable<RoomsTableItem>;\n    dataSource: RoomsTableDataSource;\n\n    constructor(private _org: OrganisationService,\n        private _router: Router,\n        private route: ActivatedRoute,\n        private cdref: ChangeDetectorRef,) {\n        super();\n    }\n\n    public formattedInputValue: [];\n\n    @Input() set inputValue(value: []) {\n        this.formattedInputValue = value;\n    }\n\n    @Output() private onDetailsClick = new EventEmitter<number>();\n\n    @Output() public rowClicked = new EventEmitter<[]>();\n\n    /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n    // tslint:disable-next-line: max-line-length\n    public displayedColumns = [\n        'roomname',\n        'roomnum',\n        'level',\n        'capacity',\n        'roomtype',\n        'bookable',\n        'details',\n    ];\n\n    public detailsViewIndex = 0;\n\n    public _onDetailsClick(index: number) {\n        this.onDetailsClick.emit(index);\n    }\n\n    public ngOnInit() {\n        this.dataSource = new RoomsTableDataSource(this.formattedInputValue);\n    }\n    public ngOnChanges(changes: SimpleChanges): void {\n    //    console.log(changes);\n       this.dataSource = new RoomsTableDataSource(this.formattedInputValue);\n        if(!changes.inputValue.firstChange)    {\n            this.dataSource.sort = this.sort;\n            this.dataSource.paginator = this.paginator;\n            this.table.dataSource = this.dataSource;\n            this.paginator.firstPage();\n            this.cdref.detectChanges();\n        }\n\n    }\n\n    // ngAfterViewInit heavy on performance, figure out api\n    // function that gives callback after html loads\n    // eg, onchange, check mat table documentation\n\n    public ngAfterViewInit() {\n    //     this.dataSource.sort = this.sort;\n    //     this.dataSource.paginator = this.paginator;\n    //     this.table.dataSource = this.dataSource;\n    //     this.paginator.firstPage();\n    }\n\n    public getRecord(row: []) {\n        const navigationExtras = {\n            relativeTo:this.route,\n            skipLocationChange: true ,\n            state: {\n                details: { ...row }\n            }\n        }\n        this._router.navigate(['room-details'], navigationExtras)\n    }\n}\n","<div class=\"mat-elevation-z8 table\">\n    <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n        <!-- Column -->\n        <ng-container matColumnDef=\"roomname\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Room Name</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.roomname }}</td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"roomnum\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Room Number</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.roomnum }}</td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"level\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Level</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.level }}</td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"capacity\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Capacity</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.capacity }}</td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"roomtype\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Room Type</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <span *ngIf=\"row.roomtype == 'internal'; else elseBlock\">Internal</span>\n                <ng-template #elseBlock>External</ng-template>\n            </td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"bookable\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Room visibility</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <span *ngIf=\"row.bookable; else elseBlock\">Bookable</span>\n                <ng-template #elseBlock>Non Bookable</ng-template>\n            </td>\n        </ng-container>\n\n        <!-- Column -->\n        <ng-container matColumnDef=\"details\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <button mat-stroked-button (click)=\"_onDetailsClick(1)\" (click)=\"getRecord(row)\">\n                    View Details\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <mat-paginator\n        #paginator\n        [length]=\"dataSource?.data?.length\"\n        [pageIndex]=\"0\"\n        [pageSize]=\"10\"\n        [pageSizeOptions]=\"[10, 20, 30]\"\n    >\n    </mat-paginator>\n</div>\n","export * from './resize.service';\nexport * from './read-local-pic.service';\n// export * from './room-admin.service';","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ReadLocalPicService {\n  /**\n   * eventErrorDecoder\n   * @param event \n   * @returns errorMessage\n   */\n  private eventErrorDecoder(event: any): string {\n    let errorMessage = null;\n\n    switch (event.target.error.code) {\n      case event.target.error.NOT_FOUND_ERR:\n        errorMessage = 'NOT_FOUND_ERR';\n        break;\n      case event.target.error.SECURITY_ERR:\n        errorMessage = 'SECURITY_ERR';\n        break;\n      case event.target.error.ABORT_ERR:\n        errorMessage = 'ABORT_ERR';\n        break;\n      case event.target.error.NOT_READABLE_ERR:\n        errorMessage = 'NOT_READABLE_ERR';\n        break;\n      case event.target.error.ENCODING_ERR:\n        errorMessage = 'ENCODING_ERR';\n        break;\n      case event.target.error.NO_MODIFICATION_ALLOWED_ERR:\n        errorMessage = 'NO_MODIFICATION_ALLOWED_ERR';\n        break;\n      case event.target.error.INVALID_STATE_ERR:\n        errorMessage = 'INVALID_STATE_ERR';\n        break;\n      case event.target.error.SYNTAX_ERR:\n        errorMessage = 'SYNTAX_ERR';\n        break;\n      case event.target.error.INVALID_MODIFICATION_ERR:\n        errorMessage = 'INVALID_MODIFICATION_ERR';\n        break;\n      case event.target.error.QUOTA_EXCEEDED_ERR:\n        errorMessage = 'QUOTA_EXCEEDED_ERR';\n        break;\n      case event.target.error.TYPE_MISMATCH_ERR:\n        errorMessage = 'TYPE_MISMATCH_ERR';\n        break;\n      case event.target.error.PATH_EXISTS_ERR:\n        errorMessage = 'PATH_EXISTS_ERR';\n        break;\n      default:\n        errorMessage = 'Unknown Error: ' + event.target.error.code;\n        break;\n    }\n    return errorMessage;\n  }\n\n  /**\n   * \n   * @param inputFile \n   * @returns \n   */\n  async readFileInput(inputFile: any): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (!inputFile ) {\n        reject('No file selected');\n      } else {\n        if (\n          !(window.File && window.FileReader && window.FileList && window.Blob)\n        ) {\n          reject('Your browser does not support reading files');\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          resolve(e.target.result);\n        };\n        reader.onabort = (e: any) => {\n          reject(\n            'Failed to convert file to base64img, aborted: ' +\n              this.eventErrorDecoder(e)\n          );\n        };\n        reader.onerror = (e: any) => {\n          reject(\n            'Failed to convert file to base64img, error: ' +\n              this.eventErrorDecoder(e)\n          );\n        };\n\n        reader.readAsDataURL(inputFile);\n      }\n    });\n  }\n\n\n  b64toFile(dataURI): File {\n    // convert the data URL to a byte string\n    const byteString = atob(dataURI.split(',')[1]);\n\n    // pull out the mime type from the data URL\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n    // Convert to byte array\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    // new File\n    // Create a blob that looks like a file.\n    const blob = new File([ab],'room-photo.png', { 'type': mimeString });\n    // blob['lastModifiedDate'] = (new Date()).toISOString();\n    // blob['name'] = 'file';\n        \n    // Figure out what extension the file should have\n    // switch(blob.type) {\n    //     case 'image/jpeg':\n    //         blob['name'] += '.jpg';\n    //         break;\n    //     case 'image/png':\n    //         blob['name'] += '.png';\n    //         break;\n    // }\n    // cast to a File\n    return <File>blob;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResizeService {\n  private mainCanvas: HTMLCanvasElement;\n\n  private isCanvasSupported(): boolean {\n    const canvas = document.createElement('canvas');\n    return !!(canvas.getContext && canvas.getContext('2d'));\n  }\n\n  /**\n   * Create image on the fly using Image class \n   * @param src \n   * @param crossOrigin \n   * @returns image\n   */\n  async createImage(\n    src: string,\n    crossOrigin?: string\n  ): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n      const img = new Image();\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.onload = () => {\n        resolve(img);\n      };\n\n      img.onerror = (err) => {\n        reject(err);\n      };\n\n      img.src = src;\n    });\n  }\n\n  /**\n   * Resize canvas - create canvas on the fly draw image with given diamension\n   * @param cnv \n   * @param width \n   * @param height \n   * @returns temp canvas instance\n   */\n  resizeCanvas(\n    cnv: HTMLCanvasElement,\n    width: number,\n    height: number\n  ): HTMLCanvasElement {\n    if (!width || !height) {\n      return cnv;\n    }\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const cnx = tmpCanvas.getContext('2d');\n    cnx.drawImage(cnv, 0, 0, tmpCanvas.width, tmpCanvas.height);\n    return tmpCanvas;\n  }\n\n  /**\n   * Resize image \n   * @param src <base64Img or blob>\n   * @param options <e.g. width, height, sizeScale, step, crossOrigin>\n   * @returns \n   */\n  async resizeImage(src: string, options: any): Promise<string> {\n    if (!this.isCanvasSupported()) {\n      throw new Error('Canvas is not supported on your browser');\n    }\n    if (!options || !src) {\n      throw new Error('Missing argument when calling resizeImage function');\n    }\n    //Config options\n    options = {\n      height: options.height\n        ? options.height\n        : options.width\n        ? null\n        : options.size\n        ? null\n        : 1024,\n      width: options.width\n        ? options.width\n        : options.height\n        ? null\n        : options.size\n        ? null\n        : 1024,\n      size: options.size ? options.size : 500,\n      sizeScale: options.sizeScale ? options.sizeScale : 'ko',\n      step: options.step ? options.step : 3,\n      outputFormat: options.outputFormat ? options.outputFormat : 'image/jpeg',\n      crossOrigin: options.crossOrigin ? options.crossOrigin : null,\n    };\n\n    try {\n      const img = await this.createImage(src, options.crossOrigin); // read image first by given base64 or blob image\n\n      if (options.height || options.width) {\n        // resize image as per height and width\n        return this.resizeImageWidthHeight(\n          img,\n          options.width,\n          options.height,\n          options.step,\n          options.outputFormat\n        );\n      } else if (options.size) {\n        if (typeof options.sizeScale === 'string') {\n          switch (options.sizeScale.toLowerCase()) {\n            case 'ko':\n              options.size *= 1024;\n              break;\n            case 'mo':\n              options.size *= 1024 * 1024;\n              break;\n            case 'go':\n              options.size *= 1024 * 1024 * 1024;\n              break;\n          }\n        }\n        return this.resizeImageBySize(img, options.size, options.outputFormat); //resize by size in diamension ration\n      } else {\n        throw new Error('Missing option to resize the image');\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * ResizeImageWidthHeight - Create canvas - draw image if given height and with OR use image original diamensions\n   * and draw image data url\n   * @param image \n   * @param width \n   * @param height \n   * @param step \n   * @param outputFormat \n   * @returns \n   */\n  resizeImageWidthHeight(\n    image: HTMLImageElement,\n    width: number,\n    height: number,\n    step: number,\n    outputFormat: string\n  ): string {\n    if (!image) {\n      return null;\n    }\n    if (!outputFormat) {\n      outputFormat = 'image/jpeg';\n    }\n\n    this.mainCanvas = document.createElement('canvas');\n\n    if (!width && !height) {\n      width = image.width;\n      height = image.height;\n    } else if (!width && height) {\n      width = (height / image.height) * image.width;\n    } else if (width && !height) {\n      height = (width / image.width) * image.height;\n    }\n\n    const pixelStepWidth = image.width === width || !step ? 0 : (image.width - width) / step;\n    const pixelStepHeight = image.height === height || !step ? 0 : (image.height - height) / step;\n    this.mainCanvas.width = image.width;\n    this.mainCanvas.height = image.height;\n\n    this.mainCanvas\n      .getContext('2d')\n      .drawImage(image, 0, 0, this.mainCanvas.width, this.mainCanvas.height);\n    for (let i = 1; i < step; i++) {\n      const newWidth = image.width - pixelStepWidth * i;\n      const newHeight = image.height - pixelStepHeight * i;\n      this.mainCanvas = this.resizeCanvas(this.mainCanvas, newWidth, newHeight);\n    }\n    this.mainCanvas = this.resizeCanvas(this.mainCanvas, width, height);\n\n    return this.mainCanvas.toDataURL(outputFormat);\n  }\n\n  /**\n   * resizeImageBySize - resize image by given size in ration \n   *  \n   * @param image \n   * @param targetSize \n   * @param outputFormat \n   * @returns \n   */\n  resizeImageBySize(\n    image: HTMLImageElement,\n    targetSize: number,\n    outputFormat: string\n  ): string {\n    if (!image) {\n      return null;\n    }\n    if (!outputFormat) {\n      outputFormat = 'image/jpeg';\n    }\n\n    this.mainCanvas = document.createElement('canvas');\n    this.mainCanvas.width = image.width;\n    this.mainCanvas.height = image.height;\n    this.mainCanvas\n      .getContext('2d')\n      .drawImage(image, 0, 0, this.mainCanvas.width, this.mainCanvas.height);\n\n    let tmpResult = this.mainCanvas.toDataURL(outputFormat);\n    let result = tmpResult;\n\n    const sizeOfTheImage = this.calulateImageSize(tmpResult, outputFormat);\n    let divideStrategy = Math.max(\n      1,\n      Math.min(sizeOfTheImage / targetSize, 200)\n    );\n\n    let iteratorLimit = 20;\n    while (sizeOfTheImage > targetSize && iteratorLimit !== 0) {\n      iteratorLimit--;\n\n      const newImageSize = {\n        width: this.mainCanvas.width / divideStrategy,\n        height: this.mainCanvas.height / divideStrategy,\n      };\n      const canvas = this.resizeCanvas(\n        this.mainCanvas,\n        newImageSize.width,\n        newImageSize.height\n      );\n\n      tmpResult = canvas.toDataURL(outputFormat);\n      const sizeOfTheImageTmp = this.calulateImageSize(tmpResult, outputFormat);\n\n      if (sizeOfTheImageTmp / targetSize < 0.5 || sizeOfTheImageTmp === 0) {\n        divideStrategy = divideStrategy / 2;\n        if (divideStrategy < 1) {\n          iteratorLimit = 0;\n        }\n      } else {\n        this.mainCanvas = canvas;\n        result = tmpResult;\n      }\n\n      this.mainCanvas = canvas;\n    }\n\n    return result;\n  }\n\n  calulateImageSize(imgString: string, outputFormat: string): number {\n    switch (outputFormat) {\n      case 'image/jpeg':\n        outputFormat = 'image/jpg';\n        break;\n      default:\n        outputFormat = 'image/jpg';\n        break;\n    }\n    return Math.max(\n      0,\n      Math.round(\n         ((imgString.length - ('data:' + outputFormat + ';base64,').length) *3) / 4  \n        )\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport jsPDF from 'jspdf';\n@Injectable({  \n  providedIn: 'root'  \n})  \nexport class RoomAdminService { \n    \n    public doc = new jsPDF();\n\n     /**\n     * Function drawCanvas - Generate canvas as per required design for QR code\n     * https://mckinsey.atlassian.net/browse/CNG-10\n     * @param img\n     * @returns canvas image\n     */\n      drawCanvas(img, name, isForLevels = false, level): string | HTMLCanvasElement | HTMLImageElement {\n        // TO DO : move to enum/utility file, while room detail more editable field developement \n        const width = 500;\n        const height = 550;\n        const arcY = 300;\n        const arc_X_Center = width/2;\n        const otrRadius = arc_X_Center - 2 ;\n        const whtRadius = otrRadius - 12;\n        const innrRadius = otrRadius - 15;\n  \n        const canvas: HTMLCanvasElement = document.createElement('canvas');\n        canvas.setAttribute('width', width.toString());\n        canvas.setAttribute('height', height.toString());\n        const ctx = canvas.getContext('2d');\n  \n        ctx.strokeStyle = \"transparent\";\n        ctx.moveTo(arc_X_Center, 0);\n        ctx.lineTo(arc_X_Center, height);\n        ctx.stroke(); \n  \n        ctx.font = '14px McKinsey Sans, Helvetica Neue, Arial, sans-serif';\n        ctx.textAlign = \"center\";      \n        ctx.fillText( isForLevels ? name : name + ' (L-' + level + \")\", arc_X_Center, 20 );   \n\n        //oputer arc\n        ctx.beginPath();\n        ctx.arc(arc_X_Center, arcY, otrRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = '#051C2C';\n        ctx.fill();\n        ctx.stroke();\n  \n        //inner white arc\n        ctx.beginPath();\n        ctx.arc(arc_X_Center, arcY, whtRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = '#FFFFFF';\n        ctx.fill();\n        ctx.stroke();\n  \n        //second inner arc\n        ctx.beginPath();\n        ctx.arc(arc_X_Center, arcY, innrRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = '#051C2C';\n        ctx.fill();\n        ctx.stroke();\n  \n        // header text\n        ctx.fillStyle = '#FFFFFF';\n        ctx.font = '44px Bower';\n        ctx.fillText( isForLevels ? 'Book a room' : 'Book Me', arc_X_Center, 166);\n  \n        //centeral rectangle\n        ctx.fillRect(137, 187, 225, 225);\n        //fill central rectangle with color\n        ctx.fillStyle = '#FFFFFF';\n        \n        // fill text at the bottom\n        ctx.font = '29px McKinsey Sans, Helvetica Neue, Arial, sans-serif';\n        ctx.fillText('in Converge', arc_X_Center, 470);\n  \n        // draw QR code image into center of canvas\n        img !== null && ctx.drawImage(img, 137, 187);\n  \n        // create data url\n        const dataURL: string | HTMLCanvasElement | HTMLImageElement =\n        canvas.toDataURL('image/png');\n        return dataURL;\n      }\n  \n}","import { Directive, HostListener, HostBinding, Output, EventEmitter, Input } from '@angular/core';\nimport { RequiredFileType } from './room-admin-utility';\n\n@Directive({\n  selector: '[fileDragDrop]'\n})\n\nexport class FileDragNDropDirective {\n  //@Input() private allowed_extensions : Array<string> = ['png', 'jpg', 'bmp'];\n  @Output() private filesChangeEmiter : EventEmitter<any[]> = new EventEmitter();\n  //@Output() private filesInvalidEmiter : EventEmitter<File[]> = new EventEmitter();\n  @HostBinding('style.background') private background = ''; //'#eee';\n  @HostBinding('style.border') private borderStyle = '2px solid'; //'2px dashed';\n  @HostBinding('style.border-color') private borderColor = '#E6E6E6';\n  @HostBinding('style.border-radius') private borderRadius = '1px';\n\n  constructor() { }\n\n  @HostListener('dragover', ['$event']) public onDragOver(evt){\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = 'lightgray';\n    this.borderColor = 'cadetblue';\n    this.borderStyle = '1px dashed';\n  }\n\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt){\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = '#eee';\n    this.borderColor = '#696D7D';\n    this.borderStyle = '1px dashed';\n  }\n\n  @HostListener('drop', ['$event']) public onDrop(evt){\n    evt.preventDefault();\n    evt.stopPropagation();\n    const ext = RequiredFileType.split(',');\n    this.background = '#eee';\n    this.borderColor = '#696D7D';\n    this.borderStyle = '1px dashed';\n    // debugger;\n    let files = [...new Set(evt.dataTransfer.files)].filter((f:File) => ext.includes(f.type));  //evt.dataTransfer.files;\n    // let valid_files : Array<File> = files;\n    this.filesChangeEmiter.emit(files);\n  }\n}","import { DropdownOpion } from '@mckinsey-converge/ui';\n\nexport interface RoomSubset {\n\tinternal: DropdownOpion[];\n\texternal: DropdownOpion[];\n}\n\nexport interface room {\n\troomname: string;\n\troomnumber: number;\n\tcity: string;\n\tlevel: number;\n\tcapacity: number;\n\troomtype: string;\n\troomvisibility: boolean;\n\tvc: boolean;\n\tconference_phone: boolean;\n\twireless_content_sharing: boolean;\n\tflipchart: boolean;\n\tglassboard: boolean;\n\twhiteboard: boolean;\n\tnatural_light: boolean;\n\tboardroom: boolean;\n\tcocktail: boolean;\n\ttheatre: boolean;\n\tworkshop: boolean;\n\tushape: boolean;\n\tmiscellaneous: boolean;\n}\n\nexport const roomTypeOptions: DropdownOpion[] = [\n    { display: 'Internal', value: 'internal', meta: {} },\n    { display: 'External', value: 'external', meta: {} },\n\t]\n\nexport const roomSubsetOptions: RoomSubset = {\n\t'external': [\n\t\t{ display: 'Conference', value: 'conference', meta: {} },\n\t\t{ display: 'Team', value: 'team', meta: {} },\n\t],\n\t'internal': [\n\t\t{ display: 'Meeting', value: 'meeting', meta: {} },\n\t\t{ display: 'Partner', value: 'partner', meta: {} },\n\t\t{ display: 'Phonebooth', value: 'phonebooth', meta: {} },\n\t\t{ display: 'Team', value: 'team', meta: {} },\n\t\t{ display: 'Conference', value: 'conference', meta: {} },\n\t]\n}\n\nexport const roomVisibilityOptions: DropdownOpion[] = [\n\t{ display: 'Bookable', value: 'true', meta: {} },\n\t{ display: 'Non-bookable', value: 'false', meta: {} },\n]\n\nexport const canteringAvailabilityOptions: DropdownOpion[] = [\n\t{ display: 'Yes - Onsite', value: 'yes-onsite', meta: {} },\n\t// { display: 'Yes - Offsite', value: 'yes-offsite', meta: {} },\n\t{ display: 'No', value: 'no', meta: {} },\n]\n\nexport const RoomPhotoDiamension = {\n\twidth: 400,\n\theight: 225\n}\n\nexport const RequiredFileType = 'image/png,image/jpg,image/jpeg,image/webp';\n\nexport function timestamp(){ \n\treturn (new Date()).getTime(); \n} \n","import {\n    NgModule,\n    Type\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { LoginComponent } from '../login/login.component';\nimport { TopbarHeaderComponent } from '../components/topbar-header/topbar-header.component';\n\nimport {\n    CdkDropListScrollContainer,\n    ReplacePipe\n} from '@mckinsey-converge/base';\nimport { SidebarComponent } from '../components/sidebar/sidebar.component';\nimport { LegacyUiModule } from '@mckinsey-converge/legacy-ui';\nimport { LegacyOverlaysModule } from '@mckinsey-converge/legacy-overlays';\nimport { AccessDenied } from '../components/access-denied/access-denied.component';\nimport { UiModule } from '@mckinsey-converge/ui';\n\nconst COMPONENTS: Type<any>[] = [\n    LoginComponent,\n    TopbarHeaderComponent,\n    SidebarComponent,\n    AccessDenied\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ReplacePipe\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        LegacyUiModule,\n        LegacyOverlaysModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        UiModule\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        LegacyUiModule,\n        LegacyOverlaysModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        ReplacePipe\n    ]\n})\nexport class SharedContentModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { ApplicationLoadingState, LoadingState } from '@mckinsey-converge/base';\nimport { ApplicationIcon } from '@mckinsey-converge/data-common';\nimport { UsersService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n        <feedback></feedback>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"spinner\">\n                <img src=\"assets/img/loader.gif\" />\n            </div>\n            <div class=\"text\">Converge is loading</div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { User } from '@mckinsey-converge/data-common';\nimport { BaseClass, Identity } from '@mckinsey-converge/base';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent extends BaseClass implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor() {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form?.value.attendees || [];\n            this.subscription(\n                'attendees',\n                this.form\n                    .get('attendees')\n                    ?.valueChanges.subscribe((l) => (this.attendees = l || []))\n            );\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        const visitor = new User({ visitor: true, external: true, email: '' })\n        list.push(visitor);\n        //** Create visitor form group */\n        const visitorFG = this.createVisitor(visitor);\n        //** Push to visitor form array */\n        this.getVisitors.push(visitorFG);\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /**\n     * Create visitor form group\n     */\n    createVisitor(visitor) {\n        return new FormGroup({\n            name: new FormControl(visitor.name, {validators: [Validators.required, Validators.minLength(2)], updateOn: 'blur' }),\n            email: new FormControl(visitor.email, { validators: [Validators.required, Validators.email], updateOn: 'blur' }),\n        });\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = [...this.attendees];\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        // (<FormArray>this.form.controls.visitors).removeAt(index);\n        this.getVisitors.removeAt(index-1);\n        this.form.markAsDirty();\n    }\n\n    /**\n     * Get the visitor form array \n     */\n    public get getVisitors() {\n        return this.form.get(\"visitors\") as FormArray;\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\" formArrayName=\"visitors\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external || item.visitor\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        [form]=\"form.controls.visitors.controls[i-1]\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\">delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { User } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    // public form: FormGroup;\n    @Input() public form: FormGroup\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void { \n        this.form.valueChanges.subscribe( values => {\n            this.person = new User({ ...values, visitor: true, external: true });\n            this.personChange.emit(this.person);\n        })\n    }\n\n    \n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form  [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\"  />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\"  />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl, FormBuilder, FormArray } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DialogEvent } from '@mckinsey-converge/base';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from '@mckinsey-converge/legacy-overlays';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n    attendeesStatus: boolean = true;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        private fb: FormBuilder,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl([...this.booking.attendees], [Validators.minLength(1)]),\n            visitors: this.fb.array([])\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n\n        /** \n         * Create visitor form for existing visitors\n        */\n        this.booking.attendees.forEach( (el) => {\n            if(el.external || el.visitor) {\n                const visitorFG = this.createVisitor(el.name, el.email);\n                this.getVisitors.push(visitorFG);\n                // (<FormArray>this.form.controls.visitors).markAsTouched();\n            }\n        });\n    }\n\n    createVisitor(name, email) {\n        return new FormGroup({\n            name: new FormControl(name, { validators: [Validators.required, Validators.minLength(2)], updateOn: 'blur' }),\n            email: new FormControl(email, {validators: [Validators.required, Validators.email], updateOn: 'blur' }),\n        });\n    }\n\n    public get getVisitors() {\n        return this.form.get(\"visitors\") as FormArray;\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n            autoFocus: false,\n            backdropClass: 'mck-modal-backdrop',\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const attendees = this.form.controls.attendees.value;\n                for (const attendee of attendees) {\n                    if (!attendee.email) {\n                        attendee.email = `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`;\n                    }\n                }\n                const new_booking = new Booking({ ...this.booking.toJSON(), ...this.form.value });\n                this._bookings.save(new_booking).then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._booking_state.replace(new Booking({ ...this.booking, ...bkn.toApiJSON() }));\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n            else {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._dialog_ref.close();\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\" ></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!form.valid\" (click)=\"save()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from '@mckinsey-converge/animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { BaseClass, unique } from '@mckinsey-converge/base';;\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent extends BaseClass implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Emitter for changed to the checked in status */\n    @Output() public checked = new EventEmitter<void>();\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n    /** Whether all attendees are being checked in */\n    public loading: boolean;\n\n    public matched_attendees = [];\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        const status = this.event.timeBasedStatusLabel;\n        return status === 'upcoming' || status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n\n    /** Whether user is a match for  */\n    public is_match(person: any): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            !search ||\n            person.name.toLowerCase().indexOf(search) >= 0 ||\n            person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checkInsArray;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: unique(this.event.attendees.map(user => ({ name: user.name, email: user.email }))),\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in all attendees for booking. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                check_ins: value.check_ins\n            });\n            this.checked.emit();\n        }\n        this.loading = false;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees.filter(user => !user.email.includes('@guest'))\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            if (!this.search) this.show_attendees = false;\n            this.matched_attendees = this.event?.attendees.filter(_ => this.is_match(_));\n            this.timeout('on_search', () => this.show_attendees = !!this.search, 50);\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n            this.matched_attendees = this.event?.attendees.filter(_ => this.is_match(_));\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }}\n                <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"company\">{{ event.company.length }}</div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.local_room_name }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a\n                mat-icon-button\n                matTooltip=\"Email Attendees\"\n                name=\"email-all\"\n                [href]=\"mail_url | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n            </a>\n            <button\n                mat-icon-button\n                name=\"checkin-all\"\n                matTooltip=\"Checkin All Visitors\"\n                (click)=\"checkin()\"\n            >\n                <action-icon\n                    [loading]=\"loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button\n                mat-icon-button\n                matTooltip=\"Edit Visitors\"\n                name=\"edit\"\n                (click)=\"openEditModal()\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button\n                mat-icon-button\n                name=\"show-attendees\"\n                (click)=\"show_attendees = !show_attendees\"\n            >\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor\n            *ngFor=\"let item of event.attendees\"\n            [event]=\"event\"\n            [person]=\"item\"\n            [search]=\"search\"\n            (checked)=\"checked.emit()\"\n        ></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { BookingStateService } from '@mckinsey-converge/data-common';\nimport { DateNow, DateTZ, convertTimezonedTimestampToLocalDateTz} from '@mckinsey-converge/date-tz';\n\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public dateTz: DateTZ = DateNow(new Date());\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    public get nowTz(){\n        return DateNow(new Date())\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingStateService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._bookings.startPollingEveryFiveMin();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .subscribe((_) => {\n                        this.search$.next(`${this.dateTz.ms}|${_.id}`);\n                        this._bookings.setZone(_.id);\n                    })\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.filtered.subscribe((list) => this.updateEvents(list))\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.dateTz) {\n            this.search$.next(`${this.dateTz.ms}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, booking: Booking) {\n        return booking.id;\n    }\n\n    public resetPolling() {\n        this.interval(\n            'update_bookings',\n            () => this.search$.next(`${this.dateTz.ms}|${this.nowTz.ms}`),\n            30 * 1000\n        );\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings\n            .filter((booking) => {\n                return booking.attendees.find(\n                    (user) =>\n                        user.name.toLowerCase().indexOf(search) >= 0 ||\n                        user.email.toLowerCase().indexOf(search) >= 0\n                );\n            })\n            .filter((bkn) => (this.show_all ? true : bkn.has_visitors));\n    }\n\n    private updateEvents(list: Booking[]) {\n        const unsorted_bookings = list.filter(\n            (bkn) =>\n                !bkn.declined &&\n                bkn.room.zones.includes(this._org.building.id)\n        );\n        const bookings = unsorted_bookings.sort((a, b) => {\n            if (a.date === b.date) {\n                if (a.creator.name === b.creator.name) {\n                    return a.space.name > b.space.name ? 1 : -1;\n                }\n                return a.creator.name > b.creator.name ? 1 : -1;\n            }\n            return a.date > b.date ? 1 : -1;\n        })\n        this.bookings = bookings;\n        this.filtered_bookings = this.filter(this.search);\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"company\">Company</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <ng-container  *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\" >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\" (checked)=\"resetPolling()\"></a-visitor-booking>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges, Output, EventEmitter} from '@angular/core';\n\nimport { BookingCheckinParams, User } from '@mckinsey-converge/data-common';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport { BookingsService } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Emitter for changed to the checked in status */\n    @Output() public checked = new EventEmitter<void>();\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.timeBasedStatusLabel === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checkInsArray.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n     public  checkin() {\n        this.loading = true;\n        const fields: BookingCheckinParams= {\n            host_email: this.event.organiser.email,\n            attendees: [{ name: this.person.name, email: this.person.email }],\n            booking_id: this.event.id,\n            icaluid: this.event.icaluid,\n            id: this.event.id,\n            notify_users: [...this.event.notify_users],\n            response_type: 'accepted',\n            room_id: this.event.space.id,\n        };\n        this._bookings.checkinIndividualVisitor(this.event.id, fields).subscribe(result => {\n                const check_ins = {...result.check_ins};\n                check_ins[this.person.email] = true;\n                this.event.check_ins = result.check_ins;\n                this.event = new Booking({\n                    ...this.event.toJSON(),\n                    check_ins,\n                });\n                this.checked.emit();\n                this.loading = false;\n            }); \n    }\n\n\n    public get companyString(){\n        return this.person.external ? this.event.company.join(',') : 'Mckinsey'\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"company\">{{ companyString }}</div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a\n            mat-icon-button\n            [matTooltip]=\"!person.external ? 'Email Staff Member' : 'Email Visitor'\"\n            [disabled]=\"invalid_email\"\n            [href]=\"mail_url | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            name=\"checkin\"\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading || !person.external\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { Booking } from '@mckinsey-converge/data-common';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { SpacesService } from '@mckinsey-converge/data-common';\nimport { OrganisationService } from '@mckinsey-converge/data-common';\nimport { ApplicationService } from '@mckinsey-converge/data-common';\nimport { BaseDirective } from '@mckinsey-converge/base';\nimport { DateNow, DateTZ } from '@mckinsey-converge/date-tz';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public dateTz: DateTZ = DateNow(new Date());\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    public has_access: boolean;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Visitors';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Init dateTz here once the organization data is loaded.\n            this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building')?.subscribe(() => {\n                    // Update dateTz here when the building is changed.\n                    this.dateTz = new DateTZ({ date: this.dateTz.ms, is_local_tz: false, building_tz: this.timezone });\n                    this.has_access = this._org.building ? true : false;\n                    if(!this.has_access) return\n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id },\n                    });\n                })\n            );\n        })\n    }\n\n    public newVisitorMeeting() {\n        const now = DateNow(new Date());\n        const date = now.setValue({ minute: Math.ceil(now.minutes / 5) * 5 });\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ \n            start_epoch: date.seconds,\n            end_epoch: date.addValue({ minutes: 60 }),\n            room: space\n        });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n\n    // R--- surely these 2 methods are not DRY and all the main tabs need a base class\n    // that encapsulates the common elements.\n    public get timezone() {\n        return this._org.building.timezone;\n    }\n\n    public updateDateTz(dateTz: DateTZ) {\n        this.dateTz = dateTz;\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\" *ngIf=\"!has_access\">\n        <access-denied></access-denied>\n    </div>\n    <div class=\"group\" *ngIf=\"has_access\">\n        <a-topbar-header\n            [(dateTz)]=\"dateTz\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n            (dateChangeTz)=\"updateDateTz($event)\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                name=\"show-all\"\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [dateTz]=\"dateTz\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from '../shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { EnvironmentData } from '@mckinsey-converge/environment';\n\nexport const environment: EnvironmentData = {\n    production: true,\n    hmr: false,\n    heap_io_id: 91016686,\n};\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nimport { SettingsData } from '@mckinsey-converge/data-common';\n\nconst general = {\n    menu: {\n        items: [\n            {\n                name: 'Day View',\n                route: '/day-view',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'wb_sunny',\n                },\n            },\n            {\n                name: 'Week View',\n                route: '/week-view',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'date_range',\n                },\n            },\n            {\n                name: 'Catering',\n                route: '/catering',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'room_service',\n                },\n            },\n            {\n                name: 'Visitors',\n                route: '/visitors',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'face',\n                },\n            },\n            {\n                name: 'Reports',\n                route: '/reports',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'warning',\n                },\n            },\n            {\n                name: 'Room Admin',\n                route: '/room-admin',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'settings',\n                }\n            },\n        ],\n        copyright: 'PlaceOS',\n    },\n};\n/*=========================*\\\n||  BOOKING FLOW SETTINGS  ||\n\\*=========================*/\nconst booking = {\n    booking_types: [\n        { name: 'Internal', id: 'internal' },\n        { name: 'External', id: 'external' },\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'dateTz',\n        'duration',\n        'organiser',\n        'title',\n        'type',\n        'all_day',\n        'has_catering',\n        'is_recurrent'\n    ],\n    html_body: true,\n    multiple_spaces: true,\n    desk_start: 9,\n};\n\n/*=========================*\\\n||    DAY VIEW SETTINGS    ||\n\\*=========================*/\nconst day_view = {\n    dragdrop: true,\n};\n\n/*=========================*\\\n||    VISITORS SETTINGS    ||\n\\*=========================*/\nconst visitors = {};\n\n/*=========================*\\\n||    REPORTS SETTINGS     ||\n\\*=========================*/\nconst reports = {};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    title: 'McKinsey Concierge',\n    description: 'McKinsey Concierge UI written with Angular Framework',\n    short_name: 'CONCIERGE',\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: '#0a0d2e',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: '',\n    },\n    heap_io: {\n        app_id: 3540602199,\n        force_ssl: true,\n        secure_cookie: true,\n        disable_text_capture: true,\n        cookie_path: '/concierge/'\n    },\n    general,\n    booking,\n    day_view,\n    visitors,\n    reports,\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: SettingsData<typeof app> = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/concierge',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n    mock: false,\n    frontend: 'concierge',\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}