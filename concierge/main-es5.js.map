{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.service.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.template.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","Composer","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_dialog","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","booking","save","success","emit","type","notifySuccess","err","notifyError","open","BookingModalComponent","data","Booking","close","spaces","changes","date","duration","length","reject","Spaces","available","room_ids","map","space","join","space_list","was_available","name","options","host","organiser","reduce","request","byRequest","title","date_value","duration_value","all_day","dayjs","end","add","format","isSame","humaniseDuration","space_ids","find","attendees","filter","i","email","Users","current","body","catering","order","a_space","location_id","level","building","Organisation","buildings","bld","CateringOrder","symbol","currency","Object","key","MAT_DIALOG_DATA","Inject","Output","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","navigate","confirmBooking","order_list","openCateringDetailsModal","route","clearPendingChanges","generateBookingForm","available_fields","form_data","toJSON","setValue","RequirementDetailsModalComponent","maxWidth","width","notes_field","notes","codes_field","equipment_codes","head_counts_field","expected_attendees","componentInstance","reason","afterClosed","CateringDetailsModalComponent","has_changes","notifyInfo","valid","dialog_ref","maxHeight","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","startOf","valueOf","Input","CateringMenuCategoryComponent","CateringMenuItemComponent","field","list","item","an_item","setAmount","amount","valueChanges","selectPackageOptions","confirmed_item","CateringItem","notifyWarn","PackageOptionsModalComponent","CateringCategory","done","items","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","BookingCateringOrderDetailsComponent","category_list","available_times","loadMenu","generateAvailableTimes","time","start","initForm","FormGroup","FormControl","booking_date","delivery_time","BookingCateringConfirmModalComponent","Menu","query","room_id","start_date","generateStartAndEndTimes","minute","Math","ceil","isBefore","abs","diff","endOf","building_time","toDate","hour","as_dayjs","toLocalDate","possible_end","isAfter","active_building","within_restricted_time","has_available_items","form_controls","building_id","catering_restricted_from","total","restricted","subtract","category","can_order_anytime","confirmOrder","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","forEach","next","BookingSpaceFiltersComponent","locations","locationsChange","building_list","now","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","search_results$","debounceTime","distinctUntilChanged","switchMap","recurrence","recurrence_properties","period","recurr_period","toLowerCase","recurr_end","unix","bookable","catchError","of","onChange","multiple","concat","previous","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","conflicts","recurr","conflict_list","replaces","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","nativeElement","scrollIntoView","behavior","block","inline","ViewChild","item_list","codes","head_counts","needs_charge_code","active_space","note_list","note","message","charge_code","generateFormFields","is_valid","new_notes","author","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","MeetingCateringDetailsComponent","setItem","JSON","stringify","creator","status","declined","MeetingDetailsDisplayComponent","person","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_on_error","setLoading","Bookings","accept","comment","approval_status","decline","booking_id","icaluid","floor","date_string","start_time","deleteMeeting","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","new_booking","NewUserModalComponent","user","User","generateUserForm","new_user","first_name","last_name","changeEvents","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","must_select","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","storePendingChange","saveChanges","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","replaced_by","head_count","equipment_code","search$","selected_spaces","request_map","types","active_type","update","space_types","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_composer","_analytics","_organisation","_reports","_users","_bookings","_spaces","_locations","_snackbar","_menu","_catering_items","_catering_categories","_route_trail","_subjects","_observers","parent","set","isStable","run","_stable","log","setupCache","waitForSettings","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","info","args","stream","force","BehaviorSubject","getValue","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","has_settings","has_org","BaseClass","Injectable","providedIn","BASE_MUTABLE_FIELDS","BaseDataClass","raw_data","__type","_changes","_server_names","zone_id","promise","d","task_name","parameters","task","with_changes","obj","_timers","_intervals","_subscriptions","new_key","substr","undefined","_service_map","parse","service","BaseAPIService","_subscribers","_promises","_compare","a","b","_list_filter","_name","_api_route","load","response","engine","engine_endpoint","predicate","query_params","update_list","cache","toQueryString","result","http","process","results","new_item","updateList","post","analyticsEvent","method","concierge","post_data","_task","api_route","delay","stopPoll","sub","_poll","show","interval","complete","put","remove_ids","label","Analytics","raw_item","old_list","compareFn","new_list","mixed_list","found","_display","u_service","subject","start_epoch","Start","max","end_epoch","End","description","booking_type","visitors","attendee_emails","_attendees","organizer","organiser_email","_organiser","booked_by","creator_email","_location","location_name","Date","getTime","checked_in","checkins","notify_users","_space_list","show_as","u","addFrom","edits","flatten","auto_approve","sort","old_date","from_room","display","indexOf","v","external","Space","space_names","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","generateMockBooking","override","random","padZero","faker","commerce","productName","generateMockUser","lorem","paragraph","address","city","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","current_user","use_fields","fields","needs_space","setValidators","validateEndTime","disable","isFuture","simplified_fields","subs","hasOwnProperty","space_list_change","organiser_change","Subscription","unsubscribe","control","rulesForSpace","space_rules_for_user","hide","rules","zones","zone","rule_block","checkRules","conditions","ruleset","max_length","stringToMinutes","min_length","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","values","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","BookingsService","setService","localeCompare","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","MapLocation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","LocationService","generateMockLocation","overrides","fixed_locations","maps","randomInt","Building","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_details","booking_rules","timezone","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","includes","price_field","date_field","row","room","CurrencyPipe","transform","formatRecurrence","csv_json","csvToJson","ReportsService","fromCSV","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","id_list","_linked_spaces","linked_rooms","linked_spaces","rm","rulesFor","bkn","booking_list","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","Locations","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","built","build","core_version","version","loadFromFile","app","colors","app_name","shift","file","file_name","clearTimeout","clearInterval","fn","Function","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","active_user","resetSearchString","FeedbackComponent","_router","updateRoute","document","events","NavigationEnd","current_page","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","_cdr","show_events","dateChange","event_map","detectChanges","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","API","callback","from","to","route_params","MOCK_BUILDINGS","emergency","av_help","desk_tracking","desk_bookings","messaging","features","number","map_features","desks","DOMAIN","MOCK_ORG","MOCK_LOCATIONS","lvls","send_acceptance","space_data","today","MOCK_CONTACTS","PREDEFINED_USERS","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","json","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","isArray","reverse","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","group","parent_id","openItemModal","deleteItem","catering_menu","filtered_menu","loadCateringMenu","search","openCategoryModal","menu","statuses","colour","active_status","viewOrderDetails","filtered_orders","initBookings","queryParamMap","view_id","sub_item","sub_sub_item","_upload_manager","CateringCategories","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","access_url","readAsArrayBuffer","CateringItems","storeBooking","new_note","order_id","addNote","handleChange","deliver_at_time","DayViewApprovalsComponent","getMonthlyPending","updateMeetings","processMeetings","previousValue","currentValue","room_list","waiting_on_event","pending_list","tentative","STATES","DayViewApprovalsEventComponent","acting","length_string","DayViewComponent","active_level","legend","legend_keys","color","updateLevel","newMeeting","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","queryParams","view","shown_date","toFixed","top","left","overflow_top","overflow_bottom","has_visitors","time_period","expected","inView","dragging","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_count","Set","size","checkCollisions","moveBooking","ignore","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","scroll_area","updateTime","ngOnChanges","updateBookings","initSpaces","room_type","updateScroll","active_hour","visible_rooms","space_type","querySelector","scroll_box","scrollTo","scrollHeight","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","end_date","report","report_data","Reports","downloadCSV","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","active_report","loading_state","is_logged_in","mod","EventFormComponent","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","VisitorBookingItemComponent","show_attendees","checked_in_users","counts","VisitorTimelineComponent","visitor_bookings","filtered_bookings","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._service.Composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.changes.date || this.booking.date,\n            duration: this.booking.changes.duration || this.booking.duration,\n            host: this.organiser\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.changes.title || this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.changes.date || this.booking.date;\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        const all_day = this.booking.changes.all_day || this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.changes.duration || this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        const spaces =\n            this.booking.changes.space_ids ||\n            this.booking.space_ids;\n        return spaces.map(id => this._service.Spaces.find(id));\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.changes.attendees || this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n            this.booking.changes.organiser || this.booking.organiser || this._service.Users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.changes.body || this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.changes.catering || this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.id === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._service.Organisation.buildings.find(bld => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id) {\n            return {};\n        }\n        const changes = this.booking.changes;\n        return Object.keys(changes).reduce((map, key) => {\n            if (changes[key]) {\n                map[key] = changes[key] !== this.booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { booking: Booking }\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ type: 'success' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    err => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            err => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._service.Spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.changes.date || this.booking.date,\n                duration: this.booking.changes.duration || this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser_email\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (tapped)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (tapped)=\"newBooking()\">New Booking</button>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this._service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n                this.loadFormData();\n            });\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            case 'form':\n                this.navigate('search');\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        this.booking.clearPendingChanges();\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this._service.Users.current,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking.toJSON();\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this._service.Users.current,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._service.Spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (!this.booking.has_changes) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: { booking: this.booking }\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (tapped)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingCateringConfirmModalComponent, CateringConfirmModalData } from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { space: { value: '' } } }).controls;\n        const space: Space = form_controls.space.value || { level: {} };\n        return this._service.Organisation.buildings.find(\n            (bld) => space.level.building_id === bld.id\n        ) || { catering_restricted_from: 0 } as any;\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.start.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loadMenu();\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find((time) => time.id === this.form.controls.start.value)\n            ) {\n                this.form.controls.start.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.space.value) {\n                this.form.controls.space.setValue(this.space_list[0]);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            space: new FormControl(\n                this._service.Spaces.find(this.order.location_id) || this.space_list[0]\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            start: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.space.valueChanges.subscribe((space) => {\n                this.form.controls.location_id.setValue(space.id);\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find((time) => time.id === this.form.controls.start.value)\n                ) {\n                    this.form.controls.start.setValue(this.available_times[0].id);\n                }\n                this.loadMenu();\n            })\n        );\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.start.value)\n        ) {\n            this.form.controls.start.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space: Space = this.form ? this.form.controls.space.value : null;\n        /* istanbul ignore else */\n        if (!space) {\n            return;\n        }\n        this.form.controls.items.setValue([]);\n        this.loading = true;\n        this._service.Menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space: Space = this.form ? this.form.controls.space.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"space\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"start\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._service.Spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            this.order.changes.delivery_time || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._service.Spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._service.Organisation.buildings.find(\n            bld => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(private _service: ApplicationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            *ngIf=\"!only_catering\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._service.Organisation.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">Select locations(s)</div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n            <div\n                class=\"list\"\n                [@show]=\"show_locations ? 'show' : 'hide'\"\n            >\n            <div class=\"item\" *ngFor=\"let building of building_list\">\n                <mat-checkbox\n                    (change)=\"\n                        $event.checked\n                            ? addLocationFilter(building)\n                            : removeLocationFilter(building)\n                    \"\n                >\n                    <div class=\"building-name\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                        <div class=\"address\">{{ building.address }}</div>\n                    </div>\n                </mat-checkbox>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._service.Organisation.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._service.Spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport { RecurrenceSpacesModalComponent, RecurrenceSpacesModalData } from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._service.Users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._service.Organisation.buildings.find(\n            (building) => building.id === level.building_id\n        );\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (tapped)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._data.form && this._data.form.controls.space\n            ? this._data.form.controls.space.value\n            : ({} as any);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._service.Organisation.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._service.Users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.booking.space.id);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.booking.space || { level: { building_id: '' } });\n        const building = this._service.Organisation.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.booking.space.id &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: order.symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" *ngIf=\"!expired\" (tapped)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"true\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser_email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser_email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator_email && booking.creator_email !== booking.organiser_email\" [class.edited]=\"true\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator_email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator_email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (tapped)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface MeetingDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        this._service.Bookings.accept(this.booking.id, {\n            comment: '',\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting approved.');\n            this.booking.approval_status[this.booking.space.id] = 'accepted';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'approved' });\n        }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._service.Bookings.decline(this.booking.id, {\n            booking_id: this.booking.id,\n            organiser: this.booking.organiser.email,\n            icaluid: this.booking.icaluid,\n            start: Math.floor(this.booking.date / 1000),\n            end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting declined.');\n            this.booking.approval_status[this.booking.space.id] = 'declined';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'declined' });\n        }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    content: `Are you sure you want to delete the meeting in ${this.booking.space.name} at ${this.booking.date_string}, ${this.booking.start_time}?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.deleteMeeting().catch(this._on_error('Error deleting booking'));\n                }\n                ref.close();\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm'));\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements [booking]=\"booking\" (loading)=\"setLoading($event)\"></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (tapped)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (tapped)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (tapped)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    public get setup(): string {\n        return this.booking && this.booking.setup ? humaniseDuration(this.booking.setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        return this.booking && this.booking.breakdown ? humaniseDuration(this.booking.breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return '';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking\n            }\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (tapped)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for changes to the loading state */\n    @Output() public loading = new EventEmitter<string>()\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.booking.space.id === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, this._service.Users.current, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.loading.emit('Updating requirements...');\n                    const new_booking: Booking = await this.booking.save().catch((err) => {\n                        this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n                    }) as any;\n                    this.loading.emit(null);\n                    /* istanbul ignore else */\n                    if (new_booking) {\n                        this.booking = new_booking;\n                        this.bookingChange.emit(new_booking);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.space?.name || booking.space_ids[0] }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{ (booking.expected_attendees || {})[booking.space?.id || booking.space_ids[0]] || '0' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ (booking.equipment_codes || {})[booking.space?.id || booking.space_ids[0]] || '&lt;No Charge Code&gt;' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button *ngIf=\"!expired\" (tapped)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    constructor(\n        private _dialog: MatDialogRef<NewUserModalComponent>,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.user.changeEvents.next({ type: 'item_saved', metadata: new_user });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderDetailsComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.id\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup || 0),\n            breakdown: new FormControl(this.booking.breakdown || 0),\n            notes: new FormControl(note.message),\n        });\n        this.subscription(\n            'setup',\n            this.form.controls.setup.valueChanges.subscribe((value) => {\n                this.booking.storePendingChange('setup', value);\n            })\n        );\n        this.subscription(\n            'breakdown',\n            this.form.controls.breakdown.valueChanges.subscribe((value) => {\n                this.booking.storePendingChange('breakdown', value);\n            })\n        );\n        this.subscription(\n            'notes',\n            this.form.controls.notes.valueChanges.subscribe((value) => {\n                /* istanbul ignore else */\n                if (value) {\n                    this.timeout('notes', () => {\n                        const notes = this.booking.notes.filter(\n                            (note) =>\n                                !(note.type === 'private' && note.space === this.booking.space.id)\n                        );\n                        this.booking.storePendingChange('notes', [\n                            ...notes,\n                            {\n                                type: 'private',\n                                date: dayjs().valueOf(),\n                                message: value,\n                                author: this._service.Users.current.name,\n                                space: this.booking.space.id,\n                            } as BookingNote\n                        ]);\n                    });\n                }\n            })\n        );\n    }\n\n    public saveChanges() {\n        if (this.booking.has_changes) {\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this.booking.save().then((booking) => {\n                this._service.notifySuccess('Successfully updated private details');\n                this.event.emit({ reason: 'done', metadata: booking })\n                this._dialog_ref.close();\n            }, (err) => {\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Unable to save changes to private details. Error: ${err.message || err}`)\n                this.loading = false;\n            })\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _service: ApplicationService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._service.Spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment')\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._service.Users.current.name,\n                type: 'equipment',\n                message: this.form[space.id].controls.notes.value,\n                space: space.id,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._service.Organisation.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.id] = building.required.equipment_code;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    building.required.equipment_code ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._service.Organisation.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._service.Spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._service.Organisation.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._service.Organisation.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    [class.request]=\"request_map[space.id]\"\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { HashMap, ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { LocationService } from './data/location/location.service';\nimport { CateringMenuService } from './data/catering/catering-menu.service';\nimport { ReportsService } from './data/reports/reports.service';\nimport { CateringItemsService } from './data/catering/catering-items.service';\nimport { CateringCategoriesService } from './data/catering/catering-categories.service';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _organisation: OrganisationService,\n        private _reports: ReportsService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _locations: LocationService,\n        private _snackbar: MatSnackBar,\n        private _menu: CateringMenuService,\n        private _catering_items: CateringItemsService,\n        private _catering_categories: CateringCategoriesService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent\n            = this._spaces.parent = this._locations.parent = this._menu.parent\n            = this._reports.parent = this;\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('CONCIERGE.pending_bookings', {});\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n    /** Spaces service */\n    public get Reports() {\n        return this._reports;\n    }\n    /** Locations service */\n    public get Locations() {\n        return this._locations;\n    }\n    /** Catering Menu service */\n    public get Menu() {\n        return this._menu;\n    }\n    /** Catering Menu service */\n    public get CateringItems() {\n        return this._catering_items;\n    }\n    /** Catering Menu service */\n    public get CateringCategories() {\n        return this._catering_categories;\n    }\n    /** Engine Composer service */\n    public get Composer() {\n        return this._composer;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /** Whether organisation and building data has been initialised */\n    public get has_org(): boolean {\n        return this._organisation.is_initialised;\n    }\n\n    /** Whether application is ready for user interaction */\n    public get is_ready(): boolean {\n        return this.has_settings && this.has_org;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._users.init();\n            this._organisation.init();\n            // Wait until building and level data is loaded before initialising space and booking data\n            this._organisation.listen('active_building').pipe(first(_ => _)).subscribe(_ => {\n                this._bookings.init();\n                this._spaces.init();\n            });\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport type DataClassEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface IDataClassEvent<T = HashMap> {\n    type: DataClassEventType;\n    metadata: T;\n}\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>\n    update: (id: string, _: HashMap) => Promise<T>\n    delete: (id: string) => Promise<void>\n    task: (id: string, name: string, data: HashMap) => Promise<void>\n}\n\nexport const BASE_MUTABLE_FIELDS = ['name', 'email'] as const;\ntype BaseMutableTuple = typeof BASE_MUTABLE_FIELDS;\nexport type BaseMutableFields = BaseMutableTuple[number];\n\nexport class BaseDataClass extends BaseClass {\n    /** Map of available services for child classes */\n    private static _service_map: HashMap<ServiceLike> = {};\n    /** Set the services used to handle data model requests */\n    public static setService(type: string, service: ServiceLike): void {\n        BaseDataClass._service_map[type] = service;\n    }\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Subject for change events to the class object */\n    public readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Class type of required service */\n    protected __type: string = 'BaseDataClass';\n    /** Map of pending changes to the object */\n    protected _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return BaseDataClass._service_map[this.__type];\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n        this._changes = {};\n    }\n\n    /** Whether the form has changes */\n    public get has_changes(): boolean {\n        for (const key in this.changes) {\n            if (this.changes[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Map of currently unsaved changes to the state */\n    public get changes(): HashMap {\n        return JSON.parse(JSON.stringify(this._changes));\n    }\n\n    /**\n     * Store new value for given field\n     * @param key\n     * @param value\n     */\n    public storePendingChange(\n        key: BaseMutableFields,\n        value: BaseDataClass[BaseMutableFields]\n    ): this {\n        if (typeof value === typeof this[key as any]) {\n            this._changes[key as any] = value;\n            this.emit('value_change', { key, value });\n        } else {\n            throw new Error(`Invalid type for value \"${value}\" set for key \"${key}\"`);\n        }\n        return this;\n    }\n\n    public clearPendingChanges(): void {\n        delete this._changes;\n        this._changes = {};\n        this.emit('reset');\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(force: boolean = false): Promise<BaseDataClass> {\n        if ((this.has_changes || force) && this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.emit<BaseDataClass>('item_saved', d);\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            Promise.reject('No changes have been made');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit<T = HashMap>(type: DataClassEventType, metadata?: T): void {\n        this.changeEvents.next({ type, metadata });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        if (!this.parent) {\n            return this.timeout('init', () => this.init());\n        }\n        this.parent.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.load().then(\n                (_) => this._initialised.next(true),\n                (err) => {\n                    this.parent.notifyError(\n                        `Error intialising ${this._name} service. Error: ${\n                            err.response || err.message || err\n                        }. Retrying...`\n                    );\n                    this.timeout('init', () => this.init(), 1000);\n                }\n            );\n        });\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent\n            ? engine\n                ? this.parent.engine_endpoint\n                : this.parent.endpoint\n            : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(\n            (i) => i.id === id || (i.email || '').toLowerCase() === (id || '').toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.api_route}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, form_data).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingMutableFields, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** List of spaces associated with the booking */\n    public readonly space_ids: readonly string[];\n    /** List of attendee emails associated with the booking */\n    public readonly attendee_emails: readonly string[];\n    /** Email of the host or organiser of the booking */\n    public readonly organiser_email: string;\n    /** Email of the host or organiser of the booking */\n    public readonly creator_email: string;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Class type of required service */\n    protected __type: string = 'Booking';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const u_service = this._service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        let start = dayjs(\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start\n        ).startOf('m');\n        if (!this.id) {\n            start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        }\n        this.date = start.valueOf();\n        this.duration =\n            Math.max(\n                0,\n                raw_data.duration ||\n                    dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                        start,\n                        'm'\n                    )\n            ) || 60;\n        this.body =\n            (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description ||\n            '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendee_emails = (raw_data.attendees || raw_data._attendees || []).map((i) =>\n            i instanceof Object ? i.email || i.id : i\n        );\n        const organiser = raw_data.organiser || raw_data.organizer || u_service.current || {};\n        this.organiser_email = (\n            raw_data.organiser_email ||\n            organiser.email ||\n            raw_data._organiser ||\n            raw_data.organiser || ''\n        ).toLowerCase();\n        const creator = raw_data.creator || raw_data.booked_by || organiser;\n        this.creator_email = (raw_data.creator_email || creator.email || '').toLowerCase();\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence\n            ? {\n                  ...raw_data.recurrence,\n                  start: raw_data.recurrence.start,\n                  end: raw_data.recurrence.end,\n              }\n            : {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start * 1000,\n                end: this.recurrence.end * 1000,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser_email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        this.space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_ids.forEach((id) => (this.approval_status[id] = 'declined'));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'tentative') {\n            this.space_ids.forEach((id) => (this.approval_status[id] = 'tentative'));\n        }\n        // Add attendees and organiser to service data\n        if (this._service.parent && this._service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach((u) => {\n                    if (!this._service.parent.Users.find(u.email)) {\n                        this._service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this._service.parent.Users.find(organiser.email)) {\n                    this._service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        this.edits =\n            raw_data.edits instanceof Array\n                ? raw_data.edits\n                : unique(flatten(Object.keys(raw_data.edits || {}).map((i) => raw_data.edits[i])));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const email of this.space_ids) {\n            if ((this.approval_status[email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const email of this.space_ids) {\n            if (\n                this.approval_status[email] &&\n                (this.approval_status[email].indexOf('tentative') >= 0 ||\n                    this.approval_status[email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const email of this.space_ids) {\n            if (\n                this.approval_status[email] &&\n                this.approval_status[email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this._service && this._service.parent && this._service.parent.Users\n            ? this.attendee_emails.map(\n                  (user) =>\n                      this._service.parent.Users.find(user) ||\n                      new User({ id: user, name: user, email: user })\n              )\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Users &&\n            this.organiser_email\n            ? this._service.parent.Users.find(this.organiser_email)\n            : null;\n    }\n\n    /** Creator of the meeting */\n    public get creator(): User {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Users &&\n            this.creator_email\n            ? this._service.parent.Users.find(this.creator_email)\n            : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        return this.body;\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Spaces &&\n            this.space_ids &&\n            this.space_ids.length > 0\n            ? this._service.parent.Spaces.find(this.space_ids[0])\n            : null;\n    }\n\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this._service &&\n            this._service.parent &&\n            this._service.parent.Spaces &&\n            this.space_ids\n            ? this.space_ids.map(\n                  (i) =>\n                      this._service.parent.Spaces.find(i) || new Space({ id: i, name: i, email: i })\n              )\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Store new value for given field\n     * @param key Name of the property\n     * @param value New value associated with the property\n     */\n    public storePendingChange(key: BookingMutableFields, value: Booking[BookingMutableFields]) {\n        return super.storePendingChange(key as any, value as any);\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        const date = dayjs(data.date);\n        data.start = date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.organiser =\n            this.organiser instanceof User\n                ? this.organiser.toJSON()\n                : {\n                      email:\n                          typeof this.organiser === 'string'\n                              ? this.organiser\n                              : this.organiser_email,\n                  };\n        data.auto_approve = data.space_ids.map((space) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this._service.parent.Users.current.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.organiser = this._service.parent.Users.find(data.organiser_email) || {\n            email: data.organiser_email,\n        };\n        delete data.organiser_email;\n        data.attendees = data.attendee_emails.map((user) => {\n            return this._service.parent.Users.find(user) || { email: user };\n        });\n        if (data.notes.find((note) => note.type === 'equipment') || data.catering.length) {\n            data.setup = data.setup || 15;\n            data.breakdown = data.breakdown || 15;\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_ids;\n        data.old_date = this.date;\n        data.from_room = this.space ? this.space.email : '';\n        delete data.attendee_emails;\n        delete data.space_ids;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(1, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser()),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    current_user: User,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    if (!current_user) {\n        current_user = {} as any;\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        space_ids: new FormControl(booking.space_ids, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser_email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    // Listen for changes on the fields and update booking\n    if (form && booking) {\n        let subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            if (booking.hasOwnProperty(key)) {\n                subs[`change_${key}`] = form.controls[key].valueChanges.subscribe((value) => {\n                    booking.storePendingChange(key, value);\n                });\n            }\n        });\n        subs.space_list_change = form.controls.space_list.valueChanges.subscribe(\n            (list: Space[]) => {\n                form.controls.space_ids.setValue(list.map((space) => space.email));\n            }\n        );\n        if (form.controls.organiser) {\n            subs.organiser_change = form.controls.organiser.valueChanges.subscribe((host: User) => {\n                form.controls.organiser_email.setValue(host.email);\n            });\n        }\n        subs.booking = booking.changeEvents.subscribe((event) => {\n            /* istanbul ignore else */\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    /* istanbul ignore else */\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Booking.setService('Booking', this);\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return item instanceof CateringCategory ? item.toJSON() : item;\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = 'menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceLike } from '../base-api.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Map of available services for child classes */\n    private static _service: ServiceLike;\n    /** Set the services used to handle data model requests */\n    public static setService(service: ServiceLike): void {\n        MapLocation._service = service;\n    }\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return MapLocation._service;\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const bld = this._service.parent.Organisation.buildings.find(bld => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        return this._service.parent.Organisation.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level = raw_data.level instanceof BuildingLevel\n            ? raw_data.level\n            : this._service.parent.Organisation.levelWithID(raw_data.level);\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { MapLocation } from './location.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocationService extends BaseAPIService {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        MapLocation.setService(this);\n        this._name = 'Location';\n        this._api_route = 'people';\n    }\n\n    public add(...args): never {\n        throw new Error('Create not allowed for location service')\n    }\n\n    public update(...args): never {\n        throw new Error('Update not allowed for location service')\n    }\n\n    public delete(...args): never {\n        throw new Error('Delete not allowed for location service')\n    }\n\n    public process(item: HashMap) {\n        return new MapLocation(item) as any;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Class type of required service */\n    protected __type: string = 'Organisation';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap, ApplicationLoadingState, Identity } from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Organisation.setService('Organisation', this);\n        Building.setService('Building', this);\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find(i => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find(i => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find(i => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this.parent.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this.parent.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this.parent.set('loading', loading);\n        /* istanbul ignore else */\n        if (this.parent && this.parent.Users) {\n            this.parent.Users.listen<User>('current_user')\n                .pipe(first(_ => !!_.location))\n                .subscribe(user => {\n                    const building = this.buildings.find(bld => bld.code === user.location);\n                    if (building) {\n                        this._active_building = building.id;\n                        this.set('active_building', building);\n                    } else {\n                        this._active_building = this.building.id;\n                        this.set('active_building', this.building);\n                    }\n                });\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map(\n            i => new Building(i)\n        );\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true })\n        const levels = (lvl_data as HashMap[]).map(i => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map(i => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportsService } from './reports.service';\nimport { csvToJson, downloadFile, jsonToCsv, humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { ServiceLike } from '../base-api.class';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Map of available services for child classes */\n    private static _service: ServiceLike;\n    /** Set the services used to handle data model requests */\n    public static setService(service: ServiceLike): void {\n        Report._service = service;\n    }\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return Report._service;\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(key => key.toLowerCase().includes('room') && key.toLowerCase().includes('email'));\n            const price_field = fields.find(key => key.toLowerCase().includes('price'));\n            const date_field = fields.find(key => key.toLowerCase().includes('date'));\n            for (let row of data){\n                /* istanbul ignore else */\n                if (room_field && price_field) {\n                    const room = this._service.parent.Spaces.find(row[room_field].toLowerCase());\n                    const bld = this._service.parent.Organisation.buildings.find(bld => bld.id === ((room || {}).level || {}).building_id);\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = (new CurrencyPipe('en_us')).transform(row[price_field] / 100, bld.currency || 'USD');\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] = typeof row[field] === 'string' ? row[field].replace(/\\,/g, '٫') : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n           data = data.map(i => {\n               const booking = new Booking(i).toJSON();\n               delete booking.id;\n               delete booking.icaluid;\n               delete booking.type;\n               delete booking.auto_approve;\n               delete booking.notify_users;\n               delete booking.organiser_email;\n               delete booking.edits;\n               delete booking.catering;\n               delete booking.checked_in;\n               delete booking.old_date;\n               delete booking.from_room;\n               delete booking.approval_status;\n               booking.body = booking.body.replace(/<[^>]*>?/gm, '');\n               booking.organiser = booking.organiser.name || booking.organiser.email;\n               booking.equipment_codes = Object.keys(booking.equipment_codes).map(key => booking.equipment_codes[key]).join(', ');\n               booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n               booking.attendees = booking.attendees.map(person => person.name || person.email).join(', ');\n               booking.start = dayjs(booking.start * 1000).format('DD MMM YYYY, h:mm A');\n               booking.end = dayjs(booking.end * 1000).format('DD MMM YYYY, h:mm A');\n               booking.notes = booking.notes.map(note  => note.author ? `[${note.author}|${note.type}]${note.message.replace(/<[^>]*>?/gm, '')}` : '').join('\\n');\n               booking.setup = humaniseDuration(booking.setup);\n               booking.breakdown = humaniseDuration(booking.breakdown);\n               booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurrence});\n\n               return booking;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Report.setService(this as any);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n\n    /** Class type of required service */\n    protected __type: string = 'Space';\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find(occurence => !!occurence.available);\n        this.was_available =\n            settings.available || raw_data.available || raw_data.was_available || available || false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings =\n            (raw_bookings && raw_bookings.length\n                ? raw_bookings.map(i => i.id)\n                : raw_data._bookings) || [];\n        if (this._service.parent && this._service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    if (!this._service.parent.Bookings.find(booking.id)) {\n                        id = this._service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    }\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const booking_list =\n            this._service && this._service.parent && this._service.parent.Bookings\n                ? this._service.parent.Bookings.filter(\n                      booking => this._bookings.indexOf(booking.id) >= 0\n                  ) || []\n                : [];\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        return this._service.parent.Organisation.levelWithID(this.zones as any) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => {\n                const start = dayjs(i.date);\n                return start.isSame(day, 'd');\n            });\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise(resolve => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, _bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        if (!this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = this._service.parent.Organisation.buildings.find(\n            bld => bld.id === this.level.building_id\n        );\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { availabilityOptionsToQuery } from './space.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        Space.setService('Space', this);\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.building_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this.parent.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this.parent.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this.parent.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { MapLocation } from '../location/location.class';\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Class type of required service */\n    protected __type: string = 'User';\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        if (this._service && this._service.parent){\n            this._location = this._service.parent.Locations.process(\n                raw_data.location && raw_data.location instanceof Object\n                    ? raw_data.location\n                    : { name: raw_data.location }\n            );\n        }\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = this._service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Locations) {\n                service.Locations.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User, with_changes: boolean = true): HashMap {\n        const data = super.toJSON(with_changes);\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    const form = new FormGroup(fields);\n    // Listen for changes on the fields and update booking\n    if (form) {\n        const subs: HashMap<Subscription> = {};\n        Object.keys(form.controls).forEach((key: any) => {\n            subs[`change_${key}`] = form.controls[key].valueChanges.subscribe(value =>\n                user.storePendingChange(key, value)\n            );\n        });\n        subs.user = user.changeEvents.subscribe(event => {\n            if (event.type === 'item_saved') {\n                for (const key in subs) {\n                    if (subs[key] instanceof Subscription) {\n                        subs[key].unsubscribe();\n                    }\n                }\n            }\n        });\n    }\n    return form;\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDataClass } from '../base-api.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n\n    constructor(protected _composer: ComposerService, protected uhttp: HttpClient, protected location: Location) {\n        super(_composer);\n        User.setService('User', this);\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this.parent.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this.parent.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this.parent.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                if (this.parent.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = { message: 'Loading user credentials', state: 'complete' };\n                                this.parent.set('loading', loading);\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this.parent.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this.parent.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: string = '60';\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = `${value}`;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: `${time}`,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = this.time.split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        /* istanbul ignore else */\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            const time = this.time.split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        const date = dayjs(this.date).startOf('m');\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            /* istanbul ignore else */\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    /* istanbul ignore else */\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        /* istanbul ignore else */\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._service.Users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._service.Users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.template.html',\n    styleUrls: ['./feedback.styles.scss']\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.Users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._service.Users.current;\n            const delegates = user.delegates.map(\n                (email) =>\n                    this._service.Users.find(email) ||\n                    new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_ids.value ;\n        const space = this._service.Spaces.find(spaces[0]);\n        return spaces.length === 1\n            ? space.name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._service.Users.login({\n            username: form.username,\n            password: form.password\n        }, { form: true }).then(() => {\n            this.loading = false;\n        }, () => {\n            this.loading = false;\n            this.form.controls.password.setErrors({ check: true });\n        });\n    }\n\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._service.Organisation.building;\n    }\n    public set active_building(building: Building) {\n        this._service.Organisation.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._service.Organisation.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emiiter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _service: ApplicationService, private _cdr: ChangeDetectorRef) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const date = +(localStorage.getItem('CONCIERGE.date'));\n            /* istanbul ignore else */\n            if (date && date !== this.date) {\n                this.timeout('init', () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                }, 10)\n            }\n            this.subscription('events', this._service.listen('CONCIERGE.pending_bookings').subscribe((value) => {\n                this.event_map = { ...value } || {};\n                this._cdr.detectChanges();\n            }));\n        });\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(200)\n    .fill(0)\n    .map(i => {\n        const rooms = unique(Array(randomInt(4))\n            .fill(0)\n            .map(i => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]), 'id');\n        // Set the organiser with the generated user list\n        const organiser = randomInt(9999) % 10 === 0 ? MOCK_USERS[MOCK_USERS.length - 1] : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(20))\n                .fill(0)\n                .map(i => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        return generateMockBooking({\n            organiser,\n            attendees,\n            room_ids: rooms.map(i => i.email)\n        });\n    });\n\nMOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  i => i.organiser.email === user.email || i.organiser === user.email || i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  i =>\n                  i.organiser.email === event.query_params.email ||\n                  (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n            );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to ? dayjs(+event.query_params.to * 1000).endOf('m') : start.endOf('d');\n            data = data.filter(i => {\n                const bkn_start = dayjs(i.start_epoch * 1000).startOf('m').second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000);\n                return (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) || (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'));\n            });\n        }\n        return data;\n    }\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: event => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' }\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(space => space.bookings = MOCK_BOOKINGS.filter(booking => booking.room_ids.indexOf(space.email) >= 0));\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    }\n} as MockHttpRequestHandler);\n\n// Handler for updating exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => (j.room_ids).indexOf(i.email) >= 0));\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(i => i.id === event.route_params.id || i.icaluid === event.route_params.id);\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(i => i.bookings = MOCK_BOOKINGS.filter(j => j.room_ids.indexOf(i.email) >= 0));\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else\n            throw { status: 500, message: 'Invalid booking ID' };\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [{\n    id: 'zone_bld-01',\n    zone_id: 'zone_bld-01',\n    name: 'Sydney',\n    settings: {\n        discovery_info: {\n            timezone: 'Australia/Sydney',\n            phone: {\n                emergency: '0412345678',\n                av_help: '0412345678',\n                concierge: '0412345678'\n            },\n            locations: {},\n            desk_tracking: 'sys-B0',\n            systems: {\n                desk_bookings: 'sys-B0'\n            },\n            messaging: 'sys-B0',\n            features: [],\n            catering: {},\n            neighbourhoods: {\n                'zone_lvl-01': {\n                    'Test Searchable': 'Device_Bench'\n                }\n            },\n            visitor_space: 'sydney-10.05@acaprojects.com',\n            levels: [\n                {\n                    level_id: 'zone_lvl-01',\n                    level_name: 'Level 1',\n                    number: 1,\n                    map_url: 'assets/maps/level_01.svg',\n                    floor_type: 'staff',\n                    settings: {\n                        map_features: [\n                            { id: 'Device_Bench', name: 'Device Bench' },\n                            { id: 'people', name: 'People' }\n                        ]\n                    },\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-02',\n                    level_name: 'Level 2',\n                    number: 2,\n                    map_url: 'assets/maps/level_02.svg',\n                    floor_type: 'client',\n                    book_type: 'Request',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-03',\n                    level_name: 'Level 3',\n                    number: 3,\n                    map_url: 'assets/maps/level_03.svg',\n                    floor_type: 'staff',\n                    desks: 6,\n                },\n                {\n                    level_id: 'zone_lvl-10',\n                    level_name: 'Level 10',\n                    number: 10,\n                    map_url: 'assets/maps/level_10.svg',\n                    floor_type: 'staff',\n                    desks: 186,\n                }\n            ],\n            roles: {\n                'fire-warden': [\n                    { name: 'Alex Sorafumo', email: `alex.sorafumo@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Bob Jane', email: `bob.jane@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Rupert', email: `rupert@${DOMAIN}`, phone: '0434567890' }\n                ],\n                'first-aider': [\n                    { name: 'Ben Hoad', email: `ben.hoad@${DOMAIN}`, phone: '0412345678' },\n                    { name: 'Kim Burgess', email: `kim.burgess@${DOMAIN}`, phone: '0423456789' },\n                    { name: 'Mr Pop', email: `mr.pop@${DOMAIN}`, phone: '0434567890' }\n                ]\n            },\n            extras: [\n                { extra_id: 'VidConf', extra_name: 'Video Conference' },\n                { extra_id: 'AV', extra_name: 'AV' },\n                { extra_id: 'presentation', extra_name: 'Wireless Presentation' },\n                { extra_id: 'phone', extra_name: 'Conference Phone' },\n            ],\n            loan_items: [\n                { extra_id: 'ConfKit', extra_name: 'Conference Kit' },\n                { extra_id: 'Chairs', extra_name: 'Chairs' },\n            ],\n        },\n    },\n}];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        }\n    } as MockHttpRequestHandler);\n});\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '1.01', name: 'Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.02', name: 'Collaboration', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.03', name: 'Team Meeting', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.04', name: 'Pod', zones: ['zone_bld-01', 'zone_lvl-01'] },\n    { id: '1.05', name: 'IT Support', zones: ['zone_bld-01', 'zone_lvl-01'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        ...space_data,\n        map_id: `area-${space_data.id}-status`,\n        id: `sys_rm-${space_data.id}`,\n        name: `${space_data.name} ${space_data.id}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ visitor: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for current user\nwindow.control.handlers.push({\n    path: `/api/engine/v2/users/current`,\n    metadata: MOCK_USERS[MOCK_USERS.length - 1],\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n]\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (tapped)=\"category = category + 1\">New Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (tapped)=\"package = package + 1\">Add sub-category</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._service.Organisation.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n\n    @Input() public parent: CateringCategory;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._service.Organisation.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription('item-modal', ref.componentInstance.event.subscribe((event) => {\n            if (event.reason === 'done' && event.metadata) {\n                if (this.item.items) {\n                    (this.item.items as any[]).push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringComponent\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n            >\n                Contains {{ item.items.length }} item{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n            >\n                <span class=\"not-mobile\">Selected </span>{{ item.must_select }} opt<span\n                    class=\"not-mobile\"\n                    >ion</span\n                >{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" (tapped)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (tapped)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (tapped)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (tapped)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._service.Organisation.building;\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'building',\n            this._service.Organisation.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._service.Menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (tapped)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach(item => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._service.Spaces.find(this.order.location_id);\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            booking.storePendingChange('catering', catering);\n            await booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n                this.loading = false;\n            });\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking\n            }\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (tapped)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (tapped)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<CateringOrder[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._service.Organisation.building;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(() => {\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.available_spaces = this._service.Spaces.filter(\n                        (space) => space.zones.indexOf(this.building.id) >= 0\n                    ).map((i) => i.id);\n                })\n            );\n            this.available_spaces = this._service.Spaces.filter(\n                (space) => space.zones.indexOf(this.building.id) >= 0\n            ).map((i) => i.id);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._service.Spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                let orders: CateringOrder[] = [];\n                space_list.forEach((space) => {\n                    space.bookings.forEach((booking) => {\n                        const catering = booking.catering;\n                        catering.forEach((order) => {\n                            (order as any).booking_date = booking.date;\n                            order.booking = booking;\n                        });\n                        orders = orders.concat(booking.catering);\n                    });\n                });\n                orders = unique(orders, 'id');\n                orders = orders.filter(\n                    (order) => this.available_spaces.indexOf(order.location_id) >= 0\n                );\n                orders.sort(\n                    (a, b) =>\n                        a.booking_date +\n                        a.delivery_time * 60 * 1000 -\n                        (b.booking_date + b.delivery_time * 60 * 1000)\n                );\n                return orders;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.orders = list;\n                this.filtered_orders = this.filter(list, this.search);\n            })\n        );\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._service.CateringCategories.update(this.category.id, data)\n                : this._service.CateringCategories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._service.CateringCategories.update(this.category.id, data)\n                : this._service.CateringCategories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id])\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({ ...this.item.toJSON(), ...this.form.value }).toJSON();\n            const request = this.item.id\n                ? this._service.CateringItems.update(this.item.id, data)\n                : this._service.CateringItems.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser_email }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[booking.space?.id] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n\n    /** List of items in the order */\n    public get items(): (CateringCategory)[] {\n        return this.order.items as any || [];\n    }\n}\n","<div class=\"heading\">\n    Order Details\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<button class=\"footer\" mat-button>\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._service.Users.current;\n            const booking = this.booking;\n            const notes = booking.notes;\n            const date = dayjs().startOf('m');\n            booking.storePendingChange('notes', [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: booking.space.id,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ]);\n            this.loading = true;\n            const new_booking: Booking = (await booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (tapped)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { IDataClassEvent } from 'src/app/services/data/base-api.class';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._service.Spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n        const handleChange = (event: IDataClassEvent<Booking>) => {\n            if (event.type === 'item_saved') {\n                this.booking = event.metadata;\n                this.subscription('booking_changes', this.booking.changeEvents.subscribe(handleChange));\n            }\n        };\n        this.subscription('booking_changes', this.booking.changeEvents.subscribe(handleChange));\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            booking.storePendingChange('catering', catering);\n            await booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n                this.loading = false;\n            });\n            this.loading = false;\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.events = [];\n            const building = this._service.Organisation.building;\n            this.space_list = this._service.Spaces.filter(\n                (space) => space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            ).map((i) => i.name);\n            this.processMeetings();\n            this.getMonthlyPending();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        const building = this._service.Organisation.building;\n        this._service.Spaces.query({\n            zone_ids: this.level || building.id,\n            available_from: time.unix(),\n            available_to: end.unix(),\n        }).then((room_list) => {\n            this.space_list = room_list.map((i) => i.id);\n            this.processMeetings();\n            this.loading = false;\n        });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) {\n            return;\n        }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const rm = this._service.Spaces.find(id);\n            /* istanbul ignore else */\n            if (rm) {\n                events = events.concat(rm.bookingsFor(date).filter((booking) => booking.tentative));\n            }\n        }\n        return events.sort((a, b) => a.date - b.date);\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        console.log('Level:', this.level);\n        const building = this._service.Organisation.building;\n        this._service.Spaces.query({\n            zone_ids: this.level || building.id,\n            available_from: start.unix(),\n            available_to: end.unix(),\n        }).then((_) => {\n            const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n            for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                const events = this.process(date.valueOf());\n                pending_list[date.format('YYYY-MM-DD')] = events.length;\n            }\n            this._service.set('CONCIERGE.pending_bookings', pending_list);\n        });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.id === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                this._service.Bookings.accept(this.event.id, {\n                    comment: '',\n                    room_id: this.event.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting approved.');\n                        this.event.approval_status[this.event.space.id] = 'accepted';\n                        STATES[this.event.id] = 'accepted';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error approving meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._service.Bookings.decline(booking.id, {\n                    booking_id: booking.id,\n                    organiser: booking.organiser.email,\n                    icaluid: booking.icaluid,\n                    start: Math.floor(booking.date / 1000),\n                    end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                    room_id: booking.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting declined.');\n                        this.event.approval_status[booking.space.id] = 'declined';\n                        STATES[this.event.id] = 'declined';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error declining meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (tapped)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (tapped)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"description\">\n                <label for=\"notes\">Notes:</label>\n                <div class=\"value\" name=\"notes\" [innerHTML]=\"description || '' | safe\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (tapped)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (tapped)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7' },\n        { name: 'Client', id: 'client', color: '#1F40E6' },\n        { name: 'External', id: 'external', color: '#8C5AC8' },\n        { name: 'Setup', id: 'setup', color: '#d32f2f' },\n        { name: 'Training', id: 'training', color: '#F0E700' },\n        { name: 'Interview', id: 'interview', color: '#348D02' }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._service.Organisation.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._service.Organisation.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._service.Organisation.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(() => {\n                    const building = this._service.Organisation.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._service.Organisation.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_events]=\"true\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"legend\" multiple placeholder=\"No items shown\">\n                      <mat-select-trigger>Legend</mat-select-trigger>\n                      <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                          <div class=\"key\">\n                              <div class=\"text\">{{key?.name}}</div>\n                              <div class=\"colour\">\n                                  <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                              </div>\n                          </div>\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n\n                <mat-slide-toggle\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n    <button mat-button class=\"new-item\" name=\"new\" (tapped)=\"newMeeting()\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">New Meeting</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: any;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.id);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top = (this.event.setup ? this.event.setup / duration : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown ? this.event.breakdown / duration : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (tapped)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: event.approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div\n                    class=\"value\"\n                    [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\"\n                >\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (tapped)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return event.declined\n                    ? (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend.declined !== false\n                    : (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend[event.type] !== false;\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service.listen('APP.breakdown').subscribe((state) => {\n                    this.overflow_only = state;\n                })\n            );\n            this.subscription(\n                'legend',\n                this._service.listen('CONCIERGE.legend').subscribe((state) => {\n                    this.legend = state || {};\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past')\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        booking.storePendingChange('date', date.valueOf());\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._service.Spaces.find(event.container.id.replace('space-col-', ''));\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room')\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        booking.storePendingChange('space_ids', room_list.map(space => space.id));\n        this.checkCollisions(room_list, date.valueOf(), booking.duration, booking.icaluid).then(\n            () => {\n                this.moveBooking(message, booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(spaces: Space[], date: number, duration: number, ignore?: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._service.Spaces.available({\n                room_ids: spaces.map((i) => i.id).join(','),\n                date,\n                duration,\n                ignore,\n                hide_bookings: true,\n            }).then(\n                (list) => {\n                    list.length === spaces.length ? resolve() : reject();\n                },\n                () => reject()\n            );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => resolve(bkn),\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach(item => map[item] = true);\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._service.Organisation.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._service.Spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.init();\n            // Update time\n            this.updateTime();\n            this.interval('time', () => this.updateTime(), 15 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (!this._service.Spaces.is_initialised) {\n            this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n                this.ngOnChanges(changes);\n            });\n            return;\n        }\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level) {\n            const zone_id = !this.level\n                ? this._service.Organisation.building.id\n                : this.level;\n            this.spaces = this._service.Spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.room_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._service.title = 'Day View';\n            this.subscription(\n                'viewing',\n                this._service.listen('CONCIERGE.day_view.viewing').subscribe((event) =>\n                    this.scrollIntoView(event)\n                )\n            );\n            // Subscribe to route query changes\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        this.view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(\n                                JSON.parse(details)\n                            );\n                            this.view(booking);\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n            // Update bookings for visible rooms\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.interval(\n                'scroll',\n                () => {\n                    /* istanbul ignore else */\n                    if (this.scroll_area && this.scroll_area.nativeElement) {\n                        this.updateScroll({ target: this.scroll_area.nativeElement });\n                    }\n                },\n                1000\n            );\n            /* istanbul ignore else */\n            if (this.scroll_area.nativeElement) {\n                this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n            }\n        });\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._service.Organisation.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._service.Spaces.query({\n                room_ids,\n                zone_ids: zone_ids.join(','),\n                available_from: time.unix(),\n                available_to: end.unix(),\n            }).then(\n                (room_list) => {\n                    room_list.forEach((rm) => {\n                        /* istanbul ignore else */\n                        if (this.view_id) {\n                            const booking = rm.bookings.find((i) => i.id === this.view_id);\n                            /* istanbul ignore else */\n                            if (booking) {\n                                this.view(booking);\n                            }\n                        }\n                        const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                        /* istanbul ignore else */\n                        if (space) {\n                            (space as any)._bookings = (rm as any)._bookings;\n                        }\n                    });\n\n                    delete this.loading_space;\n                    this.last_update = dayjs().valueOf();\n                    this.loading_space = {};\n                    this.loading = false;\n                },\n                () => (this.loading = false)\n            );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.long_name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (touchrelease)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (touchrelease)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._service.Organisation.buildings;\n    }\n\n    constructor(private _service: ApplicationService) {}\n\n    public ngOnInit(): void {\n        this._service.Organisation.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.locations = [this._service.Organisation.building];\n        })\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._service.Reports.show(this.report.id, {\n                date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                start_date: Math.floor(this.start_date / 1000),\n                end_date: Math.floor(this.end_date / 1000),\n                zone_ids: this.locations.map((i) => i.id).join(','),\n            }).then(\n                (report) => {\n                    this.loading = false;\n                    this.report_data = new Report({ ...report, type: this.report.id });\n                },\n                (err) => {\n                    this.loading = false;\n                    this._service.notifyError(\n                        `Error generating report. Error: ${err.message || err}`\n                    );\n                }\n            );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date\"\n                [to]=\"start_date * 10\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <mat-select name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (tapped)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (tapped)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' }\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' }\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._service.Users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe(loading => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _service: ApplicationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true }));\n        this.form.controls.attendees.setValue(list);\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._service.Users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (tapped)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (tapped)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.required, Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        this.subscription(\n            'title',\n            this.form.controls.title.valueChanges.subscribe((value: string) =>\n                this.booking.storePendingChange('title', value)\n            )\n        );\n        this.subscription(\n            'attendees',\n            this.form.controls.attendees.valueChanges.subscribe((value: User[]) => {\n                this.booking.storePendingChange(\n                    'attendee_emails',\n                    value.map((user) => user.email)\n                );\n            })\n        );\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.booking.has_changes && this.form.valid) {\n                this.booking.save().then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (tapped)=\"save()\">Save</button>\n        <button mat-button name=\"delete\" class=\"error\" *ngIf=\"booking.id\" (tapped)=\"delete()\">\n            Delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { VisitorsFormModalComponent, VisitorsFormModalData } from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const checked_in_users = this.event.checked_in;\n        const { checked_in, count } = this.event.attendees.reduce((counts, user) => {\n            /* istanbul ignore else */\n            if (user.external) {\n                counts.count++;\n                /* istanbul ignore else */\n                if (checked_in_users.indexOf(user.email) >= 0) {\n                    counts.checked_in++\n                }\n            }\n            return counts;\n        }, { checked_in: 0, count: 0 });\n        return `${checked_in} / ${count}`;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.event.attendee_emails.join(',')}?Subject=\"${this.event.title}\"%20at%20${this.event.start_time},%20${this.event.date_string}`;\n    }\n\n    constructor(private _dialog: MatDialog) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event\n                }\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"staff\">S</div>\n            <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (tapped)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (tapped)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** List of visitor bookings for the current date */\n    public visitor_bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._service.Organisation.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.visitor_bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._service.Organisation.building.id;\n                return this._service.Spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings.filter(bkn => bkn.has_visitors);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.visitor_bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === -1)\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container *ngFor=\"let booking of filtered_bookings; let i = index\">\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === i)\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser_email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser_email\n                : ''\n        }`;\n    }\n\n    constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\">\n        <div class=\"staff\" *ngIf=\"!person.external\">S</div>\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a mat-icon-button matTooltip=\"Email Visitor\" [href]=\"mail_url | safe:'url'\">\n            <action-icon\n                [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n            ></action-icon>\n        </a>\n        <button mat-icon-button matTooltip=\"Checkin Visitor\">\n            <action-icon *ngIf=\"person.external\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss']\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n\n    public get has_visitor_space(): boolean {\n        const building = this._service.Organisation.building;\n        return !!this._service.Spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {}\n\n    ngOnInit(): void {}\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._service.Organisation.building;\n        const space = this._service.Spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking\n                }\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" (dateChange)=\"search_str = ''\">\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n    <button mat-button name=\"new\" class=\"new-item\" (tapped)=\"newVisitorMeeting()\" *ngIf=\"has_visitor_space\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">Add Visitors</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss']\n})\nexport class WeekViewDayDisplayComponent implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateBookings();\n        }\n    }\n\n    private updateBookings(): void {\n        let bookings = [];\n        this.spaces.forEach(space => {\n            bookings = bookings.concat(space.bookingsFor(this.date));\n        });\n        bookings.sort((a, b) => a.date - b.date);\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (tapped)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._service.Spaces.query({\n                    zone_ids: `${this.level}${this.space_type ? ',' + this.space_type : ''}`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix()\n                });\n            }),\n            catchError(_ => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._service.Organisation.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._service.Organisation.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._service.Organisation.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(() => {\n                    const building = this._service.Organisation.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._service.Organisation.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({}),\n            },\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n    <button mat-button class=\"new-item\" name=\"new\" (tapped)=\"newMeeting()\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">New Meeting</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}