{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_users","_org","_spaces","_router","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","booking","save","success","emit","type","notifySuccess","err","notifyError","navigate","close","spaces","changes","date","duration","length","reject","available","room_ids","map","space","join","space_list","was_available","name","old_booking","title","date_value","duration_value","all_day","dayjs","end","add","format","isSame","humaniseDuration","attendees","filter","i","email","organiser","current","body","catering","order","find","a_space","location_id","level","building","buildings","bld","CateringOrder","symbol","currency","Object","reduce","key","Function","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","confirmBooking","order_list","openCateringDetailsModal","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","notes","codes_field","equipment_codes","head_counts_field","expected_attendees","componentInstance","reason","afterClosed","CateringDetailsModalComponent","dirty","notifyInfo","valid","dialog_ref","maxHeight","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","markAsDirty","startOf","valueOf","Input","CateringMenuCategoryComponent","CateringMenuItemComponent","field","list","item","an_item","setAmount","amount","valueChanges","selectPackageOptions","confirmed_item","CateringItem","notifyWarn","PackageOptionsModalComponent","CateringCategory","done","items","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","generateAvailableTimes","time","delivery_time","initForm","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","query","room_id","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","endOf","building_time","toDate","hour","as_dayjs","toLocalDate","possible_end","isAfter","active_building","within_restricted_time","has_available_items","form_controls","building_id","catering_restricted_from","total","restricted","subtract","category","can_order_anytime","confirmOrder","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","forEach","next","BookingSpaceFiltersComponent","locations","locationsChange","building_list","now","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","search_results$","debounceTime","distinctUntilChanged","switchMap","recurrence","recurrence_properties","period","recurr_period","toLowerCase","recurr_end","unix","bookable","catchError","of","onChange","multiple","concat","previous","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","host","conflicts","recurr","conflict_list","replaces","byRequest","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","nativeElement","scrollIntoView","behavior","block","inline","ViewChild","item_list","codes","head_counts","needs_charge_code","active_space","note_list","note","message","charge_code","generateFormFields","is_valid","new_notes","author","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","MeetingCateringDetailsComponent","setItem","JSON","stringify","creator","status","declined","MeetingDetailsDisplayComponent","edited","values","edits","person","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_bookings","_on_error","setLoading","accept","comment","approval_status","decline","booking_id","icaluid","floor","date_string","start_time","deleteMeeting","new_booking","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","must_select","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","old_notes","saveChanges","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","replaced_by","head_count","equipment_code","search$","selected_spaces","request_map","types","active_type","update","space_types","options","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_analytics","_snackbar","_route_trail","_subjects","_observers","ServiceManager","setService","set","isStable","run","_stable","log","setupCache","waitForSettings","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","info","args","stream","force","BehaviorSubject","getValue","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","reload","setInterval","checkForUpdate","bindings","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","zone_id","promise","d","task_name","parameters","task","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","serviceFor","BaseAPIService","_subscribers","_promises","_compare","a","b","_list_filter","_name","_api_route","load","engine","predicate","query_params","update_list","cache","toQueryString","result","http","process","results","new_item","updateList","post","concierge","analyticsEvent","method","post_data","_task","request","delay","stopPoll","sub","_poll","show","interval","complete","put","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","time_changed","_display","subject","start_epoch","Start","end_epoch","End","description","booking_type","visitors","_attendees","organizer","active_user","booked_by","_location","location_name","Date","getTime","checked_in","checkins","notify_users","space_ids","_space_list","space_service","Space","show_as","edited_fields","isArray","flatten","room","auto_approve","indexOf","sort","old_date","from_room","display","v","external","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","generateMockBooking","override","random","padZero","faker","commerce","productName","generateMockUser","users","lorem","paragraph","address","city","randomInt","max","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","user_service","current_user","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","simplified_fields","enable","control","rulesForSpace","space_rules_for_user","hide","rules","hasOwnProperty","zones","zone","rule_block","checkRules","conditions","ruleset","max_length","stringToMinutes","min_length","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","BookingsService","localeCompare","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","timezone","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","includes","price_field","date_field","row","CurrencyPipe","transform","formatRecurrence","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","bkn","linked_spaces","linked_rooms","rm","rulesFor","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","built","build","core_version","version","loadFromFile","app","colors","app_name","shift","file","file_name","clearTimeout","clearInterval","fn","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","_cdr","show_add_item","show_events","dateChange","event_map","detectChanges","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","API","callback","from","to","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","parent","cat","findParent","itm","MOCK_LOCATIONS","lvls","send_acceptance","space_data","Bookings","today","PREDEFINED_USERS","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","json","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","reverse","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","group","parent_id","openItemModal","deleteItem","catering_menu","filtered_menu","loadCateringMenu","search","openCategoryModal","menu","statuses","colour","active_status","viewOrderDetails","filtered_orders","initBookings","queryParamMap","view_id","sub_item","sub_sub_item","_menu_categories","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","access_url","readAsArrayBuffer","_menu_items","storeBooking","new_note","order_id","pending_booking","addNote","updated_booking","deliver_at_time","DayViewApprovalsComponent","processMeetings","getMonthlyPending","previousValue","updateMeetings","currentValue","room_list","waiting_on_event","pending_list","tentative","STATES","DayViewApprovalsEventComponent","acting","length_string","DayViewComponent","active_level","legend","legend_keys","color","updateLevel","newMeeting","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","should_display","queryParams","view","shown_date","toFixed","top","left","overflow_top","overflow_bottom","has_visitors","time_period","expected","inView","dragging","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_count","Set","size","checkCollisions","moveBooking","ignore","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","scroll_area","initSpaces","updateTime","updateBookings","space_type","updateScroll","active_hour","visible_rooms","querySelector","scroll_box","scrollTo","scrollHeight","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","end_date","report","report_data","downloadCSV","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","active_report","loading_state","is_logged_in","mod","EventFormComponent","addFrom","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","VisitorBookingItemComponent","show_attendees","checked_in_users","counts","VisitorTimelineComponent","visitor_bookings","filtered_bookings","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","booking_list","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking\n    booking: Booking\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false; // Bookings are always approved in concierge\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n             this.booking.organiser || this._users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.id === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find(bld => bld.id === space.level.id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id && this.old_booking) {\n            return {};\n        }\n        return Object.keys(this.booking).reduce((map, key) => {\n            if (!(this.booking[key] instanceof Function) && key[0] !== '_') {\n                map[key] = this.booking[key] !== this.old_booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.save().then(\n                    () => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this.event.emit({ type: 'success' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    err => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            err => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (touchrelease)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (touchrelease)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (tapped)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button class=\"inverse\" name=\"new\" (tapped)=\"newBooking()\">New Booking</button>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            case 'form':\n                if (space_list?.length && this.booking?.id) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking.toJSON();\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (!this.form.dirty) {\n            this._service.notifyInfo('No changes have been made to booking');\n            return;\n        }\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (tapped)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (tapped)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (tapped)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items)\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space = this.space_list.find(space => space.id == form_controls.location_id.value) || { level: {} } as any;\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        const building = this.active_building;\n        /* istanbul ignore else */\n        if (!building.catering_restricted_from || building.catering_restricted_from <= 0) {\n            return false;\n        }\n        const date = dayjs();\n        const restricted = dayjs(this.date).subtract(building.catering_restricted_from, 'h');\n        return date.isAfter(restricted, 's');\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].id),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.form.controls.location_id.value;\n        this.form.controls.items.setValue([]);\n        this.loading = true;\n        this._menu.query({ room_id: space }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space = this.form ? this.form.controls.location_id.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.id\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (tapped)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (tapped)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (tapped)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours\n            <span *ngIf=\"active_building?.catering_restricted_from\" class=\"bold\">\n                at least {{ active_building?.catering_restricted_from || '0' }} hours in advance for\n                meetings\n            </span>\n            at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            this.order.changes.delivery_time || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (tapped)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (tapped)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            *ngIf=\"!only_catering\"\n            (tapped)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (tapped)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (tapped)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\">\n            <div class=\"inner\" (tapped)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">Select locations(s)</div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n            <div\n                class=\"list\"\n                [@show]=\"show_locations ? 'show' : 'hide'\"\n            >\n            <div class=\"item\" *ngFor=\"let building of building_list\">\n                <mat-checkbox\n                    (change)=\"\n                        $event.checked\n                            ? addLocationFilter(building)\n                            : removeLocationFilter(building)\n                    \"\n                >\n                    <div class=\"building-name\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                        <div class=\"address\">{{ building.address }}</div>\n                    </div>\n                </mat-checkbox>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (tapped)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (tapped)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (tapped)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (tapped)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.id].controls.notes.value,\n                        space: space.id,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(this.codes[space.id] || ''),\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.booking.space.id);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.booking.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.booking.space.id &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: order.symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" *ngIf=\"!expired\" (tapped)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (tapped)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../confirm-modal/confirm-modal.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface MeetingDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        this._bookings.accept(this.booking.id, {\n            comment: '',\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting approved.');\n            this.booking.approval_status[this.booking.space.id] = 'accepted';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'approved' });\n        }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings.decline(this.booking.id, {\n            booking_id: this.booking.id,\n            organiser: this.booking.organiser.email,\n            icaluid: this.booking.icaluid,\n            start: Math.floor(this.booking.date / 1000),\n            end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n            room_id: this.booking.space.id,\n        }).then(() => {\n            this._service.notifySuccess('Meeting declined.');\n            this.booking.approval_status[this.booking.space.id] = 'declined';\n            this.setLoading(null);\n            this.event.emit({ reason: 'action', metadata: 'declined' });\n        }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<ConfirmModalComponent, ConfirmModalData>(\n            ConfirmModalComponent,\n            {\n                ...CONFIRM_METADATA,\n                data: {\n                    title: 'Delete meeting',\n                    content: `Are you sure you want to delete the meeting in ${this.booking.space.name} at ${this.booking.date_string}, ${this.booking.start_time}?`,\n                    icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                },\n            }\n        );\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.deleteMeeting().catch(this._on_error('Error deleting booking'));\n                }\n                ref.close();\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm'));\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking,\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = await booking.save().catch((err) => {\n            this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n        }) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements [booking]=\"booking\" (event)=\"updateRequirements($event)\"></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (tapped)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (tapped)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (tapped)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    public get setup(): string {\n        return this.booking && this.booking.setup ? humaniseDuration(this.booking.setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        return this.booking && this.booking.breakdown ? humaniseDuration(this.booking.breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return '';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking\n            }\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (tapped)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.booking.space.id === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.space?.name || booking.space_list[0] }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{ (booking.expected_attendees || {})[booking.space?.id || booking.space_list[0]] || '0' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ (booking.equipment_codes || {})[booking.space?.id || booking.space_list[0]] || '&lt;No Charge Code&gt;' }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button *ngIf=\"!expired\" (tapped)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n  selector: 'new-user-modal',\n  templateUrl: './new-user-modal.component.html',\n  styleUrls: ['./new-user-modal.component.scss']\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external'\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (tapped)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderDetailsComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (tapped)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group name=\"sub-item-list\" [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    name=\"selected\"\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    name=\"selected\"\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.id\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup || 0),\n            breakdown: new FormControl(this.booking.breakdown || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this.booking.space.id)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this.booking.space.id,\n                } as BookingNote,\n            ];\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                ...this.form.value,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            new_booking.save().then(\n                (booking) => {\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (tapped)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (tapped)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (tapped)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].id];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.id].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.id].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.id].controls.notes.value,\n                space: space.id,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.id] = this.form[space.id].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.id] = building?.required?.equipment_code || false;\n            this.form[space.id] = new FormGroup({\n                notes: new FormControl(this.notes[space.id] || ''),\n                code: new FormControl(\n                    this.codes[space.id] || '',\n                    this.needs_charge_code[space.id] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.id] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.id].invalid && form[space.id].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].id]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (tapped)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (tapped)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (tapped)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (tapped)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (tapped)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (tapped)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ServiceManager } from './data/service-manager.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n        ServiceManager.setService(ApplicationService, this);\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('APP.breakdown', false);\n        this.set('CONCIERGE.legend', {});\n        this.set('CONCIERGE.pending_bookings', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Analytics service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info',\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000,\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done',\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error',\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning',\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this._initialised.next(true));\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading',\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock,\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete',\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            return Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(\n            (i) => i.id === id || (i.email || '').toLowerCase() === (id || '').toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Setup time before the meeting in minutes */\n    public readonly setup: number;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Breakdown time after booking in minutes */\n    public readonly breakdown: number;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.body =\n            // (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description || '';\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.has_catering = !!raw_data.has_catering;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || 0;\n        this.breakdown = raw_data.breakdown || 0;\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(flatten(Object.keys(raw_data.edits || {}).map(room => {\n                return flatten(Object.values(raw_data.edits[room]));\n            })));\n        this.edits = edited_fields;\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        if (!this.declined) {\n            for (const space of this.space_list) {\n                if (\n                    this.approval_status[space.email] &&\n                    this.approval_status[space.email].indexOf('tentative') >= 0\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id, { room_id: this.space?.id });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((space) => {\n            return !this.id || this.time_changed\n                ? !space ||\n                      (space instanceof Space &&\n                          !space.byRequest({\n                              date: data.date,\n                              duration: data.duration,\n                              host: data.organiser,\n                          }))\n                : (this.approval_status[space.email] || '').indexOf('tentative') < 0;\n        });\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes\n                .filter((note) => note.type !== 'description')\n                .push({\n                    type: 'description',\n                    message: data.body,\n                    author: this.creator.email,\n                    date: dayjs().valueOf(),\n                } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.old_date = this.date;\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find(note => note.type === 'equipment') || (data.catering && data.catering.length)) {\n            data.breakdown = data.breakdown || 15;\n            data.setup = data.setup || 15;\n        }\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n    randomInt,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][randomInt(5)],\n        setup: Math.max(0, (randomInt(12) - 6) * 5),\n        breakdown: Math.max(0, (randomInt(12) - 6) * 5),\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.time.disable();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.time.enable();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) => !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { csvToJson, downloadFile, jsonToCsv, humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(Report);\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(key => key.toLowerCase().includes('room') && key.toLowerCase().includes('email'));\n            const price_field = fields.find(key => key.toLowerCase().includes('price'));\n            const date_field = fields.find(key => key.toLowerCase().includes('date'));\n            for (let row of data){\n                /* istanbul ignore else */\n                if (room_field && price_field) {\n                    const space_service = ServiceManager.serviceFor(Space);\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(bld => bld.id === ((room || {}).level || {}).building_id);\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = (new CurrencyPipe('en_us')).transform(row[price_field] / 100, bld.currency || 'USD');\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] = typeof row[field] === 'string' ? row[field].replace(/\\,/g, '٫') : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n           data = data.map(i => {\n               const booking = new Booking(i).toJSON();\n               delete booking.id;\n               delete booking.icaluid;\n               delete booking.type;\n               delete booking.auto_approve;\n               delete booking.notify_users;\n               delete booking.organiser_email;\n               delete booking.edits;\n               delete booking.catering;\n               delete booking.checked_in;\n               delete booking.old_date;\n               delete booking.from_room;\n               delete booking.approval_status;\n               booking.body = booking.body.replace(/<[^>]*>?/gm, '');\n               booking.organiser = booking.organiser.name || booking.organiser.email;\n               booking.equipment_codes = Object.keys(booking.equipment_codes).map(key => booking.equipment_codes[key]).join(', ');\n               booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n               booking.attendees = booking.attendees.map(person => person.name || person.email).join(', ');\n               booking.start = dayjs(booking.start * 1000).format('DD MMM YYYY, h:mm A');\n               booking.end = dayjs(booking.end * 1000).format('DD MMM YYYY, h:mm A');\n               booking.notes = booking.notes.map(note  => note.author ? `[${note.author}|${note.type}]${note.message.replace(/<[^>]*>?/gm, '')}` : '').join('\\n');\n               booking.setup = humaniseDuration(booking.setup);\n               booking.breakdown = humaniseDuration(booking.breakdown);\n               booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurrence});\n\n               return booking;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Report, this);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        const day = dayjs(date);\n        return this.bookings.filter((i: any) => dayjs(i.date).isSame(day, 'd'));\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email, Validators.required])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (tapped)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (tapped)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (tapped)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (tapped)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        this.date = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: string = '60';\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = `${value}`;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: `${time}`,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = this.time.split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        /* istanbul ignore else */\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            const time = this.time.split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        const date = dayjs(this.date).startOf('m');\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            /* istanbul ignore else */\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    /* istanbul ignore else */\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        /* istanbul ignore else */\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (tapped)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (tapped)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (tapped)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.recurrence\">\n            <label for=\"recurrence\" i18n=\"Booking form recurrence label\">Recurrence: </label>\n            <an-action-field\n                name=\"recurrence\"\n                [placeholder]=\"recurrence\"\n                (onAction)=\"openRecurrenceModal()\"\n            ></an-action-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                name=\"organiser\"\n                formControlName=\"organiser\"\n                [placeholder]=\"form.controls.organiser.value.name || form.controls.organiser.value.email\"\n            >\n                <mat-option *ngFor=\"let user of user_list\" [value]=\"user\">\n                    {{ user.name || user.email }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email<span>*</span>:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (tapped)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (tapped)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (tapped)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _service: ApplicationService, private _cdr: ChangeDetectorRef) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const date = +(localStorage.getItem('CONCIERGE.date'));\n            /* istanbul ignore else */\n            if (date && date !== this.date) {\n                this.timeout('init', () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                }, 10)\n            }\n            this.subscription('events', this._service.listen('CONCIERGE.pending_bookings').subscribe((value) => {\n                this.event_map = { ...value } || {};\n                this._cdr.detectChanges();\n            }));\n        });\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (tapped)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (tapped)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (tapped)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(1000)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[randomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organiser,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][randomInt(3)];\n        }\n        return booking_data;\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            for (const zone of item.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories && category.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === category.parent_categories[0]);\n                    if (parent) {\n                       parent.items.push(category);\n                    } else {\n                        throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            console.log('Body:', category);\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findParent(id: string, list: CateringCategory[]): CateringCategory {\n    for (const category of list) {\n        const found = category.items.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (tapped)=\"category = category + 1\">New Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (tapped)=\"package = package + 1\">Add sub-category</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n\n    @Input() public parent: CateringCategory;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription('item-modal', ref.componentInstance.event.subscribe((event) => {\n            console.log('Details:', event);\n            if (event.reason === 'done' && event.metadata) {\n                if (item.id) {\n                    const index = this.parent.items.findIndex(itm => itm.id === item.id);\n                    (this.parent.items as any[]).splice(index, 1, new CateringItem(event.metadata));\n                    (this.parent as any).items = [...this.parent.items];\n                } else {\n                    (this.item.items as any[]).push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringComponent\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n            >\n                Contains {{ item.items.length }} item{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n            >\n                <span class=\"not-mobile\">Selected </span>{{ item.must_select }} opt<span\n                    class=\"not-mobile\"\n                    >ion</span\n                >{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (tapped)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" (tapped)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (tapped)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (tapped)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (tapped)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (tapped)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach(item => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking\n            }\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (tapped)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (tapped)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<CateringOrder[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.available_spaces = this._spaces.filter(\n                        (space) => space.zones.indexOf(this.building.id) >= 0\n                    ).map((i) => i.id);\n                })\n            );\n            this.available_spaces = this._spaces.filter(\n                (space) => space.zones.indexOf(this.building.id) >= 0\n            ).map((i) => i.id);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                let orders: CateringOrder[] = [];\n                space_list.forEach((space) => {\n                    space.bookings.forEach((booking) => {\n                        const catering = booking.catering;\n                        catering.forEach((order) => {\n                            (order as any).booking_date = booking.date;\n                            order.booking = booking;\n                        });\n                        orders = orders.concat(booking.catering);\n                    });\n                });\n                orders = unique(orders, 'id');\n                orders = orders.filter(\n                    (order) => this.available_spaces.indexOf(order.location_id) >= 0\n                );\n                orders.sort(\n                    (a, b) =>\n                        a.booking_date +\n                        a.delivery_time * 60 * 1000 -\n                        (b.booking_date + b.delivery_time * 60 * 1000)\n                );\n                return orders;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.orders = list;\n                this.filtered_orders = this.filter(list, this.search);\n            })\n        );\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id])\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({ ...this.item.toJSON(), ...this.form.value }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    console.log('Item:', item);\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"uploading\" (tapped)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[booking.space?.id] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n\n    /** List of items in the order */\n    public get items(): (CateringCategory)[] {\n        return this.order.items as any || [];\n    }\n}\n","<div class=\"heading\">\n    Order Details\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<button class=\"footer\" mat-button>\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.id,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking, notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await pending_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (tapped)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            const updated_booking: any = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) =>\n                    space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.id);\n        this.processMeetings();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: time.unix(),\n                available_to: end.unix(),\n            })\n            .then((room_list) => {\n                this.space_list = room_list.map((i) => i.id);\n                this.processMeetings();\n                this.loading = false;\n            });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) {\n            return;\n        }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const space = this._spaces.find(id);\n            /* istanbul ignore else */\n            if (space) {\n                events = events.concat(\n                    space.bookingsFor(date).filter((booking) => booking.tentative)\n                );\n            }\n        }\n        return events.sort((a, b) => a.date - b.date);\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((_) => {\n                const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n                for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                    const events = this.process(date.valueOf());\n                    pending_list[date.format('YYYY-MM-DD')] = events.length;\n                }\n                this._service.set('CONCIERGE.pending_bookings', pending_list);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.id === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                this._bookings\n                    .accept(this.event.id, {\n                        comment: '',\n                        room_id: this.event.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space.id] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_id: booking.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.id] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (tapped)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (tapped)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (tapped)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (tapped)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7' },\n        { name: 'Client', id: 'client', color: '#1F40E6' },\n        { name: 'External', id: 'external', color: '#8C5AC8' },\n        { name: 'Setup', id: 'setup', color: '#d32f2f' },\n        { name: 'Training', id: 'training', color: '#F0E700' },\n        { name: 'Interview', id: 'interview', color: '#348D02' }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_events]=\"true\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"level\" [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"legend\" [(ngModel)]=\"legend\" multiple placeholder=\"No items shown\">\n                      <mat-select-trigger>Legend</mat-select-trigger>\n                      <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                          <div class=\"key\">\n                              <div class=\"text\">{{key?.name}}</div>\n                              <div class=\"colour\">\n                                  <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                              </div>\n                          </div>\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: any;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.id);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top = (this.event.setup ? this.event.setup / duration : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown ? this.event.breakdown / duration : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event && !hide\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (tapped)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: event.approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (tapped)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return event.declined\n                    ? (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend.declined\n                    : (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend[event.type];\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service.listen('APP.breakdown').subscribe((state) => {\n                    this.overflow_only = state;\n                })\n            );\n            this.subscription(\n                'legend',\n                this._service.listen('CONCIERGE.legend').subscribe((state) => {\n                    this.legend = state || {};\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking,\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => resolve(bkn),\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach((item) => (map[item] = true));\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._org.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._spaces\n                .query({\n                    room_ids,\n                    zone_ids: zone_ids.join(','),\n                    available_from: time.unix(),\n                    available_to: end.unix(),\n                })\n                .then(\n                    (room_list) => {\n                        room_list.forEach((rm) => {\n                            /* istanbul ignore else */\n                            if (this.view_id) {\n                                const booking = rm.bookings.find((i) => i.id === this.view_id);\n                                /* istanbul ignore else */\n                                if (booking) {\n                                    this.view(booking);\n                                }\n                            }\n                            const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                            /* istanbul ignore else */\n                            if (space) {\n                                (space as any).bookings = (rm as any).bookings;\n                            }\n                        });\n\n                        delete this.loading_space;\n                        this.last_update = dayjs().valueOf();\n                        this.loading_space = {};\n                        this.loading = false;\n                    },\n                    () => (this.loading = false)\n                );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.long_name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (touchrelease)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (touchrelease)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date\"\n                [to]=\"start_date * 10\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <mat-select name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (tapped)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (tapped)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' }\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' }\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (tapped)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (tapped)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.required, Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const new_booking = new Booking({ ...this.booking, ...this.form.value });\n                new_booking.save().then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (tapped)=\"save()\">Save</button>\n        <button mat-button name=\"delete\" class=\"error\" *ngIf=\"booking.id\" (tapped)=\"delete()\">\n            Delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const checked_in_users = this.event.checked_in;\n        const { checked_in, count } = this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n        return `${checked_in} / ${count}`;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"staff\">S</div>\n            <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (tapped)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (tapped)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** List of visitor bookings for the current date */\n    public visitor_bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.visitor_bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings.filter(bkn => bkn.has_visitors);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.visitor_bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === -1)\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container *ngFor=\"let booking of filtered_bookings; let i = index\">\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === i)\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\">\n        <div class=\"staff\" *ngIf=\"!person.external\">S</div>\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a mat-icon-button matTooltip=\"Email Visitor\" [href]=\"mail_url | safe:'url'\">\n            <action-icon\n                [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n            ></action-icon>\n        </a>\n        <button mat-icon-button matTooltip=\"Checkin Visitor\">\n            <action-icon *ngIf=\"person.external\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {}\n\n    public ngOnInit(): void {}\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" (dateChange)=\"search_str = ''\" [show_add_item]=\"has_visitor_space\" (event)=\"newVisitorMeeting()\">\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss']\n})\nexport class WeekViewDayDisplayComponent implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateBookings();\n        }\n    }\n\n    private updateBookings(): void {\n        let bookings = [];\n        this.spaces.forEach(space => {\n            bookings = bookings.concat(space.bookingsFor(this.date));\n        });\n        bookings.sort((a, b) => a.date - b.date);\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (tapped)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({}),\n            },\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}