{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_org","_users","_spaces","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_bookings","_router","_dialog_ref","_data","event","EventEmitter","loading","disableClose","console","log","checkSpaceAvailability","message","notifyError","save","booking","err","success","emit","reason","notifySuccess","navigate","close","spaces","changes","date","duration","length","reject","available","room_ids","map","space","join","space_list","was_available","name","old_booking","title","date_value","duration_value","all_day","dayjs","end","add","format","isSame","humaniseDuration","creator","current","attendees","filter","i","email","organiser","body","catering","order","find","a_space","location_id","level","building","buildings","bld","building_id","CateringOrder","symbol","currency","Object","reduce","key","Function","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","type","toNextFlowStep","toPreviousFlowStep","resetForm","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","confirmBooking","order_list","openCateringDetailsModal","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","notes","codes_field","equipment_codes","head_counts_field","expected_attendees","componentInstance","afterClosed","CateringDetailsModalComponent","valid","dialog_ref","maxHeight","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","markAsDirty","startOf","valueOf","Input","CateringMenuCategoryComponent","CateringMenuItemComponent","field","list","item","an_item","setAmount","amount","valueChanges","items","must_select","selectPackageOptions","confirmed_item","CateringItem","notifyWarn","PackageOptionsModalComponent","CateringCategory","done","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","generateAvailableTimes","time","delivery_time","initForm","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","hide_details","query","room_id","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","endOf","building_time","toDate","hour","as_dayjs","toLocalDate","possible_end","isAfter","active_building","within_restricted_time","has_available_items","out_of_hours","form_controls","catering_restricted_from","total","category","can_order_anytime","confirmOrder","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","forEach","next","BookingSpaceFiltersComponent","locations","locationsChange","building_list","now","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","search_results$","debounceTime","distinctUntilChanged","switchMap","recurrence","recurrence_properties","period","recurr_period","toLowerCase","recurr_end","unix","bookable","catchError","of","onChange","multiple","concat","previous","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","host","conflicts","recurr","conflict_list","replaces","byRequest","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","nativeElement","scrollIntoView","behavior","block","inline","ViewChild","item_list","codes","head_counts","needs_charge_code","active_space","note_list","note","charge_code","generateFormFields","is_valid","new_notes","author","_scrollToBottom","_content_el","scrollTo","top","scrollHeight","left","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","DeleteConfirmModalComponent","MeetingCateringDetailsComponent","setItem","JSON","stringify","status","declined","editMeetingCatering","MeetingDetailsDisplayComponent","edited","values","edits","person","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_on_error","setLoading","accept","concierge","icaluid","approval_status","set","decline","booking_id","floor","deleteMeeting","new_booking","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","random","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","dirty","old_notes","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","date_string","replaced_by","head_count","equipment_code","search$","selected_spaces","request_map","types","active_type","update","space_types","options","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_analytics","_snackbar","_route_trail","_subjects","_observers","ServiceManager","setService","isStable","run","_stable","setupCache","waitForSettings","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","debug","notify","error","warn","info","args","stream","force","BehaviorSubject","getValue","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","notifyInfo","reload","setInterval","checkForUpdate","bindings","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","zone_id","promise","d","task_name","parameters","task","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","serviceFor","BaseAPIService","_subscribers","_promises","_compare","a","b","_list_filter","_name","_api_route","load","engine","predicate","query_params","update_list","cache","toQueryString","result","http","process","results","updateList","new_item","post","analyticsEvent","method","post_data","_task","request","delay","stopPoll","sub","_poll","show","interval","complete","put","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","time_changed","_display","subject","start_epoch","Start","end_epoch","End","old_start","old_end","description","booking_type","visitors","_attendees","organizer","active_user","booked_by","_location","location_name","Date","getTime","checked_in","checkins","notify_users","space_ids","_space_list","space_service","Space","show_as","edited_fields","isArray","flatten","room","json","auto_approve","sort","from_room","eq_notes","display","indexOf","v","external","subtract","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","generateMockBooking","override","padZero","faker","commerce","productName","generateMockUser","users","lorem","paragraph","address","city","randomInt","max","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","user_service","current_user","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","simplified_fields","enable","control","rulesForSpace","space_rules_for_user","hide","rules","hasOwnProperty","zones","zone","rule_block","checkRules","conditions","ruleset","max_length","stringToMinutes","min_length","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","bookings","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","BookingsService","localeCompare","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","timezone","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","includes","price_field","date_field","row","CurrencyPipe","transform","room_email","old_date","formatRecurrence","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","bkn","linked_spaces","linked_rooms","rm","rulesFor","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","built","build","core_version","version","loadFromFile","app","colors","app_name","shift","file","file_name","clearTimeout","clearInterval","fn","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","new_date","from","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","$event","stopPropagation","closeDatePicker","DurationFieldComponent","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","_cdr","show_add_item","show_events","dateChange","event_map","detectChanges","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","API","callback","to","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","parent","cat","findParent","itm","MOCK_LOCATIONS","lvls","send_acceptance","space_data","Bookings","today","PREDEFINED_USERS","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","reverse","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","group","parent_id","_menu_items","_menu_categories","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","search","openCategoryModal","depth","menu","statuses","colour","active_status","updated_booking","viewOrderDetails","filtered_orders","initBookings","queryParamMap","view_id","sub_item","sub_sub_item","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","deliver_at_time","DayViewApprovalsComponent","updateMeetings","getMonthlyPending","approved","previousValue","processMeetings","currentValue","room_list","waiting_on_event","pending_list","tentative","STATES","DayViewApprovalsEventComponent","acting","start_time","length_string","DayViewComponent","active_level","legend","legend_keys","color","updateLevel","newMeeting","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","should_display","queryParams","view","shown_date","toFixed","overflow_top","overflow_bottom","has_visitors","time_period","expected","inView","dragging","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_count","Set","size","checkCollisions","moveBooking","ignore","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","scroll_area","initSpaces","updateTime","updateBookings","space_type","updateScroll","active_hour","visible_rooms","querySelector","scroll_box","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","end_date","report","report_data","downloadCSV","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","active_report","loading_state","is_logged_in","mod","EventFormComponent","addFrom","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","VisitorBookingItemComponent","checked_in_users","counts","show_attendees","checkedInStatus","VisitorTimelineComponent","filtered_bookings","show_all","date_display","VisitorComponent","_element","is_match","addClass","removeClass","checkin","host_email","attendee_email","attendee_name","response_type","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","booking_list","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { UsersService } from './services/data/users/users.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking\n    booking: Booking\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false; // Bookings are always approved in concierge\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    public get user(): User {\n        return this.booking.creator || this._users.current;\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n             this.booking.organiser || this._users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.email === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find(bld => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        if (!this.booking.id && this.old_booking) {\n            return {};\n        }\n        return Object.keys(this.booking).reduce((map, key) => {\n            if (!(this.booking[key] instanceof Function) && key[0] !== '_') {\n                map[key] = this.booking[key] !== this.old_booking[key];\n            }\n            return map;\n        }, {});\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public async saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        console.log('Check Available');\n        let message = await this.checkSpaceAvailability().catch(e => e);\n        if (message) {\n            this.loading = null;\n            this._dialog_ref.disableClose = false;\n            this._service.notifyError(`Error checking space availability: ${message}`);\n            return;\n        }\n        console.log('Make Booking');\n        this.loading = 'Processing booking request...';\n        const booking = await this._bookings.save(this.booking).catch(err => {\n            this._service.notifyError(\n                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n            );\n        })\n        this.loading = null;\n        this._dialog_ref.disableClose = false;\n        if (booking) {\n            this.success = true;\n            this.event.emit({ reason: 'done' });\n            this._service.notifySuccess(\n                `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n            );\n        }\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this.event.emit({ reason: 'action' } as DialogEvent)\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"user && user.email !== organiser.email\">\n            <label>Booked By:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n        <div class=\"info\" *ngIf=\"booking?.id\">\n            * - changed fields\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            case 'form':\n                if (space_list?.length && this.booking?.id) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking.toJSON();\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking,\n                        ...value,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                } else if (event.reason === 'action') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent implements OnInit {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","\n<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item [disabled]=\"disabled\" [symbol]=\"symbol\" [item]=\"item\" [field]=\"items\"></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">Category contains no available items</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (this.item.package && amount < value && this.item.items && this.item.items.length && this.item.must_select < this.item.items.length) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringItem(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space = this.space_list.find(space => space.email == form_controls.location_id.value) || { level: {} } as any;\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder(this.form.value);\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(space => space.email === this.form.controls.location_id.value);\n        if (!this.hide_details) {\n            this.form.controls.items.setValue([]);\n        }\n        this.loading = true;\n        this._menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space = this.form ? this.form.controls.location_id.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n            end = start.add(13, 'h');\n        } else {\n            const possible_end = as_dayjs.hour(20);\n            if (end.isAfter(possible_end)) {\n                end = possible_end;\n            }\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form && !hide_details\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (click)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button mat-button class=\"inverse\" (click)=\"event.emit()\" i18n=\"Catering order cancel action\">Back</button>\n        <button mat-button name=\"confirm\" [disabled]=\"!item_count || out_of_hours\" (click)=\"confirmOrder()\" i18n=\"Catering order confirm action\">\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">Loading menu for {{ active_building?.name }}...</div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            this.order.changes.delivery_time || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button mat-icon-button name=\"edit\" (click)=\"edit.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            *ngIf=\"!only_catering\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">Select locations(s)</div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n            <div\n                class=\"list\"\n                [@show]=\"show_locations ? 'show' : 'hide'\"\n            >\n            <div class=\"item\" *ngFor=\"let building of building_list\">\n                <mat-checkbox\n                    (change)=\"\n                        $event.checked\n                            ? addLocationFilter(building)\n                            : removeLocationFilter(building)\n                    \"\n                >\n                    <div class=\"building-name\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                        <div class=\"address\">{{ building.address }}</div>\n                    </div>\n                </mat-checkbox>\n            </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (click)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces || [];\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleteing meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.booking.space.email);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.booking.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.booking.space.email &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { DeleteConfirmModalComponent } from '../delete-confirm-modal/delete-confirm-modal.component';\n\nexport interface MeetingDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_id: this.booking.space?.id,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                this.booking.approval_status[this.booking.space.id] = 'accepted';\n                this._service.set('UPDATED_BOOKING', this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'approved' });\n            }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: Math.floor(this.booking.date / 1000),\n                end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n                room_id: this.booking.space.id,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.approval_status[this.booking.space.id] = 'declined';\n                this._service.set('UPDATED_BOOKING', this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'declined' });\n            }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                console.log('Event:', event);\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking')\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => ref.close(), 3000);\n                }\n            })\n        );\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking,\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = (await booking.save().catch((err) => {\n            this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n        })) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            this._service.set('UPDATED_BOOKING', new_booking);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements [booking]=\"booking\" (event)=\"updateRequirements($event)\"></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (click)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (click)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (click)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.booking.space.email];\n        if (setup > 120) {\n            setup = Math.floor(setup / 60);\n        }\n        return setup ? humaniseDuration(setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.booking.space.email];\n        if (breakdown > 120) {\n            breakdown = Math.floor(breakdown / 60);\n        }\n        return breakdown ? humaniseDuration(breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private') || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.booking.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ booking.space?.name || booking.space_list[0]?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    booking.space?.email || booking.space_list[0]?.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    booking.space?.email || booking.space_list[0]?.email\n                ] || '&lt;No Charge Code&gt;'\n            }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n    BookingCateringOrderDetailsComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent,\n        DeleteConfirmModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items;\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => (amount + item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group name=\"sub-item-list\" [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    name=\"selected\"\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    name=\"selected\"\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this.booking.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this.booking.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this.booking.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this.booking.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            console.log('Form:', value);\n            const setup = { ...this.booking.setup };\n            setup[this.booking.space.email] = value.setup * 60;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this.booking.space.email] = value.breakdown * 60;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            console.log('Booking:', new_booking);\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            new_booking.save().then(\n                (booking) => {\n                    this._service.set('UPDATED_BOOKING', new_booking);\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ServiceManager } from './data/service-manager.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n        ServiceManager.setService(ApplicationService, this);\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('APP.breakdown', false);\n        this.set('CONCIERGE.legend', {});\n        this.set('UPDATED_BOOKING', null);\n        this.set('CONCIERGE.pending_bookings', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Analytics service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info',\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000,\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done',\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error',\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning',\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this._initialised.next(true));\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading',\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock,\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete',\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            return Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(\n            (i) => i.id === id || (i.email || '').toLowerCase() === (id || '').toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Old  start */\n    public readonly old_start: number;\n    /** Old end */\n    public readonly old_end: number;\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.old_start = raw_data.old_start || dayjs(this.date).unix();\n        this.old_end =\n            raw_data.old_end ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).unix();\n        this.body =\n            // (raw_data.body instanceof Object ? raw_data.body.content : raw_data.body) ||\n            raw_data.description || (typeof raw_data.body === 'string' ? raw_data.body : '');\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        Object.keys(this.setup).forEach(key => this.setup[key] = Math.floor(this.setup[key] / 60));\n        Object.keys(this.breakdown).forEach(key => this.breakdown[key] = Math.floor(this.breakdown[key] / 60));\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status = raw_data.approval_status || raw_data.status || {};\n        this.checked_in = raw_data.checked_in || raw_data.checkins || [];\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        if (raw_data.show_as && raw_data.show_as === 'cancelled') {\n            this.space_list.forEach((space) => (this.approval_status[space.email] = 'declined'));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                  flatten(\n                      Object.keys(raw_data.edits || {}).map((room) => {\n                          return flatten(Object.values(raw_data.edits[room]));\n                      })\n                  )\n              );\n        this.edits = edited_fields;\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').indexOf('decline') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].indexOf('tentative') >= 0 ||\n                    this.approval_status[space.email].indexOf('decline') >= 0)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        if (!this.declined) {\n            for (const space of this.space_list) {\n                if (\n                    this.approval_status[space.email] &&\n                    this.approval_status[space.email].indexOf('tentative') >= 0\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            const json = this.toJSON();\n            return this._service.delete(this.id, {\n                concierge: true,\n                host: this.organiser.email,\n                room_id: this.space?.id,\n                icaluid: this.icaluid,\n                start: json.start,\n                end: json.end\n            });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map(_ => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find((note) => note.type === 'equipment')) {\n            const eq_notes = data.notes.filter((note) => note.type === 'equipment');\n            for (const note of eq_notes) {\n                data.setup[note.space] = 15;\n                data.breakdown[note.space] = 15;\n            }\n        }\n        if (data.catering && data.catering.length) {\n            for (const order of data.catering) {\n                data.setup[order.location_id] = 15;\n                data.breakdown[order.location_id] = 15;\n            }\n        }\n        Object.keys(data.setup).forEach(key => data.setup[key] = data.setup[key] * 60);\n        Object.keys(data.breakdown).forEach(key => data.breakdown[key] = data.breakdown[key] * 60);\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n    randomInt,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { Space } from '../spaces/space.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { ServiceManager } from '../service-manager.class';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][randomInt(5)],\n        setup: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    let time = dayjs().startOf('m');\n    time = time.minute(Math.ceil(time.minute() / 5) * 5);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date || time.valueOf(), [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.time.disable();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.time.enable();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BookingCheckinParams } from './booking.interfaces';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) =>\n            !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock || data.hide;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { csvToJson, downloadFile, jsonToCsv, humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(Report);\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(key => key.toLowerCase().includes('room') && key.toLowerCase().includes('email'));\n            const price_field = fields.find(key => key.toLowerCase().includes('price'));\n            const date_field = fields.find(key => key.toLowerCase().includes('date'));\n            for (let row of data){\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(bld => bld.id === ((room || {}).level || {}).building_id);\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = (new CurrencyPipe('en_us')).transform(row[price_field] / 100, bld.currency || 'USD');\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] = typeof row[field] === 'string' ? row[field].replace(/\\,/g, '٫') : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n           data = data.map(i => {\n               const booking = new Booking(i).toJSON();\n               if (booking.setup instanceof Object) {\n                   booking.setup = booking.setup[booking.room_email];\n               }\n               if (booking.breakdown instanceof Object) {\n                   booking.breakdown = booking.breakdown[booking.room_email];\n               }\n               booking.setup = humaniseDuration((booking.setup || 0) / 60);\n               booking.breakdown = humaniseDuration((booking.breakdown || 0) / 60);\n               delete booking.id;\n               delete booking.icaluid;\n               delete booking.type;\n               delete booking.auto_approve;\n               delete booking.notify_users;\n               delete booking.organiser_email;\n               delete booking.edits;\n               delete booking.catering;\n               delete booking.checked_in;\n               delete booking.old_date;\n               delete booking.from_room;\n               delete booking.recurr;\n               delete booking.event_subject;\n               delete booking.events;\n               delete booking.old_start;\n               delete booking.old_end;\n               delete booking.time_changed;\n               delete booking.approval_status;\n               booking.description = booking.body;\n               delete booking.body;\n               booking.description = booking.description.replace(/<[^>]*>?/gm, '');\n               booking.organiser = booking.organiser.name || booking.organiser.email;\n               booking.creator = booking.creator.name || booking.creator.email;\n               booking.equipment_codes = Object.keys(booking.equipment_codes).map(key => booking.equipment_codes[key]).join(', ');\n               booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n               booking.attendees = booking.attendees.map(person => person.name || person.email).join(', ');\n               booking.start = dayjs(booking.start * 1000).format('DD MMM YYYY, h:mm A');\n               booking.end = dayjs(booking.end * 1000).format('DD MMM YYYY, h:mm A');\n               booking.notes = booking.notes.map(note  => note.author ? `[${note.author}|${note.type}]${note.message.replace(/<[^>]*>?/gm, '')}` : '').join('\\n');\n               booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurrence});\n\n               return booking;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Report, this);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        const day = dayjs(date);\n        return this.bookings.filter((i: any) => dayjs(i.date).isSame(day, 'd'));\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (click)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (click)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DurationFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n\n    public duration: string = '60';\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = `${value}`;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n        while (time <= max) {\n            blocks.push({\n                id: `${time}`,\n                name: `${humaniseDuration(time)}${date ? ' (' + date.add(time, 'm').format('h:mm A') + ')': ''}`\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            New Contact\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title));\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss']\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _service: ApplicationService, private _cdr: ChangeDetectorRef) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            const date = +(localStorage.getItem('CONCIERGE.date'));\n            /* istanbul ignore else */\n            if (date && date !== this.date) {\n                this.timeout('init', () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                }, 10)\n            }\n            this.subscription('events', this._service.listen('CONCIERGE.pending_bookings').subscribe((value) => {\n                this.event_map = { ...value } || {};\n                this._cdr.detectChanges();\n            }));\n        });\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(1000)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[randomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organiser,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][randomInt(3)];\n        }\n        return booking_data;\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            for (const zone of item.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories && category.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === category.parent_categories[0]);\n                    if (parent) {\n                       parent.items.push(category);\n                    } else {\n                        throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            console.log('Body:', category);\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findParent(id: string, list: CateringCategory[]): CateringCategory {\n    for (const category of list) {\n        const found = category.items.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (click)=\"category = category + 1\">Add Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (click)=\"package = package + 1\">Add Sub-Category/Package</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { SharedOverlaysModule } from 'src/app/overlays/overlays.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        SharedOverlaysModule\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency || 'USD';\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                console.log('Details:', event);\n                if (event.reason === 'done' && event.metadata) {\n                    if (item.id) {\n                        const index = this.parent.items.findIndex((itm) => itm.id === item.id);\n                        (this.parent.items as any[]).splice(\n                            index,\n                            1,\n                            new CateringItem(event.metadata)\n                        );\n                        (this.parent as any).items = [...this.parent.items];\n                    } else {\n                        (this.item.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringCategory\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item instanceof CateringCategory\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                }\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n            >\n                Contains {{ item.items.length }} item{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n            >\n                <span class=\"not-mobile\">Selected </span>{{ item.must_select }} opt<span\n                    class=\"not-mobile\"\n                    >ion</span\n                >{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (click)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach(item => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            const updated_booking = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (booking) {\n                this._service.set('UPDATED_BOOKING', updated_booking);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking\n            }\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<CateringOrder[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.available_spaces = this._spaces.filter(\n                        (space) => space.zones.indexOf(this.building.id) >= 0\n                    ).map((i) => i.id);\n                })\n            );\n            this.available_spaces = this._spaces.filter(\n                (space) => space.zones.indexOf(this.building.id) >= 0\n            ).map((i) => i.id);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                let orders: CateringOrder[] = [];\n                space_list.forEach((space) => {\n                    space.bookings.forEach((booking) => {\n                        const catering = booking.catering;\n                        catering.forEach((order) => {\n                            (order as any).booking_date = booking.date;\n                            order.booking = booking;\n                        });\n                        orders = orders.concat(booking.catering);\n                    });\n                });\n                orders = unique(orders, 'id');\n                orders = orders.filter(\n                    (order) => this.available_spaces.indexOf(order.location_id) >= 0\n                );\n                orders.sort(\n                    (a, b) =>\n                        a.booking_date +\n                        a.delivery_time * 60 * 1000 -\n                        (b.booking_date + b.delivery_time * 60 * 1000)\n                );\n                return orders;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.orders = list;\n                this.filtered_orders = this.filter(list, this.search);\n            })\n        );\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${this.category.package ? 'Package' : 'Sub-Category'}...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id])\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({ ...this.item.toJSON(), ...this.form.value }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    console.log('Item:', item);\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[booking.space?.id] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return (this.order.items as any) || [];\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService) {}\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking, catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [date]=\"booking.date\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.email,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking, notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await pending_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                this._service.set('UPDATED_BOOKING', new_booking);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking, catering });\n            const updated_booking: any = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                this._service.set('UPDATED_BOOKING', updated_booking);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) =>\n                    space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.id);\n        this.updateMeetings();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n        this.subscription('UPDATED', this._service.listen('UPDATED_BOOKING').subscribe((value: Booking) => {\n            if (value) {\n                console.log('Updated:', value);\n                const bookings = this.events.filter(bkn => bkn.icaluid !== value.icaluid);\n                if (!value.approved && !value.declined) {\n                    bookings.push(value);\n                }\n                this.events = bookings;\n            }\n        }));\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: time.unix(),\n                available_to: end.unix(),\n            })\n            .then((room_list) => {\n                this.space_list = room_list.map((i) => i.id);\n                this.processMeetings();\n                this.loading = false;\n            });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) {\n            return;\n        }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const space = this._spaces.find(id);\n            /* istanbul ignore else */\n            if (space) {\n                events = events.concat(\n                    space.bookingsFor(date).filter((booking) => booking.tentative)\n                );\n            }\n        }\n        events.sort((a, b) => a.date - b.date);\n        return unique(events, 'id');\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((_) => {\n                const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n                for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                    const events = this.process(date.valueOf());\n                    pending_list[date.format('YYYY-MM-DD')] = events.length;\n                }\n                this._service.set('CONCIERGE.pending_bookings', pending_list);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.email === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_id: this.event.space?.id,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space.id] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            this._service.set('UPDATED_BOOKING', this.event);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_id: booking.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.id] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            this._service.set('UPDATED_BOOKING', this.event);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (click)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (click)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (click)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (click)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true }\n    ]\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend() {\n        this.legend = this.legend_keys.reduce((list, key) => {\n            if (key.active) {\n                list.push(key.id)\n            }\n            return list;\n        }, []);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button class=\"not-desktop\" [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_list\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_list=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend()\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: Booking;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /** Whether booking is approved for the event in the displayed space */\n    public get approved(): boolean {\n        return this.event.approved || this.event.approval_status[this.space.email].includes('approved');\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.event.setup[this.event.space.email]\n                    ? this.event.setup[this.event.space.email] / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown[this.event.space.email]\n                    ? this.event.breakdown[this.event.space.email] / duration\n                    : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event && !hide\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (click)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return (\n                    (!this.overflow_only ||\n                        event.setup[event.space.email] ||\n                        event.breakdown[event.space.email]) &&\n                    ((event.declined && this.legend.declined) ||\n                        (!event.declined && this.legend[event.type]))\n                );\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => (this.overflow_only = state))\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription('UPDATED', this._service.listen('UPDATED_BOOKING').subscribe((value: Booking) => {\n                if (value && value instanceof Booking) {\n                    console.log('Updated:', value);\n                    const bookings = this.space.bookings.filter(bkn => bkn.icaluid !== value.icaluid);\n                    if (value.space_list.find(space => space.email === this.space.email)) {\n                        bookings.push(value);\n                    }\n                    this.space = new Space({ ...this.space, bookings });\n                }\n            }));\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking,\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => {\n                                resolve(bkn);\n                                this._service.set('UPDATED_BOOKING', bkn);\n                            },\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach((item) => (map[item] = true));\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._org.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._spaces\n                .query({\n                    room_ids,\n                    zone_ids: zone_ids.join(','),\n                    available_from: time.unix(),\n                    available_to: end.unix(),\n                })\n                .then(\n                    (room_list) => {\n                        room_list.forEach((rm) => {\n                            /* istanbul ignore else */\n                            if (this.view_id) {\n                                const booking = rm.bookings.find((i) => i.id === this.view_id);\n                                /* istanbul ignore else */\n                                if (booking) {\n                                    this.view(booking);\n                                }\n                            }\n                            const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                            /* istanbul ignore else */\n                            if (space) {\n                                (space as any).bookings = (rm as any).bookings;\n                            }\n                        });\n\n                        delete this.loading_space;\n                        this.last_update = dayjs().valueOf();\n                        this.loading_space = {};\n                        this.loading = false;\n                    },\n                    () => {\n                        delete this.loading_space;\n                        this.loading_space = {};\n                        this.loading = false;\n                    }\n                );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (click)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date\"\n                [to]=\"start_date * 10\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <mat-select name=\"locations\" [(ngModel)]=\"locations[0]\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' }\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' }\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true, email: `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com` }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.required, Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const new_booking = new Booking({ ...this.booking, ...this.form.value });\n                new_booking.save().then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._service.set('UPDATED_BOOKING', bkn);\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (click)=\"save()\">Save</button>\n        <button mat-button name=\"delete\" class=\"error\" *ngIf=\"booking.id\" (click)=\"delete()\">\n            Delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        return this.event.status === 'upcoming' || this.event.status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checked_in;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (click)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (click)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    public trackBy(index: number, booking: Booking) {\n      return booking.id;\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        }).filter(bkn => this.show_all ? true : bkn.has_visitors);\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === -1\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container\n                *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\"\n            >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === i\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.status === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checked_in.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendee_email: this.person.email,\n                attendee_name: this.person.name,\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in user. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event,\n                checked_in: [...this.event.checked_in, this.person.email],\n            });\n        }\n        this.loading = false;\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a mat-icon-button matTooltip=\"Email Visitor\" [disabled]=\"invalid_email\" [href]=\"mail_url | safe: 'url'\">\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {}\n\n    public ngOnInit(): void {}\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss']\n})\nexport class WeekViewDayDisplayComponent implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateBookings();\n        }\n    }\n\n    private updateBookings(): void {\n        let bookings = [];\n        this.spaces.forEach(space => {\n            bookings = bookings.concat(space.bookingsFor(this.date));\n        });\n        bookings.sort((a, b) => a.date - b.date);\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({}),\n            },\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}