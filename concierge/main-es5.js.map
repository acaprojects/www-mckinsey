{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking-state.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/catering/catering.utilities.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/replace.pipe.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/reports.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/spec-helpers.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/settings.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_org","_users","_spaces","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_bookings","_booking_state","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","booking","time_changed","old_booking","date","duration","save","bkn","success","replace","emit","reason","notifySuccess","err","notifyError","spaces","length","reject","all_day","available","room_ids","map","space","join","dayjs","startOf","valueOf","ignore","icaluid","space_list","was_available","name","current","title","date_value","duration_value","end","add","format","isSame","formatRecurrence","recurrence","humaniseDuration","attendees","filter","i","email","organiser","equipment_codes","catering","codes","order","location_id","charge_code","notes","note","type","reduce","message","body","find","a_space","level","building","buildings","bld","building_id","CateringOrder","symbol","currency","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","close","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","navigate","confirmBooking","order_list","openCateringDetailsModal","markAsDirty","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","codes_field","head_counts_field","expected_attendees","componentInstance","afterClosed","CateringDetailsModalComponent","valid","dialog_ref","maxHeight","booking_type","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","Input","CateringMenuCategoryComponent","hasSelectionRequirements","category","must_select","items","item","getActiveList","list","amount","concat","CateringMenuItemComponent","changes","field","an_item","setAmount","valueChanges","updatePackageSelection","selectPackageOptions","confirmed_item","CateringCategory","notifyWarn","CateringItem","cart_item","active_items","forEach","includes","PackageOptionsModalComponent","done","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","search$","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","BehaviorSubject","matched_items","generateAvailableTimes","str","search","toLowerCase","group","time","delivery_time","initForm","_input_el","show_search","nativeElement","focus","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","query","zone_id","zones","c","out_of_stock","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","now","endOf","building_time","space_email","catering_hours","hour","timezone","padZero","floor","toDate","as_dayjs","possible_end","isAfter","active_building","within_restricted_time","has_available_items","out_of_hours","form_controls","catering_restricted_from","total","can_order_anytime","confirmOrder","ViewChild","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","previous","next","$event","stopPropagation","BookingSpaceFiltersComponent","locations","locationsChange","building_list","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","request_id","search_results$","debounceTime","distinctUntilChanged","switchMap","randomInt","bookable","catchError","of","error","resp","zone","sort","a","b","onChange","multiple","space_a","space_b","bld_b","localeCompare","sort_order","reverse","a_has_zone","indexOf","b_has_zone","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","host","conflicts","recurr","conflict_list","replaces","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","scrollIntoView","behavior","block","inline","item_list","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","author","_scrollToBottom","Validators","required","minLength","_content_el","scrollTo","top","scrollHeight","left","active_form","errors","minlength","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","DeleteConfirmModalComponent","MeetingCateringDetailsComponent","setItem","JSON","stringify","creator","status","declined","editMeetingCatering","MeetingDetailsDisplayComponent","edited","Object","values","edits","person","period","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_on_error","setLoading","bookings","accept","concierge","room_email","approval_status","decline","booking_id","deleteMeeting","new_booking","s","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","random","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","dirty","old_notes","RECURRENCE_METADATA","periods","details","occurrences","space_details","updateOccurrences","occurrence","unshift","date_string","replaced_by","head_count","equipment_code","selected_spaces","request_map","types","active_type","update","space_types","options","byRequest","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_snackbar","_analytics","_subjects","_observers","set","isStable","run","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","warn","info","args","stream","force","getValue","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","getItem","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","notifyInfo","reload","setInterval","checkForUpdate","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","room_name","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","predicate","query_params","cache","toQueryString","result","http","d","process","results","new_item","post","analyticsEvent","task_name","method","post_data","_task","request","put","label","raw_item","BookingStateService","_poll","_long_poll","_filters","_date","Date","_loading","_state","combineLatest","filtered","startOfDay","endOfDay","filterBookings","filtered_week","startOfWeek","endOfWeek","filtered_month","startOfMonth","endOfMonth","fzone","available_from","available_to","search_long","props","processBookings","delay","interval","clearInterval","new_bookings","replaceBookings","from","to","filters","intersects","timePeriodsIntersect","in_zone","has_space","space_emails","in_zones","show","hide_type","_display","subject","start_epoch","Start","end_epoch","End","old_start","unix","old_end","description","_attendees","organizer","active_user","booked_by","_location","location_name","getTime","checked_in","checkins","check_ins","notify_users","space_ids","room_id","_space_list","space_service","ServiceManager","serviceFor","Space","edited_fields","isArray","flatten","room","has_visitors","json","auto_approve","from_room","eq_notes","mergeCateringOrders","display","v","external","subtract","new_list","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","initialTime","mockDate","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","list_length","expected","matches","new_expected","new_codes","simplified_fields","updateValueAndValidity","enable","control","rulesForSpace","space_rules_for_user","hide","rules","hasOwnProperty","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","parts","split","statusFromBookings","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","filter_options","filtered_list","updated_list","start1","end1","start2","end2","day1","end_time1","day2","end_time2","BookingsService","setService","task","CateringCategoriesService","is_category","order_anytime","_amount","instance_id","parent_categories","from_month","to_month","prior_notice","notice","price","supplier_cost","minimum_quantity","max","maximum_quantity","category_ids","categories","image_path","catering_type","allergy","cateringItems","filteredCateringItems","availableItems","anytime","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","generateCateringOrderFormFields","storePendingChanges","mergeCateringItemWithFormData","existing","override","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","address","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","toUpperCase","short_name","map_url","floor_type","available_buildings","OrganisationService","_organisation","ids","_active_building","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","price_field","date_field","row","CurrencyPipe","transform","cancelled","isCancelled","remove_fields","output","idx_a","idx_b","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","linked_spaces","linked_rooms","rm","rulesFor","availabilityOptionsToQuery","blds","SpacesService","respond","available_spaces","linked","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","current_user","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","_app_name","_overrides","_observables","VERSION","built","isSameDay","semver","DEFAULT_SETTINGS","override_settings","slice","clearTimeout","fn","Function","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","useInput","previous_value","ctrl_key","shift_key","new_value","Number","isNaN","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","old_date","new_date","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","file","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","_router","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","from_date","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","ReplacePipe","Pipe","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","show_add_item","show_events","dateChange","event_map","tentative","updateDate","setDate","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","predictableRandomInt","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","generateMockBooking","menu","MOCK_MENU","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","parent","cat","findParent","itm","found","findItem","MOCK_LOCATIONS","lvls","generateMockLocation","send_acceptance","end_date","space_data","generateMockSpace","Bookings","today","generateMockUser","PREDEFINED_USERS","faker","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","setMockBookingStartDatetime","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","app_name","colors","shift","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","querySelector","getAttribute","language","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","xmur3","rand","sfc32","imul","charCodeAt","SERVICE","bookingState","setZone","jest","setFilters","startPolling","startPollingMonth","startPollingWeek","generateMockAppService","navigateBack","Composer","Hotkeys","Users","generateMockDataService","generateMockBuilding","Locations","Base","Menu","Spaces","Reports","CateringItems","CateringCategories","booking_list","mockReturnValue","addFrom","removeFrom","updateList","clearList","removeFromList","checkin","is_logged_in","mockImplementation","SPACE_COUNT","overrides","firstName","lastName","USER_DOMAIN","commerce","productName","business","BOOKING_COUNT","BOOKING_DATE","generateMockCateringOrder","lorem","paragraph","city","BLD_COUNT","LVL_COUNT","generateMockLevel","features","test","nested","level2","org","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","pickMenuItem","menu_map","fixed_locations","maps","ORG_COUNT","generateMockOrganisation","HAS_ERROR","validateDate","is_from","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","queryParamMap","relativeTo","queryParams","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","parent_id","_menu_items","_menu_categories","updateItemList","old_item","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","openCategoryModal","depth","item_details","statuses","colour","active_status","updateItemDetails","updated_booking","sub_item","sub_sub_item","viewOrderDetails","filtered_orders","display_orders","view_id","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","file_name","uploads","complete","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","deliver_at_time","DayViewApprovalsComponent","stopPolling","STATES","DayViewApprovalsEventComponent","acting","start_time","length_string","DayViewComponent","active_level","legend","legend_list","legend_keys","color","updateLevel","newMeeting","updateLegend","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","view","shown_date","toFixed","overflow_top","overflow_bottom","approved","time_period","inView","dragging","event_list","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_list","room_count","Set","size","checkCollisions","moveBooking","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","space_zones","scroll_area","initSpaces","updateTime","space_type","spaceJson","updateScroll","active_hour","scroll_box","date_percent","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","multipleLocations","report","report_data","downloadCSV","checkDates","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","multi_locations","active_report","loading_state","mod","EventFormComponent","VisitorFormComponent","personChange","VisitorsFormModalComponent","attendee","checked","VisitorBookingItemComponent","checked_in_users","counts","host_email","response_type","show_attendees","checkedInStatus","VisitorTimelineComponent","filtered_bookings","updateEvents","show_all","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","general","copyright","booking_types","show_fields","html_body","multiple_spaces","desk_start","day_view","dragdrop","visitors","app","logo_dark","background","logo_light","env","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { UsersService } from './services/data/users/users.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false;\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Active user */\n    public get user(): User {\n        return this._users.current;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day && duration_value < 25 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.booking.recurrence);\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.time_changed =\n                    this.old_booking &&\n                    (this.old_booking.date !== this.booking.date ||\n                        this.old_booking.duration !== this.booking.duration);\n                this._bookings.save(this.booking).then(\n                    (bkn) => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        this._booking_state.replace(bkn);\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id &&\n                (this.booking.date === this.old_booking.date &&\n                    this.booking.duration === this.old_booking.duration)) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const all_day = this.booking.all_day;\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: all_day\n                        ? dayjs(this.booking.date).startOf('d').valueOf()\n                        : this.booking.date,\n                    duration: all_day ? 24 * 60 : this.booking.duration,\n                    ignore: this.booking.icaluid\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        if (space_list.length < spaces.length) {\n                            return reject(\n                                `${spaces[0].name} is not available at the select time period.`\n                            );\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\">\n                        <div class=\"text\" [title]=\"item?.name\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"organiser && organiser.email !== user.email\">\n            <label>Booked by<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list.find(order => this.form.controls.space_list.value.find(space => space.email === order.location_id)) &&\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (!space_list || !space_list.length || !this.booking.id) {\n                    this.navigate('search');\n                } else if (this.booking.id && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking ? this._data.booking.toJSON() : {};\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking.toJSON(),\n                        ...value,\n                        booking_type: value.type,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                } else if (event.reason === 'action') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.availableItems && category.availableItems.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.availableItems\">\n        <a-catering-order-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.availableItems.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.availableItems.length, plural, =1 { Contains {{ item.availableItems.length }} item } other {\n                Contains {{ item.availableItems.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.availableItems.length || item.package\"\n        [useInput]=\"item.must_select === 0\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.availableItems && item.availableItems.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.availableItems\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { toDate } from 'date-fns-tz';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { padZero } from 'src/app/shared/utilities/general.utilities';\nimport { BehaviorSubject } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n    /** Whether the search input should be shown */\n    public show_search: boolean;\n    /** Current search string for filtering */\n    public readonly search$ = new BehaviorSubject('');\n    /** List of menu items that match the search string */\n    public matched_items: CateringItem[] = [];\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /* istanbul ignore next */\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n        this.subscription(\n            'search',\n            this.search$\n                .pipe(\n                    map((str) => {\n                        const search = str.toLowerCase();\n                        const items = [];\n                        for (const category of this.category_list) {\n                            if (category.items) {\n                                for (const group of category.items) {\n                                    if ((group as any).items.length) {\n                                        if (\n                                            (group as any).package &&\n                                            (group.name.toLowerCase().includes(search) ||\n                                                (group as any).items.find((item) =>\n                                                    item.name.toLowerCase().includes(search)\n                                                ))\n                                        ) {\n                                            items.push(group);\n                                        } else {\n                                            for (const item of (group as any).items) {\n                                                if (item.name.toLowerCase().includes(search)) {\n                                                    items.push(item);\n                                                }\n                                            }\n                                        }\n                                    } else {\n                                        if (group.name.toLowerCase().includes(search)) {\n                                            items.push(group);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        return items;\n                    })\n                )\n                .subscribe((items) => (this.matched_items = items))\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public focusSearch() {\n        if (this._input_el && this.show_search) {\n            this._input_el.nativeElement.focus();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                all_day: this.all_day,\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...this.form.value });\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu\n            .query({ zone_id: this._org.buildings.find((bld) => space.zones.includes(bld.id)).id })\n            .then(\n                (list) => {\n                    this.loading = false;\n                    this.category_list = list\n                        .map((i) => new CateringCategory(i))\n                        .filter(c => !c.out_of_stock);\n                },\n                () => (this.loading = false)\n            );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = dayjs();\n        const space_email = this.form ? this.form.controls.location_id.value : null;\n        let catering_hours = { start: 7, end: 20 };\n        building_time = building_time.minute(0).hour(catering_hours.start);\n        if (space_email) {\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => space?.zones.includes(bld.id));\n            catering_hours = building?.catering_hours || catering_hours;\n            building_time = building_time.minute(0).hour(catering_hours.start);\n            if (building && building.timezone) {\n                const hour = padZero(Math.floor(catering_hours.start), 2);\n                const minute = padZero(Math.floor(catering_hours.start * 60) % 60, 2);\n                building_time = dayjs(\n                    toDate(`${start.format(`YYYY-MM-DD`)}T${hour}:${minute} ${building.timezone}`)\n                );\n            }\n        }\n        const as_dayjs = dayjs(building_time);\n        if (this.all_day || this.duration >= (catering_hours.end - catering_hours.start) * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(catering_hours.end - catering_hours.start, 'h');\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        const possible_end = building_time.add(catering_hours.end - catering_hours.start, 'h');\n        if (end.isAfter(possible_end, 'm')) {\n            end = possible_end;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"search\" [class.min]=\"hide_details\">\n                <button\n                    mat-icon-button\n                    [disabled]=\"!can_order\"\n                    (click)=\"\n                        show_search = !show_search;\n                        !show_search ? search$.next('') : '';\n                        focusSearch()\n                    \"\n                >\n                    <app-icon\n                        [icon]=\"{\n                            class: 'material-icons',\n                            content: show_search ? 'close' : 'search'\n                        }\"\n                    ></app-icon>\n                </button>\n                <div class=\"search-input\" [class.show]=\"show_search || compact\">\n                    <div class=\"input\">\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                #input\n                                matInput\n                                [ngModel]=\"search$ | async\"\n                                (ngModelChange)=\"search$.next($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Search for items...\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" [class.is-search]=\"search$ | async\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"search$ | async; else menu\">\n            <div class=\"item\" *ngFor=\"let item of matched_items\">\n                <a-catering-order-item\n                    [compact]=\"compact\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    [symbol]=\"symbol\"\n                    [item]=\"item\"\n                    [field]=\"form.controls.items\"\n                ></a-catering-order-item>\n            </div>\n        </ng-container>\n        <ng-template #menu>\n            <ng-container *ngIf=\"!active_category; else category_display\">\n                <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                    <button\n                        mat-button\n                        class=\"category\"\n                        *ngFor=\"let item of category_list\"\n                        [style.background-image]=\"'url(' + item.image_path + ')'\"\n                        [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                        (click)=\"active_category = item\"\n                    >\n                        <div class=\"overlay\"></div>\n                        <div class=\"name\">{{ item.name }}</div>\n                    </button>\n                </div>\n            </ng-container>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            name=\"previous\"\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"next\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit([...this.locations]);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\" xPosition=\"before\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss'],\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((_) => {\n                    this.loading = true;\n                    request_id = randomInt(9999_9999);\n                    const date = dayjs(this.form.controls.date.value);\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.all_day.value\n                            ? date.startOf('d').valueOf()\n                            : date.valueOf(),\n                        duration: this.form.controls.all_day.value\n                            ? 24 * 60\n                            : this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    const id = request_id;\n                    return this._spaces.available(query).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [], error: _})),\n                map((resp: { id: number, list: Space[]}) => {\n                    this.loading = false;\n                    return resp.id === request_id ? resp.list : this.space_list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.space_list = list.filter((space) => {\n                        if (!space.was_available) {\n                            return false;\n                        }\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    });\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = (_) => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find((item) => item.id === space.id)) {\n                this.spaces.setValue(list.filter((item) => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    public sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find((bld) => space_a.zones.includes(bld.id));\n        const bld_b = this._org.buildings.find((bld) => space_b.zones.includes(bld.id));\n        if (bld && bld !== bld_b) {\n            return bld.name.localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return space_a.name.localeCompare(space_b.name);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n            minBufferPx=\"900\" maxBufferPx=\"1200\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    public get is_hidden(): boolean {\n        return false;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        return false;\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (click)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface CateringConfirmModalData {\n    all_day: boolean;\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        let date = dayjs(this._data.date);\n        if (this._data.all_day) {\n            date = date.startOf('d');\n        }\n        if (this._data.form && this._data.form.controls.delivery_time) {\n            date = date.add(this._data.form.controls.delivery_time.value, 'm');\n        }\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item.toJSON()));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.minlength;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id] ? this.form[order.location_id].controls.code.value : '',\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ?\n                        [Validators.required, Validators.minLength(4)] : [Validators.minLength(4)]),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                    <mat-error i18n=\"Catering details charge code error\">\n                        {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleting meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.space.email);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.space.email &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                [class.edited]=\"booking.edits.includes(order.id)\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('charge_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('catering_note|' + space.email)\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end * 1000).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { DeleteConfirmModalComponent } from '../delete-confirm-modal/delete-confirm-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nexport interface MeetingDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    public set booking(booking: Booking) {\n        this._data.booking = booking;\n        // if space selected no longer exists on booking change, pick first one.\n        if (!this._data.booking.space_list.find(s => s.id === this._data.space?.id)) {\n            this._data.space = this._data.booking.space_list[0];\n        }\n    }\n\n    /** Space to display booking details for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.approval_status[this.space.email]?.includes('decline') ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'bookings',\n            this._booking_state.bookings.subscribe((list) => {\n                const booking = list.find((bkn) => bkn.icaluid === this.booking.icaluid);\n                if (booking) {\n                    this.booking = booking;\n                }\n            }),\n        );\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_email: this.space.email,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                this.booking.approval_status[this.space.email] = 'accepted';\n                this._booking_state.replace(this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'approved' });\n            }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: Math.floor(this.booking.date / 1000),\n                end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n                room_email: this.space.email,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.approval_status[this.booking.space.email] = 'declined';\n                this._booking_state.replace(this.booking);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'declined' });\n            }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking'),\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => ref.close(), 3000);\n                }\n            }),\n        );\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form: FormGroup) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking.toJSON(),\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = (await this._bookings\n            .save(booking)\n            .catch(this._on_error(`Error updating requirements`))) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            this._booking_state.replace(new_booking);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\" [class.edited]=\"booking.edits.includes('title')\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\" [space]=\"space\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements\n                [booking]=\"booking\"\n                [space]=\"space\"\n                (event)=\"updateRequirements($event)\"\n            ></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\" [space]=\"space\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\" [space]=\"space\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (click)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (click)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (click)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.space.email];\n        if (setup > 120) {\n            setup = Math.floor(setup / 60);\n        }\n        return setup ? humaniseDuration(setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.space.email];\n        if (breakdown > 120) {\n            breakdown = Math.floor(breakdown / 60);\n        }\n        return breakdown ? humaniseDuration(breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private' && note.space === this.space.email) || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                space: this.space,\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('setup|' + space.email)\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('breakdown|' + space.email)\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('private_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ space.name || booking.space_list[0]?.name }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('expected_attendees|' + space.email)\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '&lt;No Charge Code&gt;'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button name=\"previous\" class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button name=\"next\" (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n    BookingCateringOrderDetailsComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent,\n        DeleteConfirmModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.availableItems && package.availableItems.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.availableItems\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nexport interface PrivateDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this._data.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this._data.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this._data.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this._data.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this._data.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            const setup = { ...this.booking.setup };\n            setup[this._data.space.email] = value.setup * 60;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this._data.space.email] = value.breakdown * 60;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this._bookings.save(new_booking).then(\n                (booking) => {\n                    this._booking_state.replace(booking);\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    public get invalid_charge_code(): boolean {\n        return this.active_form.controls.code.errors?.minlength;\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required, Validators.minLength(4)] : [\n                        Validators.minLength(4)\n                    ],\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.email].invalid && form[space.email].touched\">\n                        {{\n                            space.name +\n                                (form[space.email].invalid && form[space.email].touched ? '*' : '')\n                        }}\n                    </span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Catering details charge code error\">\n                            {{ invalid_charge_code ? 'Valid Charge Code Required' : 'Charge Code is required'}}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { sort } from 'src/app/services/data/spaces/space.utilities';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss'],\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration,\n                });\n            }),\n            catchError((_) => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter(\n                    (item: any) =>\n                        (this.active_type && this.active_type.id ? item.zones.includes(`${this.active_type.id}`) : true) &&\n                        !selected.find((space) => space.id === item.id)\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => sort(a, b, this._org.buildings));\n                this.update();\n            })\n        );\n        this.active_building = this._data.spaces?.length\n            ? this._org.buildings.find((i) => i.id === this._data.spaces[0].level.building_id)\n            : this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter((a_space) => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host,\n        };\n        this.selected_spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ConsoleStream, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading');\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = host.includes('localhost') && port === '4200' ? '' : settings.route || '';\n        const mock =\n            this._settings.get('mock') ||\n            location.href.includes('mock=true') ||\n            localStorage.getItem('mock') === 'true';\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.settings?.room_name || raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list: T[] = this.get('list');\n        return list.filter(predicate);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list');\n        return list.find(\n            (i) => i.id === id || i.email?.toLowerCase() === id.toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = {}): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { startOfDay, endOfDay, startOfWeek, endOfWeek, startOfMonth, endOfMonth } from 'date-fns';\nimport { BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { map, switchMap, debounceTime, catchError, filter } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BaseClass } from 'src/app/shared/base.class';\nimport { timePeriodsIntersect, replaceBookings } from './booking.utilities';\nimport { SpacesService } from '../spaces/spaces.service';\nimport { Space } from '../spaces/space.class';\n\nexport type BookingType =\n    | 'internal'\n    | 'client'\n    | 'external'\n    | 'setup'\n    | 'training'\n    | 'interview'\n    | 'declined';\n\nexport interface BookingFilters {\n    /** List of zone ids to get bookings for */\n    zone_ids?: string[];\n    space_emails?: string[];\n    hide_type?: BookingType[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingStateService extends BaseClass {\n    /** List of bookings */\n    private _poll = new BehaviorSubject<boolean>(false);\n    /** List of bookings */\n    private _long_poll = new BehaviorSubject<'month' | 'week' | ''>('');\n    /** List of bookings */\n    private _bookings = new BehaviorSubject<Booking[]>([]);\n    /** Filter details for bookings */\n    private _filters = new BehaviorSubject<BookingFilters>({});\n    /** Currently active date */\n    private _date = new BehaviorSubject<number>(new Date().valueOf());\n    /** Currently displayed zone */\n    private _zone = new BehaviorSubject<string>('');\n    /** Whether booking data is being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Observable for filter and booking list changes */\n    private _state = combineLatest(this._bookings, this._filters, this._date, this._zone);\n\n    /** Observable for list of bookings */\n    public readonly bookings = this._bookings.asObservable();\n    /** Observable for active date */\n    public readonly date = this._date.asObservable();\n    /** Observable for active zone */\n    public readonly zone = this._date.asObservable();\n    /** Observable for loading state of bookings */\n    public readonly loading = this._loading.asObservable();\n    /** Obsevable for filtered list of bookings */\n    public readonly filtered = this._state.pipe(\n        map(() => {\n            const start = startOfDay(new Date(this._date.getValue()));\n            const end = endOfDay(start);\n            return this.filterBookings(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings of the active week */\n    public readonly filtered_week = this._state.pipe(\n        map(() => {\n            const start = startOfWeek(new Date(this._date.getValue()));\n            const end = endOfWeek(start);\n            return this.filterBookings(start, end);\n        })\n    );\n    /** Obsevable for filtered list of bookings for active month */\n    public readonly filtered_month = this._state.pipe(\n        map(() => {\n            const start = startOfMonth(new Date(this._date.getValue()));\n            const end = endOfMonth(start);\n            return this.filterBookings(start, end);\n        })\n    );\n\n    /** Active filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n\n    constructor(private _spaces: SpacesService) {\n        super();\n        /** Generate observable for updating bookings */\n        const search = combineLatest(this._poll, this._zone, this._date).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap(() => {\n                const fzone = this._zone.getValue();\n                if (!fzone) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = startOfDay(new Date(this._date.getValue()));\n                const end = endOfDay(start);\n                return this._spaces.query({\n                    zone_ids: fzone,\n                    available_from: Math.floor(start.valueOf() / 1000),\n                    available_to: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Generate observable for updating bookings */\n        const search_long = combineLatest(this._long_poll, this._zone, this._date).pipe(\n            filter((i) => !!i[0]),\n            debounceTime(500),\n            switchMap((props) => {\n                const type = props[0];\n                const fzone = props[1];\n                if (!fzone) {\n                    return of([]);\n                }\n                this._loading.next(true);\n                const start = (type === 'week' ? startOfWeek : startOfMonth)(new Date(props[2]));\n                const end = (type === 'week' ? endOfWeek : endOfMonth)(start);\n                return this._spaces.query({\n                    zone_ids: fzone,\n                    available_from: Math.floor(start.valueOf() / 1000),\n                    available_to: Math.floor(end.valueOf() / 1000),\n                });\n            }),\n            catchError(() => of([]))\n        );\n        /** Subscribe to update observable */\n        search.subscribe((space_list) => {\n            this.processBookings(space_list);\n            this._loading.next(false);\n        });\n        search_long.subscribe((space_list) => {\n            this.processBookings(space_list, this._long_poll.getValue() as any);\n            this._loading.next(false);\n        });\n    }\n\n    /**\n     * Update the booking filters\n     * @param details\n     */\n    public setFilters(details: BookingFilters) {\n        this._filters.next(details);\n    }\n\n    /**\n     * Update the booking date\n     * @param details\n     */\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    /**\n     * Update the booking's zone\n     * @param details\n     */\n    public setZone(zone: string) {\n        this._zone.next(zone);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPolling(delay: number = 10 * 1000) {\n        this._poll.next(true);\n        this.interval('polling', () => this._poll.next(true), delay);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingWeek(delay: number = 30 * 1000) {\n        this._long_poll.next('week');\n        this.interval('polling_long', () => this._long_poll.next('week'), delay);\n    }\n\n    /**\n     * Start polling to update bookings\n     * @param delay Duration between polling events in milliseconds\n     */\n    public startPollingMonth(delay: number = 5 * 60 * 1000) {\n        this._long_poll.next('month');\n        this.interval('polling_long', () => this._long_poll.next('month'), delay);\n    }\n\n    /**\n     * Stop polling to update bookings;\n     */\n    public stopPolling() {\n        this._poll.next(false);\n        this.clearInterval('polling');\n        this._long_poll.next('');\n        this.clearInterval('polling_long');\n    }\n\n    /**\n     * Add booking to bookings listing\n     * @param booking\n     */\n    public add(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Update booking in the bookings list\n     * @param booking\n     */\n    public replace(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings\n            .filter((bkn) => bkn.icaluid !== booking.icaluid)\n            .concat([booking]);\n        this._bookings.next(new_bookings);\n    }\n\n    /**\n     * Remove booking in the bookings list\n     * @param booking\n     */\n    public remove(booking: Booking) {\n        const bookings = this._bookings.getValue();\n        const new_bookings = bookings.filter((bkn) => bkn.icaluid !== booking.icaluid);\n        this._bookings.next(new_bookings);\n    }\n\n    private processBookings(space_list: Space[], period: 'day' | 'week' | 'month' = 'day') {\n        const start = (period === 'month'\n            ? startOfMonth\n            : period === 'week'\n            ? startOfWeek\n            : startOfDay)(new Date(this._date.getValue()));\n        const end = (period === 'month' ? endOfMonth : period === 'week' ? endOfWeek : endOfDay)(\n            start\n        );\n        let bookings = this._bookings.getValue();\n        space_list.forEach(\n            (space) =>\n                (bookings = replaceBookings(\n                    bookings,\n                    space.bookings.map((bkn) => new Booking(bkn)),\n                    {\n                        space: space.email,\n                        from: start.valueOf(),\n                        to: end.valueOf(),\n                    }\n                ))\n        );\n        this._bookings.next(bookings);\n    }\n\n    private filterBookings(start: Date, end: Date) {\n        const filters = this._filters.getValue();\n        const bookings = this._bookings.getValue();\n        const fzone = this._zone.getValue();\n        return bookings.filter((bkn) => {\n            const intersects = timePeriodsIntersect(\n                start.valueOf(),\n                end.valueOf(),\n                bkn.date,\n                bkn.date + bkn.duration * 60 * 1000\n            );\n            const in_zone = !!bkn.space_list.find((space) => space.zones.includes(fzone));\n            const has_space =\n                !filters.space_emails?.length ||\n                !!bkn.space_list.find((space) => filters.space_emails.includes(space.email));\n            const in_zones =\n                !filters.zone_ids?.length ||\n                !!bkn.space_list.find((space) =>\n                    space.zones.find((zone) => filters.zone_ids.includes(zone))\n                );\n            const type = bkn.declined ? 'declined' : bkn.type;\n            const show = !filters.hide_type?.length || !filters.hide_type.includes(type as any);\n            return intersects && has_space && in_zone && in_zones && show;\n        });\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Old  start */\n    public readonly old_start: number;\n    /** Old end */\n    public readonly old_end: number;\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        // if it exists as a key, use the value directly.\n        // if we initialize without a value, switch to checking duration.\n        // This fixes MCK-826\n        if ('all_day' in raw_data) {\n            this.all_day = raw_data.all_day;\n        } else {\n            this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        }\n        this.old_start = raw_data.old_start || dayjs(this.date).unix();\n        this.old_end =\n            raw_data.old_end ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).unix();\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        Object.keys(this.setup).forEach(\n            (key) => (this.setup[key] = Math.floor(this.setup[key] / 60))\n        );\n        Object.keys(this.breakdown).forEach(\n            (key) => (this.breakdown[key] = Math.floor(this.breakdown[key] / 60))\n        );\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status =\n            (raw_data.status instanceof Object ? raw_data.status : '') ||\n            raw_data.approval_status ||\n            {};\n        this.checked_in =\n            raw_data.checked_in || raw_data.checkins || Object.keys(raw_data.check_ins || {});\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        for (const id of space_ids) {\n            this.approval_status[id] = this.approval_status[id] || 'accepted';\n        }\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                  flatten(\n                      Object.keys(raw_data.edits || {}).map((room) => {\n                          return flatten(Object.values(raw_data.edits[room]));\n                      })\n                  )\n              );\n        this.edits = edited_fields;\n        this.type = raw_data.booking_type || (this.has_visitors ? 'external' : null) || 'internal';\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').includes('decline')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].includes('tentative') ||\n                    this.approval_status[space.email].includes('decline'))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            const json = this.toJSON();\n            return this._service.delete(this.id, {\n                concierge: true,\n                host: this.organiser.email,\n                room_id: this.space?.id,\n                icaluid: this.icaluid,\n                start: json.start,\n                end: json.end,\n            });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((_) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find((note) => note.type === 'equipment')) {\n            const eq_notes = data.notes.filter((note) => note.type === 'equipment');\n            for (const note of eq_notes) {\n                data.setup[note.space] = data.setup[note.space] || 15;\n                data.breakdown[note.space] = data.breakdown[note.space] || 15;\n            }\n        }\n        data.catering = data.catering.filter((order) => data.room_ids.includes(order.location_id));\n        data.catering = mergeCateringOrders(data.catering);\n        if (data.catering && data.catering.length) {\n            for (const order of data.catering) {\n                data.setup[order.location_id] = data.setup[order.location_id] || 15;\n                data.breakdown[order.location_id] = data.breakdown[order.location_id] || 15;\n            }\n        }\n        Object.keys(data.setup).forEach((key) => (data.setup[key] = data.setup[key] * 60));\n        Object.keys(data.breakdown).forEach(\n            (key) => (data.breakdown[key] = data.breakdown[key] * 60)\n        );\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n\n/**\n * Merge catering orders with same time and location\n * @param order_list List of catering orders\n */\nexport function mergeCateringOrders(order_list: CateringOrder[]) {\n    for (let i = 0; i < order_list.length; i++) {\n        const orders = order_list.filter(\n            (order) =>\n                order.location_id === order_list[i].location_id &&\n                order.delivery_time === order_list[i].delivery_time\n        );\n        if (orders.length > 1) {\n            const new_list = order_list.filter(\n                (order) =>\n                    !(order.location_id === order_list[i].location_id &&\n                    order.delivery_time === order_list[i].delivery_time)\n            );\n            new_list.push(new CateringOrder({\n                ...order_list[i],\n                items: flatten(orders.map(order => order.items))\n            }));\n            order_list = new_list;\n            i = 0;\n        }\n    }\n    return order_list;\n}\n\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport {\n    humaniseDuration,\n    timeFormatString,\n    unique,\n} from '../../../shared/utilities/general.utilities';\n\nimport { Booking } from './booking.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\nimport MockDate from 'mockdate';\n\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\n/**\n * August 13, 2020 at 7:22:12 UTC\n */\nconst initialTime = 1597346532 * 1000;\n\nexport const mockDate = () => MockDate.set(initialTime);\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    let time = dayjs().startOf('m');\n    time = time.minute(Math.ceil(time.minute() / 5) * 5);\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title, [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        const expected = fields.expected_attendees.value || {};\n        const matches = Object.keys(expected).filter((key) =>\n            list.find((space) => space.email === key)\n        ).length;\n        if (list && list.length && matches === 0) {\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.date.setValidators([Validators.required]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.date.setValidators([Validators.required, isFuture]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            /* istanbul ignore else */\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(options.duration, condition[0])\n                    ) {\n                        matches++;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(condition[0], options.duration)\n                    ) {\n                        matches++;\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || timePeriodsIntersect(date, date, slot.start, slot.end);\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: Booking[],\n    new_bookings: Booking[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = dayjs(filter_options.from);\n    const to = dayjs(filter_options.to);\n    const filtered_list = list.filter((booking) => {\n        const start = dayjs(booking.date);\n        const end = start.add(booking.duration, 'm');\n        return (\n            !booking.space_list.find((space) => space.email === filter_options.space) ||\n            !timePeriodsIntersect(from.valueOf(), to.valueOf(), start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'icaluid');\n}\n\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    const day1 = dayjs(start1);\n    const end_time1 = dayjs(end1);\n    const day2 = dayjs(start2);\n    const end_time2 = dayjs(end2);\n    return (\n        (day1.isAfter(day2, 'm') && day1.isBefore(end_time2)) ||\n        (end_time1.isAfter(day2, 'm') && end_time1.isBefore(end_time2)) ||\n        (day2.isAfter(day1, 'm') && day2.isBefore(end_time1)) ||\n        (end_time2.isAfter(day1, 'm') && end_time2.isBefore(end_time1))\n    );\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BookingCheckinParams } from './booking.interfaces';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** Whether item is a category */\n    public is_category = true;\n\n    constructor(data: HashMap) {\n        super(data);\n        this.is_category = true;\n        (this as any).must_select = this.must_select || 0;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** List of associated items */\n    public readonly items: CateringItem[];\n    public readonly availableItems: CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n    /** Whether item is a category */\n    public is_category: boolean = false;\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false,\n            )\n        );\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`;\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.is_category = data.is_category || !!(data.parent_categories || []).length || false;\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select ?? 0;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy || '';\n        const cateringItems: CateringItem[] = (data.items || []).map(item => new CateringItem(item));\n        this.items = cateringItems;\n        const filteredCateringItems = cateringItems.filter(c => !c.out_of_stock);\n        this.availableItems = filteredCateringItems;\n        this.out_of_stock = !!data.out_of_stock ||\n            // if original items are empty, we hit the bottom, so if we filter out items then its out of stock.\n            (cateringItems.length > 0 && filteredCateringItems.length === 0);\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [...data.zones] : [];\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || '';\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { CateringOrder } from './catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { CateringItem } from './catering-item.class';\n\nexport function generateCateringOrderFormFields(order: CateringOrder): FormGroup {\n    const form = new FormGroup({\n        items: new FormControl(order.items && order.items.length ? [...order.items] : [], [Validators.required]),\n        delivery_time: new FormControl(order.delivery_time || dayjs().startOf('m').valueOf(), [Validators.required]),\n        location_id: new FormControl(order.location_id || '', [Validators.required]),\n        charge_code: new FormControl(order.charge_code || '', [Validators.required]),\n        notes: new FormControl(order.notes || ''),\n    });\n    for (const key in form.controls) {\n        form.controls[key].valueChanges.subscribe((value) => order.storePendingChanges(key as any, value));\n    }\n    return form;\n}\n\nexport const mergeCateringItemWithFormData = (existing: CateringItem, override: any) =>\n    new CateringItem({\n        ...(existing instanceof CateringItem ? existing.toJSON() : existing),\n        ...override,\n    });\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || { start: 7, end: 20 };\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\n\nexport class Organisation extends BaseDataClass {\n    /** List of available building zone ids for the organisation */\n    public readonly available_buildings: readonly string[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n        this.available_buildings = (raw_data.settings?.discovery_info?.buildings || []).map(bld => bld.zone_id);\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 1000 });\n        const buildings = (bld_data as HashMap[])\n            .map((i) => new Building(i))\n            .filter((bld) => this._organisation.available_buildings.includes(bld.id));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true, limit: 1000 });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true, limit: 1000 });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    humaniseDuration,\n} from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n\n    constructor(raw_data: HashMap = {}) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unnamed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[] = []) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(\n                (key) => key.toLowerCase().includes('room') && key.toLowerCase().includes('email')\n            );\n            const price_field = fields.find((key) => key.toLowerCase().includes('price'));\n            const date_field = fields.find((key) => key.toLowerCase().includes('date'));\n            for (let row of data) {\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(\n                        (bld) => bld.id === room?.level?.building_id\n                    );\n                    row[price_field] = new CurrencyPipe('en_us').transform(\n                        row[price_field] / 100,\n                        bld?.currency\n                    );\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] =\n                        typeof row[field] === 'string'\n                            ? row[field].replace(/\\,/g, '٫')\n                            : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n            data = data.map((i: HashMap) => {\n                const booking = i;\n                try {\n                    if (booking.setup instanceof Object) {\n                        booking.setup = booking.setup[booking.room_email];\n                    }\n                    if (booking.breakdown instanceof Object) {\n                        booking.breakdown = booking.breakdown[booking.room_email];\n                    }\n                    booking.setup = humaniseDuration((booking.setup || 0) / 60);\n                    booking.breakdown = humaniseDuration((booking.breakdown || 0) / 60);\n                    booking.description = (booking.description || '')\n                        .replace(/<[^>]*>?/gm, '')\n                        .replace(/\\,/g, '٫')\n                        .replace(/\\r?\\n|\\r/g, ' ');\n                    booking['Meeting Host'] = booking.organizer?.name || booking.organizer;\n                    booking['Booked By'] =\n                        booking.booked_by?.name || booking.booked_by?.email || '';\n                    booking.charge_code = booking.equipment_codes[booking.room_email] || '';\n                    //    booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n                    booking.attendees = (booking.attendees || [])\n                        .map((person) => person.name || person.email || person)\n                        .join('٫ ');\n                    booking.start = dayjs(booking.start).format('DD MMM YYYY٫ h:mm A');\n                    booking.end = dayjs(booking.end).format('DD MMM YYYY٫ h:mm A');\n                    booking.notes = (booking.notes || [])\n                        .map((note) =>\n                            note.author && (note.type === 'description' || note.type === 'private')\n                                ? `[${note.author}|${note.type}]${note.message\n                                      .replace(/<[^>]*>?/gm, '')\n                                      .replace(/\\,/g, '٫')\n                                      .replace(/\\r?\\n|\\r/g, ' ')}`\n                                : ''\n                        )\n                        .join(' | ');\n                    booking.cancelled = booking.isCancelled;\n                    booking.status = booking.status[booking.room_email] || '';\n                    booking.recurrence = formatRecurrence({\n                        start: booking.date,\n                        ...booking.recurr,\n                    });\n                } catch (e) {}\n                const remove_fields = [\n                    'id',\n                    'icaluid',\n                    'accepted_at',\n                    'accepted_by',\n                    'check_ins',\n                    'changeKey',\n                    'created',\n                    'booking_type',\n                    'edit_history',\n                    'end_epoch',\n                    'old_attendees',\n                    'start_epoch',\n                    'expected_attendees',\n                    'isAllDay',\n                    'isCancelled',\n                    'body',\n                    'is_free',\n                    'lastModifiedDateTime',\n                    'locationType',\n                    'locations',\n                    'organizer',\n                    'booked_by',\n                    'originalEndTimeZone',\n                    'originalStartTimeZone',\n                    'recurr',\n                    'room_booking_status',\n                    'room_email',\n                    'room_emails',\n                    'room_id',\n                    'sensitivity',\n                    'seriesMasterId',\n                    'show_as',\n                    'notes',\n                    'subject',\n                    'type',\n                    'previous_booking',\n                    'catering',\n                    'responseStatus',\n                    'equipment_codes',\n                ];\n                for (const field of remove_fields) {\n                    if (booking[field] !== undefined) {\n                        delete booking[field];\n                    }\n                }\n                const output = {};\n                const order = [\n                    'title',\n                    'start',\n                    'end',\n                    'location',\n                    'Meeting Host',\n                    'Booked By',\n                    'all_day',\n                    'recurrence',\n                    'attendees',\n                    'description',\n                    'cancelled'\n                ];\n                const keys = Object.keys(booking);\n                keys.sort((a, b) => {\n                    const idx_a = order.indexOf(a);\n                    const idx_b = order.indexOf(b);\n                    return (\n                        (idx_a === -1 ? keys.length : idx_a) - (idx_b === -1 ? keys.length : idx_b)\n                    );\n                });\n                for (const key of keys) {\n                    output[key] = booking[key];\n                }\n                return output;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly HashMap[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => bkn.toJSON ? bkn.toJSON() : bkn);\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ISpaceAvailabilityOptions, Space } from './space.class';\n\nimport * as dayjs from 'dayjs';\nimport { predictableRandomInt } from 'src/app/shared/utilities/general.utilities';\nimport { Building } from '../organisation/building.class';\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n\n/**\n * Compare two spaces to determine order\n * @param first First space to compare\n * @param second Second space to compare\n */\nexport function sort(first: Space, second: Space, blds: Building[] = []) {\n    const bld = blds.find(bld => first.zones.includes(bld.id));\n    const bld_b = blds.find(bld => second.zones.includes(bld.id));\n    if (bld) {\n        if (bld !== bld_b) {\n            return (bld.name).localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = first.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = second.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n    }\n    return first.name.localeCompare(second.name);\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public async query(query: HashMap = {}) {\n        const list = await super.query(query);\n        if (!Object.keys(query).length) {\n            this.set('list', list);\n        }\n        return list;\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { User } from './user.class';\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this.set('delegates', null);\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                async (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            async (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                await this.loadDelegates().catch(_ => null);\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        await this.loadDelegates().catch(_ => null);\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { format, isSameDay } from 'date-fns';\n\nimport { VERSION } from 'src/environments/version';\nimport { DEFAULT_SETTINGS } from 'src/environments/settings';\nimport { BaseClass } from '../shared/base.class';\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys, log } from '../shared/utilities/general.utilities';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends BaseClass {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name] ? null : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(`${value} | ${this._app_name}`);\n    }\n\n    constructor(private _title: Title) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) {\n            window.debug = true;\n        }\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return getItemWithKeys(keys, DEFAULT_SETTINGS);\n        }\n        const override_settings = this._overrides.getValue();\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) { return value; }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (click)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (click)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    templateUrl: './counter.component.html',\n    styleUrls: ['./counter.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n\n    @Input() public useInput = false;\n\n    /** Current value of the counter */\n    public value: number;\n    public previous_value: number = 0;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    public onInputChange(new_value: string) {\n        let value = Number(new_value);\n        if (isNaN(value)) {\n            value = this.previous_value;\n        }\n        if (value < this.min) {\n            value = this.min || 0;\n        }\n        if (value > this.max) {\n            value = this.max || 10;\n        }\n        this.setValue(value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.previous_value = new_value;\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <input\n        #inputValue\n        aria-label=\"value input\"\n        *ngIf=\"useInput\"\n        (keyup.enter)=\"onInputChange(inputValue.value)\"\n        (blur)=\"onInputChange(inputValue.value)\"\n        (ngModelChange)=\"onInputChange($event)\"\n        [(ngModel)]=\"value\"\n        class=\"value\"/>\n    <div class=\"value\" *ngIf=\"!useInput\" aria-label=\"value\">\n        {{value || '0'}}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Optional event emitter for changes */\n    @Output() public onChange = new EventEmitter();\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n            this.onChange.emit(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title), 1000);\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" [from]=\"from_date\" formControlName=\"date\"></a-date-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    name=\"all-day\"\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            name=\"catering\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n\n    transform(value: string, from: string = '_', to: string = ' '): string {\n        return (value|| '').split(from).join(to);\n    }\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        [id]=\"'link-' + (item.id || i)\"\n        class=\"item\"\n        *ngFor=\"let item of menu_items; let i = index\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseDirective } from '../../base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Currently active zone */\n    @Input() public zone: string;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _bookings: BookingStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = +localStorage.getItem('CONCIERGE.date');\n        /* istanbul ignore else */\n        if (date && date !== this.date) {\n            this.timeout(\n                'init',\n                () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                },\n                10\n            );\n        }\n        this.subscription(\n            'events',\n            this._bookings.filtered_month.subscribe((list) => {\n                this.event_map = {};\n                let date = dayjs(this.date).startOf('M');\n                const end = date.endOf('M');\n                while (!date.isAfter(end, 'd')) {\n                    this.event_map[date.format('YYYY-MM-DD')] = list.filter(\n                        (booking) =>\n                            dayjs(booking.date).isSame(date, 'd') &&\n                            booking.space_list.find((space) => space.zones.includes(this.zone)) &&\n                            booking.tentative\n                    ).length;\n                    date = date.add(1, 'd');\n                }\n            })\n        );\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n        this.updateDate();\n    }\n\n    public updateDate() {\n        this.timeout('update_date', () => this._bookings.setDate(this.date));\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n        this.updateDate();\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n        this.updateDate();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { unique, predictableRandomInt } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockBooking } from '../../utilities/spec-helpers';\nimport { MOCK_MENU } from './catering-menu.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(997)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(predictableRandomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organizer =\n        predictableRandomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[predictableRandomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(predictableRandomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[predictableRandomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(predictableRandomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[predictableRandomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organizer,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n            menu: MOCK_MENU\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][predictableRandomInt(3)];\n        }\n        return booking_data;\n    });\n\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organizer.email === user.email ||\n                      i.organizer === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organizer.email === event.query_params.email ||\n                      (i.organizer as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${predictableRandomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id/checkin`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                const booking: any = MOCK_BOOKINGS[index];\n                if (!booking.checkins) {\n                    booking.checkins = [];\n                }\n                booking.checkins = unique(event.body.attendees.map(i => i.email).concat(booking.checkins));\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id/concierge_decline`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                const booking: any = MOCK_BOOKINGS[index];\n                if (!booking.approval_status) {\n                    booking.approval_status = {};\n                }\n                booking.approval_status[event.body.room_email] = 'declined';\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].settings.discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MOCK_BUILDINGS } from './buildings.mock';\n\nexport const MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        console.log('Menu Event:', event, MOCK_MENU);\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${predictableRandomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            const zones = MOCK_BUILDINGS.map(i => i.zone_id);\n            for (const zone of zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            const zones = MOCK_BUILDINGS.map(i => i.zone_id);\n            for (const zone of zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                console.log('List:', MOCK_MENU[zone]);\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    break;\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${predictableRandomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            let found = false;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories?.length) {\n                    const parent = findItem(category.parent_categories[0], MOCK_MENU[zone]);\n                    if (parent) {\n                       (parent.items as any).push(category);\n                       found = true;\n                       break;\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                        break;\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                    break;\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findItem(id: string, list: CateringCategory[] = []): CateringCategory {\n    for (const category of list) {\n        if (category.id === id) {\n            return category;\n        } else {\n            const item = findItem(id, category.items as any);\n            if (item) {\n                return item;\n            }\n        }\n    }\n    return null;\n}\nfunction findParent(id: string, list: CateringCategory[] = []): CateringCategory {\n    for (const category of list) {\n        const found = category.items?.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from '../../utilities/spec-helpers';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || predictableRandomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","\nexport const MOCK_ORG = [\n    {\n        settings: {\n            send_acceptance: true,\n            discovery_info: {\n                buildings: [],\n            },\n        },\n    },\n];\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { MOCK_BOOKINGS } from './bookings.mock';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/reports/bookings`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        const start = dayjs(+event.query_params.start_date * 1000).startOf('d');\n        const end = dayjs(+event.query_params.end_date * 1000).endOf('d');\n        const bookings = MOCK_BOOKINGS.filter((bkn: any) => {\n            return timePeriodsIntersect(\n                bkn.start_epoch * 1000 || bkn.date,\n                bkn.end_epoch * 1000 || bkn.date,\n                start.valueOf(),\n                end.valueOf()\n            );\n        });\n        console.log('Bookings:', start.format('DD MMM YYYY'), end.format('DD MMM YYYY'), bookings);\n        return bookings.map(bkn => ({ ...bkn, start: bkn.start_epoch * 1000, end: bkn.end_epoch * 1000 }));\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/reports/catering`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        const start = dayjs(+event.query_params.start_date * 1000).startOf('d');\n        const end = dayjs(+event.query_params.end_date * 1000).endOf('d');\n        console.log('Event:', event);\n        const bookings = MOCK_BOOKINGS.filter((bkn: any) => {\n            return timePeriodsIntersect(\n                bkn.start_epoch * 1000 || bkn.date,\n                bkn.end_epoch * 1000 || bkn.date,\n                start.valueOf(),\n                end.valueOf()\n            );\n        });\n        console.log('Bookings:', start.format('DD MMM YYYY'), end.format('DD MMM YYYY'), bookings);\n        let catering = [];\n        for (const booking of bookings) {\n            catering = catering.concat([...booking.catering]);\n        }\n        return catering.map((order) => ({\n            delivery_time: dayjs(order.booking_date)\n                .add(order.delivery_time, 'm')\n                .format('DD MMM YYYY, h:mm A'),\n            location_id: order.location_id,\n            items: order.items.map((i) => i.name),\n        }));\n    },\n} as MockHttpRequestHandler);\n","\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockSpace } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { generateMockUser } from '../../utilities/spec-helpers';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(predictableRandomInt(300) + 100).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(predictableRandomInt(300) + 100).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\nimport './api/reports.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport * as dayjs from 'dayjs';\nimport { setMockBookingStartDatetime, generateMockSpace } from '../utilities/spec-helpers';\nimport { predictableRandomInt } from '../utilities/general.utilities';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[predictableRandomInt(IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\nimport { ReplacePipe } from './components/replace.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES,\n        ReplacePipe\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        ReplacePipe\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error' | 'info';\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = 'STAFF'\n) {\n    if (window.debug || force) {\n        const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n        if (args) {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors, args);\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = filter.toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString(\n        document.querySelector('html').getAttribute('lang') || navigator.language\n    ).toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9E3779B9, 0x243F6A88, 0xB7E15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\n        h = h << 13 | h >>> 19;\n    return function() {\n        h = Math.imul(h ^ h >>> 16, 2246822507);\n        h = Math.imul(h ^ h >>> 13, 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    }\n}\n\nfunction sfc32(a, b, c, d) {\n    return function() {\n      a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;\n      var t = (a + b) | 0;\n      a = b ^ b >>> 9;\n      b = c + (c << 3) | 0;\n      c = (c << 21 | c >>> 11);\n      d = d + 1 | 0;\n      t = t + d | 0;\n      c = c + t | 0;\n      return (t >>> 0) / 4294967296;\n    }\n}\n","import { of, BehaviorSubject } from 'rxjs';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Organisation } from 'src/app/services/data/organisation/organisation.class';\nimport { BaseDataClass } from 'src/app/services/data/base-api.class';\nimport { MapLocation } from 'src/app/services/data/location/location.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ServiceManager } from 'src/app/services/data/service-manager.class';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { HashMap } from './types.utilities';\nimport { predictableRandomInt, padZero, unique } from './general.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SERVICE: any;\n\ndeclare global {\n    interface Jest { fn: () => any }\n};\n\ndeclare let jest: Jest;\n\n/* istanbul ignore file */\n\nexport const bookingState = () => ({\n    bookings: of([]),\n    filtered: of([]),\n    filtered_week: of([]),\n    filtered_month: of([]),\n    setZone: jest.fn(),\n    setDate: jest.fn(),\n    setFilters: jest.fn(),\n    add: jest.fn(),\n    replace: jest.fn(),\n    remove: jest.fn(),\n    startPolling: jest.fn(),\n    startPollingMonth: jest.fn(),\n    startPollingWeek: jest.fn()\n})\n\n/**\n * Generate a mocked version of the application service\n */\nexport function generateMockAppService() {\n    SERVICE = {\n        setting: jest.fn(),\n        notify: jest.fn(),\n        notifyInfo: jest.fn(),\n        notifyWarn: jest.fn(),\n        notifySuccess: jest.fn(),\n        notifyError: jest.fn(),\n        log: jest.fn(),\n        navigate: jest.fn(),\n        navigateBack: jest.fn(),\n        get: jest.fn(),\n        listen: jest.fn(),\n        set: jest.fn(),\n        Composer: { auth: { token: 'test' } },\n        Hotkeys: { listen: jest.fn() },\n        Users: generateMockDataService('UsersService'),\n        Organisation: {\n            levelWithID: jest.fn(),\n            listen: jest.fn(),\n            initialised: of(true),\n            building: new Building(generateMockBuilding({ id: 'bld-01' }))\n        },\n        Locations: generateMockDataService('LocationsService'),\n        Base: generateMockDataService('BaseService'),\n        Menu: generateMockDataService('CateringMenuService'),\n        Spaces: generateMockDataService('SpacesService'),\n        Bookings: generateMockDataService('BookingsService'),\n        Reports: generateMockDataService('ReportsService'),\n        CateringItems: generateMockDataService('CateringItemsService'),\n        CateringCategories: generateMockDataService('CateringCategoriesService'),\n        initialised: of(true)\n    };\n    ServiceManager.setService(BaseDataClass, SERVICE.Base);\n    ServiceManager.setService(Organisation, SERVICE.Organisation);\n    ServiceManager.setService(Building, SERVICE.Organisation);\n    ServiceManager.setService(User, SERVICE.Users);\n    ServiceManager.setService(Booking, SERVICE.Bookings);\n    ServiceManager.setService(Space, SERVICE.Spaces);\n    ServiceManager.setService(MapLocation, SERVICE.Locations);\n    ServiceManager.setService(Report, SERVICE.Reports);\n    ServiceManager.setService(CateringItem, SERVICE.CateringItems);\n    ServiceManager.setService(CateringCategory, SERVICE.CateringCategories);\n    SERVICE.Organisation.buildings = [SERVICE.Organisation.building];\n    SERVICE.Users.current = new User(generateMockUser());\n    SERVICE.Users.initialised = of(true);\n    SERVICE.Bookings.booking_list = new BehaviorSubject(new Array(10).fill(0).map(_ => new Booking(generateMockBooking())));\n    SERVICE.listen.mockReturnValue(of(null, []));\n    return SERVICE;\n}\n\nexport function generateMockDataService(name: string) {\n    const service = {\n        find: jest.fn(),\n        filter: jest.fn(),\n        listen: jest.fn(),\n        get: jest.fn(),\n        set: jest.fn(),\n        setting: jest.fn(),\n        query: jest.fn(),\n        show: jest.fn(),\n        add: jest.fn(),\n        save: jest.fn(),\n        remove: jest.fn(),\n        delete: jest.fn(),\n        update: jest.fn(),\n        addFrom: jest.fn(),\n        removeFrom: jest.fn(),\n        task: jest.fn(),\n        available: jest.fn(),\n        process: jest.fn(),\n        updateList: jest.fn(),\n        clearList: jest.fn(),\n        removeFromList: jest.fn(),\n        accept: jest.fn(),\n        decline: jest.fn(),\n        checkin: jest.fn(),\n        is_logged_in: false,\n        initialised: of(true),\n        name\n    };\n    service.save.mockImplementation(_ => Promise.resolve(new Booking(_)));\n    service.listen.mockReturnValue(of(null));\n    service.filter.mockReturnValue([]);\n    return service;\n}\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(predictableRandomInt(20) + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        cost_hour: Math.floor(predictableRandomInt(300)) * 100,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(predictableRandomInt(SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4) + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(predictableRandomInt(4) + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4)) * 15, 'm');\n    const organizer = generateMockUser({ external: false, visitor: false });\n    const orders = Array(Math.floor(predictableRandomInt(5)))\n    .fill(0)\n    .map(_ => generateMockCateringOrder({ booking_date: start }, override.room_ids, override.menu))\n    return {\n        id,\n        icaluid: padZero(Math.floor(predictableRandomInt(99999999)), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(predictableRandomInt(5) + 2))\n            .fill(0)\n            .map((_, i) => i === 0 ? organizer : generateMockUser(override.users)),\n        organizer,\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(predictableRandomInt(34567)) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][predictableRandomInt(5)],\n        setup: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        status: {},\n        catering: orders,\n        room_ids: [],\n        ...override,\n    };\n}\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(overrides: HashMap = {}): HashMap {\n    const id = `zone_bld-${BLD_COUNT++}`;\n    const levels = Array(10)\n        .fill(0)\n        .map(i => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(predictableRandomInt(3) + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][faker.commerce.productName()] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => generateMockUser())\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            }\n        },\n        ...overrides\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url\n    };\n}\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'place.tech';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !(predictableRandomInt(99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(predictableRandomInt(4) + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(predictableRandomInt(USER_EMAILS.length))]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(predictableRandomInt(99999)), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\nexport function generateMockCateringOrder(overrides: HashMap = {}, room_ids: string[] = [], menu: HashMap<HashMap[]> = {}) {\n    return {\n        id: `order-${predictableRandomInt(9999_9999)}`,\n        delivery_time: predictableRandomInt(6) * 5,\n        location_id: room_ids[predictableRandomInt(room_ids.length)],\n        items: new Array(predictableRandomInt(5, 1)).fill(0).map(i => pickMenuItem(menu)),\n        ...overrides\n    }\n}\n\nfunction pickMenuItem(menu_map: HashMap<HashMap[]> = {}) {\n    const zones = Object.keys(menu_map);\n    const menu = menu_map[zones[predictableRandomInt(zones.length)]] || [];\n    const category = menu[predictableRandomInt(menu.length)] || { items: [] };\n    const group = { ...(category.items[predictableRandomInt(category.items.length)] || {}) };\n    if (!group.package && group.items?.length) {\n        const item = { ...group.items[predictableRandomInt(group.items.length)] };\n        item.amount = predictableRandomInt(5, 1);\n        return item;\n    }\n    group.amount = predictableRandomInt(5, 1);\n    return group;\n}\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = predictableRandomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[predictableRandomInt(fixed_locations.length)],\n            level: maps[predictableRandomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: predictableRandomInt(900, 100),\n            x_max: 1000,\n            y: predictableRandomInt(500, 100),\n            level: maps[predictableRandomInt(maps.length)],\n            confidence: predictableRandomInt(30),\n            ...overrides\n        }\n    }\n}\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    const buildings = Array(3).fill(0).map(i => generateMockBuilding());\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings,\n        settings: {\n            discovery_info: {\n                buildings\n            },\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n\n\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.category = 0;\n            this._service.title = 'Catering';\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    if (params.has('page')) {\n                        this.page = params.get('page');\n                    }\n                })\n            );\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id },\n                    });\n                })\n            );\n        });\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" name=\"add-category\" (click)=\"category = category + 1\">Add Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" name=\"add-package\" (click)=\"package = package + 1\">Add Sub-Category/Package</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" name=\"menu\" mat-button [routerLink]=\"['/catering', 'menu']\" queryParamsHandling=\"preserve\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" name=\"orders\" mat-button [routerLink]=\"['/catering', 'orders']\" queryParamsHandling=\"preserve\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { SharedOverlaysModule } from 'src/app/overlays/overlays.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        SharedOverlaysModule\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(group, event.metadata);\n                }\n            })\n        );\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(item, event.metadata);\n                }\n            })\n        );\n    }\n\n    private updateItemList(old_item: CateringItem | CateringCategory, new_item: HashMap) {\n        const item =\n            old_item instanceof CateringCategory\n                ? new CateringCategory(new_item)\n                : new CateringItem(new_item);\n        if (old_item.id) {\n            const index = this.parent.items.findIndex((itm) => itm.id === old_item.id);\n            (this.parent.items as any[]).splice(index, 1, item);\n            (this.parent as any).items = [...this.parent.items];\n        } else {\n            (this.item.items as any[]).push(item);\n        }\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringCategory\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item instanceof CateringCategory\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                }\n            }\n        });\n    }\n}\n","<div class=\"catering-item\" *ngIf=\"item\" [class.subitem]=\"subitem\">\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items.length || item.is_category\">\n        <button mat-menu-item name=\"add-group\" *ngIf=\"!subitem\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button\n        mat-menu-item\n        name=\"edit\"\n        (click)=\"item.items.length || item.is_category ? openGroupModal(item) : openItemModal(item)\"\n    >\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n            <div class=\"text\">\n                Edit\n                {{\n                    item.items.length || item.is_category\n                        ? subitem\n                            ? 'Group'\n                            : item.package\n                            ? 'Package'\n                            : 'Sub-category'\n                        : 'Item'\n                }}\n            </div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n            <div class=\"text\">\n                Delete\n                {{\n                    item.items.length || item.is_category\n                        ? subitem\n                            ? 'Group'\n                            : item.package\n                            ? 'Package'\n                            : 'Sub-category'\n                        : 'Item'\n                }}\n            </div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Mapping of items to the option selections */\n    public readonly item_details: HashMap<{ amount: number, details: string }> = {};\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach((item) => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n            this.updateItemDetails();\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (updated_booking) {\n                this._booking_state.replace(updated_booking);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking,\n            },\n        });\n    }\n\n    private updateItemDetails() {\n        for (const item of this.order.items) {\n            if ((item as any).items) {\n                const items = [];\n                for (const sub_item of (item as any).items) {\n                    if (!sub_item.items.length && sub_item.amount) {\n                        items.push(sub_item)\n                    } else {\n                        for (const sub_sub_item of sub_item.items) {\n                            if (sub_sub_item.amount) {\n                                items.push(sub_sub_item)\n                            }\n                        }\n                    }\n                }\n                this.item_details[item.id] = {\n                    amount: items.length,\n                    details: `[${items.map(i => i.name).join(']\\n[')}]`\n                };\n            }\n        }\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"\n                                        loading ? '#eee' : status_details?.colour\n                                    \"\n                                >\n                                    <app-icon\n                                        *ngIf=\"!loading\"\n                                        [icon]=\"status_details?.icon\"\n                                    ></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div\n            class=\"item\"\n            *ngFor=\"let item of order.items\"\n            [class.not-match]=\"search && !search_matches[item.id]\"\n        >\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div\n                    class=\"options\"\n                    *ngIf=\"item_details[item.id]?.amount\"\n                    [matTooltip]=\"item_details[item.id].details\"\n                >\n                    {{ item_details[item.id]?.amount }}\n                    { item_details[item.id]?.amount, plural, =1 { Option } other { Options } }\n                </div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject, combineLatest } from 'rxjs';\nimport { map, first, filter } from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of catering orders for the selected date */\n    public orders = this._bookings.filtered.pipe(\n        map((bookings) => {\n            let list: CateringOrder[] = [];\n            bookings.forEach((booking, i) => {\n                const catering = booking.catering;\n                catering.forEach((order) => {\n                    (order as any).booking_date = booking.date;\n                    order.booking = booking;\n                });\n                list = list.concat(booking.catering);\n            });\n            list.sort((a, b) => a.booking_date - b.booking_date);\n            return list;\n        })\n    );\n    /** List of catering orders for the selected date */\n    public filtered_orders = combineLatest(this.search$, this.orders).pipe(\n        map((props) => this.filter(props[1] || [], props[0]))\n    );\n\n    public display_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public readonly loading = this._bookings.loading;\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _bookings: BookingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._bookings.startPolling();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .pipe(filter((bld) => !!bld))\n                    .subscribe(() => {\n                        this._bookings.setZone(this._org.building.id);\n                    })\n            );\n            this.subscription(\n                'orders',\n                this.filtered_orders.subscribe((orders) => (this.display_orders = orders))\n            );\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n            this.search$.next(this.search);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.search$.next(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : index;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading | async\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"display_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <ng-container *ngFor=\"let order of display_orders; trackBy: trackByFn\">\n            <a-catering-orders-item [order]=\"order\" [search]=\"search\"></a-catering-orders-item>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const category = new CateringCategory(this.category);\n            const data = { ...category.toJSON(), ...this.form.value };\n            const request = category.id\n                ? this._menu_categories.update(category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" name=\"delete\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n        { id: 'none', name: 'Other' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = {\n                ...(this.category instanceof CateringCategory\n                    ? this.category.toJSON()\n                    : this.category),\n                ...this.form.value,\n                parent_categories: [this.parent.id],\n            };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: new CateringCategory(item) });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox name=\"package\" formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + 'Description'\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\nimport {\n    CONFIRM_METADATA, ConfirmModalComponent,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { mergeCateringItemWithFormData } from '../../../../services/data/catering/catering.utilities';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id]),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = mergeCateringItemWithFormData(this.item, this.form.value).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`,\n                    ),\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Email of the order space */\n    @Input() public space: Space;\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking_space', JSON.stringify(this.space.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[space?.email] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    name=\"view-meeting\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return this.order.items as any;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService) {}\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking.toJSON(), catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"order && items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <ng-container *ngFor=\"let sub_item of item.items\">\n                    <div class=\"sub-item\" *ngIf=\"sub_item.amount || sub_item.items.length\">\n                        <div class=\"name\">{{ sub_item.name }}</div>\n                        <ng-container *ngIf=\"sub_item.items\">\n                            <ng-container *ngFor=\"let sub_sub_item of sub_item.items\">\n                                <div class=\"sub-item\" *ngIf=\"sub_sub_item.amount\">\n                                    <div class=\"name\">{{ sub_sub_item.name }}</div>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [date]=\"booking.date\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" name=\"edit\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _users: UsersService\n    ) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.order.location_id,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking.toJSON(), notes: new_notes });\n            this.loading = true;\n            const new_booking: Booking = (await this._bookings\n                .save(pending_booking)\n                .catch((err) => {\n                    this._service.notifyError(\n                        `Failed to add note to order meeting. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                    throw err;\n                })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                this._booking_state.replace(new_booking);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking: any = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                this._booking_state.replace(updated_booking);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [space]=\"space\" [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { first, map } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnDestroy {\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n    /** Observable for tentative events */\n    public events = this._bookings.filtered.pipe(\n        map((bookings) => {\n            const list = [];\n            const length = bookings.length;\n            for (let i = 0; i < length; i++) {\n                const ids = Object.keys(bookings[i].approval_status);\n                for (const id of ids) {\n                    if (bookings[i].approval_status[id].includes('tentative')) {\n                        const obj = new Booking(bookings[i]).toJSON();\n                        const room_ids = bookings[i].space_list.map(i => i.email).filter(i => i !== id);\n                        room_ids.unshift(id);\n                        list.push(new Booking({ ...obj, room_ids }));\n                    }\n                }\n            }\n            list.sort((a, b) => a.date - b.date);\n            return list;\n        })\n    );\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        return 'Today';\n    }\n\n    constructor(private _spaces: SpacesService, private _bookings: BookingStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._bookings.startPollingMonth();\n        });\n    }\n\n    public ngOnDestroy() {\n        this._bookings.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"(events | async)?.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event\n            *ngFor=\"let item of events | async; trackBy: trackByFn\"\n            [event]=\"item\"\n            (acting)=\"waiting_on_event = $event\"\n        ></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return this.event.organiser.name;\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.email === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        space: this.event.space,\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_email: this.event.space?.email,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        (item) => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space?.email] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            this._booking_state.replace(new Booking(item));\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_email: booking.space.email,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.email] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            this._booking_state.replace(this.event);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (click)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (click)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field limit-height\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field limit-height\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (click)=\"accept()\"\n        >\n            Accept\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (click)=\"decline()\"\n        >\n            Decline\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss'],\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: number;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: HashMap<boolean> = {};\n    /** List of legend keys to show */\n    public legend_list: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true },\n    ];\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _bookings: BookingStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Day View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.legend_list = this.legend_keys.map((item) => `${item.id}`);\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                                this._bookings.setZone(this.active_level || this._org.building.id);\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = building.levels[0].id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._bookings.setZone(this.active_level || this._org.building.id);\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend(mobile: boolean = false) {\n        if (mobile) {\n            this.legend_list = this.legend_keys.reduce((list, key) => {\n                if (key.active) list.push(key.id);\n                return list;\n            }, []);\n        }\n        this.legend = this.legend_keys.reduce((map, key) => {\n            map[key.id] = this.legend_list.includes(`${key.id}`);\n            return map;\n        }, {});\n        this._bookings.setFilters({\n            ...this._bookings.filters,\n            hide_type: Object.keys(this.legend).filter((i) => this.legend[i] === false) as any,\n        });\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button class=\"not-desktop\" [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend_list\"\n                        (ngModelChange)=\"updateLegend()\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    name=\"overflow\"\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_listing\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_listing=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend(true)\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: Booking;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space associated with the event */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public get local_id(): string {\n        return this.event.icaluid.substr(0, 6);\n    }\n\n    /** Whether booking is approved for the event in the displayed space */\n    public get approved(): boolean {\n        return this.event.approved || this.event.approval_status[this.space.email].includes('accepted');\n    }\n\n    /** Whether booking is declined for the event in the displayed space */\n    public get declined(): boolean {\n        return !this.approved && this.event.approval_status[this.space.email].includes('decline');\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (!this.event || this.event.approval_status[this.space.email]?.includes('decline')) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.email] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                space: this.space,\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.event.setup[this.space.email]\n                    ? this.event.setup[this.space.email] / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown[this.space.email]\n                    ? this.event.breakdown[this.space.email] / duration\n                    : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (declined || approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (click)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { IEventOverlap } from './event/event.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** List of bookings for the current date and space */\n    public event_list: Booking[] = [];\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _booking_state: BookingStateService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.event_list;\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return (\n                    !!event.space_list.find(space => space.email === this.space.email) &&\n                    (!this.overflow_only ||\n                        event.setup[event.space.email] ||\n                        event.breakdown[event.space.email])\n                );\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => (this.overflow_only = state))\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription(\n                'bookings',\n                this._booking_state.filtered.subscribe((list) => this.event_list = list)\n            );\n            this.checkInView();\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        if (changes.space) {\n            this.event_list = [...this.event_list];\n            this.timeout('in_view', () => this.checkInView(), 100);\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking.toJSON(),\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this._bookings.save(new_booking).then(\n                            (bkn: Booking) => {\n                                this._booking_state.replace(bkn);\n                                resolve(bkn);\n                            },\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component, ElementRef, HostListener, Input, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { HashMap, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 10;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent\n    extends BaseDirective\n    implements OnInit, OnChanges, OnDestroy {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    public space_zones: string[] = [];\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize')\n    public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get is_loading() {\n        return this._bookings.loading;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                this._bookings.startPolling();\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n                this.subscription(\n                    'date',\n                    this._bookings.date.subscribe(\n                        (date) => (this.is_today = dayjs().isSame(dayjs(date), 'd')),\n                    ),\n                );\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n        }\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public ngOnDestroy() {\n        this._bookings.stopPolling();\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event)),\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    const spaceJson = localStorage.getItem('CONCIERGE.view_booking_space');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        const space: Space | undefined = spaceJson ? new Space(JSON.parse(spaceJson)) : undefined;\n                        this.view(booking, space);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                        localStorage.removeItem('CONCIERGE.view_booking_space');\n                    }\n                }\n            }),\n        );\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000,\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     * @param space Space that's selected.\n     */\n    private view(booking: Booking, space?: Space) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                space: space || booking.space,\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && booking.space && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#space-col-${booking.space.id}`,\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const date_percent =\n                    Math.abs(dayjs(booking.date).diff(dayjs(booking.date).startOf('d'), 'm')) /\n                    (24 * 60);\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left:\n                        box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft - 10,\n                    top: this.scroll_area.nativeElement.scrollHeight * date_percent - 10,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                    this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                    this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                }),\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable,\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n        this.space_zones = this.spaces.map((i) => `space-col-${i.id}`);\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading | async\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div class=\"space-header\" *ngFor=\"let item of filtered_spaces\" [title]=\"item.name\">\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_holding_bay ? 'close' : 'list'\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (click)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)'\n                    | safe: 'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n    /** Multiple Locations? */\n    public multipleLocations: boolean = false;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService,\n        private _router: Router,\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n        if (this.locations.length > 1){\n            this.locations = [this.locations[0]];\n        }\n    }\n\n    /**\n     * Ensure Space Time Continuum\n     */\n    public checkDates(new_date: number){\n        if(this.start_date > this.end_date){\n            this.start_date = dayjs(new_date).startOf('d').valueOf();\n            this.end_date = dayjs(new_date).endOf('d').valueOf();\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date / 10\"\n                [to]=\"start_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <!-- Single Location Select -->\n            <mat-select *ngIf='!report.multi_locations' name=\"locations\" [(ngModel)]=\"locations[0]\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <!-- Multi Location Select - Could be wrapped to make directives conditional -->     \n            <mat-select *ngIf='report.multi_locations' name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key | replace }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n    /** Multiselect Locations */\n    multi_locations: boolean;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: false,\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Reports';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"report-type\" [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    [name]=\"report.id + '-report'\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n        <feedback></feedback>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"spinner\">\n                <mat-spinner [diameter]=\"64\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true, email: '' }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _booking_state: BookingStateService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const attendees = this.form.controls.attendees.value;\n                for (const attendee of attendees) {\n                    if (!attendee.email) {\n                        attendee.email = `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`;\n                    }\n                }\n                const new_booking = new Booking({ ...this.booking.toJSON(), ...this.form.value });\n                this._bookings.save(new_booking).then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._booking_state.replace(bkn);\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (click)=\"save()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Emitter for changed to the checked in status */\n    @Output() public checked = new EventEmitter<void>();\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n    /** Whether all attendees are being checked in */\n    public loading: boolean;\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        return this.event.status === 'upcoming' || this.event.status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _dialog: MatDialog) {}\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checked_in;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: unique(this.event.attendees.map(user => ({ name: user.name, email: user.email }))),\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in all attendees for booking. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: unique([...this.event.checked_in, ...this.event.attendees.map(user => user.email)]),\n            });\n            this.checked.emit();\n        }\n        this.loading = false;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees.filter(user => !user.email.includes('@guest'))\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }}\n                <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a\n                mat-icon-button\n                matTooltip=\"Email Attendees\"\n                name=\"email-all\"\n                [href]=\"mail_url | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n            </a>\n            <button\n                mat-icon-button\n                name=\"checkin-all\"\n                matTooltip=\"Checkin All Visitors\"\n                (click)=\"checkin()\"\n            >\n                <action-icon\n                    [loading]=\"loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button\n                mat-icon-button\n                matTooltip=\"Edit Visitors\"\n                name=\"edit\"\n                (click)=\"openEditModal()\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button\n                mat-icon-button\n                name=\"show-attendees\"\n                (click)=\"show_attendees = !show_attendees\"\n            >\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor\n            *ngFor=\"let item of event.attendees\"\n            [event]=\"event\"\n            [person]=\"item\"\n            [search]=\"search\"\n            (checked)=\"checked.emit()\"\n        ></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex((bkn) => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingStateService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._bookings.startPolling();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .subscribe((_) => this.search$.next(`${this.date}|${_.id}`))\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.filtered.subscribe((list) => this.updateEvents(list))\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, booking: Booking) {\n        return booking.id;\n    }\n\n    public resetPolling() {\n        this.interval(\n            'update_bookings',\n            () => this.search$.next(`${this.date}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings\n            .filter((booking) => {\n                return booking.attendees.find(\n                    (user) =>\n                        user.name.toLowerCase().indexOf(search) >= 0 ||\n                        user.email.toLowerCase().indexOf(search) >= 0\n                );\n            })\n            .filter((bkn) => (this.show_all ? true : bkn.has_visitors));\n    }\n\n    private updateEvents(list: Booking[]) {\n        const bookings = list.filter(\n            (bkn) =>\n                !bkn.declined &&\n                bkn.space_list.find((space) => space.zones.includes(this._org.building.id))\n        );\n        this.bookings = bookings.map((bkn) => {\n            const data = bkn.toJSON();\n            const space =\n                bkn.space_list.find((space) => space.zones.includes(this._org.building.id)) ||\n                bkn.space;\n            return new Booking({\n                ...data,\n                room_ids: [space.email].concat(bkn.space_list.map((space) => space.email)),\n            });\n        });\n        this.filtered_bookings = this.filter(this.search);\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === -1\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container\n                *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\"\n            >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\" (checked)=\"resetPolling()\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === i\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges, Output, EventEmitter} from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Emitter for changed to the checked in status */\n    @Output() public checked = new EventEmitter<void>();\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.status === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checked_in.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: [{ name: this.person.name, email: this.person.email }],\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in user. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: [...this.event.checked_in, this.person.email],\n            });\n            this.checked.emit()\n        }\n        this.loading = false;\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a\n            mat-icon-button\n            [matTooltip]=\"!person.external ? 'Email Staff Member' : 'Email Visitor'\"\n            [disabled]=\"invalid_email\"\n            [href]=\"mail_url | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            name=\"checkin\"\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading || !person.external\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Visitors';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building')?.subscribe(() => {\n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id },\n                    });\n                })\n            );\n        })\n    }\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                name=\"show-all\"\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nimport * as dayjs from 'dayjs';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss'],\n})\nexport class WeekViewDayDisplayComponent extends BaseDirective {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public readonly booking_list = this._bookings.filtered_week.pipe(\n        map((bookings) => {\n            const date = dayjs(this.date).startOf('d');\n            return bookings.filter((booking) => {\n                const start = dayjs(booking.date);\n                const end = start.add(booking.duration, 'm');\n                return (\n                    booking.space_list.find((space) =>\n                        this.spaces.find((a_space) => a_space.email === space.email)\n                    ) &&\n                    timePeriodsIntersect(\n                        date.valueOf(),\n                        date.endOf('d').valueOf(),\n                        start.valueOf(),\n                        end.valueOf()\n                    )\n                );\n            });\n        })\n    );\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    constructor(private _bookings: BookingStateService) {\n        super();\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"(booking_list | async).length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list | async\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (!this.event || this.event.approval_status[this.event.space.email]?.includes('decline')) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: this.event.space,\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? ' in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n\n    constructor(\n        private _spaces: SpacesService,\n        private _bookings: BookingStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this._bookings.startPollingWeek();\n            this.space_list = this._spaces.filter(space => space.zones.includes(this.level));\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level || changes.space_type) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.space_list = this._spaces.filter(space => space.zones.includes(this.level));\n        }\n    }\n\n    public ngOnDestroy() {\n        this._bookings.stopPolling();\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingStateService } from 'src/app/services/data/bookings/booking-state.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    public get building() {\n        return this._org.building;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _bookings: BookingStateService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Week View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                                this._bookings.setZone(this.active_level || this._org.building.id);\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._bookings.setZone(this.active_level || this._org.building.id);\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    name=\"weekends\"\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level || building?.id\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\n/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general = {\n    menu: {\n        items: [\n            {\n                name: 'Day View',\n                route: '/day-view',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'wb_sunny',\n                },\n            },\n            {\n                name: 'Week View',\n                route: '/week-view',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'date_range',\n                },\n            },\n            {\n                name: 'Catering',\n                route: '/catering',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'room_service',\n                },\n            },\n            {\n                name: 'Visitors',\n                route: '/visitors',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'face',\n                },\n            },\n            {\n                name: 'Reports',\n                route: '/reports',\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'warning',\n                },\n            },\n        ],\n        copyright: 'PlaceOS',\n    },\n};\n/*=========================*\\\n||  BOOKING FLOW SETTINGS  ||\n\\*=========================*/\nconst booking = {\n    booking_types: [\n        { name: 'Internal', id: 'internal' },\n        { name: 'Client', id: 'client' },\n        { name: 'External', id: 'external' },\n        { name: 'Setup', id: 'setup' },\n        { name: 'Training', id: 'training' },\n        { name: 'Interview', id: 'interview' },\n    ],\n    show_fields: [\n        'attendees',\n        'body',\n        'catering',\n        'date',\n        'duration',\n        'organiser',\n        'recurrence',\n        'title',\n        'type',\n        'all_day',\n        'has_catering',\n    ],\n    html_body: true,\n    multiple_spaces: true,\n    desk_start: 9,\n};\n\n/*=========================*\\\n||    DAY VIEW SETTINGS    ||\n\\*=========================*/\nconst day_view = {\n    dragdrop: false,\n};\n\n/*=========================*\\\n||    VISITORS SETTINGS    ||\n\\*=========================*/\nconst visitors = {};\n\n/*=========================*\\\n||    REPORTS SETTINGS     ||\n\\*=========================*/\nconst reports = {};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app = {\n    title: 'McKinsey Concierge',\n    description: 'McKinsey Concierge UI written with Angular Framework',\n    short_name: 'CONCIERGE',\n    logo_dark: {\n        type: 'img',\n        src: 'assets/img/logo.svg',\n        background: '',\n    },\n    logo_light: {\n        type: 'img',\n        src: 'assets/img/logo-inverse.svg',\n        background: '#0a0d2e',\n    },\n    general,\n    booking,\n    day_view,\n    visitors,\n    reports,\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS = {\n    env: 'prod',\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/concierge',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n    mock: false,\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"a90c3e9\",\n    \"hash\": \"a90c3e9\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"a90c3e9\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1601924115593\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}