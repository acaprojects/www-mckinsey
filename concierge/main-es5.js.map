{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/replace.pipe.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/spec-helpers.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_org","_users","_spaces","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_bookings","_router","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","message","notifyError","save","booking","err","success","emit","reason","notifySuccess","spaces","date","old_booking","duration","length","reject","available","room_ids","map","space","join","ignore","icaluid","space_list","was_available","name","title","date_value","duration_value","all_day","dayjs","end","add","format","isSame","humaniseDuration","creator","attendees","filter","i","email","organiser","body","equipment_codes","catering","codes","order","location_id","charge_code","notes","note","type","reduce","find","a_space","level","building","buildings","bld","building_id","CateringOrder","symbol","currency","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","close","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","navigate","confirmBooking","order_list","openCateringDetailsModal","markAsDirty","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","codes_field","head_counts_field","expected_attendees","componentInstance","afterClosed","CateringDetailsModalComponent","valid","dialog_ref","maxHeight","booking_type","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","startOf","valueOf","Input","CateringMenuCategoryComponent","hasSelectionRequirements","category","must_select","items","item","getActiveList","list","amount","concat","CateringMenuItemComponent","changes","field","an_item","setAmount","valueChanges","updatePackageSelection","selectPackageOptions","confirmed_item","CateringCategory","notifyWarn","CateringItem","cart_item","active_items","forEach","includes","PackageOptionsModalComponent","done","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","generateAvailableTimes","time","delivery_time","initForm","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","query","room_id","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","now","endOf","building_time","space_email","catering_hours","hour","zones","timezone","padZero","floor","toDate","as_dayjs","possible_end","isAfter","active_building","within_restricted_time","has_available_items","out_of_hours","form_controls","catering_restricted_from","total","can_order_anytime","confirmOrder","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","previous","next","$event","stopPropagation","BookingSpaceFiltersComponent","locations","locationsChange","building_list","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","request_id","search_results$","debounceTime","distinctUntilChanged","switchMap","randomInt","bookable","catchError","of","error","resp","zone","sort","a","b","onChange","multiple","space_a","space_b","bld_b","localeCompare","sort_order","reverse","zone_id","a_has_zone","indexOf","b_has_zone","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","host","conflicts","recurrence","recurr","conflict_list","replaces","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","nativeElement","scrollIntoView","behavior","block","inline","ViewChild","item_list","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","author","current","_scrollToBottom","_content_el","scrollTo","top","scrollHeight","left","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","DeleteConfirmModalComponent","MeetingCateringDetailsComponent","setItem","JSON","stringify","status","declined","editMeetingCatering","MeetingDetailsDisplayComponent","edited","Object","values","edits","person","period","pattern","RECURRENCE_PERIODS","toLowerCase","MeetingDetailsModalComponent","_on_error","setLoading","booking_list","bkn","accept","concierge","room_email","approval_status","bookings","getValue","decline","booking_id","deleteMeeting","new_booking","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","random","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","dirty","old_notes","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","date_string","replaced_by","head_count","equipment_code","search$","selected_spaces","request_map","types","active_type","update","space_types","options","byRequest","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_snackbar","_analytics","_subjects","_observers","set","isStable","run","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","warn","info","args","stream","force","BehaviorSubject","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","notifyInfo","reload","setInterval","checkForUpdate","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","promise","d","task_name","parameters","task","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","ServiceManager","serviceFor","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","predicate","query_params","cache","toQueryString","result","http","process","results","new_item","post","analyticsEvent","method","post_data","_task","request","put","label","raw_item","time_changed","_display","subject","start_epoch","Start","end_epoch","End","old_start","unix","old_end","description","_attendees","organizer","active_user","booked_by","_location","location_name","Date","getTime","checked_in","checkins","check_ins","notify_users","space_ids","_space_list","space_service","Space","edited_fields","isArray","flatten","room","has_visitors","json","auto_approve","from_room","eq_notes","display","v","external","subtract","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","list_length","expected","matches","new_expected","new_codes","simplified_fields","updateValueAndValidity","enable","control","rulesForSpace","space_rules_for_user","hide","rules","hasOwnProperty","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","requestable","free_slots","next_free_slot","slot","timePeriodsIntersect","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","replaceBookings","new_bookings","filter_options","from","to","filtered_list","updated_list","start1","end1","start2","end2","day1","end_time1","day2","end_time2","BookingsService","setService","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","max","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","address","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","price_field","date_field","row","CurrencyPipe","transform","formatRecurrence","remove_fields","output","idx_a","idx_b","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","linked_spaces","linked_rooms","rm","rulesFor","availabilityOptionsToQuery","SpacesService","respond","available_spaces","linked","show","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","current_user","interval","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","build","VERSION","built","core_version","version","loadFromFile","app","colors","app_name","file","file_name","clearTimeout","clearInterval","fn","delay","Function","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","old_date","new_date","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","from_date","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","ReplacePipe","Pipe","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","show_add_item","show_events","dateChange","event_map","tentative","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","generateMockBooking","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","parent","cat","findParent","itm","found","MOCK_LOCATIONS","lvls","generateMockLocation","send_acceptance","space_data","generateMockSpace","Bookings","today","generateMockUser","PREDEFINED_USERS","faker","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","setMockBookingStartDatetime","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","shift","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","SERVICE","generateMockAppService","jest","navigateBack","Composer","Hotkeys","Users","generateMockDataService","generateMockBuilding","Locations","Base","Menu","Spaces","Reports","CateringItems","CateringCategories","mockReturnValue","addFrom","removeFrom","updateList","clearList","removeFromList","checkin","is_logged_in","mockImplementation","SPACE_COUNT","overrides","firstName","lastName","USER_DOMAIN","commerce","productName","business","BOOKING_COUNT","BOOKING_DATE","override","lorem","paragraph","city","BLD_COUNT","LVL_COUNT","generateMockLevel","features","test","nested","level2","org","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","fixed_locations","maps","ORG_COUNT","generateMockOrganisation","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","group","parent_id","_menu_items","_menu_categories","updateItemList","old_item","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","search","openCategoryModal","depth","menu","statuses","colour","active_status","updated_booking","viewOrderDetails","filtered_orders","updateOrders","initBookings","queryParamMap","view_id","sub_item","sub_sub_item","relevant_bookings","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","complete","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","deliver_at_time","DayViewApprovalsComponent","updateEvents","getMonthlyPending","previousValue","currentValue","STATES","DayViewApprovalsEventComponent","acting","start_time","length_string","DayViewComponent","active_level","legend","legend_list","legend_keys","color","updateLevel","newMeeting","updateLegend","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","should_display","queryParams","view","shown_date","toFixed","overflow_top","overflow_bottom","approved","time_period","inView","dragging","event_list","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_list","room_count","Set","size","checkCollisions","moveBooking","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","space_zones","scroll_area","initSpaces","updateTime","updateBookings","space_type","updateScroll","active_hour","visible_rooms","querySelector","scroll_box","date_percent","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","end_date","multipleLocations","report","report_data","downloadCSV","checkDates","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","multi_locations","active_report","loading_state","mod","EventFormComponent","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","attendee","VisitorBookingItemComponent","checked_in_users","counts","host_email","response_type","show_attendees","checkedInStatus","VisitorTimelineComponent","filtered_bookings","show_all","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { UsersService } from './services/data/users/users.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false; // Bookings are always approved in concierge\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day && duration_value < 25 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    public get user(): User {\n        return this.booking.creator;\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser;\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes;\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return this.booking.catering.map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public async saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        let message = await this.checkSpaceAvailability().catch((e) => e);\n        if (message) {\n            this.loading = null;\n            this._dialog_ref.disableClose = false;\n            this._service.notifyError(`Error checking space availability: ${message}`);\n            return;\n        }\n        this.loading = 'Processing booking request...';\n        const booking = await this._bookings.save(this.booking).catch((err) => {\n            this._service.notifyError(\n                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n            );\n        });\n        this.loading = null;\n        this._dialog_ref.disableClose = false;\n        if (booking) {\n            this.success = true;\n            this.event.emit({ reason: 'done' });\n            this._service.notifySuccess(\n                `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n            );\n        }\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id &&\n                this.booking.date === this.old_booking.date &&\n                this.booking.duration === this.old_booking.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: this.booking.date,\n                    duration: this.booking.duration,\n                    ignore: this.booking.icaluid\n                })\n                .then(\n                    (space_list) => {\n                        if (space_list.length < spaces.length) {\n                            return reject(\n                                `${\n                                    spaces.length - space_list.length > 1\n                                        ? spaces.length - space_list.length + ' spaces are'\n                                        : 'One space is'\n                                } not available for the selected time period.`\n                            );\n                        }\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\">\n                        <div class=\"text\" [title]=\"item?.name\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"user && user.email !== organiser.email\">\n            <label>Booked By:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list.find(order => this.form.controls.space_list.value.find(space => space.email === order.location_id)) &&\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (!space_list || !space_list.length || !this.booking.id) {\n                    this.navigate('search');\n                } else if (this.booking.id && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking ? this._data.booking.toJSON() : {};\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking.toJSON(),\n                        ...value,\n                        booking_type: value.type,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                } else if (event.reason === 'action') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { toDate } from 'date-fns-tz';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { padZero } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /* istanbul ignore next */\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...this.form.value});\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = dayjs();\n        const space_email = this.form ? this.form.controls.location_id.value : null;\n        let catering_hours = { start: 7, end: 20 };\n        building_time = building_time.minute(0).hour(catering_hours.start);\n        if (space_email) {\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => space?.zones.includes(bld.id));\n            catering_hours = building?.catering_hours || catering_hours;\n            building_time = building_time.minute(0).hour(catering_hours.start);\n            if (building && building.timezone) {\n                const hour = padZero(Math.floor(catering_hours.start), 2);\n                const minute = padZero(Math.floor(catering_hours.start * 60) % 60, 2);\n                building_time = dayjs(\n                    toDate(`${start.format(`YYYY-MM-DD`)}T${hour}:${minute} ${building.timezone}`)\n                );\n            }\n        }\n        const as_dayjs = dayjs(building_time);\n        if (this.all_day || this.duration >= (catering_hours.end - catering_hours.start) * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(catering_hours.end - catering_hours.start, 'h');\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        const possible_end = building_time.add(catering_hours.end - catering_hours.start, 'h');\n        if (end.isAfter(possible_end, 'm')) {\n            end = possible_end;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form && !hide_details\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (click)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"confirm\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\" xPosition=\"before\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss'],\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((_) => {\n                    this.loading = true;\n                    request_id = randomInt(9999_9999);\n                    const date = dayjs(this.form.controls.date.value);\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.all_day.value\n                            ? date.startOf('d').valueOf()\n                            : date.valueOf(),\n                        duration: this.form.controls.all_day.value\n                            ? 24 * 60\n                            : this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    const id = request_id;\n                    return this._spaces.available(query).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [], error: _})),\n                map((resp: { id: number, list: Space[]}) => {\n                    this.loading = false;\n                    return resp.id === request_id ? resp.list : this.space_list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.space_list = list.filter((space) => {\n                        if (!space.was_available) {\n                            return false;\n                        }\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    });\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = (_) => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find((item) => item.id === space.id)) {\n                this.spaces.setValue(list.filter((item) => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    private sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find((bld) => space_a.zones.includes(bld.id));\n        const bld_b = this._org.buildings.find((bld) => space_b.zones.includes(bld.id));\n        if (bld && bld !== bld_b) {\n            return bld.name.localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return space_a.name.localeCompare(space_b.name);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n            minBufferPx=\"900\" maxBufferPx=\"1200\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    public get is_hidden(): boolean {\n        return false;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        return false;\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (click)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id] ? this.form[order.location_id].controls.code.value : '',\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleting meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.space.email);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.space.email &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                [class.edited]=\"booking.edits.includes(order.id)\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('charge_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('catering_note|' + space.email)\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end * 1000).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { DeleteConfirmModalComponent } from '../delete-confirm-modal/delete-confirm-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nexport interface MeetingDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(booking: Booking) {\n        this._data.booking = booking;\n    }\n    /** Space to display booking details for */\n    public get space(): Space {\n        return this._data.space;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe((list) => {\n                const booking = list.find((bkn) => bkn.icaluid === this.booking.icaluid);\n                if (booking) {\n                    this.booking = booking;\n                }\n            })\n        );\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_email: this.space.email,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                this.booking.approval_status[this.space.email] = 'accepted';\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === this.booking.icaluid),\n                    1,\n                    this.booking\n                );\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'approved' });\n            }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: Math.floor(this.booking.date / 1000),\n                end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n                room_email: this.space.email,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.approval_status[this.booking.space.email] = 'declined';\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === this.booking.icaluid),\n                    1,\n                    this.booking\n                );\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'declined' });\n            }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking')\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => ref.close(), 3000);\n                }\n            })\n        );\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form: FormGroup) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking.toJSON(),\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = (await this._bookings\n            .save(booking)\n            .catch(this._on_error(`Error updating requirements`))) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            const bookings = this._bookings.booking_list.getValue();\n            bookings.splice(\n                bookings.findIndex((bkn) => bkn.icaluid === new_booking.icaluid),\n                1,\n                new_booking\n            );\n            this._bookings.booking_list.next(bookings);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\" [space]=\"space\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements\n                [booking]=\"booking\"\n                [space]=\"space\"\n                (event)=\"updateRequirements($event)\"\n            ></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\" [space]=\"space\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\" [space]=\"space\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (click)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (click)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (click)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.space.email];\n        if (setup > 120) {\n            setup = Math.floor(setup / 60);\n        }\n        return setup ? humaniseDuration(setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.space.email];\n        if (breakdown > 120) {\n            breakdown = Math.floor(breakdown / 60);\n        }\n        return breakdown ? humaniseDuration(breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private' && note.space === this.space.email) || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                space: this.space,\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('setup|' + space.email)\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('breakdown|' + space.email)\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('private_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ space.name || booking.space_list[0]?.name }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('expected_attendees|' + space.email)\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '&lt;No Charge Code&gt;'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n    BookingCateringOrderDetailsComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent,\n        DeleteConfirmModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nexport interface PrivateDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this._data.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this._data.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this._data.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this._data.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this._data.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            const setup = { ...this.booking.setup };\n            setup[this._data.space.email] = value.setup * 60;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this._data.space.email] = value.breakdown * 60;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this._bookings.save(new_booking).then(\n                (booking) => {\n                    const bookings = this._bookings.booking_list.getValue();\n                    bookings.splice(bookings.findIndex(bkn => bkn.icaluid === booking.icaluid), 1, booking);\n                    this._bookings.booking_list.next(bookings);\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading');\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            return Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list: T[] = this.get('list');\n        return list.filter(predicate);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list');\n        return list.find(\n            (i) => i.id === id || i.email?.toLowerCase() === id.toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = {}): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Old  start */\n    public readonly old_start: number;\n    /** Old end */\n    public readonly old_end: number;\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        if (this.all_day) {\n            this.date = dayjs(this.date).startOf('d').valueOf();\n        }\n        this.old_start = raw_data.old_start || dayjs(this.date).unix();\n        this.old_end =\n            raw_data.old_end ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).unix();\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        Object.keys(this.setup).forEach(\n            (key) => (this.setup[key] = Math.floor(this.setup[key] / 60))\n        );\n        Object.keys(this.breakdown).forEach(\n            (key) => (this.breakdown[key] = Math.floor(this.breakdown[key] / 60))\n        );\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status =\n            (raw_data.status instanceof Object ? raw_data.status : '') ||\n            raw_data.approval_status ||\n            {};\n        this.checked_in =\n            raw_data.checked_in || raw_data.checkins || Object.keys(raw_data.check_ins || {});\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                  flatten(\n                      Object.keys(raw_data.edits || {}).map((room) => {\n                          return flatten(Object.values(raw_data.edits[room]));\n                      })\n                  )\n              );\n        this.edits = edited_fields;\n        this.type = raw_data.booking_type || (this.has_visitors ? 'external' : null) || 'internal';\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').includes('decline')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].includes('tentative') ||\n                    this.approval_status[space.email].includes('decline'))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            const json = this.toJSON();\n            return this._service.delete(this.id, {\n                concierge: true,\n                host: this.organiser.email,\n                room_id: this.space?.id,\n                icaluid: this.icaluid,\n                start: json.start,\n                end: json.end,\n            });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((_) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find((note) => note.type === 'equipment')) {\n            const eq_notes = data.notes.filter((note) => note.type === 'equipment');\n            for (const note of eq_notes) {\n                data.setup[note.space] = data.setup[note.space] || 15;\n                data.breakdown[note.space] = data.breakdown[note.space] || 15;\n            }\n        }\n        data.catering = data.catering.filter((order) => data.room_ids.includes(order.location_id));\n        if (data.catering && data.catering.length) {\n            for (const order of data.catering) {\n                data.setup[order.location_id] = data.setup[order.location_id] || 15;\n                data.breakdown[order.location_id] = data.breakdown[order.location_id] || 15;\n            }\n        }\n        Object.keys(data.setup).forEach((key) => (data.setup[key] = data.setup[key] * 60));\n        Object.keys(data.breakdown).forEach(\n            (key) => (data.breakdown[key] = data.breakdown[key] * 60)\n        );\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport {\n    humaniseDuration,\n    timeFormatString,\n    unique,\n} from '../../../shared/utilities/general.utilities';\n\nimport { Booking } from './booking.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    let time = dayjs().startOf('m');\n    time = time.minute(Math.ceil(time.minute() / 5) * 5);\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title, [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        const expected = fields.expected_attendees.value || {};\n        const matches = Object.keys(expected).filter((key) =>\n            list.find((space) => space.email === key)\n        ).length;\n        if (list && list.length && matches === 0) {\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.date.setValidators([Validators.required]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.date.setValidators([Validators.required, isFuture]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            /* istanbul ignore else */\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(options.duration, condition[0])\n                    ) {\n                        matches++;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(condition[0], options.duration)\n                    ) {\n                        matches++;\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || timePeriodsIntersect(date, date, slot.start, slot.end);\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: Booking[],\n    new_bookings: Booking[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = dayjs(filter_options.from);\n    const to = dayjs(filter_options.to);\n    const filtered_list = list.filter((booking) => {\n        const start = dayjs(booking.date);\n        const end = start.add(booking.duration, 'm');\n        return (\n            !booking.space_list.find((space) => space.email === filter_options.space) ||\n            !timePeriodsIntersect(from.valueOf(), to.valueOf(), start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'icaluid');\n}\n\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    const day1 = dayjs(start1);\n    const end_time1 = dayjs(end1);\n    const day2 = dayjs(start2);\n    const end_time2 = dayjs(end2);\n    return (\n        (day1.isAfter(day2, 'm') && day1.isBefore(end_time2)) ||\n        (end_time1.isAfter(day2, 'm') && end_time1.isBefore(end_time2)) ||\n        (day2.isAfter(day1, 'm') && day2.isBefore(end_time1)) ||\n        (end_time2.isAfter(day1, 'm') && end_time2.isBefore(end_time1))\n    );\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BookingCheckinParams } from './booking.interfaces';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    public readonly booking_list = new BehaviorSubject<Booking[]>([]);\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || 0;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || '';\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || { start: 7, end: 20 };\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    humaniseDuration,\n} from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n\n    constructor(raw_data: HashMap = {}) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unnamed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[] = []) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(\n                (key) => key.toLowerCase().includes('room') && key.toLowerCase().includes('email')\n            );\n            const price_field = fields.find((key) => key.toLowerCase().includes('price'));\n            const date_field = fields.find((key) => key.toLowerCase().includes('date'));\n            for (let row of data) {\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(\n                        (bld) => bld.id === room?.level?.building_id\n                    );\n                    row[price_field] = new CurrencyPipe('en_us').transform(\n                        row[price_field] / 100,\n                        bld?.currency\n                    );\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] =\n                        typeof row[field] === 'string'\n                            ? row[field].replace(/\\,/g, '٫')\n                            : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n            data = data.map((i: HashMap) => {\n                const booking = i;\n                if (booking.setup instanceof Object) {\n                    booking.setup = booking.setup[booking.room_email];\n                }\n                if (booking.breakdown instanceof Object) {\n                    booking.breakdown = booking.breakdown[booking.room_email];\n                }\n                booking.setup = humaniseDuration((booking.setup || 0) / 60);\n                booking.breakdown = humaniseDuration((booking.breakdown || 0) / 60);\n                booking.description = (booking.description || '').replace(/<[^>]*>?/gm, '');\n                booking['Meeting Host'] = booking.organizer;\n                booking['Booked By'] = booking.booked_by.name || booking.booked_by.email;\n                booking.charge_code = booking.equipment_codes\n                    ? Object.keys(booking.equipment_codes)\n                          .map((key) => booking.equipment_codes[key])\n                          .join('٫ ')\n                    : '';\n                //    booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n                booking.attendees = (booking.attendees || [])\n                    .map((person) => person.name || person.email || person)\n                    .join('٫ ');\n                booking.start = dayjs(booking.start).format('DD MMM YYYY٫ h:mm A');\n                booking.end = dayjs(booking.end).format('DD MMM YYYY٫ h:mm A');\n                booking.notes = (booking.notes || [])\n                    .map((note) =>\n                        note.author && (note.type === 'description' || note.type === 'private')\n                            ? `[${note.author}|${note.type}]${note.message.replace(\n                                  /<[^>]*>?/gm,\n                                  ''\n                              )}`\n                            : ''\n                    )\n                    .join('\\n');\n                booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurr });\n                const remove_fields = [\n                    'id',\n                    'icaluid',\n                    'accepted_at',\n                    'accepted_by',\n                    'check_ins',\n                    'changeKey',\n                    'created',\n                    'booking_type',\n                    'edit_history',\n                    'end_epoch',\n                    'old_attendees',\n                    'start_epoch',\n                    'expected_attendees',\n                    'isAllDay',\n                    'isCancelled',\n                    'body',\n                    'is_free',\n                    'lastModifiedDateTime',\n                    'locationType',\n                    'locations',\n                    'organizer',\n                    'booked_by',\n                    'originalEndTimeZone',\n                    'originalStartTimeZone',\n                    'recurr',\n                    'room_booking_status',\n                    'room_email',\n                    'room_emails',\n                    'room_id',\n                    'sensitivity',\n                    'seriesMasterId',\n                    'show_as',\n                    'notes',\n                    'status',\n                    'subject',\n                    'type',\n                    'previous_booking',\n                    'catering',\n                    'responseStatus',\n                    'equipment_codes',\n                ];\n                for (const field of remove_fields) {\n                    if (booking[field] !== undefined) {\n                        delete booking[field];\n                    }\n                }\n                const output = {};\n                const order = [\n                    'title',\n                    'start',\n                    'end',\n                    'Meeting Host',\n                    'Booked By',\n                    'all_day',\n                    'recurrence',\n                    'attendees',\n                    'description',\n                ];\n                const keys = Object.keys(booking);\n                keys.sort((a, b) => {\n                    const idx_a = order.indexOf(a);\n                    const idx_b = order.indexOf(b);\n                    return (\n                        (idx_a === -1 ? keys.length : idx_a) - (idx_b === -1 ? keys.length : idx_b)\n                    );\n                });\n                for (const key of keys) {\n                    output[key] = booking[key];\n                }\n                return output;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly HashMap[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => bkn.toJSON ? bkn.toJSON() : bkn);\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as dayjs from 'dayjs';\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public async query(query: HashMap = {}) {\n        const list = await super.query(query);\n        if (!Object.keys(query).length) {\n            this.set('list', list);\n        }\n        return list;\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { User } from './user.class';\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this.set('delegates', null);\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                async (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            async (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                await this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        await this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        /* istanbul ignore next */\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        /* istanbul ignore next */\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /* istanbul ignore next */\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        value = getItemWithKeys(keys, this._settings.api) ||\n            getItemWithKeys(keys, this._settings.session) ||\n            getItemWithKeys(keys, this._settings.local);\n        return value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (click)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (click)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Optional event emitter for changes */\n    @Output() public onChange = new EventEmitter();\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n            this.onChange.emit(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title), 1000);\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" [from]=\"from_date\" formControlName=\"date\"></a-date-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n\n    transform(value: string, from: string = '_', to: string = ' '): string {\n        return (value|| '').split(from).join(to);\n    }\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseDirective } from '../../base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Currently active zone */\n    @Input() public zone: string;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = +localStorage.getItem('CONCIERGE.date');\n        /* istanbul ignore else */\n        if (date && date !== this.date) {\n            this.timeout(\n                'init',\n                () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                },\n                10\n            );\n        }\n        this.subscription(\n            'events',\n            this._bookings.booking_list.subscribe((list) => {\n                this.event_map = {};\n                let date = dayjs(this.date).startOf('M');\n                const end = date.endOf('M');\n                while (!date.isAfter(end, 'd')) {\n                    this.event_map[date.format('YYYY-MM-DD')] = list.filter(\n                        (booking) =>\n                            dayjs(booking.date).isSame(date, 'd') &&\n                            booking.space_list.find((space) => space.zones.includes(this.zone)) &&\n                            booking.tentative\n                    ).length;\n                    date = date.add(1, 'd');\n                }\n            })\n        );\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockBooking } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(1000)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[randomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organiser,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][randomInt(3)];\n        }\n        return booking_data;\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            for (const zone of item.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories && category.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === category.parent_categories[0]);\n                    if (parent) {\n                       parent.items.push(category);\n                    } else {\n                        throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findParent(id: string, list: CateringCategory[]): CateringCategory {\n    for (const category of list) {\n        const found = category.items.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from '../../utilities/spec-helpers';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockSpace } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { generateMockUser } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport * as dayjs from 'dayjs';\nimport { setMockBookingStartDatetime, generateMockSpace } from '../utilities/spec-helpers';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\nimport { ReplacePipe } from './components/replace.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES,\n        ReplacePipe\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        ReplacePipe\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = filter.toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { of, BehaviorSubject } from 'rxjs';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Organisation } from 'src/app/services/data/organisation/organisation.class';\nimport { BaseDataClass } from 'src/app/services/data/base-api.class';\nimport { MapLocation } from 'src/app/services/data/location/location.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ServiceManager } from 'src/app/services/data/service-manager.class';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { HashMap } from './types.utilities';\nimport { randomInt, padZero, unique } from './general.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SERVICE: any;\n\ndeclare global {\n    interface Jest { fn: () => any }\n};\n\ndeclare let jest: Jest;\n\n/* istanbul ignore file */\n\n/**\n * Generate a mocked version of the application service\n */\nexport function generateMockAppService() {\n    SERVICE = {\n        setting: jest.fn(),\n        notify: jest.fn(),\n        notifyInfo: jest.fn(),\n        notifyWarn: jest.fn(),\n        notifySuccess: jest.fn(),\n        notifyError: jest.fn(),\n        log: jest.fn(),\n        navigate: jest.fn(),\n        navigateBack: jest.fn(),\n        get: jest.fn(),\n        listen: jest.fn(),\n        set: jest.fn(),\n        Composer: { auth: { token: 'test' } },\n        Hotkeys: { listen: jest.fn() },\n        Users: generateMockDataService('UsersService'),\n        Organisation: {\n            levelWithID: jest.fn(),\n            listen: jest.fn(),\n            initialised: of(true),\n            building: new Building(generateMockBuilding({ id: 'bld-01' }))\n        },\n        Locations: generateMockDataService('LocationsService'),\n        Base: generateMockDataService('BaseService'),\n        Menu: generateMockDataService('CateringMenuService'),\n        Spaces: generateMockDataService('SpacesService'),\n        Bookings: generateMockDataService('BookingsService'),\n        Reports: generateMockDataService('ReportsService'),\n        CateringItems: generateMockDataService('CateringItemsService'),\n        CateringCategories: generateMockDataService('CateringCategoriesService'),\n        initialised: of(true)\n    };\n    ServiceManager.setService(BaseDataClass, SERVICE.Base);\n    ServiceManager.setService(Organisation, SERVICE.Organisation);\n    ServiceManager.setService(Building, SERVICE.Organisation);\n    ServiceManager.setService(User, SERVICE.Users);\n    ServiceManager.setService(Booking, SERVICE.Bookings);\n    ServiceManager.setService(Space, SERVICE.Spaces);\n    ServiceManager.setService(MapLocation, SERVICE.Locations);\n    ServiceManager.setService(Report, SERVICE.Reports);\n    ServiceManager.setService(CateringItem, SERVICE.CateringItems);\n    ServiceManager.setService(CateringCategory, SERVICE.CateringCategories);\n    SERVICE.Organisation.buildings = [SERVICE.Organisation.building];\n    SERVICE.Users.current = new User(generateMockUser());\n    SERVICE.Users.initialised = of(true);\n    SERVICE.Bookings.booking_list = new BehaviorSubject(new Array(10).fill(0).map(_ => new Booking(generateMockBooking())));\n    SERVICE.listen.mockReturnValue(of(null, []));\n    return SERVICE;\n}\n\nexport function generateMockDataService(name: string) {\n    const service = {\n        find: jest.fn(),\n        filter: jest.fn(),\n        listen: jest.fn(),\n        get: jest.fn(),\n        set: jest.fn(),\n        setting: jest.fn(),\n        query: jest.fn(),\n        show: jest.fn(),\n        add: jest.fn(),\n        save: jest.fn(),\n        remove: jest.fn(),\n        delete: jest.fn(),\n        update: jest.fn(),\n        addFrom: jest.fn(),\n        removeFrom: jest.fn(),\n        task: jest.fn(),\n        available: jest.fn(),\n        process: jest.fn(),\n        updateList: jest.fn(),\n        clearList: jest.fn(),\n        removeFromList: jest.fn(),\n        accept: jest.fn(),\n        decline: jest.fn(),\n        checkin: jest.fn(),\n        is_logged_in: false,\n        initialised: of(true),\n        name\n    };\n    service.save.mockImplementation(_ => Promise.resolve(new Booking(_)));\n    service.listen.mockReturnValue(of(null));\n    service.filter.mockReturnValue([]);\n    return service;\n}\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][randomInt(5)],\n        setup: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(overrides: HashMap = {}): HashMap {\n    const id = `zone_bld-${BLD_COUNT++}`;\n    const levels = Array(10)\n        .fill(0)\n        .map(i => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][faker.commerce.productName()] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => generateMockUser())\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            }\n        },\n        ...overrides\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url\n    };\n}\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3).fill(0).map(i => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n\n\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this._service.title = 'Catering';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (click)=\"category = category + 1\">Add Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (click)=\"package = package + 1\">Add Sub-Category/Package</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { SharedOverlaysModule } from 'src/app/overlays/overlays.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        SharedOverlaysModule\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(group, event.metadata);\n                }\n            })\n        );\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(item, event.metadata);\n                }\n            })\n        );\n    }\n\n    private updateItemList(old_item: CateringItem | CateringCategory, new_item: HashMap) {\n        const item =\n            old_item instanceof CateringCategory\n                ? new CateringCategory(new_item)\n                : new CateringItem(new_item);\n        if (old_item.id) {\n            const index = this.parent.items.findIndex((itm) => itm.id === old_item.id);\n            (this.parent.items as any[]).splice(index, 1, item);\n            (this.parent as any).items = [...this.parent.items];\n        } else {\n            (this.item.items as any[]).push(item);\n        }\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringCategory\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item instanceof CateringCategory\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                }\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" *ngIf=\"!subitem\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (click)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach((item) => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === updated_booking.icaluid),\n                    1,\n                    updated_booking\n                );\n                this._bookings.booking_list.next(bookings);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking,\n            },\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport {\n    replaceBookings,\n    timePeriodsIntersect,\n} from 'src/app/services/data/bookings/booking.utilities';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<any[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.available_spaces = this._spaces\n                        .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                        .map((i) => i.email);\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.updateOrders();\n                })\n            );\n            this.available_spaces = this._spaces\n                .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                .map((i) => i.email);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                const date = dayjs(this.date).startOf('d');\n                const end = date.endOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                space_list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                            space: space.email,\n                            from: date.valueOf(),\n                            to: end.valueOf(),\n                        }))\n                );\n                this._bookings.booking_list.next(bookings);\n                return space_list;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((_) => (this.loading = false))\n        );\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe((_) => this.updateOrders())\n        );\n    }\n\n    private updateOrders() {\n        const bookings = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const relevant_bookings = bookings.filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.catering.length &&\n                booking.space_list.find((space) =>\n                    this.available_spaces.find((email) => email === space.email)\n                ) &&\n                timePeriodsIntersect(\n                    date.startOf('d').valueOf(),\n                    date.endOf('d').valueOf(),\n                    start.valueOf(),\n                    end.valueOf()\n                )\n            );\n        });\n        let orders: CateringOrder[] = [];\n        relevant_bookings.forEach((booking, i) => {\n            const catering = booking.catering;\n            catering.forEach((order) => {\n                (order as any).booking_date = booking.date;\n                order.booking = booking;\n            });\n            orders = orders.concat(booking.catering);\n        });\n        orders = unique(orders, 'id');\n        orders = orders.filter((order) => this.available_spaces.indexOf(order.location_id) >= 0);\n        orders.sort(\n            (a, b) =>\n                a.booking_date +\n                a.delivery_time * 60 * 1000 -\n                (b.booking_date + b.delivery_time * 60 * 1000)\n        );\n        this.loading = false;\n        this.orders = orders;\n        this.filtered_orders = this.filter(orders, this.search);\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n        { id: 'none', name: 'Other' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = {\n                ...(this.category instanceof CateringCategory\n                    ? this.category.toJSON()\n                    : this.category),\n                ...this.form.value,\n                parent_categories: [this.parent.id],\n            };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + 'Description'\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id]),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({\n                ...(this.item instanceof CateringItem ? this.item.toJSON() : this.item),\n                ...this.form.value,\n            }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Email of the order space */\n    @Input() public space: string;\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[space] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return (this.order.items as any);\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService) {}\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking.toJSON(), catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"order && items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [date]=\"booking.date\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.email,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking.toJSON(), notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await this._bookings.save(pending_booking).catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === new_booking.icaluid), 1, new_booking);\n                this._bookings.booking_list.next(bookings);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking: any = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === updated_booking.icaluid), 1, updated_booking);\n                this._bookings.booking_list.next(bookings);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [space]=\"order.location_id\" [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        // const now = dayjs().startOf('d');\n        // const date = dayjs(this.date).startOf('d');\n        // if (now.isSame(date, 'd')) {\n            return 'Today';\n        // } else if (date.diff(now, 'd') === 1) {\n        //     return 'Tomorrow';\n        // } else if (now.diff(date, 'd') === 1) {\n        //     return 'Yesterday';\n        // }\n        // return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) => space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.email);\n        this.updateEvents();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n        this.subscription(\n            'update',\n            this._bookings.booking_list.subscribe((_) => this.updateEvents())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.updateEvents();\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Update list of events pending approval\n     */\n    private updateEvents() {\n        const list = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const events = list.filter(\n            (booking) =>\n                dayjs(booking.date).isSame(date, 'd') &&\n                booking.tentative &&\n                this.space_list.find((space) => space === booking.space.email)\n        );\n        events.sort((a, b) => a.date - b.date);\n        this.events = [];\n        events.forEach((event) => {\n            const json = event.toJSON();\n            for (const space of event.space_list) {\n                if (event.approval_status[space.email].includes('tentative')) {\n                    this.events.push(\n                        new Booking({ ...json, room_ids: [space.email, ...json.room_ids.filter(id => id !== space.email)] })\n                    );\n                }\n            }\n        });\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        // if (now.isAfter(end, 'm')) {\n        //     return;\n        // } else if (now.isAfter(start, 'm')) {\n        //     start = now;\n        // }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((spaces) => {\n                let bookings = this._bookings.booking_list.getValue();\n                spaces.forEach((space) => {\n                    bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                        space: space.email,\n                        from: start.valueOf(),\n                        to: end.valueOf(),\n                    });\n                });\n                this._bookings.booking_list.next(bookings);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return this.event.organiser.name;\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.email === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        space: this.event.space,\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_email: this.event.space?.email,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space?.email] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_email: booking.space.email,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.email] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (click)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (click)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field limit-height\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field limit-height\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (click)=\"accept()\"\n        >\n            Accept\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (click)=\"decline()\"\n        >\n            Decline\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: HashMap<boolean> = {};\n    /** List of legend keys to show */\n    public legend_list: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Day View';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend_list = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend(mobile: boolean = false) {\n        if (mobile) {\n            this.legend_list = this.legend_keys.reduce((list, key) => {\n                if (key.active) list.push(key.id)\n                return list;\n            }, []);\n        }\n        this.legend = this.legend_keys.reduce((map, key) => {\n            map[key.id] = this.legend_list.includes(`${key.id}`);\n            return map;\n        }, {});\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button class=\"not-desktop\" [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend_list\"\n                        (ngModelChange)=\"updateLegend()\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_listing\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_listing=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend(true)\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: Booking;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space associated with the event */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public get local_id(): string {\n        return this.event.icaluid.substr(0, 6);\n    }\n\n    /** Whether booking is approved for the event in the displayed space */\n    public get approved(): boolean {\n        return this.event.approved || this.event.approval_status[this.space.email].includes('accepted');\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (!this.event || this.event.approval_status[this.space.email]?.includes('decline')) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.email] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                space: this.space,\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.event.setup[this.space.email]\n                    ? this.event.setup[this.space.email] / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown[this.space.email]\n                    ? this.event.breakdown[this.space.email] / duration\n                    : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (click)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { IEventOverlap } from './event/event.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** List of bookings for the current date and space */\n    public event_list: Booking[] = [];\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.event_list;\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return (\n                    (!this.overflow_only ||\n                        event.setup[event.space.email] ||\n                        event.breakdown[event.space.email]) &&\n                    ((!!event.declined && this.legend.declined !== false) ||\n                        (!event.declined && this.legend[event.type] !== false))\n                );\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => (this.overflow_only = state))\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.booking_list.subscribe(() => this.updateEvents())\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        if (changes.space || changes.date || changes.legend) {\n            this.updateEvents();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    private updateEvents() {\n        this.timeout('update_events', () => {\n            const date = dayjs(this.date);\n            const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n                const start = dayjs(booking.date);\n                const end = start.add(booking.duration, 'm');\n                return (\n                    booking.space_list.find((space) => space.email === this.space.email) &&\n                    (start.isSame(date, 'd') ||\n                        end.isSame(date, 'd') ||\n                        (date.isAfter(start, 'd') && date.isBefore(end, 'd')))\n                );\n            });\n            this.event_list = bookings;\n            this.checkInView();\n        });\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking.toJSON(),\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this._bookings.save(new_booking).then(\n                            (bkn: Booking) => {\n                                resolve(bkn);\n                                const bookings = this._bookings.booking_list.getValue();\n                                bookings.splice(\n                                    bookings.findIndex((bkn) => bkn.icaluid === bkn.icaluid),\n                                    1,\n                                    bkn\n                                );\n                                this._bookings.booking_list.next(bookings);\n                            },\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 10;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    public space_zones: string[] = [];\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        this.timeout('update', () => {\n            const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n            if (visible_rooms.length) {\n                visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n                const time = dayjs(this.date).startOf('d');\n                const end = time.endOf('d');\n                const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n                const level = this._service.get('APP.level');\n                const zone_ids = [level === -1 ? this._org.building.id : level];\n                /* istanbul ignore else */\n                if (this.space_type) {\n                    zone_ids.push(this.space_type);\n                }\n                this.loading = true;\n                this._spaces\n                    .query({\n                        room_ids,\n                        zone_ids: zone_ids.join(','),\n                        available_from: time.unix(),\n                        available_to: end.unix(),\n                    })\n                    .then(\n                        (room_list) => {\n                            let bookings = this._bookings.booking_list.getValue();\n                            room_list.forEach(\n                                (space) =>\n                                    (bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                                        space: space.email,\n                                        from: time.valueOf(),\n                                        to: end.valueOf()\n                                    }))\n                            );\n                            this._bookings.booking_list.next(bookings);\n                            this.last_update = dayjs().valueOf();\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        },\n                        () => {\n                            delete this.loading_space;\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        }\n                    );\n            } else {\n                this.timeout(\n                    'update_bookings',\n                    () => this.updateBookings(),\n                    UPDATE_INTERVAL * 1000\n                );\n            }\n        });\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                space: booking.space,\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && booking.space && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#space-col-${booking.space.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const date_percent = Math.abs(dayjs(booking.date).diff(dayjs(booking.date).startOf('d'), 'm')) / (24 * 60);\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft - 10,\n                    top: this.scroll_area.nativeElement.scrollHeight * date_percent - 10,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n        this.space_zones = this.spaces.map((i) => `space-col-${i.id}`)\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div class=\"space-header\" *ngFor=\"let item of filtered_spaces\" [title]=\"item.name\">\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_holding_bay ? 'close' : 'list'\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (click)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)'\n                    | safe: 'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n    /** Multiple Locations? */\n    public multipleLocations: boolean = false;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService,\n        private _router: Router,\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n        if (this.locations.length > 1){\n            this.locations = [this.locations[0]];\n        }\n    }\n\n    /**\n     * Ensure Space Time Continuum\n     */\n    public checkDates(new_date: number){\n        if(this.start_date > this.end_date){\n            this.start_date = dayjs(new_date).startOf('d').valueOf();\n            this.end_date = dayjs(new_date).endOf('d').valueOf();\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date / 10\"\n                [to]=\"start_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <!-- Single Location Select -->\n            <mat-select *ngIf='!report.multi_locations' name=\"locations\" [(ngModel)]=\"locations[0]\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <!-- Multi Location Select - Could be wrapped to make directives conditional -->     \n            <mat-select *ngIf='report.multi_locations' name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key | replace }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n    /** Multiselect Locations */\n    multi_locations: boolean;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: false,\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Reports';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n        <feedback></feedback>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true, email: '' }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const attendees = this.form.controls.attendees.value;\n                for (const attendee of attendees) {\n                    if (!attendee.email) {\n                        attendee.email = `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`;\n                    }\n                }\n                const new_booking = new Booking({ ...this.booking.toJSON(), ...this.form.value });\n                this._bookings.save(new_booking).then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        const bookings = this._bookings.booking_list.getValue();\n                        bookings.splice(bookings.findIndex(bkn => bkn.icaluid === bkn.icaluid), 1, bkn);\n                        this._bookings.booking_list.next(bookings);\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (click)=\"save()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n    /** Whether all attendees are being checked in */\n    public loading: boolean;\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        return this.event.status === 'upcoming' || this.event.status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _dialog: MatDialog) {}\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checked_in;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: unique(this.event.attendees.map(user => ({ name: user.name, email: user.email }))),\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in all attendees for booking. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: unique([...this.event.checked_in, ...this.event.attendees.map(user => user.email)]),\n            });\n        }\n        this.loading = false;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees.filter(user => !user.email.includes('@guest'))\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a mat-icon-button matTooltip=\"Email Attendees\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\" (click)=\"checkin()\">\n                <action-icon\n                [loading]=\"loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (click)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (click)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport {\n    replaceBookings,\n    timePeriodsIntersect,\n} from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex((bkn) => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .subscribe((_) => this.search$.next(`${this.date}|${_.id}`))\n            );\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.booking_list.subscribe(() => this.updateEvents())\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, booking: Booking) {\n        return booking.id;\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings\n            .filter((booking) => {\n                return booking.attendees.find(\n                    (user) =>\n                        user.name.toLowerCase().indexOf(search) >= 0 ||\n                        user.email.toLowerCase().indexOf(search) >= 0\n                );\n            })\n            .filter((bkn) => (this.show_all ? true : bkn.has_visitors));\n    }\n\n    private updateEvents() {\n        const date = dayjs(this.date).startOf('d');\n        const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return timePeriodsIntersect(\n                date.valueOf(),\n                date.endOf('d').valueOf(),\n                start.valueOf(),\n                end.valueOf()\n            );\n        })\n        .filter((bkn) =>\n            bkn.space_list.find((space) => space.zones.includes(this._org.building.id))\n        );\n        console.log(\n            'Events:',\n            bookings.map((i) => `${i.title}${i.space_list.map(i => i.email).join(',')}`)\n        );\n        this.bookings = bookings.map((bkn) => {\n            const data = bkn.toJSON();\n            const space =\n                bkn.space_list.find((space) => space.zones.includes(this._org.building.id)) ||\n                bkn.space;\n            return new Booking({\n                ...data,\n                room_ids: [space.email].concat(bkn.space_list.map((space) => space.email)),\n            });\n        });\n        this.filtered_bookings = this.filter(this.search);\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                this.updateEvents();\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((list: Space[]) => {\n                const date = dayjs(this.date).startOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                console.log(\n                    'Booking list:',\n                    bookings.map((i) => i.title)\n                );\n                list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(\n                            bookings,\n                            space.bookings.map((bkn) => new Booking(bkn)),\n                            {\n                                space: space.email,\n                                from: date.valueOf(),\n                                to: date.endOf('d').valueOf(),\n                            }\n                        ))\n                );\n                console.log(\n                    'Bookings:',\n                    bookings.map((i) => i.title)\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                this._bookings.booking_list.next(bookings);\n                this.updateEvents();\n                return bookings;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((_) => (this.loading = false))\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === -1\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container\n                *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\"\n            >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === i\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.status === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checked_in.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: [{ name: this.person.name, email: this.person.email }],\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in user. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: [...this.event.checked_in, this.person.email],\n            });\n        }\n        this.loading = false;\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a\n            mat-icon-button\n            [matTooltip]=\"!person.external ? 'Email Staff Member' : 'Email Visitor'\"\n            [disabled]=\"invalid_email\"\n            [href]=\"mail_url | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            name=\"checkin\"\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading || !person.external\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {}\n\n    public ngOnInit(): void {\n        this._service.title = 'Visitors';\n    }\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss'],\n})\nexport class WeekViewDayDisplayComponent extends BaseDirective implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    constructor(private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe(() => this.updateEvents())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateEvents();\n        }\n    }\n\n    private updateEvents() {\n        const date = dayjs(this.date).startOf('d');\n        const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.space_list.find((space) =>\n                    this.spaces.find((a_space) => a_space.email === space.email)\n                ) &&\n                timePeriodsIntersect(\n                    date.valueOf(),\n                    date.endOf('d').valueOf(),\n                    start.valueOf(),\n                    end.valueOf()\n                )\n            );\n        });\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: this.event.space,\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService, private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                const date = dayjs(this.date).startOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(\n                            bookings,\n                            space.bookings.map((bkn) => new Booking(bkn)),\n                            {\n                                space: space.email,\n                                from: date.valueOf(),\n                                to: date.endOf('d').valueOf(),\n                            }\n                        ))\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                this._bookings.booking_list.next(bookings);\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Week View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"b931f91\",\n    \"hash\": \"b931f91\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"b931f91\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1595506760173\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}