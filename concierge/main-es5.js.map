{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/replace.pipe.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/reports.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/spec-helpers.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_org","_users","_spaces","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_bookings","_router","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","booking","time_changed","old_booking","date","duration","save","bkn","success","bookings","booking_list","getValue","index","findIndex","icaluid","splice","push","next","emit","reason","notifySuccess","err","notifyError","spaces","length","reject","all_day","available","room_ids","map","space","join","dayjs","startOf","valueOf","ignore","space_list","was_available","name","options","host","organiser","reduce","request","byRequest","current","title","date_value","duration_value","end","add","format","isSame","formatRecurrence","recurrence","humaniseDuration","attendees","filter","i","email","equipment_codes","catering","codes","order","location_id","charge_code","notes","note","type","message","body","find","a_space","level","building","buildings","bld","building_id","CateringOrder","symbol","currency","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","close","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","navigate","confirmBooking","order_list","openCateringDetailsModal","markAsDirty","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","codes_field","head_counts_field","expected_attendees","componentInstance","afterClosed","CateringDetailsModalComponent","valid","dialog_ref","maxHeight","booking_type","setting","BookingCateringComponent","active_order","orders","an_order","Input","CateringMenuCategoryComponent","hasSelectionRequirements","category","must_select","items","item","getActiveList","list","amount","concat","CateringMenuItemComponent","changes","field","an_item","setAmount","valueChanges","updatePackageSelection","selectPackageOptions","confirmed_item","CateringCategory","notifyWarn","CateringItem","cart_item","active_items","forEach","includes","PackageOptionsModalComponent","done","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","search$","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","BehaviorSubject","matched_items","generateAvailableTimes","str","search","toLowerCase","group","time","delivery_time","initForm","_input_el","show_search","nativeElement","focus","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","query","zone_id","zones","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","now","endOf","building_time","space_email","catering_hours","hour","timezone","padZero","floor","toDate","as_dayjs","possible_end","isAfter","active_building","within_restricted_time","has_available_items","out_of_hours","form_controls","catering_restricted_from","total","can_order_anytime","confirmOrder","ViewChild","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","previous","$event","stopPropagation","BookingSpaceFiltersComponent","locations","locationsChange","building_list","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","request_id","search_results$","debounceTime","distinctUntilChanged","switchMap","randomInt","bookable","catchError","of","error","resp","zone","sort","a","b","onChange","multiple","space_a","space_b","bld_b","localeCompare","sort_order","reverse","a_has_zone","indexOf","b_has_zone","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","conflicts","recurr","conflict_list","replaces","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","scrollIntoView","behavior","block","inline","item_list","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","author","_scrollToBottom","_content_el","scrollTo","top","scrollHeight","left","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","DeleteConfirmModalComponent","MeetingCateringDetailsComponent","setItem","JSON","stringify","creator","status","declined","editMeetingCatering","MeetingDetailsDisplayComponent","edited","Object","values","edits","person","period","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_on_error","setLoading","accept","concierge","room_email","approval_status","decline","booking_id","deleteMeeting","new_booking","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","random","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","dirty","old_notes","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","date_string","replaced_by","head_count","equipment_code","selected_spaces","request_map","types","active_type","update","space_types","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_snackbar","_analytics","_subjects","_observers","set","isStable","run","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","warn","info","args","stream","force","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","notifyInfo","reload","setInterval","checkForUpdate","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","room_name","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","BaseAPIService","_subscribers","_promises","_compare","_list_filter","_name","_api_route","load","engine","predicate","query_params","cache","toQueryString","result","http","d","process","results","new_item","post","analyticsEvent","task_name","method","post_data","_task","put","label","raw_item","_display","subject","start_epoch","Start","end_epoch","End","old_start","unix","old_end","description","_attendees","organizer","active_user","booked_by","_location","location_name","Date","getTime","checked_in","checkins","check_ins","notify_users","space_ids","room_id","_space_list","space_service","ServiceManager","serviceFor","Space","edited_fields","isArray","flatten","room","has_visitors","json","auto_approve","from_room","eq_notes","display","v","external","subtract","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","list_length","expected","matches","new_expected","new_codes","simplified_fields","updateValueAndValidity","enable","control","rulesForSpace","space_rules_for_user","hide","rules","hasOwnProperty","rule_block","checkRules","recurr_end","conditions","ruleset","max_length","stringToMinutes","min_length","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","parts","split","statusFromBookings","requestable","free_slots","next_free_slot","slot","timePeriodsIntersect","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","replaceBookings","new_bookings","filter_options","from","to","filtered_list","updated_list","start1","end1","start2","end2","day1","end_time1","day2","end_time2","BookingsService","setService","task","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","max","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","address","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","available_buildings","OrganisationService","_organisation","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","price_field","date_field","row","CurrencyPipe","transform","remove_fields","output","idx_a","idx_b","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","linked_spaces","linked_rooms","rm","rulesFor","availabilityOptionsToQuery","blds","SpacesService","respond","available_spaces","linked","show","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","current_user","interval","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","build","VERSION","built","core_version","version","loadFromFile","app","colors","app_name","file","file_name","clearTimeout","clearInterval","fn","delay","Function","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","old_date","new_date","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","from_date","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","ReplacePipe","Pipe","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","show_add_item","show_events","dateChange","event_map","tentative","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","predictableRandomInt","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","generateMockBooking","menu","MOCK_MENU","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","parent","cat","findParent","itm","found","findItem","MOCK_LOCATIONS","lvls","generateMockLocation","send_acceptance","end_date","space_data","generateMockSpace","Bookings","today","generateMockUser","PREDEFINED_USERS","faker","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","setMockBookingStartDatetime","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","shift","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","querySelector","getAttribute","language","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","xmur3","rand","sfc32","imul","charCodeAt","c","SERVICE","generateMockAppService","jest","navigateBack","Composer","Hotkeys","Users","generateMockDataService","generateMockBuilding","Locations","Base","Menu","Spaces","Reports","CateringItems","CateringCategories","mockReturnValue","addFrom","removeFrom","updateList","clearList","removeFromList","checkin","is_logged_in","mockImplementation","SPACE_COUNT","overrides","firstName","lastName","USER_DOMAIN","commerce","productName","business","BOOKING_COUNT","BOOKING_DATE","override","generateMockCateringOrder","lorem","paragraph","city","BLD_COUNT","LVL_COUNT","generateMockLevel","features","test","nested","level2","org","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","pickMenuItem","menu_map","fixed_locations","maps","ORG_COUNT","generateMockOrganisation","HAS_ERROR","validateDate","is_from","buildValidateStartTime","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","queryParamMap","relativeTo","queryParams","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","parent_id","_menu_items","_menu_categories","updateItemList","old_item","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","openCategoryModal","depth","statuses","colour","active_status","updated_booking","viewOrderDetails","filtered_orders","updateOrders","initBookings","view_id","sub_item","sub_sub_item","relevant_bookings","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","complete","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","deliver_at_time","DayViewApprovalsComponent","updateEvents","getMonthlyPending","previousValue","currentValue","STATES","DayViewApprovalsEventComponent","acting","start_time","length_string","DayViewComponent","active_level","legend","legend_list","legend_keys","color","updateLevel","newMeeting","updateLegend","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","should_display","view","shown_date","toFixed","overflow_top","overflow_bottom","approved","time_period","inView","dragging","event_list","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_list","room_count","Set","size","checkCollisions","moveBooking","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","space_zones","scroll_area","initSpaces","updateTime","updateBookings","space_type","updateScroll","active_hour","visible_rooms","scroll_box","date_percent","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","multipleLocations","report","report_data","downloadCSV","checkDates","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","multi_locations","active_report","loading_state","mod","EventFormComponent","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","attendee","VisitorBookingItemComponent","checked_in_users","counts","host_email","response_type","show_attendees","checkedInStatus","VisitorTimelineComponent","filtered_bookings","show_all","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { UsersService } from './services/data/users/users.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss'],\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        const options = {\n            date: this.booking.date,\n            duration: this.booking.duration,\n            host: this.organiser,\n        };\n        return this.spaces.reduce((request, space) => request || space.byRequest(options), false);\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Active user */\n    public get user(): User {\n        return this._users.current;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day && duration_value < 25 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        return formatRecurrence(this.booking.recurrence);\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return this.booking.all_day ? 'All Day' : humaniseDuration(duration_value);\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter((i) => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return this.booking.organiser || this._users.current;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map((order) => {\n            const space: any = this.spaces.find(\n                (a_space) => a_space.email === order.location_id\n            ) || {\n                level: {},\n            };\n            const building: any =\n                this._org.buildings.find((bld) => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        this.checkSpaceAvailability().then(\n            () => {\n                this.loading = 'Processing booking request...';\n                this.booking.time_changed =\n                    this.old_booking &&\n                    (this.old_booking.date !== this.booking.date ||\n                        this.old_booking.duration !== this.booking.duration);\n                this._bookings.save(this.booking).then(\n                    (bkn) => {\n                        this.loading = null;\n                        this.success = true;\n                        this._dialog_ref.disableClose = false;\n                        const bookings = this._bookings.booking_list.getValue();\n                        const index = bookings.findIndex(booking => booking.icaluid === bkn.icaluid);\n                        if (index >= 0) {\n                            bookings.splice(index, 1, bkn);\n                        } else {\n                            bookings.push(bkn);\n                        }\n                        this._bookings.booking_list.next([...bookings]);\n                        localStorage.removeItem('ACA_STAFF.booking_form_data');\n                        this.event.emit({ reason: 'done' });\n                        this._service.notifySuccess(\n                            `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n                        );\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._dialog_ref.disableClose = false;\n                        this._service.notifyError(\n                            `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n                        );\n                    }\n                );\n            },\n            (err) => {\n                this.loading = null;\n                this._dialog_ref.disableClose = false;\n                this._service.notifyError(`Error checking space availability: ${err}`);\n            }\n        );\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id &&\n                (this.booking.date === this.old_booking.date &&\n                    this.booking.duration === this.old_booking.duration)) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const all_day = this.booking.all_day;\n            this._spaces\n                .available({\n                    room_ids: spaces.map((space) => space.id).join(','),\n                    date: all_day\n                        ? dayjs(this.booking.date).startOf('d').valueOf()\n                        : this.booking.date,\n                    duration: all_day ? 24 * 60 : this.booking.duration,\n                    ignore: this.booking.icaluid\n                })\n                .then(\n                    (space_list) => {\n                        for (const space of space_list) {\n                            if (!space.was_available) {\n                                return reject(\n                                    `${space.name} is not available at the select time period.`\n                                );\n                            }\n                        }\n                        if (space_list.length < spaces.length) {\n                            return reject(\n                                `${spaces[0].name} is not available at the select time period.`\n                            );\n                        }\n                        resolve();\n                    },\n                    (err) => reject(err)\n                );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>Recurrence<span *ngIf=\"changes.recurrence\">*</span>:</label>\n            <div class=\"value\">{{ recurrence }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\">\n                        <div class=\"text\" [title]=\"item?.name\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"organiser && organiser.email !== user.email\">\n            <label>Booked by<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button name=\"save\" (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list.find(order => this.form.controls.space_list.value.find(space => space.email === order.location_id)) &&\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (!space_list || !space_list.length || !this.booking.id) {\n                    this.navigate('search');\n                } else if (this.booking.id && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking ? this._data.booking.toJSON() : {};\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking.toJSON(),\n                        ...value,\n                        booking_type: value.type,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                } else if (event.reason === 'action') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [max]=\"item.maximum_quantity\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { toDate } from 'date-fns-tz';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\nimport { padZero } from 'src/app/shared/utilities/general.utilities';\nimport { BehaviorSubject } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n    /** Whether the search input should be shown */\n    public show_search: boolean;\n    /** Current search string for filtering */\n    public readonly search$ = new BehaviorSubject('');\n    /** List of menu items that match the search string */\n    public matched_items: CateringItem[] = [];\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /* istanbul ignore next */\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n        this.subscription('search', this.search$.pipe(map((str) => {\n            const search = str.toLowerCase();\n            const items = [];\n            for (const category of this.category_list) {\n                if (category.items) {\n                    for (const group of category.items) {\n                        if ((group as any).items) {\n                            if ((group as any).package && (group as any).items.find(item => item.name.toLowerCase().includes(search))) {\n                                items.push(group);\n                            } else {\n                                for (const item of (group as any).items) {\n                                    if (item.name.toLowerCase().includes(search)) {\n                                        items.push(item);\n                                    }\n                                }\n                            }\n                        } else {\n                            if (group.name.toLowerCase().includes(search)) {\n                                items.push(group);\n                            }\n                        }\n                    }\n                }\n            }\n            return items;\n        })).subscribe((items) => this.matched_items = items))\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public focusSearch() {\n        if (this._input_el && this.show_search) {\n            this._input_el.nativeElement.focus();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                all_day: this.all_day,\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...this.form.value });\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu\n            .query({ zone_id: this._org.buildings.find((bld) => space.zones.includes(bld.id)).id })\n            .then(\n                (list) => {\n                    this.loading = false;\n                    this.category_list = list.map((i) => new CateringCategory(i));\n                },\n                () => (this.loading = false)\n            );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = dayjs();\n        const space_email = this.form ? this.form.controls.location_id.value : null;\n        let catering_hours = { start: 7, end: 20 };\n        building_time = building_time.minute(0).hour(catering_hours.start);\n        if (space_email) {\n            const space = this.space_list.find((space) => space.email === space_email);\n            const building = this._org.buildings.find((bld) => space?.zones.includes(bld.id));\n            catering_hours = building?.catering_hours || catering_hours;\n            building_time = building_time.minute(0).hour(catering_hours.start);\n            if (building && building.timezone) {\n                const hour = padZero(Math.floor(catering_hours.start), 2);\n                const minute = padZero(Math.floor(catering_hours.start * 60) % 60, 2);\n                building_time = dayjs(\n                    toDate(`${start.format(`YYYY-MM-DD`)}T${hour}:${minute} ${building.timezone}`)\n                );\n            }\n        }\n        const as_dayjs = dayjs(building_time);\n        if (this.all_day || this.duration >= (catering_hours.end - catering_hours.start) * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(catering_hours.end - catering_hours.start, 'h');\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        const possible_end = building_time.add(catering_hours.end - catering_hours.start, 'h');\n        if (end.isAfter(possible_end, 'm')) {\n            end = possible_end;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"!hide_details\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"search\" [class.min]=\"hide_details\">\n                <button\n                    mat-icon-button\n                    [disabled]=\"!can_order\"\n                    (click)=\"\n                        show_search = !show_search;\n                        !show_search ? search$.next('') : '';\n                        focusSearch()\n                    \"\n                >\n                    <app-icon\n                        [icon]=\"{\n                            class: 'material-icons',\n                            content: show_search ? 'close' : 'search'\n                        }\"\n                    ></app-icon>\n                </button>\n                <div class=\"search-input\" [class.show]=\"show_search\">\n                    <div class=\"input\">\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                #input\n                                matInput\n                                [ngModel]=\"search$ | async\"\n                                (ngModelChange)=\"search$.next($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Search for items...\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" [class.is-search]=\"search$ | async\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"search$ | async; else menu\">\n            <div class=\"item\" *ngFor=\"let item of matched_items\">\n                <a-catering-order-item\n                    [compact]=\"compact\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    [symbol]=\"symbol\"\n                    [item]=\"item\"\n                    [field]=\"form.controls.items\"\n                ></a-catering-order-item>\n            </div>\n        </ng-container>\n        <ng-template #menu>\n            <ng-container *ngIf=\"!active_category; else category_display\">\n                <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                    <button\n                        mat-button\n                        class=\"category\"\n                        *ngFor=\"let item of category_list\"\n                        [style.background-image]=\"'url(' + item.image_path + ')'\"\n                        [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                        (click)=\"active_category = item\"\n                    >\n                        <div class=\"overlay\"></div>\n                        <div class=\"name\">{{ item.name }}</div>\n                    </button>\n                </div>\n            </ng-container>\n        </ng-template>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            name=\"previous\"\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"next\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    public get building_selected(): HashMap<boolean> {\n        const map = {};\n        for (const id of this.locations) {\n            map[id] = true;\n        }\n        return map;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\" xPosition=\"before\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            [ngModel]=\"building_selected[building.id]\"\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss'],\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            let request_id = 0;\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap((_) => {\n                    this.loading = true;\n                    request_id = randomInt(9999_9999);\n                    const date = dayjs(this.form.controls.date.value);\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.all_day.value\n                            ? date.startOf('d').valueOf()\n                            : date.valueOf(),\n                        duration: this.form.controls.all_day.value\n                            ? 24 * 60\n                            : this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    const id = request_id;\n                    return this._spaces.available(query).then(async (list) => ({ id, list }));\n                }),\n                catchError((_) => of({ id: request_id, list: [], error: _})),\n                map((resp: { id: number, list: Space[]}) => {\n                    this.loading = false;\n                    return resp.id === request_id ? resp.list : this.space_list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe((list) => {\n                    this.space_list = list.filter((space) => {\n                        if (!space.was_available) {\n                            return false;\n                        }\n                        for (const zone of this.zone_ids) {\n                            if (space.zones.includes(zone)) {\n                                return true;\n                            }\n                        }\n                        return !this.zone_ids.length;\n                    });\n                    this.space_list.sort((a, b) => this.sort(a, b));\n                })\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = (_) => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find((item) => item.id === space.id)) {\n                this.spaces.setValue(list.filter((item) => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n\n    /**\n     * Compare two spaces to determine order\n     * @param space_a\n     * @param space_b\n     */\n    public sort(space_a: Space, space_b: Space) {\n        const bld = this._org.buildings.find((bld) => space_a.zones.includes(bld.id));\n        const bld_b = this._org.buildings.find((bld) => space_b.zones.includes(bld.id));\n        if (bld && bld !== bld_b) {\n            return bld.name.localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') {\n                continue;\n            }\n            const a_has_zone = space_a.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = space_b.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n        return space_a.name.localeCompare(space_b.name);\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n            minBufferPx=\"900\" maxBufferPx=\"1200\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    public get is_hidden(): boolean {\n        return false;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        return false;\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (click)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" name=\"next\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface CateringConfirmModalData {\n    all_day: boolean;\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        let date = dayjs(this._data.date);\n        if (this._data.all_day) {\n            date = date.startOf('d');\n        }\n        if (this._data.form && this._data.form.controls.delivery_time) {\n            date = date.add(this._data.form.controls.delivery_time.value, 'm');\n        }\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id] ? this.form[order.location_id].controls.code.value : '',\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleting meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.space.email);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.space.email &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                [class.edited]=\"booking.edits.includes(order.id)\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('charge_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('catering_note|' + space.email)\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end * 1000).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done';\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { DeleteConfirmModalComponent } from '../delete-confirm-modal/delete-confirm-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nexport interface MeetingDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(booking: Booking) {\n        this._data.booking = booking;\n    }\n    /** Space to display booking details for */\n    public get space(): Space {\n        return this._data.space;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.approval_status[this.space.email]?.includes('decline') ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe((list) => {\n                const booking = list.find((bkn) => bkn.icaluid === this.booking.icaluid);\n                if (booking) {\n                    this.booking = booking;\n                }\n            })\n        );\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_email: this.space.email,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                this.booking.approval_status[this.space.email] = 'accepted';\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === this.booking.icaluid),\n                    1,\n                    this.booking\n                );\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'approved' });\n            }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: Math.floor(this.booking.date / 1000),\n                end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n                room_email: this.space.email,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.approval_status[this.booking.space.email] = 'declined';\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === this.booking.icaluid),\n                    1,\n                    this.booking\n                );\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'declined' });\n            }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking')\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => ref.close(), 3000);\n                }\n            })\n        );\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form: FormGroup) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking.toJSON(),\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = (await this._bookings\n            .save(booking)\n            .catch(this._on_error(`Error updating requirements`))) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            const bookings = this._bookings.booking_list.getValue();\n            bookings.splice(\n                bookings.findIndex((bkn) => bkn.icaluid === new_booking.icaluid),\n                1,\n                new_booking\n            );\n            this._bookings.booking_list.next(bookings);\n            this._service.notifySuccess('Successfully updated requirements');\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\" [class.edited]=\"booking.edits.includes('title')\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\" [space]=\"space\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements\n                [booking]=\"booking\"\n                [space]=\"space\"\n                (event)=\"updateRequirements($event)\"\n            ></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\" [space]=\"space\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\" [space]=\"space\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (click)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (click)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (click)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.space.email];\n        if (setup > 120) {\n            setup = Math.floor(setup / 60);\n        }\n        return setup ? humaniseDuration(setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.space.email];\n        if (breakdown > 120) {\n            breakdown = Math.floor(breakdown / 60);\n        }\n        return breakdown ? humaniseDuration(breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private' && note.space === this.space.email) || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                space: this.space,\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('setup|' + space.email)\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('breakdown|' + space.email)\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('private_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ space.name || booking.space_list[0]?.name }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('expected_attendees|' + space.email)\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_code|' + space.email)\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '&lt;No Charge Code&gt;'\n            }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"booking.edits.includes('equipment_note|' + space.email)\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button name=\"previous\" class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button name=\"next\" (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n    BookingCateringOrderDetailsComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent,\n        DeleteConfirmModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nexport interface PrivateDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this._data.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this._data.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this._data.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this._data.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this._data.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            const setup = { ...this.booking.setup };\n            setup[this._data.space.email] = value.setup * 60;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this._data.space.email] = value.breakdown * 60;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this._bookings.save(new_booking).then(\n                (booking) => {\n                    const bookings = this._bookings.booking_list.getValue();\n                    bookings.splice(bookings.findIndex(bkn => bkn.icaluid === booking.icaluid), 1, booking);\n                    this._bookings.booking_list.next(bookings);\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab *ngFor=\"let space of space_list\">\n                <ng-template mat-tab-label>\n                    <span [class.error]=\"form[space.email].invalid && form[space.email].touched\">\n                        {{\n                            space.name +\n                                (form[space.email].invalid && form[space.email].touched ? '*' : '')\n                        }}\n                    </span>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"next\" (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { sort } from 'src/app/services/data/spaces/space.utilities';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss'],\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = [];\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration,\n                });\n            }),\n            catchError((_) => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter(\n                    (item: any) =>\n                        (this.active_type && this.active_type.id ? item.zones.includes(`${this.active_type.id}`) : true) &&\n                        !selected.find((space) => space.id === item.id)\n                );\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.spaces = list;\n                this.spaces.sort((a, b) => sort(a, b, this._org.buildings));\n                this.update();\n            })\n        );\n        this.active_building = this._data.spaces?.length\n            ? this._org.buildings.find((i) => i.id === this._data.spaces[0].level.building_id)\n            : this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter((a_space) => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host,\n        };\n        this.selected_spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach((space) => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationService extends BaseClass {\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _snackbar: MatSnackBar,\n        private _analytics: HeapIoService,\n    ) {\n        super();\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first(_ => _)).subscribe(() => {\n            this._zone.run(() => {\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info'\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done'\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error'\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning'\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised.pipe(first(_ => _)).subscribe(() => {\n            this._initialised.next(true);\n        });\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading');\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading'\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete'\n        };\n        this.set('loading', loading);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe(event => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.settings?.room_name || raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list: T[] = this.get('list');\n        return list.filter(predicate);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list');\n        return list.find(\n            (i) => i.id === id || i.email?.toLowerCase() === id.toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = {}): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Old  start */\n    public readonly old_start: number;\n    /** Old end */\n    public readonly old_end: number;\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        if (this.all_day) {\n            this.date = dayjs(this.date).startOf('d').valueOf();\n        }\n        this.old_start = raw_data.old_start || dayjs(this.date).unix();\n        this.old_end =\n            raw_data.old_end ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).unix();\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        Object.keys(this.setup).forEach(\n            (key) => (this.setup[key] = Math.floor(this.setup[key] / 60))\n        );\n        Object.keys(this.breakdown).forEach(\n            (key) => (this.breakdown[key] = Math.floor(this.breakdown[key] / 60))\n        );\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status =\n            (raw_data.status instanceof Object ? raw_data.status : '') ||\n            raw_data.approval_status ||\n            {};\n        this.checked_in =\n            raw_data.checked_in || raw_data.checkins || Object.keys(raw_data.check_ins || {});\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                  flatten(\n                      Object.keys(raw_data.edits || {}).map((room) => {\n                          return flatten(Object.values(raw_data.edits[room]));\n                      })\n                  )\n              );\n        this.edits = edited_fields;\n        this.type = raw_data.booking_type || (this.has_visitors ? 'external' : null) || 'internal';\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').includes('decline')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].includes('tentative') ||\n                    this.approval_status[space.email].includes('decline'))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                this.approval_status[space.email].indexOf('tentative') >= 0\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            const json = this.toJSON();\n            return this._service.delete(this.id, {\n                concierge: true,\n                host: this.organiser.email,\n                room_id: this.space?.id,\n                icaluid: this.icaluid,\n                start: json.start,\n                end: json.end,\n            });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((_) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find((note) => note.type === 'equipment')) {\n            const eq_notes = data.notes.filter((note) => note.type === 'equipment');\n            for (const note of eq_notes) {\n                data.setup[note.space] = data.setup[note.space] || 15;\n                data.breakdown[note.space] = data.breakdown[note.space] || 15;\n            }\n        }\n        data.catering = data.catering.filter((order) => data.room_ids.includes(order.location_id));\n        if (data.catering && data.catering.length) {\n            for (const order of data.catering) {\n                data.setup[order.location_id] = data.setup[order.location_id] || 15;\n                data.breakdown[order.location_id] = data.breakdown[order.location_id] || 15;\n            }\n        }\n        Object.keys(data.setup).forEach((key) => (data.setup[key] = data.setup[key] * 60));\n        Object.keys(data.breakdown).forEach(\n            (key) => (data.breakdown[key] = data.breakdown[key] * 60)\n        );\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport {\n    humaniseDuration,\n    timeFormatString,\n    unique,\n} from '../../../shared/utilities/general.utilities';\n\nimport { Booking } from './booking.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    let time = dayjs().startOf('m');\n    time = time.minute(Math.ceil(time.minute() / 5) * 5);\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date, [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email, [Validators.required]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title, [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    let list_length = -1;\n    fields.space_list.valueChanges.subscribe((list) => {\n        const expected = fields.expected_attendees.value || {};\n        const matches = Object.keys(expected).filter((key) =>\n            list.find((space) => space.email === key)\n        ).length;\n        if (list && list.length && matches === 0) {\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach((note) => (note.space === key ? (note.space = list[0].email) : ''));\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n        list_length = list.length;\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.date.setValidators([Validators.required]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.date.setValidators([Validators.required, isFuture]);\n                simplified_fields.date.updateValueAndValidity();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            /* istanbul ignore else */\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(options.duration, condition[0])\n                    ) {\n                        matches++;\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (\n                        options.duration &&\n                        durationGreaterThanOrEqual(condition[0], options.duration)\n                    ) {\n                        matches++;\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || timePeriodsIntersect(date, date, slot.start, slot.end);\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: Booking[],\n    new_bookings: Booking[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = dayjs(filter_options.from);\n    const to = dayjs(filter_options.to);\n    const filtered_list = list.filter((booking) => {\n        const start = dayjs(booking.date);\n        const end = start.add(booking.duration, 'm');\n        return (\n            !booking.space_list.find((space) => space.email === filter_options.space) ||\n            !timePeriodsIntersect(from.valueOf(), to.valueOf(), start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'icaluid');\n}\n\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    const day1 = dayjs(start1);\n    const end_time1 = dayjs(end1);\n    const day2 = dayjs(start2);\n    const end_time2 = dayjs(end2);\n    return (\n        (day1.isAfter(day2, 'm') && day1.isBefore(end_time2)) ||\n        (end_time1.isAfter(day2, 'm') && end_time1.isBefore(end_time2)) ||\n        (day2.isAfter(day1, 'm') && day2.isBefore(end_time1)) ||\n        (end_time2.isAfter(day1, 'm') && end_time2.isBefore(end_time1))\n    );\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BookingCheckinParams } from './booking.interfaces';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    public readonly booking_list = new BehaviorSubject<Booking[]>([]);\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || 0;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!data.out_of_stock;\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location || '';\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** List of zones to determine sort order spaces */\n    public readonly sort_order: readonly string[];\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n\n    public readonly catering_hours: { readonly start: number, readonly end: number };\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.catering_hours = raw_data.catering_hours || disc_info.catering_hours || settings.catering_hours || { start: 7, end: 20 };\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n        this.sort_order = raw_data.sort_order || disc_info.sort_order || settings.sort_order || [];\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\n\nexport class Organisation extends BaseDataClass {\n    /** List of available building zone ids for the organisation */\n    public readonly available_buildings: readonly string[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n        this.available_buildings = (raw_data.settings?.discovery_info?.buildings || []).map(bld => bld.zone_id);\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 1000 });\n        const buildings = (bld_data as HashMap[])\n            .map((i) => new Building(i))\n            .filter((bld) => this._organisation.available_buildings.includes(bld.id));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true, limit: 1000 });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true, limit: 1000 });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    humaniseDuration,\n} from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n\n    constructor(raw_data: HashMap = {}) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unnamed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[] = []) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(\n                (key) => key.toLowerCase().includes('room') && key.toLowerCase().includes('email')\n            );\n            const price_field = fields.find((key) => key.toLowerCase().includes('price'));\n            const date_field = fields.find((key) => key.toLowerCase().includes('date'));\n            for (let row of data) {\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(\n                        (bld) => bld.id === room?.level?.building_id\n                    );\n                    row[price_field] = new CurrencyPipe('en_us').transform(\n                        row[price_field] / 100,\n                        bld?.currency\n                    );\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] =\n                        typeof row[field] === 'string'\n                            ? row[field].replace(/\\,/g, '٫')\n                            : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n            data = data.map((i: HashMap) => {\n                const booking = i;\n                try {\n                    if (booking.setup instanceof Object) {\n                        booking.setup = booking.setup[booking.room_email];\n                    }\n                    if (booking.breakdown instanceof Object) {\n                        booking.breakdown = booking.breakdown[booking.room_email];\n                    }\n                    booking.setup = humaniseDuration((booking.setup || 0) / 60);\n                    booking.breakdown = humaniseDuration((booking.breakdown || 0) / 60);\n                    booking.description = (booking.description || '')\n                        .replace(/<[^>]*>?/gm, '')\n                        .replace(/\\,/g, '٫')\n                        .replace(/\\r?\\n|\\r/g, ' ');\n                    booking['Meeting Host'] = booking.organizer?.name || booking.organizer;\n                    booking['Booked By'] =\n                        booking.booked_by?.name || booking.booked_by?.email || '';\n                    booking.charge_code = booking.equipment_codes\n                        ? Object.keys(booking.equipment_codes)\n                              .map((key) => booking.equipment_codes[key])\n                              .join('٫ ')\n                        : '';\n                    //    booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n                    booking.attendees = (booking.attendees || [])\n                        .map((person) => person.name || person.email || person)\n                        .join('٫ ');\n                    booking.start = dayjs(booking.start).format('DD MMM YYYY٫ h:mm A');\n                    booking.end = dayjs(booking.end).format('DD MMM YYYY٫ h:mm A');\n                    booking.notes = (booking.notes || [])\n                        .map((note) =>\n                            note.author && (note.type === 'description' || note.type === 'private')\n                                ? `[${note.author}|${note.type}]${note.message\n                                      .replace(/<[^>]*>?/gm, '')\n                                      .replace(/\\,/g, '٫')\n                                      .replace(/\\r?\\n|\\r/g, ' ')}`\n                                : ''\n                        )\n                        .join(' | ');\n                    booking.recurrence = formatRecurrence({\n                        start: booking.date,\n                        ...booking.recurr,\n                    });\n                } catch (e) {}\n                const remove_fields = [\n                    'id',\n                    'icaluid',\n                    'accepted_at',\n                    'accepted_by',\n                    'check_ins',\n                    'changeKey',\n                    'created',\n                    'booking_type',\n                    'edit_history',\n                    'end_epoch',\n                    'old_attendees',\n                    'start_epoch',\n                    'expected_attendees',\n                    'isAllDay',\n                    'isCancelled',\n                    'body',\n                    'is_free',\n                    'lastModifiedDateTime',\n                    'locationType',\n                    'locations',\n                    'organizer',\n                    'booked_by',\n                    'originalEndTimeZone',\n                    'originalStartTimeZone',\n                    'recurr',\n                    'room_booking_status',\n                    'room_email',\n                    'room_emails',\n                    'room_id',\n                    'sensitivity',\n                    'seriesMasterId',\n                    'show_as',\n                    'notes',\n                    'status',\n                    'subject',\n                    'type',\n                    'previous_booking',\n                    'catering',\n                    'responseStatus',\n                    'equipment_codes',\n                ];\n                for (const field of remove_fields) {\n                    if (booking[field] !== undefined) {\n                        delete booking[field];\n                    }\n                }\n                const output = {};\n                const order = [\n                    'title',\n                    'start',\n                    'end',\n                    'location',\n                    'Meeting Host',\n                    'Booked By',\n                    'all_day',\n                    'recurrence',\n                    'attendees',\n                    'description',\n                ];\n                const keys = Object.keys(booking);\n                keys.sort((a, b) => {\n                    const idx_a = order.indexOf(a);\n                    const idx_b = order.indexOf(b);\n                    return (\n                        (idx_a === -1 ? keys.length : idx_a) - (idx_b === -1 ? keys.length : idx_b)\n                    );\n                });\n                for (const key of keys) {\n                    output[key] = booking[key];\n                }\n                return output;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly HashMap[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => bkn.toJSON ? bkn.toJSON() : bkn);\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ISpaceAvailabilityOptions, Space } from './space.class';\n\nimport * as dayjs from 'dayjs';\nimport { predictableRandomInt } from 'src/app/shared/utilities/general.utilities';\nimport { Building } from '../organisation/building.class';\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n\n/**\n * Compare two spaces to determine order\n * @param first First space to compare\n * @param second Second space to compare\n */\nexport function sort(first: Space, second: Space, blds: Building[] = []) {\n    const bld = blds.find(bld => first.zones.includes(bld.id));\n    const bld_b = blds.find(bld => second.zones.includes(bld.id));\n    if (bld) {\n        if (bld !== bld_b) {\n            return (bld.name).localeCompare(bld_b?.name);\n        }\n        const sort_order = [...bld.sort_order].reverse();\n        for (const zone_id of sort_order) {\n            if (zone_id === '*') { continue; }\n            const a_has_zone = first.zones.indexOf(zone_id) >= 0;\n            const b_has_zone = second.zones.indexOf(zone_id) >= 0;\n            if (a_has_zone && !b_has_zone) {\n                return 1;\n            } else if (b_has_zone && !a_has_zone) {\n                return -1;\n            }\n        }\n    }\n    return first.name.localeCompare(second.name);\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public async query(query: HashMap = {}) {\n        const list = await super.query(query);\n        if (!Object.keys(query).length) {\n            this.set('list', list);\n        }\n        return list;\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { User } from './user.class';\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this.set('delegates', null);\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                async (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            async (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                await this.loadDelegates().catch(_ => null);\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        await this.loadDelegates().catch(_ => null);\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        /* istanbul ignore next */\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        /* istanbul ignore next */\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /* istanbul ignore next */\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        value = getItemWithKeys(keys, this._settings.api) ||\n            getItemWithKeys(keys, this._settings.session) ||\n            getItemWithKeys(keys, this._settings.local);\n        return value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (click)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (click)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Optional event emitter for changes */\n    @Output() public onChange = new EventEmitter();\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n            this.onChange.emit(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title), 1000);\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n    /** From date input for date field */\n    public from_date: number = dayjs().minute(Math.ceil(dayjs().minute() / 5) * 5).valueOf();\n\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" [from]=\"from_date\" formControlName=\"date\"></a-date-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [ngModel]=\"form.controls.date.value\"\n                (ngModelChange)=\"form.controls.date.setValue($event)\"\n                [ngModelOptions]=\"{ standalone: true }\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    name=\"all-day\"\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            name=\"catering\"\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n\n    transform(value: string, from: string = '_', to: string = ' '): string {\n        return (value|| '').split(from).join(to);\n    }\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        [id]=\"'link-' + (item.id || i)\"\n        class=\"item\"\n        *ngFor=\"let item of menu_items; let i = index\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseDirective } from '../../base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Currently active zone */\n    @Input() public zone: string;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = +localStorage.getItem('CONCIERGE.date');\n        /* istanbul ignore else */\n        if (date && date !== this.date) {\n            this.timeout(\n                'init',\n                () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                },\n                10\n            );\n        }\n        this.subscription(\n            'events',\n            this._bookings.booking_list.subscribe((list) => {\n                this.event_map = {};\n                let date = dayjs(this.date).startOf('M');\n                const end = date.endOf('M');\n                while (!date.isAfter(end, 'd')) {\n                    this.event_map[date.format('YYYY-MM-DD')] = list.filter(\n                        (booking) =>\n                            dayjs(booking.date).isSame(date, 'd') &&\n                            booking.space_list.find((space) => space.zones.includes(this.zone)) &&\n                            booking.tentative\n                    ).length;\n                    date = date.add(1, 'd');\n                }\n            })\n        );\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { unique, predictableRandomInt } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockBooking } from '../../utilities/spec-helpers';\nimport { MOCK_MENU } from './catering-menu.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(997)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(predictableRandomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organizer =\n        predictableRandomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[predictableRandomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(predictableRandomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[predictableRandomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(predictableRandomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[predictableRandomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organizer,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n            menu: MOCK_MENU\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][predictableRandomInt(3)];\n        }\n        return booking_data;\n    });\n\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organizer.email === user.email ||\n                      i.organizer === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organizer.email === event.query_params.email ||\n                      (i.organizer as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${predictableRandomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id/checkin`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                const booking: any = MOCK_BOOKINGS[index];\n                if (!booking.checkins) {\n                    booking.checkins = [];\n                }\n                booking.checkins = unique(event.body.attendees.map(i => i.email).concat(booking.checkins));\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id/concierge_decline`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                const booking: any = MOCK_BOOKINGS[index];\n                if (!booking.approval_status) {\n                    booking.approval_status = {};\n                }\n                booking.approval_status[event.body.room_email] = 'declined';\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].settings.discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MOCK_BUILDINGS } from './buildings.mock';\n\nexport const MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        console.log('Menu Event:', event, MOCK_MENU);\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${predictableRandomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            const zones = MOCK_BUILDINGS.map(i => i.zone_id);\n            for (const zone of zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            const zones = MOCK_BUILDINGS.map(i => i.zone_id);\n            for (const zone of zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                console.log('List:', MOCK_MENU[zone]);\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    break;\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${predictableRandomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            let found = false;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories?.length) {\n                    const parent = findItem(category.parent_categories[0], MOCK_MENU[zone]);\n                    if (parent) {\n                       (parent.items as any).push(category);\n                       found = true;\n                       break;\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                        break;\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                    break;\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findItem(id: string, list: CateringCategory[] = []): CateringCategory {\n    for (const category of list) {\n        if (category.id === id) {\n            return category;\n        } else {\n            const item = findItem(id, category.items as any);\n            if (item) {\n                return item;\n            }\n        }\n    }\n    return null;\n}\nfunction findParent(id: string, list: CateringCategory[] = []): CateringCategory {\n    for (const category of list) {\n        const found = category.items?.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from '../../utilities/spec-helpers';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || predictableRandomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","\nexport const MOCK_ORG = [\n    {\n        settings: {\n            send_acceptance: true,\n            discovery_info: {\n                buildings: [],\n            },\n        },\n    },\n];\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { MOCK_BOOKINGS } from './bookings.mock';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/reports/bookings`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        const start = dayjs(+event.query_params.start_date * 1000).startOf('d');\n        const end = dayjs(+event.query_params.end_date * 1000).endOf('d');\n        const bookings = MOCK_BOOKINGS.filter((bkn: any) => {\n            return timePeriodsIntersect(\n                bkn.start_epoch * 1000 || bkn.date,\n                bkn.end_epoch * 1000 || bkn.date,\n                start.valueOf(),\n                end.valueOf()\n            );\n        });\n        console.log('Bookings:', start.format('DD MMM YYYY'), end.format('DD MMM YYYY'), bookings);\n        return bookings.map(bkn => ({ ...bkn, start: bkn.start_epoch * 1000, end: bkn.end_epoch * 1000 }));\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/reports/catering`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        const start = dayjs(+event.query_params.start_date * 1000).startOf('d');\n        const end = dayjs(+event.query_params.end_date * 1000).endOf('d');\n        console.log('Event:', event);\n        const bookings = MOCK_BOOKINGS.filter((bkn: any) => {\n            return timePeriodsIntersect(\n                bkn.start_epoch * 1000 || bkn.date,\n                bkn.end_epoch * 1000 || bkn.date,\n                start.valueOf(),\n                end.valueOf()\n            );\n        });\n        console.log('Bookings:', start.format('DD MMM YYYY'), end.format('DD MMM YYYY'), bookings);\n        let catering = [];\n        for (const booking of bookings) {\n            catering = catering.concat([...booking.catering]);\n        }\n        return catering.map((order) => ({\n            delivery_time: dayjs(order.booking_date)\n                .add(order.delivery_time, 'm')\n                .format('DD MMM YYYY, h:mm A'),\n            location_id: order.location_id,\n            items: order.items.map((i) => i.name),\n        }));\n    },\n} as MockHttpRequestHandler);\n","\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\nimport { generateMockSpace } from '../../utilities/spec-helpers';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { API } from './common.mock';\nimport { generateMockUser } from '../../utilities/spec-helpers';\nimport { predictableRandomInt } from '../../utilities/general.utilities';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(predictableRandomInt(300) + 100).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(predictableRandomInt(300) + 100).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\nimport './api/reports.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport * as dayjs from 'dayjs';\nimport { setMockBookingStartDatetime, generateMockSpace } from '../utilities/spec-helpers';\nimport { predictableRandomInt } from '../utilities/general.utilities';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[predictableRandomInt(IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\nimport { ReplacePipe } from './components/replace.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES,\n        ReplacePipe\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        ReplacePipe\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = filter.toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString(\n        document.querySelector('html').getAttribute('lang') || navigator.language\n    ).toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9E3779B9, 0x243F6A88, 0xB7E15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\n        h = h << 13 | h >>> 19;\n    return function() {\n        h = Math.imul(h ^ h >>> 16, 2246822507);\n        h = Math.imul(h ^ h >>> 13, 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    }\n}\n\nfunction sfc32(a, b, c, d) {\n    return function() {\n      a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;\n      var t = (a + b) | 0;\n      a = b ^ b >>> 9;\n      b = c + (c << 3) | 0;\n      c = (c << 21 | c >>> 11);\n      d = d + 1 | 0;\n      t = t + d | 0;\n      c = c + t | 0;\n      return (t >>> 0) / 4294967296;\n    }\n}\n","import { of, BehaviorSubject } from 'rxjs';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Organisation } from 'src/app/services/data/organisation/organisation.class';\nimport { BaseDataClass } from 'src/app/services/data/base-api.class';\nimport { MapLocation } from 'src/app/services/data/location/location.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ServiceManager } from 'src/app/services/data/service-manager.class';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { HashMap } from './types.utilities';\nimport { predictableRandomInt, padZero, unique } from './general.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SERVICE: any;\n\ndeclare global {\n    interface Jest { fn: () => any }\n};\n\ndeclare let jest: Jest;\n\n/* istanbul ignore file */\n\n/**\n * Generate a mocked version of the application service\n */\nexport function generateMockAppService() {\n    SERVICE = {\n        setting: jest.fn(),\n        notify: jest.fn(),\n        notifyInfo: jest.fn(),\n        notifyWarn: jest.fn(),\n        notifySuccess: jest.fn(),\n        notifyError: jest.fn(),\n        log: jest.fn(),\n        navigate: jest.fn(),\n        navigateBack: jest.fn(),\n        get: jest.fn(),\n        listen: jest.fn(),\n        set: jest.fn(),\n        Composer: { auth: { token: 'test' } },\n        Hotkeys: { listen: jest.fn() },\n        Users: generateMockDataService('UsersService'),\n        Organisation: {\n            levelWithID: jest.fn(),\n            listen: jest.fn(),\n            initialised: of(true),\n            building: new Building(generateMockBuilding({ id: 'bld-01' }))\n        },\n        Locations: generateMockDataService('LocationsService'),\n        Base: generateMockDataService('BaseService'),\n        Menu: generateMockDataService('CateringMenuService'),\n        Spaces: generateMockDataService('SpacesService'),\n        Bookings: generateMockDataService('BookingsService'),\n        Reports: generateMockDataService('ReportsService'),\n        CateringItems: generateMockDataService('CateringItemsService'),\n        CateringCategories: generateMockDataService('CateringCategoriesService'),\n        initialised: of(true)\n    };\n    ServiceManager.setService(BaseDataClass, SERVICE.Base);\n    ServiceManager.setService(Organisation, SERVICE.Organisation);\n    ServiceManager.setService(Building, SERVICE.Organisation);\n    ServiceManager.setService(User, SERVICE.Users);\n    ServiceManager.setService(Booking, SERVICE.Bookings);\n    ServiceManager.setService(Space, SERVICE.Spaces);\n    ServiceManager.setService(MapLocation, SERVICE.Locations);\n    ServiceManager.setService(Report, SERVICE.Reports);\n    ServiceManager.setService(CateringItem, SERVICE.CateringItems);\n    ServiceManager.setService(CateringCategory, SERVICE.CateringCategories);\n    SERVICE.Organisation.buildings = [SERVICE.Organisation.building];\n    SERVICE.Users.current = new User(generateMockUser());\n    SERVICE.Users.initialised = of(true);\n    SERVICE.Bookings.booking_list = new BehaviorSubject(new Array(10).fill(0).map(_ => new Booking(generateMockBooking())));\n    SERVICE.listen.mockReturnValue(of(null, []));\n    return SERVICE;\n}\n\nexport function generateMockDataService(name: string) {\n    const service = {\n        find: jest.fn(),\n        filter: jest.fn(),\n        listen: jest.fn(),\n        get: jest.fn(),\n        set: jest.fn(),\n        setting: jest.fn(),\n        query: jest.fn(),\n        show: jest.fn(),\n        add: jest.fn(),\n        save: jest.fn(),\n        remove: jest.fn(),\n        delete: jest.fn(),\n        update: jest.fn(),\n        addFrom: jest.fn(),\n        removeFrom: jest.fn(),\n        task: jest.fn(),\n        available: jest.fn(),\n        process: jest.fn(),\n        updateList: jest.fn(),\n        clearList: jest.fn(),\n        removeFromList: jest.fn(),\n        accept: jest.fn(),\n        decline: jest.fn(),\n        checkin: jest.fn(),\n        is_logged_in: false,\n        initialised: of(true),\n        name\n    };\n    service.save.mockImplementation(_ => Promise.resolve(new Booking(_)));\n    service.listen.mockReturnValue(of(null));\n    service.filter.mockReturnValue([]);\n    return service;\n}\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(predictableRandomInt(99999)) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(predictableRandomInt(20) + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        controlable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        bookable: Math.floor(predictableRandomInt(99999)) % 2 === 0,\n        cost_hour: Math.floor(predictableRandomInt(300)) * 100,\n        setup: Math.floor(predictableRandomInt(6)) * 5,\n        breakdown: Math.floor(predictableRandomInt(6)) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(predictableRandomInt(SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4) + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(predictableRandomInt(4) + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(predictableRandomInt(4)) * 15, 'm');\n    const organizer = generateMockUser({ external: false, visitor: false });\n    const orders = Array(Math.floor(predictableRandomInt(5)))\n    .fill(0)\n    .map(_ => generateMockCateringOrder({ booking_date: start }, override.room_ids, override.menu))\n    return {\n        id,\n        icaluid: padZero(Math.floor(predictableRandomInt(99999999)), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(predictableRandomInt(5) + 2))\n            .fill(0)\n            .map((_, i) => i === 0 ? organizer : generateMockUser(override.users)),\n        organizer,\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(predictableRandomInt(34567)) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][predictableRandomInt(5)],\n        setup: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (predictableRandomInt(12) - 6) * 5) },\n        status: {},\n        catering: orders,\n        room_ids: [],\n        ...override,\n    };\n}\n\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(overrides: HashMap = {}): HashMap {\n    const id = `zone_bld-${BLD_COUNT++}`;\n    const levels = Array(10)\n        .fill(0)\n        .map(i => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(predictableRandomInt(3) + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][faker.commerce.productName()] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map(i => {\n                const name = faker.commerce.productName();\n                return {\n                    extra_id: name\n                        .split(' ')\n                        .join('-')\n                        .toLowerCase(),\n                    extra_name: name\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map(i => generateMockUser())\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false\n                }\n            }\n        },\n        ...overrides\n    };\n}\n\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): HashMap {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url\n    };\n}\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'place.tech';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !(predictableRandomInt(99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(predictableRandomInt(4) + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(predictableRandomInt(USER_EMAILS.length))]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(predictableRandomInt(99999)), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\nexport function generateMockCateringOrder(overrides: HashMap = {}, room_ids: string[] = [], menu: HashMap<HashMap[]> = {}) {\n    return {\n        id: `order-${predictableRandomInt(9999_9999)}`,\n        delivery_time: predictableRandomInt(6) * 5,\n        location_id: room_ids[predictableRandomInt(room_ids.length)],\n        items: new Array(predictableRandomInt(5, 1)).fill(0).map(i => pickMenuItem(menu)),\n        ...overrides\n    }\n}\n\nfunction pickMenuItem(menu_map: HashMap<HashMap[]> = {}) {\n    const zones = Object.keys(menu_map);\n    const menu = menu_map[zones[predictableRandomInt(zones.length)]] || [];\n    const category = menu[predictableRandomInt(menu.length)] || { items: [] };\n    const group = { ...(category.items[predictableRandomInt(category.items.length)] || {}) };\n    if (!group.package && group.items?.length) {\n        const item = { ...group.items[predictableRandomInt(group.items.length)] };\n        item.amount = predictableRandomInt(5, 1);\n        return item;\n    }\n    group.amount = predictableRandomInt(5, 1);\n    return group;\n}\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = predictableRandomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[predictableRandomInt(fixed_locations.length)],\n            level: maps[predictableRandomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: predictableRandomInt(900, 100),\n            x_max: 1000,\n            y: predictableRandomInt(500, 100),\n            level: maps[predictableRandomInt(maps.length)],\n            confidence: predictableRandomInt(30),\n            ...overrides\n        }\n    }\n}\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): HashMap {\n    const buildings = Array(3).fill(0).map(i => generateMockBuilding());\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings,\n        settings: {\n            discovery_info: {\n                buildings\n            },\n            test: {\n                nested: {\n                    org: true\n                }\n            }\n        }\n    };\n}\n\n\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.category = 0;\n            this._service.title = 'Catering';\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    if (params.has('page')) {\n                        this.page = params.get('page');\n                    }\n                })\n            );\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id },\n                    });\n                })\n            );\n        });\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" name=\"add-category\" (click)=\"category = category + 1\">Add Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" name=\"add-package\" (click)=\"package = package + 1\">Add Sub-Category/Package</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" name=\"menu\" mat-button [routerLink]=\"['/catering', 'menu']\" [preserveQueryParams]=\"true\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" name=\"orders\" mat-button [routerLink]=\"['/catering', 'orders']\" [preserveQueryParams]=\"true\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { SharedOverlaysModule } from 'src/app/overlays/overlays.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        SharedOverlaysModule\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(group, event.metadata);\n                }\n            })\n        );\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(item, event.metadata);\n                }\n            })\n        );\n    }\n\n    private updateItemList(old_item: CateringItem | CateringCategory, new_item: HashMap) {\n        const item =\n            old_item instanceof CateringCategory\n                ? new CateringCategory(new_item)\n                : new CateringItem(new_item);\n        if (old_item.id) {\n            const index = this.parent.items.findIndex((itm) => itm.id === old_item.id);\n            (this.parent.items as any[]).splice(index, 1, item);\n            (this.parent as any).items = [...this.parent.items];\n        } else {\n            (this.item.items as any[]).push(item);\n        }\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringCategory\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item instanceof CateringCategory\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                }\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" *ngIf=\"!subitem\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (click)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'Item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'Item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach((item) => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === updated_booking.icaluid),\n                    1,\n                    updated_booking\n                );\n                this._bookings.booking_list.next(bookings);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking,\n            },\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport {\n    replaceBookings,\n    timePeriodsIntersect,\n} from 'src/app/services/data/bookings/booking.utilities';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<any[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.available_spaces = this._spaces\n                        .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                        .map((i) => i.email);\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.updateOrders();\n                })\n            );\n            this.available_spaces = this._spaces\n                .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                .map((i) => i.email);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                const date = dayjs(this.date).startOf('d');\n                const end = date.endOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                space_list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                            space: space.email,\n                            from: date.valueOf(),\n                            to: end.valueOf(),\n                        }))\n                );\n                this._bookings.booking_list.next(bookings);\n                return space_list;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((_) => (this.loading = false))\n        );\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe((_) => this.updateOrders())\n        );\n    }\n\n    private updateOrders() {\n        const bookings = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const relevant_bookings = bookings.filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.catering.length &&\n                booking.space_list.find((space) =>\n                    this.available_spaces.find((email) => email === space.email)\n                ) &&\n                timePeriodsIntersect(\n                    date.startOf('d').valueOf(),\n                    date.endOf('d').valueOf(),\n                    start.valueOf(),\n                    end.valueOf()\n                )\n            );\n        });\n        let orders: CateringOrder[] = [];\n        relevant_bookings.forEach((booking, i) => {\n            const catering = booking.catering;\n            catering.forEach((order) => {\n                (order as any).booking_date = booking.date;\n                order.booking = booking;\n            });\n            orders = orders.concat(booking.catering);\n        });\n        orders = unique(orders, 'id');\n        orders = orders.filter((order) => this.available_spaces.indexOf(order.location_id) >= 0);\n        orders.sort(\n            (a, b) =>\n                a.booking_date +\n                a.delivery_time * 60 * 1000 -\n                (b.booking_date + b.delivery_time * 60 * 1000)\n        );\n        this.loading = false;\n        this.orders = orders;\n        this.filtered_orders = this.filter(orders, this.search);\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const category = new CateringCategory(this.category);\n            const data = { ...category.toJSON(), ...this.form.value };\n            const request = category.id\n                ? this._menu_categories.update(category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" name=\"delete\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n        { id: 'none', name: 'Other' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = {\n                ...(this.category instanceof CateringCategory\n                    ? this.category.toJSON()\n                    : this.category),\n                ...this.form.value,\n                parent_categories: [this.parent.id],\n            };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: new CateringCategory(item) });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox name=\"package\" formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + 'Description'\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id]),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({\n                ...(this.item instanceof CateringItem ? this.item.toJSON() : this.item),\n                ...this.form.value,\n            }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button name=\"delete\" *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button name=\"save\" [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Email of the order space */\n    @Input() public space: string;\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[space] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    name=\"view-meeting\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return (this.order.items as any);\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService) {\n        setTimeout(() => console.log('Order:', this.order), 300);\n    }\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking.toJSON(), catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"order && items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <ng-container *ngFor=\"let sub_item of item.items\">\n                    <div class=\"sub-item\" *ngIf=\"sub_item.amount || sub_item.items\">\n                        <div class=\"name\">{{ sub_item.name }}</div>\n                        <ng-container *ngIf=\"sub_item.items\">\n                            <ng-container *ngFor=\"let sub_sub_item of sub_item.items\">\n                                <div class=\"sub-item\" *ngIf=\"sub_sub_item.amount\">\n                                    <div class=\"name\">{{ sub_sub_item.name }}</div>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [date]=\"booking.date\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" name=\"edit\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.email,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking.toJSON(), notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await this._bookings.save(pending_booking).catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === new_booking.icaluid), 1, new_booking);\n                this._bookings.booking_list.next(bookings);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking: any = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === updated_booking.icaluid), 1, updated_booking);\n                this._bookings.booking_list.next(bookings);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [space]=\"order.location_id\" [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        // const now = dayjs().startOf('d');\n        // const date = dayjs(this.date).startOf('d');\n        // if (now.isSame(date, 'd')) {\n            return 'Today';\n        // } else if (date.diff(now, 'd') === 1) {\n        //     return 'Tomorrow';\n        // } else if (now.diff(date, 'd') === 1) {\n        //     return 'Yesterday';\n        // }\n        // return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) => space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.email);\n        this.updateEvents();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n        this.subscription(\n            'update',\n            this._bookings.booking_list.subscribe((_) => this.updateEvents())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.updateEvents();\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Update list of events pending approval\n     */\n    private updateEvents() {\n        const list = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const events = list.filter(\n            (booking) =>\n                dayjs(booking.date).isSame(date, 'd') &&\n                booking.tentative &&\n                this.space_list.find((space) => space === booking.space.email)\n        );\n        events.sort((a, b) => a.date - b.date);\n        this.events = [];\n        events.forEach((event) => {\n            const json = event.toJSON();\n            for (const space of event.space_list) {\n                if (event.approval_status[space.email].includes('tentative')) {\n                    this.events.push(\n                        new Booking({ ...json, room_ids: [space.email, ...json.room_ids.filter(id => id !== space.email)] })\n                    );\n                }\n            }\n        });\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        // if (now.isAfter(end, 'm')) {\n        //     return;\n        // } else if (now.isAfter(start, 'm')) {\n        //     start = now;\n        // }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((spaces) => {\n                let bookings = this._bookings.booking_list.getValue();\n                spaces.forEach((space) => {\n                    bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                        space: space.email,\n                        from: start.valueOf(),\n                        to: end.valueOf(),\n                    });\n                });\n                this._bookings.booking_list.next(bookings);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return this.event.organiser.name;\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.email === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        space: this.event.space,\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_email: this.event.space?.email,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            this.event.approval_status[this.event.space?.email] = 'accepted';\n                            STATES[this.event.id] = 'accepted';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_email: booking.space.email,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.email] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (click)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (click)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field limit-height\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field limit-height\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (click)=\"accept()\"\n        >\n            Accept\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (click)=\"decline()\"\n        >\n            Decline\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: HashMap<boolean> = {};\n    /** List of legend keys to show */\n    public legend_list: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Day View';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend_list = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend(mobile: boolean = false) {\n        if (mobile) {\n            this.legend_list = this.legend_keys.reduce((list, key) => {\n                if (key.active) list.push(key.id)\n                return list;\n            }, []);\n        }\n        this.legend = this.legend_keys.reduce((map, key) => {\n            map[key.id] = this.legend_list.includes(`${key.id}`);\n            return map;\n        }, {});\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button class=\"not-desktop\" [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend_list\"\n                        (ngModelChange)=\"updateLegend()\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    name=\"overflow\"\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_listing\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_listing=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend(true)\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: Booking;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space associated with the event */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public get local_id(): string {\n        return this.event.icaluid.substr(0, 6);\n    }\n\n    /** Whether booking is approved for the event in the displayed space */\n    public get approved(): boolean {\n        return this.event.approved || this.event.approval_status[this.space.email].includes('accepted');\n    }\n\n    /** Whether booking is declined for the event in the displayed space */\n    public get declined(): boolean {\n        return !this.approved && this.event.approval_status[this.space.email].includes('decline');\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (!this.event || this.event.approval_status[this.space.email]?.includes('decline')) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.email] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                space: this.space,\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.event.setup[this.space.email]\n                    ? this.event.setup[this.space.email] / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown[this.space.email]\n                    ? this.event.breakdown[this.space.email] / duration\n                    : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (declined || approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (click)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { IEventOverlap } from './event/event.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** List of bookings for the current date and space */\n    public event_list: Booking[] = [];\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.event_list;\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return (\n                    (!this.overflow_only ||\n                        event.setup[event.space.email] ||\n                        event.breakdown[event.space.email]) &&\n                    ((!!event.declined && this.legend.declined !== false) ||\n                        (!event.declined && this.legend[event.has_visitors ? 'external' : event.type] !== false))\n                );\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => (this.overflow_only = state))\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.booking_list.subscribe(() => this.updateEvents())\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        if (changes.space || changes.date || changes.legend) {\n            this.updateEvents();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    private updateEvents() {\n        this.timeout('update_events', () => {\n            const date = dayjs(this.date);\n            const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n                const start = dayjs(booking.date);\n                const end = start.add(booking.duration, 'm');\n                return (\n                    booking.space_list.find((space) => space.email === this.space.email) &&\n                    (start.isSame(date, 'd') ||\n                        end.isSame(date, 'd') ||\n                        (date.isAfter(start, 'd') && date.isBefore(end, 'd')))\n                );\n            });\n            this.event_list = bookings;\n            this.checkInView();\n        });\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking.toJSON(),\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this._bookings.save(new_booking).then(\n                            (bkn: Booking) => {\n                                resolve(bkn);\n                                const bookings = this._bookings.booking_list.getValue();\n                                bookings.splice(\n                                    bookings.findIndex((bkn) => bkn.icaluid === bkn.icaluid),\n                                    1,\n                                    bkn\n                                );\n                                this._bookings.booking_list.next(bookings);\n                            },\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 10;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    public space_zones: string[] = [];\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        this.timeout('update', () => {\n            const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n            if (visible_rooms.length) {\n                visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n                const time = dayjs(this.date).startOf('d');\n                const end = time.endOf('d');\n                const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n                const zone_ids = [this.level || this._org.building.id];\n                /* istanbul ignore else */\n                if (this.space_type) {\n                    zone_ids.push(this.space_type);\n                }\n                this.loading = true;\n                this._spaces\n                    .query({\n                        zone_ids: zone_ids.join(','),\n                        available_from: time.unix(),\n                        available_to: end.unix(),\n                    })\n                    .then(\n                        (room_list) => {\n                            let bookings = this._bookings.booking_list.getValue();\n                            room_list.forEach(\n                                (space) =>\n                                    (bookings = replaceBookings(bookings, space.bookings.map(bkn => new Booking(bkn)), {\n                                        space: space.email,\n                                        from: time.valueOf(),\n                                        to: end.valueOf()\n                                    }))\n                            );\n                            this._bookings.booking_list.next(bookings);\n                            this.last_update = dayjs().valueOf();\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        },\n                        () => {\n                            delete this.loading_space;\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        }\n                    );\n            } else {\n                this.timeout(\n                    'update_bookings',\n                    () => this.updateBookings(),\n                    UPDATE_INTERVAL * 1000\n                );\n            }\n        });\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                space: booking.space,\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && booking.space && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#space-col-${booking.space.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const date_percent = Math.abs(dayjs(booking.date).diff(dayjs(booking.date).startOf('d'), 'm')) / (24 * 60);\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft - 10,\n                    top: this.scroll_area.nativeElement.scrollHeight * date_percent - 10,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n        this.space_zones = this.spaces.map((i) => `space-col-${i.id}`)\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div class=\"space-header\" *ngFor=\"let item of filtered_spaces\" [title]=\"item.name\">\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_holding_bay ? 'close' : 'list'\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (click)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)'\n                    | safe: 'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n    /** Multiple Locations? */\n    public multipleLocations: boolean = false;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService,\n        private _router: Router,\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n        if (this.locations.length > 1){\n            this.locations = [this.locations[0]];\n        }\n    }\n\n    /**\n     * Ensure Space Time Continuum\n     */\n    public checkDates(new_date: number){\n        if(this.start_date > this.end_date){\n            this.start_date = dayjs(new_date).startOf('d').valueOf();\n            this.end_date = dayjs(new_date).endOf('d').valueOf();\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date / 10\"\n                [to]=\"start_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <!-- Single Location Select -->\n            <mat-select *ngIf='!report.multi_locations' name=\"locations\" [(ngModel)]=\"locations[0]\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <!-- Multi Location Select - Could be wrapped to make directives conditional -->     \n            <mat-select *ngIf='report.multi_locations' name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key | replace }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n    /** Multiselect Locations */\n    multi_locations: boolean;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: false,\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Reports';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select name=\"report-type\" [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    [name]=\"report.id + '-report'\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n        <feedback></feedback>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true, email: '' }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const attendees = this.form.controls.attendees.value;\n                for (const attendee of attendees) {\n                    if (!attendee.email) {\n                        attendee.email = `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`;\n                    }\n                }\n                const new_booking = new Booking({ ...this.booking.toJSON(), ...this.form.value });\n                this._bookings.save(new_booking).then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        const bookings = this._bookings.booking_list.getValue();\n                        bookings.splice(bookings.findIndex(bkn => bkn.icaluid === bkn.icaluid), 1, bkn);\n                        this._bookings.booking_list.next(bookings);\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (click)=\"save()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n    /** Whether all attendees are being checked in */\n    public loading: boolean;\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        return this.event.status === 'upcoming' || this.event.status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _dialog: MatDialog) {}\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checked_in;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: unique(this.event.attendees.map(user => ({ name: user.name, email: user.email }))),\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in all attendees for booking. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: unique([...this.event.checked_in, ...this.event.attendees.map(user => user.email)]),\n            });\n        }\n        this.loading = false;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees.filter(user => !user.email.includes('@guest'))\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a mat-icon-button matTooltip=\"Email Attendees\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\" (click)=\"checkin()\">\n                <action-icon\n                [loading]=\"loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (click)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (click)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport {\n    replaceBookings,\n    timePeriodsIntersect,\n} from 'src/app/services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex((bkn) => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org\n                    .listen('active_building')\n                    .subscribe((_) => this.search$.next(`${this.date}|${_.id}`))\n            );\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.booking_list.subscribe(() => this.updateEvents())\n            );\n            this.updateEvents();\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, booking: Booking) {\n        return booking.id;\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings\n            .filter((booking) => {\n                return booking.attendees.find(\n                    (user) =>\n                        user.name.toLowerCase().indexOf(search) >= 0 ||\n                        user.email.toLowerCase().indexOf(search) >= 0\n                );\n            })\n            .filter((bkn) => (this.show_all ? true : bkn.has_visitors));\n    }\n\n    private updateEvents() {\n        const date = dayjs(this.date).startOf('d');\n        const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return timePeriodsIntersect(\n                date.valueOf(),\n                date.endOf('d').valueOf(),\n                start.valueOf(),\n                end.valueOf()\n            );\n        })\n        .filter((bkn) =>\n            !bkn.declined && bkn.space_list.find((space) => space.zones.includes(this._org.building.id))\n        );\n        this.bookings = bookings.map((bkn) => {\n            const data = bkn.toJSON();\n            const space =\n                bkn.space_list.find((space) => space.zones.includes(this._org.building.id)) ||\n                bkn.space;\n            return new Booking({\n                ...data,\n                room_ids: [space.email].concat(bkn.space_list.map((space) => space.email)),\n            });\n        });\n        this.filtered_bookings = this.filter(this.search);\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                this.updateEvents();\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((list: Space[]) => {\n                const date = dayjs(this.date).startOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(\n                            bookings,\n                            space.bookings.map((bkn) => new Booking(bkn)),\n                            {\n                                space: space.email,\n                                from: date.valueOf(),\n                                to: date.endOf('d').valueOf(),\n                            }\n                        ))\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                this._bookings.booking_list.next(bookings);\n                this.updateEvents();\n                return bookings;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((_) => (this.loading = false))\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === -1\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container\n                *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\"\n            >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === i\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.status === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checked_in.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: [{ name: this.person.name, email: this.person.email }],\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in user. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: [...this.event.checked_in, this.person.email],\n            });\n        }\n        this.loading = false;\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a\n            mat-icon-button\n            [matTooltip]=\"!person.external ? 'Email Staff Member' : 'Email Visitor'\"\n            [disabled]=\"invalid_email\"\n            [href]=\"mail_url | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            name=\"checkin\"\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading || !person.external\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Visitors';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription(\n                'route.query_params',\n                this._route.queryParamMap.subscribe((params) => {\n                    if (params.has('zone') && params.get('zone') !== this._org.building.id) {\n                        const id = params.get('zone');\n                        const bld = this._org.buildings.find((building) => building.id === id);\n                        if (bld) {\n                            this._org.building = bld;\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building')?.subscribe(() => {\n                    this._router.navigate([], {\n                        relativeTo: this._route,\n                        queryParams: { zone: this._org.building.id },\n                    });\n                })\n            );\n        })\n    }\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                name=\"show-all\"\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { timePeriodsIntersect } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss'],\n})\nexport class WeekViewDayDisplayComponent extends BaseDirective implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    constructor(private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe(() => this.updateEvents())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateEvents();\n        }\n    }\n\n    private updateEvents() {\n        const date = dayjs(this.date).startOf('d');\n        const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.space_list.find((space) =>\n                    this.spaces.find((a_space) => a_space.email === space.email)\n                ) &&\n                timePeriodsIntersect(\n                    date.valueOf(),\n                    date.endOf('d').valueOf(),\n                    start.valueOf(),\n                    end.valueOf()\n                )\n            );\n        });\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: this.event.space,\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.initBookings();\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n            this.interval(\n                'update_booking',\n                () =>\n                    this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n                30 * 1000\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                const date = dayjs(this.date).startOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(\n                            bookings,\n                            space.bookings.map((bkn) => new Booking(bkn)),\n                            {\n                                space: space.email,\n                                from: date.valueOf(),\n                                to: date.endOf('d').valueOf(),\n                            }\n                        ))\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                this._bookings.booking_list.next(bookings);\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Week View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    name=\"weekends\"\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"250fd37\",\n    \"hash\": \"250fd37\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"250fd37\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1598350479165\n};\n/* tslint:enable */\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}