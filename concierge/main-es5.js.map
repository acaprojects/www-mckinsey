{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.ts","webpack:///src/app/overlays/booking-confirm/booking-confirm.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/catering/catering.component.ts","webpack:///src/app/overlays/booking-modal/catering/catering.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/category/category.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-details/order-details.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/item/item.component.html","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.ts","webpack:///src/app/overlays/booking-modal/catering/order-list/order-list.component.html","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.ts","webpack:///src/app/overlays/booking-modal/find-space/filters/filters.component.html","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.ts","webpack:///src/app/overlays/booking-modal/find-space/find-space.component.html","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.ts","webpack:///src/app/overlays/booking-modal/find-space/item/item.component.html","webpack:///src/app/overlays/booking-modal/form/form.component.ts","webpack:///src/app/overlays/booking-modal/form/form.component.html","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.ts","webpack:///src/app/overlays/catering-confirm-modal/catering-confirm-modal.component.html","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.ts","webpack:///src/app/overlays/catering-details-modal/catering-details-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.ts","webpack:///src/app/overlays/delete-confirm-modal/delete-confirm-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.ts","webpack:///src/app/overlays/meeting-details-modal/catering/catering.component.html","webpack:///src/app/overlays/meeting-details-modal/details/details.component.ts","webpack:///src/app/overlays/meeting-details-modal/details/details.component.html","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.ts","webpack:///src/app/overlays/meeting-details-modal/meeting-details-modal.component.html","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.ts","webpack:///src/app/overlays/meeting-details-modal/private-details/private-details.component.html","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.ts","webpack:///src/app/overlays/meeting-details-modal/requirements/requirements.component.html","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.ts","webpack:///src/app/overlays/new-user-modal/new-user-modal.component.html","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.ts","webpack:///src/app/overlays/package-options-modal/package-options-modal.component.html","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.ts","webpack:///src/app/overlays/private-details-modal/private-details-modal.component.html","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.ts","webpack:///src/app/overlays/recurrence-modal/recurrence-modal.component.html","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.ts","webpack:///src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component.html","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.ts","webpack:///src/app/overlays/requirement-details-modal/requirement-details-modal.component.html","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.ts","webpack:///src/app/overlays/space-select-modal/space-select-modal.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/catering/catering-categories.service.ts","webpack:///src/app/services/data/catering/catering-category.class.ts","webpack:///src/app/services/data/catering/catering-item.class.ts","webpack:///src/app/services/data/catering/catering-items.service.ts","webpack:///src/app/services/data/catering/catering-menu.service.ts","webpack:///src/app/services/data/catering/catering-order.class.ts","webpack:///src/app/services/data/location/location.class.ts","webpack:///src/app/services/data/location/location.utilities.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/level.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/reports/report.class.ts","webpack:///src/app/services/data/reports/reports.service.ts","webpack:///src/app/services/data/service-manager.class.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.directive.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.ts","webpack:///src/app/shared/components/action-icon/action-icon.component.html","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.ts","webpack:///src/app/shared/components/custom-fields/action-field/action-field.component.html","webpack:///src/app/shared/components/custom-fields/counter/counter.component.ts","webpack:///src/app/shared/components/custom-fields/counter/counter.component.html","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.ts","webpack:///src/app/shared/components/custom-fields/date-field/date-field.component.html","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/custom-fields/duration-field/duration-field.component.html","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.ts","webpack:///src/app/shared/components/custom-fields/time-field/time-field.component.html","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-list-field/user-list-field.component.html","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/components/custom-fields/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/feedback/feedback.component.ts","webpack:///src/app/shared/components/feedback/feedback.component.html","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.ts","webpack:///src/app/shared/components/forms/booking-form/booking-form.component.html","webpack:///src/app/shared/components/forms/user-form/user-form.component.ts","webpack:///src/app/shared/components/forms/user-form/user-form.component.html","webpack:///src/app/shared/components/icon/icon.component.ts","webpack:///src/app/shared/components/icon/icon.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/popout-menu/popout-menu.component.ts","webpack:///src/app/shared/components/popout-menu/popout-menu.component.html","webpack:///src/app/shared/components/replace.pipe.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.ts","webpack:///src/app/shared/components/searchbar/searchbar.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/components/topbar-header/topbar-header.component.ts","webpack:///src/app/shared/components/topbar-header/topbar-header.component.html","webpack:///src/app/shared/components/user-avatar/user-avatar.component.ts","webpack:///src/app/shared/components/user-avatar/user-avatar.component.html","webpack:///src/app/shared/directives/cdk-drop-list-scroll-container.directive.ts","webpack:///src/app/shared/globals/angular-animations.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/mocks/api/bookings.mock.ts","webpack:///src/app/shared/mocks/api/buildings.mock.ts","webpack:///src/app/shared/mocks/api/catering-menu.mock.ts","webpack:///src/app/shared/mocks/api/common.mock.ts","webpack:///src/app/shared/mocks/api/locations.mock.ts","webpack:///src/app/shared/mocks/api/organisation.mock.ts","webpack:///src/app/shared/mocks/api/spaces.mock.ts","webpack:///src/app/shared/mocks/api/users.mock.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/catering/catering.component.ts","webpack:///src/app/shell/catering/catering.component.html","webpack:///src/app/shell/catering/catering.module.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.ts","webpack:///src/app/shell/catering/menu/item-list/item-list.component.html","webpack:///src/app/shell/catering/menu/item/item.component.ts","webpack:///src/app/shell/catering/menu/item/item.component.html","webpack:///src/app/shell/catering/menu/menu.component.ts","webpack:///src/app/shell/catering/menu/menu.component.html","webpack:///src/app/shell/catering/orders/item/item.component.ts","webpack:///src/app/shell/catering/orders/item/item.component.html","webpack:///src/app/shell/catering/orders/orders.component.ts","webpack:///src/app/shell/catering/orders/orders.component.html","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.ts","webpack:///src/app/shell/catering/overlays/category-modal/category-modal.component.html","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.ts","webpack:///src/app/shell/catering/overlays/group-modal/group-modal.component.html","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.ts","webpack:///src/app/shell/catering/overlays/item-modal/item-modal.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/booking-details/booking-details.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/items/items.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/messages/messages.component.html","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.ts","webpack:///src/app/shell/catering/overlays/order-details-modal/order-details-modal.component.html","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.ts","webpack:///src/app/shell/day-view/approvals-view/approvals-view.component.html","webpack:///src/app/shell/day-view/approvals-view/event/event.component.ts","webpack:///src/app/shell/day-view/approvals-view/event/event.component.html","webpack:///src/app/shell/day-view/day-view.component.ts","webpack:///src/app/shell/day-view/day-view.component.html","webpack:///src/app/shell/day-view/day-view.module.ts","webpack:///src/app/shell/day-view/space/event/event.component.ts","webpack:///src/app/shell/day-view/space/event/event.component.html","webpack:///src/app/shell/day-view/space/space.component.ts","webpack:///src/app/shell/day-view/space/space.component.html","webpack:///src/app/shell/day-view/timeline/timeline.component.ts","webpack:///src/app/shell/day-view/timeline/timeline.component.html","webpack:///src/app/shell/reports/report-display/report-display.component.ts","webpack:///src/app/shell/reports/report-display/report-display.component.html","webpack:///src/app/shell/reports/report-table/report-table.component.ts","webpack:///src/app/shell/reports/report-table/report-table.component.html","webpack:///src/app/shell/reports/reports.component.ts","webpack:///src/app/shell/reports/reports.component.html","webpack:///src/app/shell/reports/reports.module.ts","webpack:///src/app/shell/shell.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","webpack:///src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","webpack:///src/app/shell/visitors/timeline/item/item.component.ts","webpack:///src/app/shell/visitors/timeline/item/item.component.html","webpack:///src/app/shell/visitors/timeline/timeline.component.ts","webpack:///src/app/shell/visitors/timeline/timeline.component.html","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.ts","webpack:///src/app/shell/visitors/timeline/visitor/visitor.component.html","webpack:///src/app/shell/visitors/visitors.component.ts","webpack:///src/app/shell/visitors/visitors.component.html","webpack:///src/app/shell/visitors/visitors.module.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.ts","webpack:///src/app/shell/week-view/day-display/day-display.component.html","webpack:///src/app/shell/week-view/day-display/item/item.component.ts","webpack:///src/app/shell/week-view/day-display/item/item.component.html","webpack:///src/app/shell/week-view/timeline/timeline.component.ts","webpack:///src/app/shell/week-view/timeline/timeline.component.html","webpack:///src/app/shell/week-view/week-view.component.ts","webpack:///src/app/shell/week-view/week-view.component.html","webpack:///src/app/shell/week-view/week-view.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","ShellWrapperComponent","children","loadChildren","m","DayViewModule","WeekViewModule","CateringModule","VisitorsModule","ReportsModule","redirectTo","AppRoutingModule","RouterModule","forRoot","useHash","NgModule","imports","AppComponent","_composer","_org","_users","_spaces","_uploads","_md5_workers","_service","detectIE","location","href","origin","pathname","localStorage","removeItem","setup","initUploads","subscription","initialised","subscribe","state","timeout","token","auth","setTimeout","autoStart","endpoint","UploadManager","addProvider","Amazon","unsub","BaseDirective","Component","selector","templateUrl","styleUrls","encapsulation","ViewEncapsulation","None","AppModule","window","app_loaded","provide","MAT_LABEL_GLOBAL_OPTIONS","useValue","BrowserModule","BrowserAnimationsModule","ServiceWorkerModule","register","enabled","environment","production","HttpClientModule","FormsModule","ComposerModule","SharedOverlaysModule","SharedContentModule","declarations","providers","bootstrap","BookingConfirmComponent","_bookings","_router","_dialog_ref","_data","event","EventEmitter","loading","disableClose","checkSpaceAvailability","message","notifyError","save","booking","err","success","emit","reason","notifySuccess","navigate","close","spaces","changes","date","duration","length","reject","available","room_ids","map","space","join","space_list","was_available","name","old_booking","title","date_value","duration_value","all_day","dayjs","end","add","format","isSame","humaniseDuration","creator","current","attendees","filter","i","email","organiser","body","equipment_codes","catering","codes","order","location_id","charge_code","notes","note","type","reduce","find","a_space","level","building","buildings","bld","building_id","CateringOrder","symbol","currency","MAT_DIALOG_DATA","Inject","Output","BookingModalComponent","_dialog","pipe","first","_","flow_step","only_catering","loadFormData","toNextFlowStep","toPreviousFlowStep","resetForm","form","controls","value","step","metadata","ref","openEquipmentDetailsModal","has_catering","confirmBooking","order_list","openCateringDetailsModal","markAsDirty","route","generateBookingForm","available_fields","form_data","toJSON","Booking","setValue","open","RequirementDetailsModalComponent","maxWidth","width","data","notes_field","codes_field","head_counts_field","expected_attendees","componentInstance","afterClosed","CateringDetailsModalComponent","valid","dialog_ref","maxHeight","booking_type","setting","BookingCateringComponent","active_order","orders","index","findIndex","an_order","push","splice","startOf","valueOf","Input","CateringMenuCategoryComponent","hasSelectionRequirements","category","must_select","items","item","getActiveList","list","amount","concat","CateringMenuItemComponent","field","an_item","setAmount","valueChanges","updatePackageSelection","selectPackageOptions","confirmed_item","CateringCategory","notifyWarn","CateringItem","cart_item","active_items","forEach","includes","PackageOptionsModalComponent","done","a_list","ANIMATION_SHOW_CONTRACT_EXPAND","animations","BookingCateringOrderDetailsComponent","_menu","category_list","available_times","generateAvailableTimes","time","delivery_time","initForm","FormGroup","FormControl","booking_date","loadMenu","BookingCateringConfirmModalComponent","query","room_id","start_date","generateStartAndEndTimes","start","minute","Math","ceil","isBefore","abs","diff","now","endOf","building_time","toDate","hour","as_dayjs","toLocalDate","possible_end","isAfter","active_building","within_restricted_time","has_available_items","out_of_hours","form_controls","catering_restricted_from","total","can_order_anytime","confirmOrder","CateringOrderListItemComponent","edit","unit_price","BookingCateringOrderListComponent","previous","next","$event","stopPropagation","BookingSpaceFiltersComponent","locations","locationsChange","building_list","listen","bld_list","unique","is_today","BookingFindSpaceComponent","zone_ids","change$","Subject","search_results$","debounceTime","distinctUntilChanged","switchMap","recurrence","recurrence_properties","period","recurr_period","toLowerCase","recurr_end","unix","bookable","catchError","of","onChange","multiple","BookingSpaceItemComponent","select","recurr_available","availability","selected","RecurrenceSpacesModalComponent","height","host","conflicts","recurr","conflict_list","replaces","rulesFor","hide","byRequest","count","ocurrence","BookingSpaceFlowFormComponent","can_return","markAllAsTouched","container","nativeElement","scrollIntoView","behavior","block","inline","ViewChild","item_list","head_counts","needs_charge_code","active_space","note_list","generateFormFields","is_valid","new_notes","author","_scrollToBottom","_content_el","scrollTo","top","scrollHeight","left","submit","CONFIRM_METADATA","ConfirmModalComponent","content","action","icon","DeleteConfirmModalComponent","MeetingCateringDetailsComponent","setItem","JSON","stringify","status","declined","editMeetingCatering","MeetingDetailsDisplayComponent","edited","Object","values","edits","person","pattern","RECURRENCE_PERIODS","MeetingDetailsModalComponent","_on_error","setLoading","booking_list","bkn","icaluid","accept","concierge","approval_status","bookings","getValue","decline","booking_id","floor","deleteMeeting","new_booking","acceptMeeting","declineMeeting","confirmDeleteMeeting","MeetingPrivateDetailsComponent","PrivateDetailsModalComponent","breakdown","openPrivateDetailsModal","MeetingDetailsRequirementsComponent","bookingChange","standalone","NewUserModalComponent","user","User","generateUserForm","random","new_user","first_name","last_name","OVERLAYS","SpaceSelectModalComponent","RecurrenceModalComponent","CommonModule","ReactiveFormsModule","forChild","checkItemRequirements","getActiveItems","a_package","option","needed","active","available_durations","Array","fill","dirty","old_notes","RECURRENCE_METADATA","periods","details","Validators","required","occurrences","space_details","updateOccurrences","occurrence","unshift","date_string","replaced_by","head_count","equipment_code","search$","selected_spaces","request_map","types","active_type","update","space_types","options","ApplicationService","_app_ref","_zone","_title","_cache","_settings","_hotkeys","_analytics","_snackbar","_route_trail","_subjects","_observers","ServiceManager","setService","set","isStable","run","_stable","log","setupCache","waitForSettings","key","get","on_action","snackbar_ref","panelClass","afterDismissed","dismiss","onAction","msg","console","debug","notify","error","warn","info","args","stream","force","BehaviorSubject","asObservable","init","setupComposer","_initialised","application","composer","settings","protocol","domain","hostname","port","url","use_domain","mock","config","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","isEnabled","hash","activateUpdate","activated","notifyInfo","reload","setInterval","checkForUpdate","bindings","title_suffix","setTitle","getTitle","api_endpoint","is_initialised","BaseClass","Injectable","providedIn","BaseDataClass","raw_data","event_subject","events","_server_names","zone_id","promise","d","task_name","parameters","task","obj","_changes","changeEvents","_timers","_intervals","_subscriptions","new_key","substr","undefined","serviceFor","BaseAPIService","_subscribers","_promises","_compare","a","b","_list_filter","_name","_api_route","load","engine","predicate","query_params","update_list","cache","toQueryString","result","http","process","results","updateList","new_item","post","analyticsEvent","method","post_data","_task","request","delay","stopPoll","sub","_poll","show","interval","complete","put","remove_ids","label","raw_item","old_list","compareFn","new_list","mixed_list","found","time_changed","_display","subject","start_epoch","Start","end_epoch","End","old_start","old_end","description","visitors","_attendees","organizer","active_user","booked_by","_location","location_name","Date","getTime","checked_in","checkins","check_ins","notify_users","space_ids","_space_list","space_service","Space","edited_fields","isArray","flatten","room","json","auto_approve","sort","from_room","eq_notes","display","indexOf","v","external","subtract","MINUTE","HOUR","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","day","days","hours","minutes","BOOKING_COUNT","BOOKING_DATE","setMockBookingStartDatetime","generateMockBooking","override","padZero","faker","commerce","productName","generateMockUser","users","lorem","paragraph","address","city","randomInt","max","getFreeBookingSlots","min_size","slots","bkn_start","bkn_end","getNextFreeBookingSlot","second","use_fields","user_service","current_user","fields","organiser_email","needs_space","setValidators","validateEndTime","disable","isFuture","list_length","expected","new_expected","new_codes","simplified_fields","enable","control","rulesForSpace","space_rules_for_user","rules","hasOwnProperty","zones","zone","rule_block","checkRules","conditions","ruleset","max_length","stringToMinutes","min_length","matches","counter","condition","groups","j","last_location","check","match","durationGreaterThanOrEqual","getMinLength","rule_list","min","min_block","el","duration_1","duration_2","str","parts","split","statusFromBookings","requestable","free_slots","next_free_slot","slot","currently_free","time_until_next_block","free_tomorrow","free_today","available_until","timeFormatString","replaceBookings","new_bookings","filter_options","from","to","filtered_list","timePeriodsIntersect","updated_list","start1","end1","start2","end2","day1","end_time1","day2","end_time2","BookingsService","localeCompare","CateringCategoriesService","order_anytime","anytime","_amount","instance_id","from_month","available_from","to_month","available_to","prior_notice","notice","price","supplier_cost","minimum_quantity","maximum_quantity","parent_categories","category_ids","categories","image_path","catering_type","out_of_stock","allergy","CateringItemsService","CateringMenuService","kitchen","pantry","with_changes","MapLocation","org_service","Organisation","map_id","desk_id","x","normalise","x_max","y","BuildingLevel","levelWithID","fixed","confidence","at_desk","empty","generateMockLocation","overrides","fixed_locations","maps","Building","__type","disc_info","discovery_info","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","_roles","roles","_lockers","lockers","locker_structure","_systems","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","lvl_features","feature","level_id","booking_details","booking_rules","requires_equipment_code","requires_expected_attendees","timezone","holding_bay","visitor_space","getItemWithKeys","_zones","bld_id","level_name","lower_name","num","replace","toUpperCase","short_name","map_url","floor_type","OrganisationService","_organisation","ids","_active_building","getItem","organisation","loadOrganisation","loadBuildings","loadLevels","loadSpaceTypes","tags","org_data","limit","bld_data","lvl_data","type_data","Report","cleanData","downloadFile","jsonToCsv","room_field","price_field","date_field","row","CurrencyPipe","transform","room_email","formatRecurrence","remove_fields","output","idx_a","idx_b","csv_json","csvToJson","ReportsService","fromCSV","service","_service_list","provider","provideFor","OPTION_DEFAULTS","long_name","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","capacity","occurence","support_url","image","raw_bookings","linked_spaces","linked_rooms","rm","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","USER_DOMAIN","business","availabilityOptionsToQuery","SpacesService","respond","available_spaces","_desk_bookings","windows_id","visitor","phone","mobile","business_unit","department","organisation_id","organisation_name","staff_code","fmno","delegates","officeLocation","desk","l","USER_COUNT","USER_EMAILS","company","companyName","delegate_count","phoneNumber","avatar","UsersService","uhttp","expiry","client_id","Md5","hashStr","sessionStorage","go","headers","HttpHeaders","append","authorise","logout","tries","locate","loadDelegates","promises","all","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","key_list","non_meta","SettingsService","api","local","session","_app_name","built","build","core_version","version","loadFromFile","app","colors","app_name","shift","file","file_name","clearTimeout","clearInterval","fn","Function","Subscription","unsubscribe","destroy","Directive","ActionIconComponent","ActionFieldComponent","show_tooltip","performAction","CounterComponent","ctrl_key","shift_key","new_value","_onChange","_onTouch","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","remove","DateFieldComponent","_from","position","offset","old_date","new_date","disabled","_trigger","closeMenu","openMenu","_to","menuOpen","MatMenuTrigger","openDatePicker","closeDatePicker","DurationFieldComponent","specialPreprops","duration_options","generateDurationOptions","blocks","TimeFieldComponent","no_past_times","show_select","_time_options","select_field","focus","openedChange","datestamp","show_past","showSelect","UserListFieldComponent","q","slice","filterList","search_str","user_list","match_name","matchToHighlight","match_email","active_list","a_user","target","files","reader","FileReader","readAsText","evt","processCsvData","srcElement","addUser","template","addUsersFromFile","downloadCSVTemplate","UserSearchFieldComponent","resetSearchString","FeedbackComponent","updateRoute","document","NavigationEnd","current_page","BookingFormComponent","UserFormComponent","IconComponent","LoginComponent","username","password","logo","login","setErrors","PopoutMenuComponent","actions","ReplacePipe","Pipe","SearchbarComponent","valueChange","autofocus","focusField","input_field","SidebarComponent","TopbarHeaderComponent","show_add_item","show_events","dateChange","event_map","tentative","trigger","changeDate","resetDate","UserAvatarComponent","ScrollDirection","CdkDropListScrollContainer","_cdkDropList","_renderer","direction","X","last_scroll","scrollContainer","element","closest","toArray","onDrop","onDrag","updateListPosition","scroll","scrollLeft","scrollTop","BOTH","Y","_dropListRef","_cacheOwnPosition","_siblings","isReceiving","CdkDrag","ContentChildren","ANIMATION_SHOW_ENTER_LEAVE","transition","style","opacity","animate","handlers","MOCK_BOOKINGS","rooms","MOCK_SPACES","MOCK_USERS","guests","MOCK_CONTACTS","booking_data","API","callback","route_params","MOCK_BUILDINGS","DOMAIN","is_before","number","MOCK_ORG","MOCK_MENU","parent","cat","findParent","itm","MOCK_LOCATIONS","lvls","send_acceptance","space_data","Bookings","today","PREDEFINED_USERS","seed","createSystem","LETTERS","NUMBERS","SPACE_LIST","IMAGES","booking_bindings","touch_enabled","cancel_timeout","control_url","desk_bindings","system","DeskManagement","DeskBookings","room_name","$start_meeting","last_meeting_started","$cancel_meeting","$waiter_call","$book","$check_in","$check_out","COMPONENTS","DIRECTIVES","ENTRY_COMPONENT","MATERIAL_MODULES","MatButtonModule","MatSnackBarModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatSelectModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatTooltipModule","MatRadioModule","MatTabsModule","MatSlideToggleModule","CDK_MODULES","ScrollingModule","DragDropModule","CdkTableModule","APipesModule","ADatePickerModule","ACustomEventsModule","EditorModule","formatAttendeesWithHost","formatAttendees","attendee_str","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","formatDuration","formatSpaces","isMobileDevice","r","navigator","userAgent","isMobileSafari","agent","isAndroidChrome","toString","array","pos","arr","short","h","filters","f","word","regex","RegExp","parse","match_count","match_index","field_list","matched","changed","tokens","k","timeToDate","is24HourTime","localeString","toLocaleTimeString","filename","contents","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","csv","lines","line","part","valid_keys","ua","msie","parseInt","substring","trident","rv","edge","eventToPoint","MouseEvent","clientX","clientY","touches","an_array","stack","res","pop","reverse","HAS_ERROR","validateDate","is_from","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","validateDuration","buildValidateAttendees","validateAttendees","invalid","date_control","end_time","CateringComponent","_route","order_type","paramMap","params","has","page","ROUTES","CateringOrdersComponent","CateringMenuComponent","CateringMenuItemListComponent","CateringCategoryModalComponent","CateringGroupModalComponent","CateringItemModalComponent","CateringOrdersItemComponent","OrderDetailsModalComponent","OrderDetailsItemsComponent","OrderBookingDetailsComponent","OrderDetailsNotesComponent","openGroupModal","group","parent_id","_menu_items","_menu_categories","updateItemList","old_item","openItemModal","deleteItem","catering_menu","filtered_menu","removeFromMenu","loadCateringMenu","search","openCategoryModal","depth","menu","statuses","colour","active_status","updated_booking","viewOrderDetails","filtered_orders","updateOrders","initBookings","queryParamMap","view_id","sub_item","sub_sub_item","relevant_bookings","_upload_manager","fileReader","uploading","arrayBuffer","blob","blobUtil","arrayBufferToBlob","upload","uploads","access_url","readAsArrayBuffer","storeBooking","editing","new_note","order_id","pending_booking","addNote","deliver_at_time","DayViewApprovalsComponent","updateEvents","getMonthlyPending","previousValue","currentValue","STATES","DayViewApprovalsEventComponent","acting","start_time","length_string","DayViewComponent","active_level","legend","legend_keys","color","updateLevel","newMeeting","DayViewTimelineComponent","DayViewSpaceComponent","DayViewSpaceEventComponent","overlap","calculatePosition","should_display","queryParams","view","shown_date","toFixed","overflow_top","overflow_bottom","approved","has_visitors","time_period","inView","dragging","event_list","overlap_details","position_list","overflow_only","checkInView","last_update","calculateOverlaps","collisions","cmp","cmp_start","cmp_end","in_view","offsetLeft","innerWidth","box","getBoundingClientRect","delta","pointerPosition","scroll_top","top_minutes","round","previousContainer","new_start","handleDropError","override_state","room_list","room_count","Set","size","checkCollisions","moveBooking","ignore","hide_bookings","confirm_msg","drop","UPDATE_INTERVAL","time_blocks","generateTimeBlocks","scroll_left","scroll_offset","filtered_spaces","loading_space","show_holding_bay","scroll_area","initSpaces","updateTime","updateBookings","space_type","updateScroll","active_hour","visible_rooms","querySelector","scroll_box","scrollWidth","is_dragging","bottom","right","scrollView","cancelScroll","clearSelected","HostListener","ReportDisplayComponent","_reports","end_date","multipleLocations","report","report_data","downloadCSV","checkDates","generateReport","downloadReport","ReportTableComponent","hide_fields","ReportsComponent","reports","src","multi_locations","active_report","loading_state","is_logged_in","mod","EventFormComponent","addFrom","VisitorFormComponent","personChange","minLength","VisitorsFormModalComponent","attendee","VisitorBookingItemComponent","checked_in_users","counts","checkin","host_email","response_type","show_attendees","checkedInStatus","VisitorTimelineComponent","filtered_bookings","show_all","date_display","VisitorComponent","_element","is_match","addClass","removeClass","VisitorsComponent","newVisitorMeeting","WeekViewDayDisplayComponent","WeekViewItemComponent","WeekViewTimelineComponent","date_list","generateDates","weekends","WeekViewComponent","enableProdMode","platformBrowser","bootstrapModule"],"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            {\n                path: 'day-view',\n                loadChildren: () =>\n                    import('./shell/day-view/day-view.module').then(m => m.DayViewModule)\n            },\n            {\n                path: 'week-view',\n                loadChildren: () =>\n                    import('./shell/week-view/week-view.module').then(m => m.WeekViewModule)\n            },\n            {\n                path: 'catering',\n                loadChildren: () =>\n                    import('./shell/catering/catering.module').then(m => m.CateringModule)\n            },\n            {\n                path: 'visitors',\n                loadChildren: () =>\n                    import('./shell/visitors/visitors.module').then(m => m.VisitorsModule)\n            },\n            {\n                path: 'reports',\n                loadChildren: () =>\n                    import('./shell/reports/reports.module').then(m => m.ReportsModule)\n            },\n            { path: '**', redirectTo: 'day-view' }\n        ]\n    },\n    { path: '**', redirectTo: 'day-view' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { UploadManager, Amazon, Md5Workers } from '@acaprojects/ngx-uploads';\nimport { ComposerService } from '@placeos/composer';\n\nimport { detectIE } from './shared/utilities/general.utilities';\nimport { BaseDirective } from './shared/base.directive';\nimport { ApplicationService } from './services/app.service';\nimport { SpacesService } from './services/data/spaces/spaces.service';\nimport { UsersService } from './services/data/users/users.service';\nimport { OrganisationService } from './services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent extends BaseDirective {\n    constructor(\n        private _composer: ComposerService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _spaces: SpacesService,\n        private _uploads: UploadManager,\n        private _md5_workers: Md5Workers,\n        private _service: ApplicationService\n    ) {\n        super();\n        /* istanbul ignore if */\n        if (detectIE() && detectIE() < 12) {\n            location.href = `${location.origin}${location.pathname}assets/not-supported.html`;\n            return;\n        }\n        localStorage.removeItem('CONCIERGE.date');\n        this._md5_workers.setup('assets/md5_worker.js');\n        this.initUploads();\n    }\n\n    private initUploads() {\n        this.subscription(\n            'composer',\n            this._service.initialised.subscribe((state) => {\n                /* istanbul ignore else */\n                if (state) {\n                    this.timeout('init_uploads', () => {\n                        const token = this._composer.auth.token;\n                        if (!token) {\n                            return setTimeout(() => this.initUploads(), 300);\n                        }\n                        this._uploads.token = token;\n                        this._uploads.autoStart = true;\n                        this._uploads.endpoint = '/api/staff/uploads';\n                        UploadManager.addProvider(Amazon);\n                    });\n                    this.unsub('composer');\n                }\n            })\n        );\n    }\n}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\n\nimport './shared/mocks';\n\nimport { ComposerModule } from '@placeos/composer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\n\ndeclare global {\n    interface Window {\n        app_loaded: boolean;\n    }\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n        HttpClientModule,\n        FormsModule,\n        ComposerModule,\n        SharedOverlaysModule,\n        SharedContentModule\n    ],\n    providers: [\n        { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'nevet'} }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        window.app_loaded = true;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface BookingConfirmModalData {\n    old_booking: Booking\n    booking: Booking\n}\n\n@Component({\n    selector: 'a-booking-confirm-modal',\n    templateUrl: './booking-confirm.component.html',\n    styleUrls: ['./booking-confirm.component.scss']\n})\nexport class BookingConfirmComponent extends BaseDirective {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter();\n    /** Display string for changes are being processed */\n    public loading: string;\n    /** Whether space availability is being checked */\n    public checking_available: boolean;\n    /** Whether to show all attendees */\n    public show_attendees: boolean;\n    /** Whether to show all attendees */\n    public show_locations: boolean;\n    /** Whether to show all catering orders */\n    public show_orders: boolean;\n    /** Whether booking has succeeded */\n    public success: boolean;\n\n    /** Whether booking needs to be accepted */\n    public get is_request(): boolean {\n        return false; // Bookings are always approved in concierge\n    }\n\n    /** Booking to confirm changes to */\n    public get old_booking(): Booking {\n        return this._data.old_booking;\n    }\n\n    /** Booking to confirm changes to */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Title of the displayed event */\n    public get title(): string {\n        return this.booking.title;\n    }\n\n    /** Display string of when the event will occur */\n    public get when(): string {\n        const date_value = this.booking.date;\n        const duration_value = this.booking.duration;\n        const all_day = this.booking.all_day;\n        const date = dayjs(date_value);\n        const end = date.add(duration_value, 'm');\n        if (all_day || duration_value > 23 * 60) {\n            return `${date.format('DD MMM YYYY')} - All Day`;\n        } else {\n            if (date.isSame(end, 'd')) {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format('h:mm A')}`;\n            } else {\n                return `${date.format('DD MMM YYYY, h:mm A')} - ${end.format(\n                    'DD MMM YYYY, h:mm A'\n                )}`;\n            }\n        }\n    }\n\n    /** Display string for the event's duration */\n    public get duration(): string {\n        const duration_value = this.booking.duration;\n        return humaniseDuration(duration_value);\n    }\n\n    public get user(): User {\n        return this.booking.creator || this._users.current;\n    }\n\n    /** List of spaces associated with the event */\n    public get spaces(): Space[] {\n        return this.booking.space_list;\n    }\n\n    /** List of attendees associated with the event not including the host */\n    public get attendees(): User[] {\n        const attendees = this.booking.attendees;\n        return attendees.filter(i => i.email !== this.organiser.email);\n    }\n\n    /** Host of the event */\n    public get organiser(): User {\n        return (\n             this.booking.organiser || this._users.current\n        );\n    }\n\n    /** Details about the event */\n    public get notes(): string {\n        return this.booking.body;\n    }\n\n    /** Host of the event */\n    public get equipment_codes(): HashMap<string> {\n        return this.booking.equipment_codes || {};\n    }\n\n    /** Host of the event */\n    public get catering_codes(): HashMap<string> {\n        const catering = this.catering;\n        const codes = {};\n        for (const order of this.catering) {\n            codes[order.location_id] = order.charge_code;\n        }\n        return codes;\n    }\n\n    /** Host of the event */\n    public get equipment_notes(): HashMap<string> {\n        return this.booking.notes\n            .filter((note) => note.type === 'equipment')\n            .reduce((map, notes) => {\n                map[notes.space] = notes.message;\n                return map;\n            }, {});\n    }\n\n\n    /** List of catering orders in the booking */\n    public get catering(): CateringOrder[] {\n        return (this.booking.catering || []).map(order => {\n            const space: any = this.spaces.find(a_space => a_space.email === order.location_id) || {\n                level: {}\n            };\n            const building: any =\n                this._org.buildings.find(bld => bld.id === space.level.building_id) || {};\n            return new CateringOrder({ ...order, location: space.name, symbol: building.currency });\n        });\n    }\n\n    /** Map of changes to the booking */\n    public get changes(): HashMap<boolean> {\n        return {};\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _org: OrganisationService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _router: Router,\n        private _dialog_ref: MatDialogRef<BookingConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingConfirmModalData\n    ) {\n        super();\n    }\n\n    /**\n     * Save booking changes\n     */\n    public async saveChanges() {\n        this.loading = 'Checking availability of selected spaces';\n        this._dialog_ref.disableClose = true;\n        let message = await this.checkSpaceAvailability().catch(e => e);\n        if (message) {\n            this.loading = null;\n            this._dialog_ref.disableClose = false;\n            this._service.notifyError(`Error checking space availability: ${message}`);\n            return;\n        }\n        this.loading = 'Processing booking request...';\n        const booking = await this._bookings.save(this.booking).catch(err => {\n            this._service.notifyError(\n                `Error ${this.booking.id ? 'updating' : 'creating'} booking: ${err}`\n            );\n        })\n        this.loading = null;\n        this._dialog_ref.disableClose = false;\n        if (booking) {\n            this.success = true;\n            this.event.emit({ reason: 'done' });\n            this._service.notifySuccess(\n                `Successfully ${this.booking.id ? 'updated' : 'created'} booking`\n            );\n        }\n    }\n\n    public newBooking() {\n        localStorage.removeItem('ACA_STAFF.booking_form_data');\n        this._router.navigate(['/book', 'spaces']);\n        this.event.emit({ reason: 'action' } as DialogEvent)\n        this._dialog_ref.close();\n    }\n\n    /**\n     * Check whether the selected spaces are available for the selected time period\n     */\n    public checkSpaceAvailability(): Promise<void> {\n        const spaces: Space[] = this.spaces;\n        if (\n            (this.booking.id && !this.changes.date && !this.changes.duration) ||\n            (spaces && spaces.length <= 0)\n        ) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this._spaces.available({\n                room_ids: spaces.map(space => space.id).join(','),\n                date: this.booking.date,\n                duration: this.booking.duration\n            }).then(\n                space_list => {\n                    for (const space of space_list) {\n                        if (!space.was_available) {\n                            return reject(\n                                `${space.name} is not available at the select time period.`\n                            );\n                        }\n                    }\n                    resolve();\n                },\n                err => reject(err)\n            );\n        });\n    }\n}\n","<mat-dialog-content *ngIf=\"!loading; else load_state\">\n    <main>\n        <button name=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n        <div class=\"details\">\n            <img\n                [src]=\"\n                    success\n                        ? is_request\n                            ? 'assets/img/requested.svg'\n                            : 'assets/img/confirmed.svg'\n                        : 'assets/img/edit.svg'\n                \"\n            />\n            <div class=\"text\">\n                Booking Details\n                <span *ngIf=\"success && !is_request\">Confirmed!</span>\n                <span class=\"request\" *ngIf=\"success && is_request\">Requested!</span>\n            </div>\n            <div class=\"info\" *ngIf=\"success && is_request\">Please await confirmation of room</div>\n        </div>\n        <div class=\"field\" name=\"title\">\n            <label>Title<span *ngIf=\"changes.title\">*</span>:</label>\n            <div class=\"value\">{{ title || 'No title' }}</div>\n        </div>\n        <div class=\"field\" name=\"when\">\n            <label>When<span *ngIf=\"changes.date\">*</span>:</label>\n            <div class=\"value\">{{ when }}</div>\n        </div>\n        <div class=\"field\" name=\"duration\">\n            <label>Duration<span *ngIf=\"changes.duration\">*</span>:</label>\n            <div class=\"value\">{{ duration }}</div>\n        </div>\n        <div class=\"field multi\" name=\"location\">\n            <label\n                >Locations({{ spaces.length || '0' }})<span *ngIf=\"changes.location\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_locations\">\n                    <div class=\"list-item\" *ngFor=\"let item of spaces\" [title]=\"item?.name\">\n                        <div class=\"text\">{{ item?.name }}</div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_notes[item.email]\"\n                            [matTooltip]=\"equipment_notes[item.email]\"\n                        >\n                            Notes\n                        </div>\n                        <div\n                            class=\"tooltip\"\n                            *ngIf=\"equipment_codes[item.email]\"\n                            [matTooltip]=\"\n                                (equipment_codes[item.email]\n                                    ? 'Equipment ~ ' + equipment_codes[item.email]\n                                    : '') +\n                                (catering_codes[item.email] && equipment_codes[item.email]\n                                    ? '\\n'\n                                    : '') +\n                                (catering_codes[item.email]\n                                    ? 'Catering ~ ' + catering_codes[item.email]\n                                    : '')\n                            \"\n                        >\n                            Code\n                        </div>\n                    </div>\n                    <div class=\"list-item\" *ngIf=\"!spaces.length\">No Locations</div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"spaces.length > 5\"\n                    (click)=\"show_locations = !show_locations\"\n                >\n                    {{ show_locations ? 'Hide' : 'Show' }} Locations\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"host\">\n            <label>Host<span *ngIf=\"changes.organiser\">*</span>:</label>\n            <div class=\"value\">{{ organiser?.name || organiser?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"host\" *ngIf=\"user && user.email !== organiser.email\">\n            <label>Booked By:</label>\n            <div class=\"value\">{{ user?.name || user?.email }}</div>\n        </div>\n        <div class=\"field\" name=\"attendees\">\n            <label\n                >Attendees({{ attendees.length || '0' }})<span *ngIf=\"changes.attendees\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <span *ngIf=\"!attendees || !attendees.length\">&lt;No Attendees&gt;</span>\n                <div class=\"list\" [class.shown]=\"show_attendees\">\n                    <div\n                        class=\"list-item\"\n                        *ngFor=\"let item of attendees\"\n                        [title]=\"item?.name + (item?.email ? '\\n' + item.email : '')\"\n                    >\n                        <div class=\"text\">\n                            <div class=\"name\">{{ item.name }}</div>\n                            <div class=\"email\" *ngIf=\"item.email\">\n                                <a [href]=\"'mailto:' + item.email + '?subject=' + booking.title\">{{\n                                    item.email\n                                }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_attendees = !show_attendees\"\n                >\n                    {{ show_attendees ? 'Hide' : 'Show' }} Attendees\n                </button>\n            </div>\n        </div>\n        <div class=\"field\" name=\"notes\">\n            <label>Notes<span *ngIf=\"changes.body\">*</span>:</label>\n            <div class=\"value\" [innerHTML]=\"notes || 'No notes'\"></div>\n        </div>\n        <div class=\"field\" name=\"catering\">\n            <label\n                >Catering Orders({{ catering.length || '0' }})<span *ngIf=\"changes.catering\">*</span\n                >:</label\n            >\n            <div class=\"value\">\n                <div class=\"list\" [class.shown]=\"show_orders\">\n                    <div class=\"list-item\" *ngFor=\"let order of catering\">\n                        <div class=\"text\">\n                            <div class=\"name\">{{ order.location || '&lt;Removed&gt;' }}</div>\n                            <div class=\"email\">\n                                {{ order.item_count }} item{{ order.item_count === 1 ? '' : '' }} |\n                                {{ order.total / 100 | currency: order.symbol }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button\n                    class=\"show\"\n                    *ngIf=\"attendees.length > 5\"\n                    (click)=\"show_orders = !show_orders\"\n                >\n                    {{ show_orders ? 'Hide' : 'Show' }} Catering orders\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <ng-container *ngIf=\"!success; else success_actions\">\n            <button mat-button class=\"inverse\" mat-dialog-close>Edit</button>\n            <button mat-button (click)=\"saveChanges()\">Save</button>\n        </ng-container>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                {{ loading }}\n            </div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_actions>\n    <button mat-button mat-dialog-close>Close</button>\n</ng-template>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { CateringDetailsModalComponent, CateringDetailsModalData } from '../catering-details-modal/catering-details-modal.component';\nimport { BookingConfirmComponent } from '../booking-confirm/booking-confirm.component';\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../requirement-details-modal/requirement-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\n\nexport interface BookingFlowEvent {\n    /** Type of flow event */\n    type: 'previous' | 'next' | 'reset' | 'close' | 'error';\n    /** Step which the event was emitted from */\n    step: string;\n    /** Additional metadata for the event */\n    metadata?: HashMap;\n}\n\nexport interface BookingModalData {\n    /** Booking to create/edit */\n    booking: Booking;\n    /** Whether to edit only catering */\n    only_catering?: boolean;\n}\n\n@Component({\n    selector: 'a-booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n})\nexport class BookingModalComponent extends BaseDirective implements OnInit {\n    /** Form fields */\n    public form: FormGroup;\n    /** Form data store */\n    public booking: Booking;\n    /** Step of the booking flow that is currently active */\n    public flow_step: string;\n\n    /** Whether to edit only catering */\n    public get only_catering(): boolean {\n        return !!this._data.only_catering;\n    }\n\n    /** List of available booking fields for the form */\n    public get available_fields(): AvailableBookingFields[] {\n        return this._service.setting('app.booking.show_fields') || [];\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._dialog_ref.disableClose = true;\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.flow_step = this._data.only_catering ? 'catering' : 'form';\n            this.loadFormData();\n        });\n    }\n\n    /**\n     * Handle events from child components\n     * @param event Booking flow event\n     */\n    public handleFlowEvent(event: BookingFlowEvent) {\n        /* istanbul ignore else */\n        if (event.type === 'next') {\n            this.toNextFlowStep(event);\n        } else if (event.type === 'previous') {\n            this.toPreviousFlowStep(event);\n        } else if (event.type === 'reset') {\n            this.resetForm();\n        }\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n\n    private toNextFlowStep(event: BookingFlowEvent) {\n        const space_list = this.form.controls.space_list.value;\n        switch (event.step) {\n            case 'search':\n                if (\n                    space_list &&\n                    space_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'equipment')\n                ) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    if (this.form.controls.has_catering && this.form.controls.has_catering.value) {\n                        this.navigate('catering');\n                    } else {\n                        this.navigate('form');\n                        this.confirmBooking();\n                    }\n                }\n                break;\n            case 'catering':\n                const order_list = this.form.controls.catering.value;\n                if (\n                    order_list.find(order => this.form.controls.space_list.value.find(space => space.email === order.location_id)) &&\n                    order_list &&\n                    order_list.length &&\n                    (!event.metadata || !event.metadata.ref || event.metadata.ref !== 'details')\n                ) {\n                    this.openCateringDetailsModal();\n                } else {\n                    this.navigate('form');\n                    this.confirmBooking();\n                }\n                break;\n            default:\n                this.form.markAsDirty();\n                if (!space_list || !space_list.length || !this.booking.id) {\n                    this.navigate('search');\n                } else if (this.booking.id && space_list && space_list.length) {\n                    this.openEquipmentDetailsModal();\n                } else {\n                    this.confirmBooking();\n                }\n                break;\n        }\n    }\n\n    private toPreviousFlowStep(event: BookingFlowEvent) {\n        switch (event.step) {\n            case 'search':\n                this.navigate('form');\n                break;\n            case 'catering':\n                /* istanbul ignore else */\n                if (!this._data.only_catering) {\n                    this.navigate('search');\n                }\n                break;\n        }\n    }\n\n    private navigate(route: string) {\n        this.flow_step = route;\n    }\n\n    /** Clear user changes to the form data */\n    private resetForm() {\n        delete this.form;\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n    }\n\n    /**\n     * Load existing form data or generate a new booking form\n     */\n    private loadFormData(): void {\n        let form_data: HashMap = this._data.booking ? this._data.booking.toJSON() : {};\n        this.booking = new Booking(form_data);\n        this.form = generateBookingForm(\n            this.booking,\n            this.available_fields\n        );\n        /* istanbul ignore else */\n        if (form_data && form_data.room_ids && this.form.controls.space_list) {\n            this.form.controls.space_list.setValue(\n                form_data.room_ids.map(id => this._spaces.find(id) || { id, name: id })\n            );\n        }\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openEquipmentDetailsModal() {\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: this.form.controls.space_list.value,\n                notes_field: this.form.controls.notes,\n                codes_field: this.form.controls.equipment_codes,\n                head_counts_field: this.form.controls.expected_attendees\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'search',\n                        metadata: { ref: 'equipment' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /** Open modal for adding equipment requirements to booking */\n    private openCateringDetailsModal() {\n        const ref = this._dialog.open<CateringDetailsModalComponent, CateringDetailsModalData>(\n            CateringDetailsModalComponent,\n            {\n                maxWidth: '95vw',\n                width: '32em',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    notes_field: this.form.controls.notes,\n                    catering: this.form.controls.catering\n                }\n            }\n        );\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.toNextFlowStep({\n                        type: 'next',\n                        step: 'catering',\n                        metadata: { ref: 'details' }\n                    });\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('modal_events'));\n    }\n\n    /**\n     * Open modal to confirm the booking details\n     */\n    private confirmBooking() {\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const value = this.form.value;\n            const dialog_ref = this._dialog.open(BookingConfirmComponent, {\n                width: '32em',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    old_booking: this.booking,\n                    booking: new Booking({\n                        ...this.booking.toJSON(),\n                        ...value,\n                        booking_type: value.type,\n                        room_ids: value.space_list.map((space) => space.id),\n                    }),\n                },\n            });\n            dialog_ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.close();\n                } else if (event.reason === 'action') {\n                    this.resetForm();\n                }\n            });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking?.id ? 'Edit' : 'New' }} Booking</div>\n    <button mat-icon-button mat-dialog-close (click)=\"close()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container [ngSwitch]=\"flow_step\">\n            <ng-container *ngSwitchCase=\"'search'\">\n                <booking-find-space\n                    *ngIf=\"form\"\n                    [spaces]=\"form.controls.space_list\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-find-space>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"'catering'\">\n                <booking-catering\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    [only]=\"only_catering\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-catering>\n            </ng-container>\n            <ng-container *ngSwitchDefault>\n                <booking-spaces-form\n                    *ngIf=\"form\"\n                    [form]=\"form\"\n                    (event)=\"handleFlowEvent($event)\"\n                ></booking-spaces-form>\n            </ng-container>\n        </ng-container>\n    </main>\n</mat-dialog-content>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class BookingCateringComponent {\n    /** Form fields for the booking */\n    @Input() public form: FormGroup;\n    /** Whether catering is the only action in the flow */\n    @Input() public only: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Active order to display details for */\n    public active_order: CateringOrder;\n\n    /** Field for storing catering details */\n    public get catering_field() {\n        return this.form && this.form.controls.catering ? this.form.controls.catering : null;\n    }\n\n    /** List of spaces selected for the booking */\n    public get space_list(): Space[] {\n        return this.form && this.form.controls.space_list\n            ? this.form.controls.space_list.value\n            : [];\n    }\n\n    /** Date of the booking */\n    public get date(): number {\n        return this.form && this.form.controls.date\n            ? this.form.controls.date.value\n            : dayjs().startOf('m').valueOf();\n    }\n\n    /** Duration of the booking */\n    public get duration(): number {\n        return this.form && this.form.controls.duration ? this.form.controls.duration.value : 60;\n    }\n\n    /** Whether booking is all day */\n    public get all_day(): boolean {\n        return this.form && this.form.controls.all_day && this.form.controls.all_day.value;\n    }\n\n    /** Create a new catering order */\n    public newOrder(): void {\n        const order = new CateringOrder({});\n        this.active_order = order;\n    }\n\n    /** Handle changes to catering order */\n    public handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = this.form.controls.catering.value;\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.form.controls.catering.setValue(orders);\n            this.form.markAsDirty();\n        }\n        this.active_order = null;\n    }\n}\n","<div class=\"catering\">\n    <ng-container *ngIf=\"!active_order; else order_display\">\n        <a-catering-order-list\n            [space_list]=\"space_list\"\n            [catering]=\"catering_field\"\n            [date]=\"date\"\n            [all_day]=\"all_day\"\n            [only_catering]=\"only\"\n            (order)=\"$event ? (active_order = $event) : newOrder()\"\n            (event)=\"event.emit($event)\"\n        ></a-catering-order-list>\n    </ng-container>\n</div>\n<ng-template #order_display>\n    <a-catering-order-details\n        [space_list]=\"space_list\"\n        [order]=\"active_order\"\n        [date]=\"date\"\n        [duration]=\"duration\"\n        [all_day]=\"all_day\"\n        (event)=\"$event ? handleOrderEvent($event) : active_order = null\"\n    ></a-catering-order-details>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\n@Component({\n    selector: 'a-category-display',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CateringMenuCategoryComponent {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Form control for the list of order items */\n    @Input() public items: FormControl;\n    /** Currency symbol for the active space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for close events */\n    @Output() public close = new EventEmitter<void>();\n}\n","<div class=\"header\">\n    <div class=\"content\">\n        <button mat-icon-button (click)=\"close.emit()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_back' }\"></app-icon>\n        </button>\n        <div class=\"name\">{{ category?.name }}</div>\n    </div>\n</div>\n<ng-container *ngIf=\"category.items && category.items.length; else empty_state\">\n    <div class=\"item\" *ngFor=\"let item of category.items\">\n        <a-catering-order-item\n            [compact]=\"compact\"\n            [disabled]=\"disabled\"\n            [symbol]=\"symbol\"\n            [item]=\"item\"\n            [field]=\"items\"\n        ></a-catering-order-item>\n    </div>\n</ng-container>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering category empty label\">\n            Category contains no available items\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { PackageOptionsModalComponent } from 'src/app/overlays/package-options-modal/package-options-modal.component';\n\nfunction hasSelectionRequirements(category: CateringCategory) {\n    return (\n        category.must_select < category.items.length ||\n        (category.must_select === category.items.length &&\n            category.items.find((item: any) => item.items && item.must_select < item.items.length))\n    );\n}\n\nfunction getActiveList(category: CateringCategory) {\n    const items = category.items || [];\n    let list = items.filter((item) => item.amount > 0).map((item) => item.id);\n    for (const item of items) {\n        if ((item as any).items && (item as any).items.length) {\n            list = list.concat(getActiveList(item as any));\n        }\n    }\n    return list;\n}\n\n@Component({\n    selector: 'a-catering-order-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective implements OnChanges {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Field for storing items */\n    @Input() public field: FormControl;\n    /** Current symbol for the selected space */\n    @Input() public symbol: string;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** List of contents of the package */\n    public get contents(): string {\n        return this.item.items\n            ? this.item.items.reduce((list, item) => {\n                  /* istanbul ignore else */\n                  if (list) {\n                      list += '\\n\\n';\n                  }\n                  return (list += `${item.name}${\n                      (item as any).items\n                          ? (item as any).items.reduce(\n                                (a_list, an_item) =>\n                                    (a_list += `\\n ${an_item.amount ? '✓' : '•'} ${an_item.name} `),\n                                ''\n                            )\n                          : ''\n                  } ${item.amount ? '✓' : ''}`);\n              }, '')\n            : '';\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.field && this.field) {\n            const list = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            this.item.setAmount(item ? item.amount : 0);\n            this.subscription(\n                'field_change',\n                this.field.valueChanges.subscribe((list) => {\n                    const item = list.find((an_item) => an_item.id === this.item.id);\n                    this.item.setAmount(item ? item.amount : 0);\n                    this.updatePackageSelection();\n                })\n            );\n        }\n    }\n\n    /**\n     * Update the amount of the item in the order\n     * @param value New amount\n     */\n    public updateAmount(value: number) {\n        /* istanbul ignore else */\n        if (this.field) {\n            const list: CateringItem[] = this.field.value;\n            const item = list.find((an_item) => an_item.id === this.item.id);\n            if (item) {\n                this.item.setAmount(value);\n                item.setAmount(value);\n            } else {\n                const amount = this.item.amount;\n                this.item.setAmount(value);\n                if (\n                    this.item.package &&\n                    amount < value &&\n                    this.item.items &&\n                    this.item.items.length &&\n                    hasSelectionRequirements(this.item)\n                ) {\n                    this.selectPackageOptions().then(\n                        (confirmed_item) => {\n                            list.push(new CateringCategory(confirmed_item));\n                            this.field.setValue(list.filter((an_item) => an_item.amount));\n                        },\n                        () => {\n                            this.item.setAmount(999);\n                            this.timeout('amount', () => this.item.setAmount(0), 5);\n                            this._service.notifyWarn(\n                                'Package options not selected. Item removed from order'\n                            );\n                        }\n                    );\n                } else {\n                    list.push(new CateringItem(this.item));\n                }\n            }\n            this.field.setValue(list.filter((an_item) => an_item.amount));\n        }\n    }\n\n    public updatePackageSelection() {\n        const cart_item = this.field.value.find((item) => item.id === this.item.id);\n        if (cart_item) {\n            const active_items = getActiveList(cart_item);\n            this.timeout(\n                'update_package',\n                () => {\n                    this.item.items.forEach((item) => {\n                        item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                        if ((item as any).items) {\n                            (item as any).items.forEach((item) => {\n                                item.setAmount(active_items.includes(item.id) ? 1 : 0);\n                            });\n                        }\n                    });\n                },\n                5\n            );\n        }\n    }\n\n    /** Reselect package options */\n    public updatePackageOptions(): void {\n        this.selectPackageOptions().then(\n            () => null,\n            () => null\n        );\n    }\n\n    /**\n     * Open modal for user to select package options\n     */\n    private selectPackageOptions(): Promise<CateringCategory> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open(PackageOptionsModalComponent, {\n                maxWidth: '95vw',\n                data: {\n                    item: new CateringCategory(this.item),\n                },\n            });\n            let done = false;\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    done = true;\n                    resolve(ref.componentInstance.item);\n                    ref.close();\n                }\n            });\n            ref.afterClosed().subscribe(() => {\n                /* istanbul ignore else */\n                if (!done) {\n                    reject();\n                }\n            });\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.compact]=\"compact\"\n    [class.subitem]=\"subitem\"\n    [attr.disabled]=\"disabled && !item.can_order_anytime\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n                [matTooltip]=\"contents\"\n                i18n=\"Catering order item available options label\"\n            >\n                { item.items.length, plural, =1 { Contains {{ item.items.length }} item } other {\n                Contains {{ item.items.length }} items } }\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                [matTooltip]=\"contents\"\n            >\n                {{ item.must_select }}\n                <span class=\"not-mobile\" i18n=\"Catering order item selected options label\">\n                    Selected\n                </span>\n            </div>\n            <button\n                mat-button\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n                (click)=\"updatePackageOptions()\"\n                i18n=\"Catering order item options change action\"\n            >\n                Customise\n            </button>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <a-counter\n        *ngIf=\"!item.items || item.package\"\n        [ngModel]=\"item.amount\"\n        (ngModelChange)=\"updateAmount($event)\"\n    ></a-counter>\n    <button\n        mat-icon-button\n        *ngIf=\"item.items && item.items.length && !item.package\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-order-item\n        *ngFor=\"let sub_item of item.items\"\n        [compact]=\"compact\"\n        [subitem]=\"true\"\n        [symbol]=\"symbol\"\n        [item]=\"sub_item\"\n        [field]=\"field\"\n    ></a-catering-order-item>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport {\n    BookingCateringConfirmModalComponent,\n    CateringConfirmModalData,\n} from 'src/app/overlays/catering-confirm-modal/catering-confirm-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport spacetime from 'spacetime';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-order-details',\n    templateUrl: './order-details.component.html',\n    styleUrls: ['./order-details.component.scss'],\n})\nexport class BookingCateringOrderDetailsComponent extends BaseDirective implements OnInit {\n    /** Catering order to edit details of */\n    @Input() public order: CateringOrder;\n    /** Booking date */\n    @Input() public date: number;\n    /** Booking duration */\n    @Input() public duration: number;\n    /** Booking duration */\n    @Input() public space_list: Space[];\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /** Whether top header details should be shown */\n    @Input() public hide_details: boolean;\n    /** Whether to show smaller version of component */\n    @Input() public compact: boolean;\n    /** Emitter for changes to the catering order */\n    @Output() public event = new EventEmitter<CateringOrder>();\n    /** Form controls for order */\n    public form: FormGroup;\n    /** List of available catering item categories */\n    public category_list: CateringCategory[] = [];\n    /** Active category to display details for */\n    public active_category: CateringCategory;\n    /** List of available times for delivering catering */\n    public available_times: Identity[] = [];\n    /** Whether the menu is loading */\n    public loading: boolean;\n\n    /** Whether user is able to order from the currently selected space */\n    public get can_order(): boolean {\n        return (\n            (this.active_building.has_catering || this.category_list.length) &&\n            (!this.within_restricted_time || this.has_available_items) &&\n            !this.out_of_hours\n        );\n    }\n\n    /** Building associated with the selected space */\n    public get active_building(): Building {\n        const form_controls = (this.form || { controls: { location_id: { value: '' } } }).controls;\n        const space: Space =\n            this.space_list.find((space) => space.email == form_controls.location_id.value) ||\n            ({ level: {} } as any);\n        return (\n            this._org.buildings.find((bld) => space.level.building_id === bld.id) ||\n            ({ catering_restricted_from: 0 } as any)\n        );\n    }\n\n    /** Currency code for the active building */\n    public get symbol(): string {\n        return this.active_building.currency || 'USD';\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        return this.form\n            ? this.form.controls.items.value.reduce((total, item) => total + item.amount, 0)\n            : 0;\n    }\n\n    /** Whether booking time is outside of catering hours */\n    public get out_of_hours(): boolean {\n        return this.form.controls.delivery_time.value < 0;\n    }\n\n    /** Whether booking is with the restricted ordering period */\n    public get within_restricted_time(): boolean {\n        return false;\n    }\n\n    /** Whether items are available for order at anytime */\n    public get has_available_items(): boolean {\n        return this.category_list.reduce(\n            (available, category) => available || category.can_order_anytime,\n            false\n        );\n    }\n\n    constructor(\n        private _menu: CateringMenuService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateAvailableTimes();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.duration) {\n            this.generateAvailableTimes();\n            /* istanbul ignore else */\n            if (\n                this.form &&\n                !this.available_times.find(\n                    (time) => time.id === this.form.controls.delivery_time.value\n                )\n            ) {\n                this.form.controls.delivery_time.setValue(this.available_times[0].id);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.space_list) {\n            /* istanbul ignore else */\n            if (this.form && this.space_list && !this.form.controls.location_id.value) {\n                this.form.controls.location_id.setValue(this.space_list[0].email);\n            }\n        }\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.initForm();\n        }\n    }\n\n    public initForm() {\n        this.form = new FormGroup({\n            id: new FormControl(this.order.id),\n            booking_date: new FormControl(\n                this.all_day ? dayjs(this.date).startOf('d').valueOf() : this.date\n            ),\n            location_id: new FormControl(this.order.location_id || this.space_list[0].email),\n            delivery_time: new FormControl(this.order.delivery_time || this.available_times[0].id),\n            items: new FormControl(this.order.items.map((item) => new CateringItem(item))),\n        });\n        this.subscription(\n            'space_change',\n            this.form.controls.location_id.valueChanges.subscribe((space) => {\n                this.generateAvailableTimes();\n                if (\n                    !this.available_times.find(\n                        (time) => time.id === this.form.controls.delivery_time.value\n                    )\n                ) {\n                    this.form.controls.delivery_time.setValue(this.available_times[0].id);\n                }\n                this.form.controls.items.setValue([]);\n                this.loadMenu();\n            })\n        );\n        this.loadMenu();\n        this.generateAvailableTimes();\n        if (\n            this.form &&\n            !this.available_times.find((time) => time.id === this.form.controls.delivery_time.value)\n        ) {\n            this.form.controls.delivery_time.setValue(this.available_times[0].id);\n        }\n    }\n\n    public confirmOrder() {\n        const ref = this._dialog.open<\n            BookingCateringConfirmModalComponent,\n            CateringConfirmModalData\n        >(BookingCateringConfirmModalComponent, {\n            maxWidth: '95vw',\n            data: {\n                date: this.date,\n                form: this.form,\n            },\n        });\n        this.subscription(\n            'confirm_event',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const order = new CateringOrder({ ...this.order, ...this.form.value});\n                    this.event.emit(order);\n                    ref.close();\n                }\n            })\n        );\n        ref.afterClosed().subscribe(() => this.unsub('confirm_event'));\n    }\n\n    private loadMenu() {\n        const space = this.space_list.find(\n            (space) => space.email === this.form.controls.location_id.value\n        );\n        this.loading = true;\n        this._menu.query({ room_id: space.id }).then(\n            (list) => {\n                this.loading = false;\n                this.category_list = list.map((i) => new CateringCategory(i));\n            },\n            () => (this.loading = false)\n        );\n    }\n\n    /** Generate a list of available delivery times for the given booking time */\n    private generateAvailableTimes() {\n        const start_date = this.all_day ? dayjs(this.date).startOf('d') : dayjs(this.date);\n        let { start, end } = this.generateStartAndEndTimes();\n        start = start.minute(Math.ceil(start.minute() / 5) * 5);\n        this.available_times = [];\n        while (start.isBefore(end, 'm')) {\n            this.available_times.push({\n                id: Math.abs(start_date.diff(start, 'm')),\n                name: start.format('h:mm A'),\n            });\n            start = start.add(5, 'm');\n        }\n        /* istanbul ignore else */\n        if (this.available_times.length === 0) {\n            this.available_times.push({ id: -1, name: 'Out of hours' });\n        }\n    }\n\n    private generateStartAndEndTimes(): { start: dayjs.Dayjs; end: dayjs.Dayjs } {\n        let start = dayjs(this.date);\n        const now = dayjs();\n        /* istanbul ignore else */\n        if (this.all_day) {\n            start = start.isSame(now, 'd') ? now : start.startOf('d');\n        }\n        let end = this.all_day ? start.endOf('d') : start.add(this.duration, 'm');\n        let building_time = spacetime(start.toDate());\n        // const space = this.form ? this.form.controls.location_id.value : null;\n        // if (space) {\n        //     const building = this._service.Organisation.buildings.find((bld) =>bld.id === space.level.building_id);\n        //     if (building && building.timezone) {\n        //         building_time = building_time.goto(building.timezone);\n        //     }\n        // }\n        building_time = building_time.hour(7);\n        const as_dayjs = dayjs(building_time.toLocalDate());\n        if (this.all_day || this.duration >= 13 * 60) {\n            if (start.isBefore(as_dayjs, 'm')) {\n                start = as_dayjs;\n                end = start.add(13, 'h');\n            } else {\n                const possible_end = as_dayjs.hour(20);\n                if (end.isAfter(possible_end)) {\n                    end = possible_end;\n                }\n            }\n        }\n        if (start.isBefore(as_dayjs, 'm')) {\n            start = as_dayjs;\n        }\n        return { start, end };\n    }\n}\n","<div class=\"catering order-details\" [class.compact]=\"compact\">\n    <div class=\"header\" *ngIf=\"form && !hide_details\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <label i18n=\"Catering order location label\">Deliver to:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select formControlName=\"location_id\">\n                        <mat-option *ngFor=\"let space of space_list\" [value]=\"space.email\">\n                            {{ space.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"start\" i18n=\"Catering order delivery time label\">At:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"start\" formControlName=\"delivery_time\">\n                        <mat-option *ngFor=\"let time of available_times\" [value]=\"time.id\">\n                            {{ time.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </form>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"!active_category; else category_display\">\n            <div class=\"contents\" *ngIf=\"can_order && category_list.length; else empty_state\">\n                <button\n                    mat-button\n                    class=\"category\"\n                    *ngFor=\"let item of category_list\"\n                    [style.background-image]=\"'url(' + item.image_path + ')'\"\n                    [disabled]=\"within_restricted_time && !item.can_order_anytime\"\n                    (click)=\"active_category = item\"\n                >\n                    <div class=\"overlay\"></div>\n                    <div class=\"name\">{{ item.name }}</div>\n                </button>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            (click)=\"event.emit()\"\n            i18n=\"Catering order cancel action\"\n        >\n            Back\n        </button>\n        <button\n            mat-button\n            name=\"confirm\"\n            [disabled]=\"!item_count || out_of_hours\"\n            (click)=\"confirmOrder()\"\n            i18n=\"Catering order confirm action\"\n        >\n            Confirm Order({{ item_count || '0' }})\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"empty-state center\">\n        <div class=\"icon\">\n            <img alt=\"No Catering Available\" src=\"assets/img/no-catering.svg\" />\n        </div>\n        <p i18n=\"Catering order unavailable\">\n            Catering is <span class=\"bold\">not available</span> for this booking.<br />\n            Catering must be ordered within business hours at {{ active_building?.name }}.\n        </p>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Catering order loading label\">\n                Loading menu for {{ active_building?.name }}...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #category_display>\n    <a-category-display\n        [compact]=\"compact\"\n        [category]=\"active_category\"\n        [symbol]=\"symbol\"\n        [items]=\"form.controls.items\"\n        [disabled]=\"within_restricted_time\"\n        (close)=\"active_category = null\"\n    ></a-category-display>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'catering-order-list-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class CateringOrderListItemComponent {\n    /** Catering order to display */\n    @Input() order: CateringOrder;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Selected datetime */\n    @Input() date: number;\n    /** Emitter for edit events */\n    @Output() public edit = new EventEmitter<void>();\n    /** Emitter for delete events */\n    @Output() public delete = new EventEmitter<void>();\n\n    public get space_in_booking(): boolean {\n        return !!(this.space_list || []).find(space => space.email === this.order.location_id);\n    }\n    /** Space selected for delivery */\n    public get space(): string {\n        const space = this._spaces.find((this.order || {}).location_id) || { name: '' };\n        return space.name || '<No Location>';\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        /* istanbul ignore else */\n        if (!this.order) {\n            return '<Meeting Start>';\n        }\n        const date = dayjs(this.order.booking_date).add(\n            (this.order.changes ? this.order.delivery_time : null) || this.order.delivery_time,\n            'm'\n        );\n        return date.format('h:mm A');\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Number of items in the order */\n    public get item_count(): number {\n        const items = (this.order || { items: [] }).items as any;\n        return items.reduce((amount, item) => amount + item.amount, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        const space = this._spaces.find((this.order || {}).location_id);\n        /* istanbul ignore else */\n        if (!space || !space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find((bld) => bld.id === space.level.building_id) || {\n            currency: 'USD',\n        };\n        return building.currency;\n    }\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {}\n}\n","<div class=\"details\" i18n=\"Catering order item delivery details\">\n    Deliver to <span>{{ space }}</span> at <span>{{ delivery_time }}</span>\n</div>\n<div class=\"group\">\n    <div class=\"cost\">\n        {{ item_count }}\n        <span i18n=\"Items\">{ item_count, plural, =1 { item } other { items } }</span>\n    </div>\n    <div class=\"cost\">{{ order_cost / 100 | currency: symbol }}</div>\n</div>\n<div class=\"actions\">\n    <button\n        mat-icon-button\n        name=\"edit\"\n        [class.warn]=\"!space_in_booking\"\n        (click)=\"edit.emit()\"\n        [matTooltip]=\"\n            !space_in_booking\n                ? 'Space for this order is not in the booking anymore. On confirmation this order will be removed unless the space is re-added.'\n                : ''\n        \"\n    >\n        <app-icon\n            [icon]=\"{ class: 'material-icons', content: space_in_booking ? 'edit' : 'warning' }\"\n        ></app-icon>\n    </button>\n    <button mat-icon-button name=\"delete\" class=\"inverse\" (click)=\"delete.emit()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n    </button>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../../booking-modal.component';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-catering-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\nexport class BookingCateringOrderListComponent {\n    /** Form field for storing catering orders */\n    @Input() public catering: FormControl;\n    /** Selected datetime for the booking */\n    @Input() public date: number;\n    /** Whether booking is all day */\n    @Input() public all_day: boolean;\n    /**  */\n    @Input() public space_list: Space[];\n    /** Whether catering is the only action in the flow */\n    @Input() public only_catering: boolean;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n    /** Emiiter for order events */\n    @Output() public order = new EventEmitter<CateringOrder>();\n\n    /** List of orders in the booking */\n    public get orders(): CateringOrder[] {\n        /* istanbul ignore else */\n        if (!this.catering) {\n            return [];\n        }\n        const orders = this.catering.value;\n        orders.forEach(\n            order =>\n                (order.booking_date = this.all_day\n                    ? dayjs(this.date)\n                          .startOf('d')\n                          .valueOf()\n                    : this.date)\n        );\n        return orders;\n    }\n\n    /** Emit event for a new catering order */\n    public newOrder() {\n        this.order.emit();\n    }\n\n    /** Emit event for editing existing order */\n    public editOrder(order: CateringOrder) {\n        this.order.emit(order);\n    }\n\n    /** Remove order from the list */\n    public deleteOrder(order: CateringOrder) {\n        const orders = this.orders;\n        const index = orders.findIndex(an_order => order.id === an_order.id);\n        /* istanbul ignore else */\n        if (index >= 0) {\n            orders.splice(index, 1);\n            this.catering.setValue(orders);\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'catering' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'catering' });\n    }\n}\n","<div class=\"catering order-list\">\n    <div class=\"header\">\n        <h3 i18n=\"Catering order list header\">Catering Orders</h3>\n    </div>\n    <div class=\"body\">\n        <ng-container *ngIf=\"orders && orders.length; else empty_state\">\n            <div class=\"list\">\n                <catering-order-list-item\n                    *ngFor=\"let order of orders\"\n                    [space_list]=\"space_list\"\n                    [order]=\"order\"\n                    [date]=\"date\"\n                    (edit)=\"editOrder(order)\"\n                    (delete)=\"deleteOrder(order)\"\n                ></catering-order-list-item>\n            </div>\n            <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n                Add Order\n            </button>\n        </ng-container>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"previous\"\n            (click)=\"previous()\"\n            i18n=\"Catering order list cancel action\"\n        >\n            Back\n        </button>\n        <button mat-button name=\"next\" (click)=\"next()\" i18n=\"Catering order list continue action\">\n            Next\n        </button>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\" i18n=\"Catering order list empty label\">No catering orders</div>\n        <button mat-button name=\"new\" (click)=\"newOrder()\" i18n=\"Catering order list add action\">\n            Add Order\n        </button>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'booking-space-filters',\n    templateUrl: './filters.component.html',\n    styleUrls: ['./filters.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class BookingSpaceFiltersComponent extends BaseDirective implements OnInit {\n    /** Date selected for the booking */\n    @Input() public date: FormControl;\n    /** List of location IDs being filtered on */\n    @Input() public locations: string[] = [];\n    /** Emitter for changes to location filter */\n    @Output() public locationsChange = new EventEmitter<string[]>();\n    /** List of available buildings */\n    public building_list: Building[] = [];\n    /** Whether to show the location list */\n    public show_locations: boolean;\n\n    /** Whether active date is current day */\n    public get is_today(): boolean {\n        const date = dayjs(this.date.value);\n        return dayjs().isSame(date, 'd');\n    }\n\n    /** Display string for the selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date.value);\n        return this.is_today ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** List of filtered location */\n    public get location_list(): Building[] {\n        return this.locations.map(id => this.building_list.find(bld => bld.id === id));\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public changeDate(amount: number) {\n        let date = dayjs(this.date.value).add(amount, 'd');\n        const now = dayjs().startOf('m');\n        if (date.isBefore(now, 's')) {\n            date = now;\n        }\n        this.date.setValue(date.valueOf());\n    }\n\n    public ngOnInit(): void {\n        this.subscription('buildings', this._org.listen('buildings').subscribe((bld_list) => {\n            this.building_list = bld_list;\n        }));\n    }\n\n    /**\n     * Update location filter to include the given building\n     * @param building Building to add\n     */\n    public addLocationFilter(building: Building): void {\n        this.locations.push(building.id);\n        this.locations = unique(this.locations);\n        this.locationsChange.emit(this.locations);\n    }\n\n    /**\n     * Remove location from the active filters\n     * @param building Building to remove\n     */\n    public removeLocationFilter(building: Building) {\n        this.locations.splice(\n            this.locations.findIndex(id => building.id === id),\n            1\n        );\n        this.locationsChange.emit(this.locations);\n    }\n}\n","<div class=\"space-filters\" *ngIf=\"date\">\n    <div class=\"actions\">\n        <div class=\"date\">\n            <button mat-icon-button [disabled]=\"is_today\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\">{{ date_display }}</div>\n            <button mat-icon-button (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <div class=\"location-list\" [matMenuTriggerFor]=\"locationMenu\">\n            <div class=\"inner\" (click)=\"show_locations = !show_locations\">\n                <img src=\"assets/img/location-img.svg\" />\n                <div class=\"text\" i18n=\"Booking space filters locations label\">\n                    Select locations(s)\n                </div>\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: 'keyboard_arrow_' + (show_locations ? 'up' : 'down')\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"filters\" *ngIf=\"location_list && location_list.length\">\n        <mat-chip-list aria-label=\"Location Filters\">\n            <mat-chip\n                *ngFor=\"let building of location_list\"\n                [id]=\"building.id\"\n                color=\"primary\"\n                [removable]=\"true\"\n                (removed)=\"removeLocationFilter(building)\"\n            >\n                {{ building.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<mat-menu #locationMenu=\"matMenu\" class=\"dark-mode\" xPosition=\"before\">\n    <button mat-menu-item (click)=\"$event.stopPropagation()\" *ngFor=\"let building of building_list\">\n        <mat-checkbox\n            (change)=\"$event.checked ? addLocationFilter(building) : removeLocationFilter(building)\"\n        >\n            <div class=\"building-name\">\n                <div class=\"code\">{{ building.code }}</div>\n                <div class=\"name\">{{ building.name }}</div>\n                <div class=\"address\">{{ building.address }}</div>\n            </div>\n        </mat-checkbox>\n    </button>\n</mat-menu>\n","import {\n    Component,\n    OnInit,\n    Input,\n    SimpleChanges,\n    EventEmitter,\n    Output,\n    OnChanges\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map, first } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space, ISpaceAvailabilityOptions } from 'src/app/services/data/spaces/space.class';\nimport { BookingFlowEvent } from '../booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'booking-find-space',\n    templateUrl: './find-space.component.html',\n    styleUrls: ['./find-space.component.scss']\n})\nexport class BookingFindSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Form control for setting the active space */\n    @Input() public spaces: FormControl;\n    /** Form group for booking */\n    @Input() public form: FormGroup;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    /** List of spaces available during the required period */\n    public space_list: Space[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Whether space list is loading */\n    public loading: boolean;\n    /** List of zones to filter the spaces on */\n    public zone_ids: string[] = [];\n    /** Subject holding the value of the search */\n    public readonly change$ = new Subject<string>();\n\n    /**  Whether multiple spaces are allowed to be selected */\n    public get multiple(): boolean {\n        return this._service.setting('app.booking.multiple_spaces');\n    }\n\n    constructor(private _service: ApplicationService, private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            // Listen for input changes\n            this.search_results$ = this.change$.pipe(\n                debounceTime(400),\n                distinctUntilChanged(),\n                switchMap(_ => {\n                    this.loading = true;\n                    const recurrence = this.form.controls.recurrence ? this.form.controls.recurrence.value : null;\n                    const recurrence_properties = recurrence && recurrence.period && recurrence.period !== 'None' ? {\n                        recurr_period: (recurrence.period || '').toLowerCase(),\n                        recurr_end: dayjs(recurrence.end).unix()\n                    } : {};\n                    const query: ISpaceAvailabilityOptions = {\n                        date: this.form.controls.date.value,\n                        duration: this.form.controls.duration.value,\n                        zone_ids: this._org.building.id,\n                        bookable: true,\n                        ...recurrence_properties\n                    };\n                    /* istanbul ignore else */\n                    if (this.zone_ids && this.zone_ids.length) {\n                        query.zone_ids = this.zone_ids.join(',');\n                    }\n                    return this._spaces.available(query);\n                }),\n                catchError(_ => of([])),\n                map((list: Space[]) => {\n                    this.loading = false;\n                    return list;\n                })\n            );\n            // Process API results\n            this.subscription(\n                'search_results',\n                this.search_results$.subscribe(list => (this.space_list = list))\n            );\n            this.change$.next('');\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.form) {\n            const onChange = _ => this.change$.next(_);\n            /* istanbul ignore else */\n            if (this.form.controls.date) {\n                this.subscription(\n                    'date_field',\n                    this.form.controls.date.valueChanges.subscribe(onChange)\n                );\n            }\n            /* istanbul ignore else */\n            if (this.form.controls.duration) {\n                this.subscription(\n                    'duration_field',\n                    this.form.controls.duration.valueChanges.subscribe(onChange)\n                );\n            }\n        }\n    }\n\n    /**\n     * Update the selected space list\n     * @param space Space to add/toggle in the selected list\n     */\n    public selectSpace(space: Space) {\n        if (this.multiple) {\n            const list = this.spaces.value;\n            if (list.find(item => item.id === space.id)) {\n                this.spaces.setValue(list.filter(item => item.id !== space.id));\n            } else {\n                this.spaces.setValue(list.concat([space]));\n            }\n        } else {\n            this.spaces.setValue([space]);\n            this.event.emit({ type: 'next', step: 'search' });\n        }\n    }\n\n    /**\n     * Proceed to the next step in the space booking flow\n     */\n    public next(): void {\n        this.event.emit({ type: 'next', step: 'search' });\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'search' });\n    }\n}\n","<div class=\"find-space\">\n    <div class=\"background\"></div>\n    <div class=\"header\">\n        <booking-space-filters\n            [date]=\"form.controls.date\"\n            [(locations)]=\"zone_ids\"\n            (locationsChange)=\"change$.next($event)\"\n        ></booking-space-filters>\n    </div>\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <cdk-virtual-scroll-viewport\n            *ngIf=\"space_list && space_list.length; else empty_state\"\n            [itemSize]=\"130\"\n        >\n            <ng-container *cdkVirtualFor=\"let space of space_list\">\n                <a-booking-space-item\n                    [form]=\"form\"\n                    [space]=\"space\"\n                    [multi]=\"multiple\"\n                    (select)=\"selectSpace(space)\"\n                ></a-booking-space-item>\n            </ng-container>\n        </cdk-virtual-scroll-viewport>\n    </ng-container>\n    <div class=\"footer\">\n        <div class=\"box\">\n            <button\n                mat-button\n                class=\"inverse\"\n                name=\"previous\"\n                (click)=\"previous()\"\n                i18n=\"Booking spaces cancel action\"\n            >\n                Back\n            </button>\n            <button\n                mat-button\n                *ngIf=\"multiple\"\n                name=\"next\"\n                [disabled]=\"!spaces.value || !spaces.value.length\"\n                (click)=\"next()\"\n                i18n=\"Booking spaces continue action\"\n            >\n                Next\n            </button>\n        </div>\n    </div>\n</div>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"48\"></mat-spinner>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces loading label\">\n                Checking space availability...\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"body\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </div>\n            <div class=\"text\" i18n=\"Booking spaces empty label\">\n                No spaces available for the selected time\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport {\n    BookingRecurrenceDetails,\n    BookingRecurrenceSpaceDetails,\n} from 'src/app/services/data/bookings/booking.interfaces';\nimport {\n    RecurrenceSpacesModalComponent,\n    RecurrenceSpacesModalData,\n} from 'src/app/overlays/recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-booking-space-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n})\nexport class BookingSpaceItemComponent extends BaseDirective {\n    /** Space to display */\n    @Input() public space: Space;\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** Whether multiple spaces are able to be selected */\n    @Input() public multi: boolean;\n    /** Emitter for select actions on the */\n    @Output() public select = new EventEmitter<void>();\n\n    /** Whether space image should be displayed */\n    public get show_image() {\n        return this._service.setting('app.space_display.show_images');\n    }\n\n    /** Whether this space is selected */\n    public get selected(): boolean {\n        /* istanbul ignore else */\n        if (!this.form && this.space) {\n            return false;\n        }\n        return (\n            this.form.controls.space_list &&\n            !!(this.form.controls.space_list.value || []).find(\n                (space) => space.id === this.space.id\n            )\n        );\n    }\n\n    public get is_hidden(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.rulesFor({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        }).hide;\n    }\n\n    /** Whether space is booked by request */\n    public get is_request(): boolean {\n        /* istanbul ignore else */\n        if (!this.form) {\n            return false;\n        }\n        return this.space.byRequest({\n            date: this.form.controls.date.value,\n            duration: this.form.controls.duration.value,\n            host: this.form.controls.organiser.value || this._users.current,\n        });\n    }\n\n    public get availability(): string {\n        const count = this.space.recurr_available.reduce(\n            (count, ocurrence) => count + (ocurrence.available ? 1 : 0),\n            0\n        );\n        return count >= this.space.recurr_available.length\n            ? 'all'\n            : `${count} of ${this.space.recurr_available.length}`;\n    }\n\n    /** Display location of the space */\n    public get location(): string {\n        /* istanbul ignore else */\n        if (!this.space) {\n            return 'Unable to determine location';\n        }\n        const level = this.space.level;\n        const bld = this._org.buildings.find((building) => building.id === level.building_id);\n        return `${bld ? bld.name + ', ' : ''}${level.name}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public selectSpace() {\n        if (!this.space.recurr_available || this.availability === 'all' || this.selected) {\n            this.select.emit();\n        } else {\n            const ref = this._dialog.open<\n                RecurrenceSpacesModalComponent,\n                RecurrenceSpacesModalData\n            >(RecurrenceSpacesModalComponent, {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                maxHeight: '95vh',\n                data: {\n                    space: this.space,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    conflicts: this.form.controls.recurrence.value.conflicts || [],\n                },\n            });\n            this.subscription(\n                'recurr_conflicts',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        const recurr: BookingRecurrenceDetails = this.form.controls.recurrence\n                            .value;\n                        const conflict_list: BookingRecurrenceSpaceDetails[] =\n                            recurr.conflicts || [];\n                        for (const item of event.metadata) {\n                            const index = conflict_list.findIndex(\n                                (event) =>\n                                    event.date === item.date && event.replaces === item.replaces\n                            );\n                            if (index >= 0) {\n                                conflict_list.splice(index, 1, item);\n                            } else {\n                                conflict_list.push(item);\n                            }\n                        }\n                        this.form.controls.recurrence.setValue({\n                            ...recurr,\n                            conflicts: conflict_list,\n                        });\n                        this.select.emit();\n                        ref.close();\n                    }\n                })\n            );\n        }\n    }\n}\n","<div class=\"space-details\" *ngIf=\"space && !is_hidden\" [class.with-image]=\"show_image\">\n    <div class=\"details\">\n        <div\n            class=\"image\"\n            *ngIf=\"space.image\"\n            [style.background-image]=\"'url(' + space.image + ')'\"\n        ></div>\n        <div class=\"overlay\"></div>\n        <div class=\"name\">{{ space.name }}</div>\n        <div class=\"info\">\n            <div class=\"location\">{{ location }}</div>\n            <div class=\"capacity\">\n                <app-icon\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                ></app-icon>\n                {{ space.capacity || '0' }}\n            </div>\n        </div>\n        <div\n            class=\"info recurr\"\n            *ngIf=\"space.recurr_available && space.recurr_available.length\"\n            i18n=\"Booking space availability label\"\n        >\n            Available for&nbsp;<span>{{ availability }}</span\n            >&nbsp;meeting ocurrences\n        </div>\n    </div>\n    <div class=\"actions\">\n        <button\n            mat-button\n            name=\"select\"\n            [class.inverse]=\"multi && !selected\"\n            (click)=\"selectSpace()\"\n        >\n            {{ multi ? (selected ? 'Remove' : 'Select') : is_request ? 'Request' : 'Book' }}\n        </button>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BookingFlowEvent } from '../booking-modal.component';\n\n\n@Component({\n    selector: 'booking-spaces-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.scss']\n})\nexport class BookingSpaceFlowFormComponent {\n    /** Booking form fields */\n    @Input() public form: FormGroup;\n    /** Whether form is not the first page in the flow */\n    @Input() public can_return: boolean = false;\n    /** Emitter for flow update events */\n    @Output() public event = new EventEmitter<BookingFlowEvent>();\n\n    @ViewChild('container', { static: true }) private container: ElementRef<HTMLDivElement>;\n\n    /** Move flow to next step */\n    public next(): void {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.event.emit({ type: 'next', step: 'form' });\n        } else if (this.container) {\n            this.container.nativeElement.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start',\n                inline: 'nearest'\n            });\n        }\n    }\n\n    /** Move flow to previous step */\n    public previous(): void {\n        this.event.emit({ type: 'previous', step: 'form' });\n    }\n\n    /** Reset form to initial state */\n    public resetForm(): void {\n        this.event.emit({ type: 'reset', step: 'form' });\n    }\n}\n","<div class=\"booking-form\" #container>\n    <form [formGroup]=\"form\" (ngSubmit)=\"next()\">\n        <div class=\"body\">\n            <a-booking-form [form]=\"form\"></a-booking-form>\n        </div>\n        <div class=\"footer\">\n            <button mat-button type=\"button\" name=\"return\" *ngIf=\"can_return\" class=\"inverse\" (click)=\"previous()\" i18n=\"Booking form cancel action\">Back</button>\n            <button mat-button type=\"submit\" i18n=\"Booking form continue action\">Next</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface CateringConfirmModalData {\n    form: FormGroup;\n    date: number;\n}\n\n@Component({\n    selector: 'a-catering-confirm-modal',\n    templateUrl: './catering-confirm-modal.component.html',\n    styleUrls: ['./catering-confirm-modal.component.scss'],\n})\nexport class BookingCateringConfirmModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected items for the order */\n    public item_list: CateringItem[] = [];\n\n    /** Space selected for delivery */\n    public get space(): Space {\n        return this._spaces.find(this._data.form?.controls?.location_id?.value);\n    }\n    /** Delivery time for the order */\n    public get delivery_time(): string {\n        const date = dayjs(this._data.date);\n        return date.format('h:mm A');\n    }\n\n    /** Form field for order items */\n    public get item_field(): FormControl {\n        return this._data.form.controls.items as any;\n    }\n\n    /** Total cost of the order */\n    public get order_cost(): number {\n        return this.item_list.reduce((amount, item) => amount + item.amount * item.unit_price, 0);\n    }\n\n    /** Currency symbol for the selected space */\n    public get symbol(): string {\n        /* istanbul ignore else */\n        if (!this.space || !this.space.level) {\n            return 'USD';\n        }\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this.space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<BookingCateringConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfirmModalData\n    ) {\n        super();\n        if (!this._data.form) {\n            this._service.notifyError('No form data for order');\n            this._dialog_ref.close();\n        }\n    }\n\n    public ngOnInit(): void {\n        /* istanbul ignore else */\n        if (this._data.form.controls.items) {\n            this.subscription(\n                'item_list',\n                this._data.form.controls.items.valueChanges.subscribe((items) => {\n                    /* istanbul ignore else */\n                    if (!items || items.length <= 0) {\n                        this._dialog_ref.close();\n                    }\n                })\n            );\n        }\n        this.item_list = this._data.form.controls.items.value.map((item) => new CateringItem(item));\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Catering confirm order header\">Confirm Catering Order</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            Delivering to <span>{{ space?.name || '&lt;Unset&gt;' }}</span> at <span>{{ delivery_time }}</span>\n        </div>\n        <div class=\"list\">\n            <a-catering-order-item\n                *ngFor=\"let item of item_list\"\n                [field]=\"item_field\"\n                [subitem]=\"true\"\n                [item]=\"item\"\n                [symbol]=\"symbol\"\n            ></a-catering-order-item>\n        </div>\n        <div class=\"total\">\n            <label>Order Total:</label>\n            <div class=\"value\">{{ order_cost / 100 | currency:symbol }}</div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering confirm save action\">Save Order</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\nexport interface CateringDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    catering: AbstractControl;\n}\n\n@Component({\n    selector: 'a-catering-details-modal',\n    templateUrl: './catering-details-modal.component.html',\n    styleUrls: ['./catering-details-modal.component.scss'],\n})\nexport class CateringDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    @ViewChild('content', { static: true }) private _content_el: ElementRef<HTMLElement>;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return (this._data.spaces || []).filter((space) =>\n            this._data.catering.value.find((order) => order.location_id === space.email)\n        );\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value.filter(\n            (note: BookingNote) => note.type === 'catering'\n        );\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = this._data.catering.value.reduce((map, order: CateringOrder) => {\n            map[order.location_id] = order.charge_code;\n            return map;\n        }, {});\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach((space) => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value.filter(\n                (note: BookingNote) => note.type !== 'catering'\n            );\n            const new_notes = this.space_list.map(\n                (space) =>\n                    ({\n                        author: this._users.current.name,\n                        type: 'catering',\n                        message: this.form[space.email].controls.notes.value,\n                        space: space.email,\n                        date: dayjs().valueOf(),\n                    } as BookingNote)\n            );\n            this._data.notes_field.setValue(notes.concat(new_notes).filter((note) => note.message));\n            const orders = this._data.catering.value.map(\n                (order) =>\n                    new CateringOrder({\n                        ...order,\n                        charge_code: this.form[order.location_id].controls.code.value,\n                    })\n            );\n            this._data.catering.setValue(orders);\n            this.event.emit({ reason: 'done' });\n        } else {\n            this._scrollToBottom();\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(this.codes[space.email] || ''),\n            });\n        }\n    }\n\n    /** Scroll the content container to the bottom */\n    private _scrollToBottom(): void {\n        this._content_el.nativeElement.scrollTo({\n            top: this._content_el.nativeElement.scrollHeight,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/food-notes.svg\" />\n            <div class=\"text\">Please specify any allergies or gluten intolerances</div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Catering details equipment notes label\">\n                    (eg - allergies, in tolerances, no ice in drinks etc) Additional requests are\n                    handled in confidence.\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"charge-code\"\n                    [class.error]=\"\n                        active_form.controls.code.touched && active_form.controls.code.invalid\n                    \"\n                    i18n=\"Catering details charge code label\"\n                >\n                    Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\">*</span>\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"charge-code\"\n                        formControlName=\"code\"\n                        placeholder=\"Charge Code\"\n                        i18n-placeholder\n                    />\n                    <mat-error i18n=\"Catering details charge code error\">\n                        Charge Code is required\n                    </mat-error>\n                    <mat-hint i18n=\"Catering details charge code hint\">\n                        <span>Note:</span> Your booking will be confirmed before you are charged.\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\" i18n=\"Catering details save action\">\n            Add to booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon } from '../../shared/utilities/settings.interfaces';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    action?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent extends BaseDirective {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: string;\n\n    /** Title of the confirm modal */\n    public get title(): string {\n        return (this._data ? this._data.title : null) || 'Confirm';\n    }\n\n    /** Body of the confirm modal */\n    public get content(): string {\n        return (this._data ? this._data.content : null) || 'Are you sure?';\n    }\n\n    /** Display text on the confirm button */\n    public get action(): string {\n        return (this._data ? this._data.action : null) || 'Ok';\n    }\n\n    /** Display icon properties */\n    public get icon(): ApplicationIcon {\n        return (this._data ? this._data.icon : null) || null;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {\n        super();\n    }\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","<header>\n    <h3 mat-dialog-title>{{ title || 'Confirm' }}</h3>\n</header>\n<mat-dialog-content>\n    <div class=\"body\" *ngIf=\"!loading; else load_state\">\n        <app-icon *ngIf=\"icon\" [icon]=\"icon\"></app-icon>\n        <div class=\"content\">\n            <p [innerHTML]=\"content || 'Are you sure?'\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button class=\"inverse\" mat-dialog-close i18n=\"Close confirm modal\">Cancel</button>\n        <button mat-button name=\"accept\" (click)=\"accept()\">{{ action || 'Ok' }}</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n  selector: 'app-delete-confirm-modal',\n  templateUrl: './delete-confirm-modal.component.html',\n  styleUrls: ['./delete-confirm-modal.component.scss']\n})\nexport class DeleteConfirmModalComponent {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Loading state */\n    public loading: boolean;\n    /** Whether delete action succeeded */\n    public success: boolean;\n}\n","<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"icon\">\n            <img [src]=\"'assets/img/delete' + (success ? '-success' : '') + '.svg'\" />\n        </div>\n        <div class=\"contents\" *ngIf=\"!success; else success_state\">\n            <p>Are you sure you want to delete this meeting?</p>\n            <p class=\"error\">\n                This will permanently delete the booking and all details from the host and attendees\n                calendars.\n            </p>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading && !success\">\n    <footer>\n        <button mat-button mat-dialog-close class=\"inverse\">Cancel</button>\n        <button mat-button class=\"delete\" (click)=\"event.emit({ reason: 'action' })\">\n            Yes, permanently delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Deleting meeting...</div>\n        </div>\n    </main>\n</ng-template>\n<ng-template #success_state>\n    <div class=\"contents\">\n        <p>Booking <span class=\"error\">Permanently deleted</span></p>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss'],\n})\nexport class MeetingCateringDetailsComponent {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    /** List of orders for this booking and space */\n    public get orders(): CateringOrder[] {\n        return this.booking.catering.filter((order) => order.location_id === this.space.email);\n    }\n\n    /** Total cost of all the orders */\n    public get total(): number {\n        let total = 0;\n        this.orders.forEach((order) => (total += order.total));\n        return total;\n    }\n\n    /** Charge code for orders in the active space */\n    public get charge_code(): string {\n        return (this.orders.length ? this.orders[0].charge_code : '') || '<No Charge code>';\n    }\n\n    /** Currency symbol for orders in active space */\n    public get symbol(): string {\n        const space = (this.space || { level: { building_id: '' } });\n        const building = this._org.buildings.find(\n            (bld) => bld.id === space.level.building_id\n        ) || { currency: 'USD' };\n        return building.currency;\n    }\n\n    /** Notes for orders in active space */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) =>\n                note.type === 'catering' &&\n                note.space === this.space.email &&\n                note.author === this.booking.creator.name\n        );\n        return note ? note.message : '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {}\n\n    /** Store the order details for viewing in another component */\n    public storeOrder(order: CateringOrder) {\n        localStorage.setItem('CONCIERGE.view_order', JSON.stringify(order.toJSON()));\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n\n    /** Open modal to edit catering details for booking */\n    public editMeetingCatering() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n                only_catering: true,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Catering\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"orders\">Orders:</label>\n        <div class=\"value\" name=\"orders\" *ngIf=\"orders.length; else no_orders\">\n            <a\n                mat-button\n                *ngFor=\"let order of orders\"\n                [routerLink]=\"['/catering', 'orders']\"\n                [queryParams]=\"{ view: order.id }\"\n                (click)=\"storeOrder(order)\"\n                mat-dialog-close\n            >\n                <div class=\"details\">\n                    <div class=\"time\">At {{ order.deliver_at_time }}</div>\n                    <div class=\"count\">\n                        {{ order.item_count }} item{{ order.item_count === 1 ? '' : 's' }}\n                    </div>\n                    <div class=\"total\">{{ order.total / 100 | currency: symbol }}</div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"total\">Total:</label>\n        <div class=\"value\" name=\"total\">\n            {{ total / 100 | currency: symbol }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{ charge_code }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button name=\"edit\" (click)=\"editMeetingCatering()\">\n    Edit Catering\n</button>\n<ng-template #no_orders>\n    <div class=\"value\" name=\"orders\">\n        &lt;No Catering Orders&gt;\n    </div>\n</ng-template>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { RECURRENCE_PERIODS } from 'src/app/shared/utilities/formatting.utilities';\nimport { BookingModalComponent } from '../../booking-modal/booking-modal.component';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'meeting-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss'],\n})\nexport class MeetingDetailsDisplayComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Mapping of edited fields */\n    public edited: HashMap<boolean> = {};\n\n    /** Display string for the locations in the booking */\n    public get location() {\n        return this.booking.space_list.map((space) => space.name).join('\\n');\n    }\n    /** Display string for the booking duration */\n    public get duration() {\n        return this.booking ? humaniseDuration(this.booking.duration) : '1 hour';\n    }\n    /** Display string for attendees in booking */\n    public get start_time() {\n        return dayjs(this.booking.date).format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get end_time() {\n        return dayjs(this.booking.date)\n            .add(this.booking.duration, 'm')\n            .format('DD MMM YYYY, h:mm A');\n    }\n    /** Display string for attendees in booking */\n    public get attendees() {\n        return this.booking.attendees.map((person) => person.name).join('\\n');\n    }\n\n    /** Recurrence setting for booking */\n    public get recurrence(): string {\n        const { end, period } = this.booking.recurrence;\n        /* istanbul ignore if */\n        if (!period) {\n            return '<No recurrence>';\n        }\n        const pattern = RECURRENCE_PERIODS.find((i) => i.toLowerCase() === `${period}`);\n        const date = dayjs(end * 1000).format('DD MMM YYYY');\n        return `${pattern} until ${date}`;\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit(): void {\n        Object.values(this.booking.edits || []).forEach(i => {\n            this.edited[i] = true;\n        });\n    }\n\n    public editMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name || booking.organiser.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.organiser.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.organiser?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.organiser?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"booking.creator && booking.creator.email !== booking.organiser.email\" [class.edited]=\"edited.organiser\">\n        <label for=\"host\">Booked By:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.creator?.name || booking.creator.email }}\n        </div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                target=\"_blank\"\n                [href]=\"'mailto:' + booking.creator.email + '?subject=' + booking.title\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></app-icon>\n            </a>\n            <a\n                mat-icon-button\n                [attr.disabled]=\"!booking.creator?.phone\"\n                target=\"_blank\"\n                [href]=\"'tel:' + booking.creator?.phone\"\n            >\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></app-icon>\n            </a>\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.room_id\">\n        <label for=\"location\">Location(s):</label>\n        <div class=\"value\" name=\"location\">\n            {{ location }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.start_epoch\">\n        <label for=\"start-time\">Start:</label>\n        <div class=\"value\" name=\"start-time\">\n            {{ start_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.end_epoch\">\n        <label for=\"end-time\">End:</label>\n        <div class=\"value\" name=\"end-time\">\n            {{ end_time }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.duration\">\n        <label for=\"duration\">Duration:</label>\n        <div class=\"value\" name=\"duration\">\n            {{ duration }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.recurr\">\n        <label for=\"recurrence\">Recurrence:</label>\n        <div class=\"value\" name=\"recurrence\">\n            {{ recurrence }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"edited.attendees\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ attendees }}\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"vc-equipment\">VC Equipment:</label>\n        <div class=\"value\" name=\"vc-equipment\">\n            No\n        </div>\n    </div>\n    <div class=\"field\" [class.edited]=\"false\">\n        <label for=\"notes\">Notes:</label>\n        <div class=\"value html\" name=\"notes\" [innerHTML]=\"booking.body | sanitize:'html'\"></div>\n    </div>\n</div>\n<button class=\"footer\" *ngIf=\"!expired\" mat-button (click)=\"editMeeting()\">\n    Edit Meeting\n</button>\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { DeleteConfirmModalComponent } from '../delete-confirm-modal/delete-confirm-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nexport interface MeetingDetailsModalData {\n    space: Space;\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-meeting-details-modal',\n    templateUrl: './meeting-details-modal.component.html',\n    styleUrls: ['./meeting-details-modal.component.scss'],\n})\nexport class MeetingDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Display string for the loading state */\n    public loading: string;\n    /** Handler for request errors */\n    private _on_error = (message) => (err) => {\n        this._service.notifyError(`${message}. Error: ${err.message || err}`);\n        this.setLoading(null);\n    };\n    /** Booking to view details */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(booking: Booking) {\n        this._data.booking = booking;\n    }\n    /** Space to display booking details for */\n    public get space(): Space {\n        return this._data.space;\n    }\n    /** Type of meeting */\n    public get type(): string {\n        return this.booking.declined ? 'declined' : this.booking.type;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<MeetingDetailsModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: MeetingDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('bookings', this._bookings.booking_list.subscribe(list => {\n            const booking = list.find(bkn => bkn.icaluid === this.booking.icaluid);\n            if (booking) {\n                this.booking = booking;\n            }\n        }));\n    }\n\n    public setLoading(state: string) {\n        this.loading = state;\n        this._dialog_ref.disableClose = !!this.loading;\n    }\n\n    public acceptMeeting() {\n        this.setLoading('Accepting meeting...');\n        const event = this.booking.toJSON();\n        this._bookings\n            .accept(this.booking.id, {\n                concierge: true,\n                host: this.booking.organiser.email,\n                room_id: this.booking.space?.id,\n                icaluid: this.booking.icaluid,\n                start: event.start,\n                end: event.end,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting approved.');\n                for(const space of this.booking.space_list) {\n                    this.booking.approval_status[space.email] = 'accepted';\n                }\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.booking.icaluid), 1, this.booking);\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'approved' });\n\n            }, this._on_error('Unable to approving meeting'));\n    }\n\n    public declineMeeting() {\n        this.setLoading('Declining meeting...');\n        this._bookings\n            .decline(this.booking.id, {\n                booking_id: this.booking.id,\n                organiser: this.booking.organiser.email,\n                icaluid: this.booking.icaluid,\n                start: Math.floor(this.booking.date / 1000),\n                end: Math.floor(this.booking.date / 1000) + this.booking.duration * 60,\n                room_id: this.booking.space.id,\n            })\n            .then(() => {\n                this._service.notifySuccess('Meeting declined.');\n                this.booking.approval_status[this.booking.space.email] = 'declined';\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.booking.icaluid), 1, this.booking);\n                this._bookings.booking_list.next(bookings);\n                this.setLoading(null);\n                this.event.emit({ reason: 'action', metadata: 'declined' });\n\n            }, this._on_error('Unable to declining meeting'));\n    }\n\n    /** Open modal to confirm deletion of booking */\n    public confirmDeleteMeeting() {\n        const ref = this._dialog.open<DeleteConfirmModalComponent>(DeleteConfirmModalComponent);\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'action') {\n                    ref.componentInstance.loading = true;\n                    const success = await this.deleteMeeting().catch(\n                        this._on_error('Error deleting booking')\n                    );\n                    ref.componentInstance.loading = false;\n                    ref.componentInstance.success = !!success;\n                    setTimeout(() => ref.close(), 3000);\n                }\n            })\n        );\n    }\n\n    /** Delete booking */\n    private async deleteMeeting() {\n        this.setLoading('Deleting meeting...');\n        await this.booking.delete();\n        this._service.notifySuccess('Successfully deleted booking');\n        this.setLoading(null);\n        this.event.emit({ reason: 'action', metadata: 'removed' });\n        this._dialog_ref.close();\n        return true;\n    }\n\n    /** Update booking requirements */\n    public async updateRequirements(form) {\n        this.setLoading('Updating requirements...');\n        const value = form.value;\n        const booking = new Booking({\n            ...this.booking.toJSON(),\n            ...value,\n            room_ids: value.space_list.map((space) => space.id),\n        });\n        const new_booking: Booking = (await booking.save().catch((err) => {\n            this._service.notifyError(`Error updating requirements. Error: ${err.message || err}`);\n        })) as any;\n        if (new_booking) {\n            this._data.booking = new_booking;\n            const bookings = this._bookings.booking_list.getValue();\n            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === new_booking.icaluid), 1, new_booking);\n            this._bookings.booking_list.next(bookings);\n            this._service.notifySuccess('Successfully updated requirements');\n\n        }\n        this.setLoading(null);\n    }\n}\n","<header [class]=\"type\">\n    <div class=\"time\">{{ booking.time_period }}</div>\n    <div class=\"heading\">{{ booking?.title }}</div>\n    <div class=\"actions\">\n        <button mat-icon-button name=\"menu\" [matMenuTriggerFor]=\"appMenu\" *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'more_vert' }\"\n            ></app-icon>\n        </button>\n        <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n            ></app-icon>\n        </button>\n    </div>\n</header>\n<mat-dialog-content [class]=\"type\">\n    <main *ngIf=\"!loading; else load_state\">\n        <div class=\"block\">\n            <meeting-details [booking]=\"booking\" [space]=\"space\"></meeting-details>\n        </div>\n        <div class=\"block\">\n            <meeting-details-requirements\n                [booking]=\"booking\"\n                [space]=\"space\"\n                (event)=\"updateRequirements($event)\"\n            ></meeting-details-requirements>\n        </div>\n        <div class=\"block\">\n            <meeting-catering [booking]=\"booking\" [space]=\"space\"></meeting-catering>\n        </div>\n        <div class=\"block\">\n            <meeting-private-details [booking]=\"booking\" [space]=\"space\"></meeting-private-details>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-menu #appMenu=\"matMenu\">\n    <button mat-menu-item name=\"accept\" (click)=\"acceptMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_available' }\"\n            ></app-icon>\n            Accept Meeting\n        </div>\n    </button>\n    <button mat-menu-item name=\"decline\" (click)=\"declineMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'event_busy' }\"\n            ></app-icon>\n            Decline Meeting\n        </div>\n    </button>\n    <button mat-menu-item [class.error]=\"true\" name=\"delete\" (click)=\"confirmDeleteMeeting()\">\n        <div class=\"group\">\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'delete' }\"\n            ></app-icon>\n            Delete Meeting\n        </div>\n    </button>\n</mat-menu>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { PrivateDetailsModalComponent } from '../../private-details-modal/private-details-modal.component';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-private-details',\n    templateUrl: './private-details.component.html',\n    styleUrls: ['./private-details.component.scss'],\n})\nexport class MeetingPrivateDetailsComponent implements OnInit {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n\n    public get setup(): string {\n        let setup = this.booking.setup[this.space.email];\n        if (setup > 120) {\n            setup = Math.floor(setup / 60);\n        }\n        return setup ? humaniseDuration(setup) : '<No Setup time>';\n    }\n\n    public get breakdown(): string {\n        let breakdown = this.booking.breakdown[this.space.email];\n        if (breakdown > 120) {\n            breakdown = Math.floor(breakdown / 60);\n        }\n        return breakdown ? humaniseDuration(breakdown) : '<No Breakdown time>';\n    }\n\n    public get notes() {\n        return (this.booking.notes.find(note => note.type === 'private') || {}).message;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    ngOnInit(): void {}\n\n    public openPrivateDetailsModal() {\n        this._dialog.open(PrivateDetailsModalComponent, {\n            data: {\n                booking: this.booking,\n            },\n        });\n    }\n}\n","<div class=\"heading\">\n    Private Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"setup\">Setup:</label>\n        <div class=\"value\" name=\"setup\">\n            {{ setup }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"breakdown\">Breakdown:</label>\n        <div class=\"value\" name=\"breakdown\">\n            {{ breakdown }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes || '&lt;No Notes&gt;' }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openPrivateDetailsModal()\">\n    Edit Private Details\n</button>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RequirementDetailsModalComponent, RequirementDetailsModalData } from '../../requirement-details-modal/requirement-details-modal.component';\nimport { generateBookingForm } from 'src/app/services/data/bookings/booking.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\n@Component({\n    selector: 'meeting-details-requirements',\n    templateUrl: './requirements.component.html',\n    styleUrls: ['./requirements.component.scss'],\n})\nexport class MeetingDetailsRequirementsComponent extends BaseDirective {\n    /** Booking to display details */\n    @Input() public booking: Booking;\n    /** Space to display details */\n    @Input() public space: Space;\n    /** Emitter for changes to the booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Emitter for updating booking */\n    @Output() public event = new EventEmitter();\n\n    /** Requirement notes */\n    public get notes(): string {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'equipment' && this.space.email === note.space\n        );\n        return (note ? note.message : '') || '<No Notes>';\n    }\n\n    /** Whether booking has been declined or ended */\n    public get expired(): boolean {\n        return this.booking.status === 'done' || this.booking.declined;\n    }\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {\n        super();\n    }\n\n\n    /** Open modal for adding equipment requirements to booking */\n    public openEquipmentDetailsModal() {\n        const form = generateBookingForm(this.booking, ['space_list']);\n        const ref = this._dialog.open<\n            RequirementDetailsModalComponent,\n            RequirementDetailsModalData\n        >(RequirementDetailsModalComponent, {\n            maxWidth: '95vw',\n            width: '32em',\n            data: {\n                spaces: form.controls.space_list.value,\n                notes_field: form.controls.notes,\n                codes_field: form.controls.equipment_codes,\n                head_counts_field: form.controls.expected_attendees,\n                standalone: true\n            }\n        });\n        this.subscription(\n            'modal_events',\n            ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    ref.close();\n                    this.event.emit(form);\n                }\n            })\n        );\n    }\n}\n","<div class=\"heading\">\n    Room Requirements\n</div>\n<div class=\"content\" *ngIf=\"booking\">\n    <div class=\"field\">\n        <label for=\"location\">Location:</label>\n        <div class=\"value\" name=\"location\">\n            {{ space.name || booking.space_list[0]?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"expected\">Expected Attendees:</label>\n        <div class=\"value\" name=\"expected\">\n            {{\n                (booking.expected_attendees || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '0'\n            }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"charge-code\">Charge Code:</label>\n        <div class=\"value\" name=\"charge-code\">\n            {{\n                (booking.equipment_codes || {})[\n                    space.email || booking.space_list[0]?.email\n                ] || '&lt;No Charge Code&gt;'\n            }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"notes\">Private Notes:</label>\n        <div class=\"value\" name=\"notes\">\n            {{ notes }}\n        </div>\n    </div>\n</div>\n<button class=\"footer\" mat-button (click)=\"openEquipmentDetailsModal()\">\n    Edit Requirements\n</button>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { generateUserForm } from 'src/app/services/data/users/user.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from '../../shared/utilities/types.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    templateUrl: './new-user-modal.component.html',\n    styleUrls: ['./new-user-modal.component.scss'],\n})\nexport class NewUserModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form: FormGroup;\n    /** New user data store */\n    public user: User;\n    /** Whether user details are being saved */\n    public loading: boolean;\n\n    public ngOnInit(): void {\n        this.user = new User({});\n        this.form = generateUserForm(this.user);\n    }\n\n    public saveChanges() {\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            if (!this.form.controls.email.value) {\n                this.form.controls.email.setValue(\n                    `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`\n                );\n            }\n            const new_user = new User({\n                ...this.form.value,\n                name: `${this.form.value.first_name} ${this.form.value.last_name}`,\n                type: 'external',\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","<header>\n    <h3 mat-dialog-title>Add External Attendee</h3>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<div class=\"body\" *ngIf=\"!loading; else load_state\">\n    <user-form [form]=\"form\"></user-form>\n</div>\n<footer *ngIf=\"!loading\">\n    <button mat-button class=\"inverse\" mat-dialog-close>Cancel</button>\n    <button mat-button (click)=\"saveChanges()\">Save</button>\n</footer>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">\n                Saving attendee...\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { NewUserModalComponent } from './new-user-modal/new-user-modal.component';\nimport { SpaceSelectModalComponent } from './space-select-modal/space-select-modal.component';\nimport { RecurrenceModalComponent } from './recurrence-modal/recurrence-modal.component';\nimport { MeetingDetailsModalComponent } from './meeting-details-modal/meeting-details-modal.component';\nimport { MeetingDetailsDisplayComponent } from './meeting-details-modal/details/details.component';\nimport { MeetingDetailsRequirementsComponent } from './meeting-details-modal/requirements/requirements.component';\nimport { MeetingCateringDetailsComponent } from './meeting-details-modal/catering/catering.component';\nimport { MeetingPrivateDetailsComponent } from './meeting-details-modal/private-details/private-details.component';\nimport { PrivateDetailsModalComponent } from './private-details-modal/private-details-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { RequirementDetailsModalComponent } from './requirement-details-modal/requirement-details-modal.component';\nimport { RecurrenceSpacesModalComponent } from './recurrence-spaces-modal/recurrence-spaces-modal.component';\nimport { PackageOptionsModalComponent } from './package-options-modal/package-options-modal.component';\nimport { CateringDetailsModalComponent } from './catering-details-modal/catering-details-modal.component';\nimport { BookingCateringConfirmModalComponent } from './catering-confirm-modal/catering-confirm-modal.component';\nimport { BookingConfirmComponent } from './booking-confirm/booking-confirm.component';\nimport { BookingCateringComponent } from './booking-modal/catering/catering.component';\nimport { BookingFindSpaceComponent } from './booking-modal/find-space/find-space.component';\nimport { BookingSpaceFiltersComponent } from './booking-modal/find-space/filters/filters.component';\nimport { BookingSpaceItemComponent } from './booking-modal/find-space/item/item.component';\nimport { BookingSpaceFlowFormComponent } from './booking-modal/form/form.component';\nimport { BookingCateringOrderDetailsComponent } from './booking-modal/catering/order-details/order-details.component';\nimport { BookingCateringOrderListComponent } from './booking-modal/catering/order-list/order-list.component';\nimport { CateringOrderListItemComponent } from './booking-modal/catering/order-list/item/item.component';\nimport { CateringMenuCategoryComponent } from './booking-modal/catering/order-details/category/category.component';\nimport { CateringMenuItemComponent } from './booking-modal/catering/order-details/item/item.component';\nimport { DeleteConfirmModalComponent } from './delete-confirm-modal/delete-confirm-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    NewUserModalComponent,\n    SpaceSelectModalComponent,\n    RecurrenceModalComponent,\n    MeetingDetailsModalComponent,\n    PrivateDetailsModalComponent,\n    BookingModalComponent,\n    RequirementDetailsModalComponent,\n    BookingCateringOrderDetailsComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS,\n        MeetingDetailsDisplayComponent,\n        MeetingDetailsRequirementsComponent,\n        MeetingCateringDetailsComponent,\n        MeetingPrivateDetailsComponent,\n        RecurrenceSpacesModalComponent,\n        PackageOptionsModalComponent,\n        CateringDetailsModalComponent,\n        BookingCateringConfirmModalComponent,\n        BookingConfirmComponent,\n        BookingSpaceFlowFormComponent,\n        BookingCateringComponent,\n        BookingFindSpaceComponent,\n        BookingSpaceFiltersComponent,\n        BookingSpaceItemComponent,\n        BookingCateringComponent,\n        BookingCateringOrderListComponent,\n        CateringOrderListItemComponent,\n        CateringMenuCategoryComponent,\n        CateringMenuItemComponent,\n        DeleteConfirmModalComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild([])\n    ],\n    exports: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\n\nexport interface PackageOptionsModalData {\n    item: CateringCategory;\n}\n\nexport function checkItemRequirements(category: CateringCategory): boolean {\n    const items = category.items || [];\n    return category.must_select >= items.length\n        ? items.reduce((valid, item) => valid && checkItemRequirements(item as any), true)\n        : items.reduce((amount, item) => amount + (item.amount ? 1 : 0), 0) ===\n              category.must_select;\n}\n\nexport function getActiveItems(category: CateringCategory): HashMap<string> {\n    let map = {};\n    if (category.items) {\n        const item = category.items.find(item  => item.amount > 0);\n        if (item) {\n            map[category.id] = item.id;\n        }\n        category.items.forEach(item => map = { ...map, ...getActiveItems(item as any) })\n    }\n    return map;\n}\n\n@Component({\n    selector: 'a-package-options-modal',\n    templateUrl: './package-options-modal.component.html',\n    styleUrls: ['./package-options-modal.component.scss']\n})\nexport class PackageOptionsModalComponent {\n    /** Emitter for user actions on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    /** Item to select options for */\n    public get item(): CateringCategory {\n        return this._data.item;\n    }\n\n    /** Whether package requirements have been met */\n    public get requirements_met(): boolean {\n        return checkItemRequirements(this.item);\n    }\n\n    public get active_items(): HashMap<string> {\n        return getActiveItems(this.item);\n    }\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: PackageOptionsModalData) {}\n\n    /**\n     * Update the list of selected items\n     */\n    public updateAmount(a_package: CateringCategory, option: CateringItem, state: boolean) {\n        if (state) {\n            const needed = a_package.must_select;\n            const active = a_package.items.filter(an_item => an_item.amount > 0).length;\n            if (active >= needed) {\n                const item = a_package.items.find(an_item => an_item.amount > 0);\n                item.setAmount(0);\n            }\n            option.setAmount(1);\n        } else {\n            option.setAmount(0);\n        }\n    }\n}\n","<header>\n    <h3 i18n=\"Catering package options header\">Package Options</h3>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <ng-container *ngTemplateOutlet=\"item_display; context: { package: item }\"></ng-container>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button [disabled]=\"!requirements_met\" (click)=\"event.emit({ reason: 'done' })\" i18n=\"Catering package options save action\">\n            Confirm Options\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #item_display let-package=\"package\">\n    <ng-container *ngIf=\"package.items && package.items.length\">\n        <mat-radio-group [ngModel]=\"active_items[package.id]\">\n            <div class=\"item\" *ngFor=\"let option of package.items\" [attr.to-select]=\"option.must_select\">\n            <ng-container\n                *ngIf=\"\n                    package.must_select &&\n                    package.must_select < package.items.length &&\n                    !option.must_select\n                \"\n            >\n                <mat-checkbox\n                    *ngIf=\"package.must_select > 1\"\n                    [checked]=\"!!option.amount\"\n                    (change)=\"updateAmount(package, option, $event.checked)\"\n                >\n                    {{ option.name }}\n                </mat-checkbox>\n                <mat-radio-button\n                    *ngIf=\"package.must_select === 1\"\n                    [value]=\"option.id\"\n                    (change)=\"updateAmount(package, option, true)\"\n                >\n                    {{ option.name }}\n                </mat-radio-button>\n            </ng-container>\n            <ng-container *ngIf=\"package.must_select >= package.items.length || option.must_select\">\n                {{ option.name }}\n            </ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"item_display; context: { package: option }\"\n            ></ng-container>\n        </div>\n    </mat-radio-group>\n    </ng-container>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { humaniseDuration } from 'src/app/shared/utilities/general.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface PrivateDetailsModalData {\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-private-details-modal',\n    templateUrl: './private-details-modal.component.html',\n    styleUrls: ['./private-details-modal.component.scss'],\n})\nexport class PrivateDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form Fields for private details */\n    public form: FormGroup;\n    /** Whether changes are being saved */\n    public loading: boolean;\n    /** List of available durations for setup and breakdown */\n    public available_durations: Identity[] = new Array(5)\n        .fill(0)\n        .map((_, i) => ({ id: i * 15, name: humaniseDuration(i * 15) || '0 minutes' }));\n\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<PrivateDetailsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: PrivateDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const note = this.booking.notes.find(\n            (note) => note.type === 'private' && note.space === this.booking.space.email\n        ) || { message: '' };\n        this.form = new FormGroup({\n            setup: new FormControl(this.booking.setup[this.booking.space.email] || 0),\n            breakdown: new FormControl(this.booking.breakdown[this.booking.space.email] || 0),\n            notes: new FormControl(note.message),\n        });\n    }\n\n    public saveChanges() {\n        if (this.form.dirty) {\n            const old_notes = this.booking.notes.filter(\n                (note) => !(note.type === 'private' && note.space === this.booking.space.email)\n            );\n            const notes = [\n                ...old_notes,\n                {\n                    type: 'private',\n                    date: dayjs().valueOf(),\n                    message: this.form.value.notes,\n                    author: this._users.current.name,\n                    space: this.booking.space.email,\n                } as BookingNote,\n            ];\n            const value = this.form.value;\n            const setup = { ...this.booking.setup };\n            setup[this.booking.space.email] = value.setup * 60;\n            const breakdown = { ...this.booking.breakdown };\n            breakdown[this.booking.space.email] = value.breakdown * 60;\n            const new_booking = new Booking({\n                ...this.booking.toJSON(),\n                setup,\n                breakdown,\n                notes,\n            });\n            this.loading = true;\n            this._dialog_ref.disableClose = true;\n            this._bookings.save(new_booking).then(\n                (booking) => {\n                    const bookings = this._bookings.booking_list.getValue();\n                    bookings.splice(bookings.findIndex(bkn => bkn.icaluid === booking.icaluid), 1, booking);\n                    this._bookings.booking_list.next(bookings);\n                    this._service.notifySuccess('Successfully updated private details');\n                    this.event.emit({ reason: 'done', metadata: booking });\n                    this._dialog_ref.close();\n\n                },\n                (err) => {\n                    this._dialog_ref.disableClose = false;\n                    this._service.notifyError(\n                        `Unable to save changes to private details. Error: ${err.message || err}`\n                    );\n                    this.loading = false;\n                }\n            );\n        } else {\n            this._dialog_ref.close();\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">Edit Private Details</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\">\n                <label for=\"setup\">Setup:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"setup\" formControlName=\"setup\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"breakdown\">Breakdown:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"breakdown\" formControlName=\"breakdown\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let duration of available_durations\" [value]=\"duration.id\">\n                            {{ duration.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"notes\">Notes:</label>\n                <mat-form-field name=\"notes\" appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        placeholder=\"Private Notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"saveChanges()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div classs=\"text\">Updating private details...</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, Identity } from '../../shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BookingRecurrenceDetails } from 'src/app/services/data/bookings/booking.interfaces';\n\nexport interface RecurrenceModalData {\n    /** Current recurrence details */\n    details: BookingRecurrenceDetails;\n    /** Currently set date for the booking */\n    date: number;\n}\n\nexport const RECURRENCE_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)'\n};\n\n@Component({\n    selector: 'recurrence-modal',\n    templateUrl: './recurrence-modal.component.html',\n    styleUrls: ['./recurrence-modal.component.scss']\n})\nexport class RecurrenceModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for recurrence */\n    public form: FormGroup;\n    /** Loading state */\n    public loading: string;\n    /** Available recurrence periods */\n    public periods: Identity[] = [\n        { id: 'None', name: 'None' },\n        { id: 'Daily', name: 'Daily' },\n        { id: 'Weekly', name: 'Weekly' },\n        { id: 'Biweekly', name: 'Biweekly' },\n        { id: 'Monthly', name: 'Monthly' },\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            period: new FormControl(this._data.details.period || 'none'),\n            end: new FormControl(this._data.details.end || this._data.date, [Validators.required]),\n        });\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public save() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.loading = 'Adding recurrence data to booking...';\n            this.event.emit({ reason: 'done', metadata: { ...this._data.details, ...this.form.value } });\n        }\n    }\n}\n","<header>\n    <div class=\"heading\" mat-dialog-title>Booking Recurrence</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"field\" *ngIf=\"form.controls.period && periods.length > 1\">\n                <label for=\"period\">Period: </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select name=\"period\" formControlName=\"period\" placeholder=\"None\">\n                        <mat-option *ngFor=\"let type of periods\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"field\" *ngIf=\"form.controls.end\">\n                <label\n                    for=\"end\"\n                    [class.error]=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End Date<span>*</span>:\n                </label>\n                <a-date-field name=\"end\" formControlName=\"end\"></a-date-field>\n                <div\n                    class=\"error-message\"\n                    *ngIf=\"form.controls.end.errors && form.controls.end.touched\"\n                >\n                    End date needs to be in the future\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button (click)=\"save()\">Add to Booking</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <div class=\"body\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { Space, RecurrenceAvailability } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { SpaceSelectModalComponent, SpaceSelectModalData } from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingRecurrenceSpaceDetails } from 'src/app/services/data/bookings/booking.interfaces';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nexport interface RecurrenceSpacesModalData {\n    /** Space that has recurrence unavailability */\n    space: Space;\n    /** Duration of the booking */\n    duration: number;\n    /** Duration of the booking */\n    host: User;\n    /** List of current conflict matchups */\n    conflicts: BookingRecurrenceSpaceDetails[];\n}\n\nexport interface OccurrenceDetails extends RecurrenceAvailability {\n    /** Display string for the occurence datetime */\n    date_string: string;\n    /** Name of the space that replaces the space on this occurrence */\n    replaced_by: string;\n}\n\n@Component({\n    selector: 'a-recurrence-spaces-modal',\n    templateUrl: './recurrence-spaces-modal.component.html',\n    styleUrls: ['./recurrence-spaces-modal.component.scss']\n})\nexport class RecurrenceSpacesModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of occurence details for space booking */\n    public occurrences: OccurrenceDetails[] = [];\n    /** List of space details for occurrences */\n    public space_details: BookingRecurrenceSpaceDetails[] = []\n\n    /** Space to setup recurrence for */\n    public get space(): Space {\n        return this._data.space;\n    }\n\n    /** Whether all occurences have a valid space */\n    public get occurrences_valid(): boolean {\n        return this.occurrences.reduce((valid, event) => valid && (event.available || !!event.replaced_by), true);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: RecurrenceSpacesModalData,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.space_details = [].concat(this._data.conflicts || []);\n        this.updateOccurrences();\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.space_details });\n    }\n\n    public selectSpace(occurrence: OccurrenceDetails) {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: [],\n                    zone_ids: this.space.level.building_id,\n                    date: occurrence.date * 1000,\n                    duration: this._data.duration,\n                    host: this._data.host,\n                    multiple: false\n                }\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe(event => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const space = event.metadata[0];\n                    /* istanbul ignore else */\n                    if (space) {\n                        this.space_details.unshift({\n                            date: occurrence.date,\n                            space: space.email,\n                            replaces: this.space.email\n                        });\n                        this.space_details = unique(this.space_details, 'date');\n                    }\n                    this.updateOccurrences();\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    private updateOccurrences() {\n        this.occurrences = this._data.space.recurr_available.map(event => {\n            const space_details = this.space_details.find(details => details.date === event.date && details.replaces === this.space.email);\n            const email = (space_details || {}).space;\n            const space = this._spaces.find(email) || { email, name: email };\n            return {\n                ...event,\n                date_string: dayjs(event.date * 1000).format('dddd, DD MMMM YYYY'),\n                replaced_by: space.name\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\" i18n=\"Space recurrence header\">Recurrence - {{ space.name }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"info\" i18n=\"Space recurrence information\">\n            * Select individual dates to update selected space\n        </div>\n        <div class=\"item\" *ngFor=\"let item of occurrences\">\n            <div class=\"date\">{{ item.date_string }}</div>\n            <div class=\"action\">\n                <button\n                    mat-button\n                    [class.inverse]=\"!item.available && !item.replaced_by\"\n                    (click)=\"selectSpace(item)\"\n                >\n                    <div class=\"content\">\n                        {{ item.replaced_by || (item.available ? space.name : 'Find Room') }}\n                    </div>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button\n            mat-button\n            [disabled]=\"!occurrences_valid\"\n            (click)=\"save()\"\n            i18n=\"Space recurrence save action\"\n        >\n            Add to Booking\n        </button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface RequirementDetailsModalData {\n    spaces: Space[];\n    notes_field: AbstractControl;\n    codes_field: AbstractControl;\n    head_counts_field: AbstractControl;\n    standalone?: boolean\n}\n\n@Component({\n    selector: 'a-requirement-details-modal',\n    templateUrl: './requirement-details-modal.component.html',\n    styleUrls: ['./requirement-details-modal.component.scss']\n})\nexport class RequirementDetailsModalComponent implements OnInit {\n    /** Emitter for modal events */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Mapping of spaces to notes */\n    public notes: HashMap<string> = {};\n    /** Mapping of spaces to cost codes */\n    public codes: HashMap<string> = {};\n    /** Mapping of spaces to estimated head count */\n    public head_counts: HashMap<string> = {};\n    /** Mapping of spaces to form fields */\n    public form: HashMap<FormGroup> = {};\n    /** Map of spaces to whether they need a charge code */\n    public needs_charge_code: HashMap<boolean> = {};\n    /** Index of the active space */\n    public active_space: number = 0;\n\n    /** List of selected spaces */\n    public get space_list(): Space[] {\n        return this._data.spaces;\n    }\n\n    public get active_form(): FormGroup {\n        return this.form[this.space_list[this.active_space].email];\n    }\n\n    /** Whether form fields are valid */\n    public get is_valid(): boolean {\n        return this.space_list.reduce((valid, space) => valid && this.form[space.email].valid, true);\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _users: UsersService,\n        @Inject(MAT_DIALOG_DATA) private _data: RequirementDetailsModalData\n    ) {}\n\n    public ngOnInit(): void {\n        const note_list = this._data.notes_field.value\n            .filter((note: BookingNote) => note.type === 'equipment');\n        this.notes = note_list.reduce((map, note) => {\n            map[note.space] = note.message;\n            return map;\n        }, {});\n        this.codes = { ...this._data.codes_field.value };\n        this.head_counts = { ...this._data.head_counts_field.value };\n        this.generateFormFields();\n    }\n\n    public submit(): void {\n        this.space_list.forEach(space => this.form[space.email].markAllAsTouched());\n        /* istanbul ignore else */\n        if (this.is_valid) {\n            // Update notes\n            const notes = this._data.notes_field.value\n                .filter((note: BookingNote) => note.type !== 'equipment');\n            const new_notes = this.space_list.map(space => ({\n                author: this._users.current.name,\n                type: 'equipment',\n                message: this.form[space.email].controls.notes.value,\n                space: space.email,\n                date: dayjs().valueOf()\n            } as BookingNote));\n            this._data.notes_field.setValue(notes.concat(new_notes).filter(note => note.message));\n            this._data.codes_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.code.value;\n                return map;\n            }, {}));\n            this._data.head_counts_field.setValue(this.space_list.reduce((map, space) => {\n                map[space.email] = this.form[space.email].controls.head_count.value;\n                return map;\n            }, {}));\n            this.event.emit({ reason: 'done' });\n        }\n    }\n\n    /** Generate form fields for each space */\n    private generateFormFields(): void {\n        for (const space of this.space_list) {\n            const building = this._org.buildings.find(\n                bld => bld.id === space.level.building_id\n            );\n            this.needs_charge_code[space.email] = building?.required?.equipment_code || false;\n            this.form[space.email] = new FormGroup({\n                notes: new FormControl(this.notes[space.email] || ''),\n                code: new FormControl(\n                    this.codes[space.email] || '',\n                    this.needs_charge_code[space.email] ? [Validators.required] : []\n                ),\n                head_count: new FormControl(this.head_counts[space.email] || '', [Validators.required])\n            });\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"tabs\">\n        <mat-tab-group [(selectedIndex)]=\"active_space\">\n            <mat-tab\n                *ngFor=\"let space of space_list\"\n                [label]=\"space.name + (form[space.email].invalid && form[space.email].touched ? '*' : '')\"\n            ></mat-tab>\n        </mat-tab-group>\n    </div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <img src=\"assets/img/equipment.svg\" />\n            <div class=\"text\" i18n=\"Booking equipment information\">\n                Would you like to add equipment to your booking's spaces?\n            </div>\n        </div>\n        <form *ngIf=\"space_list[active_space] && active_form\" [formGroup]=\"active_form\">\n            <div class=\"field\">\n                <label for=\"equipment-notes\" i18n=\"Booking equipment notes label\">\n                    (eg - particular room configurations or specific equipment etc) Additional\n                    requests are handled in confidence\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"equipment-notes\"\n                        formControlName=\"notes\"\n                        placeholder=\"Add notes here...\"\n                        i18n-placeholder\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"fieldset\">\n                <div class=\"field\">\n                    <label\n                        for=\"charge-code\"\n                        [class.error]=\"\n                            active_form.controls.code.touched && active_form.controls.code.invalid\n                        \"\n                        i18n=\"Booking equipment charge code label\"\n                    >\n                        Charge Code<span *ngIf=\"needs_charge_code[space_list[active_space].email]\"\n                            >*</span\n                        >\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"charge-code\"\n                            formControlName=\"code\"\n                            placeholder=\"Charge Code\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment charge code hint\">\n                            <span>Note:</span> Your booking will be confirmed before you are\n                            charged.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment charge code error\">\n                            Charge Code is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"field\">\n                    <label\n                        for=\"head-count\"\n                        [class.error]=\"\n                            active_form.controls.head_count.touched &&\n                            active_form.controls.head_count.invalid\n                        \"\n                        i18n=\"Booking equipment headcount label\"\n                    >\n                        Headcount Estimate<span>*</span>\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"head-count\"\n                            formControlName=\"head_count\"\n                            type=\"number\"\n                            placeholder=\"e.g. 12\"\n                            i18n-placeholder\n                        />\n                        <mat-hint i18n=\"Booking equipment headcount hint\">\n                            <span>Note:</span> This estimate is used to calculate catering and/or\n                            assign rooms. Please keep updated of any changes.\n                        </mat-hint>\n                        <mat-error i18n=\"Booking equipment headcount error\">\n                            Headcount Estimate is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button (click)=\"submit()\">Add to booking</button>\n    </footer>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Space, SpaceBookingRuleOptions } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { Identity, HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\nexport interface SpaceSelectModalData {\n    /** List of selected spaces */\n    spaces: Space[];\n    /** Start time for availability of spaces */\n    date: number;\n    /** Duration of the availability block to look for */\n    duration: number;\n    /** Host of the booking being made */\n    host: User;\n    /** Whether multiple spaces can be selected */\n    multiple: boolean;\n    /** Force zone ids */\n    zone_ids?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    templateUrl: './space-select-modal.component.html',\n    styleUrls: ['./space-select-modal.component.scss']\n})\nexport class SpaceSelectModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether space list is being loaded */\n    public loading: boolean;\n    /** List of available spaces to select from */\n    public spaces: Space[] = [];\n    /** Active building to filter spaces on */\n    public active_building: Building;\n    /** Active building to filter spaces on */\n    public active_type: Identity;\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n    /** List of currently selected spaces */\n    public selected_spaces: Space[] = [];\n    /** Mapping as to whether a space is by request */\n    public request_map: HashMap<boolean> = {};\n    /** Whether selected list should be shown on mobile */\n    public show_list: boolean;\n\n    /** List of available buildings */\n    public types: Identity[] = []\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._data.multiple;\n    }\n\n    public get has_zone(): boolean {\n        return !!this._data.zone_ids;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.selected_spaces = [].concat(this._data.spaces || []);\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const zone_ids: string[] = [];\n                /* istanbul ignore else */\n                if (this.active_building) {\n                    zone_ids.push(this.active_building.id);\n                }\n                /* istanbul ignore else */\n                if (this.active_type) {\n                    zone_ids.push(`${this.active_type.id}`);\n                }\n                return this._spaces.available({\n                    zone_ids: this._data.zone_ids || zone_ids.join(','),\n                    date: this._data.date,\n                    duration: this._data.duration\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                this.loading = false;\n                const selected = this.selected_spaces;\n                return list.filter((item: any) => !selected.find(space => space.id === item.id));\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.spaces = list;\n                this.update();\n            })\n        );\n        this.active_building = this._org.building;\n        this.types = [{ id: '', name: 'Any Space Type' } as any].concat(\n            this._org.space_types || []\n        );\n        this.active_type = this.types[0];\n        this.search$.next('');\n    }\n\n    /** Add space to selected list */\n    public addSpace(space: Space) {\n        this.selected_spaces.push(space);\n        this.selected_spaces = unique(this.selected_spaces, 'id');\n    }\n\n    /** Remove space from selected list */\n    public removeSpace(space: Space) {\n        this.selected_spaces = this.selected_spaces.filter(a_space => a_space.id !== space.id);\n    }\n\n    /** Emit current state of the selected list */\n    public save(list: Space[]) {\n        this.event.emit({ reason: 'done', metadata: list });\n    }\n\n    private update() {\n        const map = {};\n        const options: SpaceBookingRuleOptions = {\n            date: this._data.date,\n            duration: this._data.duration,\n            host: this._data.host\n        };\n        this.selected_spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.spaces.forEach(space => (map[space.id] = space.byRequest(options)));\n        this.request_map = map;\n    }\n}\n","<header>\n    <div class=\"heading\">Select meeting space{{ multiple ? 's' : '' }}</div>\n    <button mat-icon-button mat-dialog-close>\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main>\n        <div class=\"block available\">\n            <ng-container *ngIf=\"!has_zone\">\n                <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_building\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                            {{ building.code }} - {{ building.name\n                            }}{{ building.address ? ', ' + building.address : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" *ngIf=\"types && types.length > 1\">\n                    <mat-select\n                        #select\n                        [(value)]=\"active_type\"\n                        (valueChange)=\"search$.next(active_building.id + '|' + active_type.id)\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <div class=\"list\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container *ngIf=\"spaces && spaces.length; else empty_state\">\n                        <div class=\"item\" *ngFor=\"let space of spaces\">\n                            <div class=\"details\">\n                                <div class=\"name\">{{ space.name }}</div>\n                                <div class=\"info\">{{ space.level.name }}</div>\n                            </div>\n                            <div class=\"capacity\">\n                                <app-icon\n                                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                                ></app-icon>\n                                <div class=\"text\">{{ space.capacity || '0' }}</div>\n                            </div>\n                            <div class=\"actions\">\n                                <button\n                                    mat-button\n                                    (click)=\"multiple ? addSpace(space) : save([space])\"\n                                >\n                                    Select\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"block selected\" *ngIf=\"multiple\" [class.show]=\"show_list\">\n            <h3>Selected spaces</h3>\n            <div class=\"list\">\n                <ng-container\n                    *ngIf=\"selected_spaces && selected_spaces.length; else empty_select_state\"\n                >\n                    <div class=\"item\" *ngFor=\"let space of selected_spaces\">\n                        <div\n                            class=\"icon\"\n                            [class.request]=\"request_map[space.id]\"\n                            [matTooltip]=\"\n                                request_map[space.id]\n                                    ? 'Bookings in this space need to be approved by a member of the concierge team'\n                                    : ''\n                            \"\n                        >\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: request_map[space.id] ? 'warning' : 'done'\n                                }\"\n                            ></app-icon>\n                        </div>\n                        <div class=\"details\">\n                            <div class=\"name\">{{ space.name }}</div>\n                            <div class=\"info\">{{ space.level.name }}</div>\n                        </div>\n                        <div class=\"capacity\">\n                            <app-icon\n                                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'account_circle' }\"\n                            ></app-icon>\n                            <div class=\"text\">{{ space.capacity || '0' }}</div>\n                        </div>\n                        <div class=\"actions\">\n                            <button mat-icon-button (click)=\"removeSpace(space)\">\n                                <app-icon\n                                    [icon]=\"{ class: 'material-icons', content: 'close' }\"\n                                ></app-icon>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <footer>\n                <button mat-button (click)=\"save(this.selected_spaces)\">Add to booking</button>\n            </footer>\n            <button mat-icon-button [class.close]=\"true\" [class.mobile-only]=\"true\" (click)=\"show_list = false\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n            </button>\n            <div class=\"tag mobile-only\">\n                <button mat-icon-button (click)=\"show_list = true\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'list' }\"></app-icon>\n                </button>\n            </div>\n        </div>\n    </main>\n</mat-dialog-content>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"48\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading available spaces...</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No available spaces</div>\n    </div>\n</ng-template>\n<ng-template #empty_select_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No selected spaces</div>\n    </div>\n</ng-template>\n","import { Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SwUpdate } from '@angular/service-worker';\nimport { first } from 'rxjs/operators';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ComposerService } from '@placeos/composer';\nimport { PlaceOSOptions } from '@placeos/ts-client';\nimport { HeapIoService } from '@acaprojects/ngx-heap-io';\n\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { ConsoleStream, SettingsService } from './settings.service';\nimport { ApplicationLoadingState } from '../shared/utilities/types.utilities';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { ComposerSettings, ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { ServiceManager } from './data/service-manager.class';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: {\n        [key: string]: BehaviorSubject<any> | Subject<any>;\n    } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _hotkeys: HotkeysService,\n        private _composer: ComposerService,\n        private _analytics: HeapIoService,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n        ServiceManager.setService(ApplicationService, this);\n        this.set('system', null);\n        this.set('title', 'Home');\n        this.set('loading', {});\n        this.set('APP.breakdown', false);\n        this.set('CONCIERGE.legend', {});\n        this.set('CONCIERGE.pending_bookings', {});\n        this.set('CONCIERGE.day_view.viewing', null);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this._zone.run(() => {\n                this._stable = true;\n                this.log('APP', `Application has stablised.`);\n                this.setupCache();\n                this.waitForSettings();\n            });\n        });\n    }\n\n    public get Bindings() {\n        return this._composer.bindings;\n    }\n    /** Analytics service */\n    public get Analytics() {\n        return {};\n    }\n    /** Analytics service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this.set('title', value);\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return this._composer.auth.api_endpoint + '/';\n    }\n\n    /** Whether settings has been loaded */\n    public get has_settings(): boolean {\n        return this._settings.is_initialised;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param message Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     * @param icon Icon to render to the left of the notification message\n     */\n    public notify(\n        type: string,\n        message: string,\n        action: string = 'OK',\n        on_action?: () => void,\n        icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'info',\n        }\n    ): void {\n        const snackbar_ref = this._snackbar.open(message, action, {\n            panelClass: [type],\n            duration: 5000,\n        });\n        this.subscription(\n            'snackbar_close',\n            snackbar_ref.afterDismissed().subscribe(() => {\n                this.unsub('snackbar_close');\n                this.unsub('notify');\n            })\n        );\n        if (action) {\n            on_action = on_action || (() => snackbar_ref.dismiss());\n            this.subscription(\n                'notify',\n                snackbar_ref.onAction().subscribe(() => on_action())\n            );\n        }\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'done',\n        };\n        console.debug(msg);\n        this.notify('success', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create error notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'error',\n        };\n        console.error(msg);\n        this.notify('error', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create warning notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyWarn(msg: string, action?: string, on_action?: () => void): void {\n        const icon: ApplicationIcon = {\n            type: 'icon',\n            class: 'material-icons',\n            content: 'warning',\n        };\n        console.warn(msg);\n        this.notify('warn', msg, action, on_action, icon);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        console.info(msg);\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(\n        type: string,\n        msg: string,\n        args?: any,\n        stream: ConsoleStream = 'debug',\n        force: boolean = false\n    ): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U, type: 'subject' | 'behaviourSubject' = 'behaviourSubject'): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = type === 'subject' ? new Subject<U>() : new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private init(): void {\n        this.setupComposer();\n        // this.setupAnalytics();\n        this._composer.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this._initialised.next(true));\n        // Add service to window if in debug mode\n        if (window.debug) {\n            window.application = this;\n        }\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): void {\n        this.log('SYSTEM', 'Setup up composer...');\n        const loading: ApplicationLoadingState = this.get('loading') || {};\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'loading',\n        };\n        this.set('loading', loading);\n        // Get application settings\n        const settings: ComposerSettings = this._settings.get('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this._settings.get('mock');\n        // Generate configuration object\n        const config: PlaceOSOptions = {\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            mock,\n        };\n        this._composer.setup(config);\n        loading.composer = {\n            message: 'Initialising service connection',\n            state: 'complete',\n        };\n        this.set('loading', loading);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        if (this._cache.isEnabled) {\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            this.subscription(\n                'cache_activated',\n                this._cache.activated.subscribe(() => {\n                    this.log('CACHE', `Updates activated. Reloading...`);\n                    this.notifyInfo(\n                        'Newer version of the application is available',\n                        'Refresh',\n                        () => location.reload(true)\n                    );\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     *\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => {\n                this.notifyInfo('Newer version of the application is available', 'Refresh', () =>\n                    location.reload(true)\n                );\n            });\n        }\n    }\n}\n","import { Subject, Observable } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { ServiceManager, ServiceLike } from './service-manager.class';\n\nexport type ApiEventType = 'value_change' | 'item_saved' | 'reset' | 'other';\n\nexport interface ApiEvent<T = HashMap> {\n    type: ApiEventType;\n    metadata: T;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Subject for emitting events on the object */\n    protected readonly event_subject = new Subject<ApiEvent>();\n    /** Observable for events on this object */\n    public readonly events = this.event_subject.asObservable();\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Human readable name of the object */\n    public readonly name: string;\n    /** Email address associated with the object */\n    public readonly email: string;\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(BaseDataClass);\n    }\n\n    constructor(raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || '';\n        this.name = raw_data.name || '';\n        this.email = `${raw_data.email || ''}`.toLowerCase();\n    }\n\n    /**\n     * Save pending changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this._service) {\n            const form = this.toJSON();\n            return new Promise((resolve, reject) => {\n                const promise = this.id\n                    ? this._service.update(this.id, form)\n                    : this._service.add(form);\n                promise.then(\n                    (d) => {\n                        this.event_subject.next({ type: 'item_saved',  metadata: d });\n                        resolve(d);\n                    },\n                    (_) => reject(_)\n                );\n            });\n        } else {\n            return Promise.reject('No service to process request');\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this._service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this._service.task(this.id, task_name, parameters);\n        }\n    }\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: BaseDataClass): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._service;\n        delete obj._changes;\n        delete obj.changeEvents;\n        // Remove parent private members\n        delete obj._timers;\n        delete obj._intervals;\n        delete obj._subscriptions;\n        delete obj._server_names;\n        delete obj._initialised;\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass({ ...this, id: null, email: null });\n    }\n}\n","import { ComposerService } from '@placeos/composer';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\nimport { ServiceManager } from './service-manager.class';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number;\n}\n\nexport class BaseAPIService<T extends {} = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) =>\n        a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    /** Http Client */\n    protected get http() {\n        return this._composer.http;\n    }\n\n    constructor(protected _composer: ComposerService) {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(\n            (_) => this._initialised.next(true),\n            (err) => {\n                this.timeout('init', () => this.init(), 1000);\n            }\n        );\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = engine\n                ? this._composer.auth.api_endpoint\n                : '/api/staff';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return (this._subjects[name] as BehaviorSubject<U>).getValue();\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        if (!this._observers[name]) {\n            this.set<U>(name, null);\n        }\n        return this._observers[name];\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param predicate Function for filtering the list\n     */\n    public filter(predicate: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => {\n            if (predicate(i)) {\n                a.push(i);\n            }\n            return a;\n        }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public find(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(\n            (i) => i.id === id || (i.email || '').toLowerCase() === (id || '').toLowerCase()\n        );\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[]> {\n        let engine = false;\n        let cache = 1000;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                this.http.get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result =\n                            d && d instanceof Array\n                                ? d.map((i) => this.process(i))\n                                : d && !(d instanceof Array) && d.results\n                                ? (d.results as HashMap[])\n                                : [];\n                    },\n                    (e) => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if (\n                            (!query || (query_params && query_params.update_list)) &&\n                            result.length > 0 &&\n                            result[0] instanceof BaseDataClass\n                        ) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        /* istanbul ignore else */\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.get(url).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        /* istanbul ignore else */\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.post(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     * @param method Verb to use for request\n     */\n    public task<U = any>(\n        id: string,\n        task_name: string,\n        form_data: HashMap = {},\n        method: 'post' | 'get' = 'post'\n    ): Promise<U> {\n        const query = toQueryString({ ...form_data, concierge: true });\n        const key = `task|${id}|${task_name}|${query}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name, concierge: true };\n                const url = `${this.route()}/${id}/${task_name}`;\n                let result: any;\n                const request =\n                    method === 'post'\n                        ? this.http.post(url, post_data)\n                        : this.http.get(`${url}${query ? '?' + query : ''}`);\n                request.subscribe(\n                    (d) => (result = d),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-failed`,\n                            id\n                        );\n                        delete this._promises[key];\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(\n                            `${this._name.toLowerCase()}-task-${task_name}-success`,\n                            id\n                        );\n                        this.timeout(key, () => delete this._promises[key], 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(\n        id?: string,\n        query_params: HashMap = {},\n        delay: number = 5000\n    ): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.show(id, query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        } else {\n            this.query(query).then(\n                (d) => sub.next(d),\n                (e) => sub.error(e)\n            );\n            this.interval(\n                key,\n                () => {\n                    this.query(query).then(\n                        (d) => sub.next(d),\n                        (e) => sub.error(e)\n                    );\n                },\n                delay\n            );\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        /* istanbul ignore else */\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString({ ...query_params, concierge: true });\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                this.http.put(url, { ...form_data, concierge: true }).subscribe(\n                    (d) => (result = this.process(d)),\n                    (e) => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set(\n                            'list',\n                            this.updateList(this.removeItem(this.get('list'), { id } as any), [\n                                result,\n                            ])\n                        );\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string, query_params: HashMap = {}): Promise<void> {\n        const key = `delete|${id}`;\n        /* istanbul ignore else */\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const query = toQueryString({ ...query_params });\n                const url = `${this.route()}/${id}${query ? '?' + query : ''}`;\n                this.http.delete(url).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), { id } as any));\n                        this._promises[key] = null;\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(\n        id: string,\n        data: HashMap,\n        type: 'class' | 'service' | 'other' = 'other'\n    ): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(\n        id: string,\n        remove_ids: string[],\n        type: 'class' | 'service' | 'other' = 'other'\n    ) {}\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {}\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        // this.parent.Analytics.track(this._name, { desc: `${this.parent.name.toLowerCase()}-${action}`, label });\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    public updateList(\n        old_list: T[],\n        list: T[],\n        compareFn: (a: T, b: T) => boolean = this._compare\n    ): T[] {\n        /* istanbul ignore else */\n        if (!list || list.length === 0) {\n            return old_list;\n        }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        for (const item of mixed_list) {\n            const found = new_list.find((i) => compareFn(i, item));\n            /* istanbul ignore else */\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        /* istanbul ignore else */\n        if (!compareFn) {\n            compareFn = this._compare;\n        }\n        list.forEach((i) => (compareFn(item, i) ? null : new_list.push(i)));\n        return new_list;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\n\nimport { BookingNote, BookingRecurrenceDetails } from './booking.interfaces';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration, unique, flatten } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as dayjs from 'dayjs';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    public readonly icaluid: string;\n    /** Subject or title of the booking */\n    public readonly title: string;\n    /** Unix timestamp of the booking start */\n    public readonly date: number;\n    /** Length of the booking in minutes */\n    public readonly duration: number;\n    /** Description or details of the booking */\n    public readonly body: string;\n    /** Type of booking */\n    public readonly type: string;\n    /** Whether the booking has catering associated with it */\n    public readonly has_catering: boolean;\n    /** List of catering orders for the booking */\n    public readonly catering: readonly CateringOrder[];\n    /** String location set in booking */\n    public readonly _location: string;\n    /** Whether booking's duration covers all day */\n    public readonly all_day: boolean;\n    /** Details of the recurrence */\n    public readonly recurrence: BookingRecurrenceDetails;\n    /** Mapping of emails to approval statuses */\n    public readonly approval_status: HashMap<string>;\n    /** Host/Organiser of the booking */\n    public readonly organiser: User;\n    /** List of people invited to attend the booking */\n    public readonly attendees: User[];\n    /** Author of the booking */\n    public readonly creator: User;\n    /** List of notes associated with the booking */\n    public readonly notes: readonly BookingNote[];\n    /** Mapping of spaces to equipment charge codes */\n    public readonly equipment_codes: HashMap<string>;\n    /** Mapping of spaces to expected number of attendees */\n    public readonly expected_attendees: HashMap<number>;\n    /** Map of space emails to the setup time before the meeting in minutes */\n    public readonly setup: HashMap<number>;\n    /** List of checked in attendees */\n    public readonly checked_in: string[];\n    /** Map of space emails to the breakdown time before the meeting in minutes */\n    public readonly breakdown: HashMap<number>;\n    /** List of fields edited since creation */\n    public readonly edits: string[];\n    /** List of spaces associated with the booking */\n    public readonly space_list: Space[];\n    /** List of users to be notified on visitor arrivals */\n    public readonly notify_users: readonly string[];\n    /** Old  start */\n    public readonly old_start: number;\n    /** Old end */\n    public readonly old_end: number;\n    /** Whether the time or duration has changed */\n    public time_changed = false;\n    /** Map of display strings */\n    private _display: HashMap<string> = {};\n    /** Service for managing Bookings */\n    protected get _service() {\n        return ServiceManager.serviceFor(Booking);\n    }\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.icaluid = raw_data.icaluid || this.id || '';\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject || '';\n        const time =\n            raw_data.date || raw_data.start_epoch * 1000 || raw_data.start * 1000 || raw_data.Start;\n        const start = dayjs(time).startOf('m');\n        this.date = !time\n            ? start.minute(Math.ceil(start.minute() / 5) * 5).valueOf()\n            : start.valueOf();\n        this.duration =\n            raw_data.duration ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).diff(\n                start,\n                'm'\n            ) ||\n            60;\n        this.old_start = raw_data.old_start || dayjs(this.date).unix();\n        this.old_end =\n            raw_data.old_end ||\n            dayjs(raw_data.end_epoch * 1000 || raw_data.end * 1000 || raw_data.End).unix();\n        this.body =\n            (typeof raw_data.body === 'string' ? raw_data.body : '') || raw_data.description;\n        this.type =\n            raw_data.booking_type ||\n            raw_data.type ||\n            (raw_data.visitors ? 'external' : null) ||\n            'internal';\n        this.attendees = (raw_data.attendees || raw_data._attendees || []).map((i) => new User(i));\n        const organiser = raw_data.organiser || raw_data.organizer;\n        this.organiser = (organiser ? new User(organiser) : User.active_user) || new User();\n        this.creator =\n            raw_data.creator || raw_data.booked_by\n                ? new User(raw_data.creator || raw_data.booked_by)\n                : this.organiser;\n        this._location = raw_data.location_name || raw_data.location || '';\n        this.all_day = !!raw_data.all_day || this.duration > 23 * 60;\n        this.setup = raw_data.setup || {};\n        this.breakdown = raw_data.breakdown || {};\n        Object.keys(this.setup).forEach(\n            (key) => (this.setup[key] = Math.floor(this.setup[key] / 60))\n        );\n        Object.keys(this.breakdown).forEach(\n            (key) => (this.breakdown[key] = Math.floor(this.breakdown[key] / 60))\n        );\n        this.recurrence = raw_data.recurrence || raw_data.recurr || {};\n        if (this.recurrence.end && this.recurrence.end < new Date().getTime()) {\n            (this as any).recurrence = {\n                ...this.recurrence,\n                start: this.recurrence.start,\n                end: this.recurrence.end,\n            };\n        }\n        this.notes = raw_data.notes || [];\n        this.equipment_codes = raw_data.equipment_codes || raw_data.equipment_code || {};\n        this.expected_attendees = raw_data.expected_attendees || {};\n        this.approval_status =\n            (raw_data.status instanceof Object ? raw_data.status : '') ||\n            raw_data.approval_status ||\n            {};\n        this.checked_in =\n            raw_data.checked_in || raw_data.checkins || Object.keys(raw_data.check_ins || {});\n        this.notify_users = raw_data.notify_users || [];\n        if (raw_data.description && !this.notes.find((i) => i.type === 'description')) {\n            this.notes = [\n                ...this.notes,\n                {\n                    type: 'description',\n                    date: -1,\n                    message: raw_data.description,\n                    author: this.organiser.email,\n                },\n            ];\n        }\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start).add(this.duration, 'm').format('h:mma'),\n            duration: humaniseDuration(this.duration),\n        };\n        const space_ids = unique(\n            raw_data.room_ids || raw_data.room_id || raw_data._space_list || []\n        );\n        const space_service = ServiceManager.serviceFor(Space);\n        if (space_service) {\n            this.space_list = space_ids.map((id) => {\n                return space_service.find(id) || new Space({ id, name: id, email: id });\n            });\n        } else {\n            this.space_list = space_ids.map((id) => new Space({ id, name: id, email: id }));\n        }\n        this.catering = (raw_data.catering instanceof Array ? raw_data.catering : []).map(\n            (i) => new CateringOrder(i)\n        );\n        const edited_fields = Array.isArray(raw_data.edits)\n            ? raw_data.edits\n            : unique(\n                  flatten(\n                      Object.keys(raw_data.edits || {}).map((room) => {\n                          return flatten(Object.values(raw_data.edits[room]));\n                      })\n                  )\n              );\n        this.edits = edited_fields;\n        this.has_catering = !!(raw_data.has_catering || (this.catering && this.catering.length));\n    }\n\n    /** Whether booking has been declined */\n    public get declined(): boolean {\n        for (const space of this.space_list) {\n            if ((this.approval_status[space.email] || '').includes('decline')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking has been approved */\n    public get approved(): boolean {\n        for (const space of this.space_list) {\n            if (\n                this.approval_status[space.email] &&\n                (this.approval_status[space.email].includes('tentative') ||\n                    this.approval_status[space.email].includes('decline'))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Whether booking is tentative */\n    public get tentative(): boolean {\n        if (!this.declined) {\n            for (const space of this.space_list) {\n                if (\n                    this.approval_status[space.email] &&\n                    this.approval_status[space.email].indexOf('tentative') >= 0\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** Whether booking contains external visitors in the attendee list */\n    public get has_visitors(): boolean {\n        return this.attendees.reduce((a, v) => a || v.external, false);\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Description of the booking purpose */\n    public get description(): string {\n        const note = (this.notes || []).find((i) => i.type === 'description');\n        return note ? note.message : '';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.space_list[0] || ({ level: { name: '<No Location>' } } as any);\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return (\n            this.space_list.map((space) => space.name).join(', ') ||\n            this._location ||\n            'No location set'\n        );\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this.space.level.name;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking({\n            ...this.toJSON(),\n            id: null,\n            email: null,\n            icaluid: null,\n        });\n    }\n\n    /**\n     * Delete booking from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            const json = this.toJSON();\n            return this._service.delete(this.id, {\n                concierge: true,\n                host: this.organiser.email,\n                room_id: this.space?.id,\n                icaluid: this.icaluid,\n                start: json.start,\n                end: json.end,\n            });\n        }\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: Booking): HashMap {\n        const data = super.toJSON();\n        const date = dayjs(data.date);\n        data.start = data.all_day ? date.startOf('d').unix() : date.unix();\n        data.end = date.add(data.duration || 60, 'm').unix();\n        data.auto_approve = data.space_list.map((_) => true);\n        if (data.body && !data.notes.find((note) => note.message === data.body)) {\n            data.notes = data.notes.filter((note) => note.type !== 'description');\n            data.notes.push({\n                type: 'description',\n                message: data.body,\n                author: this.creator.email,\n                date: dayjs().valueOf(),\n            } as BookingNote);\n            data.notes.sort((a, b) => b.date - a.date);\n        }\n        data.attendees = unique([data.organiser].concat(data.attendees), 'email');\n        data.notify_users = [data.organiser.email];\n        data.room_ids = data.space_list.map((space) => space.email);\n        data.breakdown = data.breakdown || {};\n        data.setup = data.setup || {};\n        if (data.id) {\n            data.from_room = this.space ? this.space.email : '';\n        }\n        if (data.notes.find((note) => note.type === 'equipment')) {\n            const eq_notes = data.notes.filter((note) => note.type === 'equipment');\n            for (const note of eq_notes) {\n                data.setup[note.space] = 15;\n                data.breakdown[note.space] = 15;\n            }\n        }\n        if (data.catering && data.catering.length) {\n            for (const order of data.catering) {\n                data.setup[order.location_id] = 15;\n                data.breakdown[order.location_id] = 15;\n            }\n        }\n        Object.keys(data.setup).forEach((key) => (data.setup[key] = data.setup[key] * 60));\n        Object.keys(data.breakdown).forEach(\n            (key) => (data.breakdown[key] = data.breakdown[key] * 60)\n        );\n        data.catering = data.catering.filter(order => data.room_ids.includes(order.location_id));\n        data.description = data.body;\n        data.recurr = data.recurrence;\n        data.booking_type = data.type;\n        if (data.all_day) {\n            data.all_day = date.format('YYYY-MM-DD');\n        }\n        delete data.type;\n        delete data.recurrence;\n        delete data.space_list;\n        delete data.date;\n        delete data.duration;\n        delete data.display;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n}\n","import { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport {\n    padZero,\n    humaniseDuration,\n    timeFormatString,\n    randomInt,\n    unique,\n} from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\nimport { Booking } from './booking.class';\nimport { User } from '../users/user.class';\nimport { CateringOrder } from '../catering/catering-order.class';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { AvailableBookingFields } from 'src/app/shared/utilities/settings.interfaces';\nimport { BookingRule, SpaceCheckOptions, SpaceRules, SpaceRuleOptions } from './booking.interfaces';\nimport { validateEndTime } from 'src/app/shared/utilities/validation.utilities';\nimport { ServiceManager } from '../service-manager.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().hour(6).minute(0).subtract(10, 'd').startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param override Overrides the properties of the generated booking with it's own\n */\nexport function generateMockBooking(override: HashMap = {}) {\n    const id = `booking-${BOOKING_COUNT++}`;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4 + 2) * 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4 + 2) * 15;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) * 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map((i) => generateMockUser(override.users)),\n        organiser: generateMockUser(),\n        start_epoch: dayjs(start).unix(),\n        end_epoch: dayjs(start).add(duration, 'm').unix(),\n        description: faker.lorem.paragraph(),\n        notes: [{ type: 'other', message: faker.lorem.paragraph() }],\n        location: faker.address.city(),\n        has_catering: Math.floor(Math.random() * 34567) % 3 === 0,\n        booking_type: ['internal', 'training', 'setup', 'client', 'Interview'][randomInt(5)],\n        setup: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        breakdown: { 'space-01': Math.max(0, (randomInt(12) - 6) * 5) },\n        status: {},\n        catering: [],\n        room_ids: [],\n        ...override,\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    /* istanbul ignore else */\n    if (!list) {\n        return [\n            {\n                start: 0,\n                end: dayjs().startOf('m').valueOf() * 10,\n            },\n        ];\n    }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = Math.abs(bkn_start.diff(start, 'm'));\n            /* istanbul ignore else */\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        } else if (start.startOf('m').valueOf() === bkn_start.startOf('m').valueOf()) {\n            start = bkn_end;\n        }\n    }\n    slots.push({\n        start: start.valueOf(),\n        end: dayjs().startOf('m').valueOf() * 10,\n    });\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(\n    list: Booking[],\n    date: number = dayjs().valueOf(),\n    min_size: number = 30\n): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            /* istanbul ignore else */\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n\n/**\n * Generate form fields for the given booking\n * @param booking Booking to generate form for\n * @param current_user Current user of the system to default as the host\n */\nexport function generateBookingForm(\n    booking: Booking,\n    use_fields: AvailableBookingFields[]\n): FormGroup {\n    if (!booking) {\n        throw Error('No booking passed');\n    }\n    const user_service = ServiceManager.serviceFor(User);\n    let time = dayjs().startOf('m');\n    time = time.minute(Math.ceil(time.minute() / 5) * 5);\n    const current_user =\n        user_service.current ||\n        new User({ id: 'local-user', name: 'Local User', email: 'local@place.tech' });\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(booking.id || ''),\n        space_list: new FormControl(booking.space_list, []),\n        date: new FormControl(booking.date || time.valueOf(), [Validators.required]),\n        duration: new FormControl(booking.duration),\n        organiser: new FormControl(booking.organiser || current_user, [Validators.required]),\n        organiser_email: new FormControl(booking.organiser.email || current_user.email, [\n            Validators.required,\n        ]),\n        attendees: new FormControl(booking.attendees, []),\n        title: new FormControl(booking.title || '', [Validators.required]),\n        type: new FormControl(booking.type),\n        body: new FormControl(booking.body),\n        notes: new FormControl(booking.notes),\n        equipment_codes: new FormControl(booking.equipment_codes),\n        expected_attendees: new FormControl(booking.expected_attendees),\n        catering: new FormControl(\n            booking.catering.map(\n                (order) => new CateringOrder({ ...order, booking_date: booking.date })\n            )\n        ),\n        recurrence: new FormControl(booking.recurrence),\n        all_day: new FormControl(!!booking.all_day),\n        has_catering: new FormControl(!!booking.has_catering),\n        needs_space: new FormControl(true),\n    };\n    fields.duration.setValidators([Validators.required, validateEndTime(fields.date)]);\n    /* istanbul ignore else */\n    if (booking.id) {\n        fields.organiser.disable();\n        /* istanbul ignore else */\n        if (dayjs(booking.date).add(booking.duration, 'm').isBefore(dayjs(), 'm')) {\n            fields.date.disable();\n        }\n    } else {\n        fields.date.setValidators([Validators.required, isFuture]);\n    }\n    let list_length = 0;\n    fields.space_list.valueChanges.subscribe(list => {\n        if (list && list.length > list_length && list_length === 0) {\n            const expected = fields.expected_attendees.value || {};\n            const codes = fields.equipment_codes.value || {};\n            if (Object.keys(expected).length >= 0 || Object.keys(codes).length >= 0) {\n                const key = Object.keys(expected)[0] || Object.keys(codes)[0];\n                const new_expected = {};\n                const new_codes = {};\n                const notes = fields.notes.value;\n                notes.forEach(note => note.space === key ? note.space = list[0].email : '');\n                new_expected[list[0].email] = expected[key];\n                new_codes[list[0].email] = codes[key];\n                fields.expected_attendees.setValue(new_expected);\n                fields.equipment_codes.setValue(new_codes);\n            }\n        }\n    });\n    const simplified_fields: HashMap<FormControl> = [\n        'id',\n        'space_list',\n        'space_ids',\n        'notes',\n        'equipment_codes',\n        'expected_attendees',\n        'organiser_email',\n        ...use_fields,\n    ].reduce((map, key) => {\n        /* istanbul ignore else */\n        if (fields[key]) {\n            map[key] = fields[key];\n        }\n        return map;\n    }, {});\n    if (simplified_fields.all_day) {\n        simplified_fields.all_day.valueChanges.subscribe((value) => {\n            if (value) {\n                simplified_fields.time.disable();\n                simplified_fields.duration.disable();\n            } else {\n                simplified_fields.time.enable();\n                simplified_fields.duration.enable();\n            }\n        });\n    }\n    // Generate form group for booking item\n    const form = new FormGroup(simplified_fields);\n    return form;\n}\n\n/**\n * Validate whether date is in the future\n * @param control Control to check value\n */\nexport function isFuture(control: AbstractControl) {\n    let now = dayjs().startOf('m');\n    now = now.minute(Math.floor(now.minute() / 5) * 5);\n    const date = dayjs(control.value);\n    return date.isBefore(now, 's') ? { date: 'Date needs to be in the future' } : null;\n}\n\n/**\n * Get booking rules for the given user and space\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nexport function rulesForSpace(options: SpaceRuleOptions): SpaceRules {\n    if (!options) {\n        throw Error('Options are needed to check for rule matches');\n    }\n    const space_rules_for_user: SpaceRules = {\n        auto_approve: true,\n        hide: true,\n    };\n    /* istanbul ignore else */\n    if (options.space) {\n        for (const type in options.rules) {\n            if (\n                options.rules.hasOwnProperty(type) &&\n                options.rules[type] instanceof Array &&\n                options.space.zones.find((zone) => zone === type)\n            ) {\n                for (const rule_block of options.rules[type]) {\n                    /* istanbul ignore else */\n                    if (\n                        checkRules({\n                            user: options.user,\n                            space: options.space,\n                            time: options.time,\n                            recurr_end: options.recurr_end,\n                            duration: options.duration,\n                            rules: rule_block.conditions,\n                        })\n                    ) {\n                        const ruleset = rule_block.rules;\n                        const conditions = rule_block.conditions;\n                        space_rules_for_user.hide = false;\n                        /* istanbul ignore else */\n                        if (conditions.max_length) {\n                            space_rules_for_user.max_length = stringToMinutes(\n                                conditions.max_length as string\n                            );\n                        }\n                        /* istanbul ignore else */\n                        if (conditions.min_length) {\n                            space_rules_for_user.min_length = stringToMinutes(\n                                conditions.min_length as string\n                            );\n                        }\n                        // NOTE: use max_length in conditions instead of book_length in rules\n                        // if (ruleset.book_length) {\n                        //     space_rules_for_user.max_length = stringToMinutes(ruleset.book_length as string);\n                        // }\n                        /* istanbul ignore else */\n                        if (ruleset.auto_approve !== undefined) {\n                            space_rules_for_user.auto_approve = ruleset.auto_approve;\n                        }\n                        break;\n                    }\n                }\n            }\n            /* istanbul ignore else */\n            if (!space_rules_for_user.hide) {\n                break;\n            }\n        }\n    }\n    return space_rules_for_user;\n}\n\n/**\n * Check if user matches the given ruleset\n * @param user User to determine applicable rules\n * @param space Space to get rules for\n * @param time Booking start time in ms since UTC epoch\n * @param rules List of booking rules for the building\n */\nfunction checkRules(options: SpaceCheckOptions): boolean {\n    /* istanbul ignore else */\n    if (options.rules) {\n        const time = dayjs(options.time);\n        const recurr = options.recurr_end ? dayjs(options.recurr_end) : dayjs();\n        const count = Object.keys(options.rules).length;\n        let matches = 0;\n        for (const key of Object.keys(options.rules)) {\n            let counter = 0;\n            const condition: string[] =\n                options.rules[key] instanceof Array\n                    ? (options.rules[key] as [])\n                    : [options.rules[key] as string];\n            switch (key) {\n                case 'groups':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.groups) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            options.user.groups.find((j) => j === i) ? counter++ : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter > 0) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'locations':\n                    /* istanbul ignore else */\n                    if (options.user && options.user.location) {\n                        counter = 0;\n                        condition.forEach((i) =>\n                            (options.user.last_location.name || '').indexOf(i) >= 0\n                                ? counter++\n                                : null\n                        );\n                        /* istanbul ignore else */\n                        if (counter >= options.rules[key].length) {\n                            matches++;\n                        }\n                    }\n                    break;\n                case 'is_before':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        let match = time.isBefore(check, 'm');\n                        /* istanbul ignore else */\n                        if (recurr) {\n                            match = match && recurr.isBefore(check, 'm');\n                        }\n                        matches += match ? 1 : 0;\n                    }\n                    break;\n                case 'is_after':\n                    /* istanbul ignore else */\n                    if (options.time) {\n                        const duration = stringToMinutes(condition[0]);\n                        const check = dayjs().add(duration, 'm');\n                        time.isAfter(check, 'm') ? matches++ : '';\n                    }\n                    break;\n                case 'min_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(options.duration, condition[0]) ? matches++ : '';\n                    }\n                    break;\n                case 'max_length':\n                    /* istanbul ignore else */\n                    if (options.duration) {\n                        durationGreaterThanOrEqual(condition[0], options.duration) ? matches++ : '';\n                    }\n                    break;\n            }\n        }\n        return matches >= count;\n    }\n    return false;\n}\n\n/**\n * Get minimum duration from ruleset in minutes\n * Default to 5min\n */\nexport function getMinLength(rule_list: HashMap<BookingRule[]>): number {\n    return Object.values(rule_list).reduce((min, block) => {\n        const min_block = block.reduce((min_length, el) => {\n            if (el.conditions.min_length && stringToMinutes(el.conditions.min_length) > min) {\n                return stringToMinutes(el.conditions.min_length);\n            } else {\n                return min_length;\n            }\n        }, 5);\n        if (min_block > min) {\n            return min_block;\n        } else {\n            return min;\n        }\n    }, 5) as number;\n}\n\n/**\n * Whether the first input is greater than the last. Converts duration strings into minutes\n * @param duration_1 First input can be a number in minutes or a duration string e.g. `1 hour`\n * @param duration_2 Second input can be a number in minutes or a duration string e.g. `30 minutes`\n */\nexport function durationGreaterThanOrEqual(\n    duration_1: string | number,\n    duration_2: string | number\n) {\n    const first: number = typeof duration_1 === 'string' ? stringToMinutes(duration_1) : duration_1;\n    const second: number =\n        typeof duration_2 === 'string' ? stringToMinutes(duration_2) : duration_2;\n    return first >= second;\n}\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = str.split(' ');\n    return +parts[0] * DURATION_MAP[parts[1]];\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: Booking[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = dayjs().valueOf()\n) {\n    const free_slots = getFreeBookingSlots(bookings);\n    const now = dayjs(date);\n    const next_free_slot = free_slots.find((slot) => {\n        const start = dayjs(slot.start);\n        const end = dayjs(slot.end);\n        return start.isAfter(now) || (now.isAfter(start, 's') && now.isBefore(end, 'm'));\n    });\n    const start = dayjs(next_free_slot.start);\n    const end = dayjs(next_free_slot.end);\n    const currently_free = now.isAfter(start, 's') && now.isBefore(end, 'm');\n    const time_until_next_block = humaniseDuration(\n        currently_free ? end.diff(now, 'm') : start.diff(now, 'm'),\n        true\n    );\n    const free_tomorrow = !currently_free && !start.isSame(now, 'd');\n    const free_today = currently_free && !end.isSame(now, 'd');\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${end.format(timeFormatString())}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${start.format(timeFormatString())}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: Booking[],\n    new_bookings: Booking[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = dayjs(filter_options.from);\n    const to = dayjs(filter_options.to);\n    const filtered_list = list.filter((booking) => {\n        const start = dayjs(booking.date);\n        const end = start.add(booking.duration, 'm');\n        return (\n            !booking.space_list.find((space) => space.email === filter_options.space) ||\n            !timePeriodsIntersect(from.valueOf(), to.valueOf(), start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'icaluid');\n}\n\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    const day1 = dayjs(start1);\n    const end_time1 = dayjs(end1);\n    const day2 = dayjs(start2);\n    const end_time2 = dayjs(end2);\n    return (day1.isAfter(day2, 'm') && day1.isBefore(end_time2)) || (end_time1.isAfter(day2, 'm') && end_time1.isBefore(end_time2)) ||\n    (day2.isAfter(day1, 'm') && day2.isBefore(end_time1)) || (end_time2.isAfter(day1, 'm') && end_time2.isBefore(end_time1))\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { BookingCheckinParams } from './booking.interfaces';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n\n    public readonly booking_list = new BehaviorSubject<Booking[]>([]);\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Booking, this);\n        this._name = 'Bookings';\n        this._api_route = '/bookings';\n        this._compare = (a, b) =>\n            !(a.id || '').localeCompare(b.id) || !(a.icaluid || '').localeCompare(b.icaluid);\n    }\n\n    public accept(id: string, fields?: HashMap) {\n        return this.task(id, 'accept', fields);\n    }\n\n    public decline(id: string, fields?: HashMap) {\n        return this.task(id, 'concierge_decline', fields);\n    }\n\n    /**\n     * Save changes to the booking\n     * @param booking Booking update or add to the database\n     */\n    public save(booking: Booking): Promise<Booking> {\n        return booking.id ? this.update(booking.id, booking.toJSON()) : this.add(booking.toJSON());\n    }\n\n    /**\n     * Checkin atteendee of a booking\n     * @param id ID of the booking\n     * @param fields Fields associated with the booking and attendee\n     */\n    public checkin(id: string, fields: BookingCheckinParams) {\n        return this.task(id, 'checkin', fields);\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(raw_data);\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringCategoriesService extends BaseAPIService<CateringCategory> {\n\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringCategory, this);\n        this._name = 'catering category/group';\n        this._api_route = '/catering/category';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering categories. Use catering menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering categories. Use catering menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringCategory(raw_item);\n    }\n\n    public format(item: CateringCategory) {\n        return { ...item };\n    }\n}\n","import { CateringItem } from \"./catering-item.class\";\nimport { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport class CateringCategory extends CateringItem {\n    /** List of items associated with the category */\n    public readonly items: readonly CateringItem[];\n    /** Whether child items are part of a package */\n    public readonly package: boolean;\n    /** List of zone ids associated with the category */\n    public readonly zones: readonly string[];\n\n    public get can_order_anytime(): boolean {\n        return (\n            this.order_anytime ||\n            this.items.reduce(\n                (anytime, item) => anytime || item.can_order_anytime,\n                false\n            )\n        );\n    }\n\n    constructor(data: HashMap) {\n        super(data);\n        this.items = (data.items || []).map(item =>\n            item.items ? new CateringCategory(item) : new CateringItem(item)\n        );\n        this.package = data.package === 'true' || data.package === true;\n        this.zones = data.zones && data.zones.length ? [ ...data.zones ] : [];\n        (this as any).must_select = this.must_select || this.items.length;\n        (this as any).order_anytime = !!data.order_anytime && this.package;\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj = super.toJSON();\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        obj.order_anytime = !!obj.order_anytime && obj.package;\n        return obj;\n    }\n}\n","import { HashMap } from \"../../../shared/utilities/types.utilities\";\n\nexport interface CateringAvailability {\n    /** Month of the year that the item starts being available */\n    readonly from_month: number;\n    /** Month of the year that the item ends being available */\n    readonly to_month: number;\n}\n\nexport class CateringItem {\n    /** Unique ID of the catering item */\n    public readonly id: string;\n    /** Display name of the catering item */\n    public readonly name: string;\n    /** Description of the item */\n    public readonly description: string;\n    /** URL to the image associated with the item */\n    public readonly image_path: string;\n    /** Type of catering item */\n    public readonly catering_type: string;\n    /** Availability of the item */\n    public readonly available: CateringAvailability;\n    /** Time in hours that is needed to prepare the item beforehand */\n    public readonly prior_notice: number;\n    /** Cost of the item without decimals */\n    public readonly unit_price: number;\n    /** Cost of the item without decimals */\n    public readonly supplier_cost: number;\n    /** Minimum number this item allowed in an order */\n    public readonly minimum_quantity: number;\n    /** Maximum number this item allowed in an order */\n    public readonly maximum_quantity: number;\n    /** List of categories that the item is contained in */\n    public readonly parent_categories: readonly string[];\n    /** Allegen information associated with the item */\n    public readonly allergy: string;\n    /** Whether the supply of this item has run out */\n    public readonly out_of_stock: boolean;\n    /** Whether item can be ordered within the time limit set by the building */\n    public readonly order_anytime: boolean;\n    /** Number of child items that must be selected as part of the package */\n    public readonly must_select: number;\n    /** Number of this item in the assoicated order */\n    private _amount = 0;\n    /** Unique ID of the catering item */\n    private instance_id: string;\n\n\n    public get can_order_anytime(): boolean {\n        return this.order_anytime;\n    }\n\n    /** Number of this item in the assoicated order */\n    public get amount(): number {\n        return this._amount || 0;\n    }\n\n    /** Total cost of the amount of items set */\n    public get total(): number {\n        return (this._amount * this.unit_price) || 0;\n    }\n\n    constructor(data: HashMap) {\n        this.instance_id = `item-${Math.floor(Math.random() * 999_999_999)}`\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.available = {\n            from_month: (data.available ? data.available.from_month : data.available_from) || -1,\n            to_month: (data.available ? data.available.to_month : data.available_to) || -1,\n        };\n        this.description = data.description || '';\n        this.prior_notice = data.prior_notice || data.notice;\n        this.unit_price = data.unit_price || data.price || 0;\n        this.supplier_cost = data.supplier_cost;\n        this.minimum_quantity = Math.max(0, data.minimum_quantity || 0);\n        this.maximum_quantity = Math.max(1, data.maximum_quantity || 999);\n        this.parent_categories = data.category_ids || data.parent_categories || data.categories;\n        this.order_anytime = !!data.order_anytime;\n        this.image_path = data.image_path || '';\n        this.catering_type = data.catering_type;\n        this.must_select = data.must_select || 0;\n        this.out_of_stock = !!(data.out_of_stock || data.hide);\n        this._amount = data._amount || data.amount || 0;\n        this.allergy = data.allergy;\n    }\n\n    public setAmount(amount: number = 0): void {\n        if (amount <= this._amount) {\n            if (amount < this.minimum_quantity) {\n                amount = 0;\n            }\n        } else {\n            if (amount < this.minimum_quantity) {\n                amount = this.minimum_quantity;\n            }\n        }\n        this._amount = Math.max(0, Math.min(this.maximum_quantity, amount));\n    }\n\n    /**\n     * Increase amount of the item the order\n     * @param amount Amount to increase by\n     */\n    public addToOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount += amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = this.minimum_quantity;\n        } else if (this._amount > this.maximum_quantity) {\n            this._amount = this.maximum_quantity;\n        }\n    }\n\n    /**\n     * Decrease amount of the item the order\n     * @param amount Amount to decrease by\n     */\n    public removeFromOrder(amount: number = 1) {\n        amount = Math.max(1, amount);\n        this._amount -= amount;\n        if (this._amount < 0) {\n            this._amount = 0;\n        } else if (this._amount < this.minimum_quantity) {\n            this._amount = 0;\n        }\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringItem): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Convert remaining members to be public\n        obj.price = obj.unit_price;\n        obj.hide = obj.out_of_stock;\n        obj.categories = obj.parent_categories;\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        return obj;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { CateringItem } from './catering-item.class';\nimport { ServiceManager } from '../service-manager.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringItemsService extends BaseAPIService<CateringItem> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(CateringItem, this);\n        this._name = 'Catering Menu';\n        this._api_route = '/catering/item';\n    }\n\n    public query(): never {\n        throw Error('No index endpoint for catering items. Use menu service.');\n    }\n\n    public show(): never {\n        throw Error('No show endpoint for catering items. Use menu service.');\n    }\n\n    public processItem(raw_item: any) {\n        return new CateringItem(raw_item);\n    }\n\n    public format(item: CateringItem) {\n        return item instanceof CateringItem ? item.toJSON() : item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringCategory } from './catering-category.class';\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CateringMenuService extends BaseAPIService<CateringItem | CateringCategory> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        this._name = 'Catering Menu';\n        this._api_route = '/menu';\n    }\n\n    /**\n     * Convert user data to local format\n     * @param user User data\n     */\n    protected processItem(item: HashMap) {\n        return item.items ? new CateringCategory(item) : new CateringItem(item);\n    }\n}\n","import { CateringItem } from './catering-item.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport { CateringCategory } from './catering-category.class';\nimport { Booking } from '../bookings/booking.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type CateringOrderMutableProperties =\n    | 'items'\n    | 'location_id'\n    | 'location'\n    | 'delivery_time'\n    | 'charge_code'\n    | 'notes'\n    | 'status';\n\nexport type CateringOrderStatus = 'accepted' | 'preparing' | 'ready' | 'delivered' | 'cancelled';\n\nexport class CateringOrder {\n    /** Booking associated with the order */\n    public booking: Booking;\n    /** Whether the order status change is loading */\n    public loading: boolean;\n    /** Unique ID for the catering order */\n    readonly id: string;\n    /** Unique ID for the catering order */\n    readonly booking_id: string;\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly booking_date: number = dayjs()\n        .startOf('m')\n        .valueOf();\n    /** Number of minutes after the start of the associated meeting to delivery the order */\n    readonly delivery_time: number = 0;\n    /** ID of the location to deliver the items to */\n    readonly location_id: string = '';\n    /** Display text for the location to deliver the items to */\n    readonly location: string = '';\n    /** Status of the catering order */\n    readonly status: CateringOrderStatus;\n    /** Whether items in the order need to be prepared in the kitchen */\n    readonly kitchen: boolean;\n    /** Whether items in the order are in the pantry */\n    readonly pantry: boolean;\n    /** List of items */\n    readonly items: readonly (CateringItem | CateringCategory)[] = [];\n    /** Creation time of the order */\n    readonly created_at: number;\n    /** Charge code associated with the order */\n    readonly charge_code: string;\n    /** Notes associated with the order */\n    readonly notes: string;\n    /** Mapping of properties to their changes */\n    private _changes: HashMap = {};\n    /** Map of local property names to server ones */\n    protected _server_names: HashMap<string> = {};\n    /** Currency code for the location of the order */\n    public symbol: string;\n    /** Whether the is an error with the order */\n    public error: boolean;\n\n    constructor(data: HashMap) {\n        this.id = data.id || `order-${Math.floor(Math.random() * 999_999_999)}`;\n        this.booking = data.booking;\n        this.delivery_time = data.delivery_time || data.start || 0;\n        this.booking_date = data.booking_date;\n        this.location_id = data.location_id || data.location;\n        this.location = data.location || '';\n        this.status = data.status || 'accepted';\n        this.charge_code = data.charge_code || data.code;\n        this.notes = data.notes;\n        this.kitchen = data.kitchen instanceof Array ? !!data.kitchen.length : data.kitchen;\n        this.pantry = data.pantry instanceof Array ? !!data.pantry.length : data.pantry;\n        this.symbol = data.symbol || 'USD';\n        this.items = (data.items || [])\n            .map(item => (item.items ? new CateringCategory(item) : new CateringItem(item)))\n            .filter(item => !!item.amount);\n    }\n\n    /** Mapping of properties to their changes */\n    public get changes(): HashMap<any> {\n        return { ...this._changes } || {};\n    }\n\n    /** Display string for the types of items in the order */\n    public get type(): string {\n        let type = '';\n        /* istanbul ignore else */\n        if (this.kitchen) type += 'Kitchen';\n        /* istanbul ignore else */\n        if (this.pantry) {\n            /* istanbul ignore else */\n            if (type) type += ' + ';\n            type += 'Pantry';\n        }\n        return type;\n    }\n\n    /** Total cost of the order */\n    public get total(): number {\n        return this.items.reduce((total, item) => total + (item.total || 0), 0);\n    }\n\n    /** Total number of items in the order */\n    public get item_count(): number {\n        return this.items.reduce((total, item) => total + (item.amount || 0), 0);\n    }\n\n    /** Display string for the delivery time of the order */\n    public get deliver_at_time(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('h:mm A');\n    }\n\n    /** Display string for the delivery date of the order */\n    public get deliver_on_date(): string {\n        const date = this.booking ? this.booking.date : this.booking_date;\n        return dayjs(date)\n            .add(this.delivery_time, 'm')\n            .format('DD MMM YYYY');\n    }\n\n    /** Whether there are any pending changes to be saved */\n    public get has_changes(): boolean {\n        return !!Object.keys(this._changes).length;\n    }\n\n    /**\n     * Store pending changes for the given property\n     * @param name Property to update value\n     * @param value New value to save for property\n     */\n    public storePendingChanges(name: CateringOrderMutableProperties, value: any): void {\n        this._changes[name] = value;\n    }\n\n    /** Clear any changes waiting to be saved */\n    public clearPendingChanges() {\n        delete this._changes;\n        this._changes = {};\n    }\n\n    /**\n     * Convert class object into plain object\n     */\n    public toJSON(this: CateringOrder, with_changes: boolean = true): HashMap {\n        const obj: any = { ...this };\n        // Remove local private members\n        delete obj._changes;\n        delete obj._server_names;\n        // Remove local public members\n        delete obj.booking;\n        delete obj.loading;\n\n        // Convert remaining members to be public\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            if (key[0] === '_') {\n                const new_key = this._server_names[key.substr(1)] || key.substr(1);\n                obj[new_key] = obj[key];\n                delete obj[key];\n            } else if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        }\n        obj.items = obj.items.map((item: CateringItem) => item.toJSON());\n        return with_changes ? { ...obj, ...this._changes } : obj;\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nimport { BuildingLevel } from '../organisation/level.class';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nexport class MapLocation {\n    /** ID of the element on the associated map */\n    public readonly id?: string;\n    /** Name of the location */\n    public readonly name?: string;\n    /** X coordinate of the location */\n    public readonly x?: number;\n    /** Y coordinate of the location */\n    public readonly y?: number;\n    /** Level details for the location */\n    public readonly level: BuildingLevel;\n    /** Whether the position is fixed */\n    public readonly fixed: boolean;\n    /** Accuracy of the location when not fixed */\n    public readonly confidence?: number;\n    /** Whether location is at a desk */\n    public readonly at_desk?: boolean;\n    /** Whether location is set */\n    public readonly empty: boolean;\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(MapLocation);\n    }\n\n    /** Display string for the building and level of the location */\n    public get display(): string {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        const bld = org_service.buildings.find((bld) => bld.id === this.level.building_id);\n        return bld ? `${bld.name}, ${this.level.name}` : this.level.name;\n    }\n\n    /** Whether location is in a different building from the active one */\n    public get in_another_building(): boolean {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        return org_service.building.id !== this.level.building_id;\n    }\n\n    constructor(raw_data: HashMap) {\n        const org_service = ServiceManager.serviceFor(Organisation);\n        this.id = raw_data.id || raw_data.map_id || raw_data.desk_id;\n        this.name = raw_data.name || '';\n        this.x = raw_data.x\n            ? Math.floor(this.normalise(raw_data.x, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.y = raw_data.y\n            ? Math.floor(this.normalise(raw_data.y, raw_data.x_max || 10000) * 10000)\n            : null;\n        this.level =\n            raw_data.level instanceof BuildingLevel\n                ? raw_data.level\n                : org_service\n                ? org_service.levelWithID(raw_data.level)\n                : new BuildingLevel({ id: raw_data.level });\n        this.fixed = this.x === null && this.y === null;\n        this.confidence = Math.max(5, Math.min(15, raw_data.confidence || 0));\n        this.at_desk = this.id && this.id.indexOf('area-') === 0;\n        this.empty = !(this.name && this.level && (this.id || this.x || this.y));\n    }\n\n    /** Normalise the given value within the max */\n    private normalise(value: number, max: number): number {\n        return value / (max * 1.0);\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { randomInt } from 'src/app/shared/utilities/general.utilities';\n\nexport function generateMockLocation(overrides: HashMap, fixed_locations: string[], maps: string[]): HashMap {\n    const fixed = randomInt(999_999_999) % 2 === 0;\n    if (fixed && (!overrides || overrides.fixed)) {\n        return {\n            map_id: fixed_locations[randomInt(fixed_locations.length)],\n            level: maps[randomInt(maps.length)],\n            ...overrides\n        }\n    } else {\n        return {\n            x: randomInt(900, 100),\n            x_max: 1000,\n            y: randomInt(500, 100),\n            level: maps[randomInt(maps.length)],\n            confidence: randomInt(30),\n            ...overrides\n        }\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { BuildingLevel } from './level.class';\nimport { BookingRule } from '../bookings/booking.interfaces';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: HashMap<readonly BookingRule[]>;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** Map of fields that are required on the form */\n    public readonly required: HashMap<boolean>;\n    /** IANA timezone database string for the location the building resides  */\n    public readonly timezone: string;\n    /** Whether catering is available in this building */\n    public readonly has_catering: boolean;\n    /** ID of the system used for the holding bay */\n    public readonly holding_bay: string;\n    /** ID of the system used for standalone visitors bookings */\n    public readonly visitor_space: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: BuildingLevel[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: LevelFeature[];\n    /** Class type of required service */\n    protected __type: string = 'Building';\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || disc_info.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || disc_info.loan_items  || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || disc_info.levels  || []).map(i => new BuildingLevel({ ...i, building_id: this.id }));\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || disc_info.locker_structure || {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._settings = settings;\n        this._phone_numbers = raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this._location = raw_data.location || disc_info.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address = raw_data.address || disc_info.address || settings.address || '';\n        this.booking_details = raw_data.booking_details || disc_info.booking_details || settings.booking_details || null;\n        this.booking_rules = raw_data.booking_rules || disc_info.booking_rules || settings.booking_rules || {};\n        this.catering_restricted_from = raw_data.catering_restricted_from || disc_info.catering_restricted_from || settings.catering_restricted_from || 0;\n        this.currency = raw_data.currency || disc_info.currency || settings.currency || 'USD';\n        this.required = raw_data.required || disc_info.required || settings.required || {};\n        if (disc_info.requires_equipment_code) {\n            this.required.equipment_code = true;\n        }\n        if (disc_info.requires_expected_attendees) {\n            this.required.expected_attendees = true;\n        }\n        this.timezone = raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.has_catering = raw_data.has_catering || disc_info.has_catering || settings.has_catering || false;\n        this.holding_bay = raw_data.holding_bay || disc_info.holding_bay || settings.holding_bay || '';\n        this.visitor_space = raw_data.visitor_space || disc_info.visitor_space || settings.visitor_space || '';\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): BuildingLevel[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): LevelFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { HashMap } from 'src/app/shared/utilities/types.utilities';\n\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    readonly id: string;\n    /** ID of the building zone associated with the level */\n    readonly building_id: string;\n    /** Name of the level */\n    readonly name: string;\n    /** Number or short identifier of the level */\n    readonly short_name: string;\n    /** Map URL for the level */\n    readonly map_url: string;\n    /** Usage type for the level */\n    readonly type: 'staff' | 'client' | 'any';\n    /** Setting for the level */\n    readonly settings: HashMap;\n\n    constructor(_data: any) {\n        this.id = _data.id || _data.level_id || '';\n        this.building_id = _data.bld_id || _data.building_id || '';\n        this.name = _data.name || _data.level_name || '';\n        const lower_name = this.name.toLowerCase();\n        const num = lower_name.indexOf('level') >= 0 ? lower_name.replace(/ ?level ?/gi, '') : lower_name.substr(0, 1).toUpperCase();\n        this.short_name = _data.short_name || num || '';\n        this.map_url = _data.map_url || '';\n        this.type = _data.type || _data.floor_type || 'any';\n        this.settings = _data.settings;\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from './organisation.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Service for managing organisations */\n    protected get _service() {\n        return ServiceManager.serviceFor(Organisation);\n    }\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(raw_data: HashMap) {\n        super(raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport {\n    HashMap,\n    ApplicationLoadingState,\n    Identity,\n} from '../../../shared/utilities/types.utilities';\nimport { BuildingLevel } from './level.class';\nimport { User } from '../users/user.class';\nimport { first } from 'rxjs/operators';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\nimport { UsersService } from '../users/users.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n\n    constructor(\n        protected _composer: ComposerService,\n        private _service: ApplicationService,\n        private _users: UsersService\n    ) {\n        super(_composer);\n        ServiceManager.setService(Organisation, this);\n        ServiceManager.setService(Building, this);\n        this._name = 'Organisation';\n        this._api_route = '/zones';\n        this.set('buildings', []);\n        this.set('active_building', null);\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Add is not available on organisation service\n     */\n    public async add(form_data: HashMap, query_params?: HashMap): Promise<Organisation> {\n        throw new Error('Add is not available on the organisation service');\n    }\n\n    /**\n     * Update is not available on organisation service\n     */\n    public async update(\n        id: string,\n        form_data: HashMap,\n        query_params?: HashMap\n    ): Promise<Organisation> {\n        throw new Error('Update is not available on the organisation service');\n    }\n\n    /**\n     * Delete is not available on organisation service\n     */\n    public async delete(id: string): Promise<void> {\n        throw new Error('Delete is not available on the organisation service');\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find((i) => i.id === bld_id) || ({} as Building)).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this.buildings.find((i) => i.id === this._active_building);\n    }\n\n    /** List of types of spaces */\n    public get space_types(): Identity[] {\n        return this.get('space_types') || [];\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n        this.set('active_building', this.building);\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = this.buildings.find((i) => i.id === bld_id) || this.building;\n        if (bld && id) {\n            return bld.extras.filter((i) => `${i.id}`.indexOf(id) >= 0);\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]): BuildingLevel {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected async load(): Promise<void> {\n        /* istanbul ignore else */\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`CONCIERGE.building`);\n        }\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        loading.organisation = { message: 'Loading organisation data', state: 'loading' };\n        await this.loadOrganisation();\n        loading.organisation = { message: 'Loading organisation data', state: 'complete' };\n        loading.buildings = { message: 'Loading building data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadBuildings();\n        loading.buildings = { message: 'Loading building data', state: 'complete' };\n        loading.levels = { message: 'Loading building floor data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadLevels();\n        loading.levels = { message: 'Loading building floor data', state: 'complete' };\n        this._service.set('loading', loading);\n        loading.space_types = { message: 'Loading space type data', state: 'loading' };\n        this._service.set('loading', loading);\n        await this.loadSpaceTypes();\n        loading.space_types = { message: 'Loading space type data', state: 'complete' };\n        this._service.set('loading', loading);\n        const user = this._users.current;\n        if (user) {\n            const building = this.buildings.find((bld) => bld.code === user.location);\n            if (building) {\n                this._active_building = building.id;\n                this.set('active_building', building);\n            } else {\n                this._active_building = this.building.id;\n                this.set('active_building', this.building);\n            }\n        }\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_data = await this.query({ tags: 'org', engine: true });\n        this._organisation = new Organisation(org_data[0]);\n        this.set('organisation', this._organisation);\n    }\n\n    /**\n     * Load building data for the organisation\n     */\n    public async loadBuildings(): Promise<void> {\n        const bld_data = await this.query({ tags: 'building', engine: true, limit: 500 });\n        const buildings = (bld_data as HashMap[]).map((i) => new Building(i));\n        this.set('buildings', buildings);\n        /* istanbul ignore else */\n        if (!this._active_building && buildings && buildings.length > 0) {\n            this._active_building = buildings[0].id;\n        }\n    }\n\n    /**\n     * Load level data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const lvl_data = await this.query({ tags: 'level', engine: true });\n        const levels = (lvl_data as HashMap[]).map((i) => new BuildingLevel(i));\n        this.set('levels', levels);\n    }\n\n    /**\n     * Load space type data for the buildings\n     */\n    public async loadSpaceTypes(): Promise<void> {\n        const type_data = await this.query({ tags: 'room', engine: true });\n        const types = (type_data as HashMap[]).map((i) => ({ id: i.id, name: i.name }));\n        this.set('space_types', types);\n    }\n}\n","import { CurrencyPipe } from '@angular/common';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport {\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    humaniseDuration,\n} from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { formatRecurrence } from 'src/app/shared/utilities/formatting.utilities';\nimport { ServiceManager, ServiceLike } from '../service-manager.class';\nimport { Space } from '../spaces/space.class';\nimport { Organisation } from '../organisation/organisation.class';\n\nimport * as dayjs from 'dayjs';\n\nexport type BookingReport = Report<Booking>;\n\nexport class Report<T extends {} = HashMap> {\n    /** Type of report */\n    public readonly type: string;\n    /** List of data associated with the report */\n    public readonly data: T[];\n    /** Service for managing model on the server */\n    protected get _service(): ServiceLike {\n        return ServiceManager.serviceFor(Report);\n    }\n\n    constructor(raw_data: HashMap) {\n        this.type = raw_data.type || '';\n        this.data = this.cleanData(raw_data.data || []);\n    }\n\n    /** Create report data structure from CSV */\n    public static fromCSV(type: string, data: string): Report {\n        const csv_json = csvToJson(data);\n        return new Report({ type, data: csv_json });\n    }\n\n    /** Download report data as CSV format */\n    public downloadCSV(name: string = 'unammed.csv'): void {\n        downloadFile(name, jsonToCsv(this.data));\n    }\n\n    /** Download report data as JSON format */\n    public downloadJSON(name: string = 'unnamed.json'): void {\n        downloadFile(name, JSON.stringify(this.data, undefined, 4));\n    }\n\n    private cleanData(data: T[]) {\n        if (data.length > 0 && this.type === 'catering') {\n            const fields = Object.keys(data[0]);\n            const room_field = fields.find(\n                (key) => key.toLowerCase().includes('room') && key.toLowerCase().includes('email')\n            );\n            const price_field = fields.find((key) => key.toLowerCase().includes('price'));\n            const date_field = fields.find((key) => key.toLowerCase().includes('date'));\n            for (let row of data) {\n                /* istanbul ignore else */\n                const space_service = ServiceManager.serviceFor(Space);\n                if (room_field && price_field && space_service) {\n                    const room = space_service.find(row[room_field].toLowerCase());\n                    const org_service = ServiceManager.serviceFor(Organisation);\n                    const bld = org_service.buildings.find(\n                        (bld) => bld.id === ((room || {}).level || {}).building_id\n                    );\n                    /* istanbul ignore else */\n                    if (bld) {\n                        row[price_field] = new CurrencyPipe('en_us').transform(\n                            row[price_field] / 100,\n                            bld.currency || 'USD'\n                        );\n                    }\n                }\n                /* istanbul ignore else */\n                if (date_field) {\n                    row[date_field] = dayjs(row[date_field]).format('DD MMM YYYY - HH:mm');\n                }\n                for (let field of fields) {\n                    row[field] =\n                        typeof row[field] === 'string'\n                            ? row[field].replace(/\\,/g, '٫')\n                            : row[field];\n                }\n            }\n        } else if (this.type === 'bookings') {\n            data = data.map((i: HashMap) => {\n                const booking = i;\n                console.log('Booking:', i);\n                if (booking.setup instanceof Object) {\n                    booking.setup = booking.setup[booking.room_email];\n                }\n                if (booking.breakdown instanceof Object) {\n                    booking.breakdown = booking.breakdown[booking.room_email];\n                }\n                booking.setup = humaniseDuration((booking.setup || 0) / 60);\n                booking.breakdown = humaniseDuration((booking.breakdown || 0) / 60);\n                booking.description = (booking.description || '').replace(/<[^>]*>?/gm, '');\n                booking['Meeting Host'] = booking.organizer;\n                booking['Booked By'] = booking.booked_by.name || booking.booked_by.email;\n                booking.charge_code = booking.equipment_codes\n                    ? Object.keys(booking.equipment_codes)\n                          .map((key) => booking.equipment_codes[key])\n                          .join(', ')\n                    : '';\n                //    booking.expected_attendees = Object.keys(booking.expected_attendees).map(key => booking.expected_attendees[key]).join(', ');\n                booking.attendees = (booking.attendees || [])\n                    .map((person) => person.name || person.email || person)\n                    .join(', ');\n                booking.start = dayjs(booking.start_epoch * 1000).format('DD MMM YYYY, h:mm A');\n                booking.end = dayjs(booking.end_epoch * 1000).format('DD MMM YYYY, h:mm A');\n                booking.notes = (booking.notes || [])\n                    .map((note) =>\n                        note.author\n                            ? `[${note.author}|${note.type}]${note.message.replace(\n                                  /<[^>]*>?/gm,\n                                  ''\n                              )}`\n                            : ''\n                    )\n                    .join('\\n');\n                booking.recurrence = formatRecurrence({ start: booking.date, ...booking.recurr });\n                const remove_fields = [\n                    'id',\n                    'icaluid',\n                    'accepted_at',\n                    'accepted_by',\n                    'check_ins',\n                    'changeKey',\n                    'created',\n                    'booking_type',\n                    'edit_history',\n                    'end_epoch',\n                    'old_attendees',\n                    'start_epoch',\n                    'expected_attendees',\n                    'isAllDay',\n                    'isCancelled',\n                    'body',\n                    'is_free',\n                    'lastModifiedDateTime',\n                    'locationType',\n                    'locations',\n                    'organizer',\n                    'booked_by',\n                    'originalEndTimeZone',\n                    'originalStartTimeZone',\n                    'recurr',\n                    'room_booking_status',\n                    'room_email',\n                    'room_emails',\n                    'room_id',\n                    'sensitivity',\n                    'seriesMasterId',\n                    'show_as',\n                    'status',\n                    'subject',\n                    'type',\n                    'previous_booking',\n                    'catering',\n                    'responseStatus',\n                    'equipment_codes',\n                ];\n                for (const field of remove_fields) {\n                    if (booking[field] !== undefined) {\n                        delete booking[field];\n                    }\n                }\n                const output = {};\n                const order = [\n                    'title',\n                    'start',\n                    'end',\n                    'Meeting Host',\n                    'Booked By',\n                    'all_day',\n                    'recurrence',\n                    'attendees',\n                    'description',\n                ];\n                const keys = Object.keys(booking);\n                keys.sort((a, b) => {\n                    const idx_a = order.indexOf(a);\n                    const idx_b = order.indexOf(b);\n                    return (\n                        (idx_a === -1 ? keys.length : idx_a) - (idx_b === -1 ? keys.length : idx_b)\n                    );\n                });\n                for (const key of keys) {\n                    output[key] = booking[key];\n                }\n                return output;\n            }) as any;\n        }\n        return data;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ComposerService } from '@placeos/composer';\n\nimport { BaseAPIService } from '../base.service';\nimport { Report } from './report.class';\nimport { ServiceManager } from '../service-manager.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReportsService extends BaseAPIService<Report> {\n    constructor(protected _composer: ComposerService) {\n        super(_composer);\n        ServiceManager.setService(Report, this);\n        this._name = 'Reports';\n        this._api_route = '/reports';\n    }\n\n    protected process(raw_data: any): Report {\n        return raw_data instanceof Array\n            ? new Report({ data: raw_data })\n            : Report.fromCSV('', raw_data);\n    }\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDataClass } from './base-api.class';\n\n\nexport interface ServiceLike<T = BaseDataClass> extends HashMap {\n    parent: any;\n    add: (_: HashMap) => Promise<T>;\n    update: (id: string, _: HashMap) => Promise<T>;\n    delete: (id: string, params?: HashMap) => Promise<void>;\n    task: (id: string, name: string, data: HashMap) => Promise<void>;\n    listen: <U = any>(prop: string) => Observable<U>;\n}\nexport interface ServiceProvider<T extends ServiceLike> {\n    provideFor: Type<any>;\n    useValue: T\n}\n\nexport class ServiceManager {\n    /** Map of available services for child classes */\n    private static _service_list: ServiceProvider<any>[] = [];\n    /** Set the services used to handle data model requests */\n    public static setService(type: Type<any>, service: any): void {\n        if (window.debug) {\n            (window as any).ServiceManager = this._service_list;\n        }\n        const index = ServiceManager._service_list.findIndex(provider => provider.provideFor === type);\n        if (index >= 0) {\n            ServiceManager._service_list.splice(index, 1, { provideFor: type, useValue: service });\n        } else {\n            ServiceManager._service_list.push({ provideFor: type, useValue: service });\n        }\n    }\n    /** Get the services used to handle data model requests */\n    public static serviceFor(type: Type<any>): ServiceLike<any> {\n        const provider = ServiceManager._service_list.find(provider => provider.provideFor === type) || { useValue: null };\n        return provider.useValue;\n    }\n\n    constructor() {\n        throw new Error('ServiceMananger is static class');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BuildingLevel } from '../organisation/level.class';\nimport { SpaceRules } from '../bookings/booking.interfaces';\nimport { rulesForSpace } from '../bookings/booking.utilities';\nimport { User } from '../users/user.class';\n\nimport * as dayjs from 'dayjs';\nimport { Building } from '../organisation/building.class';\nimport { Organisation } from '../organisation/organisation.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ISpaceAvailabilityOptions {\n    /** Start date and time of the availability block */\n    date?: number;\n    /** Length of the availability block */\n    duration: number;\n    /**  */\n    id?: string;\n    /** List of spaces to look at the availability for */\n    room_ids?: string;\n    /** Whether the spaces looked at should be bookable */\n    bookable?: boolean;\n    /** List of spaces or zones to ignore */\n    ignore?: string;\n    /** List of zones to look at the availability for */\n    zone_ids?: string;\n    /** Whether space bookings should not be returned */\n    hide_bookings?: boolean;\n\n    clear?: boolean;\n}\n\nexport interface SpaceBookingRuleOptions {\n    date: number;\n    duration: number;\n    host: User;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60,\n};\n\nexport interface RecurrenceAvailability {\n    /** Unix epoch in seconds */\n    readonly date: number;\n    /** Whetehr space is available at this time */\n    readonly available: boolean;\n}\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    public readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    public readonly map_id: string;\n    /** Type of space */\n    public readonly type: string;\n    /** Whether user can search for this space */\n    public readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    public readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    public readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    public readonly bookable: boolean;\n    /** People capacity of the space */\n    public readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    public readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    public readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    public readonly breakdown: number;\n    /** Last returned availability result */\n    public readonly was_available: boolean;\n    /** URL for the control interface of the space */\n    public readonly support_url: boolean;\n    /** Display image for the space */\n    public readonly image: string;\n    /** List of recurrence occurrence availability details */\n    public readonly recurr_available: readonly RecurrenceAvailability[];\n    /** Engine zones associated with the space */\n    public readonly zones: readonly string[];\n    /** Bookings associated with the space */\n    public bookings: readonly Booking[];\n    /** List of ids for linked spaces */\n    public linked_spaces: readonly string[];\n    /** Service for managing spaces */\n    protected get _service() {\n        return ServiceManager.serviceFor(Building);\n    }\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        const settings = raw_data.settings || {};\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id || '';\n        this.type =\n            settings.book_type ||\n            (this.level.settings || {}).book_type ||\n            raw_data.book_type ||\n            raw_data.type ||\n            'book';\n        this.can_search =\n            settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control =\n            settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = (settings.setup || 0) / 60 || raw_data.setup || 0;\n        this.breakdown = (settings.breakdown || 0) / 60 || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.recurr_available = raw_data.recurr_available || settings.recurr_available || [];\n        const available = !!this.recurr_available.find((occurence) => !!occurence.available);\n        this.was_available =\n            settings.available ||\n            raw_data.available ||\n            raw_data.was_available ||\n            available ||\n            false;\n        this.support_url = raw_data.support_url;\n        this.image = raw_data.image || '';\n\n        this.zones = raw_data.zones instanceof Array ? raw_data.zones : [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this.bookings = raw_bookings.map((bkn) => new Booking(bkn.toJSON ? bkn.toJSON() : bkn));\n        this._extras = [];\n        this.linked_spaces =\n            settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): readonly Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** Level in which the space is associated */\n    public get level(): BuildingLevel {\n        const service = ServiceManager.serviceFor(Organisation);\n        return (service ? service.levelWithID(this.zones as any) : null) || new BuildingLevel({});\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): readonly Booking[] {\n        const day = dayjs(date);\n        return this.bookings.filter((i: any) => dayjs(i.date).isSame(day, 'd'));\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this._service as any).available(options).then(\n                (list: Space[]) => {\n                    for (const rm of list) {\n                        if (rm.id === this.id) {\n                            return resolve(true);\n                        }\n                    }\n                    resolve(false);\n                },\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space({ ...this, id: null, email: null, bookings: [] });\n    }\n\n    /**\n     * Generate the booking rules for space with given options\n     * @param options Conditions for generating the space rules\n     */\n    public rulesFor(options: SpaceBookingRuleOptions): SpaceRules {\n        const service = ServiceManager.serviceFor(Building);\n        if (!service || !this.level) {\n            return { auto_approve: true, hide: false };\n        }\n        const building = service.buildings.find((bld) => bld.id === this.level.building_id);\n        if (!building) {\n            return { auto_approve: true, hide: false };\n        }\n        const { date, duration, host } = options;\n        const rules: SpaceRules = rulesForSpace({\n            time: date,\n            duration,\n            space: this,\n            user: host,\n            rules: building.booking_rules,\n        });\n        return rules;\n    }\n\n    /**\n     * Whether space can only be booked by request\n     * @param options Conditions for checking the space rules\n     */\n    public byRequest(options: SpaceBookingRuleOptions) {\n        const rules = this.rulesFor(options);\n        return !rules.auto_approve;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\nimport { USER_DOMAIN } from '../users/user.utilities';\nimport { ISpaceAvailabilityOptions } from './space.class';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/${id}`,\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : [],\n        image: faker.image.business(),\n        ...overrides\n    };\n}\n\nexport function availabilityOptionsToQuery(options: ISpaceAvailabilityOptions): HashMap {\n    let query: HashMap = {};\n    if (options) {\n        query = { ...options };\n        if (options.date) {\n            const date = dayjs(options.date).startOf('m');\n            query.available_from = date.unix();\n            query.available_to = date.add(options.duration || 60, 'm').unix();\n            delete query.date;\n            delete query.duration;\n        }\n    }\n    return query;\n}\n","import { Injectable } from '@angular/core';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { availabilityOptionsToQuery } from './space.utilities';\nimport { ServiceManager } from '../service-manager.class';\nimport { OrganisationService } from '../organisation/organisation.service';\nimport { ApplicationService } from '../../app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n    constructor(protected _composer: ComposerService, private _org: OrganisationService, private _service: ApplicationService) {\n        super(_composer);\n        ServiceManager.setService(Space, this);\n        this._name = 'Space';\n        this._api_route = '/rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this._org.building;\n            return a.level.building_id === bld.id;\n        };\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) {\n            throw new Error('Space avilability requires request options');\n        }\n        if (!options.date) {\n            options.date = dayjs()\n                .startOf('m')\n                .valueOf();\n        }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return (\n                            i.was_available && linked.reduce((a, v) => a && v.was_available, true)\n                        );\n                    });\n                    delete this._promises[key];\n                    resolve(available_spaces);\n                };\n                const error = e => {\n                    reject(e);\n                    delete this._promises[key];\n                };\n                const query = availabilityOptionsToQuery(options);\n                if (options.id) {\n                    this.show(options.id, query).then(i => respond([i]), error);\n                } else {\n                    this.query(query).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.spaces) {\n            loading.spaces = { message: 'Loading space data', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        await this.query().catch(() => {\n            loading.spaces = { message: 'Loading space data', state: 'failed' };\n            this._service.set('loading', loading);\n        });\n        loading.spaces = { message: 'Loading space data', state: 'complete' };\n        this._service.set('loading', loading);\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { MapLocation } from '../location/location.class';\nimport { ServiceManager } from '../service-manager.class';\n\nexport class User extends BaseDataClass {\n    /** Currently logged in user */\n    public static get active_user(): User {\n        const service = ServiceManager.serviceFor(User);\n        return service ? service.current : null;\n    }\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Windows user ID */\n    public readonly windows_id: string;\n    /** Type of user */\n    public readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    public readonly phone: string;\n    /** Organisational department the user is part of */\n    public readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    public readonly external: boolean;\n    /** Organisational Identifier for the user */\n    public readonly staff_code: string;\n    /** Basic location descriptor for the user */\n    public readonly location: string;\n    /** List of users that this user can act on behalf */\n    public readonly delegates: readonly string[];\n    /** URL of the user's avatar image */\n    public readonly image: string;\n    /** List of user groups associated with this user */\n    public readonly groups: readonly string[];\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n\n    /** Map location of the user */\n    private _location: MapLocation;\n    /** List of desk bookings */\n    private _desk_bookings: HashMap = {};\n\n    constructor(raw_data: HashMap = {}) {\n        super(raw_data);\n        this.first_name = raw_data.first_name || '';\n        this.last_name = raw_data.last_name || '';\n        this.windows_id = raw_data.email || '';\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile || '';\n        this.business_unit = raw_data.business_unit || raw_data.department || '';\n        this._organisation = raw_data.organisation || {\n            id: raw_data.organisation_id,\n            name: raw_data.organisation_name\n        };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.image = raw_data.image || '';\n        this.staff_code = raw_data.staff_code || raw_data.fmno || '';\n        this.delegates = raw_data.delegates || [];\n        this._location = new MapLocation(\n            raw_data.location && raw_data.location instanceof Object\n                ? raw_data.location\n                : { name: raw_data.location }\n        );\n        this.groups = raw_data.groups || [];\n        this.location = raw_data.location || raw_data.officeLocation || '';\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): MapLocation {\n        return new MapLocation(this._location || {})\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<MapLocation> {\n        const service: any = ServiceManager.serviceFor(MapLocation);\n        return new Promise((resolve, reject) => {\n            if (service) {\n                service.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this._service.query({ email: this.email, start, end }).then(\n                l => resolve(l && l.length > 0),\n                _ => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User({ ...this, id: null, email: null });\n    }\n\n    /**\n     * Convert object into plain object\n     */\n    public toJSON(this: User): HashMap {\n        const data = super.toJSON();\n        delete data.location;\n        return data;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from './user.class';\nimport { Subscription } from 'rxjs';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(override: HashMap = {}): HashMap {\n    const id = `user-${USER_COUNT++}`;\n    const name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    const external = override.external || !((Math.random() * 99999) % 2);\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name\n        .split(' ')\n        .join('.')\n        .toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation\n                .split(' ')\n                .join('.')\n                .toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates,\n        image: faker.image.avatar(),\n        ...override\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user: User): FormGroup {\n    if (!user) {\n        throw Error('No user passed');\n    }\n    const fields: HashMap<FormControl> = {\n        id: new FormControl(user.id || ''),\n        name: new FormControl(user.name || ''),\n        first_name: new FormControl(user.first_name || ''),\n        last_name: new FormControl(user.last_name || ''),\n        email: new FormControl(user.email || '', [Validators.email])\n    };\n    // Generate form group for booking item\n    return new FormGroup(fields);\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ComposerService } from '@placeos/composer';\nimport { first } from 'rxjs/operators';\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap, ApplicationLoadingState } from '../../../shared/utilities/types.utilities';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from '../../app.service';\nimport { ServiceManager } from '../service-manager.class';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(\n        protected _composer: ComposerService,\n        protected uhttp: HttpClient,\n        protected location: Location,\n        private _service: ApplicationService\n    ) {\n        super(_composer);\n        ServiceManager.setService(User, this);\n        this._name = 'Users';\n        this._api_route = '/users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User({ id: 'local_user', name: 'Local User' }));\n        this._composer.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /** Whether the user has properly logged in */\n    public get is_logged_in(): boolean {\n        return this.current && this.current.id !== 'local_user';\n    }\n\n    /** istanbul ignore function */\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs().add(7, 'd').endOf('d').valueOf();\n        }\n        const path = `${location.origin}${\n            this._service.setting('composer.route') || ''\n        }/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    (_) => null,\n                    (e) => reject(e),\n                    () => {\n                        this._composer.auth.authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        this._composer.auth.logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        const loading: ApplicationLoadingState = this._service.get('loading') || {};\n        if (!loading.user) {\n            loading.user = { message: 'Loading user credentials', state: 'loading' };\n            this._service.set('loading', loading);\n        }\n        this.set('status', 'loading');\n        return new Promise<void>((resolve) => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                loading.user = { message: 'Loading user credentials', state: 'failed' };\n                this._service.set('loading', loading);\n                return resolve();\n            }\n            this.show('current').then(\n                (current_user) => {\n                    this.set('status', 'available');\n                    this.set('current_user', current_user);\n                    this._initialised.next(true)\n                    if (this._service && this._service.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            (user) => {\n                                this.set('current_user', user);\n                                if (this._service.setting('app.user.update_location')) {\n                                    this.interval('location', () => user.locate(), 5000);\n                                }\n                                this.loadDelegates();\n                                resolve();\n                                loading.user = {\n                                    message: 'Loading user credentials',\n                                    state: 'complete',\n                                };\n                                this._service.set('loading', loading);\n                            },\n                            () =>\n                                this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        if (this._service.setting('app.user.update_location')) {\n                            this.interval('location', () => current_user.locate(), 5000);\n                        }\n                        this.loadDelegates();\n                        resolve();\n                        loading.user = { message: 'Loading user credentials', state: 'complete' };\n                        this._service.set('loading', loading);\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    private async loadDelegates() {\n        const delegates = this.current.delegates;\n        if (!delegates || !delegates.length) {\n            return [];\n        }\n        const promises: Promise<User>[] = [];\n        for (const email of delegates) {\n            promises.push(this.show(email));\n        }\n        const list = await Promise.all(promises);\n        this.set('delegates', list);\n        this.set('list', unique((this.get('list') || []).concat(list)));\n        return list;\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.last_down !== code) {\n                /* istanbul ignore else */\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                /* istanbul ignore else */\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            /* istanbul ignore else */\n            if (this.keydown_states[code]) {\n                this.keydown_states[code].next(null);\n            }\n            /* istanbul ignore else */\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        /* istanbul ignore else */\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            /* istanbul ignore else */\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                /* istanbul ignore else */\n                if (count) {\n                    const presses: number[] = [];\n                    /* istanbul ignore else */\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    /* istanbul ignore else */\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        /* istanbul ignore else */\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            /* istanbul ignore else */\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { version, build, core_version } from '../shared/globals/application';\nimport { BaseClass } from '../shared/base.class';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${core_version}`, null, 'debug', true);\n        this.log('APP', `${version} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        if (keys[0] === 'session') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.session);\n        } else if (keys[0] === 'local') {\n            keys.shift();\n            value = getItemWithKeys(keys, this._settings.local);\n        } else {\n            value = getItemWithKeys(keys, this._settings.api) ||\n                getItemWithKeys(keys, this._settings.session) ||\n                getItemWithKeys(keys, this._settings.local);\n        }\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public get initialised(): BehaviorSubject<boolean> {\n        return this._initialised;\n    }\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            /* istanbul ignore else */\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            /* istanbul ignore else */\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            /* istanbul ignore else */\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        /* istanbul ignore else */\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        /* istanbul ignore else */\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        /* istanbul ignore else */\n        if (this._subscriptions && this._subscriptions[name]) {\n            this._subscriptions[name] instanceof Subscription\n                ? (this._subscriptions[name] as Subscription).unsubscribe()\n                : (this._subscriptions[name] as any)();\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Directive, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Directive({\n    selector: 'a-very-basic-component-base-that-should-not-be-used'\n})\nexport class BaseDirective extends BaseClass implements OnDestroy {\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\n\n@Component({\n    selector: 'action-icon',\n    templateUrl: './action-icon.component.html',\n    styleUrls: ['./action-icon.component.scss']\n})\nexport class ActionIconComponent implements OnInit {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"action-icon\" [class.fade]=\"state || loading\">\n    <app-icon [icon]=\"icon\"></app-icon>\n    <div class=\"'state center ' + state\" *ngIf=\"!loading && state\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: state === 'success' ? 'done' : 'close' }\"></app-icon>\n    </div>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner [diameter]=\"16\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\n@Component({\n  selector: 'an-action-field',\n  templateUrl: './action-field.component.html',\n  styleUrls: ['./action-field.component.scss']\n})\nexport class ActionFieldComponent extends BaseDirective {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Value to display on the field */\n    @Input() public placeholder: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","<div class=\"action-field\" role=\"button\" [attr.disabled]=\"disabled\" form-field tabindex=\"0\" (keydown.enter)=\"performAction()\">\n    <div class=\"display\" (click)=\"performAction()\">{{ placeholder }}</div>\n    <div class=\"icon\" (click)=\"performAction()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_tooltip ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'a-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  providers: [\n      {\n          provide: NG_VALUE_ACCESSOR,\n          /* istanbul ignore next */\n          useExisting: forwardRef(() => CounterComponent),\n          multi: true\n      }\n  ]\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step: number = 1;\n    /** Maximum amount for the counter */\n    @Input() public max: number = 10;\n    /** Minimum amount for the counter */\n    @Input() public min: number = 0;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) { this.value = this.min || 0 }\n        const step = this.ctrl_key ? 100 : this.shift_key ? 10 : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div\n    class=\"counter\"\n    (window:keydown.shift)=\"shift_key = true\"\n    (window:keydown.control)=\"ctrl_key = true\"\n    (window:keydown.meta)=\"ctrl_key = true\"\n    (window:keyup.shift)=\"shift_key = false\"\n    (window:keyup.control)=\"ctrl_key = false\"\n    (window:keyup.meta)=\"ctrl_key = false\"\n>\n    <button mat-icon-button name=\"remove\" [disabled]=\"!value || value === min\" (click)=\"remove()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'remove' }\"></app-icon>\n    </button>\n    <div class=\"value\">\n        {{ value || '0' }}\n    </div>\n    <button mat-icon-button name=\"add\" [disabled]=\"value === max\" (click)=\"add()\">\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n    </button>\n</div>\n","import { Component, OnInit, forwardRef, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-date-field',\n    templateUrl: './date-field.component.html',\n    styleUrls: ['./date-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Optional event emitter for changes */\n    @Output() public onChange = new EventEmitter();\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: number;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    @ViewChild(MatMenuTrigger, { static: true }) private _trigger: MatMenuTrigger;\n\n    /** First allowed date on the calendar */\n    public get from(): number {\n        return this._from || dayjs().startOf('d').valueOf();\n    }\n    /** Current date value */\n    public get until(): number {\n        return this._to || dayjs().endOf('d').add(1, 'y').valueOf();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    /** Whether date picker is open */\n    public get is_open(): boolean {\n        return this._trigger.menuOpen;\n    }\n\n    public ngOnInit() {\n        this.date = dayjs().valueOf();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from) {\n            new_date = this.from;\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n            this.onChange.emit(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public closeDatePicker() {\n        this._trigger.closeMenu();\n    }\n\n    /** Set the state of the tooltip to closed after delay */\n    public openDatePicker() {\n        this._trigger.openMenu();\n    }\n}\n","<div\n    class=\"date-field\"\n    role=\"button\"\n    form-field\n    tabindex=\"0\"\n    [class.active]=\"is_open\"\n    [attr.disabled]=\"disabled\"\n    (keydown.enter)=\"openDatePicker()\"\n    [matMenuTriggerFor]=\"appMenu\"\n>\n    <div class=\"display\">{{ date_string }}</div>\n    <div class=\"icon\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: is_open ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [ngModel]=\"date\"\n            [options]=\"{ from: from, to: until }\"\n            (ngModelChange)=\"setValue($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { humaniseDuration, timeFormatString } from 'src/app/shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent extends BaseDirective\n    implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 15;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for(const option of this.specialPreprops){\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format(timeFormatString())} (${humaniseDuration(option)})`\n                    : `${humaniseDuration(option)}`,\n            });\n        }\n\n\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format(timeFormatString())} (${humaniseDuration(time)})`\n                    : `${humaniseDuration(time)}`,\n            });\n            time += step;\n        }\n        blocks.push({ id: 7 * 24 * 60, name: '1 week' });\n        return blocks;\n    }\n}\n","<div class=\"duration-field\" [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select #select [value]=\"duration\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n            <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                {{ option.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import { Component, forwardRef, Input, ViewChild, OnInit, SimpleChanges, OnChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { timeFormatString } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class TimeFieldComponent extends BaseDirective implements OnInit, OnChanges, ControlValueAccessor {\n    /** Time step between each allowed time option */\n    @Input() public step: number = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times: boolean = true;\n    /** String representing the currently set time */\n    public date: number = dayjs().valueOf();\n    /** String representing the currently set time */\n    public time: string = dayjs().format('HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: Identity[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        this.timeout('hide', () => this.show_select = false);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = dayjs(this.date).hour(+time[0]).minute(+time[1]);\n        if (date.minute() % 15 !== 0 && !this._time_options.find(time => time.id === date.format('HH:mm'))) {\n            this._time_options.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            this._time_options.sort((a, b) => `${a.id}`.localeCompare(`${b.id}`));\n        }\n        return this._time_options;\n    }\n\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = dayjs(this.date).hour(+time[0]).minute(+time[1]).startOf('m');\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        let date = dayjs(this.date).startOf('m');\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        this.time = date.format('HH:mm');\n        this._time_options = this.generateAvailableTimes(this.date, !this.no_past_times, this.step);\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription('listen_close', this.select_field.openedChange.subscribe((state) => {\n                    if (!state) {\n                        this.show_select = false;\n                    }\n                }));\n            }\n        })\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(datestamp: number, show_past: boolean, step: number = 15): Identity[] {\n        const now = dayjs();\n        let date = dayjs(datestamp);\n        const blocks = [];\n        if (show_past || date.isAfter(now, 'd')) {\n            date = date.startOf('d');\n        } else if (date.isAfter(now, 'm')) {\n            date = now;\n        }\n        date = date.minute(Math.ceil(date.minute() / step) * step);\n        const end = date.endOf('d');\n        // Add options for the rest of the day\n        while (date.isBefore(end, 'm')) {\n            blocks.push({\n                name: `${date.format(timeFormatString())}`,\n                id: date.format('HH:mm')\n            });\n            date = date.add(step, 'm');\n        }\n        return blocks;\n    }\n}\n","<div\n    class=\"time-field\"\n    role=\"button\"\n    [style.display]=\"show_select ? 'none' : ''\"\n    [attr.disabled]=\"disabled\"\n    form-field\n    tabindex=\"0\"\n    (keydown.enter)=\"showSelect()\"\n>\n    <div class=\"display\">\n        <input\n            matInput\n            type=\"time\"\n            [disabled]=\"disabled\"\n            [ngModel]=\"time\"\n            (ngModelChange)=\"setValue($event)\"\n        />\n    </div>\n    <div class=\"icon\" (click)=\"showSelect()\">\n        <app-icon\n            [icon]=\"{\n                type: 'icon',\n                class: 'material-icons',\n                content: show_select ? 'arrow_drop_up' : 'arrow_drop_down'\n            }\"\n        ></app-icon>\n    </div>\n</div>\n<mat-form-field appearance=\"outline\" *ngIf=\"show_select\">\n    <mat-select #select [value]=\"time\" [disabled]=\"disabled\" (valueChange)=\"setValue($event)\">\n        <mat-option *ngFor=\"let option of time_options\" [value]=\"option.id\">\n            {{ option.name }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n","import { Component, OnInit, forwardRef, Output, EventEmitter, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    filterList,\n    matchToHighlight,\n    downloadFile,\n    csvToJson,\n} from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-list-field',\n    templateUrl: './user-list-field.component.html',\n    styleUrls: ['./user-list-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit: number = 3;\n    /** Emitter for action to make a new user */\n    @Output('newUser') public new_user = new EventEmitter<void>();\n\n    /** User list to display */\n    public user_list: User[];\n    /** List of active selected users on the list */\n    public active_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** String  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    ngOnInit() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap((query) => {\n                this.loading = true;\n                return query.length >= this.limit\n                    ? this._users.query({\n                          q: query.slice(0, Math.max(this.limit, 3)),\n                          cache: 60 * 1000,\n                      })\n                    : Promise.resolve([]);\n            }),\n            catchError((_) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.user_list = list;\n                this.user_list.forEach((i: any) => {\n                    i.match_name = matchToHighlight(i.match_name);\n                    i.match_email = matchToHighlight(i.match_email);\n                    return i;\n                });\n            })\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        /* istanbul ignore else */\n        if (!this.active_list) {\n            this.active_list = [];\n        }\n        const index = this.active_list.findIndex((a_user) => a_user.id === user.id);\n        /* istanbul ignore else */\n        if (index < 0) {\n            this.active_list = [...this.active_list, user];\n        }\n        this.setValue(this.active_list);\n        this.search_str = '';\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        this.active_list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(this.active_list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    this._service.notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = this._users.current.staff_code;\n        list.forEach((el) => {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (el.name || `${Math.floor(Math.random() * 9999_9999)}`)\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.mckinsey.com`;\n            }\n            el.type = 'external';\n            this.addUser(new User(el));\n        });\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        const template = `Organisation Name,First Name,Last Name,Email,Phone\\nFake Org,John,Smith,john.smith@example.com,01234567898`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-list-field\" form-field [attr.disabled]=\"disabled\">\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon\n                [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"\n            ></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"addUser($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n    <div class=\"actions\">\n        <button type=\"button\" name=\"new-contact\" matRipple (click)=\"new_user.emit()\" i18n=\"Add new external attendee\">\n            Add External\n        </button>\n        <button type=\"button\" name=\"upload-csv\" matRipple i18n=\"Upload attendee list from CSV file\">\n            Upload CSV\n            <input type=\"file\" (change)=\"addUsersFromFile($event)\" />\n        </button>\n        <button type=\"button\" name=\"download-template\" matRipple (click)=\"downloadCSVTemplate()\" i18n=\"Download template CSV file\">\n            CSV Template\n        </button>\n    </div>\n    <div class=\"user-list\">\n        <mat-chip-list\n            aria-label=\"User List\"\n            *ngIf=\"active_list && active_list.length; else empty_state\"\n        >\n            <mat-chip\n                *ngFor=\"let user of active_list\"\n                [id]=\"user.email\"\n                [color]=\"user.external ? 'accent' : 'primary'\"\n                [removable]=\"true\"\n                (removed)=\"removeUser(user)\"\n            >\n                {{ user.name }}\n                <app-icon\n                    matChipRemove\n                    [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"\n                ></app-icon>\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div i18n=\"Attendee empty state\">No attendees</div>\n</ng-template>\n","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { filterList, matchToHighlight } from 'src/app/shared/utilities/general.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true\n        }\n    ]\n})\nexport class UserSearchFieldComponent extends BaseDirective implements OnInit, ControlValueAccessor {\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    constructor(private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.loading = true;\n                return this.options && this.options.length > 0\n                    ? Promise.resolve(this.options)\n                    : query.length >= 3\n                        ? (this._users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>)\n                        : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map((list: User[]) => {\n                this.loading = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.subscription('search_results', this.search_results$.subscribe(list => {\n            this.user_list = list;\n            this.user_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        }));\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        if (this.active_user) {\n            this.search_str = this.active_user.name;\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User): void {\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","<div class=\"user-search-field\" form-field>\n    <mat-form-field appearance=\"outline\">\n        <input\n            matInput\n            name=\"user-search\"\n            [(ngModel)]=\"search_str\"\n            (ngModelChange)=\"search$.next($event)\"\n            [disabled]=\"disabled\"\n            placeholder=\"Search for user...\"\n            i18n-placeholder\n            [matAutocomplete]=\"auto\"\n            (blur)=\"resetSearchString()\"\n        />\n        <div class=\"prefix\" matPrefix>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n        </div>\n        <div class=\"suffix\" matSuffix *ngIf=\"loading\">\n            <mat-spinner diameter=\"16\"></mat-spinner>\n        </div>\n    </mat-form-field>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setValue($event.option.value)\">\n        <mat-option *ngFor=\"let option of user_list\" [value]=\"option\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"email\">{{ option.email }}</div>\n        </mat-option>\n    </mat-autocomplete>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    styleUrls: ['./feedback.component.scss'],\n})\nexport class FeedbackComponent extends BaseDirective implements OnInit {\n    /** Name of the currently active page */\n    public current_page: string;\n\n    constructor(private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.timeout('Getting Title', () => this.updateRoute(document.title), 1000);\n        this._router.events.subscribe((event: NavigationEnd) => {\n            /* istanbul ignore else */\n            if (event instanceof NavigationEnd) {\n                this.timeout('Getting Title', () => this.updateRoute(document.title));\n            }\n        });\n    }\n\n    public updateRoute(location) {\n        location = location.substr(0, location.indexOf(' |'));\n        this.current_page = location;\n    }\n}\n","<a [href]=\"'mailto:converge_feedback@mckinsey.com?subject=Feedback for page: ' + current_page\">\n    <div class=\"feedback-button\">\n        <span class=\"text\" i18n>Feedback</span>\n        <span class=\"icon\">\n            <app-icon [icon]=\"{class:'material-icons', content: 'feedback'}\"></app-icon>\n        </span>\n    </div>\n</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../../../base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { NewUserModalComponent } from 'src/app/overlays/new-user-modal/new-user-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { User } from 'src/app/services/data/users/user.class';\nimport {\n    SpaceSelectModalComponent,\n    SpaceSelectModalData,\n} from 'src/app/overlays/space-select-modal/space-select-modal.component';\nimport {\n    RecurrenceModalData,\n    RecurrenceModalComponent,\n} from 'src/app/overlays/recurrence-modal/recurrence-modal.component';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-booking-form',\n    templateUrl: './booking-form.component.html',\n    styleUrls: ['./booking-form.component.scss'],\n})\nexport class BookingFormComponent extends BaseDirective implements OnInit {\n    /** Form fields for booking */\n    @Input() public form: FormGroup;\n    /** List of available users to host bookings */\n    public user_list: User[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _users: UsersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._users.initialised.pipe(first((_) => _)).subscribe(() => {\n            const user: User = this._users.current;\n            const delegates = user.delegates.map(\n                (email) => this._users.find(email) || new User({ email, name: email.split('@')[0] })\n            );\n            this.user_list = [user].concat(delegates);\n        });\n    }\n\n    /** Display string for the recurrence value of the booking */\n    public get recurrence(): string {\n        const recurrence = this.form.controls.recurrence\n            ? this.form.controls.recurrence.value\n            : null;\n        const periods = ['None', 'Daily', 'Weekly', 'Biweekly', 'Monthly'];\n        if (!recurrence || !recurrence.period || (recurrence.period as any) >= periods.length) {\n            return 'No recurrence';\n        }\n        const period =\n            typeof recurrence.period === 'string' ? recurrence.period : periods[recurrence.period];\n        const end = recurrence.end\n            ? `until ${dayjs(recurrence.end).format('DD MMM YYYY')}`\n            : 'forever';\n        return `${period} ${end}`;\n    }\n\n    /** Whether notes and description should use the HTML editor */\n    public get use_html(): boolean {\n        return this._service.setting('app.booking.html_body') || false;\n    }\n\n    /** List of available types for bookings */\n    public get booking_types(): Identity[] {\n        return this._service.setting('app.booking.booking_types') || [];\n    }\n\n    /** Display string for the list of active spaces */\n    public get spaces(): string {\n        const spaces = this.form.controls.space_list.value;\n        return spaces.length === 1\n            ? spaces[0].name\n            : spaces.length > 1\n            ? `${spaces.length} spaces selected`\n            : 'No Spaces selected';\n    }\n\n    /**\n     * Open modal to change the space details for the booking\n     */\n    public openSpacesModal(): void {\n        const ref = this._dialog.open<SpaceSelectModalComponent, SpaceSelectModalData>(\n            SpaceSelectModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    spaces: this.form.controls.space_list.value,\n                    date: this.form.controls.date.value,\n                    duration: this.form.controls.duration.value,\n                    host: this.form.controls.organiser.value,\n                    multiple: true,\n                },\n            }\n        );\n        this.subscription(\n            'new_spaces',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    let space_list = this.form.controls.space_list.value;\n                    space_list = event.metadata;\n                    this.form.controls.space_list.setValue(unique(space_list, 'id'));\n                    ref.close();\n                    this.unsub('new_spaces');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openRecurrenceModal() {\n        const ref = this._dialog.open<RecurrenceModalComponent, RecurrenceModalData>(\n            RecurrenceModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                maxWidth: '95vw',\n                data: {\n                    details: this.form.controls.recurrence.value,\n                    date: this.form.controls.date.value,\n                },\n            }\n        );\n        this.subscription(\n            'recurrence',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    this.form.controls.recurrence.setValue(\n                        event.metadata && event.metadata.period !== 'none' ? event.metadata : {}\n                    );\n                    ref.close();\n                    this.unsub('recurrence');\n                }\n            })\n        );\n    }\n\n    /**\n     * Open modal to change the recurrence details for the booking\n     */\n    public openNewUserModal() {\n        const ref = this._dialog.open<NewUserModalComponent>(NewUserModalComponent, {\n            width: 'auto',\n            height: 'auto',\n        });\n        this.subscription(\n            'new_user',\n            ref.componentInstance.event.subscribe((event) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const attendees = this.form.controls.attendees.value;\n                    attendees.push(event.metadata);\n                    this.form.controls.attendees.setValue(unique(attendees, 'email'));\n                    ref.close();\n                    this.unsub('new_user');\n                }\n            })\n        );\n    }\n}\n","<div class=\"booking-form\" *ngIf=\"form\" [formGroup]=\"form\">\n    <div\n        class=\"field\"\n        *ngIf=\"form.controls.id && form.controls.id.value && form.controls.space_list\"\n    >\n        <label for=\"spaces\" i18n=\"Booking form spaces label\">Spaces: </label>\n        <an-action-field\n            name=\"spaces\"\n            [placeholder]=\"spaces\"\n            (onAction)=\"openSpacesModal()\"\n        ></an-action-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.title\">\n        <label\n            for=\"title\"\n            [class.error]=\"form.controls.title.invalid && form.controls.title.touched\"\n            i18n=\"Booking form title label\"\n        >\n            Title<span>*</span>:\n        </label>\n        <mat-form-field appearance=\"outline\">\n            <input matInput name=\"title\" placeholder=\"Meeting Title\" i18n-placeholder formControlName=\"title\" />\n\n            <mat-error *ngIf=\"form.controls.title.invalid\" i18n=\"Booking form title error\"\n                >Title is required</mat-error\n            >\n        </mat-form-field>\n    </div>\n    <div class=\"group date\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"date\" i18n=\"Booking form date label\">Date: </label>\n            <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n        </div>\n    </div>\n    <div class=\"group time\">\n        <div class=\"field\" *ngIf=\"form.controls.date\">\n            <label for=\"start-time\" i18n=\"Booking form start time label\">Start Time: </label>\n            <a-time-field\n                name=\"start-time\"\n                [disabled]=\"form.controls.all_day?.value\"\n                formControlName=\"date\"\n            ></a-time-field>\n            <div class=\"error info\" *ngIf=\"form.controls.date.touched && form.controls.date.invalid\">\n                Date and time must be in the future\n            </div>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.duration\">\n            <div class=\"label-group\">\n                <label for=\"duration\" i18n=\"Booking form duration label\">Duration: </label>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"form.controls.all_day\"\n                    i18n=\"Booking form all day label\"\n                    >All day booking</mat-checkbox\n                >\n            </div>\n            <a-duration-field\n                name=\"duration\"\n                [max]=\"720\"\n                [disabled]=\"form.controls.all_day?.value\"\n                [time]=\"form.controls.date?.value\"\n                formControlName=\"duration\"\n                [specialPreprops]=\"[10]\"\n            ></a-duration-field>\n            <div class=\"error info\" *ngIf=\"form.controls.duration.touched && form.controls.duration.invalid\">\n                Duration is invalid. End time must be in the future\n            </div>\n        </div>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.organiser\">\n        <label for=\"organiser\" i18n=\"Booking form organiser label\">Host: </label>\n        <a-user-search-field name=\"organiser\" formControlName=\"organiser\"></a-user-search-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.attendees\">\n        <label for=\"attendees\" i18n=\"Booking form attendees label\">Attendees: </label>\n        <a-user-list-field\n            name=\"attendees\"\n            formControlName=\"attendees\"\n            (newUser)=\"openNewUserModal()\"\n        ></a-user-list-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.type && booking_types.length > 1\">\n        <label for=\"booking-type\" i18n=\"Booking form booking type label\">Booking Type: </label>\n        <mat-form-field appearance=\"outline\">\n            <mat-select name=\"booking-type\" formControlName=\"type\">\n                <mat-option *ngFor=\"let type of booking_types\" [value]=\"type.id\">\n                    {{ type.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.has_catering\">\n        <mat-checkbox\n            formControlName=\"has_catering\"\n            i18n=\"Booking form need catering label\"\n        >\n            Need catering?\n        </mat-checkbox>\n    </div>\n    <div class=\"field\" *ngIf=\"form.controls.body\">\n        <label for=\"body\" i18n=\"Booking form notes label\">Notes: </label>\n        <mat-form-field name=\"body\" appearance=\"outline\" *ngIf=\"!use_html; else html_editor\">\n            <textarea\n                matInput\n                name=\"description\"\n                placeholder=\"Meeting Description\"\n                i18n-placeholder\n                formControlName=\"body\"\n            ></textarea>\n        </mat-form-field>\n        <ng-template #html_editor>\n            <editor formControlName=\"body\"></editor>\n        </ng-template>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.scss']\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form: FormGroup;\n}\n","<div class=\"user form\" *ngIf=\"form\">\n    <form [formGroup]=\"form\">\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"first-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form first name label\"\n                >First Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"first-name\"\n                    placeholder=\"First name\"\n                    i18n-placeholder\n                    formControlName=\"first_name\"\n                />\n                <mat-error i18n=\"User form first name error\">First name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.name\">\n            <label\n                for=\"system-name\"\n                [class.error]=\"form.controls.name.invalid && form.controls.name.touched\"\n                i18n=\"User form last name label\"\n                >Last Name:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input\n                    matInput\n                    name=\"last-name\"\n                    placeholder=\"Last name\"\n                    i18n-placeholder\n                    formControlName=\"last_name\"\n                />\n                <mat-error i18n=\"User form last name error\">Last name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"field\" *ngIf=\"form.controls.email\">\n            <label\n                for=\"email\"\n                [class.error]=\"form.controls.email.invalid && form.controls.email.touched\"\n                i18n=\"User form email label\"\n                >Email:</label\n            >\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" placeholder=\"Email Address\" i18n-placeholder formControlName=\"email\" />\n                <mat-error i18n=\"User form email error\">A valid email is required</mat-error>\n            </mat-form-field>\n        </div>\n    </form>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'app-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent extends BaseDirective {\n    @Input() public icon: ApplicationIcon;\n}\n","<div class=\"app-icon\" *ngIf=\"icon\">\n    <i *ngIf=\"icon.type !== 'img'\" [class]=\"icon.class\">{{ icon.content }}</i>\n    <img *ngIf=\"icon.type === 'img'\" [src]=\"icon.src | safe:'resource'\" />\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from '../../base.directive';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent extends BaseDirective implements OnInit {\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n    /** Form fields for the login form */\n    public form: FormGroup;\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true }) private pwd_field: ElementRef<HTMLInputElement>;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.form = new FormGroup({\n            username: new FormControl('', [Validators.required]),\n            password: new FormControl('', [Validators.required]),\n        });\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.loading = false;\n            this.logo = this._service.setting('app.logo_light') || { type: 'icon' };\n        });\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        const form = this.form.value;\n        this._users\n            .login(\n                {\n                    username: form.username,\n                    password: form.password,\n                },\n                { form: true }\n            )\n            .then(\n                () => this.loading = false,\n                () => {\n                    this.loading = false;\n                    this.form.controls.password.setErrors({ check: true });\n                }\n            );\n    }\n}\n","<div class=\"login\">\n    <div class=\"login-form\">\n        <form [formGroup]=\"form\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n                </div>\n            </div>\n            <div class=\"body\">\n                <ng-container *ngIf=\"!loading; else loading_state\">\n                    <div class=\"field\">\n                        <label\n                            for=\"username\"\n                            [class.error]=\"\n                                form.controls.username.invalid && form.controls.username.touched\n                            \"\n                            i18n=\"Login form username label\"\n                        >\n                            Username:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"username\"\n                                placeholder=\"Username/Email\"\n                                i18n-placeholder\n                                formControlName=\"username\"\n                            />\n                            <mat-error i18n=\"Login form username error\"\n                                >Username is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"field\">\n                        <label\n                            for=\"password\"\n                            [class.error]=\"\n                                form.controls.password.invalid && form.controls.password.touched\n                            \"\n                            i18n=\"Login form password label\"\n                        >\n                            Password:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                i18n-placeholder\n                                formControlName=\"password\"\n                                (keyup.enter)=\"login()\"\n                            />\n                            <mat-error i18n=\"Login form password error\"\n                                >Invalid username or password</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"footer\" *ngIf=\"!loading\">\n                <button mat-button (click)=\"login()\" i18n=\"Login action\">Login</button>\n            </div>\n        </form>\n    </div>\n</div>\n<ng-template #loading_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"64\"></mat-spinner>\n        </div>\n        <div class=\"text\" i18n=\"Checking login status\">Checking user credentials...</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { BaseDirective } from '../../base.directive';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    templateUrl: './popout-menu.component.html',\n    styleUrls: ['./popout-menu.component.scss']\n})\nexport class PopoutMenuComponent extends BaseDirective {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => {\n            this.show = false;\n        });\n    }\n}\n","<button\n    mat-icon-button\n    [class.small]=\"true\"\n    name=\"action\"\n    *ngFor=\"let item of actions; let i = index\"\n    [style.top]=\"show ? (-110 * i - 60) + '%' : ''\"\n    (click)=\"action.emit(item.id); show = false\"\n>\n    <app-icon [icon]=\"item\"></app-icon>\n</button>\n<button mat-icon-button name=\"menu\" [class.show]=\"show\" (click)=\"show = !show\" (window:click)=\"show ? close() : ''\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: show ? 'add' : 'more_vert' }\"></app-icon>\n</button>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n\n    transform(value: string, from: string = '_', to: string = ' '): string {\n        return (value|| '').split(from).join(to);\n    }\n}\n","import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseDirective } from '../../base.directive';\n\n@Component({\n    selector: 'a-searchbar',\n    templateUrl: './searchbar.component.html',\n    styleUrls: ['./searchbar.component.scss']\n})\nexport class SearchbarComponent extends BaseDirective implements OnChanges {\n    /** Current contents of the searchbar input */\n    @Input('value') public value: string;\n    /** Current contents of the searchbar input */\n    @Input() public placeholder: string;\n    /** Whether external changes are being processed */\n    @Input() public loading: boolean;\n    /** Whether external changes are being processed */\n    @Input() public autofocus: boolean;\n    /** Emitter for changes to the searchbar value */\n    @Output() public valueChange = new EventEmitter<string>();\n    /** Input field reference */\n    @ViewChild('input', { static: true }) private input_field: ElementRef<HTMLInputElement>;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.autofocus && this.autofocus) {\n            this.focusField()\n        }\n    }\n\n    public focusField() {\n        /* istanbul ignore else */\n        if (this.input_field && this.input_field.nativeElement) {\n            this.input_field.nativeElement.focus();\n        }\n    }\n}\n","<div class=\"searchbar\" tabindex=\"0\" (focus)=\"focusField()\" (click)=\"focusField()\">\n    <div class=\"prefix\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'search' }\"></app-icon>\n    </div>\n    <div class=\"input\">\n        <input #input\n            type=\"text\"\n            [(ngModel)]=\"value\"\n            (ngModelChange)=\"valueChange.emit($event)\"\n            [placeholder]=\"placeholder || 'Search...'\"\n            i18n-placeholder\n        />\n    </div>\n    <div class=\"suffix\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { ApplicationLinkInternal, ApplicationIcon } from '../../utilities/settings.interfaces';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n    /** Currently active building */\n    public get active_building(): Building {\n        return this._org.building;\n    }\n    public set active_building(building: Building) {\n        this._org.building = building;\n    }\n\n    /** List of available menu items */\n    public get menu_items(): ApplicationLinkInternal[] {\n        return this._service.setting('app.general.menu.items') || [];\n    }\n\n    /** Logo for the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._service.setting('app.logo_light');\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings || [];\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService) {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"logo\">\n    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe: 'resource'\" />\n</div>\n<div class=\"menu\">\n    <a\n        mat-button\n        class=\"item\"\n        *ngFor=\"let item of menu_items\"\n        [routerLink]=\"[item.route]\"\n        routerLinkActive=\"active\"\n    >\n        <div class=\"content\">\n            <div class=\"bar\"></div>\n            <div class=\"icon\">\n                <app-icon [icon]=\"item.icon\"></app-icon>\n            </div>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </a>\n</div>\n<div class=\"building dark-mode\" *ngIf=\"buildings && buildings.length > 1\">\n    <mat-form-field appearance=\"outline\">\n        <mat-select [(ngModel)]=\"active_building\">\n            <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                {{ building.name }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n","import {\n    Component,\n    OnInit,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { BaseDirective } from '../../base.directive';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-topbar-header',\n    templateUrl: './topbar-header.component.html',\n    styleUrls: ['./topbar-header.component.scss'],\n})\nexport class TopbarHeaderComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Currently active zone */\n    @Input() public zone: string;\n    /** Whether to show new item button */\n    @Input() public show_add_item = false;\n    /** Whether to show the events for the active month */\n    @Input() public show_events: boolean = false;\n    /** Emitter for changes selected date */\n    @Output() public dateChange = new EventEmitter<number>();\n    /** Emitter for add item button */\n    @Output() public event = new EventEmitter();\n    /** Counters of the events on given dates. Key format is `YYYY-MM-DD` */\n    public event_map: { [date: string]: number };\n\n    @ViewChild(MatMenuTrigger, { static: true }) trigger: MatMenuTrigger;\n\n    /** Display string for the currently selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return !date.isSame(dayjs(), 'd') ? date.format('DD MMM YYYY') : '';\n    }\n\n    constructor(private _bookings: BookingsService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const date = +localStorage.getItem('CONCIERGE.date');\n        /* istanbul ignore else */\n        if (date && date !== this.date) {\n            this.timeout(\n                'init',\n                () => {\n                    this.date = date;\n                    this.dateChange.emit(this.date);\n                },\n                10\n            );\n        }\n        this.subscription(\n            'events',\n            this._bookings.booking_list.subscribe((list) => {\n                this.event_map = {};\n                let date = dayjs(this.date).startOf('M');\n                const end = date.endOf('M');\n                while (!date.isAfter(end, 'd')) {\n                    this.event_map[date.format('YYYY-MM-DD')] = list.filter(\n                        (booking) =>\n                            dayjs(booking.date).isSame(date, 'd') &&\n                            booking.space_list.find((space) => space.zones.includes(this.zone)) &&\n                            booking.tentative\n                    ).length;\n                    date = date.add(1, 'd');\n                }\n            })\n        );\n    }\n\n    /** Change the selected date */\n    public changeDate(value: number) {\n        let date = dayjs(this.date).startOf('d');\n        date = date.add(value, 'd');\n        this.date = date.valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    /** Reset date to the current date */\n    public resetDate() {\n        this.date = dayjs().startOf('d').valueOf();\n        this.dateChange.emit(this.date);\n        localStorage.setItem('CONCIERGE.date', `${this.date}`);\n    }\n\n    public closeDatePicker() {\n        this.trigger.closeMenu();\n    }\n\n    /** New Item button click */\n    public newItem(): void {\n        this.event.emit('new_item');\n    }\n}\n","<div class=\"topbar-header\">\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <div *ngIf=\"show_add_item\" class=\"add-item\">\n        <button mat-mini-fab class=\"new-item\" name=\"new\" (click)=\"newItem()\">\n            <i class=\"material-icons\">add</i>\n        </button>\n    </div>\n    <div class=\"date\">\n        <div class=\"picker\">\n            <button mat-icon-button name=\"previous\" (click)=\"changeDate(-1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_left' }\"\n                ></app-icon>\n            </button>\n            <div class=\"text\" (dblclick)=\"resetDate()\">{{ date_display || 'Today' }}</div>\n            <button mat-icon-button name=\"next\" (click)=\"changeDate(1)\">\n                <app-icon\n                    [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_right' }\"\n                ></app-icon>\n            </button>\n        </div>\n        <button class=\"calendar\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'today' }\"></app-icon>\n        </button>\n    </div>\n</div>\n<mat-menu #appMenu=\"matMenu\" [class.dark-mode]=\"true\">\n    <div mat-menu-item class=\"date-picker\" (click)=\"$event.stopPropagation()\">\n        <a-date-picker\n            [(ngModel)]=\"date\"\n            [counters]=\"show_events ? event_map : {}\"\n            (ngModelChange)=\"dateChange.emit($event); closeDatePicker()\"\n        ></a-date-picker>\n    </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { User } from 'src/app/services/data/users/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    templateUrl: './user-avatar.component.html',\n    styleUrls: ['./user-avatar.component.scss']\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) {\n            return 'NA';\n        }\n        const parts = this.user.name.split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : this.user.name.slice(0, 2);\n    }\n}\n","<div class=\"user-avatar\" *ngIf=\"user\" [attr.user-id]=\"user.id\">\n    <div class=\"initials\" *ngIf=\"!user.image; else image_state\">{{ initials }}</div>\n</div>\n<ng-template #image_state>\n    <img [src]=\"user.image | safe: 'resource'\" />\n</ng-template>\n","import {\n    Directive,\n    Input,\n    Renderer2,\n    SimpleChanges,\n    OnChanges,\n    ContentChildren,\n    QueryList,\n    AfterContentInit\n} from '@angular/core';\nimport { CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\n\nimport { BaseDirective } from '../base.directive';\n\nexport enum ScrollDirection {\n    NONE,\n    X,\n    Y,\n    BOTH\n}\n\n@Directive({\n    selector: '[cdkDropList][scrollContainer]'\n})\nexport class CdkDropListScrollContainer extends BaseDirective\n    implements OnChanges, AfterContentInit {\n    /** Direction of scroll to determine updating the position of the drop list */\n    @Input() direction: ScrollDirection = ScrollDirection.X;\n    /** Name of the scroll container for the list */\n    @Input() scrollContainer: string;\n    /** Scroll container element */\n    public element: HTMLElement;\n    /** Last scroll position */\n    public last_scroll: { x: number; y: number } = { x: 0, y: 0 };\n\n    /** Draggable children elements */\n    @ContentChildren(CdkDrag) private items: QueryList<CdkDrag>;\n\n    constructor(private _cdkDropList: CdkDropList, private _renderer: Renderer2) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.scrollContainer && this.scrollContainer) {\n            this.element = this._cdkDropList.element.nativeElement.closest(\n                this.scrollContainer\n            ) as HTMLElement;\n        }\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscription(\n            'drag_items',\n            this.items.changes.subscribe((items: QueryList<CdkDrag>) => {\n                const list = items.toArray();\n                list.forEach((i, index) => {\n                    this.subscription(\n                        `list-item-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'mousedown', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'mouseup', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                    this.subscription(\n                        `list-item-touch-${index}`,\n                        this._renderer.listen(i.element.nativeElement, 'touchstart', () => {\n                            this.subscription(\n                                'item-dragged',\n                                this._renderer.listen('window', 'touchend', () => this.onDrop())\n                            );\n                            this.onDrag();\n                        })\n                    );\n                });\n            })\n        );\n    }\n\n    /** Start listing for scroll events on the container */\n    public onDrag() {\n        if (this.element) {\n            this.subscription(\n                'scroll',\n                this._renderer.listen(this.element, 'scroll', () => this.updateListPosition())\n            );\n        }\n    }\n\n    /** Stop listening for scroll events on the container */\n    public onDrop() {\n        this.unsub('scroll');\n    }\n\n    /**\n     * Forcefully update the position data of the drop list\n     */\n    private updateListPosition() {\n        this.timeout(\n            'update_positions',\n            () => {\n                const scroll = { x: this.element.scrollLeft, y: this.element.scrollTop };\n                if (\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.Y) &&\n                        scroll.y !== this.last_scroll.y) ||\n                    ((this.direction === ScrollDirection.BOTH ||\n                        this.direction === ScrollDirection.X) &&\n                        scroll.x !== this.last_scroll.x)\n                ) {\n                    (this._cdkDropList._dropListRef as any)._cacheOwnPosition();\n                    (this._cdkDropList._dropListRef as any)._siblings.forEach(i =>\n                        i.isReceiving() ? i._cacheOwnPosition() : null\n                    );\n                }\n                this.last_scroll = scroll;\n            },\n            50\n        );\n    }\n}\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockBooking } from 'src/app/services/data/bookings/booking.utilities';\nimport { randomInt, unique } from '../../utilities/general.utilities';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_USERS, MOCK_CONTACTS } from './users.mock';\nimport { API } from './common.mock';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BOOKINGS = Array(1000)\n    .fill(0)\n    .map((i) => {\n        const rooms = unique(\n            Array(randomInt(3, 1))\n                .fill(0)\n                .map((i) => MOCK_SPACES[Math.floor(Math.random() * MOCK_SPACES.length)]),\n            'id'\n        );\n        // Set the organiser with the generated user list\n        const organiser =\n            randomInt(9999) % 10 === 0\n                ? MOCK_USERS[MOCK_USERS.length - 1]\n                : MOCK_USERS[randomInt(MOCK_USERS.length)];\n        // Set the attendees with the generated user list\n        const attendees = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_USERS[randomInt(MOCK_USERS.length)]),\n            'email'\n        );\n        const guests = unique(\n            Array(randomInt(10))\n                .fill(0)\n                .map((i) => MOCK_CONTACTS[randomInt(MOCK_CONTACTS.length)]),\n            'email'\n        );\n        const booking_data = generateMockBooking({\n            organiser,\n            attendees: attendees.concat(guests),\n            room_ids: rooms.map((i) => i.email),\n        });\n        for (const space of rooms) {\n            booking_data.status[space.email] = ['approved', 'tentative', 'declined'][randomInt(3)];\n        }\n        return booking_data;\n    });\n\nMOCK_SPACES.forEach(\n    (i) => (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n);\n\n// Handler for bookings index\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        const user = MOCK_USERS[MOCK_USERS.length - 1];\n        let data = !event.query_params.email\n            ? MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === user.email ||\n                      i.organiser === user.email ||\n                      i.attendees.reduce((a, v) => a || v.email === user.email, false)\n              )\n            : MOCK_BOOKINGS.filter(\n                  (i) =>\n                      i.organiser.email === event.query_params.email ||\n                      (i.organiser as any) === event.query_params.email ||\n                      i.attendees.reduce((a, v) => a || v.email === event.query_params.email, false)\n              );\n        // Filter bookings between a given period\n        if (event.query_params.from) {\n            const start = dayjs(+event.query_params.from * 1000);\n            const end = event.query_params.to\n                ? dayjs(+event.query_params.to * 1000).endOf('m')\n                : start.endOf('d');\n            data = data.filter((i: any) => {\n                const bkn_start = dayjs(i.start_epoch * 1000 || i.start * 1000)\n                    .startOf('m')\n                    .second(1);\n                const bkn_end = dayjs(i.end_epoch * 1000 || i.end * 1000);\n                return (\n                    (bkn_start.isAfter(start, 's') && bkn_start.isBefore(end, 'm')) ||\n                    (bkn_end.isAfter(start, 'm') && bkn_end.isBefore(end, 's'))\n                );\n            });\n        }\n        return data;\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'GET',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const booking = MOCK_BOOKINGS.find(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (booking) {\n                return booking;\n            } else {\n                throw { status: 404, message: 'Booking not found.' };\n            }\n        } else {\n            throw { status: 400, message: 'Invalid booking ID' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for new bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings`,\n    metadata: MOCK_BOOKINGS,\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `bkn-${randomInt(9_999_999)}`;\n            event.body.icaluid = `ical-${event.body.id}`;\n            event.body.approval_status = {};\n            for (let i = 0; i < event.body.room_ids.length; i++) {\n                event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                    ? 'approved'\n                    : 'tentative';\n            }\n            MOCK_BOOKINGS.push(event.body);\n            MOCK_SPACES.forEach(\n                (space) =>\n                    (space.bookings = MOCK_BOOKINGS.filter(\n                        (booking) => booking.room_ids.indexOf(space.email) >= 0\n                    ))\n            );\n            return event.body;\n        } else {\n            throw { status: 500, message: 'Invalid booking data' };\n        }\n    },\n} as MockHttpRequestHandler);\n\n// Handler for updating existing bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'PUT',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                event.body.approval_status = {};\n                for (let i = 0; i < event.body.room_ids.length; i++) {\n                    event.body.approval_status[event.body.room_ids[i]] = event.body.auto_approve[i]\n                        ? 'approved'\n                        : 'tentative';\n                }\n                MOCK_BOOKINGS[index] = event.body;\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n                return event.body;\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for deleting exisiting bookings\nwindow.control.handlers.push({\n    path: `${API}/bookings/:id`,\n    metadata: MOCK_BOOKINGS,\n    method: 'DELETE',\n    callback: (event) => {\n        if (event.route_params.id) {\n            const index = MOCK_BOOKINGS.findIndex(\n                (i) => i.id === event.route_params.id || i.icaluid === event.route_params.id\n            );\n            if (index >= 0) {\n                MOCK_BOOKINGS.splice(index, 1);\n                MOCK_SPACES.forEach(\n                    (i) =>\n                        (i.bookings = MOCK_BOOKINGS.filter((j) => j.room_ids.indexOf(i.email) >= 0))\n                );\n            } else {\n                throw { status: 404, message: 'Booking not found' };\n            }\n        } else throw { status: 500, message: 'Invalid booking ID' };\n    },\n} as MockHttpRequestHandler);\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_ORG } from './organisation.mock';\nimport { DOMAIN } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_BUILDINGS = [\n    {\n        id: 'zone_bld-01',\n        zone_id: 'zone_bld-01',\n        name: 'Sydney',\n        settings: {\n            discovery_info: {\n                code: 'SYD',\n                timezone: 'Australia/Sydney',\n                neighbourhoods: {\n                    'zone_lvl-01': {\n                        'Test Searchable': 'Device_Bench',\n                    },\n                },\n                visitor_space: `sydney-01.02@${DOMAIN}`,\n                booking_rules: {\n                    'zone_lvl-33': [\n                        {\n                            conditions: {\n                                is_before: '60 days',\n                                max_length: '1 week',\n                            },\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-35': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: false,\n                            },\n                        },\n                    ],\n                    'zone_lvl-36': [\n                        {\n                            conditions: {},\n                            rules: {\n                                auto_approve: true,\n                            },\n                        },\n                    ],\n                },\n                levels: [\n                    {\n                        level_id: 'zone_lvl-33',\n                        level_name: 'Level 33',\n                        number: 1,\n                        map_url: 'assets/maps/sydney/level_33.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-35',\n                        level_name: 'Level 35',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_35.svg',\n                        floor_type: 'client',\n                    },\n                    {\n                        level_id: 'zone_lvl-36',\n                        level_name: 'Level 36',\n                        number: 2,\n                        map_url: 'assets/maps/sydney/level_36.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n    {\n        id: 'zone_bld-02',\n        zone_id: 'zone_bld-02',\n        name: 'London Post',\n        settings: {\n            discovery_info: {\n                code: 'LON',\n                timezone: 'Europe/London',\n                visitor_space: `london-01.02@${DOMAIN}`,\n                holding_bay: `11.10@${DOMAIN}`,\n                levels: [\n                    {\n                        level_id: 'zone_lvl-10',\n                        level_name: 'Level 10',\n                        number: 1,\n                        map_url: 'assets/maps/london/level_10.svg',\n                        floor_type: 'staff',\n                    },\n                    {\n                        level_id: 'zone_lvl-11',\n                        level_name: 'Level 11',\n                        number: 11,\n                        map_url: 'assets/maps/london/level_11.svg',\n                        floor_type: 'client',\n                    },\n                ],\n            },\n        },\n    },\n];\n\nMOCK_BUILDINGS.push({ ...MOCK_BUILDINGS[0], name: 'London' });\n\nMOCK_ORG[0].discovery_info.buildings = MOCK_BUILDINGS;\n\n// setTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/engine/v2/zones',\n        metadata: MOCK_BUILDINGS,\n        callback: (event) => {\n            if (event.query_params.tags === 'building') {\n                return { total: MOCK_BUILDINGS.length, results: MOCK_BUILDINGS };\n            } else if (event.query_params.tags === 'org') {\n                return { total: MOCK_ORG.length, results: MOCK_ORG };\n            } else if (event.query_params.tags === 'level') {\n                return { total: 0, results: [] };\n            }\n        },\n    } as MockHttpRequestHandler);\n// });\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\nimport { API } from './common.mock';\nimport { MOCK_SPACES } from './spaces.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\n\nconst MOCK_MENU = {\n    'zone_bld-01': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            zones: ['zone_bld-01'],\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'cashews', name: 'Cashew', price: 400, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                { id: 'almonds', name: 'Almonds', price: 200, zones: ['zone_bld-01'], parent_categories: ['snacks'] },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000, zones: ['zone_bld-01'],\n                    parent_categories: ['snacks'],\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                        { id: 'layz_orginal', name: 'Layz Orginal', zones: ['zone_bld-01'], parent_categories: ['chips'] },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments', zones: ['zone_bld-01'],\n            items: [\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,  zones: ['zone_bld-01'],\n                    parent_categories: ['refresh'],\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi', parent_categories: ['drinks'] },\n                        { id: 'solo', name: 'Solo', parent_categories: ['drinks'] },\n                        { id: 'fanta', name: 'Fanta', parent_categories: ['drinks'] },\n                        { id: 'coke_zero', name: 'Coke Zero', parent_categories: ['drinks'] },\n                    ],\n                },\n                { id: 'pepsi', name: 'Pepsi', price: 80, parent_categories: ['refresh'] },\n                { id: 'solo', name: 'Solo', price: 80, parent_categories: ['refresh'] },\n                { id: 'fanta', name: 'Fanta', price: 80, parent_categories: ['refresh'] },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80, parent_categories: ['refresh'] },\n            ],\n        },\n    ],\n    'zone_bld-02': [\n        {\n            id: 'snacks',\n            name: 'Snacks',\n            items: [\n                { id: 'pretzels', name: 'Pretzels', price: 200 },\n                { id: 'cashews', name: 'Cashew', price: 400 },\n                { id: 'almonds', name: 'Almonds', price: 200 },\n                {\n                    id: 'chips',\n                    name: 'Chips',\n                    description: 'Pick 1',\n                    must_select: 1,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'cheezels', name: 'Cheezels' },\n                        { id: 'smiths_orginal', name: 'Smiths Orginal' },\n                        { id: 'smiths_chicken', name: 'Smiths Chicken' },\n                        { id: 'layz_orginal', name: 'Layz Orginal' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'refresh',\n            name: 'Refreshments',\n            items: [\n                { id: 'pepsi', name: 'Pepsi', price: 80 },\n                { id: 'solo', name: 'Solo', price: 80 },\n                { id: 'fanta', name: 'Fanta', price: 80 },\n                { id: 'coke_zero', name: 'Coke Zero', price: 80 },\n                {\n                    id: 'drinks',\n                    name: 'Drink Package',\n                    description: 'Pick 3 types of drinks',\n                    must_select: 3,\n                    package: true,\n                    price: 1000,\n                    items: [\n                        { id: 'pepsi', name: 'Pepsi' },\n                        { id: 'solo', name: 'Solo' },\n                        { id: 'fanta', name: 'Fanta' },\n                        { id: 'coke_zero', name: 'Coke Zero' },\n                    ],\n                },\n            ],\n        },\n        {\n            id: 'dinner',\n            name: 'Dinner',\n            items: [\n                {\n                    id: 'Schnitzel',\n                    name: 'Chicken Schnitzel',\n                    description: 'With a side of chips or salad',\n                    price: 1200,\n                    must_select: 1,\n                    items: [\n                        { item: 'chips', name: 'Chips' },\n                        { item: 'salad', name: 'Salad' },\n                    ],\n                },\n            ],\n        },\n    ],\n};\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/menu`,\n    metadata: [],\n    method: 'GET',\n    callback: (event) => {\n        if (event.query_params.zone_id) {\n            return MOCK_MENU[event.query_params.zone_id] || [];\n        }\n        throw { status: 400, message: 'Invalid room ID' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const item: CateringCategory = event.body;\n            for (const zone of item.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (item.parent_categories && item.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === item.parent_categories[0]);\n                    if (parent) {\n                        parent.items.push(item)\n                    } else {\n                        for (const category of MOCK_MENU[zone]) {\n                            const parent = category.items.find(cat => cat.id === item.parent_categories[0]);\n                            if (parent) {\n                                parent.items.push(item)\n                                return item;\n                            }\n                        }\n                        throw { status: 400, message: `Unable to find parent category with id \"${item.parent_categories[0]}\"` };\n                    }\n                } else {\n                    throw { status: 400, message: `Items require a parent category` };\n                }\n            }\n            return item;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/item/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                if (parent) {\n                    (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                } else {\n                    throw { status: 400, message: `Unable to find item with ID \"${event.route_params.id}\"` };\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for item' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category`,\n    metadata: [],\n    method: 'POST',\n    callback: (event) => {\n        if (event.body) {\n            event.body.id = `category-${randomInt(9999_9999)}`\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                if (category.parent_categories && category.parent_categories.length) {\n                    const parent = MOCK_MENU[zone].find(cat => cat.id === category.parent_categories[0]);\n                    if (parent) {\n                       parent.items.push(category);\n                    } else {\n                        throw { status: 400, message: `Unable to find parent category with id \"${category.parent_categories[0]}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].push(category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\n// Handler for bookings show\nwindow.control.handlers.push({\n    path: `${API}/catering/category/:id`,\n    metadata: [],\n    method: 'PUT',\n    callback: (event) => {\n        if (event.body && event.route_params.id) {\n            const category: CateringCategory = event.body;\n            for (const zone of category.zones) {\n                if (!MOCK_MENU[zone]) {\n                    MOCK_MENU[zone] = [];\n                }\n                const index = MOCK_MENU[zone].findIndex((itm) => itm.id === category.id);\n                if (index < 0) {\n                    const parent = findParent(event.route_params.id, MOCK_MENU[zone]);\n                    if (parent) {\n                        (parent.items as any).splice(parent.items.findIndex(itm => itm.id === category.id), 1, category)\n                    } else {\n                        throw { status: 400, message: `Unable to find category with ID \"${event.route_params.id}\"` };\n                    }\n                } else {\n                    MOCK_MENU[zone].splice(index, 1, category);\n                }\n            }\n            return category;\n        }\n        throw { status: 400, message: 'No contents for category' };\n    },\n} as MockHttpRequestHandler);\n\nfunction findParent(id: string, list: CateringCategory[]): CateringCategory {\n    for (const category of list) {\n        const found = category.items.find((item) => item.id === id);\n        if (found) {\n            return category;\n        } else {\n            const parent = findParent(id, category.items as any);\n            if (parent) {\n                return parent;\n            }\n        }\n    }\n    return null;\n}\n","\n/** Domain of the organisation */\nexport const DOMAIN = 'acaprojects.com';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff';\n","import { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { MOCK_USERS } from \"./users.mock\";\nimport { MOCK_SPACES } from './spaces.mock';\nimport { MOCK_BUILDINGS } from './buildings.mock';\nimport { randomInt } from '../../utilities/general.utilities';\nimport { generateMockLocation } from 'src/app/services/data/location/location.utilities';\n\nexport const MOCK_LOCATIONS: any[] = [];\n\nconst spaces = MOCK_SPACES.map(space => space.map_id);\nconst levels = MOCK_BUILDINGS.reduce((lvls, bld) => {\n    bld.settings.discovery_info.levels.forEach(lvl => lvls.push(lvl.level_id));\n    return lvls;\n}, []);\n\nfor (const user of MOCK_USERS) {\n    if (user.location || randomInt(99999) % 2 === 0) {\n        user.location = generateMockLocation(null, spaces, levels);\n        MOCK_LOCATIONS.push(user.location);\n    }\n}\n\nsetTimeout(() => {\n    window.control.handlers.push({\n        path: '/api/staff/people/:email',\n        metadata: MOCK_LOCATIONS,\n        callback: (event) => {\n            if (event.route_params.email) {\n                const user = MOCK_USERS.find(user => user.email === event.route_params.email || user.id === event.route_params.email);\n                if (user) {\n                    return user.location;\n                }\n            }\n            throw { status: 404, message: `Unable to locate user with email ${event.route_params.email}` };\n        }\n    } as MockHttpRequestHandler);\n});\n\n\n","export const MOCK_ORG = [\n    {\n        send_acceptance: true,\n        discovery_info: {\n            buildings: []\n        }\n    }\n];\n","import { generateMockSpace } from 'src/app/services/data/spaces/space.utilities';\nimport { API, DOMAIN } from './common.mock';\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport * as dayjs from 'dayjs';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_SPACES = [\n    { id: '35.06', name: 'SYD-35-Durack-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-35'], bookable: true },\n    { id: '36.08', name: 'SYD-36-Trickett-internal-05-DV', zones: ['zone_bld-01', 'zone_lvl-36'], bookable: true },\n    { id: '33.02', name: 'SYD-33West-Wedding Cake-10V', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: false },\n    { id: '33.03', name: 'SYD-33West-Pinchgut-05DV', zones: ['zone_bld-01', 'zone_lvl-33'], bookable: true },\n    { id: '10.02', name: 'LON-10-10_02_Village_green', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '10.47', name: 'LON-10-EC10_10_47_Gallery', zones: ['zone_bld-02', 'zone_lvl-10'] },\n    { id: '11.07', name: 'LON-11-EC11_11_07_Client', zones: ['zone_bld-02', 'zone_lvl-11'] },\n    { id: '11.10', name: 'LON-11-EC11_11_10_Client', zones: ['zone_bld-02', 'zone_lvl-11'] }\n].map((space_data: any) => {\n    const space = generateMockSpace({\n        bookable: true,\n        ...space_data,\n        map_id: `${space_data.id}`,\n        id: `sys_rm-${space_data.id}`,\n        email: `${space_data.id}@${DOMAIN}`,\n        name: `${space_data.name}`\n    });\n    window.control.systems[space.id] = {\n        Bookings: [\n            {\n                today: space.bookings\n            }\n        ]\n    };\n    return space;\n});\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/rooms`,\n    metadata: MOCK_SPACES,\n    callback: event => {\n        let results = MOCK_SPACES;\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            results = results.filter(\n                i =>\n                    (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                    (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        // Remove rooms without given zones from results\n        if (event.query_params.zone_ids) {\n            const zone_ids = event.query_params.zone_ids.split(',');\n            results = results.filter(i => {\n                let count = 0;\n                for (const zone of zone_ids) {\n                    if (i.zones.indexOf(zone) >= 0) {\n                        count++;\n                    }\n                }\n                return count >= zone_ids.length;\n            });\n        }\n        // Remove rooms without given ids from results\n        if (event.query_params.room_ids) {\n            const room_ids = event.query_params.room_ids.split(',');\n            results = results.filter(i => room_ids.indexOf(i.id) >= 0);\n        }\n        // Update availability status of each room results\n        if (event.query_params.available_from) {\n            const from = dayjs(+event.query_params.available_from * 1000);\n            const to = dayjs(+event.query_params.available_to * 1000);\n            results.forEach(space => {\n                for (const booking of space.bookings) {\n                    const start = dayjs(booking.start_epoch * 1000);\n                    const end = dayjs(booking.end_epoch * 1000);\n                    if (\n                        (from.isAfter(start, 'm') && from.isBefore(end, 'm')) ||\n                        (to.isAfter(start, 'm') && to.isBefore(end, 'm')) ||\n                        (start.isAfter(from, 'm') && start.isBefore(to, 'm'))\n                    ) {\n                        space.settings = { available: false };\n                    } else {\n                        space.settings = { available: true };\n                    }\n                }\n            });\n        }\n        return results;\n    }\n} as MockHttpRequestHandler);\n","\nimport { MockHttpRequestHandler } from '@placeos/ts-client';\n\nimport { generateMockUser } from 'src/app/services/data/users/user.utilities';\nimport { API } from './common.mock';\n\nwindow.control = window.control || {};\nwindow.control.systems = window.control.systems || {};\nwindow.control.handlers = window.control.handlers || [];\n\nexport const MOCK_USERS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser());\nexport const MOCK_CONTACTS = Array(Math.floor(Math.random() * 300 + 100)).fill(0)\n    .map(i => generateMockUser({ external: true }));\n\nexport const PREDEFINED_USERS = [\n    'Jonathan McFarlane',\n    'Stephen Von Takach',\n    'Alex Sorafumo',\n    'Candy Russo',\n    'Cristina Boston',\n    'Eugene Murphy',\n    'Ben Hoad',\n    'Kim Burgess',\n    'Desk Test',\n    'Space Test',\n    'Wireless Test',\n    'Zo-Kalar'\n];\n\n// Add predefined user to user list\nfor (const user of PREDEFINED_USERS) {\n    const id = user.split(' ').join('.').toLowerCase();\n    const new_user = generateMockUser({ id, name: user });\n    new_user.location = true;\n    MOCK_USERS.push(new_user);\n}\n\n// Add handler for users index\nwindow.control.handlers.push({\n    path: `${API}/users`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_USERS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for users show\nwindow.control.handlers.push({\n    path: `${API}/users/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id || i.email === event.route_params.id);\n        if (user) {\n            return user;\n        } else if (event.route_params.id === 'current') {\n            return MOCK_USERS[MOCK_USERS.length - 1];\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts index\nwindow.control.handlers.push({\n    path: `${API}/contacts`,\n    metadata: MOCK_CONTACTS,\n    callback: (event) => {\n        if (event.query_params.q) {\n            const query = event.query_params.q.toLowerCase();\n            return MOCK_CONTACTS.filter(i =>\n                (i.id || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.name || '').toLowerCase().indexOf(query) >= 0 ||\n                (i.email || '').toLowerCase().indexOf(query) >= 0\n            );\n        }\n        return MOCK_USERS;\n    }\n} as MockHttpRequestHandler);\n\n// Add handler for contacts show\nwindow.control.handlers.push({\n    path: `${API}/contacts/:id`,\n    metadata: MOCK_USERS,\n    callback: (event) => {\n        const user = MOCK_USERS.find(i => i.id === event.route_params.id || i.name === event.route_params.id);\n        if (user) {\n            return user;\n        }\n        throw { status: 404, message: 'User not found' };\n    }\n} as MockHttpRequestHandler);\n\n\n","\nimport { createSystem } from './systems.mock';\n\nimport './api/organisation.mock';\nimport './api/buildings.mock';\nimport './api/users.mock';\nimport './api/spaces.mock';\nimport './api/bookings.mock';\nimport './api/locations.mock';\nimport './api/catering-menu.mock';\n\nimport * as faker from 'faker';\n\nfaker.seed(2560);\n\nwindow.control = window.control || {};\nwindow.control.systems = {\n    ...window.control.systems,\n    ['sys-B0']: createSystem('sys-B0')\n} || {};\nwindow.control.handlers = window.control.handlers || [];\n","\n\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nexport function createSystem(id?: string) {\n    id = id || `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace({ id });\n    SPACE_LIST.push(space);\n\n    const booking_bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n\n    const today = dayjs();\n    const desk_bindings = {\n        'zone_lvl-01:bookings': {\n            'SYD.1.09.E': {\n                [today.format('YYYY-MM-DD')]: {\n                    // 'first@acaprojects.com': {\n                    'zo-kalar@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.1.09.F': {},\n            'SYD.1.09.G': {}\n        },\n        'zone_lvl-02:bookings': {\n            'SYD.2.01.A': {\n                [today.format('YYYY-MM-DD')]: {\n                    'first@acaprojects.com': {\n                        start: today.subtract(1, 'h').unix(),\n                        end: today.add(1, 'h').unix(),\n                        checked_in: true\n                    }\n                },\n                [today.add(1, 'd').format('YYYY-MM-DD')]: {\n                    'second@acaprojects.com': {\n                        start: today.add(1, 'd').subtract(1, 'h').unix(),\n                        end: today.add(1, 'd').add(1, 'h').unix()\n                    }\n                }\n            },\n            'SYD.2.01.B': {},\n            'SYD.2.01.C': {}\n        }\n    };\n\n    const system = {\n        id, name: space.name,\n        Bookings: [],\n        DeskManagement: [{\n            'zone_lvl-01:desk_ids': ['SYD.1.09.E', 'SYD.1.09.F', 'SYD.1.09.G']\n        }],\n        DeskBookings: []\n    };\n    system.Bookings.push({\n        ...booking_bindings,\n        room_name: space.name,\n        today: space.bookings,\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    system.DeskBookings.push({\n        ...desk_bindings,\n        $book: (email: string, desk: string, date: number) => {\n            console.log('[MOCK] Book called');\n        },\n        $check_in: (email: string, desk: string) => {\n            system.DeskBookings[0]['zone_lvl-01:bookings'][desk][dayjs().format('YYYY-MM-DD')][email].checked_in = true;\n        },\n        $check_out: (email: string, desk: string) => {\n            console.log(`[MOCK]Check out called`);\n        },\n    });\n    return system;\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { ComposerModule } from '@placeos/composer';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\nimport { ADatePickerModule } from '@acaprojects/ngx-date-picker';\n\nimport { BaseDirective } from './base.directive';\nimport { LoginComponent } from './components/login/login.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { TopbarHeaderComponent } from './components/topbar-header/topbar-header.component';\nimport { SearchbarComponent } from './components/searchbar/searchbar.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { PopoutMenuComponent } from './components/popout-menu/popout-menu.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component'\n\nimport { UserFormComponent } from './components/forms/user-form/user-form.component';\nimport { BookingFormComponent } from './components/forms/booking-form/booking-form.component';\n\nimport { UserSearchFieldComponent } from './components/custom-fields/user-search-field/user-search-field.component';\nimport { TimeFieldComponent } from './components/custom-fields/time-field/time-field.component';\nimport { DurationFieldComponent } from './components/custom-fields/duration-field/duration-field.component';\nimport { DateFieldComponent } from './components/custom-fields/date-field/date-field.component';\nimport { ActionFieldComponent } from './components/custom-fields/action-field/action-field.component';\nimport { UserListFieldComponent } from './components/custom-fields/user-list-field/user-list-field.component';\nimport { CounterComponent } from './components/custom-fields/counter/counter.component';\nimport { CdkDropListScrollContainer } from './directives/cdk-drop-list-scroll-container.directive';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ActionIconComponent } from './components/action-icon/action-icon.component';\nimport { ReplacePipe } from './components/replace.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseDirective,\n    LoginComponent,\n    IconComponent,\n    ActionIconComponent,\n    TopbarHeaderComponent,\n    SearchbarComponent,\n    UserAvatarComponent,\n\n    UserFormComponent,\n    BookingFormComponent,\n\n    PopoutMenuComponent,\n    FeedbackComponent,\n    SidebarComponent\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    CdkDropListScrollContainer\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    DateFieldComponent,\n    ActionFieldComponent,\n    TimeFieldComponent,\n    DurationFieldComponent,\n    UserSearchFieldComponent,\n    UserListFieldComponent,\n    CounterComponent,\n];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatSlideToggleModule\n];\n\nconst CDK_MODULES: any[] = [\n    ScrollingModule,\n    DragDropModule,\n    CdkTableModule\n];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n        ...DIRECTIVES,\n        ReplacePipe\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        APipesModule,\n        ADatePickerModule,\n        ACustomEventsModule,\n        RouterModule,\n        EditorModule,\n        ComposerModule,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES\n    ],\n    exports: [\n        APipesModule,\n        ACustomEventsModule,\n        ADatePickerModule,\n        ...COMPONENTS,\n        ...DIRECTIVES,\n        ...ENTRY_COMPONENT,\n        ...MATERIAL_MODULES,\n        ...CDK_MODULES,\n        ReplacePipe\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end * 1000).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap, Point } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(\n        agent.match(/iPhone|iPad|iPod/) &&\n        agent.match(/AppleWebKit/) &&\n        !agent.match('CriOS')\n    );\n}\n\n/* istanbul ignore next */\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter(\n        (el, pos, arr) =>\n            arr.indexOf(key ? arr.find((i) => i[key] === el[key]) : arr.find((i) => i === el)) ===\n            pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) {\n        return '';\n    }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? h + (short ? 'h' : ' hour' + (h === 1 ? '' : 's')) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) {\n            d += short ? ' ' : ', ';\n        }\n        const m = duration % 60;\n        d += `${m >= 1 ? m + (short ? 'm' : ' minute' + (m === 1 ? '' : 's')) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(\n    filter: string,\n    items?: T[],\n    fields: string[] = ['id']\n): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        /* istanbul ignore else */\n        if (f) {\n            /* istanbul ignore else */\n            if (!list[f]) {\n                list[f] = 0;\n            }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        /* istanbul ignore else */\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    /* istanbul ignore else */\n    if (filter) {\n        results = item_list.filter((item) => {\n            let match_count = 0;\n            item.match_index = 65535;\n            item.match = '';\n            const field_list = {};\n            // Initialise field match variables\n            for (const f of fields) {\n                field_list[f] = {\n                    value: (item[f] || '').toLowerCase(),\n                    index: 65536,\n                    matched: 0,\n                };\n            }\n            // Search for matches with the tokenised filter string\n            for (const i of parts) {\n                /* istanbul ignore else */\n                if (i.word) {\n                    // Check fields for matches\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        const index = field.value.indexOf(i.word);\n                        field.index = index < field.index ? index : field.index;\n                        field.matches = (field.value.match(i.regex) || []).length;\n                        field.value = field.value.replace(i.regex, ' ');\n                    }\n                    // Update token match count\n                    for (const f of fields) {\n                        const field = field_list[f];\n                        /* istanbul ignore else */\n                        if (field.matches >= i.count) {\n                            match_count++;\n                            // Update field matches\n                            let changed = 0;\n                            const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                            for (const k of tokens) {\n                                /* istanbul ignore else */\n                                if (changed >= i.count) {\n                                    break;\n                                }\n                                /* istanbul ignore else */\n                                if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                    tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                    changed++;\n                                }\n                            }\n                            item[`match_${f}`] = tokens.join(' ');\n                            break;\n                        }\n                    }\n                }\n            }\n            // Get field with the most relevent match\n            for (const f of fields) {\n                const field = field_list[f];\n                /* istanbul ignore else */\n                if (field.index < item.match_index && field.index >= 0) {\n                    item.match_index = field.index;\n                    item.match = f;\n                }\n            }\n            return item.match_index >= 0 && item.match && match_count >= parts.length;\n        });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    /* istanbul ignore else */\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = time.split(':');\n    const date = dayjs()\n        .hour(+parts[0])\n        .minute(+parts[1])\n        .startOf('m');\n    return date.valueOf();\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm A';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date.toLocaleTimeString();\n    return localeString.indexOf('AM') < 0 && localeString.indexOf('PM') < 0;\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string) {\n    const lines = csv.split('\\n');\n    let fields = lines.splice(0, 1)[0].split(',');\n    fields = fields.map((v) => v.replace('\\r', ''));\n    const list: any[] = [];\n    for (const line of lines) {\n        let parts = line.split(',');\n        parts = parts.map((v) => v.replace('\\r', ''));\n        /* istanbul ignore else */\n        if (parts.length >= fields.length) {\n            const item: any = {};\n            for (let i = 0; i <= parts.length; i++) {\n                let part = null;\n                part = parts[i];\n                /* istanbul ignore else */\n                if (part !== undefined) {\n                    item[(fields[i] || '').split(' ').join('_').toLowerCase()] = part;\n                }\n            }\n            list.push(item);\n        }\n    }\n\n    return list;\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    /* istanbul ignore else */\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => json[0].hasOwnProperty(key));\n        return `\\uFEFF${valid_keys.join(',')}\\n${json\n            .map((item) => valid_keys.map((key) => item[key]).join(','))\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n\n/* istanbul ignore next */\n/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Grab point details from mouse or touch event\n * @param event Event to grab details from\n */\nexport function eventToPoint(event: MouseEvent | TouchEvent): Point {\n    if (!event) {\n        return { x: -1, y: -1 };\n    }\n    if (event instanceof MouseEvent) {\n        return { x: event.clientX, y: event.clientY };\n    } else {\n        return event.touches && event.touches.length > 0\n            ? { x: event.touches[0].clientX, y: event.touches[0].clientY }\n            : { x: -1, y: -1 };\n    }\n}\n\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: T[]) {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n\nexport function validateEndTime(date_control: AbstractControl) {\n    return (control: AbstractControl) => {\n        const date = dayjs(date_control ? date_control.value : undefined).add(control.value || 60, 'm');\n        return date.isBefore(dayjs(), 'm') ? { end_time: true } : null;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'app-catering',\n    templateUrl: './catering.component.html',\n    styleUrls: ['./catering.component.scss']\n})\nexport class CateringComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Name of the page to display */\n    public page: string;\n    /** Filter string for searching */\n    public search_str: string;\n    /** Toggle for new category modal */\n    public category: number = 0;\n    /** Toggle for new package modal */\n    public package: number = 0;\n    /** Number of categories being displayed */\n    public length: number;\n    /** Order type to filter by */\n    public order_type: string = '';\n\n    constructor(private _route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.category = 0;\n        this._service.title = 'Catering';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('page')) {\n                this.page = params.get('page');\n            }\n        }));\n    }\n}\n","<div class=\"catering\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"input-wrapper\" *ngIf=\"page\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"page === 'orders'\" [class.other-field]=\"true\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"order_type\">\n                        <mat-option [value]=\"''\">All Orders</mat-option>\n                        <mat-option [value]=\"'Pantry'\">Pantry Only</mat-option>\n                        <mat-option [value]=\"'Kitchen'\">Kitchen Only</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <button mat-button *ngIf=\"page === 'menu'\" (click)=\"category = category + 1\">Add Category</button>\n            <button mat-button *ngIf=\"page === 'menu' && length\" (click)=\"package = package + 1\">Add Sub-Category/Package</button>\n        </a-topbar-header>\n        <main>\n            <ng-container [ngSwitch]=\"page\">\n                <ng-container *ngSwitchCase=\"'menu'\">\n                    <a-catering-menu [search]=\"search_str\" [category]=\"category\" [package]=\"package\" (length)=\"length=$event\"></a-catering-menu>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'orders'\">\n                    <a-catering-orders [date]=\"date\" [search]=\"search_str\" [type]=\"order_type\"></a-catering-orders>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <div class=\"options\">\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'menu']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/menus.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Menus and Pricing</h2>\n                                </div>\n                                <div class=\"desc\">View and edit menus and pricing</div>\n                            </div>\n                        </a>\n                        <a class=\"card\" mat-button [routerLink]=\"['/catering', 'orders']\">\n                            <div class=\"content\">\n                                <div\n                                    class=\"img\"\n                                    [style.background]=\"\n                                        'linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(assets/img/orders.jpg)'\n                                            | safe: 'style'\n                                    \"\n                                >\n                                    <h2>Catering Orders</h2>\n                                </div>\n                                <div class=\"desc\">\n                                    View catering orders and their statuses upon arrival\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CateringComponent } from './catering.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { SharedOverlaysModule } from 'src/app/overlays/overlays.module';\nimport { CateringOrdersComponent } from './orders/orders.component';\nimport { CateringMenuComponent } from './menu/menu.component';\nimport { CateringMenuItemListComponent } from './menu/item-list/item-list.component';\nimport { CateringMenuItemComponent } from './menu/item/item.component';\nimport { CateringCategoryModalComponent } from './overlays/category-modal/category-modal.component';\nimport { CateringGroupModalComponent } from './overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from './overlays/item-modal/item-modal.component';\nimport { CateringOrdersItemComponent } from './orders/item/item.component';\nimport { OrderDetailsModalComponent } from './overlays/order-details-modal/order-details-modal.component';\nimport { OrderDetailsItemsComponent } from './overlays/order-details-modal/items/items.component';\nimport { OrderBookingDetailsComponent } from './overlays/order-details-modal/booking-details/booking-details.component';\nimport { OrderDetailsNotesComponent } from './overlays/order-details-modal/messages/messages.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: CateringComponent },\n    { path: ':page', component: CateringComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        CateringComponent,\n        CateringOrdersComponent,\n        CateringMenuComponent,\n        CateringMenuItemListComponent,\n        CateringMenuItemComponent,\n        CateringCategoryModalComponent,\n        CateringGroupModalComponent,\n        CateringItemModalComponent,\n        CateringOrdersItemComponent,\n        OrderDetailsModalComponent,\n        OrderDetailsItemsComponent,\n        OrderBookingDetailsComponent,\n        OrderDetailsNotesComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        SharedOverlaysModule\n    ],\n})\nexport class CateringModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'a-catering-menu-item-list',\n    templateUrl: './item-list.component.html',\n    styleUrls: ['./item-list.component.scss'],\n})\nexport class CateringMenuItemListComponent extends BaseDirective implements OnChanges {\n    /** Category to display details for */\n    @Input() public category: CateringCategory;\n    /** Toggle for new groups */\n    @Input() public package: number;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.package && this.package) {\n            this.openGroupModal();\n        }\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({\n                parent_id: this.category.id,\n                zones: [this.building.id],\n            });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: this.category },\n        });\n        this.subscription(\n            'category_modal',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    const index = this.category.items.findIndex(\n                        (item) => event.metadata.id === item.id\n                    );\n                    if (index >= 0) {\n                        (this.category.items as any[]).splice(index, 1, event.metadata);\n                    } else {\n                        (this.category.items as any[]).push(event.metadata);\n                    }\n                }\n            })\n        );\n    }\n}\n","<div class=\"list\">\n    <ng-container *ngIf=\"category && category.items && category.items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of category.items\">\n            <a-catering-menu-item [parent]=\"category\" [item]=\"item\"></a-catering-menu-item>\n        </div>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No packages or sub-categories for {{ category.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringGroupModalComponent } from '../../overlays/group-modal/group-modal.component';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { CateringComponent } from '../../catering.component';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { CateringItemModalComponent } from '../../overlays/item-modal/item-modal.component';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'a-catering-menu-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringMenuItemComponent extends BaseDirective {\n    /** Whether item is a child of another */\n    @Input() public subitem: boolean;\n    /** Item to display */\n    @Input() public item: CateringCategory;\n    /** Parent of the item being displayed */\n    @Input() public parent: CateringCategory;\n    /** Whether item should be disabled if not available anytime */\n    @Input() public disabled: boolean;\n    /** Whether to show children items */\n    public show_children: boolean;\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    public get symbol(): string {\n        return this.building.currency || 'USD';\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _menu_items: CateringItemsService,\n        private _menu_categories: CateringCategoriesService\n    ) {\n        super();\n    }\n\n    public openGroupModal(group?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!group) {\n            group = new CateringCategory({ parent_id: this.item.id, zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringGroupModalComponent, {\n            data: { group, parent: group.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(group, event.metadata);\n                }\n            })\n        );\n    }\n\n    public openItemModal(item?: CateringItem) {\n        /* istanbul ignore else */\n        if (!item) {\n            item = new CateringItem({ parent_id: this.item.id });\n        }\n        const ref = this._dialog.open(CateringItemModalComponent, {\n            data: { item, parent: item.id ? this.parent : this.item },\n        });\n        this.subscription(\n            'item-modal',\n            ref.componentInstance.event.subscribe((event) => {\n                if (event.reason === 'done' && event.metadata) {\n                    this.updateItemList(item, event.metadata);\n                }\n            })\n        );\n    }\n\n    private updateItemList(old_item: CateringItem | CateringCategory, new_item: HashMap) {\n        const item =\n            old_item instanceof CateringCategory\n                ? new CateringCategory(new_item)\n                : new CateringItem(new_item);\n                console.log('Item:', item);\n        if (old_item.id) {\n            const index = this.parent.items.findIndex((itm) => itm.id === old_item.id);\n            (this.parent.items as any[]).splice(index, 1, item);\n            (this.parent as any).items = [...this.parent.items];\n        } else {\n            (this.item.items as any[]).push(item);\n        }\n    }\n\n    public deleteItem() {\n        const type =\n            this.item instanceof CateringCategory\n                ? this.item.package\n                    ? 'Package'\n                    : 'Sub-category'\n                : 'Item';\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: `Delete catering ${type}`,\n                content: `Are you sure you want to delete the catering ${type} \"${\n                    this.item.name\n                }\"?<br />${\n                    this.item instanceof CateringCategory\n                        ? 'Any children items or groups will be <strong>immediately</strong> deleted'\n                        : ''\n                }`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${type}...`;\n                let e = null;\n                let service =\n                    this.item instanceof CateringCategory\n                        ? this._menu_categories\n                        : this._menu_items;\n                await service.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                }\n            }\n        });\n    }\n}\n","<div\n    class=\"catering-item\"\n    *ngIf=\"item\"\n    [class.subitem]=\"subitem\"\n>\n    <div\n        class=\"image\"\n        *ngIf=\"!subitem\"\n        [style.background-image]=\"'url(' + item.image_path + ')'\"\n    ></div>\n    <div class=\"details\">\n        <div class=\"name\">{{ item.name }}</div>\n        <div class=\"description\">{{ item.package ? '[Package] ' : '' }}{{ item.description }}</div>\n        <div class=\"options\">\n            <div class=\"option price mobile-only\" *ngIf=\"item.unit_price\">\n                {{ item.unit_price / 100 | currency: symbol }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.items.length && !item.must_select\"\n            >\n                Contains {{ item.items.length }} item{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n            <div\n                class=\"option\"\n                *ngIf=\"item.package && item.must_select && item.amount > 0\"\n            >\n                <span class=\"not-mobile\">Selected </span>{{ item.must_select }} opt<span\n                    class=\"not-mobile\"\n                    >ion</span\n                >{{ item.items.length === 1 ? '' : 's' }}\n            </div>\n        </div>\n    </div>\n    <div class=\"option price not-mobile\" *ngIf=\"item.unit_price\">\n        {{ item.unit_price / 100 | currency: symbol }}\n    </div>\n    <button mat-icon-button name=\"more\" [matMenuTriggerFor]=\"appMenu\">\n        <app-icon [icon]=\"{ class:'material-icons', content: 'more_vert'}\"></app-icon>\n    </button>\n    <button\n        mat-icon-button\n        name=\"show-children\"\n        [class.hide]=\"!(item.items && item.items.length)\"\n        (click)=\"show_children = !show_children\"\n    >\n        <app-icon\n            [icon]=\"{\n                class: 'material-icons',\n                content: show_children ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\n            }\"\n        ></app-icon>\n    </button>\n</div>\n<div class=\"children\" [@show]=\"show_children ? 'show' : 'hide'\">\n    <a-catering-menu-item\n        *ngFor=\"let sub_item of item.items\"\n        [subitem]=\"true\"\n        [parent]=\"item\"\n        [item]=\"sub_item\"\n    ></a-catering-menu-item>\n</div>\n<mat-menu #appMenu=\"matMenu\">\n    <ng-container *ngIf=\"item.items\">\n        <button mat-menu-item name=\"add-group\" *ngIf=\"!subitem\" (click)=\"openGroupModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Group</div>\n            </div>\n        </button>\n        <button mat-menu-item name=\"add-item\" (click)=\"openItemModal()\">\n            <div class=\"group\">\n                <app-icon [icon]=\"{ class:'material-icons', content: 'add'}\"></app-icon>\n                <div class=\"text\">Add Item</div>\n            </div>\n        </button>\n    </ng-container>\n    <button mat-menu-item name=\"edit\" (click)=\"item.items ? openGroupModal(item) : openItemModal(item)\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'edit'}\"></app-icon>\n            <div class=\"text\">Edit {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n    <button mat-menu-item name=\"delete\" class=\"delete\" (click)=\"deleteItem()\">\n        <div class=\"group\">\n            <app-icon [icon]=\"{ class:'material-icons', content: 'delete'}\"></app-icon>\n            <div class=\"text\">Delete {{ item.items ? (subitem ? 'Group' : item.package ? 'Package' : 'Sub-category') : 'item' }}</div>\n        </div>\n    </button>\n</mat-menu>\n","import { Component, OnInit, Input, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringCategoryModalComponent } from '../overlays/category-modal/category-modal.component';\nimport { HashMap, DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { CateringMenuService } from 'src/app/services/data/catering/catering-menu.service';\n\n@Component({\n    selector: 'a-catering-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n})\nexport class CateringMenuComponent extends BaseDirective implements OnInit {\n    /** Filter string for catering items */\n    @Input() public search: string;\n    /** Opens new category modal on change */\n    @Input() public category: number;\n    /** Opens new category modal on change */\n    @Input() public package: number;\n    /** Emitter for changes to the length of catering categories */\n    @Output() public length = new EventEmitter<number>();\n    /** List of top level catering categories */\n    public catering_menu: CateringCategory[] = [];\n    /** Filtered list of top level catering categories */\n    public filtered_menu: CateringCategory[] = [];\n    /** Whether menu details are being loaded */\n    public loading: boolean;\n    /** Index of the active tab */\n    public index: number = 0;\n    /** Map of indexes to package open state */\n    public state: HashMap<number> = {};\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(private _service: ApplicationService, private _org: OrganisationService, private _menu: CateringMenuService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.set('DELETED.menu', '');\n        this.subscription('deleted', this._service.listen('DELETED.menu').subscribe(id => this.removeFromMenu(id)));\n        this.subscription(\n            'building',\n            this._org.listen('active_building').subscribe((_) => {\n                this.index = 0;\n                this.catering_menu = [];\n                this.filtered_menu = [];\n                this.loadCateringMenu();\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.search) {\n            this.filtered_menu = this.filter(this.catering_menu);\n        }\n        if (changes.category && this.category) {\n            this.openCategoryModal();\n        }\n        if (changes.package) {\n            this.state[this.index] = this.package;\n        }\n    }\n\n    public openCategoryModal(category?: CateringCategory) {\n        /* istanbul ignore else */\n        if (!category) {\n            category = new CateringCategory({ zones: [this.building.id] });\n        }\n        const ref = this._dialog.open(CateringCategoryModalComponent, { data: { category } });\n        this.subscription('category_modal', ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                const index = this.catering_menu.findIndex(item => event.metadata.id === item.id);\n                if (index >= 0) {\n                    this.catering_menu.splice(index, 1, event.metadata);\n                    this.index = index;\n                } else {\n                    this.index = this.catering_menu.length;\n                    this.catering_menu.push(event.metadata);\n                }\n            }\n        }));\n    }\n\n    /**\n     * Remove item from the menu\n     * @param id ID of the item to remove\n     * @param list Menu items and categories\n     */\n    private removeFromMenu(id: string, list: CateringCategory[] = this.catering_menu, depth: number = 0) {\n        if (list.length === 0 || depth > 4) { return false; }\n        const found = list.findIndex(item => item.id === id);\n        if (found >= 0) {\n            list.splice(found, 1);\n            return true;\n        } else {\n            for (const item of list) {\n                if (this.removeFromMenu(id, item.items as any, depth + 1)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    private loadCateringMenu(): void {\n        /* istanbul ignore else */\n        if (this.building) {\n            this.loading = true;\n            this._menu.query({ zone_id: this.building.id }).then(\n                (menu: any[]) => {\n                    this.catering_menu = (menu || []).map((item) => new CateringCategory(item));\n                    this.length.emit(this.catering_menu.length);\n                    this.filtered_menu = this.filter(this.catering_menu);\n                    this.loading = false;\n                },\n                (err) => {\n                    this._service.notifyError(\n                        `Error loading menu for ${this.building.name}. Error: ${err.message | err}`,\n                        'Retry',\n                        () => this.loadCateringMenu()\n                    );\n                    this.loading = false;\n                }\n            );\n        }\n    }\n\n    /** Filter the list of catering items */\n    private filter(list: CateringCategory[]) {\n        return list;\n    }\n}\n","<div class=\"menu page dark-mode\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <mat-tab-group *ngIf=\"filtered_menu && filtered_menu.length; else empty_state\" [(selectedIndex)]=\"index\">\n            <mat-tab *ngFor=\"let category of filtered_menu; let i = index\">\n                <ng-template mat-tab-label>\n                    <div class=\"tab-label\">\n                        <div class=\"label\">{{category?.name}}</div>\n                        <button mat-icon-button name=\"edit\" (click)=\"$event.stopPropagation()\" (click)=\"openCategoryModal(category)\">\n                            <app-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></app-icon>\n                        </button>\n                    </div>\n                </ng-template>\n                <a-catering-menu-item-list [package]=\"state[i]\" [category]=\"category\"></a-catering-menu-item-list>\n            </mat-tab>\n        </mat-tab-group>\n    </ng-container>\n</div>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading menu for {{ building?.name }}</div>\n    </div>\n</ng-template>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No menu categories for {{ building?.name }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport {\n    CateringOrder,\n    CateringOrderStatus,\n} from 'src/app/services/data/catering/catering-order.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrderDetailsModalComponent } from '../../overlays/order-details-modal/order-details-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'a-catering-orders-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrdersItemComponent implements OnChanges {\n    /** Catering order details to display */\n    @Input() public order: CateringOrder;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether order items should be shown */\n    public show_items: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** Whether status is being updated */\n    public loading: boolean;\n\n    public get search_matches(): HashMap<boolean> {\n        const map = {};\n        const filter = this.search.toLowerCase();\n        this.order.items.forEach((item) => {\n            map[item.id] = item.name.toLowerCase().indexOf(filter) >= 0;\n        });\n        return map;\n    }\n\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status) || ({} as any);\n    }\n\n    public get space(): Space {\n        return this._spaces.find(this.order.location_id);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.order && this.order) {\n            this.active_status = this.order.status;\n        }\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this.order.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this.order.id),\n                1,\n                new CateringOrder({ ...this.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking = await this._bookings.save(new_booking).catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(\n                    bookings.findIndex((bkn) => bkn.icaluid === updated_booking.icaluid),\n                    1,\n                    updated_booking\n                );\n                this._bookings.booking_list.next(bookings);\n            }\n            this.loading = false;\n        }\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: this.order,\n                booking: this.order.booking,\n            },\n        });\n    }\n}\n","<div class=\"order\" [class.showing]=\"show_items || search\">\n    <div class=\"details\" [class.showing]=\"show_items\" [class.not-match]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'room_service' }\"></app-icon>\n        </div>\n        <div class=\"time\">{{ order.deliver_at_time }}</div>\n        <div class=\"location\">{{ order.location || space?.name }}</div>\n        <div class=\"host\">{{ order.booking?.organiser.name }}</div>\n        <div class=\"package-type\">\n            <ng-container *ngIf=\"order.kitchen\"><span>(K)</span> Kitchen<br /></ng-container>\n            <ng-container *ngIf=\"order.pantry\"><span>(P)</span> Pantry</ng-container>\n        </div>\n        <div class=\"status\">\n            <mat-form-field\n                class=\"rounded visible\"\n                appearance=\"outline\"\n                *ngIf=\"statuses && statuses.length > 1\"\n            >\n                <mat-select\n                    #select\n                    [(value)]=\"active_status\"\n                    (valueChange)=\"updateStatus()\"\n                    placeholder=\"New Order\"\n                    [disabled]=\"loading\"\n                >\n                    <mat-select-trigger>\n                        <div class=\"group\">\n                            <div class=\"icon\">\n                                <div\n                                    class=\"wrapper\"\n                                    [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                >\n                                    <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                    <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                </div>\n                            </div>\n                            <div class=\"text\">{{ status_details?.name }}</div>\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                        <div class=\"group\">\n                            <div class=\"text\">{{ status.name }}</div>\n                            <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <button mat-icon-button name=\"view\" (click)=\"viewOrderDetails()\">\n            <app-icon\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'visibility'\n                }\"\n            ></app-icon>\n        </button>\n        <div class=\"more\">\n            <button mat-icon-button name=\"more\" (click)=\"show_items = !show_items\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_items ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"list\" [@show]=\"show_items || search ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <div class=\"item\" *ngFor=\"let item of order.items\" [class.not-match]=\"search && !search_matches[item.id]\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'local_pizza' }\"></app-icon>\n            </div>\n            <div class=\"item-details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"quanity\">x {{ item.amount }}</div>\n            </div>\n            <div class=\"bar\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first,\n} from 'rxjs/operators';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { OrderDetailsModalComponent } from '../overlays/order-details-modal/order-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\n\n@Component({\n    selector: 'a-catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss'],\n})\nexport class CateringOrdersComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Search filter string */\n    @Input() public search: string = '';\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Type of order to show */\n    @Input() public type: '' | 'Pantry' | 'Kitchen';\n    /** List of catering orders for the selected date */\n    public orders: CateringOrder[] = [];\n    /** List of catering orders for the selected date */\n    public filtered_orders: CateringOrder[] = [];\n    /** Whether catering orders are loading */\n    public loading: boolean;\n    /** List of space IDs for active building */\n    public available_spaces: string[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<any[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the currenly selected date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return dayjs().isSame(date, 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return this._org.building;\n    }\n\n    constructor(\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    this.available_spaces = this._spaces\n                        .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                        .map((i) => i.email);\n                    this.search$.next(`${this.date}|${this.building.id}`);\n                    this.updateOrders();\n                })\n            );\n            this.available_spaces = this._spaces\n                .filter((space) => space.zones.indexOf(this.building.id) >= 0)\n                .map((i) => i.email);\n            this.initBookings();\n            this.interval(\n                'update_bookings',\n                () => this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`),\n                30 * 1000\n            );\n            this.search$.next(`${this.date}|${this.building.id}|${dayjs().unix()}`);\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        const view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_order');\n                        const booking_details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(JSON.parse(booking_details));\n                            const order = new CateringOrder(JSON.parse(details));\n                            order.booking = booking;\n                            this.viewOrderDetails(order);\n                            localStorage.removeItem('CONCIERGE.view_order');\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.building) {\n            this.search$.next(`${this.date}|${this.building.id}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.type) {\n            this.filtered_orders = this.filter(this.orders, this.search);\n        }\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n\n    /** Open modal to view catering order details */\n    public viewOrderDetails(order: CateringOrder): void {\n        this._dialog.open(OrderDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                order: order,\n                booking: order.booking,\n            },\n        });\n    }\n\n    /**\n     * Filter list to find matching items\n     * @param list List of orders to filter\n     * @param search Filter string\n     */\n    private filter(list: CateringOrder[], search: string = '') {\n        const filter = search.toLowerCase();\n        return list.filter((order) => {\n            return (\n                (!this.type ||\n                    (this.type === 'Pantry' && order.pantry) ||\n                    (this.type === 'Kitchen' && order.kitchen)) &&\n                order.items.find(\n                    (item: CateringCategory) =>\n                        item.name.toLowerCase().indexOf(filter) >= 0 ||\n                        (item.items &&\n                            item.items.find((sub_item: CateringCategory) => {\n                                return (\n                                    sub_item.name.toLowerCase().indexOf(filter) >= 0 ||\n                                    (sub_item.items &&\n                                        sub_item.items.find((sub_sub_item) => {\n                                            return (\n                                                sub_sub_item.name.toLowerCase().indexOf(filter) >= 0\n                                            );\n                                        }))\n                                );\n                            }))\n                )\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                return this._spaces.query({\n                    zone_ids: this.building.id,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix(),\n                });\n            }),\n            catchError((_) => of([])),\n            map((space_list: Space[]) => {\n                const date = dayjs(this.date).startOf('d');\n                const end = date.endOf('d');\n                let bookings = this._bookings.booking_list.getValue();\n                space_list.forEach(\n                    (space) =>\n                        (bookings = replaceBookings(bookings, space.bookings as any, {\n                            space: space.email,\n                            from: date.valueOf(),\n                            to: end.valueOf(),\n                        }))\n                );\n                this._bookings.booking_list.next(bookings);\n                return space_list;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((_) => (this.loading = false))\n        );\n        this.subscription(\n            'bookings',\n            this._bookings.booking_list.subscribe((_) => this.updateOrders())\n        );\n    }\n\n    private updateOrders() {\n        const bookings = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const relevant_bookings = bookings.filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.catering.length &&\n                booking.space_list.find((space) =>\n                    this.available_spaces.find((email) => email === space.email)\n                ) && (\n                    start.isSame(date, 'd') ||\n                        end.isSame(date, 'd') ||\n                        (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n                )\n            );\n        });\n        let orders: CateringOrder[] = [];\n        relevant_bookings.forEach((booking, i) => {\n            const catering = booking.catering;\n            catering.forEach((order) => {\n                (order as any).booking_date = booking.date;\n                order.booking = booking;\n            });\n            orders = orders.concat(booking.catering);\n        });\n        orders = unique(orders, 'id');\n        orders = orders.filter((order) => this.available_spaces.indexOf(order.location_id) >= 0);\n        orders.sort(\n            (a, b) =>\n                a.booking_date +\n                a.delivery_time * 60 * 1000 -\n                (b.booking_date + b.delivery_time * 60 * 1000)\n        );\n        this.loading = false;\n        this.orders = orders;\n        this.filtered_orders = this.filter(orders, this.search);\n    }\n}\n","<div class=\"loader\" *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"heading\">\n    <div class=\"icon\"></div>\n    <div class=\"time\">Time</div>\n    <div class=\"location\">Location</div>\n    <div class=\"host\">Host</div>\n    <div class=\"types\">Package Types</div>\n    <div class=\"state\">Status</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n        <div class=\"top-row\"></div>\n        <a-catering-orders-item\n            *ngFor=\"let order of filtered_orders; trackBy: trackByFn\"\n            [order]=\"order\"\n            [search]=\"search\"\n        ></a-catering-orders-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No catering orders for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UploadManager, Amazon } from '@acaprojects/ngx-uploads';\n\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport { ConfirmModalComponent, CONFIRM_METADATA } from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringCategoryModalData {\n    /** Category to edit */\n    category: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-category-modal',\n    templateUrl: './category-modal.component.html',\n    styleUrls: ['./category-modal.component.scss'],\n})\nexport class CateringCategoryModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n\n    public get category(): CateringCategory {\n        return this._data.category;\n    }\n\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringCategoryModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringCategoryModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Category`,\n                content: `Are you sure you want to delete this Category? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting Category...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = { ...this.category.toJSON(), ...this.form.value };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ category.id ? 'Edit' : 'Add' }} category</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\" *ngIf=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Category Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Category Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { UploadManager } from '@acaprojects/ngx-uploads';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\n\nimport * as blobUtil from 'blob-util';\nimport { CateringCategoriesService } from 'src/app/services/data/catering/catering-categories.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringGroupModalData {\n    group: CateringCategory;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-group-modal',\n    templateUrl: './group-modal.component.html',\n    styleUrls: ['./group-modal.component.scss'],\n})\nexport class CateringGroupModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n        { id: 'none', name: 'Other' },\n    ];\n\n    /** Category being edit/created */\n    public get category(): CateringCategory {\n        return this._data.group;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    /** Image URL for the category */\n    public get image(): string {\n        return this.form.controls.image_path.value;\n    }\n\n    /** Whether category is a package */\n    public get package(): boolean {\n        return this.form.controls.package.value;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_categories: CateringCategoriesService,\n        private _upload_manager: UploadManager,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringGroupModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringGroupModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.category.name, [Validators.required]),\n            description: new FormControl(this.category.description),\n            image_path: new FormControl(this.category.image_path),\n            catering_type: new FormControl(this.category.catering_type, [Validators.required]),\n            package: new FormControl(this.category.package || false),\n            must_select: new FormControl(this.category.must_select),\n            unit_price: new FormControl(this.category.unit_price),\n            minimum_quantity: new FormControl(this.category.minimum_quantity),\n            maximum_quantity: new FormControl(this.category.maximum_quantity),\n            order_anytime: new FormControl(this.category.order_anytime),\n            out_of_stock: new FormControl(this.category.out_of_stock),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete ${this.category.package ? 'Package' : 'Sub-Category'}`,\n                content: `Are you sure you want to delete this ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }? Deleting it will also remove all it's children`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting ${\n                    this.category.package ? 'Package' : 'Sub-Category'\n                }...`;\n                let e = null;\n                await this._menu_categories.delete(this.category.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.category.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = {\n                ...(this.category instanceof CateringCategory\n                    ? this.category.toJSON()\n                    : this.category),\n                ...this.form.value,\n                parent_categories: [this.parent.id],\n            };\n            const request = this.category.id\n                ? this._menu_categories.update(this.category.id, data)\n                : this._menu_categories.add(data);\n            request.then(\n                (item) => {\n                    (item as any).items = this.category.items\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.category.id ? 'updating' : 'creating'} category. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n\n    /** Upload the image to the cloud */\n    public uploadImage(event) {\n        /* istanbul ignore else */\n        if (event && event.target && event.target.files) {\n            const files: FileList = event.target.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                const fileReader = new FileReader();\n                fileReader.addEventListener('loadend', (e: any) => {\n                    this.uploading = true;\n                    const arrayBuffer = e.target.result;\n                    const blob = blobUtil.arrayBufferToBlob(arrayBuffer, 'image/png');\n                    this._upload_manager.upload([blob], { file_name: files[0].name });\n                    const upload = this._upload_manager.uploads[\n                        this._upload_manager.uploads.length - 1\n                    ];\n                    this.interval('upload', () => {\n                        /* istanbul ignore else */\n                        if (upload.complete || upload.error) {\n                            /* istanbul ignore else */\n                            if (upload.access_url && upload.complete) {\n                                this.form.controls.image_path.setValue(upload.access_url);\n                            }\n                            this.uploading = false;\n                            this.clearInterval('upload');\n                        }\n                    });\n                });\n                fileReader.readAsArrayBuffer(files[0]);\n            }\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">\n        {{ category.id ? 'Edit' : 'Add' }} {{ package ? 'package' : 'sub-category' }}\n    </div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field\">\n                <div\n                    class=\"image\"\n                    [style.background]=\"\n                        'linear-gradient(rgba(0,0,0,.35),rgba(0,0,0,.35)), url(' + image + ')'\n                            | safe: 'style'\n                    \"\n                >\n                    <app-icon\n                        *ngIf=\"!uploading\"\n                        [icon]=\"{ class: 'material-icons', content: 'cloud_upload' }\"\n                    ></app-icon>\n                    <mat-spinner *ngIf=\"uploading\" diameter=\"48\"></mat-spinner>\n                    <input type=\"file\" (change)=\"uploadImage($event)\" />\n                </div>\n            </div>\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"package\">Package</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + ' Name'\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        [placeholder]=\"(form.value.package ? 'Package' : 'Sub-category') + 'Description'\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <ng-container *ngIf=\"package\">\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n                </div>\n                <div class=\"field padded\">\n                    <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n                </div>\n                <div class=\"field\">\n                    <label for=\"unit-price\">Unit Price</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"unit-price\"\n                            type=\"number\"\n                            placeholder=\"Price for one unit of the item without decimal places\"\n                            formControlName=\"unit_price\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-container>\n            <div class=\"field\">\n                <label for=\"must-select\"\n                    >Items to select from {{ package ? 'package' : 'sub-category' }}</label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"must-select\"\n                        type=\"number\"\n                        placeholder=\"Must select X items from grouping\"\n                        formControlName=\"must_select\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"category.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringItem } from 'src/app/services/data/catering/catering-item.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { CateringItemsService } from 'src/app/services/data/catering/catering-items.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    parent: CateringCategory;\n}\n\n@Component({\n    selector: 'a-catering-item-modal',\n    templateUrl: './item-modal.component.html',\n    styleUrls: ['./item-modal.component.scss'],\n})\nexport class CateringItemModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form controls for editing category */\n    public form: FormGroup;\n    /** Display string for current loading state */\n    public loading: string;\n    /** Whether image is being uploaded */\n    public uploading: boolean;\n    /** List of available catering types */\n    public readonly types: Identity[] = [\n        { id: 'kitchen', name: 'Kitchen' },\n        { id: 'pantry', name: 'Pantry' },\n    ];\n\n    /** Category being edit/created */\n    public get item(): CateringItem {\n        return this._data.item;\n    }\n\n    /** Parent category of the catergory being created/edited */\n    public get parent(): CateringCategory {\n        return this._data.parent;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _menu_items: CateringItemsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<CateringItemModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            name: new FormControl(this.item.name, [Validators.required]),\n            description: new FormControl(this.item.description),\n            catering_type: new FormControl(this.item.catering_type, [Validators.required]),\n            supplier_cost: new FormControl(this.item.supplier_cost),\n            unit_price: new FormControl(this.item.unit_price),\n            minimum_quantity: new FormControl(this.item.minimum_quantity),\n            maximum_quantity: new FormControl(this.item.maximum_quantity),\n            order_anytime: new FormControl(this.item.order_anytime),\n            out_of_stock: new FormControl(this.item.out_of_stock),\n            allergy: new FormControl(this.item.allergy),\n            parent_categories: new FormControl([this._data.parent.id]),\n        });\n    }\n\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: `Delete Item`,\n                content: `Are you sure you want to delete this item?`,\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe(async (event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                ref.componentInstance.loading = `Deleting item...`;\n                let e = null;\n                await this._menu_items.delete(this.item.id).catch((err) => e === err);\n                ref.close();\n                if (!e) {\n                    this._service.set('DELETED.menu', this.item.id);\n                    this._dialog_ref.close();\n                }\n            }\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            const data = new CateringItem({\n                ...(this.item instanceof CateringItem ? this.item.toJSON() : this.item),\n                ...this.form.value,\n            }).toJSON();\n            const request = this.item.id\n                ? this._menu_items.update(this.item.id, data)\n                : this._menu_items.add(data);\n            request.then(\n                (item) => {\n                    this.event.emit({ reason: 'done', metadata: item });\n                    this._dialog_ref.close();\n                },\n                (err) =>\n                    this._service.notifyError(\n                        `Error ${this.item.id ? 'updating' : 'creating'} item. Error: ${\n                            err.message || err\n                        }`\n                    )\n            );\n        }\n    }\n}\n","<header>\n    <div class=\"heading\">{{ item.id ? 'Edit' : 'Add' }} catering item</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <form [formGroup]=\"form\">\n            <div class=\"field padded\">\n                <label for=\"name\">Parent Category</label>\n                <div class=\"value\">{{ parent.name }}</div>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"name\"\n                    [class.error]=\"form.controls.name.errors && form.controls.name.touched\"\n                    >Name<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>A valid name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label\n                    for=\"type\"\n                    [class.error]=\"\n                        form.controls.catering_type.errors && form.controls.catering_type.touched\n                    \"\n                    >Type<span>*</span></label\n                >\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"type\"\n                        formControlName=\"catering_type\"\n                        placeholder=\"Select type\"\n                    >\n                        <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                            {{ type.name }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"description\">Description</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"allergy\">Allegen Information</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"allergy\"\n                        placeholder=\"Allergy details about the item\"\n                        formControlName=\"allergy\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"out_of_stock\">Out of Stock</mat-checkbox>\n            </div>\n            <div class=\"field padded\">\n                <mat-checkbox formControlName=\"order_anytime\">Can order anytime</mat-checkbox>\n            </div>\n            <div class=\"field\">\n                <label for=\"supplier-price\">Supplier Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"supplier-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item from the supplier\"\n                        formControlName=\"supplier_cost\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"unit-price\">Unit Price</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Price for one unit of the item without decimal places\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"min-quanity\">Minimum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"min-quanity\"\n                        type=\"number\"\n                        placeholder=\"Minimum Quantity\"\n                        formControlName=\"minimum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"field\">\n                <label for=\"max-quanity\">Maximum Quanity</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"max-quanity\"\n                        type=\"number\"\n                        placeholder=\"Maximum Quantity\"\n                        formControlName=\"maximum_quantity\"\n                    />\n                </mat-form-field>\n            </div>\n        </form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <footer>\n        <button mat-button *ngIf=\"item.id\" [class.error]=\"true\" (click)=\"delete()\">Delete</button>\n        <button mat-button [disabled]=\"uploading\" (click)=\"submit()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main>\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'order-booking-details',\n    templateUrl: './booking-details.component.html',\n    styleUrls: ['./booking-details.component.scss'],\n})\nexport class OrderBookingDetailsComponent {\n    /** Email of the order space */\n    @Input() public space: string;\n    /** Booking details to display */\n    @Input() public booking: Booking;\n\n    /** Store booking details to be used in another component */\n    public storeBooking() {\n        localStorage.setItem('CONCIERGE.view_booking', JSON.stringify(this.booking.toJSON()));\n        localStorage.setItem('CONCIERGE.date', `${this.booking.date}`);\n    }\n}\n","<div class=\"heading\">\n    Meeting Details\n</div>\n<div class=\"content\">\n    <div class=\"field\">\n        <label for=\"host\">Host:</label>\n        <div class=\"value\" name=\"host\">\n            {{ booking.organiser?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"space\">Room:</label>\n        <div class=\"value\" name=\"space\">\n            {{ booking.space?.name }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"period\">Period:</label>\n        <div class=\"value\" name=\"period\">\n            {{ booking.time_period }}\n        </div>\n    </div>\n    <div class=\"field\">\n        <label for=\"attendees\">Attendees:</label>\n        <div class=\"value\" name=\"attendees\">\n            {{ booking.attendees?.length || '0' }}({{ booking.expected_attendees[space] || 0 }} expected)\n        </div>\n    </div>\n</div>\n<a\n    class=\"footer\"\n    button\n    mat-button\n    [routerLink]=\"['/day-view', booking.space?.level.id]\"\n    [queryParams]=\"{ view: booking.id.slice(0, 10) }\"\n    (click)=\"storeBooking()\"\n    mat-dialog-close\n>\n    View on Day View\n</a>\n","import { Component, Input } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { CateringCategory } from 'src/app/services/data/catering/catering-category.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-items',\n    templateUrl: './items.component.html',\n    styleUrls: ['./items.component.scss'],\n})\nexport class OrderDetailsItemsComponent {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Whether order is being edited */\n    public editing: boolean;\n    /** Whether order is being updated */\n    public loading: boolean;\n\n    /** List of items in the order */\n    public get items(): CateringCategory[] {\n        return (this.order.items as any) || [];\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService) {}\n\n    public editOrder() {\n        this.editing = true;\n    }\n\n    /** Handle changes to catering order */\n    public async handleOrderEvent(order: CateringOrder) {\n        /* istanbul ignore else */\n        if (order) {\n            const orders = [...this.booking.catering];\n            const index = orders.findIndex((an_order) => order.id === an_order.id);\n            if (index < 0) {\n                orders.push(order);\n            } else {\n                orders.splice(index, 1, order);\n            }\n            this.loading = true;\n            const new_booking = new Booking({ ...this.booking.toJSON(), catering: orders });\n            const booking = await this._bookings\n                .save(new_booking)\n                .catch((err) =>\n                    this._service.notifyError(\n                        `Error unable to update order. Error: ${err.message || err}`\n                    )\n                );\n            if (booking) {\n                this.booking = booking;\n                this.order = order;\n                this.editing = false;\n            }\n            this.loading = false;\n        }\n    }\n}\n","<div class=\"heading\">\n    {{ editing ? 'Edit Order' : 'Order Details' }}\n</div>\n<div class=\"content padded\" *ngIf=\"!editing; else edit_state\">\n    <ng-container *ngIf=\"items && items.length; else empty_state\">\n        <div class=\"item\" *ngFor=\"let item of items\">\n            <div class=\"details\">\n                <div class=\"name\">{{ item.name }}</div>\n                <div class=\"amount\">x{{ item.amount }}</div>\n            </div>\n            <ng-container *ngIf=\"item.items\">\n                <div class=\"sub-item\" *ngFor=\"let sub_item of item.items\">\n                    <div class=\"name\">{{ sub_item.name }}</div>\n                    <ng-container *ngIf=\"sub_item.items\">\n                        <div class=\"sub-item\" *ngFor=\"let sub_sub_item of sub_item.items\">\n                            <div class=\"name\">{{ sub_sub_item.name }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<ng-template #edit_state>\n    <div class=\"content\">\n        <a-catering-order-details\n            *ngIf=\"!loading; else load_state\"\n            [space_list]=\"[booking.space]\"\n            [order]=\"this.order\"\n            [date]=\"booking.date\"\n            [duration]=\"booking.duration\"\n            [all_day]=\"booking.all_day\"\n            [hide_details]=\"true\"\n            [compact]=\"true\"\n            (event)=\"$event ? handleOrderEvent($event) : (editing = false)\"\n        ></a-catering-order-details>\n    </div>\n</ng-template>\n<button class=\"footer\" *ngIf=\"!editing\" mat-button (click)=\"editOrder()\">\n    Edit Order\n</button>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No items in order\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">\n            Updating order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingNote } from 'src/app/services/data/bookings/booking.interfaces';\n\nimport * as dayjs from 'dayjs';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { UsersService } from 'src/app/services/data/users/users.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'order-details-notes',\n    templateUrl: './messages.component.html',\n    styleUrls: ['./messages.component.scss'],\n})\nexport class OrderDetailsNotesComponent implements OnInit {\n    /** Booking details to display */\n    @Input() public booking: Booking;\n    /** Catering order to display notes for */\n    @Input() public order: CateringOrder;\n    /** Emitter for changes to the active booking */\n    @Output() public bookingChange = new EventEmitter<Booking>();\n    /** Contents of the new private note */\n    public new_note: string;\n    /** Whether a note is being added */\n    public loading: boolean;\n\n    /** List of notes for catering order space */\n    public get notes(): BookingNote[] {\n        const notes = this.booking.notes.filter((note) => {\n            return (\n                note.type === 'catering' &&\n                note.space === this.order.location_id &&\n                (!note.order_id || note.order_id === this.order.id)\n            );\n        });\n        notes.forEach((note) => {\n            note.time = dayjs(note.date).format('DD MMM, h:mm A');\n        });\n        return notes;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _users: UsersService) {}\n\n    ngOnInit(): void {}\n\n    /**\n     * Add note for catering order\n     */\n    public async addNote() {\n        /* istanbul ignore else */\n        if (this.booking && this.new_note) {\n            const user = this._users.current;\n            const notes = this.booking.notes;\n            const date = dayjs().startOf('m');\n            const new_notes = [\n                ...notes,\n                {\n                    type: 'catering',\n                    date: date.valueOf(),\n                    author: user.name,\n                    order_id: this.order.id,\n                    space: this.booking.space.email,\n                    message: this.new_note,\n                    time: date.format('h:mm A'),\n                },\n            ];\n            const pending_booking = new Booking({ ...this.booking.toJSON(), notes: new_notes })\n            this.loading = true;\n            const new_booking: Booking = (await this._bookings.save(pending_booking).catch((err) => {\n                this._service.notifyError(\n                    `Failed to add note to order meeting. Error: ${err.message || err}`\n                );\n                this.loading = false;\n                throw err;\n            })) as any;\n            this.booking = new_booking;\n            if (new_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === new_booking.icaluid), 1, new_booking);\n                this._bookings.booking_list.next(bookings);\n            }\n            this.order.booking = new_booking;\n            this.bookingChange.emit(new_booking);\n            this.loading = false;\n            this.new_note = '';\n\n        }\n    }\n}\n","<div class=\"heading\">\n    Private Notes\n</div>\n<div class=\"content\">\n    <ng-container *ngIf=\"notes && notes.length; else empty_state\">\n        <div class=\"note\" *ngFor=\"let item of notes\">\n            <div class=\"text\">{{ item.message }}</div>\n            <div class=\"details\">\n                <div class=\"author\">{{ item.author }}</div>\n                <div class=\"fill\"></div>\n                <div class=\"time\">{{ item.time }}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class=\"footer\">\n    <mat-form-field appearance=\"none\">\n        <input matInput [(ngModel)]=\"new_note\" [disabled]=\"loading\" placeholder=\"Type to add notes\" (keyup.enter)=\"addNote()\"/>\n        <button mat-icon-button matSuffix name=\"add-note\" [disabled]=\"!new_note || loading\" (click)=\"addNote()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'send' }\"></app-icon>\n        </button>\n    </mat-form-field>\n    <div class=\"loader center\" *ngIf=\"loading\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No private notes for order\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { CateringOrder, CateringOrderStatus } from 'src/app/services/data/catering/catering-order.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { DialogEvent, Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface OrderDetailsModalData {\n    /** Order to display details for */\n    order: CateringOrder;\n    /** Booking associated with catering order */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-order-details-modal',\n    templateUrl: './order-details-modal.component.html',\n    styleUrls: ['./order-details-modal.component.scss'],\n})\nexport class OrderDetailsModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether status is being updated */\n    public loading: boolean;\n    /** Actively selected status */\n    public active_status: CateringOrderStatus;\n    /** List of available order statuses */\n    public statuses: Identity[] = [\n        { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n        {\n            id: 'preparing',\n            name: 'Preparing',\n            icon: { class: 'custom-preparing' },\n            colour: '#E7536B',\n        },\n        { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n        {\n            id: 'delivered',\n            name: 'Delivered',\n            icon: { class: 'custom-delivered' },\n            colour: '#75BB43',\n        },\n        {\n            id: 'cancelled',\n            name: 'Cancelled',\n            icon: { class: 'custom-cancelled' },\n            colour: '#747474',\n        },\n    ];\n\n    /** Active booking to display */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n    public set booking(bkn: Booking) {\n        this._data.booking = bkn;\n    }\n\n    /** Order to display */\n    public get order(): CateringOrder {\n        return this._data.order;\n    }\n\n    /** Details for the active status */\n    public get status_details(): Identity {\n        return this.statuses.find((status) => status.id === this.active_status);\n    }\n\n    /** Space associated with the order */\n    public get space(): Space {\n        return this._spaces.find(this._data.order.location_id);\n    }\n\n    /** Details about the delivery time */\n    public get time(): string {\n        const date = dayjs(this._data.booking.date).add(this._data.order.delivery_time, 'm');\n        return `(${date.format('DD MMM YYYY')}) To be delivered at ${this._data.order.deliver_at_time}`;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: OrderDetailsModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.active_status = this._data.order.status;\n    }\n\n    /** Update the status of the order in the booking */\n    public async updateStatus(): Promise<void> {\n        const booking = this._data.booking;\n        /* istanbul ignore else */\n        if (booking) {\n            this.loading = true;\n            const catering = [...booking.catering];\n            catering.splice(\n                catering.findIndex((order) => order.id === this._data.order.id),\n                1,\n                new CateringOrder({ ...this._data.order, status: this.active_status })\n            );\n            const new_booking = new Booking({ ...booking.toJSON(), catering });\n            const updated_booking: any = await new_booking.save().catch((err) => {\n                this._service.notifyError(\n                    `Error updating order status. Error: ${err.message || err}`\n                );\n                this.active_status = this._data.order.status;\n            });\n            if (updated_booking) {\n                const bookings = this._bookings.booking_list.getValue();\n                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === updated_booking.icaluid), 1, updated_booking);\n                this._bookings.booking_list.next(bookings);\n                this.booking = updated_booking;\n            }\n            this.loading = false;\n\n        }\n    }\n}\n","\n<mat-dialog-content>\n    <main>\n        <div class=\"details\">\n            <div class=\"burger-icon\"></div>\n            <div class=\"location\">{{ space?.name }}</div>\n            <div class=\"time\">{{ time }}</div>\n            <div class=\"status\">\n                <mat-form-field\n                    class=\"rounded visible\"\n                    appearance=\"outline\"\n                    *ngIf=\"statuses && statuses.length > 1\"\n                >\n                    <mat-select\n                        #select\n                        [(value)]=\"active_status\"\n                        (valueChange)=\"updateStatus()\"\n                        placeholder=\"New Order\"\n                        [disabled]=\"loading\"\n                    >\n                        <mat-select-trigger>\n                            <div class=\"group\">\n                                <div class=\"icon\">\n                                    <div\n                                        class=\"wrapper\"\n                                        [style.backgroundColor]=\"loading ? '#eee' : status_details?.colour\"\n                                    >\n                                        <app-icon *ngIf=\"!loading\" [icon]=\"status_details?.icon\"></app-icon>\n                                        <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n                                    </div>\n                                </div>\n                                <div class=\"text\">{{ status_details?.name }}</div>\n                            </div>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let status of statuses\" [value]=\"status.id\">\n                            <div class=\"group\">\n                                <div class=\"text\">{{ status.name }}</div>\n                                <div class=\"colour\" [style.backgroundColor]=\"status.colour\"></div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div class=\"block\">\n                <order-booking-details [space]=\"order.location_id\" [booking]=\"booking\"></order-booking-details>\n            </div>\n            <div class=\"block\">\n                <order-details-items [booking]=\"booking\" [order]=\"order\"></order-details-items>\n            </div>\n            <div class=\"block\">\n                <order-details-notes [(booking)]=\"booking\" [order]=\"order\"></order-details-notes>\n            </div>\n        </div>\n        <button class=\"close\" mat-icon-button mat-dialog-close>\n            <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n        </button>\n    </main>\n</mat-dialog-content>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { first } from 'rxjs/operators';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss'],\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => this.init());\n    }\n\n    public init() {\n        this.events = [];\n        const building = this._org.building;\n        this.space_list = this._spaces\n            .filter(\n                (space) => space.zones.indexOf(this.level === '' ? building.id : this.level) >= 0\n            )\n            .map((i) => i.email);\n        this.updateEvents();\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n        this.subscription(\n            'update',\n            this._bookings.booking_list.subscribe((_) => this.updateEvents())\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date && this.date !== changes.date.previousValue) {\n            this.updateEvents();\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')) {\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n        if (changes.level) {\n            this.init();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Update list of events pending approval\n     */\n    private updateEvents() {\n        const list = this._bookings.booking_list.getValue();\n        const date = dayjs(this.date);\n        const events = list.filter(\n            (booking) =>\n                dayjs(booking.date).isSame(date, 'd') &&\n                booking.tentative &&\n                this.space_list.find((space) => space === booking.space.email)\n        );\n        events.sort((a, b) => a.date - b.date);\n        this.events = [];\n        events.forEach((event) => {\n            const json = event.toJSON();\n            for (const space of event.space_list) {\n                if (event.approval_status[space.email].includes('tentative')) {\n                    this.events.push(\n                        new Booking({ ...json, room_ids: [space.email, ...json.room_ids.filter(id => id !== space.email)] })\n                    );\n                }\n            }\n        });\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        // if (now.isAfter(end, 'm')) {\n        //     return;\n        // } else if (now.isAfter(start, 'm')) {\n        //     start = now;\n        // }\n        const building = this._org.building;\n        this._spaces\n            .query({\n                zone_ids: this.level || building.id,\n                available_from: start.unix(),\n                available_to: end.unix(),\n            })\n            .then((spaces) => {\n                let bookings = this._bookings.booking_list.getValue();\n                spaces.forEach((space) => {\n                    bookings = replaceBookings(bookings, space.bookings as any, {\n                        space: space.email,\n                        from: start.valueOf(),\n                        to: end.valueOf(),\n                    });\n                });\n                this._bookings.booking_list.next(bookings);\n            });\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return this.event.organiser.name;\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.description;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.email === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        space: this.event.space,\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const event = this.event.toJSON();\n                this._bookings\n                    .accept(this.event.id, {\n                        concierge: true,\n                        host: this.event.organiser.email,\n                        room_id: this.event.space?.id,\n                        icaluid: this.event.icaluid,\n                        start: event.start,\n                        end: event.end\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting approved.');\n                            for(const space of this.event.space_list) {\n                                this.event.approval_status[space.email] = 'accepted';\n                            }\n                            STATES[this.event.id] = 'accepted';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error approving meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._bookings\n                    .decline(booking.id, {\n                        booking_id: booking.id,\n                        organiser: booking.organiser.email,\n                        icaluid: booking.icaluid,\n                        start: Math.floor(booking.date / 1000),\n                        end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                        room_id: booking.space.id,\n                    })\n                    .then(\n                        () => {\n                            this._service.notifySuccess('Meeting declined.');\n                            this.event.approval_status[booking.space.email] = 'declined';\n                            STATES[this.event.id] = 'declined';\n                            const bookings = this._bookings.booking_list.getValue();\n                            bookings.splice(bookings.findIndex(bkn => bkn.icaluid === this.event.icaluid), 1, this.event);\n                            this._bookings.booking_list.next(bookings);\n                            this._service.set('BOOKING.states', STATES);\n                            this.loading = false;\n                            this.acting.emit(false);\n                        },\n                        () => {\n                            this.acting.emit(false);\n                            this._service.notifyError('Error declining meeting.');\n                            this.loading = false;\n                        }\n                    );\n            }\n            ref.close();\n        });\n    }\n}\n","<div\n    [class]=\"'approval-event' + (type ? ' ' + type : '')\"\n    *ngIf=\"event && !event.approved\"\n    [attr.event-id]=\"event.id\"\n>\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (click)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (click)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field limit-height\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [attr.disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [attr.disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field limit-height\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [attr.disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [attr.disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (click)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (click)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected type */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7', active: true },\n        { name: 'Client', id: 'client', color: '#1F40E6', active: true },\n        { name: 'External', id: 'external', color: '#8C5AC8', active: true },\n        { name: 'Setup', id: 'setup', color: '#d32f2f', active: true },\n        { name: 'Training', id: 'training', color: '#F0E700', active: true },\n        { name: 'Interview', id: 'interview', color: '#348D02', active: true },\n        { name: 'Declined', id: 'declined', color: '#617288', active: true }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Day View';\n        this._org.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._org.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._org.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._org.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n\n    public updateLegend() {\n        this.legend = this.legend_keys.reduce((list, key) => {\n            if (key.active) {\n                list.push(key.id)\n            }\n            return list;\n        }, []);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            [zone]=\"active_level\"\n            [show_events]=\"true\"\n            [show_add_item]=\"true\"\n            (event)=\"newMeeting()\"\n        >\n            <div class=\"topbar\">\n                <button mat-icon-button class=\"not-desktop\" [matMenuTriggerFor]=\"menu\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'more_vert' }\"></app-icon>\n                </button>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"levels && levels.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select\n                        name=\"level\"\n                        [(ngModel)]=\"active_level\"\n                        (ngModelChange)=\"updateLevel()\"\n                    >\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field\n                    [class.desktop-only]=\"true\"\n                    *ngIf=\"space_types && space_types.length > 1\"\n                    appearance=\"outline\"\n                >\n                    <mat-select name=\"space-type\" [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field [class.desktop-only]=\"true\" appearance=\"outline\">\n                    <mat-select\n                        name=\"legend\"\n                        [(ngModel)]=\"legend\"\n                        multiple\n                        placeholder=\"No items shown\"\n                    >\n                        <mat-select-trigger>Legend</mat-select-trigger>\n                        <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                            <div class=\"key\">\n                                <div class=\"text\">{{ key?.name }}</div>\n                                <div class=\"colour\">\n                                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [class.desktop-only]=\"true\"\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n</div>\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"level_list\">Level</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"space_type_list\">Space Type</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"legend_list\">Legend</button>\n    <div mat-menu-item (click)=\"$event.stopPropagation()\">\n        <mat-slide-toggle\n            [(ngModel)]=\"only_overflow\"\n            labelPosition=\"before\"\n            title=\"Only show meetings with setup and breakdown times\"\n        >\n            Only Setup/Breakdown\n        </mat-slide-toggle>\n    </div>\n</mat-menu>\n<mat-menu #level_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let level of levels\"\n        [class.selected]=\"level && active_level === level.id\"\n        (click)=\"active_level = level.id; updateLevel()\"\n    >\n        {{ level?.name }}\n    </button>\n</mat-menu>\n<mat-menu #space_type_list=\"matMenu\">\n    <button\n        mat-menu-item\n        *ngFor=\"let type of space_types\"\n        [class.selected]=\"type && active_type === type.id\"\n        (click)=\"active_type = type.id\"\n    >\n        {{ type?.name }}\n    </button>\n</mat-menu>\n<mat-menu #legend_list=\"matMenu\">\n    <div mat-menu-item *ngFor=\"let key of legend_keys\">\n        <mat-checkbox\n            [(ngModel)]=\"key.active\"\n            (ngModelChange)=\"updateLegend()\"\n            (click)=\"$event.stopPropagation()\"\n        >\n            <div class=\"key\">\n                <div class=\"text\">{{ key?.name }}</div>\n                <div class=\"colour\">\n                    <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                </div>\n            </div>\n        </mat-checkbox>\n    </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: Booking;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space associated with the event */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n    /** Whether to hide the event */\n    public hide: boolean = false;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public get local_id(): string {\n        return this.event.icaluid.substr(0, 6);\n    }\n\n    /** Whether booking is approved for the event in the displayed space */\n    public get approved(): boolean {\n        return this.event.approved || this.event.approval_status[this.space.email].includes('accepted');\n    }\n\n    /**  */\n    public get should_display() {\n        const date = dayjs(this.date);\n        const start = dayjs(this.event.date);\n        const end = start.add(this.event.duration, 'm');\n        return (\n            date.isSame(start, 'd') ||\n            date.isSame(end, 'd') ||\n            (date.isAfter(start, 'd') && date.isBefore(end, 'd'))\n        );\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.email] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.email);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                space: this.space,\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n            this.hide = !this.should_display;\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top =\n                (this.event.setup[this.event.space.email]\n                    ? this.event.setup[this.event.space.email] / duration\n                    : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown[this.event.space.email]\n                    ? this.event.breakdown[this.event.space.email] / duration\n                    : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + local_id\"\n    *ngIf=\"event && !hide\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (click)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\">\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (click)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnInit,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnInit, OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** List of bookings for the current date and space */\n    public event_list: Booking[] = [];\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.event_list;\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return (\n                    (!this.overflow_only ||\n                        event.setup[event.space.email] ||\n                        event.breakdown[event.space.email]) &&\n                    ((event.declined && this.legend.declined) ||\n                        (!event.declined && this.legend[event.type]))\n                );\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service\n                    .listen('APP.breakdown')\n                    .subscribe((state) => (this.overflow_only = state))\n            );\n            this.subscription(\n                'legend',\n                this._service\n                    .listen('CONCIERGE.legend')\n                    .subscribe((state) => (this.legend = state || {}))\n            );\n            this.subscription(\n                'bookings',\n                this._bookings.booking_list.subscribe(() => this.updateEvents())\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        if (changes.space || changes.date || changes.legend) {\n            this.updateEvents();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    private updateEvents() {\n        const date = dayjs(this.date);\n        const bookings = this._bookings.booking_list.getValue().filter((booking) => {\n            const start = dayjs(booking.date);\n            const end = start.add(booking.duration, 'm');\n            return (\n                booking.space_list.find((space) => space.email === this.space.email) &&\n                (start.isSame(date, 'd') ||\n                    end.isSame(date, 'd') ||\n                    (date.isAfter(start, 'd') && date.isBefore(end, 'd')))\n            );\n        });\n        this.event_list = bookings;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past');\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._spaces.find(event.container.id.replace('space-col-', '')) || room;\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        const new_booking = new Booking({\n            ...booking.toJSON(),\n            room_ids: room_list.map((space) => space.id),\n        });\n        this.checkCollisions(\n            room_list,\n            date.valueOf(),\n            new_booking.duration,\n            new_booking.icaluid\n        ).then(\n            () => {\n                this.moveBooking(message, new_booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(new_booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(new_booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._spaces\n                .available({\n                    room_ids: spaces.map((i) => i.id).join(','),\n                    date,\n                    duration,\n                    ignore,\n                    hide_bookings: true,\n                })\n                .then(\n                    (list) => {\n                        list.length === spaces.length ? resolve() : reject();\n                    },\n                    () => reject()\n                );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        this._bookings.save(new_booking).then(\n                            (bkn: Booking) => {\n                                resolve(bkn);\n                                const bookings = this._bookings.booking_list.getValue();\n                                bookings.splice(bookings.findIndex(bkn => bkn.icaluid === bkn.icaluid), 1, bkn);\n                                this._bookings.booking_list.next(bookings);\n                            },\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    OnChanges,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { replaceBookings } from 'src/app/services/data/bookings/booking.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 10;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach((item) => (map[item] = true));\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _spaces: SpacesService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._org.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n                const zone_id = !this.level ? this._org.building.id : this.level;\n                this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n                this.init();\n                this.initSpaces();\n                // Update time\n                this.updateTime();\n                this.interval('time', () => this.updateTime(), 15 * 1000);\n            });\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.level && this._org.building) {\n            const zone_id = !this.level ? this._org.building.id : this.level;\n            this.spaces = this._spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n        }\n        /* istanbul ignore else */\n        if (changes.space_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.title = 'Day View';\n        this.subscription(\n            'viewing',\n            this._service\n                .listen('CONCIERGE.day_view.viewing')\n                .subscribe((event) => this.scrollIntoView(event))\n        );\n        // Subscribe to route query changes\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('view')) {\n                    this.view_id = params.get('view');\n                    const details = localStorage.getItem('CONCIERGE.view_booking');\n                    /* istanbul ignore else */\n                    if (details) {\n                        const booking = new Booking(JSON.parse(details));\n                        this.view(booking);\n                        localStorage.removeItem('CONCIERGE.view_booking');\n                    }\n                }\n            })\n        );\n        // Update bookings for visible rooms\n        this.updateBookings();\n        this.interval(\n            'scroll',\n            () => {\n                /* istanbul ignore else */\n                if (this.scroll_area && this.scroll_area.nativeElement) {\n                    this.updateScroll({ target: this.scroll_area.nativeElement });\n                }\n            },\n            1000\n        );\n        /* istanbul ignore else */\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        this.timeout('update', () => {\n            const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n            if (visible_rooms.length) {\n                visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n                const time = dayjs(this.date).startOf('d');\n                const end = time.endOf('d');\n                const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n                const level = this._service.get('APP.level');\n                const zone_ids = [level === -1 ? this._org.building.id : level];\n                /* istanbul ignore else */\n                if (this.space_type) {\n                    zone_ids.push(this.space_type);\n                }\n                this.loading = true;\n                this._spaces\n                    .query({\n                        room_ids,\n                        zone_ids: zone_ids.join(','),\n                        available_from: time.unix(),\n                        available_to: end.unix(),\n                    })\n                    .then(\n                        (room_list) => {\n                            let bookings = this._bookings.booking_list.getValue();\n                            room_list.forEach(\n                                (space) =>\n                                    (bookings = replaceBookings(bookings, space.bookings as any, {\n                                        space: space.email,\n                                        from: time.valueOf(),\n                                        to: end.valueOf()\n                                    }))\n                            );\n                            this._bookings.booking_list.next(bookings);\n                            this.last_update = dayjs().valueOf();\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        },\n                        () => {\n                            delete this.loading_space;\n                            this.loading_space = {};\n                            this.loading = false;\n                            this.timeout(\n                                'update_bookings',\n                                () => this.updateBookings(),\n                                UPDATE_INTERVAL * 1000\n                            );\n                        }\n                    );\n            } else {\n                this.timeout(\n                    'update_bookings',\n                    () => this.updateBookings(),\n                    UPDATE_INTERVAL * 1000\n                );\n            }\n        });\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                space: booking.space,\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div class=\"space-header\" *ngFor=\"let item of filtered_spaces\" [title]=\"item.name\">\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (click)=\"show_holding_bay = !show_holding_bay\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_holding_bay ? 'close' : 'list'\n                    }\"\n                ></app-icon>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (click)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)'\n                    | safe: 'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\" [level]=\"level\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Building } from 'src/app/services/data/organisation/building.class';\nimport { ReportDetails } from '../reports.component';\nimport { Report } from 'src/app/services/data/reports/report.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ReportsService } from 'src/app/services/data/reports/reports.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-report-display',\n    templateUrl: './report-display.component.html',\n    styleUrls: ['./report-display.component.scss'],\n})\nexport class ReportDisplayComponent implements OnInit, OnChanges {\n    /** Details about the report being requested */\n    @Input() public report: ReportDetails;\n    /** Start date for the generated report */\n    public start_date: number = dayjs().startOf('d').valueOf();\n    /** End date for the generated report */\n    public end_date: number = dayjs().endOf('d').valueOf();\n    /** List of report data entries */\n    public report_data: Report;\n    /** Whether report data is loading */\n    public loading: boolean;\n    /** List of selected locations */\n    public locations: Building[] = [{} as any];\n    /** Multiple Locations? */\n    public multipleLocations: boolean = false;\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _reports: ReportsService,\n        private _router: Router,\n    ) {}\n\n    public ngOnInit(): void {\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.locations = [this._org.building];\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.report) {\n            this.report_data = null;\n        }\n        if (this.locations.length > 1){\n            this.locations = [this.locations[0]];\n        }\n    }\n\n    /**\n     * Ensure Space Time Continuum\n     */\n    public checkDates(new_date: number){\n        if(this.start_date > this.end_date){\n            this.start_date = dayjs(new_date).startOf('d').valueOf();\n            this.end_date = dayjs(new_date).endOf('d').valueOf();\n        }\n    }\n\n    /**\n     * Generate report\n     */\n    public generateReport() {\n        /* istanbul ignore else */\n        if (this.report) {\n            this.loading = true;\n            this.report_data = null;\n            this._reports\n                .show(this.report.id, {\n                    date: dayjs(this.start_date).format('YYYY-MM-DD'),\n                    start_date: Math.floor(this.start_date / 1000),\n                    end_date: Math.floor(this.end_date / 1000),\n                    zone_ids: this.locations.map((i) => i.id).join(','),\n                })\n                .then(\n                    (report) => {\n                        this.loading = false;\n                        this.report_data = new Report({ ...report, type: this.report.id });\n                    },\n                    (err) => {\n                        this.loading = false;\n                        this._service.notifyError(\n                            `Error generating report. Error: ${err.message || err}`\n                        );\n                    }\n                );\n        }\n    }\n\n    public downloadReport() {\n        /* istanbul ignore else */\n        if (this.report_data) {\n            const date = dayjs(this.start_date).format('YYYY-MM-DD');\n            this.report_data.downloadCSV(\n                `${this.report.name.split(' ').join('_').toLowerCase()}+${date}.csv`\n            );\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"period\">\n        <div class=\"field\">\n            <label for=\"start-date\">Start Date</label>\n            <a-date-field\n                name=\"start-date\"\n                [(ngModel)]=\"start_date\"\n                [from]=\"end_date / 10\"\n                [to]=\"end_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n        <div class=\"gap\">to</div>\n        <div class=\"field\">\n            <label for=\"end-date\">End Date</label>\n            <a-date-field\n                name=\"end-date\"\n                [(ngModel)]=\"end_date\"\n                [from]=\"start_date / 10\"\n                [to]=\"start_date * 10\"\n                (onChange)=\"checkDates($event)\"\n            ></a-date-field>\n        </div>\n    </div>\n    <div class=\"location dark-mode\">\n        <mat-form-field appearance=\"outline\" *ngIf=\"buildings && buildings.length > 1\">\n            <!-- Single Location Select -->\n            <mat-select *ngIf='!report.multi_locations' name=\"locations\" [(ngModel)]=\"locations[0]\">\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <!-- Multi Location Select - Could be wrapped to make directives conditional -->     \n            <mat-select *ngIf='report.multi_locations' name=\"locations\" [(ngModel)]=\"locations\" multiple>\n                <mat-select-trigger>\n                    {{ locations ? locations[0]?.name : '' }}\n                    <span *ngIf=\"locations?.length > 1\" class=\"selection\">\n                        (+{{ locations.length - 1 }}\n                        {{ locations?.length === 2 ? 'other' : 'others' }})\n                    </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let building of buildings\" [value]=\"building\">\n                    <div class=\"option\">\n                        <div class=\"code\">{{ building.code }}</div>\n                        <div class=\"name\">{{ building.name }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n\n        </mat-form-field>\n    </div>\n    <div class=\"actions\">\n        <button mat-button name=\"generate\" [disabled]=\"loading\" (click)=\"generateReport()\">\n            <span *ngIf=\"!loading; else gen_loader\">Generate</span>\n            <ng-template #gen_loader><mat-spinner diameter=\"32\"></mat-spinner></ng-template>\n        </button>\n        <button mat-button name=\"download\" [disabled]=\"!report_data\" (click)=\"downloadReport()\">Download</button>\n    </div>\n</div>\n<div class=\"display\">\n    <ng-container *ngIf=\"!loading; else load_state\">\n        <ng-container *ngIf=\"report_data && report_data.data.length; else empty_state\">\n            <a-report-table [list]=\"report_data.data || []\" [details]=\"report\"></a-report-table>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'arrow_upward' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            {{\n                report_data ? 'No entries for selected date' : 'Press generate above to view report'\n            }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #load_state>\n    <div class=\"info-block center\">\n        <div class=\"icon\">\n            <mat-spinner diameter=\"32\"></mat-spinner>\n        </div>\n        <div class=\"text\">Loading report...</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { ReportDetails } from '../reports.component';\n\n@Component({\n    selector: 'a-report-table',\n    templateUrl: './report-table.component.html',\n    styleUrls: ['./report-table.component.scss'],\n})\nexport class ReportTableComponent implements OnChanges {\n    /** List of report table data */\n    @Input() public list: HashMap[] = [];\n    /** Map of details for report */\n    @Input() public details: ReportDetails;\n\n    public fields: string[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.list && this.list && this.list.length) {\n            this.fields = Object.keys(this.list[0]).filter(i => this.details.hide_fields.indexOf(i) < 0);\n        }\n    }\n}\n","<table cdk-table [dataSource]=\"list\">\n    <!-- Position Column -->\n    <ng-container *ngFor=\"let key of fields\" [cdkColumnDef]=\"key\">\n        <th cdk-header-cell [attr.name]=\"key\" *cdkHeaderCellDef>{{ key | replace }}</th>\n        <td cdk-cell [attr.name]=\"key\" *cdkCellDef=\"let element\">{{ element[key] }}</td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"fields\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: fields\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ApplicationIcon } from 'src/app/shared/utilities/settings.interfaces';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nexport interface ReportDetails {\n    /** ID associated with the report */\n    id: string;\n    /** Name of the report */\n    name: string;\n    /** Shortened name of the report */\n    short_name: string;\n    /** More details about the report */\n    description: string;\n    /** Fields to hide on the UI */\n    hide_fields: string[];\n    /** Icon to display for report */\n    icon: ApplicationIcon;\n    /** Multiselect Locations */\n    multi_locations: boolean;\n}\n\n@Component({\n    selector: 'a-reports',\n    templateUrl: './reports.component.html',\n    styleUrls: ['./reports.component.scss'],\n})\nexport class ReportsComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the active report */\n    public active_report: string;\n    /** List of available reports to display */\n    public readonly reports: ReportDetails[] = [\n        {\n            id: 'bookings',\n            name: 'Aggregate Bookings Report',\n            short_name: 'Bookings',\n            description: 'Generate comprehensive report on various aspects of bookings',\n            hide_fields: ['room_email'],\n            icon: { type: 'img', src: 'assets/img/report-booking.svg' },\n            multi_locations: false,\n        },\n        {\n            id: 'catering',\n            name: 'Aggregate Charge Back Report',\n            short_name: 'Catering',\n            description: 'View confirmed catering report or mark up unconfirmed catering',\n            hide_fields: ['room_email'],\n            icon: { type: 'icon', class: 'material-icons', content: 'room_service' },\n            multi_locations: true,\n        },\n    ];\n\n    public get the_report(): ReportDetails {\n        return this.reports.find(report => report.id === this.active_report);\n    }\n\n    constructor(private _route: ActivatedRoute, private _router: Router, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Reports';\n        this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n            if (params.has('report')) {\n                this.active_report = params.get('report');\n            }\n        }));\n    }\n\n    public updateReport() {\n        this._router.navigate(['/reports', this.active_report]);\n    }\n}\n","<div class=\"reports\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\" *ngIf=\"active_report\">\n                <mat-form-field *ngIf=\"reports && reports.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_report\" (ngModelChange)=\"updateReport()\">\n                        <mat-option *ngFor=\"let report of reports\" [value]=\"report.id\">\n                            {{ report.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <div class=\"options\" *ngIf=\"!active_report; else report_display\">\n                <a\n                    class=\"card\"\n                    mat-button\n                    *ngFor=\"let report of reports\"\n                    [routerLink]=\"['/reports', report.id]\"\n                >\n                    <div class=\"content\">\n                        <div class=\"icon\">\n                            <app-icon [icon]=\"report.icon\"></app-icon>\n                        </div>\n                        <h3>{{ report.short_name }}</h3>\n                        <div class=\"details\">\n                            <div class=\"desc\">{{ report.description }}</div>\n                            <app-icon\n                                [icon]=\"{\n                                    class: 'material-icons',\n                                    content: 'keyboard_arrow_right'\n                                }\"\n                            ></app-icon>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </main>\n    </div>\n</div>\n<ng-template #report_display>\n    <a-report-display [report]=\"the_report\">\n    </a-report-display>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { ReportsComponent } from './reports.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { ReportDisplayComponent } from './report-display/report-display.component';\nimport { ReportTableComponent } from './report-table/report-table.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ReportsComponent },\n    { path: ':report', component: ReportsComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  declarations: [ReportsComponent, ReportDisplayComponent, ReportTableComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class ReportsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from '../shared/base.directive';\nimport { ApplicationService } from '../services/app.service';\nimport { ApplicationLoadingState, LoadingState } from '../shared/utilities/types.utilities';\nimport { ApplicationIcon } from '../shared/utilities/settings.interfaces';\nimport { UsersService } from '../services/data/users/users.service';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss'],\n})\nexport class ShellWrapperComponent extends BaseDirective implements OnInit {\n    /** Loading state of the application */\n    public loading_state: ApplicationLoadingState;\n    /** Logo of the application organisation */\n    public logo: ApplicationIcon;\n\n    constructor(private _service: ApplicationService, private _users: UsersService) {\n        super();\n    }\n\n    /** Whether the user needs to login */\n    public get show_login(): boolean {\n        return !this._users.is_logged_in;\n    }\n\n    /** Whether a module is still loading data */\n    public get is_loading(): boolean {\n        if (this.loading_state) {\n            for (const mod in this.loading_state) {\n                if (this.loading_state[mod] && this.loading_state[mod].state === 'loading') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /** List of modules with a loading state */\n    public get loading_state_list(): LoadingState[] {\n        const list: LoadingState[] = [];\n        for (const mod in this.loading_state) {\n            if (this.loading_state[mod]) {\n                list.push(this.loading_state[mod]);\n            }\n        }\n        return list;\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'loading',\n            this._service.listen<ApplicationLoadingState>('loading').subscribe((loading) => {\n                this.loading_state = loading;\n            })\n        );\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.logo = this._service.setting('app.logo_dark') || { type: 'icon' };\n        });\n    }\n}\n","\n<div class=\"shell\">\n    <div class=\"view\" *ngIf=\"!show_login\">\n        <router-outlet></router-outlet>\n        <feedback></feedback>\n    </div>\n    <div class=\"login-module\" *ngIf=\"show_login\">\n        <app-login></app-login>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"is_loading\">\n        <div class=\"info-block\">\n            <div class=\"header\" [style.background-color]=\"logo?.background\">\n                <div class=\"logo\">\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">{{ logo.content }}</i>\n                    <img *ngIf=\"logo?.type === 'img'\" [src]=\"logo.src | safe:'resource'\" />\n                </div>\n            </div>\n            <div class=\"item\" *ngFor=\"let item of loading_state_list\">\n                <div class=\"message\">{{ item.message }}</div>\n                <div class=\"icon\">\n                    <ng-container [ngSwitch]=\"item.state\">\n                        <ng-container *ngSwitchCase=\"'complete'\">\n                            <i class=\"material-icons success\">done</i>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'failed'\">\n                            <i class=\"material-icons failure\">close</i>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <mat-spinner diameter=\"16\"></mat-spinner>\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { UsersService } from 'src/app/services/data/users/users.service';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _users: UsersService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true, email: '' }));\n        this.form.controls.attendees.setValue(list);\n        this.form.markAsDirty();\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n        this.form.markAsDirty();\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (click)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (click)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _bookings: BookingsService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        if (this.booking.id) {\n            this.form.controls.title.disable();\n        }\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.form.dirty && this.form.valid) {\n                const attendees = this.form.controls.attendees.value;\n                for (const attendee of attendees) {\n                    if (!attendee.email) {\n                        attendee.email = `${Math.floor(Math.random() * 99999)}@guest.mckinsey.com`;\n                    }\n                }\n                const new_booking = new Booking({ ...this.booking.toJSON(), ...this.form.value });\n                this._bookings.save(new_booking).then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        const bookings = this._bookings.booking_list.getValue();\n                        bookings.splice(bookings.findIndex(bkn => bkn.icaluid === bkn.icaluid), 1, bkn);\n                        this._bookings.booking_list.next(bookings);\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (click)=\"save()\">Save</button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { unique } from 'src/app/shared/utilities/general.utilities';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n    /** Whether all the attendees have checked in */\n    public checked_in: boolean = false;\n    /** Whether all attendees are being checked in */\n    public loading: boolean;\n\n    /** Whether event will start soon or has started */\n    public get upcoming() {\n        return this.event.status === 'upcoming' || this.event.status === 'in_progress';\n    }\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const { checked_in, count } = this.checkedInStatus();\n        return `${checked_in} / ${count}`;\n    }\n\n    constructor(private _service: ApplicationService, private _bookings: BookingsService, private _dialog: MatDialog) {}\n\n    public checkedInStatus() {\n        const checked_in_users = this.event.checked_in;\n        return this.event.attendees.reduce(\n            (counts, user) => {\n                /* istanbul ignore else */\n                if (user.external) {\n                    counts.count++;\n                    /* istanbul ignore else */\n                    if (checked_in_users.indexOf(user.email) >= 0) {\n                        counts.checked_in++;\n                    }\n                }\n                return counts;\n            },\n            { checked_in: 0, count: 0 }\n        );\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: unique(this.event.attendees.map(user => ({ name: user.name, email: user.email }))),\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in all attendees for booking. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: unique([...this.event.checked_in, ...this.event.attendees.map(user => user.email)]),\n            });\n        }\n        this.loading = false;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        const subject = encodeURIComponent(\n            `${this.event.title}\" at ${this.event.start_time}, ${this.event.date_string}`\n        );\n        return `mailto:${this.event.attendees\n            .map((user) => user.email)\n            .join(',')}?Subject=${subject}\"`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n        if (changes.event) {\n            const { checked_in, count } = this.checkedInStatus();\n            this.checked_in = checked_in >= count;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\" [class.upcoming]=\"upcoming\" [class.all-checked-in]=\"checked_in\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"name\">{{ event.organiser?.name }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a\n                mat-icon-button\n                matTooltip=\"Phone Host\"\n                [disabled]=\"!event.organiser.phone\"\n                [href]=\"'tel:' + event.organiser.phone | safe: 'url'\"\n            >\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n            </a>\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\" (click)=\"checkin()\">\n                <action-icon\n                [loading]=\"loading\"\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (click)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (click)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** Whether all bookings should be shown */\n    @Input() public show_all: boolean;\n    /** List of visitor bookings for the current date */\n    public bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search || changes.show_all) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    public trackByFn(index: number, booking: Booking) {\n      return booking.id;\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        }).filter(bkn => this.show_all ? true : bkn.has_visitors);\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._org.building.id;\n                return this._spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings;\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === -1\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container\n                *ngFor=\"let booking of filtered_bookings; let i = index; trackBy: trackByFn\"\n            >\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && active_index === i\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">\n            No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BookingsService } from 'src/app/services/data/bookings/bookings.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss'],\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n    /** Whether attendee is being checked in */\n    public loading: boolean;\n\n    /** Whether attendee is late */\n    public get late() {\n        return this.event.status === 'in_progress' && this.person.external;\n    }\n\n    /** Whether attendee has checked in */\n    public get approved() {\n        return this.event.checked_in.includes(this.person.email);\n    }\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    public get invalid_email(): boolean {\n        return !this.person.email || this.person.email.includes('@guest.mckinsey.com');\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser.email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser.email\n                : ''\n        }`;\n    }\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2,\n        private _bookings: BookingsService,\n        private _service: ApplicationService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n\n    /**\n     * Checkin the attendee\n     */\n    public async checkin() {\n        this.loading = true;\n        const value = await this._bookings\n            .checkin(this.event.id, {\n                host_email: this.event.organiser.email,\n                attendees: [{ name: this.person.name, email: this.person.email }],\n                booking_id: this.event.id,\n                icaluid: this.event.icaluid,\n                id: this.event.id,\n                notify_users: [...this.event.notify_users],\n                response_type: 'accepted',\n                room_id: this.event.space.id,\n            })\n            .catch((err) => {\n                this._service.notifyError(`Error checking in user. Error: ${err.message || err}`);\n            });\n        if (value) {\n            this.event = new Booking({\n                ...this.event.toJSON(),\n                checked_in: [...this.event.checked_in, this.person.email],\n            });\n        }\n        this.loading = false;\n    }\n}\n","<div\n    class=\"icon\"\n    [class.approved]=\"approved || !person.external\"\n    [class.late]=\"late\"\n    [matTooltip]=\"\n        person.external ? (approved ? 'Checked In' : late ? 'Late' : 'Upcoming') : 'Staff'\n    \"\n    matTooltipPosition=\"right\"\n>\n    <app-icon\n        [icon]=\"{ class: 'material-icons', content: person.external ? 'face' : 'assignment_ind' }\"\n    ></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\" [class.approved]=\"approved || !person.external\">\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a\n            mat-icon-button\n            *ngIf=\"!person.external\"\n            matTooltip=\"Phone Staff Member\"\n            [disabled]=\"!person.phone\"\n            [href]=\"'tel:' + person.phone | safe: 'url'\"\n        >\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'call' }\"></action-icon>\n        </a>\n        <a mat-icon-button matTooltip=\"Email Visitor\" [disabled]=\"invalid_email\" [href]=\"mail_url | safe: 'url'\">\n            <action-icon [icon]=\"{ class: 'material-icons', content: 'mail' }\"></action-icon>\n        </a>\n        <button\n            mat-icon-button\n            matTooltip=\"Checkin Visitor\"\n            [disabled]=\"loading\"\n            (click)=\"checkin()\"\n        >\n            <action-icon\n                *ngIf=\"person.external\"\n                [loading]=\"loading\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData,\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss'],\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n    /** Whether all bookings should be listed */\n    public show_all: boolean;\n\n    public get has_visitor_space(): boolean {\n        const building = this._org.building;\n        return building && !!this._spaces.find(building.visitor_space || building.holding_bay);\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _spaces: SpacesService,\n        private _org: OrganisationService\n    ) {}\n\n    public ngOnInit(): void {\n        this._service.title = 'Visitors';\n    }\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._org.building;\n        const space = this._spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking,\n                },\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header\n            [(date)]=\"date\"\n            (dateChange)=\"search_str = ''\"\n            [show_add_item]=\"false\"\n            (event)=\"newVisitorMeeting()\"\n        >\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon\n                        [icon]=\"{ class: 'material-icons', content: 'search' }\"\n                        matPrefix\n                    ></app-icon>\n                    <input\n                        matInput\n                        [(ngModel)]=\"search_str\"\n                        name=\"visitor-name\"\n                        placeholder=\"Search...\"\n                    />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (click)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-slide-toggle\n                [(ngModel)]=\"show_all\"\n                labelPosition=\"before\"\n                title=\"Show all meetings\"\n            >\n                All meetings\n            </mat-slide-toggle>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [show_all]=\"show_all\" [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'week-view-day-display',\n    templateUrl: './day-display.component.html',\n    styleUrls: ['./day-display.component.scss']\n})\nexport class WeekViewDayDisplayComponent implements OnChanges {\n    /** Date to display bookings for */\n    @Input() public date: number;\n    /** List of spaces to display bookings for */\n    @Input() public spaces: Space[];\n    /** List of bookings for this date */\n    public booking_list: Booking[] = [];\n\n    /** Display string for the set date */\n    public get date_display(): string {\n        const date = dayjs(this.date);\n        return date.format('ddd, DD MMM YYYY');\n    }\n\n    /** Whether the date set is today */\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date || changes.spaces) {\n            this.updateBookings();\n        }\n    }\n\n    private updateBookings(): void {\n        let bookings = [];\n        this.spaces.forEach(space => {\n            bookings = bookings.concat(space.bookingsFor(this.date));\n        });\n        bookings.sort((a, b) => a.date - b.date);\n        this.booking_list = bookings;\n    }\n}\n","<div class=\"heading\">\n    <div class=\"text\">{{ date_display }}</div>\n    <div class=\"info\" *ngIf=\"is_today\">Today</div>\n</div>\n<div class=\"list\">\n    <ng-container *ngIf=\"booking_list && booking_list.length; else empty_state\">\n        <week-view-item *ngFor=\"let event of booking_list\" [event]=\"event\"></week-view-item>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No events for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n@Component({\n    selector: 'week-view-item',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss']\n})\nexport class WeekViewItemComponent {\n    @Input() public event: Booking;\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    /**\n     * Open modal to view bookings details\n     */\n    public viewMeetingDetails() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxWidth: 'calc(100vw - 2em)',\n            data: {\n                space: this.event.space,\n                booking: this.event\n            }\n        })\n    }\n}\n","<div\n    [class]=\"\n        'event' +\n        (type ? ' ' + type : '') +\n        (event.status === 'done' ? ' ended' : '') +\n        (event.status === 'in_progress' ? 'in-progress' : '')\n    \"\n    *ngIf=\"event\"\n    [attr.id]=\"event?.id\"\n    (click)=\"viewMeetingDetails()\"\n>\n    <div class=\"heading\">\n        <div class=\"text\">{{ event.all_day ? 'All Day' : event.time_period }}</div>\n        <div class=\"handle\">\n            <app-icon\n                *ngIf=\"event.declined || event.approved\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: event.approved ? 'done' : 'event_busy'\n                }\"\n            >\n            </app-icon>\n        </div>\n    </div>\n    <div class=\"details\">\n        <div class=\"field\" [title]=\"event.organiser?.name || event.organiser_email\">\n            <label for=\"host\">Host:</label>\n            <div class=\"value\" name=\"host\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"field\" [title]=\"event.space?.name || event.location\">\n            <label for=\"location\">Location:</label>\n            <div class=\"value\" name=\"location\" [matTooltip]=\"event.space?.name || event.location\">\n                {{ event.space?.name || event.location }}\n            </div>\n        </div>\n        <div class=\"field\">\n            <label for=\"attendees\">Attendees:</label>\n            <div class=\"value\" name=\"attendees\">{{ event.attendees?.length || '0' }}</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { SpacesService } from 'src/app/services/data/spaces/spaces.service';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\n\n@Component({\n    selector: 'week-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class WeekViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** Whether weekends are displayed */\n    @Input() public weekends: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of dates to display */\n    public date_list: number[] = [];\n    /** List of spaces to display bookings for */\n    public space_list: Space[] = [];\n    /** List of items from an API search */\n    public search_results$: Observable<Space[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    constructor(private _spaces: SpacesService, private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.date_list = this.generateDates(this.date, this.weekends);\n        this.initBookings();\n        this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        this.interval(\n            'update_booking',\n            () =>\n                this.search$.next(`${this.date}|${this.weekends}|${this.level}|${dayjs().unix()}`),\n            30 * 1000\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date || changes.weekends || changes.level) {\n            this.date_list = this.generateDates(this.date, this.weekends);\n            this.search$.next(`${this.date}|${this.weekends}|${this.level}`);\n        }\n    }\n\n    /**\n     * Generate list of dates to display\n     * @param date Currently selected date\n     * @param weekends Whether weekends should be included\n     */\n    private generateDates(date: number, weekends: boolean = false): number[] {\n        const list: number[] = [];\n        let day = dayjs(date).startOf('d');\n        let start = day.startOf('w');\n        const end = start.endOf('w');\n        while (start.isBefore(end, 'm')) {\n            if ((start.day() !== 0 && start.day() !== 6) || weekends) {\n                list.push(start.valueOf());\n            }\n            start = start.add(1, 'd');\n        }\n        return list;\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap((_) => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('w');\n                return this._spaces.query({\n                    zone_ids: `${this.level ? this.level : this._org.building.id}${\n                        this.space_type ? ',' + this.space_type : ''\n                    }`,\n                    available_from: Math.floor(this.date_list[0] / 1000) || date.unix(),\n                    available_to:\n                        Math.floor(this.date_list[this.date_list.length - 1] / 1000) ||\n                        date.endOf('w').unix(),\n                });\n            }),\n            catchError((_) => of([]))\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => {\n                this.loading = false;\n                this.space_list = list;\n            })\n        );\n    }\n}\n","<div class=\"week-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <week-view-day-display\n        *ngFor=\"let date of date_list\"\n        [date]=\"date\"\n        [spaces]=\"space_list\"\n    ></week-view-day-display>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { OrganisationService } from 'src/app/services/data/organisation/organisation.service';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-week-view',\n    templateUrl: './week-view.component.html',\n    styleUrls: ['./week-view.component.scss'],\n})\nexport class WeekViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Whether weekends are displayed */\n    public weekend: boolean;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n\n    constructor(\n        private _service: ApplicationService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.title = 'Week View';\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'route.params',\n                this._route.paramMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('level') && this.active_level !== params.get('level')) {\n                        const level = this._org.levelWithID(params.get('level'));\n                        /* istanbul ignore else */\n                        if (level) {\n                            const building = this._org.buildings.find(\n                                (bld) => bld.id === level.building_id\n                            );\n                            /* istanbul ignore else */\n                            if (building) {\n                                this.active_level = level.id;\n                                this._org.building = building;\n                            }\n                        }\n                    }\n                })\n            );\n            this.subscription(\n                'building',\n                this._org.listen('active_building').subscribe(() => {\n                    const building = this._org.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find((lvl) => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0] || { id: '' }).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(building.levels);\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._org.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, { data: {} });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/week-view', this.active_level]);\n    }\n}\n","<div class=\"week-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" [show_add_item]=\"true\" (event)=\"newMeeting()\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-slide-toggle\n                    [(ngModel)]=\"weekend\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Show Weekends\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <week-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [space_type]=\"active_type\"\n                [weekends]=\"weekend\"\n            ></week-view-timeline>\n        </main>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { WeekViewComponent } from './week-view.component';\nimport { WeekViewTimelineComponent } from './timeline/timeline.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { WeekViewDayDisplayComponent } from './day-display/day-display.component';\nimport { WeekViewItemComponent } from './day-display/item/item.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: WeekViewComponent },\n    { path: ':level', component: WeekViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [WeekViewComponent, WeekViewTimelineComponent, WeekViewDayDisplayComponent, WeekViewItemComponent],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class WeekViewModule {}\n","export const environment = {\n  production: true\n};\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}