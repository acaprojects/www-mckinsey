{"version":3,"sources":["./src/app/shell/day-view/approvals-view/approvals-view.component.ts","./src/app/shell/day-view/approvals-view/approvals-view.component.html","./src/app/shell/day-view/approvals-view/event/event.component.ts","./src/app/shell/day-view/approvals-view/event/event.component.html","./src/app/shell/day-view/day-view.component.ts","./src/app/shell/day-view/day-view.component.html","./src/app/shell/day-view/day-view.module.ts","./src/app/shell/day-view/space/event/event.component.ts","./src/app/shell/day-view/space/event/event.component.html","./src/app/shell/day-view/space/space.component.ts","./src/app/shell/day-view/space/space.component.html","./src/app/shell/day-view/timeline/timeline.component.ts","./src/app/shell/day-view/timeline/timeline.component.html"],"names":[],"mappings":"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","file":"shell-day-view-day-view-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'day-view-approvals-view',\n    templateUrl: './approvals-view.component.html',\n    styleUrls: ['./approvals-view.component.scss']\n})\nexport class DayViewApprovalsComponent extends BaseDirective implements OnInit, OnChanges {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** List of bookings that are pending approval */\n    public events: Booking[] = [];\n    /** List of spaces to check for pending approvals */\n    public space_list: string[] = [];\n    /** Whether the pending bookings are being loaded */\n    public loading: boolean;\n    /** Whether an event action is in progress */\n    public waiting_on_event: boolean;\n\n    /** Zone to filter spaces on */\n    public get zone_id(): string {\n        const level = this._service.get('APP.level');\n        return typeof level === 'string' ? level : this._service.Organisation.building.id;\n    }\n\n    /** Display value for the active date */\n    public get date_display(): string {\n        const now = dayjs().startOf('d');\n        const date = dayjs(this.date).startOf('d');\n        if (now.isSame(date, 'd')) {\n            return 'Today';\n        } else if (date.diff(now, 'd') === 1) {\n            return 'Tomorrow';\n        } else if (now.diff(date, 'd') === 1) {\n            return 'Yesterday';\n        }\n        return date.format('DD MMM YYYY');\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('building', this._service.listen('APP.level').subscribe((level => {\n            const building = this._service.Organisation.building;\n            this.space_list = this._service.Spaces.filter((space) => space.zones.indexOf(level === -1 ? building.id : level) >= 0).map(i => i.name);\n            this.processMeetings();\n            this.getMonthlyPending();\n        })));\n        this.getMonthlyPending();\n        this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.events = [];\n            this.updateMeetings();\n            // this.interval('update_meetings', () => this.updateMeetings(), 60 * 1000);\n            this.processMeetings();\n            this.interval('process_meetings', () => this.processMeetings(), 1 * 1000);\n            /* istanbul ignore else */\n            if (!dayjs(changes.date.previousValue).isSame(dayjs(changes.date.currentValue), 'M')){\n                this.getMonthlyPending();\n                this.interval('monthly_pending', () => this.getMonthlyPending(), 10 * 60 * 1000);\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /** Update listing of meetings pending approval */\n    private updateMeetings() {\n        const time = dayjs(this.date).startOf('d');\n        const end = time.endOf('d');\n        this.loading = true;\n        this._service.Spaces.query({\n            zone_ids: this.zone_id,\n            available_from: time.unix(),\n            available_to: end.unix()\n        }).then((room_list) => {\n            this.space_list = room_list.map(i => i.id);\n            this.processMeetings();\n            this.loading = false;\n        });\n    }\n\n    /**\n     * Update pending meetings from list of rooms\n     */\n    private processMeetings() {\n        /* istanbul ignore if */\n        if (this.waiting_on_event) { return; }\n        this.events = this.process(this.date);\n        const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n        pending_list[dayjs(this.date).format('YYYY-MM-DD')] = this.events.length;\n        this._service.set('CONCIERGE.pending_bookings', pending_list);\n    }\n\n    private process(date: number) {\n        let events: Booking[] = [];\n        for (const id of this.space_list) {\n            const rm = this._service.Spaces.find(id);\n            /* istanbul ignore else */\n            if (rm) {\n                events = events.concat(rm.bookingsFor(date).filter(booking => booking.tentative));\n            }\n        }\n        return events.sort((a, b) => a.date - b.date);\n    }\n\n    private getMonthlyPending() {\n        const now = dayjs().startOf('d');\n        let start = dayjs(this.date).startOf('M');\n        const end = start.endOf('M');\n        /* istanbul ignore else */\n        if (now.isAfter(end, 'm')) {\n            return;\n        } else if (now.isAfter(start, 'm')) {\n            start = now;\n        }\n        this._service.Spaces.query({\n            zone_ids: this.zone_id,\n            available_from: start.unix(),\n            available_to: end.unix()\n        }).then((_) => {\n            const pending_list = this._service.get('CONCIERGE.pending_bookings') || {};\n            for (let date = start; date.isBefore(end, 'm'); date = date.add(1, 'd')) {\n                const events = this.process(date.valueOf());\n                pending_list[date.format('YYYY-MM-DD')] = events.length;\n            }\n            this._service.set('CONCIERGE.pending_bookings', pending_list);\n        })\n    }\n}\n","<div class=\"approvals-view\">\n    <div class=\"content\" *ngIf=\"events && events.length; else empty_state\">\n        <div class=\"date\">\n            <div class=\"bar\"></div>\n            <div class=\"display\">{{ date_display }}</div>\n            <div class=\"bar\"></div>\n        </div>\n        <approvals-event *ngFor=\"let item of events; trackBy: trackByFn\" [event]=\"item\" (acting)=\"waiting_on_event = $event\"></approvals-event>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block center\" *ngIf=\"!loading\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">No meetings pending approval</div>\n    </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nconst STATES: { [id: string]: string } = {};\n\n@Component({\n    selector: 'approvals-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, height: 0 }),\n                animate(200, style({ opacity: 1, height: '*' })),\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, height: '*' }),\n                animate(200, style({ opacity: 0, height: 0 })),\n            ]),\n        ]),\n    ],\n})\nexport class DayViewApprovalsEventComponent extends BaseDirective {\n    /** Event to display */\n    @Input() event: Booking;\n    /** Event emitter for event actions */\n    @Output() acting = new EventEmitter<boolean>();\n    /** Whether approval action is being processed */\n    public loading: boolean;\n    /** Whether event details are shown */\n    public shown: boolean;\n\n    public get was_edited(): boolean {\n        return this.event.edits.length > 0;\n    }\n\n    /** Type of event */\n    public get type(): string {\n        return this.event.type;\n    }\n\n    /** Person to notify when external attendees arrive */\n    public get notifyee() {\n        return 'Concierge';\n    }\n\n    /** Description of the meeting */\n    public get description(): string {\n        return this.event.notes.find((i) => i.type === 'description').message;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        const catering: readonly CateringOrder[] = this.event.catering;\n        return !!catering.find((order) => this.event.space.id === order.location_id);\n    }\n\n    /** View booking details */\n    public view() {\n        this.timeout(\n            'view',\n            () => {\n                this._dialog.open(MeetingDetailsModalComponent, {\n                    data: {\n                        booking: this.event,\n                    },\n                });\n                this._service.set('CONCIERGE.day_view.viewing', this.event);\n            },\n            50\n        );\n    }\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /**\n     * Approve the meeting for the set room\n     */\n    public accept() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Approve Meeting',\n                content: `Approve ${this.event.organiser.name}'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${this.event.length_string} on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                this._service.Bookings.accept(this.event.id, {\n                    comment: '',\n                    room_id: this.event.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting approved.');\n                        this.event.approval_status[this.event.space.id] = 'accepted';\n                        STATES[this.event.id] = 'accepted';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error approving meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n\n    /**\n     * Decline meeting for the set room\n     */\n    public decline() {\n        this.acting.emit(true);\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            data: {\n                title: 'Decline Meeting',\n                content: `Decline ${\n                    this.event.organiser.name || this.event.organiser\n                }'s meeting in \"${this.event.space.name}\" at ${this.event.start_time} for ${\n                    this.event.length_string\n                } on ${this.event.date_string}`,\n                icon: { type: 'icon', class: 'material-icons', content: 'event_busy' },\n                action: 'Ok',\n            },\n        });\n        ref.componentInstance.event.subscribe((event: DialogEvent) => {\n            /* istanbul ignore else */\n            if (event.reason === 'done') {\n                this.loading = true;\n                const booking: Booking = this.event;\n                this.loading = true;\n                this._service.Bookings.decline(booking.id, {\n                    booking_id: booking.id,\n                    organiser: booking.organiser.email,\n                    icaluid: booking.icaluid,\n                    start: Math.floor(booking.date / 1000),\n                    end: Math.floor(booking.date / 1000) + booking.duration * 60,\n                    room_id: booking.space.id,\n                }).then(\n                    () => {\n                        this._service.notifySuccess('Meeting declined.');\n                        this.event.approval_status[booking.space.id] = 'declined';\n                        STATES[this.event.id] = 'declined';\n                        this._service.set('BOOKING.states', STATES);\n                        this.loading = false;\n                        this.acting.emit(false);\n                    },\n                    () => {\n                        this.acting.emit(false);\n                        this._service.notifyError('Error declining meeting.');\n                        this.loading = false;\n                    }\n                );\n            }\n            ref.close();\n        });\n    }\n}\n","<div [class]=\"'approval-event' + (type ? ' ' + type : '')\" *ngIf=\"event\" [attr.event-id]=\"event.id\">\n    <div class=\"header\">\n        <div class=\"avatar\">\n            <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n        </div>\n        <div class=\"details\">\n            <div class=\"text bold\">\n                {{ event.all_day ? 'All Day' : event.start_time + ' - ' + event.end_time }}\n                {{ event.space ? 'in ' + event.space.name : '' }}\n                <div *ngIf=\"was_edited\"></div>\n            </div>\n            <div class=\"text\">{{ event.title }}</div>\n        </div>\n        <button mat-icon-button class=\"search\" name=\"view\" (tapped)=\"view()\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"body\">\n        <div class=\"control\">\n            <div class=\"bar\"></div>\n            <app-icon\n                (tapped)=\"shown = !shown\"\n                [icon]=\"{\n                    class: 'material-icons',\n                    content: 'keyboard_arrow_' + (shown ? 'up' : 'down')\n                }\"\n            ></app-icon>\n            <div class=\"bar\"></div>\n        </div>\n        <div class=\"contents\" *ngIf=\"shown\" [@show]>\n            <div class=\"field\">\n                <label for=\"name\">Host:</label>\n                <div class=\"value\" name=\"host\">\n                    <div class=\"text\">{{ event.organiser?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.organiser?.email\"\n                            [disabled]=\"!event.organiser?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.organiser?.phone\"\n                            [disabled]=\"!event.organiser?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"\n                    event.creator &&\n                    event.organiser &&\n                    event.organiser.email !== event.creator.email\n                \"\n            >\n                <label for=\"bookee\">Booked by:</label>\n                <div class=\"value\" name=\"bookee\">\n                    <div class=\"text\">{{ event.creator?.name }}</div>\n                    <div class=\"actions\">\n                        <a\n                            mat-icon-button\n                            [href]=\"'mailto:' + event.creator?.email\"\n                            [disabled]=\"!event.creator?.email\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'email' }\"\n                            ></app-icon>\n                        </a>\n                        <a\n                            mat-icon-button\n                            [href]=\"'tel:' + event.creator?.phone\"\n                            [disabled]=\"!event.creator?.phone\"\n                        >\n                            <app-icon\n                                [icon]=\"{ class: 'material-icons', content: 'phone' }\"\n                            ></app-icon>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div class=\"field multiline\">\n                <label for=\"attendees\">Attendees:</label>\n                <div class=\"value\" name=\"attendees\">\n                    <div class=\"attendee\" *ngFor=\"let item of event.attendees\">{{ item.name }}</div>\n                </div>\n            </div>\n            <div class=\"field\">\n                <label for=\"notifyee\">Welcomed by:</label>\n                <div class=\"value\" name=\"notifyee\">{{ notifyee }}</div>\n            </div>\n            <div class=\"field\">\n                <label for=\"catering\">Catering:</label>\n                <div class=\"value\" name=\"catering\">\n                    {{ has_catering ? 'Catered' : 'No Catering' }}\n                </div>\n            </div>\n            <div class=\"field\" *ngIf=\"description\">\n                <label for=\"notes\">Notes:</label>\n                <div class=\"value\" name=\"notes\" [innerHTML]=\"description || '' | safe\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"accept\"\n            (tapped)=\"accept()\"\n            [class.accepted]=\"event.approved\"\n        >\n            Accept{{ event.approved ? 'ed' : '' }}\n        </button>\n        <button\n            mat-button\n            class=\"inverse\"\n            name=\"decline\"\n            (tapped)=\"decline()\"\n            [class.declined]=\"event.declined\"\n        >\n            Decline{{ event.declined ? 'd' : '' }}\n        </button>\n    </div>\n    <div class=\"load-state\" *ngIf=\"loading\">\n        <div class=\"no-item center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BuildingLevel } from 'src/app/services/data/organisation/level.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookingModalComponent } from 'src/app/overlays/booking-modal/booking-modal.component';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-day-view',\n    templateUrl: './day-view.component.html',\n    styleUrls: ['./day-view.component.scss']\n})\nexport class DayViewComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** ID of the currently selected level */\n    public active_level: string = '';\n    /** ID of the currently selected level */\n    public active_type: string = '';\n    /** List of levels available for the active building */\n    public levels: BuildingLevel[] = [];\n    /** List of space types available for the active building */\n    public space_types: Identity[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    public only_overflow: boolean;\n    /** List of legend keys to show */\n    public legend: string[] = [];\n    /** List of available legend keys */\n    public readonly legend_keys: readonly Identity[] = [\n        { name: 'Internal', id: 'internal', color: '#E69FC7' },\n        { name: 'Client', id: 'client', color: '#1F40E6' },\n        { name: 'External', id: 'external', color: '#8C5AC8' },\n        { name: 'Setup', id: 'setup', color: '#d32f2f' },\n        { name: 'Training', id: 'training', color: '#F0E700' },\n        { name: 'Interview', id: 'interview', color: '#348D02' }\n    ]\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.legend = this.legend_keys.map(item => `${item.id}`);\n            this.subscription('route.params', this._route.paramMap.subscribe((params) => {\n                /* istanbul ignore else */\n                if (params.has('level') && this.active_level !== params.get('level')) {\n                    const level = this._service.Organisation.levelWithID(params.get('level'));\n                    /* istanbul ignore else */\n                    if (level) {\n                        const building = this._service.Organisation.buildings.find(bld => bld.id === level.building_id);\n                        /* istanbul ignore else */\n                        if (building) {\n                            this.active_level = level.id;\n                            this._service.Organisation.building = building;\n                        }\n                    }\n                }\n            }));\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(() => {\n                    const building = this._service.Organisation.building;\n                    /* istanbul ignore else */\n                    if (!building.levels.find(lvl => lvl.id === this.active_level)) {\n                        this.active_level = (building.levels[0]).id;\n                        this.updateLevel();\n                    }\n                    this.levels = [{ id: '', name: 'All Levels' } as any].concat(\n                        building.levels\n                    );\n                    this.levels.sort((a, b) => a.name.localeCompare(b.name));\n                    this.space_types = [{ id: '', name: 'All Space Types' } as any].concat(\n                        this._service.Organisation.space_types\n                    );\n                })\n            );\n        });\n    }\n\n    public newMeeting() {\n        this._dialog.open(BookingModalComponent, {\n            data: {\n                booking: new Booking({})\n            }\n        });\n    }\n\n    public updateLevel() {\n        this._router.navigate(['/day-view', this.active_level]);\n    }\n}\n","<div class=\"day-view\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\">\n            <div class=\"topbar\">\n                <mat-form-field *ngIf=\"levels && levels.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_level\" (ngModelChange)=\"updateLevel()\">\n                        <mat-option *ngFor=\"let level of levels\" [value]=\"level?.id\">\n                            {{ level?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field *ngIf=\"space_types && space_types.length > 1\" appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"active_type\">\n                        <mat-option *ngFor=\"let type of space_types\" [value]=\"type?.id\">\n                            {{ type?.name }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"legend\" multiple placeholder=\"No items shown\">\n                      <mat-select-trigger>Legend</mat-select-trigger>\n                      <mat-option *ngFor=\"let key of legend_keys\" [value]=\"key?.id\">\n                          <div class=\"key\">\n                              <div class=\"text\">{{key?.name}}</div>\n                              <div class=\"colour\">\n                                  <div class=\"blob\" [style.backgroundColor]=\"key.color\"></div>\n                              </div>\n                          </div>\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n\n                <mat-slide-toggle\n                    [(ngModel)]=\"only_overflow\"\n                    labelPosition=\"before\"\n                    title=\"Only show meetings with setup and breakdown times\"\n                >\n                    Only Setup/Breakdown\n                </mat-slide-toggle>\n            </div>\n        </a-topbar-header>\n        <main>\n            <day-view-timeline\n                [date]=\"date\"\n                [level]=\"active_level\"\n                [legend]=\"legend\"\n                [overflow_only]=\"only_overflow\"\n                [space_type]=\"active_type\"\n            ></day-view-timeline>\n        </main>\n    </div>\n    <button mat-button class=\"new-item\" name=\"new\" (tapped)=\"newMeeting()\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">New Meeting</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayViewTimelineComponent } from './timeline/timeline.component';\nimport { DayViewApprovalsComponent } from './approvals-view/approvals-view.component';\nimport { DayViewApprovalsEventComponent } from './approvals-view/event/event.component';\nimport { DayViewSpaceComponent } from './space/space.component';\nimport { DayViewSpaceEventComponent } from './space/event/event.component';\n\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: ':level', component: DayViewComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayViewTimelineComponent,\n        DayViewApprovalsComponent,\n        DayViewApprovalsEventComponent,\n        DayViewSpaceComponent,\n        DayViewSpaceEventComponent\n    ],\n    imports: [CommonModule, FormsModule, RouterModule.forChild(ROUTES), SharedContentModule]\n})\nexport class DayViewModule {}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\nimport { CateringOrder } from 'src/app/services/data/catering/catering-order.class';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\n/** Details about the associated event overlapping with other events */\nexport interface IEventOverlap {\n    /** Index of this item with the overlapping items */\n    index: number;\n    /** Total number of items overlapping with this one */\n    total: number;\n}\n\n@Component({\n    selector: 'day-view-space-event',\n    templateUrl: './event.component.html',\n    styleUrls: ['./event.component.scss'],\n})\nexport class DayViewSpaceEventComponent extends BaseDirective implements OnChanges {\n    /** Event to display */\n    @Input() public event: any;\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Event to display */\n    @Input() public space: Space;\n    /** Whether the item is a fixed size */\n    @Input() public fixed: boolean;\n    /** Overlap details for the event */\n    @Input() public overlap: IEventOverlap;\n    /** Whether an action is being processed for this event */\n    @Input() public loading: boolean;\n    /** Emitter for the current position of the event within the timeline */\n    @Output() public position = new EventEmitter<{ top: number; height: number }>();\n\n    /** Position of the event start time in the day */\n    public top: number;\n    /** Position of the event relative to overlapping events */\n    public left: number;\n    /** Height based of the duration of the event */\n    public height: number;\n    /** Size of the event when overlapping with other events */\n    public width: number;\n    /** Offset from the event's top that the setup time starts */\n    public overflow_top: number;\n    /** Offset from the event's bottom that the breakdown time ends */\n    public overflow_bottom: number;\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    /** Type of booking */\n    public get type(): string {\n        if (this.event.declined) {\n            return 'cancelled';\n        }\n        const booking_type = this.event.type;\n        if (booking_type === 'internal' && this.event.has_visitors) {\n            return 'external';\n        }\n        return booking_type;\n    }\n\n    /** Period that the event will occur during the day */\n    public get period(): string {\n        return this.event.time_period;\n    }\n\n    /** Number attendees expected to turn up to the event */\n    public get expected(): number {\n        const expected = this.event.expected_attendees;\n        return this.space ? expected[this.space.id] || 0 : 0;\n    }\n\n    /** Whether the meeting has catering attached */\n    public get has_catering(): boolean {\n        return !!this.order;\n    }\n\n    public get order(): CateringOrder {\n        return this.event.catering.find((order) => order.location_id === this.space.id);\n    }\n\n    /** View booking details */\n    public view() {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            maxHeight: '95vh',\n            maxWidth: '95vw',\n            data: {\n                booking: this.event,\n            },\n        });\n    }\n\n    /** Whether event is active */\n    public get active(): boolean {\n        const event = this._service.get('CONCIERGE.day_view.viewing');\n        return !event || event.id === this.event.id;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.overlap || changes.date) {\n            this.calculatePosition();\n        }\n    }\n\n    /**\n     * View catering order for the event\n     */\n    public viewOrder(id: string) {\n        /* istanbul ignore else */\n        if (this.event && this.event.catering) {\n            /* istanbul ignore else */\n            if (sessionStorage) {\n                sessionStorage.setItem('CONCIERGE.view_order', id);\n                const booking = JSON.stringify(this.event.toJSON());\n                sessionStorage.setItem('CONCIERGE.order_booking', booking);\n            }\n            this._router.navigate(['/catering', 'orders'], {\n                queryParams: { booking: this.event.id, view: id },\n            });\n        }\n    }\n\n    /** Calculate the position */\n    private calculatePosition() {\n        /* istanbul ignore else */\n        if (this.event) {\n            const overlap = this.overlap || { index: 0, total: 1 };\n            const shown_date = dayjs(this.date).startOf('d');\n            const date = dayjs(this.event.date).startOf('m');\n            const start = +date.diff(shown_date, 'h', true).toFixed(3);\n            const duration = Math.min(\n                this.event.duration,\n                Math.abs(shown_date.diff(date.add(this.event.duration, 'm'), 'm'))\n            );\n            this.top = Math.max(0, (start / 24) * 100);\n            this.height = Math.min(\n                100 - this.top,\n                this.fixed ? duration / 60 : (duration / 60 / 24) * 100\n            );\n            this.position.emit({ top: this.top, height: (duration / 60 / 24) * 100 });\n            this.width = Math.min(100, 100 / overlap.total + 5);\n            this.left = Math.min(100 - this.width, this.width * overlap.index - 5 * overlap.index);\n            this.overflow_top = (this.event.setup ? this.event.setup / duration : -0.1) * 100;\n            this.overflow_bottom =\n                (this.event.breakdown ? this.event.breakdown / duration : -0.1) * 100;\n        }\n    }\n}\n","<div\n    class=\"event-container\"\n    [id]=\"'event-' + event.local_id\"\n    *ngIf=\"event\"\n    [class.fixed]=\"fixed\"\n    [class.inactive]=\"!active\"\n    [style.top]=\"top + '%'\"\n    [style.left]=\"left + '%'\"\n    [style.width]=\"fixed ? '15rem' : width + '%'\"\n    [style.height]=\"fixed ? height * 3 + 'rem' : height + '%'\"\n>\n    <div\n        [class]=\"'overflow' + (type ? ' ' + type : '')\"\n        [style.top]=\"-overflow_top + '%'\"\n        [style.bottom]=\"-overflow_bottom + '%'\"\n    ></div>\n    <div\n        [class]=\"'event' + (type ? ' ' + type : '') + (top > 50 ? ' low' : '')\"\n        [style.z-index]=\"(overlap?.index || 0) + 2\"\n        (tapped)=\"view()\"\n    >\n        <div class=\"header\">\n            <div class=\"text\">{{ event.all_day ? 'All Day' : period }}</div>\n            <div class=\"handle\">\n                <app-icon\n                    *ngIf=\"!loading && (event.declined || event.approved)\"\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: event.approved ? 'done' : event.declined ? 'event_busy' : ''\n                    }\"\n                >\n                </app-icon>\n                <mat-spinner *ngIf=\"loading\" diameter=\"16\"></mat-spinner>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"field host\">\n                <div class=\"label\">Host:&nbsp;</div>\n                <div class=\"value\" [title]=\"'Host: ' + (event.organiser?.name || event.organiser)\">\n                    {{ event.organiser?.name || event.organiser }}\n                </div>\n            </div>\n            <div\n                class=\"field booked-by\"\n                *ngIf=\"event.creator && event.creator.email !== event.organiser.email\"\n            >\n                <div class=\"label\">Booked by:&nbsp;</div>\n                <div\n                    class=\"value\"\n                    [title]=\"'Booked By: ' + (event.creator?.name || event.creator)\"\n                >\n                    {{ event.creator?.name || event.creator }}\n                </div>\n            </div>\n            <div class=\"field\">\n                <!-- <div class=\"label\">Event:</div> -->\n                <div class=\"value\" [title]=\"'Title: ' + event.title\">{{ event.title }}</div>\n            </div>\n            <div class=\"field\">\n                <div class=\"value\">\n                    {{ event.attendees ? event.attendees.length || 'No' : 'No' }} Attendee{{\n                        event.attendees?.length === 1 ? '' : 's'\n                    }}{{ expected ? '(' + expected + ' Expected)' : '' }}\n                </div>\n            </div>\n            <div\n                class=\"field\"\n                *ngIf=\"event.notify_users\"\n                [title]=\"'Welcomed by: ' + event.notify_users[0]\"\n            >\n                <div class=\"value\">Welcomed by: {{ event.notify_users[0] }}</div>\n            </div>\n            <div class=\"field\" *ngIf=\"has_catering\">\n                <div class=\"value\">Catered</div>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"catering-icon\"\n        mat-icon-button\n        name=\"view-catering\"\n        *ngIf=\"has_catering\"\n        (tapped)=\"viewOrder(order.id)\"\n    >\n        <app-icon [icon]=\"{ class: 'material-icons', content: 'restaurant' }\"></app-icon>\n    </button>\n</div>\n","import {\n    Component,\n    OnChanges,\n    Input,\n    SimpleChanges,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { CdkDragMove, CdkDragDrop } from '@angular/cdk/drag-drop';\n\nimport { IEventOverlap } from './event/event.component';\n\nimport * as dayjs from 'dayjs';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { first } from 'rxjs/operators';\nimport { ConfirmModalComponent } from 'src/app/overlays/confirm-modal/confirm-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogEvent, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { DayViewSettings } from 'src/app/shared/utilities/settings.interfaces';\n\n@Component({\n    selector: 'day-view-space',\n    templateUrl: './space.component.html',\n    styleUrls: ['./space.component.scss'],\n})\nexport class DayViewSpaceComponent extends BaseDirective implements OnChanges {\n    /** List of space dropzones connected to */\n    @Input() public space_list: string[];\n    /** Date to display events for */\n    @Input() public date: number;\n    /** Space to display events for */\n    @Input() public space: Space;\n    /** Scroll value of the day view */\n    @Input() public scroll: number;\n    /** Only show events with setup and/or breakdown times */\n    @Input() public overflow_only: boolean;\n    /** Mapping of whether to show events with a given legend id */\n    @Input() public legend: HashMap<boolean> = {};\n    /** Scroll value to add to drop placeholders */\n    @Input('scrollTop') public scroll_top: number;\n    /** Last update time of the displayed bookings */\n    @Input('lastUpdate') public last_update: number;\n    /** Emitter for whether the space column is in view */\n    @Output() public inView = new EventEmitter<boolean>();\n    /** Emitter for whether an event is being dragged */\n    @Output() public dragging = new EventEmitter<boolean>();\n    /** Mapping of event IDs to overlap details */\n    public overlap_details: HashMap<IEventOverlap> = {};\n    /** Mapping of positions of event in the day */\n    public position_list: HashMap<{ top: number; height: number }> = {};\n    /** Override for mapped position */\n    public top: number;\n    /** Client Rectangle for the container element box */\n    public box: ClientRect;\n    /** Whether the space list is in view */\n    public in_view: boolean;\n    /** ID of the booking with an action processing */\n    public override_state: string;\n    /** Map of bookings to whether they are loading */\n    public loading: HashMap<boolean> = {};\n    /** Settings for day view */\n    public settings: DayViewSettings = {} as any;\n\n    /** Container element for the component contents */\n    @ViewChild('view', { static: true }) private view: ElementRef<HTMLDivElement>;\n\n    constructor(private _service: ApplicationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    /** Events to display for the active date */\n    public get events(): Booking[] {\n        /* istanbul ignore else */\n        if (this.space) {\n            const bookings = this.space.bookingsFor(this.date);\n            const list = bookings.filter((event) => {\n                if (this.override_state && this.override_state === event.icaluid) {\n                    this.loading[event.id] = true;\n                }\n                return event.declined\n                    ? (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend.declined !== false\n                    : (!this.overflow_only || event.setup || event.breakdown) &&\n                          this.legend[event.type] !== false;\n            });\n            return list;\n        }\n        return [];\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.settings = this._service.setting('app.day_view') || {};\n            this.subscription(\n                'breakdown',\n                this._service.listen('APP.breakdown').subscribe((state) => {\n                    this.overflow_only = state;\n                })\n            );\n            this.subscription(\n                'legend',\n                this._service.listen('CONCIERGE.legend').subscribe((state) => {\n                    this.legend = state || {};\n                })\n            );\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.scroll) {\n            this.checkInView();\n        }\n        /* istanbul ignore else */\n        if (changes.last_update) {\n            this.timeout('update_overlaps', () => this.calculateOverlaps(), 1000);\n        }\n    }\n\n    /**\n     * Track by function for ngFor optimisation\n     * @param index Index of the item\n     * @param item Data associated with the item at the given index\n     */\n    public trackByFn(index: number, item: Booking) {\n        return item.id || index;\n    }\n\n    /**\n     * Calculate to overlap details for the booking events on the space\n     */\n    private calculateOverlaps() {\n        const events = this.events.sort(\n            (a, b) =>\n                a.date - b.date ||\n                a.duration - b.duration ||\n                (a.title || '').localeCompare(b.title || '')\n        );\n        events.forEach((i) => (this.overlap_details[i.id] = { index: 0, total: 1 }));\n        for (const bkn of events) {\n            const bkn_start = dayjs(bkn.date).startOf('m');\n            const bkn_end = dayjs(bkn_start).add(bkn.duration, 'm').startOf('m');\n            let count = 1;\n            let index = 0;\n            const collisions: Booking[] = [];\n            for (const cmp of events) {\n                /* istanbul ignore else */\n                if (bkn.id !== cmp.id) {\n                    const cmp_start = dayjs(cmp.date).startOf('m');\n                    const cmp_end = dayjs(cmp_start).add(cmp.duration, 'm').startOf('m');\n                    /* istanbul ignore else */\n                    if (\n                        bkn_start.isSame(cmp_start, 'm') ||\n                        (bkn_start.isAfter(cmp_start, 'm') && bkn_start.isBefore(cmp_end, 'm')) ||\n                        bkn_end.isSame(cmp_end, 'm') ||\n                        (bkn_end.isAfter(cmp_start, 'm') && bkn_end.isBefore(cmp_end, 'm'))\n                    ) {\n                        count++;\n                        collisions.push(bkn);\n                        /* istanbul ignore else */\n                        if (\n                            events.findIndex((i) => i.id === bkn.id) >\n                            events.findIndex((i) => i.id === cmp.id)\n                        ) {\n                            index++;\n                        }\n                    }\n                }\n            }\n            this.overlap_details[bkn.id] = { index: Math.max(0, index), total: count };\n        }\n    }\n\n    /**\n     * Check whether the space column is with the view of the\n     */\n    private checkInView() {\n        /* istanbul ignore else */\n        if (this.view && this.view.nativeElement) {\n            const el = this.view.nativeElement;\n            this.in_view =\n                el.offsetLeft + this.scroll >= -240 &&\n                el.offsetLeft + this.scroll <= window.innerWidth;\n            this.inView.emit(this.in_view);\n        }\n    }\n\n    /**\n     * Initialise drag events\n     */\n    public initDrag() {\n        this.box = this.view.nativeElement.getBoundingClientRect();\n        this.dragging.emit(true);\n    }\n\n    /**\n     * Cleanup after drag\n     */\n    public endDrag() {\n        this.timeout('end_drag', () => (this.top = 0), 10);\n        this.dragging.emit(false);\n    }\n\n    /**\n     * Update top position of the dragged event placeholder\n     * @param booking Booking being dragged\n     * @param event Drag event\n     */\n    public updateDragTop(event: CdkDragMove<Booking>) {\n        /* istanbul ignore else */\n        if (event.delta.y) {\n            const y = event.pointerPosition.y;\n            const top = (y - this.box.top - this.scroll_top) / this.box.height;\n            const top_minutes = (Math.round((top * 24 * 60) / 15) * 15) / 60;\n            this.top = (top_minutes / 24) * 100;\n        }\n    }\n\n    /**\n     * Handle drop event\n     * @param event\n     */\n    public drop(event: CdkDragDrop<{ top: number; list: Booking[] }>): void {\n        const id = event.item.element.nativeElement.id;\n        const booking = event.previousContainer.data.list.find((i) => i.id === id);\n        /* istanbul ignore else */\n        if (!booking) {\n            return;\n        }\n        const top = event.previousContainer.data.top;\n        const new_start = Math.round(((top || 0) / 100) * 24 * 60);\n        const old_date = dayjs(booking.date);\n        const date = old_date.startOf('d').minute(new_start);\n        const now = dayjs().startOf('m');\n        /* istanbul ignore else */\n        // Prevent moving event into past\n        if (now.isAfter(date, 'm')) {\n            this.handleDropError(booking.id, 'Meetings cannot be moved into the past')\n            return;\n        }\n        // Check for collisions\n        this.loading[booking.id] = true;\n        this.override_state = booking.icaluid;\n        let room = booking.space;\n        let message = `Update ${booking.organiser.name}'s meeting in \"${\n            booking.space.name\n        }\" from ${old_date.format('h:mm A')} to ${date.format('h:mm A')}`;\n        let success = `Successfully updated meeting time from ${old_date.format(\n            'h:mm A'\n        )} to ${date.format('h:mm A')}`;\n        booking.storePendingChange('date', date.valueOf());\n        /* istanbul ignore else */\n        if (event.container !== event.previousContainer) {\n            // Same room\n            room = this._service.Spaces.find(event.container.id.replace('space-col-', ''));\n            message = `Move ${booking.organiser.name}'s meeting in \"${booking.space.name}\" to \"${\n                room.name\n            }\" at ${date.format('h:mm A')}`;\n            success = `Successfully moved booking to \"${room.name}\" at ${date.format('h:mm A')}`;\n        }\n        /* istanbul ignore else */\n        // Check if booking has a change\n        if (room === booking.space && date.isSame(old_date, 'm')) {\n            this.handleDropError(booking.id, 'The meeting is already in this room')\n            return;\n        }\n        const room_list = [room, ...booking.space_list.filter((i) => i.id !== booking.space.id)];\n        // Check if booking is already in the room\n        const room_count = room_list.reduce((a, v) => a.add(v.id), new Set()).size;\n        /* istanbul ignore else */\n        if (room_count < room_list.length) {\n            this.handleDropError(booking.id, 'The meeting is already in this room');\n            return;\n        }\n        booking.storePendingChange('space_ids', room_list.map(space => space.id));\n        this.checkCollisions(room_list, date.valueOf(), booking.duration, booking.icaluid).then(\n            () => {\n                this.moveBooking(message, booking).then(\n                    (_) => {\n                        this.override_state = null;\n                        this._service.notifySuccess(success);\n                    },\n                    (err) => this.handleDropError(booking.id, `Error: ${err}`)\n                );\n            },\n            () => this.handleDropError(booking.id, 'Updated meeting time clashes with another')\n        );\n    }\n\n    /**\n     * Check if there are any booking collisions with the new booking time\n     * @param spaces\n     * @param date\n     * @param duration\n     */\n    private checkCollisions(spaces: Space[], date: number, duration: number, ignore?: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._service.Spaces.available({\n                room_ids: spaces.map((i) => i.id).join(','),\n                date,\n                duration,\n                ignore,\n                hide_bookings: true,\n            }).then(\n                (list) => {\n                    list.length === spaces.length ? resolve() : reject();\n                },\n                () => reject()\n            );\n        });\n    }\n\n    /**\n     * Handle errors from drop move logic\n     * @param id Booking ID\n     * @param message Error description\n     */\n    private handleDropError(id: string, message: string) {\n        this.loading[id] = false;\n        this.override_state = null;\n        this._service.notifyError(message);\n    }\n\n    /**\n     * Update booking\n     * @param confirm_msg\n     * @param new_booking\n     */\n    private moveBooking(confirm_msg: string, new_booking: Booking): Promise<Booking> {\n        return new Promise((resolve, reject) => {\n            const ref = this._dialog.open<ConfirmModalComponent>(ConfirmModalComponent, {\n                data: {\n                    title: 'Update meeting',\n                    content: confirm_msg,\n                    icon: { type: 'icon', class: 'material-icons', content: 'event_available' },\n                    action: 'Ok',\n                },\n            });\n            this.subscription(\n                'confirm',\n                ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                    /* istanbul ignore else */\n                    if (event.reason === 'done') {\n                        new_booking.save().then(\n                            (bkn: Booking) => resolve(bkn),\n                            (err) => reject(err)\n                        );\n                    }\n                    ref.close();\n                })\n            );\n        });\n    }\n}\n","<div\n    class=\"space-display\"\n    #view\n    cdkDropList\n    cdkDropListSortingDisabled\n    [cdkDropListConnectedTo]=\"space_list || []\"\n    [cdkDropListData]=\"{ top: top, list: events }\"\n    (cdkDropListDropped)=\"drop($event)\"\n    scrollContainer=\"#day-view-scroll\"\n    [id]=\"'space-col-' + space?.id\"\n>\n    <div class=\"drop-zone\" cdkDrag></div>\n    <div\n        [style.display]=\"in_view !== false ? '' : 'none'\"\n        *ngFor=\"let item of events; trackBy: trackByFn\"\n        cdkDrag\n        (cdkDragStarted)=\"initDrag()\"\n        (cdkDragMoved)=\"updateDragTop($event)\"\n        (cdkDragReleased)=\"endDrag()\"\n        [cdkDragDisabled]=\"\n            item.status !== 'upcoming' || item.declined || !settings.dragdrop\n        \"\n    >\n        <day-view-space-event\n            [space]=\"space\"\n            [date]=\"date\"\n            [event]=\"item\"\n            [loading]=\"loading ? loading[item.id] : null\"\n            [overlap]=\"overlap_details ? overlap_details[item.id] : null\"\n            (position)=\"position_list ? position_list[item.id] = $event : ''\"\n        ></day-view-space-event>\n        <div class=\"event-preview\" *cdkDragPreview>\n            <div class=\"content\">\n                <day-view-space-event\n                    [fixed]=\"true\"\n                    [space]=\"space\"\n                    [event]=\"item\"\n                ></day-view-space-event>\n            </div>\n        </div>\n        <div\n            class=\"event-placeholder\"\n            *cdkDragPlaceholder\n            [style.top]=\"(top || (position_list[item.id] ? position_list[item.id].top : 0)) + '%'\"\n            [style.height]=\"(position_list[item.id] ? position_list[item.id].height : 100) + '%'\"\n        ></div>\n    </div>\n</div>\n<div class=\"moving\" *ngIf=\"override_state\">\n    <div class=\"text\">Moving meeting</div>\n    <div class=\"spinner\">\n        <mat-spinner diameter=\"32\"></mat-spinner>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    HostListener,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\n\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { Identity, HashMap } from 'src/app/shared/utilities/types.utilities';\nimport { MeetingDetailsModalComponent } from 'src/app/overlays/meeting-details-modal/meeting-details-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nconst UPDATE_INTERVAL = 30;\n\n@Component({\n    selector: 'day-view-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss'],\n})\nexport class DayViewTimelineComponent extends BaseDirective implements OnInit {\n    /** Timestamp of the active date */\n    @Input() public date: number;\n    /** ID of the active level */\n    @Input() public level: string;\n    /** ID of the room type to filter displayed spaces by */\n    @Input() public space_type: string;\n    /** List of shown legend items */\n    @Input() public legend: string[] = [];\n    /** Whether to show only items with a setup and/or breakdown time */\n    @Input() public overflow_only: boolean;\n    /** Whether space bookings are being loaded */\n    @Input() public loading: boolean;\n    /** List of timeblocks to display */\n    public time_blocks: Identity[] = this.generateTimeBlocks();\n    /** Top value of the content scroll */\n    public scroll_top: number = 0;\n    /** Left value of the content scroll */\n    public scroll_left: number = 0;\n    /** Offset of the scroll value when starting a drag */\n    public scroll_offset: number = 0;\n    /** List of spaces to display for  */\n    public spaces: Space[] = [];\n    /** List of spaces to display for  */\n    public filtered_spaces: Space[] = [];\n    /** Mapping of space ids to whether they are in view */\n    public in_view: { [id: string]: boolean } = {};\n    /** Percent of the day that is now */\n    public now: number;\n    /** Whether the active day is today */\n    public is_today: boolean;\n    /** Currently active hour of the day */\n    public active_hour: string;\n    /** Mapping of spaces loading booking date */\n    public loading_space: { [id: string]: boolean } = {};\n    /** Booking ID to open modal for */\n    public view_id: string;\n    /** Last update time for the space bookings */\n    public last_update: number = 0;\n    /** Whether an event is being dragged */\n    public is_dragging: boolean;\n    /** Client rectangle for the scroll area */\n    public box: ClientRect;\n    /** Whether to show the holding bay */\n    public show_holding_bay: boolean = true;\n\n    /** Scrollable area of the day view */\n    @ViewChild('scroll_area', { static: true }) private scroll_area: ElementRef<HTMLDivElement>;\n\n    /** Update scroll box when the window is resized */\n    @HostListener('window:resize') public onResize() {\n        if (this.scroll_area.nativeElement) {\n            this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n        }\n    }\n\n    public get legend_map(): HashMap<boolean> {\n        const map: any = {};\n        this.legend.forEach(item => map[item] = true);\n        return map;\n    }\n\n    public get is_loading(): boolean {\n        return (\n            this.loading ||\n            Object.keys(this.loading_space).reduce(\n                (loading, key) => loading || this.loading_space[key],\n                false\n            )\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _route: ActivatedRoute,\n        private _renderer: Renderer2,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public get holding_bay(): Space {\n        const bld = this._service.Organisation.building;\n        /* istanbul ignore else */\n        if (bld && bld.holding_bay) {\n            return this._service.Spaces.find(bld.holding_bay);\n        }\n        return null;\n    }\n\n    public ngOnInit(): void {\n        this._service.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.init();\n            // Update time\n            this.updateTime();\n            this.interval('time', () => this.updateTime(), 15 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (!this._service.Spaces.is_initialised) {\n            this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n                this.ngOnChanges(changes);\n            });\n            return;\n        }\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.is_today = dayjs().isSame(dayjs(this.date), 'd');\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.level) {\n            const zone_id = !this.level\n                ? this._service.Organisation.building.id\n                : this.level;\n            this.spaces = this._service.Spaces.filter((_) => _.zones.indexOf(zone_id) >= 0);\n            this.initSpaces();\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n        }\n        /* istanbul ignore else */\n        if (changes.room_type) {\n            this.initSpaces();\n        }\n    }\n\n    public init() {\n        this._service.Spaces.initialised.pipe(first((_) => _)).subscribe(() => {\n            this._service.title = 'Day View';\n            this.subscription(\n                'viewing',\n                this._service.listen('CONCIERGE.day_view.viewing').subscribe((event) =>\n                    this.scrollIntoView(event)\n                )\n            );\n            // Subscribe to route query changes\n            this.subscription(\n                'route.query',\n                this._route.queryParamMap.subscribe((params) => {\n                    /* istanbul ignore else */\n                    if (params.has('view')) {\n                        this.view_id = params.get('view');\n                        const details = localStorage.getItem('CONCIERGE.view_booking');\n                        /* istanbul ignore else */\n                        if (details) {\n                            const booking = new Booking(\n                                JSON.parse(details)\n                            );\n                            this.view(booking);\n                            localStorage.removeItem('CONCIERGE.view_booking');\n                        }\n                    }\n                })\n            );\n            // Update bookings for visible rooms\n            this.updateBookings();\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.interval(\n                'scroll',\n                () => {\n                    /* istanbul ignore else */\n                    if (this.scroll_area && this.scroll_area.nativeElement) {\n                        this.updateScroll({ target: this.scroll_area.nativeElement });\n                    }\n                },\n                1000\n            );\n            /* istanbul ignore else */\n            if (this.scroll_area.nativeElement) {\n                this.box = this.scroll_area.nativeElement.getBoundingClientRect();\n            }\n        });\n    }\n\n    /** List of space */\n    public get space_zones(): string[] {\n        return this.spaces.map((i) => `space-col-${i.id}`);\n    }\n\n    /**\n     * Update scroll parameters to match the change in the scroll position\n     * @param event\n     */\n    public updateScroll(event) {\n        this.scroll_top = event.target.scrollTop;\n        this.scroll_left = event.target.scrollLeft;\n    }\n\n    /** Generate time blocks to display on the day view */\n    private generateTimeBlocks(): Identity[] {\n        const blocks: Identity[] = [];\n        const date = dayjs().startOf('h');\n        for (let i = 0; i < 24; i++) {\n            blocks.push({\n                id: date.hour(i).format('HH:mm'),\n                name: date.hour(i).format('h:mm A'),\n            });\n        }\n        return blocks;\n    }\n\n    /** Update the now line position */\n    private updateTime() {\n        const time = dayjs();\n        this.now = (time.hour() + time.minute() / 60) / 24;\n        this.active_hour = time.startOf('h').format('HH:mm');\n    }\n\n    /** Update bookings for rooms in view */\n    private updateBookings() {\n        const visible_rooms = this.spaces.filter((i) => this.in_view[i.id] !== false);\n        if (visible_rooms.length) {\n            visible_rooms.forEach((rm) => (this.loading_space[rm.id] = true));\n            const time = dayjs(this.date).startOf('d');\n            const end = time.endOf('d');\n            const room_ids = visible_rooms.reduce((v, i) => v + (v ? ',' : '') + i.id, '');\n            const level = this._service.get('APP.level');\n            const zone_ids = [level === -1 ? this._service.Organisation.building.id : level];\n            /* istanbul ignore else */\n            if (this.space_type) {\n                zone_ids.push(this.space_type);\n            }\n            this.loading = true;\n            this._service.Spaces.query({\n                room_ids,\n                zone_ids: zone_ids.join(','),\n                available_from: time.unix(),\n                available_to: end.unix(),\n            }).then(\n                (room_list) => {\n                    room_list.forEach((rm) => {\n                        /* istanbul ignore else */\n                        if (this.view_id) {\n                            const booking = rm.bookings.find((i) => i.id === this.view_id);\n                            /* istanbul ignore else */\n                            if (booking) {\n                                this.view(booking);\n                            }\n                        }\n                        const space = this.filtered_spaces.find((space) => space.id === rm.id);\n                        /* istanbul ignore else */\n                        if (space) {\n                            (space as any)._bookings = (rm as any)._bookings;\n                        }\n                    });\n\n                    delete this.loading_space;\n                    this.last_update = dayjs().valueOf();\n                    this.loading_space = {};\n                    this.loading = false;\n                },\n                () => (this.loading = false)\n            );\n        }\n    }\n\n    /**\n     * View booking details\n     * @param booking Booking to view the details of\n     */\n    private view(booking: Booking) {\n        this._dialog.open(MeetingDetailsModalComponent, {\n            data: {\n                booking,\n            },\n        });\n        this.view_id = null;\n    }\n\n    /**\n     * Scroll booking to the event on the day view\n     * @param booking Booking to scroll into view\n     */\n    private scrollIntoView(booking: Booking) {\n        if (booking && this.scroll_area && this.scroll_area.nativeElement) {\n            const element: HTMLDivElement = this.scroll_area.nativeElement.querySelector(\n                `#event-${booking.id}`\n            );\n            /* istanbul ignore else */\n            if (element) {\n                const scroll_box = this.scroll_area.nativeElement.getBoundingClientRect();\n                const box = element.getBoundingClientRect();\n                this.scroll_area.nativeElement.scrollTo({\n                    left: box.left - scroll_box.left + this.scroll_area.nativeElement.scrollLeft,\n                    top: box.top - scroll_box.top + this.scroll_area.nativeElement.scrollTop,\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }\n\n    /**\n     * Setup an auto-scroll for the display view\n     * @param x\n     * @param y\n     */\n    public scrollView(x: number, y: number) {\n        /* istanbul ignore else */\n        if (x || y) {\n            this.scroll_area.nativeElement.scrollTop += y || 0;\n            this.scroll_area.nativeElement.scrollLeft += x || 0;\n            /* istanbul ignore else */\n            if (\n                (y &&\n                    this.scroll_area.nativeElement.scrollTop >=\n                        this.scroll_area.nativeElement.scrollHeight) ||\n                (x &&\n                    this.scroll_area.nativeElement.scrollLeft >=\n                        this.scroll_area.nativeElement.scrollWidth) ||\n                (y && this.scroll_area.nativeElement.scrollTop <= 0) ||\n                (x && this.scroll_area.nativeElement.scrollLeft <= 0)\n            ) {\n                this.clearInterval('auto_scroll');\n            }\n            this.updateScroll({ target: this.scroll_area.nativeElement });\n        }\n    }\n\n    public clearSelected() {\n        this._service.set('CONCIERGE.day_view.viewing', null);\n    }\n\n    public cancelScroll() {\n        this.clearInterval('auto_scroll');\n    }\n\n    public dragChange(is_dragging: boolean) {\n        if (is_dragging) {\n            this.scroll_offset = this.scroll_area.nativeElement.scrollTop;\n            this.subscription(\n                'listen_move',\n                this._renderer.listen('window', 'mousemove', (event: MouseEvent) => {\n                    const position = { x: event.clientX, y: event.clientY };\n                    const y =\n                        position.y > this.box.bottom - this.box.height * 0.05\n                            ? 1\n                            : position.y < this.box.top + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    const x =\n                        position.x > this.box.right - this.box.width * 0.05\n                            ? 1\n                            : position.x < this.box.left + this.box.height * 0.05\n                            ? -1\n                            : 0;\n                    this.scrollView(x * 5, y * 5);\n                    this.interval('auto_scroll', () => this.scrollView(x * 10, y * 10), 10);\n                })\n            );\n            this.clearInterval('bookings');\n        } else {\n            this.interval('bookings', () => this.updateBookings(), UPDATE_INTERVAL * 1000);\n            this.cancelScroll();\n            this.unsub('listen_move');\n        }\n    }\n\n    private initSpaces() {\n        const holding_bay = this.holding_bay;\n        this.filtered_spaces = this.spaces.filter(\n            (i) =>\n                (!this.space_type || i.zones.indexOf(this.space_type) >= 0) &&\n                (!holding_bay || i.id !== holding_bay.id) &&\n                i.bookable\n        );\n        this.filtered_spaces.sort((a, b) => a.name.localeCompare(b.name));\n    }\n}\n","<div class=\"timeline\">\n    <div class=\"loader\" *ngIf=\"is_loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"header\">\n        <div class=\"time-blocks\"><div class=\"text\">Time</div></div>\n        <div class=\"flex\">\n            <div class=\"group\" [style.left]=\"-scroll_left + 'px'\">\n                <div\n                    class=\"space-header\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    [title]=\"item.long_name\"\n                >\n                    <div class=\"details\">\n                        <div class=\"text\">{{ item.name }}</div>\n                        <div class=\"icon\"></div>\n                    </div>\n                    <div class=\"capacity\">\n                        Capacity - {{ item.capacity || '0' }}\n                        {{ item.capacity === 1 ? 'person' : 'people' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <div class=\"space-header\" [title]=\"holding_bay.name\">\n                <div class=\"text\">Holding Bay</div>\n                <div class=\"icon\"></div>\n            </div>\n            <div class=\"tag\" (touchrelease)=\"show_holding_bay = !show_holding_bay\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">{{\n                        show_holding_bay ? 'keyboard_arrow_right' : 'event_available'\n                    }}</i>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" (touchrelease)=\"clearSelected()\">\n        <div class=\"time-blocks\">\n            <div class=\"group\" [style.top]=\"-scroll_top + 'px'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div div class=\"hour\" [class.active]=\"is_today && item.id === active_hour\">\n                        {{ item.name }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex content\" #scroll_area id=\"day-view-scroll\" (scroll)=\"updateScroll($event)\">\n            <div class=\"time-lines\" [style.min-width]=\"filtered_spaces.length * 15 + 'rem'\">\n                <div class=\"block\" *ngFor=\"let item of time_blocks\">\n                    <div class=\"line\"></div>\n                </div>\n            </div>\n            <div class=\"space-day\">\n                <div\n                    class=\"space\"\n                    [style.min-height]=\"time_blocks.length * 3 + 'rem'\"\n                    *ngFor=\"let item of filtered_spaces\"\n                    cdkDropListGroup\n                >\n                    <day-view-space\n                        [space_list]=\"space_zones\"\n                        [date]=\"date\"\n                        [space]=\"item\"\n                        [legend]=\"legend_map\"\n                        [overflow_only]=\"overflow_only\"\n                        [scroll]=\"-scroll_left\"\n                        [scrollTop]=\"scroll_offset - scroll_top\"\n                        [lastUpdate]=\"last_update\"\n                        (dragging)=\"dragChange($event)\"\n                        (inView)=\"in_view[item.id] = $event\"\n                    ></day-view-space>\n                </div>\n            </div>\n        </div>\n        <div\n            class=\"now-line\"\n            *ngIf=\"is_today\"\n            [style.top]=\"\n                'calc(' + now * time_blocks.length * 3 + 'rem - ' + scroll_top + 'px)' | safe:'style'\n            \"\n        >\n            <div class=\"knob\"></div>\n        </div>\n        <div class=\"sidebar\" *ngIf=\"holding_bay\" [class.show]=\"show_holding_bay\">\n            <day-view-space\n                *ngIf=\"holding_bay\"\n                [date]=\"date\"\n                [space]=\"holding_bay\"\n                [lastUpdate]=\"last_update\"\n                (dragging)=\"dragChange($event)\"\n                (inView)=\"in_view[holding_bay.id] = $event\"\n            ></day-view-space>\n            <day-view-approvals-view [date]=\"date\"></day-view-approvals-view>\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}