{"version":3,"sources":["./src/app/shell/catering/catering.component.html","./src/app/shell/catering/components/menus/category-list/category-item/category-item.component.html","./src/app/shell/catering/components/menus/category-list/category-item/category-item.component.ts","./src/app/shell/catering/components/menus/category-list/category-list.component.html","./src/app/shell/catering/components/menus/category-list/category-list.component.ts","./src/app/shell/catering/components/menus/menus.component.html","./src/app/shell/catering/components/menus/menus.component.ts","./src/app/shell/catering/components/orders/orders.component.html","./src/app/shell/catering/components/orders/orders.component.ts"],"names":[],"mappings":"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","file":"shell-catering-catering-module-ngfactory-es5.js","sourcesContent":["\n\n\n<ng-container [ngSwitch]=\"page\">\n    <ng-container *ngSwitchCase=\"'orders'\">\n        <catering-orders></catering-orders>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'menus'\">\n            <catering-menus></catering-menus>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n        <div class=\"catering\">\n            <a [routerLink]=\"['/', 'catering', 'menus']\">\n                <div class=\"item\">\n                    <div class=\"image\">\n                        <img class=\"center\" src=\"assets/img/menus.jpg\" />\n                        <div class=\"overlay\"></div>\n                        <div class=\"text center\">Menus &amp; Pricing</div>\n                    </div>\n                    <div class=\"details\">\n                        View or edit menus and pricing\n                    </div>\n                </div>\n            </a>\n            <a [routerLink]=\"['/', 'catering', 'orders']\">\n                <div class=\"item\">\n                    <div class=\"image\">\n                        <img class=\"center\" src=\"assets/img/orders.jpg\" />\n                        <div class=\"overlay\"></div>\n                        <div class=\"text center\">Catering Orders</div>\n                    </div>\n                    <div class=\"details\">\n                        View catering orders and their status upon arrival\n                    </div>\n                </div>\n            </a>\n        </div>\n    </ng-container>\n</ng-container>","<div class=\"category-item\" *ngIf=\"item\" [class.editting]=\"editing\">\n    <div class=\"item-header\">\n        <div class=\"item-details\">\n            <span class=\"title\">{{ item.name }}</span>\n            <span class=\"sub-text\">{{ item.description || 'No description' }}</span>\n        </div>\n        <div class=\"item-price\" *ngIf=\"item.price\">{{ price | currency:symbol }} each</div>\n        <div class=\"item-controls\">\n            <div\n                *ngIf=\"!item.deleting\"\n                class=\"icon\"\n                (touchrelease)=\"show_options = !show_options\"\n                tooltip\n                [(show)]=\"show_options\"\n                [template]=\"options\"\n                [triangle]=\"false\"\n                position=\"bottom\"\n                offset=\"end\"\n            >\n                <i class=\"material-icons\">more_vert</i>\n            </div>\n            <div class=\"deleting\" *ngIf=\"item.deleting\">Deleting</div>\n        </div>\n    </div>\n    <div class=\"item-list\" *ngIf=\"item.items\">\n        <div class=\"item\" *ngFor=\"let option of item.items\">\n            <div class=\"name\">{{ option.name }}</div>\n            <div class=\"sub-text\">{{ option.description }}</div>\n            <div class=\"price\" *ngIf=\"option.price\">{{ option.price / 100 | currency:symbol }} each</div>\n            <div class=\"item-controls\" *ngIf=\"!item.deleting; else deleting\">\n                <div class=\"icon\" (touchrelease)=\"editItem(option)\">\n                    <i class=\"material-icons\">edit</i>\n                </div>\n                <div class=\"icon\" (touchrelease)=\"deleteItem(option)\">\n                    <i class=\"material-icons\">delete</i>\n                </div>\n            </div>\n            <ng-template #deleting>\n                <div class=\"item-controls\">\n                    <div class=\"deleting\">Deleting</div>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>\n<ng-template #options>\n    <div class=\"actions\">\n        <div class=\"option\" *ngIf=\"item.items\" (touchrelease)=\"newItem()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Add Item</div>\n        </div>\n        <div class=\"option\" (touchrelease)=\"item.items ? editGroup(item) : editItem(item)\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">edit</i>\n            </div>\n            <div class=\"text\">Edit {{ item.items ? 'Group' : 'Item' }}</div>\n        </div>\n        <div class=\"option error\" (touchrelease)=\"item.items ? deleteGroup(item) : deleteItem(item)\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">delete</i>\n            </div>\n            <div class=\"text\">Remove {{ item.items ? 'Group' : 'Item' }}</div>\n        </div>\n    </div>\n</ng-template>\n","\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ICateringMenuItem } from '../../../../../../services/data/catering/catering-items.service';\nimport { BaseComponent } from '../../../../../../shared/globals/base.component';\nimport { ICateringMenuCategory } from '../../../../../../services/data/catering/catering-categories.service';\nimport { CateringGroupModalComponent } from '../../../../overlays/group-modal/group-modal.component';\nimport { AppService } from '../../../../../../services/app.service';\nimport { IBuilding } from '../../../../../../services/data/buildings.service';\nimport { CateringItemModalComponent } from '../../../../overlays/item-modal/item-modal.component';\n\n@Component({\n    selector: 'catering-category-item',\n    templateUrl: './category-item.component.html',\n    styleUrls: ['./category-item.component.scss']\n})\nexport class CateringCategoryItemComponent extends BaseComponent {\n    @Input() public item: ICateringMenuCategory | ICateringMenuItem;\n    @Input() public parent: ICateringMenuCategory;\n    /** Emitter for change events to the menu */\n    @Output() public event = new EventEmitter();\n    /** Whether the item is being edited */\n    public editing: boolean;\n    /** Show options for the item */\n    public show_options: boolean;\n    /** Active building */\n    public building: IBuilding;\n\n    /** Currrency symbol for the active building */\n    public get symbol(): string {\n        const bld = this.building || this.service.Buildings.current();\n        return bld.currency || 'USD';\n    }\n\n    public get price(): number {\n        return this.item ? this.item.price / 100 : 0\n    }\n\n    constructor(private service: AppService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('bld', this.service.Buildings.listen((bld) => this.building = bld || this.building));\n    }\n\n    /**\n     * Add new item to the menu category\n     */\n    public newItem() {\n        this.itemAction({});\n    }\n\n    /**\n     * Edit the given item\n     * @param item Item to edit\n     */\n    public editItem(item: ICateringMenuItem) {\n        this.itemAction({ item });\n    }\n\n    /**\n     * Edit or Add new item based of the passed data\n     * @param data\n     */\n    private itemAction(data: { item?: ICateringMenuItem }) {\n        const category = !data.item || data.item !== this.item ? this.item : this.parent;\n        this.show_options = false;\n        this.service.Overlay.openModal('catering-item', {\n            cmp: CateringItemModalComponent,\n            data: { ...data, category }\n        }, (event) => {\n            if (event.type === 'finish') {\n                this.event.emit('update');\n            }\n            event.close();\n        });\n    }\n\n    public deleteItem(item: ICateringMenuItem) {\n        if (item.id) {\n            this.show_options = false;\n            (item as any).deleting = true;\n            this.service.CateringItems.delete(item.id).then(() => {\n                this.event.emit('removed');\n                this.service.success('Succesfully deleted item');\n            }, (e) => {\n                (item as any).deleting = false;\n                if (e !== 'User cancelled'){\n                    this.service.error('Failed to delete item');\n                }\n            });\n        }\n    }\n\n    public deleteGroup(item: ICateringMenuCategory) {\n        if (item.id) {\n            this.show_options = false;\n            (item as any).deleting = true;\n            this.service.CateringCategories.delete(item.id).then(() => {\n                this.event.emit('removed');\n                this.service.success('Succesfully deleted item group');\n            }, (e) => {\n                    (item as any).deleting = false;\n                    if (e !== 'User cancelled'){\n                        this.service.error('Failed to delete item group');\n                    }\n            });\n        }\n    }\n\n    /**\n     * Add new sub-category or package to the menu\n     */\n    public newGroup() {\n        const category = this.parent;\n        this.groupAction({ category });\n    }\n\n    /**\n     * Edit the given group\n     * @param item Group to edit\n     */\n    public editGroup(item: ICateringMenuCategory) {\n        const category = this.parent;\n        this.groupAction({ category, group: item });\n    }\n\n    /**\n     * Edit or Add new category based of the passed data\n     * @param data\n     */\n    private groupAction(data: { category: ICateringMenuCategory, group?: ICateringMenuCategory }) {\n        this.show_options = false;\n        this.service.Overlay.openModal('catering-category', {\n            cmp: CateringGroupModalComponent,\n            data\n        }, (event) => {\n            if (event.type === 'finish') {\n                this.event.emit('update');\n            }\n            event.close();\n        });\n    }\n}\n\n","<div class=\"category-list\" *ngIf=\"category && category.items && category.items.length; else no_items\">\n    <div class=\"action-list\">\n        <btn (touchrelease)=\"newGroup()\">Add package or sub-category</btn>\n    </div>\n    <!-- List of Pacakage Items, they're cost and items included -->\n    <div class=\"item\" *ngFor=\"let item of category.items; let i = index\">\n        <div class=\"item-header\">\n            <div class=\"item-image\" (touchrelease)=\"item.show = !item.show\" [style.background-image]=\"(item.src ? 'url(' + item.src + ')' : '') | safestyle\"></div>\n            <div class=\"item-details\" (touchrelease)=\"item.show = !item.show\">\n                <span class=\"title\">{{ item.name }}</span>\n                <span class=\"sub-text\">{{ item.items?.length }} selections</span>\n            </div>\n            <div class=\"item-price\" *ngIf=\"item.price\" (touchrelease)=\"(item.show)\">\n                {{ (item.price || 0) / 100 | currency:symbol }} per person\n            </div>\n            <div class=\"item-controls\">\n                <div\n                    class=\"icon\"\n                    (touchrelease)=\"shown_option = i\"\n                    tooltip\n                    [id]=\"category.id\"\n                    [show]=\"shown_option === i\"\n                    (showChange)=\"shown_option = null\"\n                    [template]=\"options\"\n                    [triangle]=\"false\"\n                    position=\"bottom\"\n                    offset=\"end\"\n                >\n                    <i class=\"material-icons\">more_vert</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"item-list\" [@show] *ngIf=\"item.show\">\n            <catering-category-item\n                *ngFor=\"let subitem of item.items\"\n                [item]=\"subitem\"\n                [parent]=\"item\"\n                (event)=\"event.emit($event)\"\n            ></catering-category-item>\n        </div>\n    </div>\n</div>\n<ng-template #no_items>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">Category contains no items</div>\n        <div class=\"action\">\n            <btn (touchrelease)=\"newGroup()\">Add new package or sub-category</btn>\n        </div>\n    </div>\n</ng-template>\n<ng-template #options>\n    <div class=\"actions\">\n        <div class=\"option\" (touchrelease)=\"newItem()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Add item</div>\n        </div>\n        <div class=\"option\" (touchrelease)=\"newGroup(true)\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Add item group</div>\n        </div>\n        <div class=\"option\" (touchrelease)=\"editGroup(category.items[shown_option])\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">edit</i>\n            </div>\n            <div class=\"text\">Edit {{ category.items[shown_option] && category.items[shown_option].package ? 'package' : 'sub-category' }}</div>\n        </div>\n        <div class=\"option error\" (touchrelease)=\"deleteGroup(category.items[shown_option])\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">delete</i>\n            </div>\n            <div class=\"text\">Remove {{ category.items[shown_option] && category.items[shown_option].package ? 'package' : 'sub-category' }}</div>\n        </div>\n    </div>\n</ng-template>\n","\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\n\nimport { ICateringMenuCategory } from '../../../../../services/data/catering/catering-categories.service';\nimport { BaseComponent } from '../../../../../shared/globals/base.component';\nimport { IBuilding } from '../../../../../services/data/buildings.service';\nimport { AppService } from '../../../../../services/app.service';\nimport { CateringGroupModalComponent } from '../../../overlays/group-modal/group-modal.component';\nimport { CateringItemModalComponent } from '../../../overlays/item-modal/item-modal.component';\nimport { ICateringMenuItem } from '../../../../../services/data/catering/catering-items.service';\n\n@Component({\n    selector: 'catering-category-list',\n    templateUrl: './category-list.component.html',\n    styleUrls: ['./category-list.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0, height: 0 }), animate(200, style({ opacity: 1, height: '*' }))]),\n            transition(':leave', [style({ opacity: 1, height: '*' }), animate(200, style({ opacity: 0, height: 0 }))]),\n        ])\n    ]\n})\nexport class CateringCategoryListComponent extends BaseComponent {\n    @Input() public category: ICateringMenuCategory;\n    /** Emitter for change events to the menu */\n    @Output() public event = new EventEmitter();\n    /** Active building */\n    public building: IBuilding;\n    /** Show options for the category */\n    public shown_option: number;\n\n    /** Currrency symbol for the active building */\n    public get symbol(): string {\n        const bld = this.building || this.service.Buildings.current();\n        return bld.currency || 'USD';\n    }\n\n    constructor(public service: AppService) {\n        super();\n    }\n\n    /**\n     * Add new item to the menu category\n     */\n    public newItem() {\n        this.itemAction({});\n    }\n\n    /**\n     * Edit the given item\n     * @param item Item to edit\n     */\n    public editItem(item: ICateringMenuItem) {\n        this.itemAction({ item });\n    }\n\n    /**\n     * Edit or Add new item based of the passed data\n     * @param data\n     */\n    private itemAction(data: { item?: ICateringMenuItem }) {\n        const category = this.shown_option || this.shown_option === 0\n                ? this.category.items[this.shown_option]\n                : this.category\n        this.shown_option = null;\n        this.service.Overlay.openModal('catering-item', {\n            cmp: CateringItemModalComponent,\n            data: { ...data, category }\n        }, (event) => {\n            if (event.type === 'finish') {\n                this.event.emit('update');\n            }\n            event.close();\n        });\n    }\n\n    /**\n     * Add new sub-category or package to the menu\n     */\n    public newGroup(use_active: boolean = false) {\n        const category: any = use_active\n            ? (this.shown_option || this.shown_option === 0\n                ? this.category.items[this.shown_option]\n                : this.category)\n            : this.category;\n        this.groupAction({ category });\n    }\n\n    /**\n     * Edit the given group\n     * @param item Group to edit\n     */\n    public editGroup(item: ICateringMenuCategory) {\n        const category = this.category;\n        this.groupAction({ category, group: item });\n    }\n\n    /**\n     * Edit or Add new category based of the passed data\n     * @param data\n     */\n    private groupAction(data: { category: ICateringMenuCategory, group?: ICateringMenuCategory }) {\n        this.shown_option = null;\n        this.service.Overlay.openModal('catering-category', {\n            cmp: CateringGroupModalComponent,\n            data\n        }, (event) => {\n            if (event.type === 'finish') {\n                this.event.emit('update');\n            }\n            event.close();\n        });\n    }\n\n    public deleteGroup(item: ICateringMenuCategory) {\n        if (item.id) {\n            this.shown_option = null;\n            (item as any).deleting = true;\n            this.service.CateringCategories.delete(item.id).then(() => {\n                this.event.emit('removed');\n                this.service.success('Succesfully deleted item group');\n            }, (e) => {\n                    (item as any).deleting = false;\n                    if (e !== 'User cancelled'){\n                        this.service.error('Failed to delete item group');\n                    }\n            });\n        }\n    }\n}\n\n","<section class=\"visitor-list\">\n    <header class=\"search\">\n        <div class=\"searchbar\" tabindex=\"0\" (focus)=\"focus()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">search</i>\n            </div>\n            <input #input [(ngModel)]=\"search_str\" (ngModelChange)=\"filter()\" placeholder=\"Search for something here...\" />\n        </div>\n    </header>\n    <main *ngIf=\"filtered_menu && filtered_menu.length && !loading; else no_category\">\n        <!-- Package Groups -->\n        <div class=\"tab-group\">\n            <div class=\"tab add\" title=\"New Food Category\" (touchrelease)=\"newCategory()\" [class.active]=\"current_tab === -1\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div\n                class=\"tab\"\n                *ngFor=\"let group of filtered_menu; let i = index\"\n                (touchrelease)=\"select(i, $event)\"\n                [class.active]=\"current_tab === i\"\n            >\n                <div class=\"text\">{{ group.name }}</div>\n                <div class=\"icon\" (touchrelease)=\"editCategory(group)\">\n                    <i class=\"material-icons\">edit</i>\n                </div>\n            </div>\n            <div class=\"loader\" *ngIf=\"loading\">\n                <spinner type=\"circle-ring\" color=\"#000\"></spinner>\n            </div>\n        </div>\n        <div class=\"list-view\">\n            <catering-category-list *ngIf=\"active_category\" [category]=\"active_category\" (event)=\"loadMenu()\"></catering-category-list>\n        </div>\n    </main>\n    <ng-template #no_items>\n        <div class=\"no-item\" center>\n            <div class=\"icon\">\n                <i class=\"material-icons\">close</i>\n            </div>\n            <div class=\"text\">\n                No {{ search_str ? 'matching' : '' }} {{ active_view === 'hosts' ? 'hosts' : 'visitors' }} for {{ date_display }}\n            </div>\n        </div>\n    </ng-template>\n</section>\n<ng-template #no_category>\n    <div class=\"no-item\" center>\n        <div class=\"icon\">\n            <i class=\"material-icons\" *ngIf=\"!loading\">close</i>\n            <spinner type=\"circle-ring\" *ngIf=\"loading\"></spinner>\n        </div>\n        <div class=\"text\">\n            <ng-container *ngIf=\"!loading\">No menu for {{ building?.name }}</ng-container>\n            <ng-container *ngIf=\"loading\">Loading menu for {{ building?.name }}...</ng-container>\n        </div>\n        <div class=\"action\" *ngIf=\"!loading\">\n            <btn (touchrelease)=\"newCategory()\">Add new category</btn>\n        </div>\n    </div>\n</ng-template>\n","\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\n\nimport { ICateringMenuCategory } from '../../../../services/data/catering/catering-categories.service';\nimport { IBuilding } from '../../../../services/data/buildings.service';\nimport { CateringCategoryModalComponent } from '../../overlays/category-modal/category-modal.component';\nimport { ICateringMenuItem } from '../../../../services/data/catering/catering-items.service';\n\n\n@Component({\n    selector: 'catering-menus',\n    templateUrl: './menus.component.html',\n    styleUrls: ['./menus.component.scss']\n})\nexport class MenusComponent extends BaseComponent implements OnInit {\n    constructor(private service: AppService) { super(); }\n\n    /** Seach input */\n    @ViewChild('input', { static: true }) private input: ElementRef<HTMLInputElement>;\n    /** Current search string */\n    public search_str: string;\n    /** Loading state */\n    public loading:boolean = true;\n    /** Current tab in view - opted for this over custom routes */\n    public current_tab: number = 0;\n    /** Currently selected menu category */\n    public active_category: ICateringMenuCategory;\n    /** List of catering menu categories for the active building */\n    public catering_menu: ICateringMenuCategory[] = [];\n    /** List of catering menu categories for the active building */\n    public filtered_menu: ICateringMenuCategory[] = [];\n    /** Active building */\n    public building: IBuilding;\n\n    /** Currrency symbol for the active building */\n    public get symbol(): string {\n        const bld = this.building || this.service.Buildings.current();\n        return bld.currency || 'USD';\n    }\n\n    public ngOnInit(): void {\n        this.loading = false;\n        this.subscription('bld', this.service.Buildings.listen((bld) => bld ? this.loadMenu() : ''));\n        this.loadMenu();\n    }\n\n    /**\n     * Update the selected category to the given index\n     * @param index Index to set category\n     */\n    public select(index: number, event?: any) {\n        if (this.catering_menu.length > index) {\n            this.current_tab = index;\n            this.active_category = this.filtered_menu[index];\n            if (event && event.target) {\n                const el: HTMLElement = event.target;\n                el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            }\n        }\n    }\n\n    /**\n     * Add new category to the menu\n     */\n    public newCategory() {\n        this.categoryAction({});\n    }\n\n    /**\n     * Edit the given category\n     * @param item Category to edit\n     */\n    public editCategory(item: ICateringMenuCategory) {\n        this.categoryAction({ category: item });\n    }\n\n    /**\n     * Edit or Add new category based of the passed data\n     * @param data\n     */\n    private categoryAction(data: { category?: ICateringMenuCategory }) {\n        this.service.Overlay.openModal('catering-category', {\n            cmp: CateringCategoryModalComponent,\n            data\n        }, (event) => {\n            if (event.type === 'finish') {\n                this.loadMenu();\n            }\n            event.close();\n        });\n    }\n\n    public deleteCategory(item: ICateringMenuCategory) {\n        if (item.id) {\n            (item as any).deleting = true;\n            this.service.CateringCategories.delete(item.id).then(() => {\n                this.service.success('Succesfully deleted item group');\n            }, (e) => {\n                (item as any).deleting = false;\n                if (e !== 'User cancelled'){\n                    this.service.error('Failed to delete item group');\n                }\n            });\n        }\n    }\n\n    public filter() {\n        const search = (this.search_str || '').toLowerCase();\n        this.filtered_menu = search ? <any>this.filterSubItems(search, this.catering_menu) : this.catering_menu;\n        const tab = this.active_category ? this.filtered_menu.find(i => i.id === this.active_category.id) : null;\n        this.active_category = tab ? tab : (this.filtered_menu.length > 0 ? this.filtered_menu[0] : null);\n        this.current_tab = this.filtered_menu.findIndex(i => i === this.active_category);\n    }\n\n    public filterSubItems(filter: string, list: (ICateringMenuCategory | ICateringMenuItem)[]) {\n        const filtered = [];\n        list.map(i => ({ ...i })).forEach(i => {\n            const match = (i.name || '').toLowerCase().indexOf(filter) >= 0 || (i.description || '').toLowerCase().indexOf(filter) >= 0\n            if (!match && (i as any).items) {\n                (i as any).items = this.filterSubItems(filter, (i as any).items);\n            }\n            if (match || ((i as any).items && (i as any).items.length)) {\n                filtered.push(i);\n            }\n        });\n        return filtered;\n    }\n\n    /**\n     * Load list of catering menu categories for the active building\n     */\n    public loadMenu() {\n        this.timeout('load-menu', () => {\n            const bld = this.service.Buildings.current();\n            if (bld) {\n                this.building = bld;\n                this.loading = true;\n                this.service.CateringMenu.query({ zone_id: bld.id })\n                    .then((menu) => {\n                        this.catering_menu = menu || [];\n                        this.select(0);\n                        this.filter();\n                        this.loading = false;\n                    }, () => this.loading = false);\n            }\n        }, 100);\n    }\n\n    /**\n     * Searchbar focus event\n     */\n    public focus(){\n\n    }\n}","<div class=\"orders-component\">\n    <div class=\"sub-header\">\n        <dropdown klass=\"show-dropdown\" [list]=\"show_options\" [model]=\"show_selection\" (modelChange)=\"displayChange($event)\"></dropdown>\n\n        <div>\n            Time Now <strong>{{ model.now?.display }}</strong> {{ model.now?.dow }}\n        </div>\n    </div>\n\n    <div class=\"order-titles\">\n        <div *ngFor=\"let header of order_headings; let i = index\" [ngStyle]=\"{ width: column_widths[i] + '%' }\">\n            {{ header }}\n        </div>\n    </div>\n    <ng-container *ngIf=\"!loading; else loading_state\">\n        <ng-container *ngIf=\"filtered_orders && filtered_orders.length; else empty_state\">\n            <div class=\"order-view\">\n                <div\n                    class=\"order\"\n                    *ngFor=\"let order of filtered_orders; let i = index\"\n                    [class.cancelled]=\"order.status === 'cancelled'\"\n                    (touchrelease)=\"showCateringDetails(order)\"\n                >\n                    <div [ngStyle]=\"{ width: column_widths[0] + '%' }\">\n                        {{ order.all_day ? 'All Day' : order.booking?.display?.start }}\n                    </div>\n                    <div [ngStyle]=\"{ width: column_widths[1] + '%' }\">\n                        {{ order.room?.name }}\n                    </div>\n                    <div class=\"caps\" [ngStyle]=\"{ width: column_widths[2] + '%' }\">\n                        {{ order.booking?.booking_type?.id || order.booking?.booking_type || 'Internal' }}\n                        <div class=\"icon\">\n                            <i class=\"custom-note-icon\"> </i>\n                        </div>\n                    </div>\n                    <div [ngStyle]=\"{ width: column_widths[3] + '%' }\">\n                        {{ order.host?.name }}\n                    </div>\n                    <div class=\"package-display\" [ngStyle]=\"{ width: column_widths[4] + '%' }\">\n                        <span class=\"requirement\" *ngIf=\"order.is_pantry\">(P)</span>\n                        <span class=\"requirement\" *ngIf=\"order.is_kitchen\">(K)</span>\n                        <span> {{ order.type }}</span>\n                    </div>\n                    <div class=\"shrink\" [ngStyle]=\"{ width: column_widths[5] + '%' }\">\n                        {{ order.attendee_count }} ({{ order.expected || '0' }} Expected)\n                    </div>\n                    <div class=\"status-view\" [ngStyle]=\"{ width: column_widths[6] + '%' }\">\n                        <custom-dropdown\n                            klass=\"status-dropdown {{ order.status.toLowerCase() }}\"\n                            [(show)]=\"model.show_dropdown[i]\"\n                            [content]=\"out_header\"\n                            [template]=\"out_template\"\n                        >\n                            <ng-template #out_header>\n                                <div class=\"text\" (touchrelease)=\"model.show_dropdown[i] = !model.show_dropdown[i]\">{{ order.status }}</div>\n                                <div\n                                    class=\"icon {{ order.status.toLowerCase() }}\"\n                                    (touchrelease)=\"model.show_dropdown[i] = !model.show_dropdown[i]\"\n                                >\n                                    <i class=\"custom-{{ order.status.toLowerCase() }}\"></i>\n                                </div>\n                            </ng-template>\n                            <ng-template #out_template>\n                                <div class=\"colours list\">\n                                    <div\n                                        class=\"item\"\n                                        *ngFor=\"let status of orders_statuses\"\n                                        (touchrelease)=\"statusUpdate(status, order, i)\"\n                                    >\n                                        <div class=\"text\">{{ status }}</div>\n                                        <div class=\"colour {{ status }}\"></div>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </custom-dropdown>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </ng-container>\n</div>\n<ng-template #empty_state>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n        <div class=\"text\">\n            No {{ show_selection ? show_options[show_selection].split(' ')[1] : '' }} orders for {{ display?.date }}\n        </div>\n    </div>\n</ng-template>\n<ng-template #loading_state>\n    <div class=\"no-item\">\n        <div class=\"icon\">\n            <spinner type=\"circle-ring\" color=\"rgba(0,0,0,.35)\"></spinner>\n        </div>\n        <div class=\"text\">Loading {{ building?.name }} orders for {{ display?.date }}</div>\n    </div>\n</ng-template>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../../../shared/globals/base.component';\nimport { AppService } from '../../../../services/app.service';\nimport { IRoom } from '../../../../services/data/rooms.service';\nimport { IUser } from '../../../../services/data/users.service';\nimport { IBooking } from '../../../../services/data/bookings.service';\nimport { ICateringMenuItem } from '../../../../services/data/catering/catering-items.service';\nimport { Utils } from '../../../../shared/utility.class';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ICateringOrderDisplay {\n    name: string;\n    date: number;\n    room: IRoom;\n    is_external?: boolean;\n    host: IUser;\n    attendee_count: number;\n    items?: ICateringMenuItem[];\n    status: \"accepted\" | \"preparing\" | \"ready\" | \"delivered\" | \"cancelled\";\n    booking?: IBooking;\n    type?: string;\n    is_kitchen?: boolean;\n    is_pantry?: boolean;\n    all_day?: boolean;\n    expected: number;\n}\n\n@Component({\n    selector: 'catering-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent extends BaseComponent implements OnInit {\n    constructor(private service: AppService, private _route: ActivatedRoute) { super(); }\n\n    public model:any = {};\n    /** object to store visual controls */\n    public display:any = {};\n    /** Top Show Dropdown options - tbd */\n    public show_options: string[] = ['Show All', 'Show Kitchen', 'Show Pantry', 'Show Empty', 'Show Non-Empty'];\n    public show_selection: number = 0;\n\n    /** Grid/Table controls */\n    public order_headings: string[] = [\"Time\", \"Room\", \"Meeting Type\", \"Host\", \"Package Types\", \"Attendees (Expected)\", \"Order Status\"];\n     /** Column widths as % - futureproofing for column resizing */\n    public column_widths: number[] = [14.2, 14.2, 14.2, 14.2, 14.2, 8.2, 20.2];\n    /** Status List */\n    public orders_statuses: string[] = [\"accepted\", \"preparing\", \"ready\", \"delivered\",  \"cancelled\"];\n    /** List of orders for the current day */\n    public orders: ICateringOrderDisplay[] = [];\n\n    public filtered_orders: ICateringOrderDisplay[] = []\n    /**  */\n    public view_id: string;\n    /** Whether the orders are being loaded */\n    public loading: boolean;\n\n    ngOnInit(): void {\n\n        /** Dropdown display control */\n        this.model.show_dropdown = new Array(this.orders.length).fill(false);\n        this.model.settings = this.service.Settings.get('app.day_view') || {};\n        this.init();\n\n    }\n\n    public init() {\n        const user = this.service.Users.current();\n        if (!this.service.Settings.setup) {\n            setTimeout(() => this.init(), 500);\n        }\n        this.loading = true;\n        this.subscription('date', this.service.listen('APP.date', (date) => {\n            this.model.date = date;\n            this.updateTime();\n            this.loadOrders();\n        }));\n\n        this.subscription('bld', this.service.Buildings.listen((bld) => bld ? this.loadOrders() : ''));\n\n        this.subscription('route.query', this._route.queryParamMap.subscribe((params) => {\n            if (params.has('id')) {\n                this.view_id = params.get('id');\n                let order = this.orders.find(i => i.booking.id === this.view_id);\n                if (!order && sessionStorage) {\n                    const booking_str = sessionStorage.getItem('CONCIERGE.view_order');\n                    if (booking_str) {\n                        order = this.processOrder(JSON.parse(booking_str));\n                    }\n                }\n                if (order) {\n                    this.view_id = null;\n                    this.showCateringDetails(order);\n                }\n            }\n        }));\n\n        this.updateTime();\n        this.interval('time', () => this.updateTime(), 10 * 1000);\n        this.interval('time', () => this.loadOrders(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Grab bookings with catering orders for the selected date\n     */\n    public loadOrders() {\n        this.timeout('load_order', () => {\n            const bld = this.service.Buildings.current();\n            if (bld) {\n                const date = dayjs(this.model.date).startOf('d');\n                this.display.date = date.format('DD MMM YYYY');\n                this.service.Rooms.query({\n                    available_from: date.unix(),\n                    available_to: date.add(1, 'd').unix(),\n                    zone_ids: bld.id\n                }).then((room_list) => {\n                    this.orders = [];\n                    for (const room of room_list) {\n                        for (const booking of room.bookings) {\n                            if (booking.catering) {\n                                const order = this.processOrder({ ...booking, room });\n                                if (order) {\n                                    this.orders.push(order);\n                                }\n                            }\n                        }\n                    }\n                    this.orders.sort((a, b) => a.date - b.date);\n                    if (this.view_id) {\n                        const order = this.orders.find(i => i.booking.id === this.view_id);\n                        if (order) {\n                            this.view_id = null;\n                            this.showCateringDetails(order);\n                        }\n                    }\n                    this.displayChange(this.show_selection);\n                    this.loading = false;\n                }, (e) => {\n                    this.loading = false;\n                });\n            }\n        })\n    }\n\n    /** Changing the \"show\" option */\n    public displayChange(index: number) {\n        this.show_selection = index;\n        switch (index) {\n            case 1: // Kitchen\n                this.filtered_orders = this.orders.filter(i => i.is_kitchen);\n                break;\n            case 2: // Pantry\n                this.filtered_orders = this.orders.filter(i => i.is_pantry);\n                break;\n            case 3: // Empty\n                this.filtered_orders = this.orders.filter(i => !i.items || !i.items.length);\n                break;\n            case 4: // Non-Empty\n                this.filtered_orders = this.orders.filter(i => i.items && i.items.length > 0);\n                break;\n            default:\n                this.filtered_orders = [...this.orders];\n\n        }\n    }\n\n    /** Update the status of an order */\n    public statusUpdate(status, order, index) {\n        const old_status = order.status;\n        order.status = status || '';\n        this.model.show_dropdown[index] = false;\n        const booking = order.booking;\n        booking.catering[booking.room.id] = { ...booking.catering[booking.room.id], order_status: status };\n        this.service.Bookings.updateItem(booking.id, booking).then(() => {\n\n        }, () => {\n            this.service.error('Failed to update status of meeting order');\n            order.status = old_status || '';\n        });\n    }\n\n\n    /** quickly borrowed from day view */\n    public updateTime() {\n        // Get settings\n        const start = this.model.settings.start_hour || 6.5;\n        const end = this.model.settings.end_hour || 21.5;\n        // Generate times\n        const start_time = dayjs().hour(start % 24).minute((start % 1) * 60);\n        const end_time = dayjs().hour(end % 24).minute((end % 1) * 60);\n        const length = Math.abs(Math.floor(start_time.diff(end_time, 'm')));\n        const now = dayjs(this.model.date || '');\n        const hour = Math.floor(now.hour() + now.minute() / 60);\n        this.model.now = {\n            display: now.format('h:mm A'),\n            date: now.format('DD MMM YYYY'),\n            raw: now.valueOf(),\n            dow: now.format('dddd'),\n            offset: Math.floor(now.diff(start_time, 'm')) / length,\n            today: now.isSame(dayjs(), 'd'),\n            active: `${hour}:00`,\n        };\n    }\n\n    /** Initiate catering modal to display notes and details */\n    public showCateringDetails(order: ICateringOrderDisplay) {\n        this.timeout('show catering', ()=>{\n            if(this.model.show_dropdown.indexOf(true) > -1){\n                return;\n            }\n            this.service.Overlay.openModal('catering-details', {\n                data: {\n                    order\n                }\n            }, (event) => {\n                if (event.type === 'updated') {\n                    order.booking = event.data.order.booking;\n                    console.log('Order:', order);\n                    const index = this.orders.findIndex(i => i.booking.icaluid === order.booking.icaluid);\n                    if (index >= 0) {\n                        console.log('Replaced old order')\n                        this.orders.splice(index, 1, order);\n                        console.log('Orders:', this.orders[index]);\n                    }\n                    sessionStorage.removeItem('CONCIERGE.view_order');\n                    this.displayChange(this.show_selection);\n                } else {\n                    event.close();\n                }\n            });\n        },1);\n\n    }\n\n    /**\n     * Process catering order data from given booking\n     * @param booking Booking with catering order details\n     */\n    private processOrder(booking: IBooking): ICateringOrderDisplay {\n        if (booking.catering && booking.room) {\n            const order: any = (booking.catering\n                ? booking.catering.items\n                    ? booking.catering\n                    : booking.catering[booking.room.id]\n                : null) || {};\n            const kitchen = Utils.unique(order.kitchen || []).join(' + ');\n            const pantry = Utils.unique(order.pantry || []).join(' + ');\n            const type = kitchen && pantry ? `${kitchen} + ${pantry}` : kitchen + pantry;\n            const catering_order: ICateringOrderDisplay = {\n                name: booking.room.name,\n                date: booking.date,\n                host: booking.organiser,\n                is_external: booking.visitors,\n                room: booking.room,\n                attendee_count: (booking.attendees || []).length,\n                status: order.status || order.order_status || 'accepted',\n                items: order.items,\n                booking,\n                is_kitchen: !!kitchen,\n                is_pantry: !!pantry,\n                type,\n                all_day: booking.all_day || booking.duration > 23 * 60,\n                expected: booking.expected_attendees[booking.room.id]\n            };\n            return catering_order;\n        }\n        return null;\n    }\n}\n\n"],"sourceRoot":"webpack:///"}