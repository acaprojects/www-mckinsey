{"version":3,"sources":["./src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/event-form/event-form.component.html","./src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/visitor-form/visitor-form.component.html","./src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.ts","./src/app/shell/visitors/overlays/visitors-form-modal/visitors-form-modal.component.html","./src/app/shell/visitors/timeline/item/item.component.ts","./src/app/shell/visitors/timeline/item/item.component.html","./src/app/shell/visitors/timeline/timeline.component.ts","./src/app/shell/visitors/timeline/timeline.component.html","./src/app/shell/visitors/timeline/visitor/visitor.component.ts","./src/app/shell/visitors/timeline/visitor/visitor.component.html","./src/app/shell/visitors/visitors.component.ts","./src/app/shell/visitors/visitors.component.html","./src/app/shell/visitors/visitors.module.ts"],"names":[],"mappings":"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","file":"shell-visitors-visitors-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Identity } from 'src/app/shared/utilities/types.utilities';\n\n@Component({\n    selector: 'a-event-form',\n    templateUrl: './event-form.component.html',\n    styleUrls: ['./event-form.component.scss'],\n})\nexport class EventFormComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Booking details to display */\n    @Input() public form: FormGroup;\n\n    /** List of attendees in the booking */\n    public attendees: User[] = [];\n\n    constructor(private _service: ApplicationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.event || changes.form) {\n            this.attendees = this.form.controls.attendees.value;\n        }\n    }\n\n    public addVisitor() {\n        const list = this.form.controls.attendees.value;\n        list.push(new User({ visitor: true }));\n        this.form.controls.attendees.setValue(list);\n    }\n\n    /** Replace visitor with updated values */\n    public replaceVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1, item);\n        this.attendees = attendees;\n        this._service.Users.addFrom('visitor-modal', item.toJSON(), 'other');\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    /** Remove visitor from attendee list */\n    public removeVisitor(item: User, index: number) {\n        const attendees = this.attendees;\n        attendees.splice(index, 1);\n        this.form.controls.attendees.setValue(attendees);\n    }\n\n    public trackByFn(index: number, item: Identity) {\n        return index;\n    }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"visitor-booking\" *ngIf=\"event\">\n        <div class=\"details\">\n            <div class=\"icon\">\n                <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n            </div>\n            <div class=\"time\">{{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span></div>\n            <div class=\"host\">\n                <div class=\"staff\">S</div>\n                <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n            </div>\n            <div class=\"title\">\n                <label for=\"title\">Title</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        placeholder=\"Meeting Title\"\n                        formControlName=\"title\"\n                    />\n                    <mat-error>Title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"actions\"></div>\n        </div>\n        <div class=\"attendees\">\n            <div class=\"bar\"></div>\n            <ng-container *ngFor=\"let item of attendees; let i = index; trackBy: trackByFn\">\n                <div class=\"visitor\" *ngIf=\"item.external\">\n                    <a-visitor-form\n                        [event]=\"event\"\n                        [person]=\"item\"\n                        (personChange)=\"replaceVisitor($event, i)\"\n                    ></a-visitor-form>\n                    <button mat-icon-button name=\"remove\" (tapped)=\"removeVisitor(item, i)\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'delete' }\"></app-icon>\n                    </button>\n                </div>\n            </ng-container>\n            <button mat-button type=\"button\" name=\"add\" [class.add]=\"true\" (tapped)=\"addVisitor()\">\n                <div class=\"content\">\n                    <div class=\"icon\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'add' }\"></app-icon>\n                    </div>\n                    <div class=\"text\">Add visitor</div>\n                    <div class=\"bar\"></div>\n                </div>\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input, SimpleChanges, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { ApplicationService } from 'src/app/services/app.service';\n\n@Component({\n    selector: 'a-visitor-form',\n    templateUrl: './visitor-form.component.html',\n    styleUrls: ['./visitor-form.component.scss'],\n})\nexport class VisitorFormComponent extends BaseDirective implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Form control for attendees */\n    @Input() public field: FormControl;\n    /** Emitter for changes to the person */\n    @Output() public personChange = new EventEmitter<User>();\n    /** Form fields for visitor details */\n    public form: FormGroup;\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        /* istanbul ignore else */\n        if (changes.person) {\n            delete this.form;\n            this.form = new FormGroup({\n                name: new FormControl(this.person.name, [Validators.minLength(2)]),\n                email: new FormControl(this.person.email, [Validators.required, Validators.email]),\n            });\n        }\n    }\n\n    public updatePerson() {\n        this.form.markAllAsTouched();\n        /* istanbul ignore else */\n        if (this.form.valid) {\n            this.person = new User({ ...this.form.value, visitor: true });\n            this.personChange.emit(this.person);\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<form *ngIf=\"form\" [formGroup]=\"form\">\n    <div class=\"details\">\n        <div class=\"name\">\n            <label for=\"name\">Name</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"name\" placeholder=\"Name\" formControlName=\"name\" (blur)=\"updatePerson()\" />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"email\">\n            <label for=\"email\">Email Address</label>\n            <mat-form-field appearance=\"outline\">\n                <input matInput name=\"email\" type=\"email\" placeholder=\"Email Address\" formControlName=\"email\" (blur)=\"updatePerson()\" />\n                <mat-error>A valid email address is required</mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</form>\n<div class=\"bar\"></div>\n","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { BaseDirective } from 'src/app/shared/base.directive';\nimport { User } from 'src/app/services/data/users/user.class';\nimport { DialogEvent } from 'src/app/shared/utilities/types.utilities';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport {\n    ConfirmModalComponent,\n    CONFIRM_METADATA,\n} from 'src/app/overlays/confirm-modal/confirm-modal.component';\n\nexport interface VisitorsFormModalData {\n    /** Details of visitor listing */\n    booking: Booking;\n}\n\n@Component({\n    selector: 'a-visitors-form-modal',\n    templateUrl: './visitors-form-modal.component.html',\n    styleUrls: ['./visitors-form-modal.component.scss'],\n})\nexport class VisitorsFormModalComponent extends BaseDirective implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for visitor booking */\n    public form: FormGroup;\n    /** Display string for the loading state */\n    public loading: string;\n\n    /** Visitor booking data */\n    public get booking(): Booking {\n        return this._data.booking;\n    }\n\n    /** Whether form fields contain an attendee */\n    public get has_attendees() {\n        return (\n            this.form &&\n            this.form.controls.attendees.value &&\n            this.form.controls.attendees.value.length\n        );\n    }\n\n    constructor(\n        private _service: ApplicationService,\n        private _dialog_ref: MatDialogRef<VisitorsFormModalComponent>,\n        private _dialog: MatDialog,\n        @Inject(MAT_DIALOG_DATA) private _data: VisitorsFormModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.form = new FormGroup({\n            title: new FormControl(this.booking.title, [Validators.required]),\n            attendees: new FormControl(this.booking.attendees, [Validators.minLength(1)]),\n        });\n        this.subscription(\n            'title',\n            this.form.controls.title.valueChanges.subscribe((value: string) =>\n                this.booking.storePendingChange('title', value)\n            )\n        );\n        this.subscription(\n            'attendees',\n            this.form.controls.attendees.valueChanges.subscribe((value: User[]) => {\n                this.booking.storePendingChange(\n                    'attendee_emails',\n                    value.map((user) => user.email)\n                );\n            })\n        );\n    }\n\n    /** Delete visitor booking */\n    public delete() {\n        const ref = this._dialog.open(ConfirmModalComponent, {\n            ...CONFIRM_METADATA,\n            data: {\n                title: 'Delete meeting',\n                content: 'Are you sure you wish to delete this meeting?',\n                icon: { type: 'icon', class: 'material-icons', content: 'delete' },\n                action: 'Ok',\n            },\n        });\n        this.subscription(\n            'confirm',\n            ref.componentInstance.event.subscribe((event: DialogEvent) => {\n                /* istanbul ignore else */\n                if (event.reason === 'done') {\n                    /* istanbul ignore else */\n                    if (this.booking.id) {\n                        this.loading = 'Deleting visitor booking...';\n                        this._dialog_ref.disableClose = true;\n                        this.booking.delete().then(\n                            () => {\n                                this.event.emit({ reason: 'done' });\n                                this._service.notifySuccess('Successfully removed visitors.');\n                                this._dialog_ref.close();\n                            },\n                            (err) => {\n                                this.loading = null;\n                                this._service.notifyError(\n                                    `Failed to remove visitors. Error: ${err.message || err}`\n                                );\n                                this._dialog_ref.disableClose = false;\n                            }\n                        );\n                    }\n                }\n                ref.close();\n            })\n        );\n    }\n\n    /** Save changes to visitor booking */\n    public save() {\n        this.timeout('save', () => {\n            this.loading = 'Saving visitor booking...';\n            this.form.markAllAsTouched();\n            this._dialog_ref.disableClose = true;\n            /* istanbul ignore else */\n            if (this.booking.has_changes && this.form.valid) {\n                this.booking.save().then(\n                    (bkn) => {\n                        this.event.emit({ reason: 'done', metadata: bkn });\n                        this._service.notifySuccess(\n                            this.booking.id\n                                ? 'Successfully updated visitors.'\n                                : 'Successfully added visitors.'\n                        );\n                        this._dialog_ref.close();\n                    },\n                    (err) => {\n                        this.loading = null;\n                        this._service.notifyError(\n                            `Failed to ${this.booking.id ? 'update' : 'add'} visitors. Error: ${\n                                err.message || err\n                            }`\n                        );\n                        this._dialog_ref.disableClose = false;\n                    }\n                );\n            }\n        });\n    }\n}\n","<header>\n    <div class=\"heading\">{{ booking.id ? 'Edit' : 'New' }} Visitors</div>\n    <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n        <app-icon [icon]=\"{ type: 'icon', class: 'material-icons', content: 'close' }\"></app-icon>\n    </button>\n</header>\n<mat-dialog-content>\n    <main *ngIf=\"!loading; else load_state\">\n        <a-event-form [form]=\"form\" [event]=\"booking\"></a-event-form>\n    </main>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!loading\">\n    <footer>\n        <button mat-button name=\"save\" [disabled]=\"!has_attendees\" (tapped)=\"save()\">Save</button>\n        <button mat-button name=\"delete\" class=\"error\" *ngIf=\"booking.id\" (tapped)=\"delete()\">\n            Delete\n        </button>\n    </footer>\n</mat-dialog-actions>\n<ng-template #load_state>\n    <main style=\"min-height: 12em;\">\n        <div class=\"info-block center\">\n            <div class=\"icon\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n            </div>\n            <div class=\"text\">{{ loading }}</div>\n        </div>\n    </main>\n</ng-template>\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND } from 'src/app/shared/globals/angular-animations';\nimport { VisitorsFormModalComponent, VisitorsFormModalData } from '../../overlays/visitors-form-modal/visitors-form-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'a-visitor-booking',\n    templateUrl: './item.component.html',\n    styleUrls: ['./item.component.scss'],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND]\n})\nexport class VisitorBookingItemComponent implements OnChanges {\n    /** Booking details to display */\n    @Input() public event: Booking;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Whether attendee list should be shown */\n    public show_attendees: boolean;\n\n    /** Display string for checkin statuses of all attendees */\n    public get status(): string {\n        const checked_in_users = this.event.checked_in;\n        const { checked_in, count } = this.event.attendees.reduce((counts, user) => {\n            /* istanbul ignore else */\n            if (user.external) {\n                counts.count++;\n                /* istanbul ignore else */\n                if (checked_in_users.indexOf(user.email) >= 0) {\n                    counts.checked_in++\n                }\n            }\n            return counts;\n        }, { checked_in: 0, count: 0 });\n        return `${checked_in} / ${count}`;\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.event.attendee_emails.join(',')}?Subject=\"${this.event.title}\"%20at%20${this.event.start_time},%20${this.event.date_string}`;\n    }\n\n    constructor(private _dialog: MatDialog) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.show_attendees = !!this.search;\n        }\n    }\n\n    public openEditModal() {\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking: this.event\n                }\n            }\n        );\n    }\n}\n","<div class=\"visitor-booking\" *ngIf=\"event\" [class.showing]=\"show_attendees\">\n    <div class=\"details\" [class.blur]=\"search\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'event' }\"></app-icon>\n        </div>\n        <div class=\"time\">\n            <ng-container *ngIf=\"!event.all_day\">\n                {{ event.start_time }} <span> - {{ event.duration > 0 ? event.end_time : '' }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"event.all_day\">All Day</ng-container>\n        </div>\n        <div class=\"host\">\n            <div class=\"staff\">S</div>\n            <div class=\"name\">{{ event.organiser?.name || event.organiser_email }}</div>\n        </div>\n        <div class=\"title\">{{ event.title }}</div>\n        <div class=\"location\">{{ event.space?.name || event.location }}</div>\n        <div class=\"status\">{{ status }}</div>\n        <div class=\"actions\">\n            <a mat-icon-button matTooltip=\"Email Visitors\" name=\"email-all\" [href]=\"mail_url | safe:'url'\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n                ></action-icon>\n            </a>\n            <button mat-icon-button name=\"checkin-all\" matTooltip=\"Checkin All Visitors\">\n                <action-icon\n                    [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n                ></action-icon>\n            </button>\n            <button mat-icon-button matTooltip=\"Edit Visitors\" name=\"edit\" (tapped)=\"openEditModal()\">\n                <action-icon [icon]=\"{ class: 'material-icons', content: 'edit' }\"></action-icon>\n            </button>\n        </div>\n        <div class=\"toggle\">\n            <button mat-icon-button name=\"show-attendees\" (tapped)=\"show_attendees = !show_attendees\">\n                <app-icon\n                    [icon]=\"{\n                        class: 'material-icons',\n                        content: show_attendees ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\n                    }\"\n                ></app-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"attendees\" [@show]=\"show_attendees ? 'show' : 'hide'\">\n        <div class=\"bar\"></div>\n        <a-visitor *ngFor=\"let item of event.attendees\" [event]=\"event\" [person]=\"item\" [search]=\"search\"></a-visitor>\n    </div>\n</div>\n","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    switchMap,\n    catchError,\n    map,\n    first\n} from 'rxjs/operators';\n\nimport { Space } from 'src/app/services/data/spaces/space.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { BaseDirective } from 'src/app/shared/base.directive';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'visitor-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class VisitorTimelineComponent extends BaseDirective implements OnInit {\n    /** Currently selected date */\n    @Input() public date: number;\n    /** Filter string */\n    @Input() public search: string;\n    /** List of visitor bookings for the current date */\n    public visitor_bookings: Booking[] = [];\n    /** List of filtered bookings */\n    public filtered_bookings: Booking[] = [];\n    /** Whether visitor list is loading */\n    public loading: boolean;\n    /** List of items from an API search */\n    public search_results$: Observable<Booking[]>;\n    /** Subject holding the value of the search */\n    public readonly search$ = new Subject<string>();\n\n    /** Display string for the selected date */\n    public get date_display() {\n        const date = dayjs(this.date);\n        return date.isSame(dayjs(), 'd') ? 'Today' : date.format('DD MMM YYYY');\n    }\n\n    public get active_index(): number {\n        /* istanbul ignore else */\n        if (this.date_display === 'Today') {\n            const date = dayjs().startOf('m').valueOf();\n            return this.filtered_bookings.findIndex(bkn => date > bkn.date);\n        }\n        return -1;\n    }\n\n    constructor(private _service: ApplicationService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this._service.Organisation.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.initBookings();\n            this.subscription(\n                'building',\n                this._service.Organisation.listen('active_building').subscribe(_ =>\n                    this.search$.next(`${this.date}|${_.id}`)\n                )\n            );\n            this.interval('update_bookings', () => this.search$.next(`${this.date}|${dayjs().unix()}`), 30 * 1000);\n        });\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.date) {\n            this.search$.next(`${this.date}`);\n        }\n        /* istanbul ignore else */\n        if (changes.search) {\n            this.filtered_bookings = this.filter(this.search);\n        }\n    }\n\n    /** Filter the visitor bookings */\n    public filter(str: string = '') {\n        const search = str.toLowerCase();\n        return this.visitor_bookings.filter(booking => {\n            return booking.attendees.find(\n                user =>\n                    user.name.toLowerCase().indexOf(search) >= 0 ||\n                    user.email.toLowerCase().indexOf(search) >= 0\n            );\n        });\n    }\n\n    private initBookings() {\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(100),\n            distinctUntilChanged(),\n            switchMap(_ => {\n                this.loading = true;\n                const date = dayjs(this.date).startOf('d');\n                const zone = this._service.Organisation.building.id;\n                return this._service.Spaces.query({\n                    zone_ids: zone,\n                    available_from: date.unix(),\n                    available_to: date.endOf('d').unix()\n                });\n            }),\n            catchError(_ => of([])),\n            map((list: Space[]) => {\n                const bookings: Booking[] = list.reduce(\n                    (items, space) => items.concat(space.bookingsFor(this.date)),\n                    []\n                );\n                bookings.sort((a, b) => a.date - b.date);\n                return bookings.filter(bkn => bkn.has_visitors);\n            })\n        );\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe(list => {\n                this.loading = false;\n                this.visitor_bookings = list;\n                this.filtered_bookings = this.filter(this.search);\n            })\n        );\n    }\n}\n","<div class=\"visitor-timeline\">\n    <div class=\"loader\" *ngIf=\"loading\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div class=\"heading\">\n        <div class=\"icon\"></div>\n        <div class=\"time\">Time</div>\n        <div class=\"host\">Host</div>\n        <div class=\"title\">Title</div>\n        <div class=\"location\">Location</div>\n        <div class=\"state\">Status</div>\n    </div>\n    <div class=\"list\">\n        <ng-container *ngIf=\"filtered_bookings && filtered_bookings.length; else empty_state\">\n            <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === -1)\">\n                <div class=\"triangle\"></div>\n            </div>\n            <ng-container *ngFor=\"let booking of filtered_bookings; let i = index\">\n                <a-visitor-booking [event]=\"booking\" [search]=\"search\"></a-visitor-booking>\n                <div class=\"current-line\" *ngIf=\"date_display === 'Today' && (active_index === i)\">\n                    <div class=\"triangle\"></div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n<ng-template #empty_state>\n    <div class=\"info-block\">\n        <div class=\"icon\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n        </div>\n        <div class=\"text\">No visitors {{ search ? 'matching ' + '\"' + search + '\"' : '' }} for {{ date_display }}</div>\n    </div>\n</ng-template>\n","import { Component, Input, SimpleChanges, Renderer2, ElementRef, OnChanges } from '@angular/core';\n\nimport { User } from 'src/app/services/data/users/user.class';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\n\n@Component({\n    selector: 'a-visitor',\n    templateUrl: './visitor.component.html',\n    styleUrls: ['./visitor.component.scss']\n})\nexport class VisitorComponent implements OnChanges {\n    /** Booking that the user is assoicated with */\n    @Input() public event: Booking;\n    /** User details to display */\n    @Input() public person: User;\n    /** Search filter string */\n    @Input() public search: string;\n    /** Status of the visitor */\n    public status: string;\n\n    /** Whether user is a match for  */\n    public get is_match(): boolean {\n        const search = (this.search || '').toLowerCase();\n        return (\n            this.person.name.toLowerCase().indexOf(search) >= 0 ||\n            this.person.email.toLowerCase().indexOf(search) >= 0\n        );\n    }\n\n    /** URL for mailing all attendees of the event */\n    public get mail_url(): string {\n        return `mailto:${this.person.email}?subject=\"${this.event.title}\"%20at%20${\n            this.event.start_time\n        },%20${this.event.date_string}${\n            this.event.organiser_email.toLowerCase() !== this.person.email\n                ? '&cc=' + this.event.organiser_email\n                : ''\n        }`;\n    }\n\n    constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.search) {\n            if (this.search && !this.is_match) {\n                this._renderer.addClass(this._element.nativeElement, 'not-match');\n            } else {\n                this._renderer.removeClass(this._element.nativeElement, 'not-match');\n            }\n        }\n    }\n}\n","<div class=\"icon\">\n    <app-icon [icon]=\"{ class: 'material-icons', content: 'face' }\"></app-icon>\n</div>\n<div class=\"details\">\n    <div class=\"user\">\n        <div class=\"staff\" *ngIf=\"!person.external\">S</div>\n        <div class=\"name\">{{ person?.name || person?.email }}</div>\n    </div>\n    <div class=\"title\"></div>\n    <div class=\"status\" *ngIf=\"person.external\">{{ status }}</div>\n    <div class=\"actions\">\n        <a mat-icon-button matTooltip=\"Email Visitor\" [href]=\"mail_url | safe:'url'\">\n            <action-icon\n                [icon]=\"{ class: 'material-icons', content: 'mail' }\"\n            ></action-icon>\n        </a>\n        <button mat-icon-button matTooltip=\"Checkin Visitor\">\n            <action-icon *ngIf=\"person.external\"\n                [icon]=\"{ class: 'material-icons', content: 'event_available' }\"\n            ></action-icon>\n        </button>\n        <button mat-icon-button [disabled]=\"true\"></button>\n    </div>\n    <div class=\"empty\"></div>\n</div>\n<div class=\"bar\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ApplicationService } from 'src/app/services/app.service';\nimport { Booking } from 'src/app/services/data/bookings/booking.class';\nimport {\n    VisitorsFormModalComponent,\n    VisitorsFormModalData\n} from './overlays/visitors-form-modal/visitors-form-modal.component';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-visitors',\n    templateUrl: './visitors.component.html',\n    styleUrls: ['./visitors.component.scss']\n})\nexport class VisitorsComponent implements OnInit {\n    /** Currently selected date */\n    public date: string;\n    /** Search filter string */\n    public search_str: string;\n\n    constructor(private _dialog: MatDialog, private _service: ApplicationService) {}\n\n    ngOnInit(): void {}\n\n    public newVisitorMeeting() {\n        let date = dayjs();\n        date = date.minute(Math.ceil(date.minute() / 5) * 5);\n        const building = this._service.Organisation.building;\n        const space = this._service.Spaces.find(building.visitor_space || building.holding_bay);\n        const booking = new Booking({ date: date.valueOf(), duration: -1, room_id: [space.email] });\n        this._dialog.open<VisitorsFormModalComponent, VisitorsFormModalData>(\n            VisitorsFormModalComponent,\n            {\n                data: {\n                    booking\n                }\n            }\n        );\n    }\n}\n","<div class=\"visitors\">\n    <a-sidebar></a-sidebar>\n    <div class=\"group\">\n        <a-topbar-header [(date)]=\"date\" (dateChange)=\"search_str = ''\">\n            <div class=\"input-wrapper\">\n                <mat-form-field [class.rounded]=\"true\" appearance=\"outline\">\n                    <app-icon [icon]=\"{ class: 'material-icons', content: 'search' }\" matPrefix></app-icon>\n                    <input matInput [(ngModel)]=\"search_str\" name=\"visitor-name\" placeholder=\"Search...\" />\n                    <button mat-icon-button matSuffix *ngIf=\"search_str\" (tapped)=\"search_str = ''\">\n                        <app-icon [icon]=\"{ class: 'material-icons', content: 'close' }\"></app-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </a-topbar-header>\n        <main>\n            <visitor-timeline [date]=\"date\" [search]=\"search_str\"></visitor-timeline>\n        </main>\n    </div>\n    <button mat-button name=\"new\" class=\"new-item\" (tapped)=\"newVisitorMeeting()\">\n        <div class=\"content\">\n            <div class=\"material-icons\">add</div>\n            <div class=\"text\">Add Visitors</div>\n        </div>\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { SharedContentModule } from 'src/app/shared/shared.module';\nimport { VisitorTimelineComponent } from './timeline/timeline.component';\nimport { VisitorBookingItemComponent } from './timeline/item/item.component';\nimport { VisitorComponent } from './timeline/visitor/visitor.component';\nimport { VisitorsFormModalComponent } from './overlays/visitors-form-modal/visitors-form-modal.component';\nimport { EventFormComponent } from './overlays/visitors-form-modal/event-form/event-form.component';\nimport { VisitorFormComponent } from './overlays/visitors-form-modal/visitor-form/visitor-form.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: ':level', component: VisitorsComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorTimelineComponent,\n        VisitorBookingItemComponent,\n        VisitorComponent,\n        VisitorsFormModalComponent,\n        EventFormComponent,\n        VisitorFormComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n    ],\n})\nexport class VisitorsModule {}\n"],"sourceRoot":"webpack:///"}