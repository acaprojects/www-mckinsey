{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/debug-outlet.component.ts.DebugOutletComponent.html","webpack:///src/app/debug-outlet.component.ts","webpack:///src/app/overlays/booking-modal/booking-modal.component.html","webpack:///src/app/overlays/booking-modal/booking-modal.component.ts","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.html","webpack:///src/app/overlays/confirm-modal/confirm-modal.component.ts","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.html","webpack:///src/app/overlays/embedded-control-modal/embedded-control-modal.component.ts","webpack:///src/app/overlays/overlays.module.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/data/base-api.class.ts","webpack:///src/app/services/data/base.service.ts","webpack:///src/app/services/data/bookings/booking.class.ts","webpack:///src/app/services/data/bookings/booking.utilities.ts","webpack:///src/app/services/data/bookings/bookings.service.ts","webpack:///src/app/services/data/organisation/building.class.ts","webpack:///src/app/services/data/organisation/organisation.class.ts","webpack:///src/app/services/data/organisation/organisation.service.ts","webpack:///src/app/services/data/polling/polling.service.ts","webpack:///src/app/services/data/spaces/space.class.ts","webpack:///src/app/services/data/spaces/space.utilities.ts","webpack:///src/app/services/data/spaces/spaces.service.ts","webpack:///src/app/services/data/systems-manager/systems-manager.service.ts","webpack:///src/app/services/data/users/user.class.ts","webpack:///src/app/services/data/users/user.utilities.ts","webpack:///src/app/services/data/users/users.service.ts","webpack:///src/app/services/debug.service.ts","webpack:///src/app/services/hotkeys.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/app/shared/base.class.ts","webpack:///src/app/shared/base.component.ts","webpack:///src/app/shared/components/duration-field/duration-field.component.html","webpack:///src/app/shared/components/duration-field/duration-field.component.ts","webpack:///src/app/shared/components/time-field/time-field.component.html","webpack:///src/app/shared/components/time-field/time-field.component.ts","webpack:///src/app/shared/components/user-search-field/user-search-field.component.html","webpack:///src/app/shared/components/user-search-field/user-search-field.component.ts","webpack:///src/app/shared/directives/binding/binding.directive.ts","webpack:///src/app/shared/globals/application.ts","webpack:///src/app/shared/globals/form-fields.ts","webpack:///src/app/shared/globals/overlay-register.ts","webpack:///src/app/shared/mocks/index.ts","webpack:///src/app/shared/mocks/systems.mock.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/utilities/api.utilities.ts","webpack:///src/app/shared/utilities/formatting.utilities.ts","webpack:///src/app/shared/utilities/general.utilities.ts","webpack:///src/app/shared/utilities/validation.utilities.ts","webpack:///src/app/shell/bootstrap/bootstrap.component.html","webpack:///src/app/shell/bootstrap/bootstrap.component.ts","webpack:///src/app/shell/panel-array/panel-array.component.html","webpack:///src/app/shell/panel-array/panel-array.component.ts","webpack:///src/app/shell/panel-select/panel-select.component.html","webpack:///src/app/shell/panel-select/panel-select.component.ts","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.html","webpack:///src/app/shell/panel/booking-actions/booking-actions.component.ts","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.html","webpack:///src/app/shell/panel/custom-actions/custom-actions.component.ts","webpack:///src/app/shell/panel/panel.component.html","webpack:///src/app/shell/panel/panel.component.ts","webpack:///src/app/shell/panel/space-details/space-details.component.html","webpack:///src/app/shell/panel/space-details/space-details.component.ts","webpack:///src/app/shell/panel/timeline/timeline.component.html","webpack:///src/app/shell/panel/timeline/timeline.component.ts","webpack:///src/app/shell/shell.component.html","webpack:///src/app/shell/shell.component.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/version.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","AppRoutingModule","AppComponent","window","app_loaded","AppModule","console","log","production","DebugOutletComponent","_debug","show","logs","BookingModalComponent","item","service","booking","Bookings","date","data","form_metadata","space_field","form_fields","find","field","key","space","setValue","date_field","valueOf","title_field","title","closing","timeout","close","fields","forEach","i","control","markAsDirty","valid","reduce","fields_valid","length","sub_fields_valid","sub_field","loading","post","on_error","map","push","config","content","ConfirmModalComponent","body","description","action","icon","EmbeddedControlModalComponent","countdown","control_url","interval","tick","OVERLAYS","SharedOverlaysModule","ApplicationService","_app_ref","_zone","_title","_router","_cache","_settings","_overlay","_analytics","_hotkeys","_systems","_organisation","_users","_bookings","_spaces","_polling","_route_trail","_subjects","_observers","parent","set","undefined","isStable","pipe","_","subscribe","run","_stable","setupCache","waitForSettings","registerOverlays","get","type","msg","on_action","notify","args","stream","force","query","route","Array","url","navigate","queryParams","preserveFragment","pop","name","getValue","next","value","asObservable","initialised","init","setupComposer","enabled","setting","load","debug","application","listen","clear","_initialised","settings","protocol","location","host","domain","hostname","port","use_domain","origin","mock","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","local_login","use_iframe","token_header","localStorage","setItem","href","unsub","isEnabled","activateUpdate","subscription","available","event","current","hash","setInterval","checkForUpdate","reload","overlay","register","app_name","title_suffix","setTitle","getTitle","BaseDataClass","raw_data","changeEvents","zone_id","email","Math","floor","random","toLowerCase","_form_metadata","_form_fields","changed","changes","showErrors","form","formValues","update","add","task_name","parameters","task","initialiseFormFields","json","changed_fields","metadata","field_list","values","formChanges","edit","required","attributes","a","isValid","BaseAPIService","_subscribers","_promises","_compare","b","_list_filter","_name","_api_route","engine","endpoint","engine_endpoint","filterFn","list","query_params","update_list","cache","reject","result","d","process","results","updateList","form_data","new_item","analyticsEvent","post_data","_task","delay","stopPoll","sub","_poll","error","complete","removeItem","remove_ids","item_id","index","findIndex","splice","label","Analytics","raw_item","old_list","compareFn","new_list","mixed_list","found","Booking","_display","u_service","Users","icaluid","subject","Subject","start","start_epoch","Start","duration","end","end_epoch","End","diff","notes","visitors","catering","_attendees","attendees","organiser","organizer","owner","addFrom","_organiser","_location","format","time","_space_list","room_ids","u","form_settings","user","actions","validators","terms","requiredTrue","formatters","recurrence","custom_elements","defaults","process_field","f","control_type","references","refs","hide","flex","indexOf","now","isBefore","subtract","Spaces","space_names","level","BOOKING_COUNT","BOOKING_DATE","minute","startOf","setMockBookingStartDatetime","generateMockBooking","productName","fill","paragraph","city","getFreeBookingSlots","min_size","slots","sort","bkn_start","bkn_end","isAfter","getNextFreeBookingSlot","second","block","BookingsService","localeCompare","options","Overlay","open","toJSON","create","notifySuccess","notifyError","request","count","staff","num_staff","partners","num_partners","staff_id","period","Systems","execute","err","Building","zone","_extras","extras","extra_id","extra_name","_loan_items","loan_items","_levels","levels","level_id","level_name","_roles","roles","_lockers","lockers","locker_structure","systems","_phone_numbers","phone_numbers","longitude","latitude","_searchables","neighbourhoods","lvl","hasOwnProperty","lvl_features","feature","split","filter","Object","_zones","Organisation","OrganisationService","bld_id","buildings","building","bld","ids","bld_list","_active_building","getItem","loadOrganisation","loadBuildings","loadLevels","tags","org_data","shown_error","bld_data","lvl_data","PingHistory","history","last_ping","room_email","room_id","SECONDS","MINUTES","PollingService","OPTION_DEFAULTS","Space","_level","levelWithID","zones","long_name","map_id","book_type","can_search","searchable","can_control","controlable","hourly_rate","cost_hour","bookable","setup","breakdown","capacity","was_available","raw_bookings","bookings","id_list","removeFrom","_linked_spaces","linked_rooms","linked_spaces","day","isSame","rm","bkn","status","booking_list","bookingsFor","SPACE_COUNT","generateMockSpace","firstName","lastName","linked","join","SpacesService","respond","available_spaces","j","v","SystemsManagerService","_list","sys_id","mod_id","loadSystems","offset","limit","toPromise","details","total","User","first_name","last_name","windows_id","visitor","phone","mobile","business_unit","department","organisation","organisation_id","organisation_name","external","staff_code","fmno","_delegates","delegates","Location","desk","l","USER_COUNT","USER_DOMAIN","USER_EMAILS","generateMockUser","companyName","delegate_count","min","phoneNumber","UsersService","uhttp","token","expiry","endOf","client_id","hashStr","sessionStorage","go","headers","append","tries","current_user","clearTimeout","DebugService","_old_log","_old_info","info","_old_warn","warn","_old_debug","_old_error","_logs","reverse","newLogMessage","call","Date","INVALID_STANDALONE_KEYS","HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","addEventListener","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","state","replace","key_list","non_meta","SettingsService","http","api","local","session","_app_name","build","built","core_version","version","loadFromFile","app","colors","file","file_name","BaseClass","_timers","_intervals","_subscriptions","fn","Function","setTimeout","clearInterval","unsubscribe","BaseComponent","CustomDurationFieldComponent","group","block_size","controls","date_control","valueChanges","calculateAvailableDurations","room","space_control","updateDisplay","active_duration","new_opt","option","abs","max_duration","min_duration","slot","CustomTimeFieldComponent","calculateAvailableTimes","times","from_ref","active_time","ceil","date_str","book_ahead","hour","CustomUserSearchFieldComponent","filtered_list","search$","search_results$","searching","q","slice","search_str","match_name","match_email","BindingDirective","_element","_renderer","params","modelChange","init_listener","bindVariable","listener","unbind","event_listener","sys","mod","bind","ngOnDestroy","on_event","nativeElement","binding","model","emit","exec","FORM_FIELDS","OVERLAY_REGISTER","LETTERS","NUMBERS","SPACE_LIST","IMAGES","createSystem","bindings","touch_enabled","cancel_timeout","has_catering","system","room_name","today","unix","$start_meeting","last_meeting_started","$cancel_meeting","reason","$waiter_call","MOCK_SYSTEMS","USER_LIST","handlers","method","callback","handler","COMPONENTS","ENTRY_COMPONENT","SharedContentModule","toQueryString","str","formatAttendeesWithHost","formatAttendees","attendee_str","users","formatDate","formatTime","formatPeriodWithDuration","t","formatPeriod","timestamp","parts","formatDuration","RECURRENCE_PERIODS","formatRecurrence","formatSpaces","getItemWithKeys","shift","isMobileDevice","r","navigator","userAgent","match","isMobileSafari","agent","isAndroidChrome","padZero","toString","unique","array","el","pos","arr","humaniseDuration","short","h","m","filterList","items","filters","word","regex","RegExp","item_list","JSON","parse","stringify","match_count","match_index","matched","matches","tokens","k","matchToHighlight","timeToDate","flatten","an_array","stack","res","HAS_ERROR","validateDate","is_from","from","message","buildValidateStartTime","c","validateStartTime","date_obj","buildValidateDuration","max","validateDuration","buildValidateAttendees","validateAttendees","invalid","BootstrapComponent","system_list","selected_system","queryParamMap","has","clearBootstrap","system_id","manual_input","bootstrap","checkBootstrapped","configure","BookingPanelArrayComponent","_service","is_ready","logo","inverse","BookingPanelSelectComponent","system_name","system_icon","system_status","active_system","reset","PanelBookingActionsComponent","no_booking","last_confirm","default_title","startMeeting","meeting","endMeeting","pending_timeout","business_start","business_end","last_started","is_endable","block_end","ask_end","confirmEnd","pending_start","pending_end","ask_start","confirmStart","PanelCustomActionsComponent","callWaiter","toISOString","BookingPanelComponent","_route","show_time","interactive","paramMap","websocket_connected","space_name","hide_all","_status","show_title","can_cancel","last_cancel","status_overrides","updateStatus","PanelSpaceDetailsComponent","PanelTimelineComponent","time_blocks","generateTimelineBlocks","round","start_offset","in_use","checkBookings","todays_bookings","block_start","hide_status","block_time","ShellWrapperComponent","info_messages","message_index","page","events","updateMessage","reload_at_time","environment","VERSION"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ShellWrapperComponent,\n        children: [\n            { path: 'bootstrap', component: BootstrapComponent },\n            { path: 'panel/:system_id', component: BookingPanelComponent },\n            { path: 'panel-array', component: BookingPanelArrayComponent },\n            { path: 'panel-select', component: BookingPanelSelectComponent },\n            { path: '**', redirectTo: 'bootstrap' }\n        ]\n    },\n    { path: '**', redirectTo: 'bootstrap' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div class=\"app\">\n    <router-outlet></router-outlet>\n    <debug-outlet></debug-outlet>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: [\n        './styles/app.component.scss',\n        './styles/custom-element.styles.scss',\n        './styles/native-element.styles.scss',\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {\n    constructor() {\n        (window as any).app_loaded = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport './shared/mocks';\n\nimport { AGoogleAnalyticsModule } from '@acaprojects/ngx-google-analytics';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nimport { SharedOverlaysModule } from './overlays/overlays.module';\nimport { SharedContentModule } from './shared/shared.module';\n\nimport { ShellWrapperComponent } from './shell/shell.component';\nimport { BootstrapComponent } from './shell/bootstrap/bootstrap.component';\nimport { BookingPanelComponent } from './shell/panel/panel.component';\nimport { PanelTimelineComponent } from './shell/panel/timeline/timeline.component';\nimport { PanelSpaceDetailsComponent } from './shell/panel/space-details/space-details.component';\nimport { PanelBookingActionsComponent } from './shell/panel/booking-actions/booking-actions.component';\nimport { PanelCustomActionsComponent } from './shell/panel/custom-actions/custom-actions.component';\nimport { BookingPanelArrayComponent } from './shell/panel-array/panel-array.component';\nimport { BookingPanelSelectComponent } from './shell/panel-select/panel-select.component';\nimport { DebugOutletComponent } from './debug-outlet.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ShellWrapperComponent,\n        BootstrapComponent,\n        BookingPanelComponent,\n        PanelTimelineComponent,\n        PanelSpaceDetailsComponent,\n        PanelBookingActionsComponent,\n        PanelCustomActionsComponent,\n        BookingPanelArrayComponent,\n        BookingPanelSelectComponent,\n        DebugOutletComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        AGoogleAnalyticsModule,\n        SharedOverlaysModule,\n        SharedContentModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {\n        console.log('Production:', !!environment.production);\n    }\n}\n","\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    ","import { Component } from '@angular/core';\nimport { DebugService } from './services/debug.service';\n\n@Component({\n    selector: 'debug-outlet',\n    template: `\n        <div class=\"toggle-space\" (click)=\"show = !show\"></div>\n        <div class=\"debug-outlet\" *ngIf=\"show\">\n            <h4>Debug logs</h4>\n            <div class=\"list\">\n                <div class=\"log\" *ngFor=\"let log of log_list | async\">\n                    {{ log.time | date:'HH:mm:ss' }} <span>[{{log.level}}]</span> {{ log.content | json }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .toggle-space {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 2em;\n            width: 2em;\n            z-index: 9999;\n        }\n\n        .debug-outlet {\n            position: absolute;\n            bottom: .5em;\n            left: .5em;\n            background-color: #fff;\n            border-radius: 4px;\n            z-index: 999;\n            box-shadow: 0 1px 3px 1px rgba(0,0,0, .2),\n                        0 1px 1px 0 rgba(0,0,0, .14),\n                        0 2px 1px -1px rgba(0,0,0, .12);\n        }\n\n        h4 { width: 100%; border-bottom: 1px solid #ccc; margin: 0; padding: .5rem }\n\n        .log {\n            font-size: .7em;\n            font-family: monospace;\n            padding: .5em;\n            white-space: nowrap;\n        }\n\n        .log:nth-child(2n) {\n            background-color: rgba(0,0,0,0.05);\n        }\n\n        span {\n            font-family: monospace;\n            opacity: .8;\n        }\n\n        .list {\n            max-height: 20em;\n            max-width: 40em;\n            overflow: auto;\n        }\n    `]\n})\nexport class DebugOutletComponent {\n\n    public show: boolean = false;\n\n    public get log_list() {\n        return this._debug.logs;\n    }\n\n    constructor(private _debug: DebugService) {}\n}\n","<div class=\"modal booking\" widget [class.is-loading]=\"loading\" [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">New Booking</div>\n    </div>\n    <div class=\"body\" *ngIf=\"!loading\">\n        <div class=\"form\" *ngIf=\"booking\">\n            <a-dynamic-form [fields]=\"booking.form_fields\"></a-dynamic-form>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"loading\">\n        <div class=\"info-block\">\n            <div class=\"icon\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n            <div class=\"text\">Processing request...</div>\n        </div>\n    </div>\n    <div class=\"footer\" *ngIf=\"!loading\">\n        <button widget name=\"close\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"save\" (tapped)=\"save()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Booking } from '../../services/data/bookings/booking.class';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\nimport * as dayjs from 'dayjs';\n\nexport interface BookingData {\n    booking: Booking;\n    on_error: () => void;\n    close: () => void;\n}\n\n@Component({\n    selector: 'booking-modal',\n    templateUrl: './booking-modal.component.html',\n    styleUrls: ['./booking-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(\n                    200,\n                    style({\n                        opacity: 0,\n                        transform: 'translateX(-100%) scale(0)'\n                    })\n                )\n            ])\n        ])\n    ]\n})\nexport class BookingModalComponent extends BaseComponent implements OnInit {\n    /** Whether modal is closing */\n    public closing: boolean;\n    /** New Booking instance */\n    public booking: Booking;\n    /** Whether the modal is processing a booking request */\n    public loading: boolean;\n\n    constructor(private item: OverlayItem, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.booking = new Booking(this.service.Bookings, {\n            date: this.item.data.date,\n            form_metadata: { ...this.item.data }\n        });\n        const space_field = this.booking.form_fields.find(field => field.key === 'space');\n        if (this.item.data.space && space_field) {\n            space_field.setValue(this.item.data.space);\n        }\n        const date_field = this.booking.form_fields.find(field => field.key === 'date');\n        if (date_field) {\n            date_field.setValue(this.item.data.date || dayjs().valueOf());\n        }\n        const title_field = this.booking.form_fields.find(field => field.key === 'title');\n        if (title_field) {\n            title_field.setValue(this.item.data.title || '');\n        }\n    }\n\n    /**\n     * Closes the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n    }\n\n    /**\n     * Post form data\n     */\n    public save() {\n        const fields = this.booking.form_fields;\n        fields.forEach(i => i.control.markAsDirty());\n        const valid = fields.reduce(\n            (fields_valid, field) =>\n                fields_valid &&\n                (field.control.valid ||\n                    (field.children &&\n                        field.children.length &&\n                        field.children.reduce(\n                            (sub_fields_valid, sub_field) => sub_fields_valid && sub_field.control.valid,\n                            true\n                        ))),\n            true\n        );\n        if (this.booking && valid) {\n            this.loading = true;\n            this.item.post('finish', {\n                booking: this.booking,\n                on_error: () => (this.loading = false),\n                close: () => this.close()\n            });\n        } else {\n            console.log(\n                'Invalid form fields. Valid states:',\n                fields.map(field => `${field.key}:${field.control.valid}`)\n            );\n        }\n    }\n}\n\nOVERLAY_REGISTER.push({\n    id: 'booking',\n    config: { content: BookingModalComponent, config: 'modal' }\n});\n","<div class=\"confirm modal\" widget [@show] *ngIf=\"!closing\">\n    <div class=\"header\">\n        <div class=\"text\">{{ title || 'Confirm' }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"icon\" *ngIf=\"icon\">\n            <i *ngIf=\"icon.class\" [class]=\"icon.class\">{{ icon.value }}</i>\n            <img *ngIf=\"!icon.class && icon.src\" [src]=\"icon.src\">\n        </div>\n        <div class=\"content\">\n            <p>{{ content || 'Are you sure?' }}</p>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <button widget name=\"cancel\" (tapped)=\"close()\">Cancel</button>\n        <button widget name=\"accept\" (tapped)=\"accept()\">{{ action || 'Ok' }}</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateX(100%) scale(0)' }),\n                animate(200, style({ opacity: 1, transform: 'translateX(0%) scale(1)' }))\n            ]),\n            transition(':leave', [\n                style({ opacity: 1, transform: 'translateX(0%) scale(1)' }),\n                animate(200, style({ opacity: 0, transform: 'translateX(-100%) scale(0)' }))\n            ])\n        ])\n    ]\n})\nexport class ConfirmModalComponent extends BaseComponent implements OnInit {\n    /** Title of the confirm modal */\n    public title: string;\n    /** Body of the confirm modal */\n    public content: string;\n    /** Display text on the confirm button */\n    public action: string;\n    /** Display icon properties */\n    public icon: { class?: string; value?: string; src?: string };\n    /** Whether modal is closing */\n    public closing: boolean;\n\n    constructor(private item: OverlayItem) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.title = data.title || 'Confirm';\n            this.content = data.content || data.body || data.description || 'Confirm';\n            this.action = data.action || 'Ok';\n            this.icon = data.icon;\n        }\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.closing = true;\n        this.timeout('close', () => this.item.close());\n\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public accept() {\n        this.item.post('finish');\n        this.close();\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'confirm', config: { content: ConfirmModalComponent, config: 'modal' } });\n","<div class=\"background\"></div>\n<div class=\"modal control\" [@show] (window:touchend)=\"reset()\" (window:mouseup)=\"reset()\">\n    <div class=\"control-frame\">\n        <iframe [src]=\"control_url | safe:'resource'\"></iframe>\n    </div>\n</div>\n<div class=\"overlay\">\n    <button widget class=\"action countdown\" (tapped)=\"reset()\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n    <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n        <div class=\"icon\">\n            <i class=\"material-icons\">close</i>\n        </div>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\n\nimport { OverlayItem } from '@acaprojects/ngx-overlays';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { OVERLAY_REGISTER } from '../../shared/globals/overlay-register';\n\n@Component({\n    selector: 'embedded-control-modal',\n    templateUrl: './embedded-control-modal.component.html',\n    styleUrls: ['./embedded-control-modal.component.scss'],\n    animations: [\n        trigger('show', [\n            transition(':enter', [style({ opacity: 0 }), animate(500, style({ opacity: 1 }))]),\n            transition(':leave', [style({ opacity: 1 }), animate(1000, style({ opacity: 0 }))]),\n        ]),\n    ],\n})\nexport class EmbeddedControlModalComponent extends BaseComponent implements OnInit {\n    /** Control URL to embed into the modal */\n    public control_url: string;\n    /** Display value for the time remain until the modal automatically closes */\n    public countdown: number;\n\n    constructor(private item: OverlayItem) {\n        super();\n        this.countdown = 30;\n    }\n\n    public ngOnInit(): void {\n        const data = this.item.data;\n        if (data) {\n            this.control_url = data.control_url;\n        }\n        if (!this.control_url) {\n            this.close();\n        }\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.item.close();\n        this.countdown = 30;\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        this.countdown = 30;\n        this.interval('countdown', () => this.tick(), 1000);\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n\nOVERLAY_REGISTER.push({ id: 'embeded-control', config: { content: EmbeddedControlModalComponent, config: 'modal' } });\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedContentModule } from '../shared/shared.module';\n\nimport { ConfirmModalComponent } from './confirm-modal/confirm-modal.component';\nimport { EmbeddedControlModalComponent } from './embedded-control-modal/embedded-control-modal.component';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\n\nconst OVERLAYS: Type<any>[] = [\n    ConfirmModalComponent,\n    EmbeddedControlModalComponent,\n    BookingModalComponent\n];\n\n@NgModule({\n    declarations: [\n        ...OVERLAYS\n    ],\n    imports: [\n        CommonModule,\n        SharedContentModule\n    ],\n    exports: [\n        ...OVERLAYS\n    ],\n    entryComponents: [\n        ...OVERLAYS\n    ]\n})\nexport class SharedOverlaysModule {}\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { SwUpdate } from '@angular/service-worker';\n\nimport { listenForToken, setup, PlaceAuthOptions, token, hasToken } from '@placeos/ts-client';\nimport { AOverlayService } from '@acaprojects/ngx-overlays';\nimport { GoogleAnalyticsService } from '@acaprojects/ngx-google-analytics';\n\nimport { Observable, BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nimport { BaseClass } from '../shared/base.class';\nimport { SettingsService, ConsoleStream } from './settings.service';\nimport { HashMap } from '../shared/utilities/types.utilities';\n\nimport { OVERLAY_REGISTER } from '../shared/globals/overlay-register';\nimport { ComposerSettings } from '../shared/utilities/settings.interfaces';\n\nimport { HotkeysService } from './hotkeys.service';\nimport { OrganisationService } from './data/organisation/organisation.service';\nimport { UsersService } from './data/users/users.service';\nimport { BookingsService } from './data/bookings/bookings.service';\nimport { SpacesService } from './data/spaces/spaces.service';\nimport { SystemsManagerService } from './data/systems-manager/systems-manager.service';\nimport { PollingService } from './data/polling/polling.service';\nimport { first, delay } from 'rxjs/operators';\n\ndeclare global {\n    interface Window {\n        application: ApplicationService;\n        mock: {\n            enabled: boolean;\n            backend: any;\n        };\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApplicationService extends BaseClass {\n    /** List of previous routes for return navigation */\n    private _route_trail: string[] = [];\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Whether the application has stablised */\n    private _stable: boolean;\n\n    /** Whether the application has stablised */\n    public get is_stable(): boolean {\n        return this._stable || false;\n    }\n\n    constructor(\n        private _app_ref: ApplicationRef,\n        private _zone: NgZone,\n        private _title: Title,\n        private _router: Router,\n        private _cache: SwUpdate,\n        private _settings: SettingsService,\n        private _overlay: AOverlayService,\n        private _analytics: GoogleAnalyticsService,\n        private _hotkeys: HotkeysService,\n        private _systems: SystemsManagerService,\n        private _organisation: OrganisationService,\n        private _users: UsersService,\n        private _bookings: BookingsService,\n        private _spaces: SpacesService,\n        private _polling: PollingService\n    ) {\n        super();\n        this._organisation.parent = this._users.parent = this._bookings.parent = this._spaces.parent = this._polling.parent = this;\n        this.set('system', null);\n        this.log('APP', `Waiting for Application to stablised...`, undefined, undefined, true);\n        this._app_ref.isStable.pipe(first((_) => _)).subscribe(() => {\n            this.log('APP', `Application has stablised.`, undefined, undefined, true);\n            this._zone.run(() => {\n                this._stable = true;\n                this.setupCache();\n                this.waitForSettings();\n                this.registerOverlays();\n            });\n        });\n    }\n\n    /** Overlay service */\n    public get Overlay(): AOverlayService {\n        return this._overlay;\n    }\n\n    /** Analytics service */\n    public get Analytics() {\n        return this._analytics;\n    }\n\n    /** Hotkeys service */\n    public get Hotkeys() {\n        return this._hotkeys;\n    }\n\n    /** Systems Manager service */\n    public get Systems() {\n        return this._systems;\n    }\n\n    /** Organisation service */\n    public get Organisation() {\n        return this._organisation;\n    }\n\n    /** Users service */\n    public get Users() {\n        return this._users;\n    }\n\n    /** Bookings service */\n    public get Bookings() {\n        return this._bookings;\n    }\n\n    /** Spaces service */\n    public get Spaces() {\n        return this._spaces;\n    }\n\n    /**\n     * Get a setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        return this._settings.get(key);\n    }\n\n    /** Name of the application */\n    public get name() {\n        return this._settings.app_name;\n    }\n\n    /**\n     * Title of the page\n     */\n    public set title(value: string) {\n        const title_suffix = this.setting('app.title');\n        this._title.setTitle(`${value ? value + ' | ' : ''}${title_suffix}`);\n    }\n\n    /**\n     * Title of the page\n     */\n    public get title(): string {\n        return this._title.getTitle();\n    }\n\n    /** Root API Endpoint */\n    public get endpoint() {\n        return `/api/staff/`;\n    }\n\n    /** Root API Endpoint for engine */\n    public get engine_endpoint() {\n        return `/control/api/`;\n    }\n\n    /**\n     * Create notification popup\n     * @param type CSS Class to add to the notification\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notify(type: string, msg: string, action?: string, on_action?: () => void): void {\n        const content = `<div class=\"icon\"><i class=\"material-icons\"></i></div><div class=\"text\">${msg}</div>`;\n        this._overlay.notify(content, action, on_action, type);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifySuccess(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('success', msg, action, on_action);\n    }\n\n    /**\n     * Create success notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyError(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('error', msg, action, on_action);\n    }\n\n    /**\n     * Create info notification popup\n     * @param msg Message to display on the notificaiton\n     * @param action Display text for the callback action\n     * @param on_action Callback of action on the notification\n     */\n    public notifyInfo(msg: string, action?: string, on_action?: () => void): void {\n        this.notify('info', msg, action, on_action);\n    }\n\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false): void {\n        this._settings.log(type, msg, args, stream, force);\n    }\n\n    /**\n     * Navigate to the given path\n     * @param path Path or array of path parts\n     * @param query Key value pairs to add to the URL as query parameters\n     */\n    public navigate(path: string | string[], query?: HashMap): void {\n        const route = path instanceof Array ? [...path] : [path];\n        this._route_trail.push(this._router.url);\n        this._router.navigate(route, query ? { queryParams: query } : { preserveFragment: true });\n    }\n\n    /**\n     * Navigate to the previous location in the route trail\n     */\n    public navigateBack(): void {\n        if (this._route_trail && this._route_trail.length > 0) {\n            const path = this._route_trail.pop();\n            this._router.navigate([path]);\n        } else {\n            this._router.navigate(['']);\n        }\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string, next: (_: U) => void): Subscription {\n        return this._observers[name] ? this._observers[name].subscribe(next) : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    public set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /** Wait for settings to be initialised before setting up the application */\n    private waitForSettings() {\n        this.log('SYSTEM', 'Waiting for settings...');\n        // Wait until the settings have loaded before initialising\n        this._settings.initialised.pipe(first(_ => _)).subscribe(() => this.init());\n    }\n\n    /**\n     * Initialise application services\n     */\n    private async init() {\n        await this.setupComposer().catch(_ => _);\n        listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(_ => {\n            this._users.init();\n            // Setup analytics\n            this._analytics.enabled = !!this.setting('app.analytics.enabled');\n            if (this._analytics.enabled) {\n                this._analytics.load(this.setting('app.analytics.tracking_id'));\n            }\n            // Add service to window if in debug mode\n            if (window.debug) {\n                window.application = this;\n            }\n            this._hotkeys.listen(['Shift', 'Backslash'], () => {\n                this.navigate('bootstrap', { clear: true });\n            });\n            this._organisation.init();\n            this._bookings.init();\n            this._spaces.init();\n            this._polling.init();\n            this._initialised.next(true);\n        });\n    }\n\n    /**\n     * Initialise the composer library comms\n     */\n    private setupComposer(): Promise<void> {\n        this.log('SYSTEM', 'Setting up composer...');\n        // Get application settings\n        const settings: ComposerSettings = this.setting('composer') || {};\n        const protocol = settings.protocol || location.protocol;\n        const host = settings.domain || location.hostname;\n        const port = settings.port || location.port;\n        const url = settings.use_domain ? `${protocol}//${host}:${port}` : location.origin;\n        const route = settings.route || '';\n        const mock = this.setting('mock');\n        // Generate configuration object\n        const config: PlaceAuthOptions = {\n            auth_type: 'auth_code',\n            scope: 'public',\n            host: `${host}:${port}`,\n            auth_uri: `${url}/auth/oauth/authorize`,\n            token_uri: `${url}/auth/token`,\n            redirect_uri: `${location.origin}${route}/oauth-resp.html`,\n            handle_login: !settings.local_login,\n            use_iframe: true,\n            token_header: true,\n            mock,\n        };\n        if (localStorage) {\n            localStorage.setItem('oauth_redirect', location.href);\n        }\n        this.log('SYSTEM', 'Finsihed setting up composer.');\n        return setup(config);\n    }\n\n    /**\n     * Setup handler for cache change events\n     */\n    private setupCache() {\n        this.unsub('app_stable');\n        this.log('CACHE', `Initialising cache...`);\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Listening to cache events...`);\n            this._cache.activateUpdate();\n            this.subscription(\n                'cache_update',\n                this._cache.available.subscribe((event) => {\n                    const current = `current version is ${event.current.hash}`;\n                    const available = `available version is ${event.available.hash}`;\n                    this.log('CACHE', `Update available: ${current} ${available}`);\n                    this.activateUpdate();\n                })\n            );\n            setInterval(() => {\n                this.log('CACHE', `Checking for updates...`);\n                this._cache.checkForUpdate();\n            }, 5 * 60 * 1000);\n        }\n    }\n\n    /**\n     * Update the cache and reload the page\n     */\n    private activateUpdate() {\n        if (this._cache.isEnabled) {\n            this.log('CACHE', `Activating changes to the cache...`);\n            this._cache.activateUpdate().then(() => location.reload(true));\n        }\n    }\n\n    /**\n     * Pre-register available overlays\n     */\n    private registerOverlays(): void {\n        if (OVERLAY_REGISTER) {\n            for (const overlay of OVERLAY_REGISTER) {\n                this._overlay.register(overlay.id, overlay.config);\n            }\n        }\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { Subject } from 'rxjs';\n\nimport { BaseClass } from '../../shared/base.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\n\nexport interface IDataClassEvent {\n    type: string;\n    metadata: HashMap;\n}\n\nexport class BaseDataClass extends BaseClass {\n    /** Unique Identifier of the object */\n    readonly id: string;\n    /** Human readable name of the object */\n    readonly name: string;\n    /** Email address associated with the object */\n    readonly email: string;\n    /** Subject for change events to the class object */\n    readonly changeEvents = new Subject<IDataClassEvent>();\n    /** Form Fields for the object */\n    protected _form_fields: ADynamicFormField[];\n    /** Metadata to pass to form fields */\n    protected _form_metadata: HashMap;\n\n    constructor(protected service: any, raw_data: HashMap) {\n        super();\n        this.id = raw_data.id || raw_data.zone_id || raw_data.email || `${Math.floor(Math.random() * 9999999999)}`;\n        this.name = raw_data.name;\n        this.email = (raw_data.email || '').toLowerCase();\n        this._form_metadata = raw_data.form_metadata || {};\n    }\n\n    /** Get form field metadata for the object */\n    public get form_fields(): ADynamicFormField[] {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        return this._form_fields;\n    }\n\n    /** Whether form fields are valid */\n    public get valid(): boolean {\n        return this._form_fields ? this._form_fields.reduce((a, i) => a && i.isValid(), true) : false;\n    }\n\n    /** Whether the form has changes */\n    public get changes(): boolean {\n        return this.formChanges().length > 0;\n    }\n\n    /**\n     * Reset the values on the form to their initial state\n     */\n    public resetForm(): void {\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                field.setValue(this[field.key]);\n            }\n        }\n    }\n\n    /**\n     * Get a list of the field names that have changed values\n     */\n    public formChanges(): string[] {\n        const changed: string[] = [];\n        if (this._form_fields) {\n            for (const field of this._form_fields) {\n                if (field.getValue() !== this[field.key]) {\n                    changed.push(field.key);\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Save form changes to server\n     */\n    public save(): Promise<BaseDataClass> {\n        if (this.changes && this.service) {\n            this._form_fields.forEach(i => i.showErrors(true));\n            if (this.valid) {\n                const form = this.formValues();\n                return this.id\n                    ? this.service.update(this.id, form)\n                    : this.service.add(form);\n            }\n        }\n    }\n\n    /**\n     * Delete this item from the server\n     */\n    public delete(): Promise<void> {\n        if (this.id) {\n            return this.service.delete(this.id);\n        }\n    }\n\n    /**\n     * Run task for this item on the service\n     * @param task_name Name of the task\n     * @param parameters Parameters to pass to the task request\n     */\n    public runTask(task_name: string, parameters: HashMap): Promise<void> {\n        if (this.id) {\n            return this.service.task(this.id, task_name, parameters);\n        }\n    }\n\n    /**\n     * Get a map of the field values\n     */\n    public toJSON(): HashMap {\n        if (!this._form_fields) {\n            this._form_fields = this.initialiseFormFields();\n        }\n        const json = this.formValues();\n        json.id = this.id;\n        delete json.changed_fields;\n        return json;\n    }\n\n    /**\n     * Emits change event\n     * @param type Type of change that has occurred\n     * @param metadata Supporting metadata for the event\n     */\n    public emit(type: string, metadata?: HashMap): void {\n        this.changeEvents.next({ type, metadata })\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): BaseDataClass {\n        return new BaseDataClass(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): BaseDataClass {\n        return new BaseDataClass(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Get the mapped values of the form fields\n     */\n    protected formValues(field_list: ADynamicFormField[] = this._form_fields, changes: boolean = true): HashMap {\n        const values: HashMap = {};\n        for (const field of field_list) {\n            if (field.children && field.children.length > 0) {\n                values[field.key] = this.formValues(field.children, false);\n            } else {\n                values[field.key] = field.getValue();\n            }\n        }\n        if (changes) {\n            values.changed_fields = this.formChanges();\n        }\n        return values;\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","\nimport { get, post, put, del } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, Subscription, Subscriber, Subject } from 'rxjs';\n\nimport { BaseDataClass } from './base-api.class';\nimport { BaseClass } from '../../shared/base.class';\nimport { ApplicationService } from '../app.service';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { toQueryString } from '../../shared/utilities/api.utilities';\n\nexport interface IEngineResponse {\n    results: HashMap[];\n    total: number\n}\n\nexport class BaseAPIService<T = BaseDataClass> extends BaseClass {\n    /** Application service */\n    public parent: ApplicationService;\n    /** Display name of the service */\n    protected _name: string;\n    /** API Route of the service */\n    protected _api_route: string;\n    /** Map of state variables for Service */\n    protected _subjects: { [key: string]: BehaviorSubject<any> | Subject<any> } = {};\n    /** Map of observables for state variables */\n    protected _observers: { [key: string]: Observable<any> } = {};\n    /** Map of poll subscribers for API endpoints */\n    protected _subscribers: { [key: string]: Subscriber<any> } = {};\n    /** Map of promises for Service */\n    protected _promises: { [key: string]: Promise<any> } = {};\n    /** Comparison function for service items */\n    protected _compare: (a: T, b: T) => boolean = (a, b) => a === b || (a as any).id === (b as any).id;\n    /** Default filter function for list method */\n    protected _list_filter: (a: T) => boolean = (a) => !!a;\n\n    constructor() {\n        super();\n        this._name = 'Base';\n        this._api_route = 'base';\n        this.set('list', []);\n    }\n\n    /**\n     * Initailise service\n     */\n    public init() {\n        this.load().then(_ => this._initialised.next(true));\n    }\n\n    /**\n     * Get API route for the service\n     * @param engine Whether endpoint is using the application API or engine API\n     */\n    public route(engine: boolean = false) {\n        const endpoint = this.parent ? (engine ? this.parent.engine_endpoint : this.parent.endpoint) : '/api/';\n        return `${endpoint}${this._api_route}`;\n    }\n    /** API Route of the service */\n    public get api_route() {\n        return this._api_route;\n    }\n\n    /**\n     * Get a service related setting from the settings service\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.parent ? this.parent.setting(`app.${this._name.toLowerCase()}.${key}`) : null;\n    }\n\n    /**\n     * Get the current value of the named property\n     * @param name Property name\n     */\n    public get<U = any>(name: string): U {\n        return this._subjects[name] && this._subjects[name] instanceof BehaviorSubject\n            ? (this._subjects[name] as BehaviorSubject<U>).getValue()\n            : null;\n    }\n\n\n    /**\n     * Listen to value change of the named property\n     * @param name Property name\n     * @param next Callback for value changes\n     */\n    public listen<U = any>(name: string): Observable<U> {\n        return this._observers[name] ? this._observers[name] : null;\n    }\n\n    /**\n     * Update the value of the named property\n     * @param name Property name\n     * @param value New value\n     */\n    protected set<U = any>(name: string, value: U): void {\n        if (!this._subjects[name]) {\n            this._subjects[name] = new BehaviorSubject<U>(value);\n            this._observers[name] = this._subjects[name].asObservable();\n        } else {\n            this._subjects[name].next(value);\n        }\n    }\n\n    /**\n     * Get list of loaded items\n     * @param filterFn Function for filtering the list\n     */\n    public list(filterFn: (a: T) => boolean = this._list_filter): T[] {\n        const list = this.get('list') || [];\n        return list.reduce((a, i) => { if (filterFn(i)) { a.push(i); } return a; }, []);\n    }\n\n    /**\n     * Get item with the given id from the loaded items\n     * @param id ID of the item\n     */\n    public item(id: string): T {\n        const list = this.get('list') || [];\n        return list.find(i => i.id === id || i.email === id);\n    }\n\n    /**\n     * Query the index of the API route associated with this service\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public query(query_params: HashMap = { update_list: true }): Promise<T[] | HashMap[]> {\n        let engine = false;\n        let cache = 1000;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n            cache = query_params.cache || 1000;\n            delete query_params.cache;\n        }\n        const query = toQueryString(query_params);\n        const key = `query|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const url = `${this.route(engine)}${query ? '?' + query : ''}`;\n                let result: T[] | HashMap[] = [];\n                get(url).subscribe(\n                    (d: IEngineResponse | HashMap[]) => {\n                        result = d && d instanceof Array\n                            ? d.map(i => this.process(i))\n                            : (d && !(d instanceof Array) && d.results\n                                ? d.results as HashMap[]\n                                : []);\n                    }, e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        if ((!query || (query_params && query_params.update_list)) && result.length > 0 && result[0] instanceof BaseDataClass) {\n                            this.set('list', this.updateList(this.get('list'), result as T[]));\n                        }\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), cache);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Query the API route for a sepecific item\n     * @param id ID of the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public show(id: string, query_params: HashMap = {}): Promise<T> {\n        let engine = false;\n        if (query_params) {\n            engine = !!query_params.engine;\n            delete query_params.engine;\n        }\n        const query = toQueryString(query_params);\n        const key = `show|${id}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const url = `${this.route(engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                get(url).subscribe(\n                    d => result = this.process(d),\n                    e => {\n                        reject(e);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.timeout(key, () => (this._promises[key] = null), 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make post request for a new item to the service\n     * @param form_data Data to post to the server\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public add(form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        if (!this._promises.new_item) {\n            this._promises.new_item = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}${query ? '?' + query : ''}`;\n                let result: T = null;\n                post(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-failed`);\n                        this._promises.new_item = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.get('list'), [result]));\n                        this.analyticsEvent(`create-${this._name.toLowerCase()}-success`);\n                        this._promises.new_item = null;\n                    }\n                );\n            });\n        }\n        return this._promises.new_item;\n    }\n\n    /**\n     * Perform API task for the given item ID\n     * @param id ID of the item\n     * @param task_name Name of the task\n     * @param form_data Map of data to pass to the API\n     */\n    public task<U = any>(id: string, task_name: string, form_data: HashMap = {}): Promise<U> {\n        const query = toQueryString(form_data);\n        const key = `task|${id}|${task_name}|${query}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<U>((resolve, reject) => {\n                const post_data = { ...form_data, id, _task: task_name };\n                const url = `${this.route(form_data.engine)}/${id}/${task_name}`;\n                let result = null;\n                post(url, post_data).subscribe(\n                    d => result = d,\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result as U);\n                        this.analyticsEvent(`${this._name.toLowerCase()}-task-${task_name}-success`, id);\n                        this.timeout(key, () => this._promises[key] = null, 1000);\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Setup a poller for an API endpoint\n     * @param id Show request ID. Leave blank to poll on the query endpoint\n     * @param query_params Map of query paramaters to add to the polled URL\n     * @param delay Delay between each poll event\n     */\n    public poll(id?: string, query_params: HashMap = {}, delay: number = 5000): Observable<T | T[]> {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        this.stopPoll(id, query_params);\n        this._subjects[key] = new Subject<T | T[]>();\n        this._observers[key] = this._subjects[key].asObservable();\n        const sub = this._subjects[key];\n        const query = { ...(query_params || {}), _poll: true };\n        if (id) {\n            this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.show(id, query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        } else {\n            this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            this.interval(key, () => {\n                this.query(query).then((d) => sub.next(d), e => sub.error(e));\n            }, delay);\n        }\n        return this._observers[key];\n    }\n\n    /**\n     * Destroy poller\n     * @param id\n     * @param query_params\n     */\n    public stopPoll(id?: string, query_params: HashMap = {}) {\n        const key = `poll|${id || ''}|${toQueryString(query_params) || ''}`;\n        if (this._subjects[key]) {\n            this._subjects[key].complete();\n            this._subjects[key] = null;\n            this._observers[key] = null;\n        }\n    }\n\n    /**\n     * Make put request for changes to the item with the given id\n     * @param id ID of the item being updated\n     * @param form_data New values for the item\n     * @param query_params Map of query paramaters to add to the request URL\n     */\n    public update(id: string, form_data: HashMap, query_params: HashMap = {}): Promise<T> {\n        const key = `update|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<T>((resolve, reject) => {\n                const query = toQueryString(query_params);\n                const url = `${this.route(query_params.engine)}/${id}${query ? '?' + query : ''}`;\n                let result: T = null;\n                put(url, form_data).subscribe(\n                    d => (result = this.process(d)),\n                    e => {\n                        reject(e);\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-failed`, id);\n                        this._promises[key] = null;\n                    },\n                    () => {\n                        resolve(result);\n                        this.set('list', this.updateList(this.removeItem(this.get('list'), { id } as any), [result]));\n                        this.analyticsEvent(`update-${this._name.toLowerCase()}-success`, id);\n                        this._promises[key] = null;\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Make delete request for the given item\n     * @param id ID of item\n     */\n    public delete(id: string): Promise<void> {\n        const key = `delete|${id}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                const url = `${this.route()}/${id}`;\n                del(url).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        this.set('list', this.removeItem(this.get('list'), ({ id } as any)));\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Add new API item from another service or API class\n     * @param id ID of the item/or service adding the new item\n     * @param data Raw API data for the new item\n     * @param type Adder type\n     */\n    public addFrom(id: string, data: HashMap, type: 'class' | 'service' | 'other' = 'other'): string {\n        const new_item = this.process(data);\n        this.set('list', this.updateList(this.get('list'), [new_item]));\n        return (new_item as any).id;\n    }\n\n    /**\n     * Remove items with the given IDs from the list\n     * @param id ID of the item/or service remove the list of items\n     * @param remove_ids List of item IDs to remove\n     * @param type Remover type\n     */\n    public removeFrom(id: string, remove_ids: string[], type: 'class' | 'service' | 'other' = 'other') {\n        const list = this.get('list');\n        for (const item_id of remove_ids) {\n            const index = list.findIndex(item => item.id === item_id);\n            if (index >= 0) {\n                list.splice(index, 1);\n            }\n        }\n        this.set('list', list);\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            resolve();\n        });\n    }\n\n    /**\n     * Post analytics event for this service\n     * @param action Name of the action to post\n     */\n    protected analyticsEvent(action: string, label?: string) {\n        if (this.parent && this.parent.Analytics) {\n            this.parent.Analytics.event(this._name, `${this.parent.name.toLowerCase()}-${action}`, label);\n        }\n    }\n\n    /**\n     * Convert raw API data into a valid API Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_item: HashMap): T {\n        return raw_item as T;\n    }\n\n    /**\n     * Update recorded list of items\n     * @param old_list Old list of items\n     * @param list List of updated items\n     * @param compareFn Function to compare items to remove duplicates\n     */\n    protected updateList(old_list: T[], list: T[], compareFn: (a: T, b: T) => boolean = this._compare): T[] {\n        if (!list || list.length === 0) { return old_list; }\n        const new_list: T[] = [];\n        const mixed_list = [...list, ...old_list];\n        if (!compareFn) { compareFn = this._compare; }\n        for (const item of mixed_list) {\n            const found = new_list.find(i => compareFn(i, item));\n            if (!found) {\n                new_list.push(item);\n            }\n        }\n        return new_list;\n    }\n\n    /**\n     * Remove the given item from the given list\n     * @param list List of items\n     * @param item Item to remove\n     * @param compareFn Function to compare items\n     */\n    protected removeItem(list: T[], item: T, compareFn?: (a: T, b: T) => boolean) {\n        const new_list = [];\n        if (!compareFn) { compareFn = this._compare; }\n        list.forEach(i => compareFn(item, i) ? null : new_list.push(i));\n        return new_list;\n    }\n}\n","\nimport { formatDate } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { User } from '../users/user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { humaniseDuration } from '../../../shared/utilities/general.utilities';\nimport { Space } from '../spaces/space.class';\nimport { FORM_FIELDS } from '../../../shared/globals/form-fields';\n\nimport { formatAttendeesWithHost, formatRecurrence, formatSpaces } from '../../../shared/utilities/formatting.utilities';\nimport { validateDate, buildValidateDuration, buildValidateAttendees } from '../../../shared/utilities/validation.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { BaseAPIService } from '../base.service';\n\nexport class Booking extends BaseDataClass {\n    /** Unique calendar event ID */\n    readonly icaluid: string;\n    /** Subject or title of the booking */\n    readonly title: string;\n    /** Unix timestamp of the booking start */\n    readonly date: number;\n    /** Length of the booking in minutes */\n    readonly duration: number;\n    /** Description or details of the booking */\n    readonly body: string;\n    /** Supplimentary notes for the booking */\n    readonly notes: string;\n    /** Type of booking */\n    readonly type: string;\n    /** Whether the booking has catering associated with it */\n    readonly catering: boolean;\n    /** String location set in booking */\n    readonly _location: string;\n    /** List of attendee emails associated with the booking */\n    private _attendees: string[];\n    /** Email of the host or organiser of the booking */\n    private _organiser: string;\n    /** List of spaces associated with the booking */\n    private _space_list: string[];\n    /** Cached display strings */\n    private _display: HashMap<string> = {};\n\n    constructor(protected service: BaseAPIService<Booking>, raw_data: HashMap) {\n        super(service, raw_data);\n        const u_service = service.parent.Users;\n        this.icaluid = raw_data.icaluid || this.id;\n        this.title = raw_data.title || raw_data.subject || raw_data.Subject;\n        const start = dayjs(raw_data.date || raw_data.start || raw_data.start_epoch * 1000 || raw_data.Start);\n        this.date = start.valueOf();\n        this.duration = raw_data.duration || dayjs(raw_data.end || raw_data.end_epoch * 1000 || raw_data.End).diff(start, 'm');\n        this.body = raw_data.body || raw_data.description;\n        this.notes = raw_data.notes;\n        this.type = raw_data.type || (raw_data.visitors ? 'external' : null) || 'internal';\n        this.catering = raw_data.catering;\n        this._attendees = (raw_data.attendees || raw_data._attendees || []).map(i => u_service.item(i.email) || new User(u_service, i));\n        const organiser = raw_data.organiser || raw_data.organizer || { email: `${raw_data.owner}@fake.org` };\n        if (raw_data.owner) {\n            this.service.parent.Users.addFrom('booking', { name: raw_data.owner, email: `${raw_data.owner}@fake.org` });\n        }\n        this._organiser = organiser.email || raw_data._organiser;\n        this._location = raw_data.location || raw_data._location;\n        this._display = {\n            date: start.format('DD MMM YYYY'),\n            time: `${start.format('h:mma')} - ${dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma')}`,\n            start: start.format('h:mma'),\n            end: dayjs(start)\n                .add(this.duration, 'm')\n                .format('h:mma'),\n            duration: humaniseDuration(this.duration)\n        };\n        this._space_list = raw_data.room_ids || raw_data._space_list;\n        // Add attendees and organiser to service data\n        if (this.service.parent && this.service.parent.Users) {\n            if (raw_data.attendees) {\n                raw_data.attendees.forEach(u => {\n                    if (!this.service.parent.Users.item(u.email)) {\n                        this.service.parent.Users.addFrom(this.id, u, 'class');\n                    }\n                });\n            }\n            if (organiser) {\n                if (!this.service.parent.Users.item(organiser.email)) {\n                    this.service.parent.Users.addFrom(this.id, organiser, 'class');\n                }\n            }\n        }\n    }\n\n    /** List of attendees to the meeting */\n    public get attendees(): User[] {\n        return this.service && this.service.parent && this.service.parent.Users\n            ? this.service.parent.Users.list((user) => this._attendees.indexOf(user.id) >= 0)\n            : [];\n    }\n\n    /** Host or organiser of the meeting */\n    public get organiser(): User {\n        return this.service && this.service.parent && this.service.parent.Users && this._organiser\n            ? this.service.parent.Users.item(this._organiser) : null;\n    }\n\n    /** Status of the booking */\n    public get status(): 'future' | 'upcoming' | 'done' | 'started' | 'in_progress' {\n        const now = dayjs();\n        const date = dayjs(this.date);\n        if (now.isBefore(date.subtract(15, 'm'), 'm')) {\n            return 'future';\n        } else if (now.isBefore(date, 'm')) {\n            return 'upcoming';\n        } else if (now.isBefore(date.add(15, 'm'), 'm')) {\n            return 'started';\n        } else if (now.isBefore(date.add(this.duration, 'm'), 'm')) {\n            return 'in_progress';\n        }\n        return 'done';\n    }\n\n    /** Get the first space from the space list */\n    public get space(): Space {\n        return this.service && this.service.parent && this.service.parent.Spaces && this._space_list && this._space_list.length > 0\n            ? this.service.parent.Spaces.item(this._space_list[0]) : null;\n    }\n    /** Spaces associated with the booking */\n    public get space_list(): Space[] {\n        return this.service && this.service.parent && this.service.parent.Spaces\n            ? this.service.parent.Spaces.list((space) => this._space_list.indexOf(space.id) >= 0)\n            : [];\n    }\n\n    /** Display value for the date */\n    public get date_string(): string {\n        return this._display.date;\n    }\n    /** Display valuie for the start and end times of the booking */\n    public get time_period(): string {\n        return this._display.time;\n    }\n    /** Display value for the start time of the booking */\n    public get start_time(): string {\n        return this._display.start;\n    }\n    /** Display value for the end time of the booking */\n    public get end_time(): string {\n        return this._display.end;\n    }\n    /** Display value for the duration of the booking */\n    public get length_string(): string {\n        return this._display.duration;\n    }\n    /** Display value for the location of the booking */\n    public get location(): string {\n        return this._display.space_names || this._location || 'No location set';\n    }\n    /** Display value for the level of the first space in the booking */\n    public get level(): string {\n        return this._display.level;\n    }\n\n    /**\n     * Create form fields for the object\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const form_fields = [];\n        const form_settings = this.service.setting('fields') || [];\n        const user = this.service.parent.Users.current;\n        const actions = {\n            // space: () => this.setSpace(),\n            // recurrence: () => this.setRecurrence(),\n            // conferencing: (v?) => this.setConferencing(v)\n        };\n        const validators = {\n            date: [validateDate],\n            duration: [buildValidateDuration()],\n            attendees: [buildValidateAttendees(user, this.service.setting('min_attendees'))],\n            terms: [Validators.requiredTrue]\n        };\n        const formatters = {\n            attendees: formatAttendeesWithHost(user),\n            date: formatDate,\n            space: formatSpaces,\n            recurrence: formatRecurrence\n        };\n        const custom_elements = FORM_FIELDS;\n        const defaults = {};\n        const process_field = field => {\n            const f = {\n                key: field.key,\n                label: field.label,\n                icon: field.icon,\n                type: field.control_type || field.type,\n                value: this[field.key] || defaults[field.key] || '',\n                action: field.action || actions[field.key],\n                format: field.format || formatters[field.key],\n                content: field.content || custom_elements[field.key],\n                required: field.required,\n                validators: validators[field.key],\n                references: field.references || field.refs,\n                hide: field.hide,\n                metadata: { ...field.metadata, ...this._form_metadata, service: this.service },\n                attributes: { flex: field.flex },\n                children: field.children ? field.children.map(i => process_field(i)) : null\n            };\n            return new ADynamicFormField(f);\n        };\n        for (const field of form_settings) {\n            if (field.key) {\n                form_fields.push(process_field(field));\n            }\n        }\n        return form_fields;\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Booking {\n        return new Booking(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Booking {\n        return new Booking(this.service, { ...this, id: null, email: null, icaluid: null });\n    }\n}\n","import { padZero } from '../../../shared/utilities/general.utilities';\n\nimport { generateMockUser } from '../users/user.utilities';\n\nimport * as faker from 'faker';\nimport * as dayjs from 'dayjs';\nimport { Booking } from './booking.class';\n\nlet BOOKING_COUNT = 0;\nlet BOOKING_DATE = dayjs().minute(0).startOf('m');\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = dayjs(time).startOf('m');\n}\n\n/**\n * Create mock raw API data for a booking\n * @param id\n */\nexport function generateMockBooking(id?: string) {\n    if (!id) {\n        id = `booking-${BOOKING_COUNT++}`;\n    }\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    const start = BOOKING_DATE.valueOf();\n    const duration = Math.floor(Math.random() * 4) + 30;\n    BOOKING_DATE = BOOKING_DATE.add(Math.floor(Math.random() * 4) + 15, 'm');\n    return {\n        id,\n        icaluid: padZero(Math.floor(Math.random() * 99999999), 8),\n        title: `${faker.commerce.productName()} Meeting`,\n        attendees: Array(Math.floor(Math.random() * 5 + 2))\n            .fill(0)\n            .map(i => generateMockUser()),\n        organiser: generateMockUser(),\n        date: start,\n        duration,\n        description: faker.lorem.paragraph(),\n        notes: faker.lorem.paragraph(),\n        location: faker.address.city(),\n        catering: Math.floor(Math.random() * 34567) % 3 === 0\n    };\n}\n\nexport interface IBookingSlot {\n    start: number;\n    end: number;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeBookingSlots(list: Booking[], min_size: number = 30): IBookingSlot[] {\n    if (!list) { return [{ start: 0, end: dayjs().startOf('m').valueOf() * 10 }] }\n    const slots: IBookingSlot[] = [];\n    let start = dayjs(0);\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = dayjs(booking.date);\n        const bkn_end = bkn_start.add(booking.duration, 'm');\n        if (bkn_start.isAfter(start)) {\n            const diff = bkn_start.diff(start, 'm');\n            if (diff >= min_size) {\n                slots.push({ start: start.valueOf(), end: bkn_start.valueOf() });\n            }\n            start = bkn_end;\n        }\n    }\n    slots.push({ start: start.valueOf(), end: dayjs().startOf('m').valueOf() * 10 })\n    return slots;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeBookingSlot(list: Booking[], date: number = dayjs().valueOf(), min_size: number = 30): IBookingSlot {\n    const slots = getFreeBookingSlots(list, min_size);\n    const time = dayjs(date).startOf('m').second(1);\n    for (const block of slots) {\n        const start = dayjs(block.start).startOf('m');\n        const end = dayjs(block.end).startOf('m');\n        if (start.isAfter(time, 's')) {\n            return block;\n        } else if (time.isBefore(end, 's')) {\n            const duration = end.diff(time, 'm');\n            if (duration >= min_size) {\n                return block;\n            }\n        }\n    }\n    return slots[slots.length - 1];\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Booking } from './booking.class';\nimport { Space } from '../spaces/space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\n\nimport * as dayjs from 'dayjs';\n\nexport interface IBookingOptions {\n    space: Space;\n    date?: number;\n    title?: string;\n    max_duration?: number;\n    min_duration?: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BookingsService extends BaseAPIService<Booking> {\n    constructor() {\n        super();\n        this._name = 'Bookings';\n        this._api_route = 'bookings';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.icaluid.localeCompare(b.icaluid);\n    }\n\n    /**\n     * Open form modal for creating new bookings\n     * @param space Space to make booking in\n     * @param date Default date on the form\n     */\n    public new(options: IBookingOptions) {\n        if (options.space) {\n            this.parent.Overlay.open('booking', {\n                config: 'modal',\n                data: options as any\n            }, (event: { type: string, data: BookingData }) => {\n                const booking = event.data.booking.toJSON();\n                this.timeout('book', () => {\n                    this.create(options.space, booking)\n                        .then(() => {\n                            this.parent.notifySuccess('Booking successfully created');\n                            event.data.close ? event.data.close() : ''\n                        }).catch(_ => {\n                            this.parent.notifyError(`Error creating meeting. ${_}`);\n                            event.data.on_error ? event.data.on_error() : '';\n                        });\n                }, 1000);\n            });\n        }\n    }\n\n    /**\n     * Create new booking with the given properties\n     * @param booking New booking data\n     */\n    private create(space: Space, booking: HashMap) {\n        return new Promise((resolve, reject) => {\n            if (space) {\n                const request = {\n                    title: booking.title,\n                    count: {\n                        staff: booking.num_staff ? +booking.num_staff : 0,\n                        partners: booking.num_partners ? +booking.num_partners : 0,\n                    },\n                    staff_id: '', // data.form.user.staff_code,\n                    start: booking.date.valueOf(),\n                    end: dayjs(booking.date).add(booking.period.duration, 'm').valueOf(),\n                    host: booking.host || booking.user || { name: 'Panel User' }\n                };\n                const module = this.parent.Systems.get(space.id, 'Bookings');\n                if (request && module) {\n                    module.execute('create_meeting', [request]).then(() => {\n                        this.analyticsEvent('create-success');\n                        resolve();\n                    }, (err) => {\n                        this.analyticsEvent('create-failed');\n                        reject(`Error making booking: ${err}`);\n                    })\n                } else {\n                    reject(`No Bookings module found for space ${space.id}`);\n                }\n            } else {\n                reject('No space set for booking');\n            }\n        });\n    }\n\n    protected process(raw_data: HashMap): Booking {\n        return new Booking(this, raw_data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface IMapFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport class Building extends BaseDataClass {\n    /** Engine Zone ID for the building */\n    readonly zone_id: string;\n    /** List of available extras for the building */\n    private _extras: Identity[];\n    /** List of available extra equipment for loan at the building */\n    private _loan_items: Identity[];\n    /** List of available levels for the building */\n    private _levels: Identity[];\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n    /** Map of roles and list of the associated users */\n    private _roles: HashMap<IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: HashMap<string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: HashMap<string>;\n    /** Globe coordiates for the build */\n    private _location: ICoordinates;\n    /** List of zones associated with the building */\n    private _zones: string[];\n    /** Searchable map features */\n    private _searchables: IMapFeature[];\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this._extras = (raw_data.extras || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._loan_items = (raw_data.loan_items || []).map(i => ({ id: i.extra_id || i.id, name: i.extra_name || i.name }));\n        this._levels = (raw_data.levels || []).map(i => ({ id: i.level_id || i.id, name: i.level_name || i.name }));\n        this._roles = raw_data.roles || {};\n        this._lockers = raw_data.lockers || raw_data.locker_structure || {};\n        this._systems = raw_data.systems || {};\n        this._settings = raw_data.settings || {};\n        this._phone_numbers = raw_data.phone_numbers || {};\n        this._location = raw_data.location || { longitude: null, latitude: null };\n        this._searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (raw_data.neighbourhoods.hasOwnProperty(lvl)) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (lvl_features.hasOwnProperty(feature)) {\n                            this._searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /** List of available extras for the building */\n    public get extras(): Identity[] {\n        return [...(this._extras || [])];\n    }\n    /** List of available extras for the building */\n    public get loan_items(): Identity[] {\n        return [...(this._loan_items || [])];\n    }\n    /** List of available levels for the building */\n    public get levels(): Identity[] {\n        return [...(this._levels || [])];\n    }\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter(i => this._roles.hasOwnProperty(i));\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): HashMap<string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): HashMap<string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n    /** Real coordinates */\n    public get location(): ICoordinates {\n        return { ...this._location };\n    }\n    /** List of zones associated with the building */\n    public get zones(): string[] {\n        return [...(this._zones || [])];\n    }\n    /** Searchable map features */\n    public get searchables(): IMapFeature[] {\n        return [...(this._searchables || [])];\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): IMapFeature[] {\n        return (this._searchables || []).filter(i => i.level_id === level_id);\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Building> {\n        throw new Error('Building objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Building objects are readonly and cannot be deleted');\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../../../shared/utilities/general.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport class Organisation extends BaseDataClass {\n    /** Map of custom settings for the building */\n    private _settings: HashMap;\n\n    constructor(protected service: BaseAPIService<Organisation>, raw_data: HashMap) {\n        super(service, raw_data);\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom building setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n\n    /**\n     * Building objects are readonly and cannot be changed\n     */\n    public async save(): Promise<Organisation> {\n        throw new Error('Organisation objects are readonly and cannot be changed');\n    }\n\n    /**\n     * Building objects are readonly and cannot be deleted\n     */\n    public async delete(): Promise<void> {\n        throw new Error('Organisation objects are readonly and cannot be deleted');\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Organisation } from './organisation.class';\nimport { Building } from './building.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrganisationService extends BaseAPIService {\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Actively displayed building */\n    private _active_building: string;\n    /** Whether an error was shown when loading organisation data */\n    private shown_error: boolean;\n\n    constructor() {\n        super();\n        this._name = 'Organisation';\n        this._api_route = 'zones';\n        this.set('buildings', []);\n    }\n\n    /**\n     * Get list of levels for the given building ID\n     * @param bld_id Building ID\n     */\n    public levels(bld_id: string): any[] {\n        return (this.buildings.find(i => i.id === bld_id) || {} as Building).levels;\n    }\n\n    /**\n     * Get a setting from the organisation or active building\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string) {\n        return this.building.setting(key) || this._organisation.setting(key);\n    }\n\n    /** Active building */\n    public get building(): Building {\n        return (this.buildings.find(i => i.id === this._active_building));\n    }\n\n    public set building(bld: Building) {\n        if (bld instanceof Building) {\n            this._active_building = bld.id;\n        } else {\n            this._active_building = bld;\n        }\n    }\n\n    /** List of buildings for the organisation */\n    public get buildings(): Building[] {\n        return this.get<Building[]>('buildings') || [];\n    }\n\n    /**\n     * Get list of available equipment\n     * @param id ID of the building to get the list from. i.e. Defaults to the active building\n     */\n    public getExtras(id: string, bld_id?: string) {\n        const bld = (bld_id ? this.buildings.find(i => i.id === bld_id) : null) || this.building;\n        if (bld && id) {\n            return bld.extras.filter(i => i.id.indexOf(id) >= 0) || [];\n        }\n        return [];\n    }\n\n    /**\n     * Get the first level matching the list of given IDs\n     * @param ids List of ID to search with\n     */\n    public levelWithID(ids: string | string[]) {\n        const list = ids instanceof Array ? ids : [ids];\n        const bld_list = this.buildings;\n        for (const id of list) {\n            for (const bld of bld_list) {\n                for (const lvl of bld.levels) {\n                    if (lvl.id === id) {\n                        return lvl;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Initialise service data\n     */\n    protected load(): Promise<void> {\n        if (localStorage) {\n            this._active_building = localStorage.getItem(`${this.parent.name}.building`);\n        }\n        return new Promise((resolve) => {\n            this.loadOrganisation().then(() => {\n                this.loadBuildings().then(() => {\n                    this.loadLevels().then(() => resolve());\n                });\n            });\n        });\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public loadOrganisation(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'org', engine: true }).then((org_data) => {\n                this._organisation = new Organisation(this as any, org_data[0]);\n                this.set('organisation', this._organisation);\n                this.shown_error = false;\n                resolve();\n            }, _ => {\n                if (!this.shown_error) {\n                    this.shown_error = true;\n                    this.parent.notifyError('Error loading organisation data. Retrying...');\n                }\n                this.timeout('load_org', () => this.loadOrganisation().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public loadBuildings(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'building', engine: true }).then((bld_data) => {\n                const buildings = (bld_data as HashMap[]).map(i => new Building(this as any, i));\n                this.set('buildings', buildings || []);\n                if (!this._active_building && buildings && buildings.length > 0) {\n                    this._active_building = buildings[0].id;\n                }\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading building data. Retrying...');\n                this.timeout('load_bld', () => this.loadBuildings().then(() => resolve()), 1000);\n            });\n        });\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public loadLevels(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.query({ tags: 'level', engine: true }).then((lvl_data) => {\n                resolve();\n            }, _ => {\n                this.parent.notifyError('Error loading level data. Retrying...');\n                this.timeout('load_lvl', () => this.loadLevels().then(() => resolve()), 1000);\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { HashMap } from 'src/app/shared/utilities/types.utilities';\n\nexport interface PollingMetadata {\n    room_id: string;\n    metadata?: HashMap<any>;\n}\n\nexport class PingHistory {\n    /** List of previous poll data */\n    readonly history: PollingMetadata[];\n    /** Unix time in seconds of the last poll request */\n    readonly last_ping: number;\n    /** Email of the associated space */\n    readonly room_email: string;\n    /** ID of the associated space */\n    readonly room_id: string;\n\n    constructor(data: HashMap) {\n        this.history = data.history;\n        this.last_ping = data.last_ping;\n        this.room_email = data.room_email;\n        this.room_id = data.room_id;\n    }\n}\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PollingService extends BaseAPIService<PingHistory> {\n    constructor() {\n        super();\n        this._name = 'Users';\n        this._api_route = 'pings';\n    }\n\n    protected async load() {\n        this.interval('poll_endpoint', () => {\n            this.add({\n                room_id: this.parent.get('system')\n            });\n        }, 10 * MINUTES);\n    }\n\n    public query(...args: any): never {\n        throw new Error('Query method not available for polling endpoint');\n    }\n\n    public show(...args: any): never {\n        throw new Error('Show method not available for polling endpoint');\n    }\n\n    public update(...args: any): never {\n        throw new Error('Put method not available for polling endpoint');\n    }\n\n    public delete(...args: any): never {\n        throw new Error('delete method not available for polling endpoint');\n    }\n\n    protected process(data: HashMap) {\n        return new PingHistory(data);\n    }\n}\n","import { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { Booking } from '../bookings/booking.class';\nimport { BaseAPIService } from '../base.service';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ISpaceAvailabilityOptions {\n    date?: number;\n    duration: number;\n    id?: string;\n    room_ids?: string;\n    bookable?: boolean;\n    rooms?: string;\n    ignore?: string;\n    zone_id?: string;\n    clear?: boolean;\n}\n\nconst OPTION_DEFAULTS: ISpaceAvailabilityOptions = {\n    duration: 60\n};\n\nexport class Space extends BaseDataClass {\n    /** Extends name for the space */\n    readonly long_name: string;\n    /** CSS selector for the location of the space of the level's map */\n    readonly map_id: string;\n    /** Type of space */\n    readonly type: string;\n    /** Whether user can search for this space */\n    readonly can_search: boolean;\n    /** Whether user can open the control URL if available */\n    readonly can_control: boolean;\n    /** Hourly cost for using the space */\n    readonly hourly_rate: number;\n    /** Whether space can be booked by users */\n    readonly bookable: boolean;\n    /** People capacity of the space */\n    readonly capacity: number;\n    /** Index to force order when sorting multiple spaces */\n    readonly sort_priority: number;\n    /** Setup time for bookings in this space */\n    readonly setup: number;\n    /** Breakdown time for bookings in this space */\n    readonly breakdown: number;\n    /** Last returned availability result */\n    readonly was_available: boolean;\n\n    /** Level in which the spaces is associated */\n    private _level: HashMap;\n    /** Bookings associated with the space */\n    private _bookings: string[];\n    /** Engine zones associated with the space */\n    private _zones: string[];\n    /** List of equipment available in the space */\n    private _extras: Identity[];\n    /** List of ids for linked spaces */\n    private _linked_spaces: string[];\n\n    constructor(protected service: BaseAPIService<Space>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        const settings = raw_data.settings || {};\n        this._level = this.service.parent.Organisation.levelWithID(raw_data.zones) || { settings: {} };\n\n        this.long_name = settings.long_name || raw_data.long_name;\n        this.map_id = settings.map_id || raw_data.map_id;\n        this.type = settings.book_type || this._level.book_type || this._level.settings.book_type || raw_data.book_type || raw_data.type || 'book';\n        this.can_search = settings.searchable || raw_data.searchable || raw_data.can_search || false;\n        this.can_control = settings.controlable || raw_data.controlable || raw_data.can_control || false;\n        this.hourly_rate = settings.cost_hour || raw_data.cost_hour || raw_data.hourly_rate || 0;\n        this.bookable = settings.bookable || raw_data.bookable || false;\n        this.setup = ((settings.setup || 0) / 60) || raw_data.setup || 0;\n        this.breakdown = ((settings.breakdown || 0) / 60) || raw_data.breakdown || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.was_available = settings.available || raw_data.available || raw_data.was_available || false;\n\n        this._zones = raw_data.zones || [];\n        const raw_bookings = settings.bookings || raw_data.bookings || [];\n        this._bookings = raw_bookings.map(i => i.id);\n        if (this.service.parent && this.service.parent.Bookings) {\n            if (raw_bookings) {\n                const id_list = [];\n                raw_bookings.forEach(booking => {\n                    let id = booking.id;\n                    this.service.parent.Bookings.removeFrom(this.id, [id], 'class');\n                    id = this.service.parent.Bookings.addFrom(this.id, booking, 'class');\n                    id_list.push(id);\n                });\n                this._bookings = id_list;\n            }\n        }\n        this._extras = [];\n        this._linked_spaces = settings.linked_rooms || raw_data.linked_rooms || raw_data.linked_spaces || [];\n    }\n\n    /** Whether the space has a booking in progress */\n    public get in_use(): boolean {\n        return !!this.current;\n    }\n\n    /** Get any current in progress meeting */\n    public get current(): Booking {\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            const status = bkn.status;\n            if (status === 'in_progress' || status === 'started') {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** Get the next upcoming meeting */\n    public get next(): Booking {\n        const now = dayjs().valueOf();\n        const bookings = this.bookings;\n        for (const bkn of bookings) {\n            if (bkn.date > now) {\n                return bkn;\n            }\n        }\n        return null;\n    }\n\n    /** List of stored bookings for the space */\n    public get bookings(): Booking[] {\n        const booking_list = this.service && this.service.parent && this.service.parent.Bookings\n            ? this.service.parent.Bookings.list((booking) => this._bookings.indexOf(booking.id) >= 0) || []\n            : [];\n        return booking_list.sort((a, b) => a.date - b.date);\n    }\n\n    /** List of bookings for today */\n    public get todays_bookings(): Booking[] {\n        return this.bookingsFor(dayjs().valueOf());\n    }\n\n    /** List of ids for linked spaces */\n    public get linked_spaces() {\n        return [...this._linked_spaces];\n    }\n\n    /** Level in which the space is associated */\n    public get level(): HashMap {\n        return this._level;\n    }\n\n    /** Engine zones associated with the space */\n    public get zones(): string[] {\n        return [...this._zones];\n    }\n\n    /**\n     * Get bookings for space\n     * @param date Date to filter bookings on\n     */\n    public bookingsFor(date?: number): Booking[] {\n        if (date) {\n            const day = dayjs(date);\n            return this.bookings.filter(i => dayjs(i.date).isSame(day, 'd'));\n        } else {\n            return this.bookings;\n        }\n    }\n\n    /**\n     * Whether the space is available.\n     */\n    public isAvailable(options?: ISpaceAvailabilityOptions): Promise<boolean> {\n        options = options\n            ? { ...OPTION_DEFAULTS, ...options, room_ids: this.id }\n            : { ...OPTION_DEFAULTS, room_ids: this.id };\n        return new Promise((resolve) => {\n            (this.service as any).available(options).then((list: Space[]) => {\n                for (const rm of list) {\n                    if (rm.id === this.id) {\n                        return resolve(true);\n                    }\n                }\n                resolve(false);\n            }, () => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): Space {\n        return new Space(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): Space {\n        return new Space(this.service, { ...this, id: null, email: null, _bookings: [] });\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\nimport { generateMockBooking } from '../bookings/booking.utilities';\n\nimport * as faker from 'faker';\nimport { USER_DOMAIN } from '../users/user.utilities';\n\nlet SPACE_COUNT: number = 0;\n\nexport function generateMockSpace(id?: string, zones?: string[]): HashMap {\n    if (!id) {\n        id = `space-${SPACE_COUNT++}`;\n    }\n    const name = `${faker.name.firstName()} ${faker.name.lastName()} Space`;\n    const linked = Math.floor(Math.random() * 99999) % 2 === 0 && SPACE_COUNT > 1;\n    return {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: Math.floor(Math.random() * 20 + 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: faker.commerce.productName(),\n        searchable: Math.floor(Math.random() * 99999) % 2 === 0,\n        controlable: Math.floor(Math.random() * 99999) % 2 === 0,\n        bookable: Math.floor(Math.random() * 99999) % 2 === 0,\n        cost_hour: Math.floor(Math.random() * 300) * 100,\n        setup: Math.floor(Math.random() * 6) * 5,\n        breakdown: Math.floor(Math.random() * 6) * 5,\n        zones: zones || ['zone_lvl-0'],\n        bookings: Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked ? [`space-${Math.floor(Math.random() * (SPACE_COUNT - 1))}`] : []\n    };\n}\n","\nimport { Injectable } from '@angular/core';\n\nimport { BaseAPIService } from '../base.service';\nimport { Space, ISpaceAvailabilityOptions } from './space.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SpacesService extends BaseAPIService<Space> {\n\n    constructor() {\n        super();\n        this._name = 'Space';\n        this._api_route = 'rooms';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this._list_filter = (a: Space) => {\n            const bld = this.parent.Organisation.building;\n            return a.level.bld_id === bld.id;\n        };\n    }\n\n    /**\n     * Get available spaces\n     * @param options\n     */\n    public available(options: ISpaceAvailabilityOptions): Promise<Space[]> {\n        if (!options) { throw new Error('Space avilability requires request options'); }\n        if (!options.date) { options.date = dayjs().startOf('m').valueOf(); }\n        const key = `available|${options.id ? options.id : ''}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise((resolve, reject) => {\n                const respond = (list: Space[]) => {\n                    const available_spaces = list.filter(i => {\n                        const linked = list.filter(j => i.linked_spaces.indexOf(j.id) >= 0);\n                        return i.was_available && linked.reduce((a, v) => a && v.was_available, true);\n                    });\n                    resolve(available_spaces);\n                };\n                const error = (e) => reject(e);\n                if (options.id) {\n                    this.show(options.id, options).then((i) => respond([i]), error);\n                } else {\n                    this.query(options).then(respond, error);\n                }\n            });\n        }\n        return this._promises[key];\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected async load(): Promise<void> {\n        await this.query();\n    }\n\n    /**\n     * Convert raw data into API object\n     * @param raw_data Raw API data\n     */\n    protected process(raw_data: HashMap): Space {\n        return new Space(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, delay } from 'rxjs/operators';\nimport { PlaceSystem, PlaceModuleBinding, listenForToken, getModule, querySystems, hasToken } from '@placeos/ts-client';\n\nimport { BaseClass } from '../../../shared/base.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SystemsManagerService extends BaseClass {\n    /** Subject for System list */\n    private _list = new BehaviorSubject<PlaceSystem[]>([]);\n    /** Observable for system list */\n    public readonly systems = this._list.asObservable();\n\n    constructor() {\n        super();\n        listenForToken().pipe(delay(500), first(_ => hasToken())).subscribe(() => this.load());\n    }\n\n    /** List of available systems */\n    public get list() {\n        return this._list.getValue() || [];\n    }\n\n    /**\n     * Get engine module for the given system\n     * @param sys_id ID of the system to get the module from\n     * @param mod_id ID of the module with the given system\n     * @param index Index of the module\n     */\n    public get(sys_id: string, mod_id: string, index?: number): PlaceModuleBinding {\n        return getModule(sys_id, mod_id, index);\n    }\n\n    /**\n     * Load Systems\n     */\n    protected load() {\n        this.loadSystems();\n    }\n\n    /**\n     * Load one page of systems\n     * @param offset Item offset for the page to load\n     */\n    protected loadSystems(offset: number = 0, limit: number = 2000) {\n        querySystems({ offset, limit })\n            .toPromise()\n            .then((details) => {\n                const systems: PlaceSystem[] = [...this.list, ...details.data];\n                systems.sort((a, b) => (a.name || '').localeCompare(b.name));\n                this._list.next(systems);\n                if (systems.length < details.total) {\n                    this.loadSystems(systems.length);\n                }\n            })\n            .catch((e) => this.timeout('retry', () => this.loadSystems(offset), 2000));\n    }\n}\n","import { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseDataClass } from '../base-api.class';\nimport { HashMap, Identity } from '../../../shared/utilities/types.utilities';\nimport { BaseAPIService } from '../base.service';\n\nexport interface ILocation {\n    x?: number;\n    y?: number;\n    name?: string;\n    map_id?: string;\n    building: string;\n    level: string | Identity;\n    fixed: boolean;\n    loc_id?: string;\n    display?: { [name: string]: string };\n    confidence?: number;\n    another_bld?: boolean;\n    at_desk?: boolean;\n}\n\nexport class User extends BaseDataClass {\n    /** First name of the user */\n    readonly first_name: string;\n    /** Last name of the user */\n    readonly last_name: string;\n    /** Windows user ID */\n    readonly windows_id: string;\n    /** Type of user */\n    readonly type: 'partner' | 'external' | 'internal';\n    /** Contact phone number of the user */\n    readonly phone: string;\n    /** Organisational department the user is part of */\n    readonly business_unit: string;\n    /** Whether user is external from the application's organisation */\n    readonly external: boolean;\n    /** Organisational Identifier for the user */\n    readonly staff_code: string;\n    /** Organisation the user is associated with */\n    private _organisation: Identity;\n    /** Map location of the user */\n    private _location: ILocation;\n    /** List of users that this user can act on behalf */\n    private _delegates: string[];\n\n    constructor(protected service: BaseAPIService<User>, raw_data: HashMap = {}) {\n        super(service, raw_data);\n        this.first_name = raw_data.first_name;\n        this.last_name = raw_data.last_name;\n        this.windows_id = raw_data.email;\n        this.type = raw_data.visitor ? 'external' : raw_data.type || 'internal';\n        this.phone = raw_data.phone || raw_data.mobile;\n        this.business_unit = raw_data.business_unit || raw_data.department;\n        this._organisation = raw_data.organisation || { id: raw_data.organisation_id, name: raw_data.organisation_name };\n        this.external = this.type === 'external';\n        this._location = null;\n        this.staff_code = raw_data.staff_code || raw_data.fmno;\n        this._delegates = raw_data.delegates;\n    }\n\n    /** Organisation the user is associated with */\n    public get organisation() {\n        return this._organisation;\n    }\n\n    /** Map location of the user */\n    public get last_location(): ILocation {\n        return this._location ? { ...(this._location) } : null;\n    }\n\n    /** List of users that this user can act on behalf */\n    public get delegates(): string[] {\n        return [...(this._delegates || [])];\n    }\n\n    /**\n     * Ask the server for the users current location\n     */\n    public locate(): Promise<ILocation> {\n        const service: any = this.service.parent || {};\n        return new Promise((resolve, reject) => {\n            if (service.Location) {\n                service.Location.show(this.id, { desk: this.email }).then(\n                    l => {\n                        this._location = l;\n                        resolve(l);\n                    },\n                    e => reject(e)\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    /**\n     * Whether user is available during the given period\n     * @param start Start time as a unix timestamp with milliseconds\n     * @param end End time as a unix timestamp with milliseconds\n     */\n    public available(start?: number, end?: number): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.service.query({ email: this.email, start, end })\n                .then(l => resolve(l && l.length > 0), _ => resolve(false));\n        });\n    }\n\n    /**\n     * Make a copy of this object\n     */\n    public clone(): User {\n        return new User(this.service, this);\n    }\n\n    /**\n     * Make a copy of this object without identification data\n     */\n    public duplicate(): User {\n        return new User(this.service, { ...this, id: null, email: null });\n    }\n\n    /**\n     * Initialise the form field metadata for the field\n     */\n    protected initialiseFormFields(): ADynamicFormField[] {\n        const edit = !!this.id;\n        const fields: ADynamicFormField[] = [\n            new ADynamicFormField({\n                key: 'name',\n                type: 'input',\n                value: this.name,\n                hide: true\n            }),\n            new ADynamicFormField({\n                key: 'first_name',\n                label: 'First Name',\n                type: 'input',\n                value: this.first_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'last_name',\n                label: 'Last Name',\n                type: 'input',\n                value: this.last_name,\n                required: true\n            }),\n            new ADynamicFormField({\n                key: 'email',\n                label: 'Email',\n                type: 'input',\n                value: this.email,\n                required: true,\n                attributes: { type: 'email' }\n            })\n        ];\n        return fields;\n    }\n}\n","import { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as faker from 'faker';\nimport { padZero, unique } from '../../../shared/utilities/general.utilities';\n\nlet USER_COUNT = 0;\n\nexport let USER_DOMAIN = 'acaprojects.com';\n\nconst USER_EMAILS: string[] = [];\n\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(id?: string, name?: string, external?: boolean): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `${faker.name.firstName()} ${faker.name.lastName()}`;\n    }\n    if (external === undefined) {\n        external = !((Math.random() * 99999) % 2);\n    }\n    const organisation = external ? faker.company.companyName() : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(Math.random() * 4 + 1, USER_EMAILS.length);\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[Math.floor(Math.random() * USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${external ? 'not-' : ''}${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        email,\n        phone: faker.phone.phoneNumber(),\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation\n        },\n        department: faker.commerce.department(),\n        staff_code: padZero(Math.floor(Math.random() * 99999), 5),\n        delegates\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { logout, authorise, invalidateToken, refreshAuthority } from '@placeos/ts-client';\n\nimport { BaseAPIService } from '../base.service';\nimport { User } from './user.class';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport interface ILoginOptions {\n    /** URL to post login request to */\n    url?: string;\n    /** Whether form data is passed in the body of the request */\n    form?: boolean;\n    /** Custom headers to pass into the post request */\n    headers?: HashMap<string>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService extends BaseAPIService<User> {\n    constructor(protected uhttp: HttpClient, protected location: Location) {\n        super();\n        this._name = 'Users';\n        this._api_route = 'users';\n        this._compare = (a, b) => !a.id.localeCompare(b.id) || !a.email.localeCompare(b.email);\n        this.set('current_user', new User(this, { id: 'local_user', name: 'Local User' }));\n    }\n\n    /** Currently logged in user */\n    public get current(): User {\n        return this.get('current_user');\n    }\n\n    /**\n     * Sets the access token and expiry for the user\n     * @param token OAuth bearer token\n     * @param expiry Expiry epoch timestamp in ms\n     * @param reload Whether to reload the page after setting tokens\n     */\n    public setToken(token: string, expiry?: number, reload: boolean = true) {\n        if (!expiry) {\n            expiry = dayjs()\n                .add(7, 'd').endOf('d')\n                .valueOf();\n        }\n        const path = `${location.origin}${this.parent.setting('composer.route') || ''}/oauth-resp.html`;\n        const client_id = Md5.hashStr(path);\n        if (sessionStorage) {\n            sessionStorage.setItem(`${client_id}_access_token`, token);\n            sessionStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (localStorage) {\n            localStorage.setItem(`${client_id}_access_token`, token);\n            localStorage.setItem(`${client_id}_expires_at`, `${expiry}`);\n        }\n        if (reload) {\n            this.location.go(this.location.path());\n        }\n        return path;\n    }\n\n    /**\n     * Post login request to the API\n     * @param query_params Key value pairs to pass into\n     * @param options Options for the login request\n     */\n    public login(query_params: HashMap, options: ILoginOptions = {}): Promise<void> {\n        if (!this._promises['login']) {\n            this._promises['login'] = new Promise<void>((resolve, reject) => {\n                this.set('status', 'loading');\n                let headers = new HttpHeaders();\n                if (!options || options.form !== false) {\n                    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n                }\n                const url = (options ? options.url : '') || '/auth/signin';\n                this.uhttp.post(url, query_params, { headers }).subscribe(\n                    _ => null,\n                    e => reject(e),\n                    () => {\n                        authorise();\n                        resolve();\n                    }\n                );\n            });\n        }\n        return this._promises['login'];\n    }\n\n    /**\n     * Logout of user and redirect to logout URL\n     */\n    public logout() {\n        logout();\n    }\n\n    /**\n     * Load initial data for the service\n     */\n    protected load(tries: number = 0): Promise<void> {\n        this.set('status', 'loading');\n        return new Promise<void>(resolve => {\n            if (tries > 4) {\n                this.set('status', 'invalid');\n                return resolve();\n            }\n            this.show('current', { engine: true }).then(\n                current_user => {\n                    this.set('status', 'available');\n                    this.set('check_initialised', current_user);\n                    this.clearTimeout('load');\n                    if (this.parent && this.parent.setting('app.user.grab_api_details')) {\n                        this.show(current_user.email).then(\n                            user => {\n                                this.set('current_user', user);\n                                resolve();\n                            },\n                            () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n                        );\n                    } else {\n                        resolve();\n                    }\n                },\n                () => this.timeout('load', () => this.load(++tries).then(() => resolve()))\n            );\n        });\n    }\n\n    /**\n     * Convert raw API data into a valid User Object\n     * @param raw_item Raw API data\n     */\n    protected process(raw_data: any): User {\n        return new User(this, raw_data);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DebugLog {\n    /** Logging level of the message */\n    level: 'log' | 'info' | 'warn' | 'debug' | 'error';\n    /** Contents of the log message */\n    content: any;\n    /** Time that the message was logged */\n    time: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DebugService {\n\n    private _old_log = console.log;\n    private _old_info = console.info;\n    private _old_warn = console.warn;\n    private _old_debug = console.debug;\n    private _old_error = console.error;\n\n    /** Store for list of logs */\n    private _logs = new BehaviorSubject<DebugLog[]>([]);\n    /** Observable for list of logs */\n    public readonly logs = this._logs.pipe(map(list => list.reverse()));\n\n    constructor() {\n        console.log = (...args: any[]) => {\n            this.newLogMessage('log', args);\n            this._old_log.call(this, ...args);\n        };\n\n        console.info = (...args: any[]) => {\n            this.newLogMessage('info', args);\n            this._old_info.call(this, ...args);\n        };\n\n        console.warn = (...args: any[]) => {\n            this.newLogMessage('warn', args);\n            this._old_warn.call(this, ...args);\n        };\n\n        console.debug = (...args: any[]) => {\n            this.newLogMessage('debug', args);\n            this._old_debug.call(this, ...args);\n        };\n\n        console.error = (...args: any[]) => {\n            this.newLogMessage('error', args);\n            this._old_error.call(this, ...args);\n        };\n    }\n\n    private newLogMessage(level, content) {\n        const logs = [...this._logs.getValue()];\n        logs.push({ level, content, time: new Date().valueOf() });\n        logs.sort((a, b) => a.time - b.time);\n        this._logs.next(logs);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { unique } from '../shared/utilities/general.utilities';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(this.counter++);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 1) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    next();\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') || code.indexOf('shift') || code.indexOf('control')) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HashMap } from '../shared/utilities/types.utilities';\nimport { getItemWithKeys } from '../shared/utilities/general.utilities';\nimport { BaseClass } from '../shared/base.class';\nimport { VERSION } from 'src/environments/version';\n\nimport * as dayjs from 'dayjs';\n\ninterface SettingsMap {\n    api: HashMap;\n    local: HashMap;\n    session: HashMap;\n    [block: string]: HashMap;\n}\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n    }\n}\n\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService extends BaseClass {\n\n    /** Map of settings */\n    private _settings: SettingsMap = { api: {}, local: {}, session: {} };\n    /** Store for promises */\n    private _promises: { [name: string]: Promise<any> } = {};\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n\n    constructor(private http: HttpClient) {\n        super();\n        const now = dayjs();\n        const build = dayjs(VERSION.time);\n        const built = now.isSame(build, 'd') ? `Today at ${build.format('h:mmA')}` : build.format('D MMM YYYY, h:mmA');\n        this.log('CORE', `${VERSION.core_version}`, null, 'debug', true);\n        this.log('APP', `${VERSION.version} - ${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        await this.loadFromFile('api');\n        /* istanbul ignore next */\n        if (this._settings.api.debug) {\n            window.debug = true;\n        }\n        /* istanbul ignore next */\n        if (this._settings.api.app && this._settings.api.app.name) {\n            this._app_name = this._settings.api.app.name;\n        }\n        this.log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() { return this._app_name; }\n\n    /* istanbul ignore next */\n    /**\n     * Log data to the browser console\n     * @param type Type of message\n     * @param msg Message body\n     * @param args array of argments to log to the console\n     * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n     * @param force Whether to force message to be emitted when debug is disabled\n     */\n    public log(type: string, msg: string, args?: any, stream: ConsoleStream = 'debug', force: boolean = false) {\n        if (window.debug || force) {\n            const colors: string[] = ['color: #E91E63', 'color: #3F51B5', 'color: default'];\n            if (args) {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors, args);\n            } else {\n                console[stream](`%c[${this.app_name}]%c[${type}] %c${msg}`, ...colors);\n            }\n        }\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get(key: string): any {\n        const keys = key.split('.');\n        let value = null;\n        value = getItemWithKeys(keys, this._settings.api) ||\n            getItemWithKeys(keys, this._settings.session) ||\n            getItemWithKeys(keys, this._settings.local);\n        return value;\n    }\n\n    /**\n     * Load setting data from a file\n     * @param name Namespace to add file data to\n     * @param file URL to file to load setting data from\n     */\n    private async loadFromFile(name: string, file: string = 'assets/settings.json', tries: number = 0) {\n        if (file !== 'assets/settings.json' && tries > 5) {\n            return Promise.resolve();\n        }\n        const file_name = file.split('/')[file.split('/').length - 1];\n        // Check if data has been loaded into the global space\n        if (window[file_name] instanceof Object) {\n            this._settings[name] = { ...(this._settings[name] || {}), ...window[file_name] };\n            return Promise.resolve();\n        }\n        const key = `load|${name}|${file}`;\n        if (!this._promises[key]) {\n            this._promises[key] = new Promise<void>((resolve, reject) => {\n                this.http.get(file).subscribe(\n                    (data) => {\n                        this._settings[name] = { ...(this._settings[name] || {}), ...(data || {}) };\n                    }, (e) => {\n                        this.log('Settings', `Failed to load settings from \"${file}\"`);\n                        this._promises[key] = null;\n                        this.timeout(`load_${file_name}`, () => {\n                            this.loadFromFile(name, file, ++tries).then(() => resolve());\n                        })\n                    }, () => resolve()\n                );\n            });\n        }\n        return this._promises[key];\n    }\n\n}\n","import { Subscription, BehaviorSubject } from \"rxjs\";\n\nexport class BaseClass {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: { [name: string]: (Subscription | (() => void)) } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                this._timers[name] = null;\n            }, delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named timeout without a name' : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            this._timers[name] = null;\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name ? 'Cannot create named interval without a name' : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            this._intervals[name] = null;\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | (() => void)) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (this._subscriptions && this._subscriptions[name]) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as Subscription).unsubscribe()\n            } else if (this._subscriptions[name] instanceof Function) {\n                (this._subscriptions[name] as any)();\n            }\n            this._subscriptions[name] = null;\n        }\n    }\n}\n","\nimport { Component, OnDestroy } from '@angular/core';\nimport { BaseClass } from './base.class';\n\n@Component({\n    selector: 'a-very-basic-component-base-that-should-not-be-used',\n    template: ``,\n    styles: [``]\n})\nexport class BaseComponent extends BaseClass implements OnDestroy {\n\n    public ngOnDestroy(): void {\n        // Clear local timers\n        for (const key in this._timers) {\n            if (this._timers.hasOwnProperty(key)) {\n                this.clearTimeout(key);\n            }\n        }\n        // Clear local intervals\n        for (const key in this._intervals) {\n            if (this._intervals.hasOwnProperty(key)) {\n                this.clearInterval(key);\n            }\n        }\n        // Clear local subscriptions\n        for (const key in this._subscriptions) {\n            if (this._subscriptions.hasOwnProperty(key)) {\n                this.unsub(key);\n            }\n        }\n    }\n}\n\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"options\" [(ngModel)]=\"active_duration\" placeholder=\"Select duration...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { getNextFreeBookingSlot } from '../../../services/data/bookings/booking.utilities';\nimport { humaniseDuration } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'custom-duration-field',\n    templateUrl: './duration-field.component.html',\n    styleUrls: ['./duration-field.component.scss']\n})\nexport class CustomDurationFieldComponent extends BaseComponent  {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 15;\n    /** Step size for available times */\n    public active_duration: { id: number, name: string };\n    /** List of available durations */\n    public options: { id: number, name: string }[] = [];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.calculateAvailableDurations()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableDurations();\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     */\n    public updateDisplay() {\n        if (this.options && this.options.length > 0) {\n            if (!this.active_duration) {\n                if (this.field.getValue()) {\n                    this.active_duration = this.options.find(i => i.id === this.field.getValue());\n                }\n                if (!this.active_duration) {\n                    this.active_duration = this.options[0];\n                    this.setValue(this.options[0]);\n                }\n            } else if (!this.options.find(i => i.id === this.active_duration.id)) {\n                let diff = 9999;\n                let new_opt = null;\n                for (const option of this.options) {\n                    if (Math.abs(option.id - this.active_duration.id) < diff) {\n                        diff = Math.abs(option.id - this.active_duration.id);\n                        new_opt = option;\n                    }\n                }\n                if (new_opt) {\n                    this.active_duration = new_opt;\n                    this.setValue(new_opt);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableDurations() {\n        this.options = [];\n        let date = dayjs().startOf('m');\n        const max_duration = this.field.metadata ? this.field.metadata.max_duration || 600 : 600;\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        let end = date.add(max_duration, 'm');\n        if (this.space_control) {\n            // Get times based off available times in space\n            if (this.date_control && this.date_control.value) {\n                date = dayjs(this.date_control.value).startOf('m');\n            }\n            const slot = getNextFreeBookingSlot(this.space_control.value.bookings, date.valueOf(), min_duration);\n            if (slot) {\n                // Check if slot is after the active date\n                date = slot.start > date.valueOf() ? dayjs(slot.start).startOf('m') : date;\n            }\n            end = slot ? dayjs(slot.end).startOf('m') : dayjs(date).add(max_duration, 'm');\n        }\n        end = end.endOf('m');\n        // Get available durations between the date and end times\n        date = date.add(min_duration, 'm').startOf('m');\n        let duration = min_duration;\n        for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n            this.options.push({ id: duration, name: humaniseDuration(duration) });\n            duration += 15;\n            if (this.options.length > Math.floor((max_duration - min_duration) / this.block_size)) {\n                break;\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     */\n    public setValue(block: { id: number, name: string }) {\n        this.field.setValue(block.id);\n    }\n}\n\nFORM_FIELDS.duration = CustomDurationFieldComponent;\n","<div *ngIf=\"group\">\n    <a-dropdown [items]=\"times\" [(ngModel)]=\"active_time\" placeholder=\"Select time...\" (ngModelChange)=\"setValue($event)\"></a-dropdown>\n</div>\n","import { Component } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\nimport { getFreeBookingSlots } from '../../../services/data/bookings/booking.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\ninterface TimeSlot {\n    id: string;\n    name: string;\n    value?: number;\n}\n\n@Component({\n    selector: 'custom-time-field',\n    templateUrl: './time-field.component.html',\n    styleUrls: ['./time-field.component.scss']\n})\nexport class CustomTimeFieldComponent extends BaseComponent {\n    /** Form Control holding date data */\n    public date_control: AbstractControl;\n    /** Form Control holding space data */\n    public space_control: AbstractControl;\n    /** Step size for available times */\n    public block_size = 5;\n    /** Step size for available times */\n    public min_size = this.block_size * 6;\n    /** Step size for available times */\n    public active_time: TimeSlot;\n    /** List of selectable times */\n    public times: TimeSlot[];\n\n    constructor(protected field: ADynamicFormField, public group: FormGroup) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.group.controls.date) {\n                this.date_control = this.group.controls.date;\n                this.subscription('date', this.date_control.valueChanges.subscribe(() => this.updateDisplay(true)));\n            }\n            if (this.group.controls.room || this.group.controls.space) {\n                this.space_control = this.group.controls.room || this.group.controls.space;\n                this.subscription('space', this.space_control.valueChanges.subscribe(() => this.updateDisplay()));\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        this.calculateAvailableTimes();\n        if (this.date_control) {\n            const value = this.date_control.value;\n            if (!this.times.find(block => block.value === value)) {\n                this.setValue(this.times[0]);\n            }\n        }\n    }\n\n    /**\n     * Update the active value displayed on the dropdown\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public updateDisplay(from_ref: boolean = false) {\n        if (this.times) {\n            for (const time of this.times) {\n                if (this.field.getValue() === time.id) {\n                    this.active_time = time;\n                    break;\n                }\n            }\n            if (!this.field.getValue()) {\n                // Initialise with date time set on date control\n                if (this.date_control) {\n                    let date = dayjs(this.date_control.value);\n                    date = date.minute(Math.ceil(date.minute() / 5) * 5);\n                    const date_str = date.format('HH:mm');\n                    for (const time of this.times) {\n                        if (date.valueOf() - time.value <= 0) {\n                            this.active_time = time;\n                            this.setValue(time, true);\n                            break;\n                        }\n                    }\n                }\n                // Set to default value\n                if (!this.field.getValue()) {\n                    this.active_time = this.times[0];\n                    this.setValue(this.times[0], from_ref);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generate a list of times selectable by the user\n     */\n    public calculateAvailableTimes() {\n        this.times = [];\n        let date = dayjs().startOf('m');\n        const book_ahead = this.field.metadata ? this.field.metadata.book_ahead || 660 : 660; // 11 hours default\n        const min_duration = this.field.metadata ? this.field.metadata.min_duration || 30 : 30;\n        if (this.space_control) {\n            // Get times based off available times in space\n            const slots = getFreeBookingSlots(this.space_control.value.bookings, min_duration);\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date)\n                .add(book_ahead, 'm')\n                .endOf('m');\n            for (; date.isBefore(end, 's'); date = date.add(this.block_size, 'm')) {\n                const value = date.valueOf();\n                if (slots.find(i => i.start <= value && value < i.end && dayjs(i.end).diff(date, 'm') >= min_duration)) {\n                    this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n                }\n            }\n        } else {\n            // Get times from now\n            if (date.minute() % this.block_size !== 0) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A') });\n            }\n            date = date.minute(Math.ceil(date.minute() / this.block_size) * this.block_size);\n            const end = dayjs(date).add(book_ahead, 'm');\n            for (; date.isBefore(end); date = date.add(this.block_size, 'm')) {\n                this.times.push({ id: date.format('HH:mm'), name: date.format('h:mm A'), value: date.valueOf() });\n            }\n        }\n        this.updateDisplay();\n    }\n\n    /**\n     * Update the value of the form field\n     * @param value New value\n     * @param from_ref Whether new value was generated from a reference field\n     */\n    public setValue(slot: TimeSlot, from_ref: boolean = false) {\n        this.field.setValue(slot.id);\n        if (this.date_control && !from_ref) {\n            const time = dayjs(slot.value);\n            const date = dayjs(this.date_control.value)\n                .hour(time.hour())\n                .minute(time.minute())\n                .startOf('m');\n            this.date_control.setValue(date.valueOf());\n        }\n    }\n}\n\nFORM_FIELDS.time = CustomTimeFieldComponent;\n","<div class=\"user-search\" widget>\n    <div class=\"search\" a-tooltip [show]=\"show && search_str && filtered_list.length > 0\" (showChange)=\"show = $event\" [content]=\"list\">\n        <div class=\"searchbar\">\n            <input type=\"text\" [(ngModel)]=\"search_str\" (ngModelChange)=\"search($event)\" (blur)=\"reset()\" placeholder=\"Search for host...\" />\n            <div class=\"spinner\" *ngIf=\"searching\">\n                <a-spinner circle-ring color=\"#000\"></a-spinner>\n            </div>\n        </div>\n        <ng-template #list>\n            <div class=\"user-list\">\n                <div class=\"item\" *ngFor=\"let item of filtered_list\" (mouseup)=\"select(item)\" (touchend)=\"select(item)\" feedback>\n                    <div class=\"name\" [innerHTML]=\"item.match_name || item.name\"></div>\n                    <div class=\"email\" [innerHTML]=\"item.match_email || item.email\"></div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged, map, catchError } from 'rxjs/operators';\n\nimport { ADynamicFormField } from '@acaprojects/ngx-dynamic-forms';\n\nimport { BaseComponent } from '../../base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { User } from '../../../services/data/users/user.class';\nimport { filterList, matchToHighlight } from '../../utilities/general.utilities';\nimport { FORM_FIELDS } from '../../globals/form-fields';\n\n@Component({\n    selector: 'custom-user-search-field',\n    templateUrl: './user-search-field.component.html',\n    styleUrls: ['./user-search-field.component.scss']\n})\nexport class CustomUserSearchFieldComponent extends BaseComponent implements OnInit {\n    /** List of users from an API search */\n    public filtered_list: User[] = [];\n    /** List of users from an API search */\n    public search_results$: Observable<User[]>;\n    /** Whether to show list tooltip */\n    public show: boolean;\n    /** Search input field value */\n    public search_str: string;\n    /** Whether a query is in progress */\n    public searching: boolean;\n    /** Subject holding the value of the search */\n    private search$ = new Subject<string>();\n\n    constructor(protected field: ADynamicFormField, protected group: FormGroup, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this.group) {\n            if (this.field.references && this.field.references.length > 0) {\n                const control = this.group.controls[this.field.references[0]];\n                if (control) {\n                    this.subscription('reference', control.valueChanges.subscribe(() => this.updateDisplay()));\n                }\n            }\n            this.subscription('control', this.field.control.valueChanges.subscribe(() => this.updateDisplay()));\n        }\n        // Listen for input changes\n        this.search_results$ = this.search$.pipe(\n            debounceTime(400),\n            distinctUntilChanged(),\n            switchMap(query => {\n                this.searching = true;\n                this.show = true;\n                return query.length >= 3 ? (this.service.Users.query({ q: query.slice(0, 3), cache: 60 * 1000 }) as Promise<User[]>) : Promise.resolve([]);\n            }),\n            catchError((err) => of([])),\n            map(list => {\n                this.searching = false;\n                return filterList(this.search_str, list, ['name', 'email']);\n            })\n        );\n        // Process API results\n        this.search_results$.subscribe(list => {\n            this.filtered_list = list;\n            this.filtered_list.forEach((i: any) => {\n                i.match_name = matchToHighlight(i.match_name);\n                i.match_email = matchToHighlight(i.match_email);\n                return i;\n            });\n        });\n    }\n\n    /**\n     * Search for a user that matches the filter string\n     * @param filter String to filter users on\n     */\n    public search(filter: string) {\n        this.search_str = filter;\n        this.search$.next(filter);\n    }\n\n    /**\n     * Update input display string\n     */\n    public updateDisplay() {\n        const value = this.field.control.value;\n        this.search_str = value ? value.name : '';\n    }\n\n    /**\n     * Reset the display value for the search input\n     */\n    public reset() {\n        this.timeout('reset', () => {\n            const value = this.field.control.value;\n            this.search_str = value ? value.name : '';\n            this.show = false;\n        });\n    }\n\n    /**\n     * Set the active user\n     * @param user New active user\n     */\n    public select(user: User) {\n        if (user) {\n            this.field.setValue(user);\n        }\n        this.timeout('hide', () => {\n        this.show = false;\n        }, 100);\n    }\n}\n\nFORM_FIELDS.host = CustomUserSearchFieldComponent;\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind'\n})\nexport class BindingDirective<T = any> implements OnInit, OnChanges, OnDestroy {\n    /** ID of the system to bind */\n    @Input() public sys: string;\n    /** Class name of the module to bind */\n    @Input() public mod: string;\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string;\n    /** Method to execute */\n    @Input() public exec: string;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string;\n    /** ID of the system to bind to */\n    @Input() public params: any[] = [];\n    /** Current value of the binding */\n    @Input() public model: T;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T>();\n\n    /** Listener for event on host element */\n    private event_listener: () => void;\n    /** Listener for changes to the binding value */\n    private listener: Subscription;\n    /** Listener for initialisation state of composer */\n    private init_listener: Subscription;\n    /** Callback to unbind to the status variable */\n    private unbind: () => void;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {}\n\n    public ngOnInit(): void {\n        this.init_listener = onlineState().subscribe(init => {\n            if (init) {\n                this.bindVariable();\n                if (this.init_listener) {\n                    this.init_listener.unsubscribe();\n                    this.init_listener = null;\n                }\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.listener) {\n            this.listener.unsubscribe();\n            this.listener = null;\n        }\n        if (this.unbind) {\n            this.unbind();\n            this.unbind = null;\n        }\n        if (this.event_listener) {\n            this.event_listener();\n            this.event_listener = null;\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.ngOnDestroy();\n            this.bindVariable();\n        }\n        if (changes.on_event && this.on_event) {\n            if (this.event_listener) {\n                this.event_listener();\n                this.event_listener = null;\n            }\n            this.event_listener = this._renderer.listen(\n                this._element.nativeElement,\n                this.on_event,\n                () => this.execute()\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (authority() && this.bind && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            const binding = module.binding(this.bind);\n            this.unbind = binding.bind();\n            this.listener = binding.listen().subscribe(value => setTimeout(() => {\n                this.model = value;\n                this.modelChange.emit(this.model);\n            }, 10));\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (authority() && this.exec && this.sys && this.mod) {\n            const module = getModule(this.sys, this.mod, this.index);\n            module.execute(this.exec, this.params).then(result => {\n                // Emit exec result if not bound to status variable\n                if (!this.bind) {\n                    this.model = result;\n                    this.modelChange.emit(this.model);\n                }\n            });\n        }\n    }\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T) {\n        this.model = value;\n        this.modelChange.emit(this.model);\n        if (this.exec) {\n            this.execute();\n        }\n    }\n}\n","\nimport * as dayjs from 'dayjs';\n\n/** Version number of the application */\nexport const version = 'local-dev';\n/** Version number of the base application */\nexport const core_version = '1.0.0';\n/** Build time of the application */\nexport const build = dayjs();\n","\nimport { Type } from '@angular/core';\n\n/** List of form field contents mapped to corresponding keys */\nexport const FORM_FIELDS: { [id: string]: Type<any> } = {};","\nimport { IOverlayConfig } from \"@acaprojects/ngx-overlays\";\n\n/** List of Overlays to register on application initialisation */\nexport const OVERLAY_REGISTER: { id: string; config: IOverlayConfig }[] = [];\n","\nimport './systems.mock';\n","\nimport { MockHttpRequestHandlerOptions, registerSystem, registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap } from \"../utilities/types.utilities\";\nimport { generateMockSpace } from \"../../services/data/spaces/space.utilities\";\nimport { setMockBookingStartDatetime } from \"../../services/data/bookings/booking.utilities\";\nimport { generateMockUser } from \"../../services/data/users/user.utilities\";\n\nimport * as dayjs from 'dayjs';\n\ninterface IMockEngineSystem {\n    id?: string;\n    name?: string;\n    [module: string]: HashMap[] | string;\n}\n\nexport interface IBookingPanelBindings {\n    /** Whether user input is enabled */\n    touch_enabled: boolean;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    timeout?: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    cancel_timeout?: number;\n    /** Whether to display hearing assistance UI elements */\n    has_accessability?: boolean;\n    /** URL to embed into the control modal when opened */\n    control_url?: string;\n    /** Whether to display catering UI elements */\n    has_catering?: boolean;\n    /** Whether to hide booking details(title and host) */\n    hide_details?: boolean;\n    /** Whether to hide the title of the displayed bookings */\n    hide_title?: boolean;\n    /** Whether to hide user(host) details */\n    hide_user?: boolean;\n    /** Whether to hide timeline availability */\n    hide_availability?: boolean;\n    /** Whether to disable booking from the UI */\n    booking_disabled?: boolean;\n    /** Whether booking future meetings are allowed */\n    no_timeline_bookings?: boolean;\n    /** Time before the booking end with which the current booking is endable in ms from UTC epoch */\n    is_endable?: number;\n    /** Whether to automatically ask user starting the current meeting */\n    ask_start?: boolean;\n    /** Whether to automatically ask user about ending the active meeting */\n    ask_end?: boolean;\n    /** Default meeting title if the displayed meeting doesn't have one */\n    default_title?: string;\n    /** Hide all meeting related details */\n    hide_all?: boolean;\n    /** Title of the active space */\n    title?: string;\n    /** Description of the active space */\n    description?: string;\n    /** URL of an icon image to display on the UI */\n    icon?: string;\n    /** Whether the space status is displayed on the right */\n    flip_status?: boolean;\n    /** Whether bookings can be automatically cancelled once they expire */\n    can_cancel?: boolean;\n    /** Minimum bookable duration in minutes */\n    min_duration?: number;\n    /** Maximum bookable duration in minutes */\n    max_duration?: number;\n    /** Start time of the business day with format `HH:mm` */\n    business_start?: string;\n    /** End time of the business day with format `HH:mm` */\n    business_end?: string;\n\n}\n\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nconst NUMBERS = '0123456789'.split('');\n\nlet index = 0;\n\nconst SPACE_LIST: any[] = [];\n\nconst IMAGES: string[] = ['large_down', 'large_up', 'small_down', 'small_up'];\n\n/**\n * Create mock engine booking module with appropriate bookings and space data\n */\nfunction createSystem(): IMockEngineSystem {\n    const id = `sys-${LETTERS[Math.floor(index / NUMBERS.length)]}${NUMBERS[(index++) % NUMBERS.length]}`;\n    setMockBookingStartDatetime(dayjs().minute(-50).valueOf());\n    const space = generateMockSpace(id);\n    SPACE_LIST.push(space);\n    const bindings: IBookingPanelBindings = {\n        touch_enabled: true,\n        timeout: 300,\n        cancel_timeout: 600,\n        has_catering: true,\n        control_url: 'https://aca.im/demo/aca/control/',\n        icon: `/assets/img/${IMAGES[Math.floor(Math.random() * IMAGES.length)]}.png`\n    };\n    const system = {\n        id, name: space.name,\n        Bookings: []\n    };\n    system.Bookings.push({\n        ...bindings,\n        room_name: space.name,\n        today: space.bookings,\n        reload: dayjs().add(1, 'h').unix(),\n        $start_meeting: (time: number) => {\n            system.Bookings[0].last_meeting_started = time;\n        },\n        $cancel_meeting: (time: number, reason: string) => {\n            const list = system.Bookings[0].today;\n            system.Bookings[0].today = list.filter(i => i.date !== time);\n        },\n        $waiter_call: () => {\n            console.log(`[MOCK][${id}] Waiter called...`);\n        }\n    });\n    return system;\n}\n\n\nexport const MOCK_SYSTEMS = Array(10).fill(0).map(i => createSystem());\n\nfor (const system of MOCK_SYSTEMS) {\n    registerSystem(system.id, system as any);\n}\n\n// Add mock data for API endpoints\nconst USER_LIST = Array(1000).fill(0).map(i => generateMockUser());\n\nconst handlers: MockHttpRequestHandlerOptions[] = [\n    {\n        path: '/api/engine/v2/systems',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 10, results: MOCK_SYSTEMS })\n    },\n    {\n        path: '/api/staff/rooms',\n        metadata: null,\n        method: 'GET',\n        callback: _ => SPACE_LIST\n    },\n    {\n        path: '/api/staff/users',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST\n    },\n    {\n        path: '/api/engine/v2/users/current',\n        metadata: null,\n        method: 'GET',\n        callback: _ => USER_LIST[0]\n    },\n    {\n        path: '/api/engine/v2/zones',\n        metadata: null,\n        method: 'GET',\n        callback: _ => ({ total: 1, results: [{ id: 'zone_org-1' }] })\n    }\n];\n\nfor (const handler of handlers) {\n    registerMockEndpoint(handler);\n}\n","\nimport { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ADropdownsModule } from '@acaprojects/ngx-dropdown';\nimport { ASpinnerModule } from '@acaprojects/ngx-spinners';\nimport { AButtonsModule } from '@acaprojects/ngx-buttons';\nimport { APipesModule } from '@acaprojects/ngx-pipes';\nimport { AOverlayModule } from '@acaprojects/ngx-overlays';\nimport { ADynamicFormsModule } from '@acaprojects/ngx-dynamic-forms';\nimport { ACustomEventsModule } from '@acaprojects/ngx-custom-events';\n\nimport { BaseComponent } from './base.component';\nimport { CustomUserSearchFieldComponent } from './components/user-search-field/user-search-field.component';\nimport { CustomTimeFieldComponent } from './components/time-field/time-field.component';\nimport { CustomDurationFieldComponent } from './components/duration-field/duration-field.component';\nimport { BindingDirective } from './directives/binding/binding.directive';\n\nconst COMPONENTS: Type<any>[] = [\n    BaseComponent,\n    BindingDirective\n];\n\nconst ENTRY_COMPONENT: Type<any>[] = [\n    CustomUserSearchFieldComponent,\n    CustomTimeFieldComponent,\n    CustomDurationFieldComponent\n]\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT,\n    ],\n    imports: [\n        CommonModule,\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        AOverlayModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ACustomEventsModule,\n        ADynamicFormsModule\n    ],\n    exports: [\n        ADropdownsModule,\n        ASpinnerModule,\n        AButtonsModule,\n        APipesModule,\n        AOverlayModule,\n        ACustomEventsModule,\n        ADynamicFormsModule,\n        ...COMPONENTS,\n        ...ENTRY_COMPONENT\n    ],\n    entryComponents: [\n        ...ENTRY_COMPONENT\n    ]\n})\nexport class SharedContentModule {}\n","import { HashMap } from \"./types.utilities\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key) && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${map[key]}`;\n            }\n        }\n    }\n    return str;\n}\n","\nimport { humaniseDuration } from './general.utilities';\n\nimport { User } from '../../services/data/users/user.class';\nimport { Space } from '../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\n\n// attendees: FormFormatters.attendees(user),\n// date: FormFormatters.date,\n// room: FormFormatters.space,\n// recurrence: FormFormatters.recurrence\n\n/**\n * Get function to create formatted string for a list of users with a host\n * @param host Host user\n */\nexport function formatAttendeesWithHost(host: User): (_: User[]) => string {\n    return (l) => formatAttendees(l, host);\n}\n\n/**\n * Create formatted string from a list of users\n * @param list List of users\n * @param host Owner of the list of users\n */\nexport function formatAttendees(list: User[], host?: User) {\n    let attendee_str: string = '';\n    if (list && list.length > 0) {\n        const users = [...list];\n        if (host) {\n            const result = users.find(a => a.email === host.email);\n            if (result) {\n                users.splice(users.indexOf(result), 1);\n            }\n        }\n        const length = users.length + (host ? 1 : 0);\n        attendee_str = `${length} Attendee${length === 1 ? '' : 's'}; ${host ? host.name : ''}`;\n        for (const item of users) {\n            if (attendee_str) {\n                attendee_str += ', ';\n            }\n            attendee_str += item.name;\n        }\n        attendee_str = attendee_str.replace('; ,', ';');\n    }\n    return attendee_str;\n}\n\n/**\n * Create date formatted string for given date\n * @param date Date to format\n */\nexport function formatDate(date: number) {\n    return dayjs(date).format('DD MMMM YYYY');\n}\n\n/**\n * Create time formatted string for given date\n * @param date Date to format\n */\nexport function formatTime(date: number) {\n    return dayjs(date).format('h:mm A');\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param duration Period duration in minutes\n */\nexport function formatPeriodWithDuration(duration: number) {\n    return (t) => formatPeriod(t, duration);\n}\n\n/**\n * Create formatted string for a period of given duration\n * @param timestamp Start hours and minutes of the period in the format `HH:mm`\n * @param duration Period duration in minutes\n */\nexport function formatPeriod(timestamp: string, duration: number = 60) {\n    const parts = timestamp.split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]);\n    return `${date.format('h:mm A')} - ${date.add(duration, 'm').format('h:mm A')} (${humaniseDuration(duration)})`;\n}\n\n/**\n * Create formatted human readable string for a given duration\n * @param duration Duration in minutes\n */\nexport function formatDuration(duration: number) {\n    return humaniseDuration(duration);\n}\n\n/** Human readable names of applicable recurrence periods */\nexport const RECURRENCE_PERIODS: string[] = ['None', 'Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n/**\n * Create human readable string for recurrence metadata\n * @param value\n */\nexport function formatRecurrence(value: { period: string | number, end: number }) {\n    if (!value || !value.period || value.period as any >= RECURRENCE_PERIODS.length) {\n        return 'No recurrence';\n    }\n    const period = typeof value.period === 'string' ? value.period : RECURRENCE_PERIODS[value.period];\n    const end = value.end ? `until ${dayjs(value.end).format('DD MMM YYYY')}` : 'forever';\n    return `${period} ${end}`;\n}\n\n/**\n * Create human readable string for a room or list of rooms\n * @param list List of spaces/rooms\n */\nexport function formatSpaces(list: Space | Space[]) {\n    if (!list || (list instanceof Array && list.length <= 0)) {\n        return 'No selected space';\n    }\n    if (list instanceof Array) {\n        return list.length === 1 ? list[0].name : `${list.length} Space${list.length !== 1 ? 's' : ''}`;\n    } else {\n        const capacity = list.capacity ? '(' + list.capacity + ' ' + (list.capacity === 1 ? 'person' : 'people') + ')' : '';\n        return `${list.name} ${capacity}`;\n    }\n}\n","import { HashMap } from './types.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys.shift();\n    if (map[key]) {\n        return keys.length > 0 ? getItemWithKeys(keys, map[key]) : map[key];\n    }\n    return null;\n}\n\n/**\n * Checks whether the platform is a mobile device.\n */\nexport function isMobileDevice(): boolean {\n    const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n    return !!navigator.userAgent.match(r);\n}\n\n/**\n * Checks whether the browser is Mobile Safari.\n */\nexport function isMobileSafari(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/iPhone|iPad|iPod/) && agent.match(/AppleWebKit/) && !agent.match('CriOS'));\n}\n\n/**\n * Checks whether the browser is Android Chrome.\n */\nexport function isAndroidChrome(): boolean {\n    const agent = navigator.userAgent;\n    return !!(agent.match(/Android/) && agent.match(/Chrome/));\n}\n\n/**\n * Generate string representation of a number with zeros padding the length\n * @param value Number to pad with zeros\n * @param length Length of the resulting string\n */\nexport function padZero(value: number, length: number): string {\n    let str = value.toString();\n    while (str.length < length) {\n        str = '0' + str;\n    }\n    return str;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique(array: any[], key: string = '') {\n    return array.filter((el, pos, arr) =>\n        arr.indexOf(key ? arr.find(i => i[key] === el[key]) : arr.find(i => i === el)) === pos\n    );\n}\n\n/**\n * Convert duration to human readable string\n * @param duration Duration in minutes\n * @param short Whether to use short form of duration words e.g. hours as h\n */\nexport function humaniseDuration(duration: number, short: boolean = false) {\n    if (!duration || duration < 0) { return ''; }\n    const h = Math.floor(duration / 60);\n    let d = `${h >= 1 ? (h + (short ? 'h' : (' hour' + (h === 1 ? '' : 's')))) : ''}`;\n    if (duration % 60 !== 0) {\n        if (d) { d += short ? ' ' : ', '; }\n        const m = duration % 60;\n        d += `${m >= 1 ? (m + (short ? 'm' : (' minute' + (m === 1 ? '' : 's')))) : ''}`;\n    }\n    return d;\n}\n\n/**\n * Get a filtered list of items\n * @param filter Value to filter on\n * @param items List of results to filter\n * @param fields Fields to check for matches on each item\n */\nexport function filterList<T = HashMap>(filter: string, items?: T[], fields: string[] = ['id']): T[] {\n    let results: any[];\n    // Tokenise filter string\n    const filters = (filter || '').toLowerCase().split(' ');\n    const list = {};\n    for (const f of filters) {\n        if (f) {\n            if (!list[f]) { list[f] = 0; }\n            list[f]++;\n        }\n    }\n    // Group similar tokens\n    const parts = [];\n    for (const f in list) {\n        if (list.hasOwnProperty(f)) {\n            parts.push({ word: f, count: list[f], regex: new RegExp(f, 'gi') });\n        }\n    }\n    parts.sort((a, b) => b.word.length - a.word.length || a.word.localeCompare(b.word));\n    const item_list = JSON.parse(JSON.stringify(items || []));\n    if (filter) {\n        results = item_list.filter(\n            (item) => {\n                let match_count = 0;\n                item.match_index = 65535;\n                item.match = '';\n                const field_list = {};\n                // Initialise field match variables\n                for (const f of fields) {\n                    field_list[f] = {\n                        value: (item[f] || '').toLowerCase(),\n                        index: 65536,\n                        matched: 0\n                    };\n                }\n                // Search for matches with the tokenised filter string\n                for (const i of parts) {\n                    if (i.word) {\n                        // Check fields for matches\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            const index = field.value.indexOf(i.word);\n                            field.index = index < field.index ? index : field.index;\n                            field.matches = (field.value.match(i.regex) || []).length;\n                            field.value = field.value.replace(i.regex, ' ');\n                        }\n                        // Update token match count\n                        for (const f of fields) {\n                            const field = field_list[f];\n                            if (field.matches >= i.count) {\n                                match_count++;\n                                // Update field matches\n                                let changed = 0;\n                                const tokens = (item[`match_${f}`] || item[f] || '').split(' ');\n                                for (const k of tokens) {\n                                    if (changed >= i.count) {\n                                        break;\n                                    }\n                                    if (k.toLowerCase().indexOf(i.word) >= 0 && k.indexOf('`') < 0) {\n                                        tokens[tokens.indexOf(k)] = k.replace(i.regex, '`$&`');\n                                        changed++;\n                                    }\n                                }\n                                item[`match_${f}`] = tokens.join(' ');\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Get field with the most relevent match\n                for (const f of fields) {\n                    const field = field_list[f];\n                    if (field.index < item.match_index && field.index >= 0) {\n                        item.match_index = field.index;\n                        item.match = f;\n                    }\n                }\n                return item.match_index >= 0 && item.match && (match_count >= parts.length);\n            });\n    } else {\n        results = item_list;\n    }\n    // Sort by order of relevence then name\n    results.sort((a, b) => {\n        const diff = a.match_index - b.match_index;\n        return diff === 0 ? a.name.localeCompare(b.name) : diff;\n    });\n    return results;\n}\n\n/**\n * Convert a match string from `filterList` to renderable HTML\n * @param str Match string to change\n */\nexport function matchToHighlight(str: string): string {\n    if (str) {\n        str = str.replace(/\\`[a-zA-Z0-9\\@\\.\\_]*\\`/g, '<span class=\"highlight\">$&</span>');\n        str = str.replace(/\\`/g, '');\n    }\n    return str;\n}\n\n/**\n * Convert time string to ms from UTC epoch for today\n * @param time Time string in the format `HH:mm`\n */\nexport function timeToDate(time: string): number {\n    const parts = (time || '').split(':');\n    const date = dayjs().hour(+parts[0]).minute(+parts[1]).startOf('m');\n    return date.valueOf();\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: (T[] | T)[]): T[] {\n    const stack: any[] = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next: T[] | T = stack.pop();\n        if (next instanceof Array) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { User } from '../../services/data/users/user.class';\n\nimport * as dayjs from 'dayjs';\n\nconst HAS_ERROR = true;\n\n/**\n * Check that control value is a date that is the same or after from date\n * @param control Angular form control\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateDate(control: AbstractControl, is_from: number = dayjs().valueOf()) {\n    const from = dayjs(is_from);\n    const date = dayjs(control.value || undefined);\n    return date.isBefore(from, 'd') ? { date: HAS_ERROR, message: 'Booking needs to be made in the future' } : null;\n}\n\n/**\n * Build start time validation function\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function buildValidateStartTime(date: number, is_from: number = dayjs().valueOf()) {\n    return (c) => validateStartTime(c, date, is_from);\n}\n\n/**\n * Check that control value time is after the comparison date time\n * @param control Angular form control\n * @param date Date of the time to check\n * @param is_from Comparison date(ms from UTC epoch). Defaults to the current time\n */\nexport function validateStartTime(control: AbstractControl, date: number, is_from: number = dayjs().valueOf()) {\n    const now = dayjs(is_from);\n    const parts = control.value.split(':');\n    const date_obj = dayjs(date).hour(+parts[0]).minute(+parts[1]);\n    return date_obj.isBefore(now, 'm') ? { start: HAS_ERROR, message: 'Booking time needs to be made in the future' } : null;\n}\n\nexport function buildValidateDuration(min: number = 30, max: number = 240) {\n    return (c) => validateDuration(c, min, max);\n}\n\nexport function validateDuration(control: AbstractControl, min: number = 30, max: number = 240) {\n    if (control.value < (min || 30)) {\n        return { duration: HAS_ERROR, message: `Minimum booking duration is ${min} minute${min === 1 ? 's' : ''}` };\n    } else if (control.value > (max || 480)) {\n        return { length: HAS_ERROR, message: `Maximum booking duration is ${max} minute${max === 1 ? 's' : ''}` };\n    }\n    return null;\n}\n\nexport function buildValidateAttendees(host: User, min: number = 0) {\n    return (c) => validateAttendees(c, host, min);\n}\n\nexport function validateAttendees(control: AbstractControl, host: User, min: number = 0) {\n    if (!control || !(control.value instanceof Array)) {\n        return min > 0\n            ? { invalid: true, message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you` }\n            : null;\n    }\n    const list: User[] = control.value;\n    if (host) {\n        const result = list.find(a => a.email === host.email);\n        if (result) { list.splice(list.indexOf(result), 1); }\n    }\n    return list.length >= min ? null : {\n        count: true,\n        message: `Minimum of ${min} attendee${min === 1 ? ' is' : 's are'} required other than you`\n    };\n}\n","<div class=\"bootstrap\">\n    <div class=\"options\">\n        <div class=\"header fs-big\">\n            <h1>Booking Panel Setup</h1>\n            <div\n                class=\"toggle\"\n                feedback\n                center=\"true\"\n                *ngIf=\"system_list && system_list.length > 0\"\n                (tapped)=\"manual_input = !manual_input\"\n            >\n                <i class=\"material-icons\">{{ manual_input ? 'list' : 'code' }}</i>\n            </div>\n        </div>\n        <div class=\"body\" *ngIf=\"!loading\">\n            <ng-container *ngIf=\"manual_input; else list_desc\">\n                <p class=\"description\">\n                    Input the Engine System ID to bootstrap\n                </p>\n                <div class=\"content\">\n                    <div class=\"input\" [class.focus]=\"input_focus || system_id\">\n                        <input [(ngModel)]=\"system_id\" (focus)=\"input_focus = true\" (blur)=\"input_focus = false\" />\n                        <div class=\"placeholder\" [class.focus]=\"input_focus\">Engine System ID</div>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #list_desc>\n                <p class=\"description\">\n                    Select the relevent system from the available dropdown\n                </p>\n                <div class=\"content\">\n                    <a-dropdown\n                        klass=\"fill\"\n                        [items]=\"system_list\"\n                        [(ngModel)]=\"selected_system\"\n                        [options]=\"{ can_filter: true }\"\n                        placeholder=\"Select system\"\n                    ></a-dropdown>\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"body\" *ngIf=\"loading\">\n            <div class=\"info-block\">\n                <div class=\"icon\">\n                    <a-spinner circle-ring color=\"#000\"></a-spinner>\n                </div>\n                <div class=\"text\">\n                    Loading system data...\n                </div>\n            </div>\n        </div>\n        <div class=\"footer\" *ngIf=\"!loading\">\n            <button\n                widget\n                [disabled]=\"(manual_input && !system_id) || (!manual_input && (!selected_system || !selected_system.id))\"\n                (tapped)=\"bootstrap()\"\n            >\n                Submit\n            </button>\n        </div>\n    </div>\n</div>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PlaceSystem } from '@placeos/ts-client'\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-bootstrap',\n    templateUrl: './bootstrap.component.html',\n    styleUrls: ['./bootstrap.component.scss']\n})\nexport class BootstrapComponent extends BaseComponent implements OnInit {\n    /** Whether to show manual input for bootstrap ID */\n    public manual_input: boolean;\n    /** List of available systems */\n    public system_list: PlaceSystem[] = [];\n    /** Whether application data is loading */\n    public loading: boolean;\n    /** ID of the system to bootstrap */\n    public system_id: string;\n    /** Selected system to bootstrap */\n    public selected_system: PlaceSystem = null;\n    /** Whether input field is focused */\n    public input_focus: boolean;\n\n    constructor(private service: ApplicationService, private route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.loading = true;\n        this.service.Spaces.initialised.pipe(first(_ => _)).subscribe(() => {\n            this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                if (params.has('clear') && params.get('clear')) {\n                    this.clearBootstrap();\n                }\n                if (params.has('system_id') || params.has('sys_id')) {\n                    this.system_id = params.get('system_id') || params.get('sys_id');\n                    this.manual_input = true;\n                    this.bootstrap();\n                }\n            }));\n            this.subscription('system_list', this.service.Systems.systems.subscribe((systems) => {\n                this.system_list = systems || [];\n                this.manual_input = !this.system_list || this.system_list.length <= 0;\n                this.loading = false;\n            }));\n            this.checkBootstrapped();\n        });\n    }\n\n    /**\n     * Setup the default system for the application to bind to\n     */\n    public bootstrap() {\n        if (this.manual_input && this.system_id) {\n            this.configure(this.system_id);\n        } else if (this.selected_system) {\n            this.configure(this.selected_system.id);\n        }\n    }\n\n    /**\n     * Check if the application has previously been bootstrapped\n     */\n    private checkBootstrapped(): void {\n        if (localStorage) {\n            const system_id = localStorage.getItem('ACA.PANEL.system') || localStorage.getItem('ACA.CONTROL.system');\n            if (system_id) {\n                this.service.log('BOOT', `Already bootstrapped, redirecting to ${system_id}...`);\n                this.service.navigate(['panel', system_id]);\n                return;\n            }\n        }\n        const user = this.service.Users.current;\n        if (user && user.email) {\n            const space = this.service.Spaces.item(user.email);\n            if (space) {\n                this.service.log('BOOT', `Bootstrapped as user, redirecting to ${space.id}...`);\n                this.service.navigate(['panel', space.id]);\n                return;\n            }\n        }\n        this.loading = false;\n    }\n\n    /**\n     * Save the bootstrapped ID and redirect to the panel for that ID\n     * @param system_id System to bootstrap\n     */\n    private configure(system_id: string): void {\n        this.service.log('BOOT', `Bootstrapping system ${system_id}...`);\n        if (localStorage) {\n            localStorage.setItem('ACA.PANEL.system', system_id);\n        }\n        this.service.navigate(['panel', system_id]);\n    }\n\n    /**\n     * Remove any previously set bootstrapping details\n     */\n    private clearBootstrap() {\n        if (localStorage) {\n            localStorage.removeItem('ACA.PANEL.system');\n        }\n    }\n\n}\n\n","<div class=\"panel-array\">\n    <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n        <div\n            class=\"panel-outlet\"\n            *ngFor=\"let id of systems | slice: 0:4; let i = index\"\n            [style.height]=\"systems.length >= 2 ? '50%' : '100%'\"\n        >\n            <app-booking-panel *ngIf=\"id; else empty_state\" [system_id]=\"id\" [show_time]=\"false\" [reverse]=\"i % 2 !== 0\"></app-booking-panel>\n        </div>\n    </ng-container>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel array</div>\n        </div>\n    </ng-template>\n</div>\n<ng-template #empty_state>\n    <div class=\"container\">\n        <div class=\"content center\">\n            <div class=\"logo\" *ngIf=\"logo\">\n                <img [src]=\"logo\"/>\n            </div>\n            <div class=\"time\">{{ time }}</div>\n        </div>\n    </div>\n</ng-template>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BaseComponent } from '../../shared/base.component';\nimport { ApplicationService } from 'src/app/services/app.service';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-booking-panel-array',\n    templateUrl: './panel-array.component.html',\n    styleUrls: ['./panel-array.component.scss']\n})\nexport class BookingPanelArrayComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Application logo */\n    public logo: string;\n\n    /** Display value for the current time */\n    public get time(): string {\n        return dayjs().format('h:mm:ss A')\n    }\n\n    constructor(private route: ActivatedRoute, private _service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n                    if (params.has('system_ids')) {\n                        this.systems = (params.get('system_ids') || '').split(',');\n                    }\n                }));\n                const logo = this._service.setting('app.logo');\n                this.logo = (logo ? logo.inverse : null) || '';\n                this.unsub('app_ready');\n            }\n        }));\n    }\n}\n","<div class=\"panel-select\" (window:mousedown)=\"reset()\" (window:touchstart)=\"reset()\">\n    <div class=\"panel-options\">\n        <ng-container *ngIf=\"systems && systems.length > 0; else none\">\n            <div class=\"item\" *ngFor=\"let id of systems | slice: 0:8; let i = index\" (tapped)=\"system_name[id] ? showPanel(id) : ''\">\n                <div class=\"bindings\" *ngIf=\"id\">\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"system_icon[id]\"></i>\n                    <i binding [sys]=\"id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateStatus(id, $event)\"></i>\n                </div>\n                <div [class]=\"'icon' + (system_status[id] ? ' ' + system_status[id] : '')\">\n                    <img *ngIf=\"system_name[id]\" [src]=\"system_icon[id]\">\n                    <a-spinner *ngIf=\"!system_name[id]\" circle-ring color=\"#fff\"></a-spinner>\n                </div>\n                <div class=\"text\">{{ system_name[id] || id + ' connecting...' }}</div>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"panel-outlet\" *ngIf=\"active_system\">\n        <app-booking-panel [system_id]=\"active_system\"></app-booking-panel>\n        <div class=\"overlay\">\n            <button widget class=\"action close\" (tapped)=\"close()\" (contextmenu)=\"$event.preventDefault()\">\n                <div class=\"icon\">\n                    <i class=\"material-icons\">close</i>\n                </div>\n            </button>\n            <button widget class=\"action countdown\" (contextmenu)=\"$event.preventDefault()\">{{ countdown }}</button>\n        </div>\n    </div>\n    <ng-template #none>\n        <div class=\"info-block\">\n            <div class=\"text\">No systems are set for displaying on the panel select list</div>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../shared/base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../services/app.service';\n\n@Component({\n    selector: 'app-booking-panel-select',\n    templateUrl: './panel-select.component.html',\n    styleUrls: ['./panel-select.component.scss']\n})\nexport class BookingPanelSelectComponent extends BaseComponent implements OnInit {\n    /** List of systems to show panels for */\n    public systems: string[];\n    /** Names for the list of systems */\n    public system_name: HashMap<string> = {};\n    /** Icons for the list of systems */\n    public system_icon: HashMap<string> = {};\n    /** Status for the list of systems */\n    public system_status: HashMap<string> = {};\n    /** Active Panel system */\n    public active_system: string;\n    /** Countdown counter */\n    public countdown: number;\n\n    constructor(private route: ActivatedRoute, private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('route.query', this.route.queryParamMap.subscribe((params) => {\n            if (params.has('system_ids')) {\n                this.systems = (params.get('system_ids') || '').split(',');\n            }\n        }));\n    }\n\n    /**\n     * Show booking panel for the given system ID\n     * @param id ID of the system to show\n     */\n    public showPanel(id: string) {\n        this.active_system = id;\n        this.reset();\n    }\n\n    /**\n     * Update the status value for the given system ID\n     * @param id ID of the system to update\n     * @param bookings List of current bookings for the system\n     */\n    public updateStatus(id: string, bookings: HashMap[]) {\n        const space = new Space(this.service.Spaces, { id, bookings });\n        this.system_status[id] = space.current ? 'available' : 'unavailable';\n    }\n\n    /**\n     * Close the modal\n     */\n    public close() {\n        this.active_system = null;\n        this.clearInterval('countdown');\n    }\n\n    /**\n     * User confirmation of the content of the modal\n     */\n    public reset() {\n        if (this.active_system) {\n            this.countdown = 30;\n            this.interval('countdown', () => this.tick(), 1000);\n        }\n    }\n\n    /**\n     * Decrement countdown and close if 0\n     */\n    public tick() {\n        if (this.countdown <= 0) {\n            this.close();\n        }\n        this.countdown--;\n    }\n}\n","<div class=\"booking-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"end large action\" *ngIf=\"status === 'endable'\" (tapped)=\"confirmEnd()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_busy</i>\n            </div>\n            <div class=\"text\">End</div>\n        </button>\n        <button widget class=\"start large action\" *ngIf=\"status === 'pending'\" (tapped)=\"startMeeting()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">event_available</i>\n            </div>\n            <div class=\"text\">Start</div>\n        </button>\n        <button widget class=\"book large action\" *ngIf=\"!no_booking\" (tapped)=\"book()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">add</i>\n            </div>\n            <div class=\"text\">Book</div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_booking\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"is_endable\" [(model)]=\"is_endable\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_start\" [(model)]=\"ask_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"ask_end\" [(model)]=\"ask_end\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { ApplicationService } from '../../../services/app.service';\nimport { timeToDate } from '../../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\n\nexport type SpaceStatus = 'pending' | 'available' | 'unavailable' | 'endable';\n\n@Component({\n    selector: 'panel-booking-actions',\n    templateUrl: './booking-actions.component.html',\n    styleUrls: ['./booking-actions.component.scss']\n})\nexport class PanelBookingActionsComponent extends BaseComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Whether booking is allowed */\n    public no_booking: boolean = false;\n    /** Whether the current booking is able to be ended */\n    public is_endable: number;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to ask user to start the meeting */\n    public ask_start: boolean;\n    /** Whether to ask user to end the meeting */\n    public ask_end: boolean;\n    /** Time of the last automatic confirmation of start or end */\n    public last_confirm: number = 0;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n\n    /** Current status of the active system */\n    public get status(): SpaceStatus{\n        let status: SpaceStatus = 'available';\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs().startOf('m').second(1);\n                    const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                    const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                    // Check if within business hours before looking at pending logic\n                    if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                        return status;\n                    }\n                    const date = dayjs(booking.date);\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        if (this.is_endable && this.space.current) {\n                            const end = date.add(booking.duration, 'm').startOf('m');\n                            const block_end = end.subtract(Math.max(this.is_endable, 300), 's');\n                            if (now.isAfter(block_end, 's') && now.isBefore(end, 'm')) {\n                                status = 'endable';\n                                if (this.ask_end && this.last_confirm < end.valueOf()) {\n                                    this.confirmEnd();\n                                    this.last_confirm = end.valueOf();\n                                }\n                            } else {\n                                status = 'unavailable';\n                            }\n                        } else {\n                            status = 'unavailable';\n                        }\n                    } else {\n                        const pending_start = date.startOf('m').subtract(this.pending_timeout, 's');\n                        const pending_end = date.startOf('m').add(this.cancel_timeout || this.pending_timeout, 's');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            status = 'pending';\n                            if (this.ask_start && this.last_confirm < date.valueOf()) {\n                                this.confirmStart();\n                                this.last_confirm = date.valueOf();\n                            }\n                        }\n                    }\n                }\n            }\n        return status;\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book() {\n        this.service.Bookings.new({\n            space: this.space,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n\n    /**\n     * Open confirmation modal for starting the meeting\n     */\n    public confirmStart() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Do you wish to start your meeting?',\n                body: `If you don't start your meeting it will be cancelled ${this.cancel_timeout / 60} minutes after the start time.`,\n                icon: { class: 'material-icons', value: 'play_arrow' }\n            }\n        }, _ => this.startMeeting());\n    }\n\n    /**\n     * Execute the logic on the engine driver to start the current or upcoming meeting\n     */\n    public startMeeting() {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.execute('start_meeting', [meeting.date]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'checked-in', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'checked-in-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmEnd() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Are you sure want to end your meeting?',\n                body: 'Ending your meeting early will free up this room for others to use',\n                icon: { class: 'material-icons', value: 'stop' }\n            }\n        }, _ => this.endMeeting());\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    public endMeeting(reason: string = 'user_input') {\n        if (this.space) {\n            const meeting = this.space.current || this.space.next;\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (meeting && module) {\n                const date = dayjs(meeting.date);\n                module.execute('cancel_meeting', [meeting.date, reason]).then(_ => {\n                    this.service.Analytics.event('Checkin', 'cancelled', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                }, (e) => {\n                    this.service.notifyError(`Error starting meeting. ${e}`);\n                    this.service.Analytics.event('Checkin', 'cancel-failed', `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`);\n                });\n            }\n        }\n    }\n\n}\n\n","<div class=\"custom-actions\">\n    <div class=\"actions\" *ngIf=\"space\">\n        <button widget class=\"action control\" *ngIf=\"can_control !== false && control_url\" (tapped)=\"openControl()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">dvr</i>\n            </div>\n        </button>\n        <button widget class=\"action service\" *ngIf=\"catering\" (tapped)=\"confirmWaiterCall()\" (contextmenu)=\"$event.preventDefault()\">\n            <div class=\"icon\">\n                <i class=\"material-icons\">room_service</i>\n            </div>\n        </button>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"control_url\" [(model)]=\"control_url\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"can_control\" [(model)]=\"can_control\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"has_catering\" [(model)]=\"catering\"></i>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Space } from '../../../services/data/spaces/space.class';\nimport { ApplicationService } from '../../../services/app.service';\n\n@Component({\n    selector: 'panel-custom-actions',\n    templateUrl: './custom-actions.component.html',\n    styleUrls: ['./custom-actions.component.scss']\n})\nexport class PanelCustomActionsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Control URL of the active space */\n    public control_url: string;\n    /** Whether the user is able to open the control URL */\n    public can_control: boolean;\n    /** Whether space has catering */\n    public catering: boolean;\n\n    constructor(private service: ApplicationService) {}\n\n    /**\n     * Open confirmation modal for ending the meeting\n     */\n    public confirmWaiterCall() {\n        this.service.Overlay.open('confirm', {\n            config: 'modal',\n            data: {\n                title: 'Call a waiter to your room?',\n                body: 'Call a waiter to your room to order catering',\n                icon: { class: 'material-icons', value: 'call' }\n            }\n        }, _ => this.callWaiter());\n    }\n\n    /**\n     * Execute call waiter logic on engine driver\n     */\n    public callWaiter() {\n        if (this.space) {\n            const module = this.service.Systems.get(this.space.id, 'Bookings');\n            if (module) {\n                module.execute('waiter_call', []).then(_ => {\n                    this.service.Analytics.event('Catering', 'waiter-call', (new Date).toISOString());\n                }, (e) => {\n                    this.service.Analytics.event('Catering', 'waiter-call-failed', (new Date).toISOString());\n                    this.service.notifyError(`Error calling waiter. ${e}`);\n                });\n            }\n        }\n    }\n\n    /**\n     * Open modal to show embeded control URL\n     */\n    public openControl() {\n        this.service.Analytics.event('Control', 'open-view', (new Date).toISOString());\n        this.service.Overlay.open('embeded-control', {\n            config: 'modal',\n            data: {\n                control_url: this.control_url\n            }\n        });\n    }\n}\n","<div class=\"booking-panel\" [class.disabled]=\"interactive === false\" [class.reverse]=\"reverse || flip_status\" [class.no-time]=\"!show_time\">\n    <div [class]=\"'status' + (status && !hide_all ? ' ' + status : '')\">\n        <div class=\"time-display\" *ngIf=\"show_time\">{{ display_time }}</div>\n    </div>\n    <div class=\"body\">\n        <div class=\"details-display\">\n            <div class=\"content\">\n                <div class=\"title\" (tapped)=\"showTitle()\" [class.show]=\"show_title\">{{ space_name }}</div>\n                <div [class]=\"'status-text' + (status && !hide_all ? ' ' + status : '')\" >\n                    {{ (!hide_all ? status_display : null) || 'Not Bookable' }}\n                </div>\n                <div class=\"details\" *ngIf=\"!hide_all && show_details\">\n                    <panel-space-details [space]=\"space\"></panel-space-details>\n                </div>\n            </div>\n            <div class=\"overlay\" *ngIf=\"!hide_all && show_details\">\n                <panel-booking-actions [space]=\"space\"></panel-booking-actions>\n                <panel-custom-actions [space]=\"space\"></panel-custom-actions>\n            </div>\n        </div>\n        <div class=\"timeline\" *ngIf=\"show_details\">\n            <panel-timeline [space]=\"space\"></panel-timeline>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"space_name\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"touch_enabled\" [(model)]=\"interactive\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"today\" (modelChange)=\"updateBookings($event)\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"timeout\" [(model)]=\"pending_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"cancel_timeout\" [(model)]=\"cancel_timeout\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"last_meeting_started\" [(model)]=\"last_started\" (modelChange)=\"updateStatus()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"flip_status\" [(model)]=\"flip_status\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"can_cancel\" [(model)]=\"can_cancel\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_start\" [(model)]=\"business_start\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"business_end\" [(model)]=\"business_end\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"status_override\" [(model)]=\"status_overrides\"></i>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApplicationService } from '../../services/app.service';\nimport { BaseComponent } from '../../shared/base.component';\nimport { Space } from '../../services/data/spaces/space.class';\nimport { HashMap } from '../../shared/utilities/types.utilities';\nimport { timeToDate } from '../../shared/utilities/general.utilities';\n\nimport * as dayjs from 'dayjs';\nimport { isConnected, status } from '@placeos/ts-client/dist/esm/realtime/functions';\nimport { connected } from 'process';\nimport { is_connected } from '@placeos/ts-client';\n\n@Component({\n    selector: 'app-booking-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\nexport class BookingPanelComponent extends BaseComponent implements OnInit {\n    /** ID of the active system */\n    @Input() public system_id: string;\n    /** Whether the status is on the right side */\n    @Input() public reverse: boolean;\n    /** Whether to show the time at the bottom of the status */\n    @Input() public show_time = true;\n    /** Name of the connected system */\n    public space_name: string;\n    /** Space with which to display bookings for */\n    public space: Space;\n    /** Number of seconds before a meeting can be started, being truthy enables start/stop and auto-cancellations */\n    public pending_timeout: number;\n    /** Number of seconds after the start of a meeting when it is auto-cancelled, overrides `timeout` value */\n    public cancel_timeout: number;\n    /** Timestamp of the last started meeting as ms since UTC epoch */\n    public last_started: number;\n    /** Whether to hide booking related details */\n    public hide_all: boolean;\n    /** Whether user interaction is enabled for the panel */\n    public interactive = true;\n    /** Whether status display is on the right side of the UI */\n    public flip_status: boolean;\n    /** Whether bookings can be cancelled if they timeout */\n    public can_cancel: boolean;\n    /** Time of the last cancelled meeting in ms since UTC epoch */\n    private last_cancel: number;\n    /** Start time of the business day with format `HH:mm` */\n    public business_start: string;\n    /** End time of the business day with format `HH:mm` */\n    public business_end: string;\n    /** Whether to show full room name when it overflows */\n    public show_title: boolean;\n    /** Override mapping for status values */\n    public status_overrides: HashMap<string>;\n    /** Status of websocket */\n    public websocket_connected: boolean;\n\n    /** Current status of the active system */\n    private _status: 'pending' | 'available' | 'unavailable';\n\n    /** Get the display value for the status */\n    public get status_display(): string {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return ' ';\n        }\n        if (this.status_overrides && Object.keys(this.status_overrides).length === 1) {\n            this._status = this.space.current ? 'unavailable' : Object.keys(this.status_overrides)[0] as any;\n        }\n        const status = (!this.hide_all ? this._status : null) || 'not-bookable';\n        return (this.status_overrides || [])[status] || this._status;\n    }\n\n    /** Current status of the active system */\n    public get status(): 'pending' | 'available' | 'unavailable' | 'not-bookable' {\n        if (!this.websocket_connected && !this._service.setting('show_status_when_disconnected')) {\n            return 'not-bookable';\n        }\n        // Perform any status overrides\n        this.updateStatus();\n        if (\n            this.status_overrides &&\n            Object.keys(this.status_overrides).length === 1 &&\n            (!this.space.current || this._status !== 'unavailable')\n        ) {\n            this._status = Object.keys(this.status_overrides)[0] as any;\n        }\n        return this._status;\n    }\n    /** Whether booking details should be shown */\n    public get show_details(): boolean {\n        return this.websocket_connected || !!this._service.setting('show_status_when_disconnected');\n    }\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A');\n    }\n\n    constructor(public _service: ApplicationService, public _route: ActivatedRoute) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                this.subscription(\n                    'route.params',\n                    this._route.paramMap.subscribe(params => {\n                        if (params.has('system_id')) {\n                            this.system_id = params.get('system_id');\n                            this._service.set('system', this.system_id);\n                        }\n                    })\n                );\n\n                this.timeout('websocket', () => {\n                    this.websocket_connected = true;\n                    // status().subscribe(status => this.websocket_connected = status);\n                });\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Update the bookings for the active space\n     * @param bookings Array of raw booking data\n     */\n    public updateBookings(bookings: HashMap[]): void {\n        this.space = new Space(this._service.Spaces, {\n            id: this.system_id,\n            name: this.space_name,\n            bookings\n        });\n    }\n\n    /**\n     * Update the current status of the active space\n     */\n    public updateStatus(): void {\n        if (this.hide_all) {\n            this._status = null;\n        } else {\n            if (this.space && (this.space.current || this.space.next)) {\n                const booking = this.space.current || this.space.next;\n                this._status = this.space.current ? 'unavailable' : 'available';\n                if (this.pending_timeout) {\n                    const now = dayjs();\n                    const date = dayjs(booking.date).startOf('m');\n                    if (this.last_started >= now.valueOf() || this.last_started >= date.valueOf()) {\n                        this._status = 'unavailable';\n                    } else {\n                        // Only meetings with durations less than 8 hours can be pending or cancelled\n                        const pending_start = date.subtract(this.pending_timeout, 's');\n                        const pending_end = date.add(this.cancel_timeout || this.pending_timeout, 's');\n                        const end = date.add(booking.duration, 'm');\n                        if (now.isAfter(pending_start, 's') && now.isBefore(pending_end, 's')) {\n                            this._status = 'pending';\n                        } else if (now.isAfter(pending_end, 's') && now.isBefore(end, 'm')) {\n                            this._status = 'pending';\n                            const business_start = dayjs(timeToDate(this.business_start || '08:00'));\n                            const business_end = dayjs(timeToDate(this.business_end || '17:30'));\n                            // Check if within business hours before cancelling the meeting\n                            if (now.isBefore(business_start, 'm') || now.isAfter(business_end, 'm')) {\n                                return;\n                            }\n                            this.endMeeting('timeout');\n                        }\n                    }\n                }\n            } else {\n                this._status = 'available';\n            }\n        }\n    }\n\n    /**\n     * Show full room name if overflowing\n     */\n    public showTitle() {\n        this.show_title = true;\n        this.timeout('hide_title', () => (this.show_title = false), 3000);\n    }\n\n    /**\n     * Execute end meeting logic on engine driver\n     * @param reason Reason for ending the meeting early\n     */\n    private endMeeting(reason: string = 'user_input') {\n        if (this.space && this.can_cancel !== false) {\n            const meeting = this.space.current || this.space.next;\n            const module = this._service.Systems.get(this.space.id, 'Bookings');\n            if (meeting.duration >= 8 * 60 && reason === 'timeout') {\n                reason = 'hide multi-day';\n            }\n            if (meeting && module && meeting.date !== this.last_cancel) {\n                const date = dayjs(meeting.date);\n                module.execute('cancel_meeting', [meeting.date, reason]).then(\n                    _ => {\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancelled',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                        this.last_cancel = meeting.date;\n                    },\n                    e => {\n                        this._service.notifyError(`Error cancelling meeting. ${e}`);\n                        this._service.Analytics.event(\n                            'Checkin',\n                            'cancel-failed',\n                            `${this.space.id} at ${date.format('DD MMM YYYY, h:mm A Z')} | ${reason}`\n                        );\n                    }\n                );\n            }\n        }\n    }\n}\n","<div class=\"space-booking-details\">\n    <div class=\"details current\" *ngIf=\"space && space.current\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Booked until {{ space.current?.end_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.current?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.current?.organiser?.name }}</div>\n    </div>\n    <div class=\"details next\" *ngIf=\"space && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">Next meeting at {{ space.next?.start_time }}</div>\n        <div class=\"title\" *ngIf=\"!hide_title && !hide_details\">{{ space.next?.title }}</div>\n        <div class=\"host\" *ngIf=\"!hide_user && !hide_details\">{{ space.next?.organiser?.name }}</div>\n    </div>\n    <div class=\"details other\" *ngIf=\"space && space.current && space.next\">\n        <div class=\"time\" *ngIf=\"!hide_availability\">\n            Free {{ space.current ? 'at ' + space.current.end_time : '' }} {{ space.next ? 'until ' + space.next.start_time : '' }}\n        </div>\n    </div>\n    <div class=\"information\" *ngIf=\"title || description\">\n        <div class=\"title\">{{ title }}</div>\n        <div class=\"block\">\n            <div class=\"icon\" *ngIf=\"icon\">\n                <img [src]=\"icon\">\n            </div>\n            <div class=\"text\">{{ description }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_details\" [(model)]=\"hide_details\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_title\" [(model)]=\"hide_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_availability\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_user\" [(model)]=\"hide_user\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"title\" [(model)]=\"title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"description\" [(model)]=\"description\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"icon\" [(model)]=\"icon\"></i>\n    </div>\n</div>\n","\nimport { Component, Input } from '@angular/core';\n\nimport { Space } from '../../../services/data/spaces/space.class';\n\n@Component({\n    selector: 'panel-space-details',\n    templateUrl: './space-details.component.html',\n    styleUrls: ['./space-details.component.scss']\n})\nexport class PanelSpaceDetailsComponent {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Secondary title for the space */\n    public title: string;\n    /** Description for the space */\n    public description: string;\n    /** Image that suppliments the description for the space */\n    public icon: { class?: string, value?: string, src?: string };\n\n    /** Whether to hide the booking timing details */\n    public hide_availability: boolean;\n    /** Whether to hide the current booking title */\n    public hide_title: boolean;\n    /** Whether to hide booking details(title and host) */\n    public hide_details: boolean;\n    /** Whether to hide booking host */\n    public hide_user: boolean;\n}\n\n","<div class=\"timeline\">\n    <div class=\"block-list\" *ngIf=\"time_blocks && time_blocks.length > 0\">\n        <div\n            class=\"block\"\n            *ngFor=\"let item of time_blocks\"\n            [class.show]=\"item.show || item.hour\"\n            [class.in-use]=\"item.in_use\"\n            (tapped)=\"!item.in_use && !no_bookings && !no_timeline_bookings ? book(item) : ''\"\n        >\n            <div class=\"hour\" *ngIf=\"item.hour\">{{ item.hour }}</div>\n            <div class=\"bar\" [class.hour]=\"item.hour\"></div>\n        </div>\n    </div>\n    <div class=\"overlay\">\n        <div class=\"expired\" [style.width]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\"></div>\n        <div class=\"current-block\" [style.left]=\"((options?.start_offset || 120) / (options?.duration || 720)) * 100 + '%'\">\n            <div class=\"bar\"></div>\n            <div class=\"triangle\"></div>\n            <div class=\"time-display\" *ngIf=\"display_time\">Time Now<br>{{ display_time }}</div>\n        </div>\n    </div>\n    <div class=\"bindings\" *ngIf=\"space\">\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_availability\" [(model)]=\"hide_status\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"hide_all\" [(model)]=\"hide_all\" (modelChange)=\"checkBookings()\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"booking_disabled\" [(model)]=\"no_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"no_timeline_bookings\" [(model)]=\"no_timeline_bookings\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"default_title\" [(model)]=\"default_title\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"min_duration\" [(model)]=\"min_duration\"></i>\n        <i binding [sys]=\"space.id\" mod=\"Bookings\" bind=\"max_duration\" [(model)]=\"max_duration\"></i>\n    </div>\n</div>\n","\nimport { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { BaseComponent } from '../../../shared/base.component';\nimport { Space } from '../../../services/data/spaces/space.class';\n\nimport * as dayjs from 'dayjs';\nimport { BookingData } from '../../../overlays/booking-modal/booking-modal.component';\nimport { HashMap } from '../../../shared/utilities/types.utilities';\nimport { ApplicationService } from '../../../services/app.service';\n\nexport interface IPanelTimelineOptions {\n    /** Length of time in minutes to display on the timeline after the current time */\n    duration: number;\n    /** Time offset in minutes which is displayed before the current time marker */\n    start_offset: number;\n    /** Size of shown blocks in minutes */\n    block_size: number;\n}\n\ninterface ITimelineBlock {\n    /** Block time as ms since UTC epoch */\n    value: number;\n    /** Whether to show block divider */\n    show: boolean;\n    /** Hour of the day represented by this time block */\n    hour: number;\n    /** Whether block is in use or not */\n    in_use: boolean;\n}\n\n@Component({\n    selector: 'panel-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class PanelTimelineComponent extends BaseComponent implements OnInit, OnChanges {\n    /** Space with which to display bookings for */\n    @Input() public space: Space;\n    /** Display options for the timeline */\n    @Input() public options: IPanelTimelineOptions;\n    /** Emitter for user events on the timeline */\n    @Output() public event = new EventEmitter();\n\n    /** List of display time block  */\n    public time_blocks: ITimelineBlock[] = [];\n    /** Whether to hide unavailable blocks on the UI */\n    public hide_status: boolean;\n    /** Whether to hide all booking data */\n    public hide_all: boolean;\n    /** Whether user is not allowed to make bookings */\n    public no_booking: boolean;\n    /** Whether user is not allowed to make bookings using the timeline */\n    public no_timeline_bookings: boolean;\n    /** Default title for bookings */\n    public default_title: string;\n    /** Maximum allowed booking duation */\n    public max_duration: number;\n    /** Minimum allowed booking duation */\n    public min_duration: number;\n\n    /** Display string for the current time */\n    public get display_time(): string {\n        return dayjs().format('h:mm A')\n    }\n\n    constructor(private service: ApplicationService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.generateTimelineBlocks();\n        this.interval('update_blocks', () => this.generateTimelineBlocks(), 60 * 1000);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.generateTimelineBlocks();\n    }\n\n    /**\n     * Generate time blocks to display\n     */\n    private generateTimelineBlocks(): void {\n        let now = dayjs().startOf('m');\n        now = now.minute(Math.round(now.minute() / 5) * 5);\n        const start = now.subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n        const end = start.add((this.options ? this.options.duration : null) || 720, 'm');\n        let date = dayjs(start);\n        delete this.time_blocks;\n        this.time_blocks = [];\n        while (date.isBefore(end, 'm')) {\n            this.time_blocks.push({\n                value: date.valueOf(),\n                show: (date.minute() % ((this.options ? this.options.block_size : null) || 30)) === 0,\n                hour: date.minute() === 0 ? (date.hour() % 12 === 0 ? 12 : date.hour() % 12) : null,\n                in_use: false\n            });\n            date = date.add(5, 'm');\n        }\n        this.checkBookings();\n    }\n\n    /**\n     * Update the statuses of time blocks based off space bookings\n     */\n    public checkBookings(): void {\n        if (this.space && this.space.todays_bookings) {\n            const block_start = dayjs().subtract((this.options ? this.options.start_offset : null) || 120, 'm');\n            const block_end = dayjs().add((this.options ? this.options.duration : null) || 720, 'm');\n            // Filter bookings for the shown times\n            const bookings = this.space.bookings.filter(i => {\n                const start = dayjs(i.date);\n                const end = start.add(i.duration, 'm');\n                return end.isAfter(block_start, 'm') && start.isBefore(block_end, 'm');\n            });\n            this.time_blocks.forEach(i => i.in_use = false);\n            if (!this.hide_status && !this.hide_all) {\n                for (const booking of bookings) {\n                    const start = dayjs(booking.date);\n                    const end = start.add(booking.duration, 'm');\n                    for (const block of this.time_blocks) {\n                        const block_time = dayjs(block.value);\n                        if (block_time.isSame(start, 'm') || (block_time.isAfter(start, 'm') && block_time.isBefore(end, 'm'))) {\n                            block.in_use = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Open modal to make a new booking\n     */\n    public book(block: ITimelineBlock) {\n        this.service.Bookings.new({\n            space: this.space,\n            date: block.value,\n            title: this.default_title,\n            max_duration: this.max_duration,\n            min_duration: this.min_duration\n        });\n    }\n}\n\n","\n<div class=\"shell\">\n    <div class=\"view\">\n        <router-outlet></router-outlet>\n    </div>\n    <div class=\"bindings\" *ngIf=\"system_id\">\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"room_name\" [(model)]=\"system_name\" (modelChange)=\"checkLoading()\"></i>\n        <i binding [sys]=\"system_id\" mod=\"Bookings\" bind=\"reload\" (modelChange)=\"reloadAt($event)\"></i>\n    </div>\n    <div class=\"loading-block\" *ngIf=\"system_id && !system_name\">\n        <div class=\"info-block\">\n            <div class=\"title\">Connecting to system({{system_id}})...</div>\n            <div class=\"text\">Attempting to connect to engine server...</div>\n            <div class=\"text message\">{{info_messages[message_index]}}</div>\n            <div class=\"icon\">\n                <a-spinner ring-rotate color=\"#000\"></a-spinner>\n            </div>\n        </div>\n    </div>\n    <div class=\"version\" *ngIf=\"show_version\" [class.loading]=\"system_id && !system_name\">\n        Version: {{ version }}<br>\n        Built: {{ build }}\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { BaseComponent } from '../shared/base.component';\nimport { ApplicationService } from '../services/app.service';\nimport { version, build } from '../shared/globals/application';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'app-shell-wrapper',\n    templateUrl: './shell.component.html',\n    styleUrls: ['./shell.component.scss']\n})\nexport class ShellWrapperComponent extends BaseComponent implements OnInit {\n    /** Whether application has system */\n    public has_system: boolean;\n    /** ID of the active system */\n    public system_id: string;\n    /** Name of the active system */\n    public system_name: string;\n    /** Name of the active page */\n    public page: string;\n    /** List of informational messages to display while connecting to the active system */\n    public info_messages: string[] = [\n        'If this message persists, check you network connection and then try reloading this page.',\n        'It seems to be taking a while. Make sure the selected system is valid.',\n        'Still nothing, huh. Are you authenticated? Do you have have a network connection?',\n        'Try reloading the page. If this persists contact your administrator.'\n    ];\n    /** Index of the info message being displayed */\n    public message_index: number = 0;\n\n    /** Current version of the application */\n    public get version(): string {\n        return version;\n    }\n\n    /** Current version of the application */\n    public get build(): string {\n        const now = dayjs();\n        const built = build.format('DD/MM/YY HH:mm');\n        return built;\n    }\n\n    public get show_version(): boolean {\n        return this._service.setting('app.show_version');\n    }\n\n    constructor(private _service: ApplicationService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('app_ready', this._service.initialised.subscribe((is_ready) => {\n            if (is_ready) {\n                // Listen for system changes\n                this.subscription('system', this._service.listen('system', (value) => this.system_id = value));\n                // Listen for routing events\n                this.page = this._router.url?.split('/')[1] || '';\n\n                this.subscription(\n                    'router.change',\n                    this._router.events.subscribe(event => {\n                        if (event instanceof NavigationEnd) {\n                            this.page = this._router.url.split('/')[1] || '';\n                        }\n                    })\n                );\n                this.unsub('app_ready');\n            }\n        }));\n    }\n\n    /**\n     * Check if the system data has loaded\n     * @param delay Delay before first loading message update\n     */\n    public checkLoading(delay: number = 3000) {\n        console.log('Check Loading:', this.system_name);\n        if (!this.system_name) {\n            this.message_index = 0;\n            this.timeout('update_msg', () => this.updateMessage(), delay);\n        }\n    }\n\n    /**\n     * Update the index of the info message displayed\n     */\n    private updateMessage(): void {\n        if (!this.system_id) { return; }\n        this.message_index++;\n        if (this.message_index === this.info_messages.length) {\n            this.message_index--;\n            return;\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n\n    /**\n     * Schedule a reload the UI for a future time\n     * @param time Time to reload the UI\n     */\n    public reloadAt(time: number): void {\n        if (time && typeof time === 'number') {\n            this.clearTimeout('reload_ui');\n            const now = dayjs().startOf('s');\n            const reload_at_time = dayjs((time || 0) * 1000).startOf('s');\n            const diff = reload_at_time.diff(now, 'ms');\n            if (diff > 100) {\n                this.timeout('reload_ui', () => location.reload(true), diff);\n            }\n        }\n        this.timeout('update_msg', () => this.updateMessage(), 3000);\n    }\n}\n","export const environment = {\n  production: true\n};\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"8e0ced4\",\n    \"hash\": \"8e0ced4\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"8e0ced4\",\n    \"semverString\": null,\n    \"version\": \"0.0.0\",\n    \"core_version\": \"1.0.0\",\n    \"time\": 1599530023393\n};\n/* tslint:enable */\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}